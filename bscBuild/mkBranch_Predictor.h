/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Fri Mar 25 15:59:20 CET 2022
 * 
 */

/* Generation options: */
#ifndef __mkBranch_Predictor_h__
#define __mkBranch_Predictor_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkBranch_Predictor module */
class MOD_mkBranch_Predictor : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_BRAM<tUInt32,tUWide,tUInt8> INST_btb_bramcore2;
  MOD_RegFile<tUInt32,tUInt8> INST_rf_btb_fsms;
  MOD_Reg<tUInt32> INST_rg_index;
  MOD_Reg<tUInt64> INST_rg_pc;
  MOD_Reg<tUWide> INST_rg_ras;
  MOD_Reg<tUInt8> INST_rg_resetting;
 
 /* Constructor */
 public:
  MOD_mkBranch_Predictor(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUInt8 PORT_EN_bp_train;
  tUWide PORT_bp_train_cf_info;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_bp_train;
  tUInt8 DEF_rg_resetting__h2213;
 
 /* Local definitions */
 private:
  tUWide DEF_rg_ras__h3625;
  tUWide DEF_btb_bramcore2_a_read____d106;
  tUWide DEF_rg_ras_01_BITS_1039_TO_65___d227;
  tUWide DEF_rg_ras_01_BITS_974_TO_0___d228;
  tUWide DEF_rg_ras_01_BITS_1039_TO_975___d258;
  tUWide DEF_rg_ras_01_BITS_974_TO_910___d259;
  tUWide DEF_rg_ras_01_BITS_909_TO_845___d261;
  tUWide DEF_rg_ras_01_BITS_844_TO_780___d264;
  tUWide DEF_rg_ras_01_BITS_779_TO_715___d266;
  tUWide DEF_rg_ras_01_BITS_714_TO_650___d269;
  tUWide DEF_rg_ras_01_BITS_649_TO_585___d271;
  tUWide DEF_rg_ras_01_BITS_584_TO_520___d274;
  tUWide DEF_rg_ras_01_BITS_519_TO_455___d276;
  tUWide DEF_rg_ras_01_BITS_454_TO_390___d279;
  tUWide DEF_rg_ras_01_BITS_389_TO_325___d281;
  tUWide DEF_rg_ras_01_BITS_324_TO_260___d284;
  tUWide DEF_rg_ras_01_BITS_259_TO_195___d286;
  tUWide DEF_rg_ras_01_BITS_194_TO_130___d289;
  tUWide DEF_rg_ras_01_BITS_129_TO_65___d291;
  tUInt64 DEF_x__h3678;
  tUInt8 DEF_rg_ras_BIT_64___h3630;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_bp_train_in_ETC___d294;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d229;
  tUWide DEF__0_OR_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_tr_ETC___d293;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d292;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d290;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d287;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d285;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d282;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d280;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d277;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d275;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d272;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d270;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d267;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d265;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d260;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_trai_ETC___d262;
  tUInt64 DEF_pred_pc___1__h3665;
  tUWide DEF_IF_IF_bp_train_is_i32_not_i16_THEN_bp_train_in_ETC___d310;
  tUWide DEF__0_OR_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_tr_ETC___d288;
  tUWide DEF__0_OR_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_tr_ETC___d283;
  tUWide DEF__0_OR_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_tr_ETC___d278;
  tUWide DEF__0_OR_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_tr_ETC___d273;
  tUWide DEF__0_OR_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_tr_ETC___d268;
  tUWide DEF__0_OR_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_tr_ETC___d263;
  tUWide DEF__0_OR_IF_bp_train_is_i32_not_i16_THEN_NOT_bp_tr_ETC___d257;
  tUWide DEF__1_CONCAT_bp_train_cf_info_BITS_192_TO_139_35_C_ETC___d349;
 
 /* Rules */
 public:
  void RL_rl_reset();
 
 /* Methods */
 public:
  void METH_reset();
  tUInt8 METH_RDY_reset();
  void METH_predict_req(tUInt64 ARG_predict_req_pc);
  tUInt8 METH_RDY_predict_req();
  tUInt64 METH_predict_rsp(tUInt8 ARG_predict_rsp_is_i32_not_i16, tUInt32 ARG_predict_rsp_instr);
  tUInt8 METH_RDY_predict_rsp();
  void METH_bp_train(tUInt64 ARG_bp_train_pc,
		     tUInt8 ARG_bp_train_is_i32_not_i16,
		     tUInt32 ARG_bp_train_instr,
		     tUWide ARG_bp_train_cf_info);
  tUInt8 METH_RDY_bp_train();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBranch_Predictor &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkBranch_Predictor &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkBranch_Predictor &backing);
};

#endif /* ifndef __mkBranch_Predictor_h__ */
