/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Tue Mar  8 15:41:57 GMT 2022
 * 
 */

/* Generation options: */
#ifndef __mkDM_Abstract_Commands_h__
#define __mkDM_Abstract_Commands_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkDM_Abstract_Commands module */
class MOD_mkDM_Abstract_Commands : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Fifo<tUWide> INST_f_hart0_csr_reqs;
  MOD_Fifo<tUWide> INST_f_hart0_csr_rsps;
  MOD_Fifo<tUWide> INST_f_hart0_fpr_reqs;
  MOD_Fifo<tUWide> INST_f_hart0_fpr_rsps;
  MOD_Fifo<tUWide> INST_f_hart0_gpr_reqs;
  MOD_Fifo<tUWide> INST_f_hart0_gpr_rsps;
  MOD_ConfigReg<tUInt8> INST_rg_abstractcs_busy;
  MOD_ConfigReg<tUInt8> INST_rg_abstractcs_cmderr;
  MOD_ConfigReg<tUInt32> INST_rg_command_access_reg_regno;
  MOD_ConfigReg<tUInt8> INST_rg_command_access_reg_write;
  MOD_Reg<tUInt32> INST_rg_data0;
  MOD_Reg<tUInt32> INST_rg_data1;
  MOD_ConfigReg<tUInt8> INST_rg_start_reg_access;
 
 /* Constructor */
 public:
  MOD_mkDM_Abstract_Commands(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_hart0_gpr_mem_client_response_put;
  tUWide PORT_hart0_fpr_mem_client_response_put;
  tUWide PORT_hart0_csr_mem_client_response_put;
  tUWide PORT_hart0_gpr_mem_client_request_get;
  tUWide PORT_hart0_fpr_mem_client_request_get;
  tUWide PORT_hart0_csr_mem_client_request_get;
 
 /* Publicly accessible definitions */
 public:
  tUInt32 DEF_x__h2735;
  tUInt8 DEF_rg_abstractcs_busy_read____d2;
  tUInt8 DEF_rg_command_access_reg_write_read____d5;
 
 /* Local definitions */
 private:
  tUInt8 DEF_rg_abstractcs_cmderr_read____d91;
  tUInt32 DEF_v__h4348;
  tUInt32 DEF_v__h3793;
  tUInt32 DEF_v__h3658;
  tUInt32 DEF_v__h3470;
  tUInt32 DEF_v__h3295;
  tUInt32 DEF_v__h3152;
  tUInt32 DEF_v__h2913;
  tUWide DEF_f_hart0_csr_rsps_first____d20;
  tUWide DEF_f_hart0_fpr_rsps_first____d69;
  tUWide DEF_f_hart0_gpr_rsps_first____d46;
  tUInt32 DEF__read__h672;
  tUInt32 DEF__read__h648;
  tUInt32 DEF_csr_addr__h770;
  tUInt8 DEF_gpr_addr__h771;
  tUInt32 DEF_x__h1325;
  tUInt8 DEF_fpr_addr__h772;
  tUInt32 DEF_x__h1764;
  tUInt8 DEF_IF_f_hart0_fpr_rsps_first__9_BIT_64_0_THEN_0_E_ETC___d71;
  tUInt8 DEF_IF_f_hart0_csr_rsps_first__0_BIT_64_1_THEN_0_E_ETC___d22;
  tUInt8 DEF_IF_f_hart0_gpr_rsps_first__6_BIT_64_7_THEN_0_E_ETC___d48;
  tUWide DEF__1_CONCAT_rg_command_access_reg_regno_read_BITS_ETC___d15;
  tUInt64 DEF_req_data__h850;
  tUWide DEF__0_CONCAT_rg_command_access_reg_regno_read_BITS_ETC___d27;
  tUWide DEF__1_CONCAT_rg_command_access_reg_regno_read_MINU_ETC___d42;
  tUWide DEF__1_CONCAT_rg_command_access_reg_regno_read_MINU_ETC___d65;
  tUWide DEF__0_CONCAT_rg_command_access_reg_regno_read_MINU_ETC___d51;
  tUWide DEF__0_CONCAT_rg_command_access_reg_regno_read_MINU_ETC___d74;
  tUWide DEF_hart0_csr_mem_client_request_get__avValue3;
  tUWide DEF_hart0_fpr_mem_client_request_get__avValue2;
  tUWide DEF_hart0_gpr_mem_client_request_get__avValue1;
 
 /* Rules */
 public:
  void RL_rl_csr_write_start();
  void RL_rl_csr_write_finish();
  void RL_rl_csr_read_start();
  void RL_rl_csr_read_finish();
  void RL_rl_gpr_write_start();
  void RL_rl_gpr_write_finish();
  void RL_rl_gpr_read_start();
  void RL_rl_gpr_read_finish();
  void RL_rl_fpr_write_start();
  void RL_rl_fpr_write_finish();
  void RL_rl_fpr_read_start();
  void RL_rl_fpr_read_finish();
  void RL_rl_unknown_write_start();
  void RL_rl_unknown_read_start();
 
 /* Methods */
 public:
  void METH_reset();
  tUInt8 METH_RDY_reset();
  tUInt32 METH_av_read(tUInt8 ARG_av_read_dm_addr);
  tUInt8 METH_RDY_av_read();
  void METH_write(tUInt8 ARG_write_dm_addr, tUInt32 ARG_write_dm_word);
  tUInt8 METH_RDY_write();
  tUWide METH_hart0_gpr_mem_client_request_get();
  tUInt8 METH_RDY_hart0_gpr_mem_client_request_get();
  void METH_hart0_gpr_mem_client_response_put(tUWide ARG_hart0_gpr_mem_client_response_put);
  tUInt8 METH_RDY_hart0_gpr_mem_client_response_put();
  tUWide METH_hart0_fpr_mem_client_request_get();
  tUInt8 METH_RDY_hart0_fpr_mem_client_request_get();
  void METH_hart0_fpr_mem_client_response_put(tUWide ARG_hart0_fpr_mem_client_response_put);
  tUInt8 METH_RDY_hart0_fpr_mem_client_response_put();
  tUWide METH_hart0_csr_mem_client_request_get();
  tUInt8 METH_RDY_hart0_csr_mem_client_request_get();
  void METH_hart0_csr_mem_client_response_put(tUWide ARG_hart0_csr_mem_client_response_put);
  tUInt8 METH_RDY_hart0_csr_mem_client_response_put();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkDM_Abstract_Commands &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkDM_Abstract_Commands &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkDM_Abstract_Commands &backing);
};

#endif /* ifndef __mkDM_Abstract_Commands_h__ */
