/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Tue Mar  8 15:41:57 GMT 2022
 * 
 */

/* Generation options: */
#ifndef __mkDM_Run_Control_h__
#define __mkDM_Run_Control_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkDM_Run_Control module */
class MOD_mkDM_Run_Control : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Fifo<tUInt8> INST_f_hart0_other_reqs;
  MOD_Fifo<tUInt8> INST_f_hart0_reset_reqs;
  MOD_Fifo<tUInt8> INST_f_hart0_reset_rsps;
  MOD_Fifo<tUInt8> INST_f_hart0_run_halt_reqs;
  MOD_Fifo<tUInt8> INST_f_hart0_run_halt_rsps;
  MOD_Fifo<tUInt8> INST_f_ndm_reset_reqs;
  MOD_Fifo<tUInt8> INST_f_ndm_reset_rsps;
  MOD_ConfigReg<tUInt8> INST_rg_dmcontrol_dmactive;
  MOD_Reg<tUInt8> INST_rg_dmcontrol_haltreq;
  MOD_Reg<tUInt8> INST_rg_dmcontrol_hartreset;
  MOD_Reg<tUInt8> INST_rg_dmcontrol_ndmreset;
  MOD_Reg<tUInt8> INST_rg_dmstatus_allresumeack;
  MOD_Reg<tUInt8> INST_rg_dmstatus_allunavail;
  MOD_Reg<tUInt8> INST_rg_hart0_hasreset;
  MOD_Reg<tUInt8> INST_rg_hart0_running;
  MOD_Reg<tUInt8> INST_rg_verbosity;
 
 /* Constructor */
 public:
  MOD_mkDM_Run_Control(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_rg_dmstatus_allunavail__h1783;
 
 /* Local definitions */
 private:
  tUInt8 DEF_rg_hart0_running__h1785;
  tUInt8 DEF_rg_dmcontrol_ndmreset__h1767;
  tUInt32 DEF_v__h3200;
  tUInt32 DEF_v__h3151;
  tUInt32 DEF_v__h3016;
  tUInt32 DEF_v__h2905;
  tUInt32 DEF_v__h2803;
  tUInt32 DEF_v__h2228;
  tUInt32 DEF_v__h2180;
  tUInt8 DEF_rg_dmcontrol_dmactive_read____d10;
  tUInt8 DEF_NOT_rg_hart0_running_0___d21;
 
 /* Rules */
 public:
  void RL_rl_hart0_reset_rsp();
  void RL_rl_ndm_reset_rsp();
  void RL_rl_hart0_run_rsp();
 
 /* Methods */
 public:
  tUInt8 METH_dmactive();
  tUInt8 METH_RDY_dmactive();
  void METH_reset();
  tUInt8 METH_RDY_reset();
  tUInt32 METH_av_read(tUInt8 ARG_av_read_dm_addr);
  tUInt8 METH_RDY_av_read();
  void METH_write(tUInt8 ARG_write_dm_addr, tUInt32 ARG_write_dm_word);
  tUInt8 METH_RDY_write();
  tUInt8 METH_hart0_reset_client_request_get();
  tUInt8 METH_RDY_hart0_reset_client_request_get();
  void METH_hart0_reset_client_response_put(tUInt8 ARG_hart0_reset_client_response_put);
  tUInt8 METH_RDY_hart0_reset_client_response_put();
  tUInt8 METH_hart0_client_run_halt_request_get();
  tUInt8 METH_RDY_hart0_client_run_halt_request_get();
  void METH_hart0_client_run_halt_response_put(tUInt8 ARG_hart0_client_run_halt_response_put);
  tUInt8 METH_RDY_hart0_client_run_halt_response_put();
  tUInt8 METH_hart0_get_other_req_get();
  tUInt8 METH_RDY_hart0_get_other_req_get();
  tUInt8 METH_ndm_reset_client_request_get();
  tUInt8 METH_RDY_ndm_reset_client_request_get();
  void METH_ndm_reset_client_response_put(tUInt8 ARG_ndm_reset_client_response_put);
  tUInt8 METH_RDY_ndm_reset_client_response_put();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkDM_Run_Control &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkDM_Run_Control &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkDM_Run_Control &backing);
};

#endif /* ifndef __mkDM_Run_Control_h__ */
