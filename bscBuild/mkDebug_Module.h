/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Fri Mar 25 15:59:20 CET 2022
 * 
 */

/* Generation options: */
#ifndef __mkDebug_Module_h__
#define __mkDebug_Module_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkDM_Abstract_Commands.h"
#include "mkDM_Run_Control.h"
#include "mkDM_System_Bus.h"


/* Class declaration for the mkDebug_Module module */
class MOD_mkDebug_Module : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_mkDM_Abstract_Commands INST_dm_abstract_commands;
  MOD_mkDM_Run_Control INST_dm_run_control;
  MOD_mkDM_System_Bus INST_dm_system_bus;
  MOD_Fifo<tUInt8> INST_f_read_addr;
 
 /* Constructor */
 public:
  MOD_mkDebug_Module(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_hart0_gpr_mem_client_response_put;
  tUWide PORT_hart0_fpr_mem_client_response_put;
  tUWide PORT_hart0_csr_mem_client_response_put;
  tUWide PORT_master_r_put_val;
  tUWide PORT_hart0_gpr_mem_client_request_get;
  tUWide PORT_hart0_fpr_mem_client_request_get;
  tUWide PORT_hart0_csr_mem_client_request_get;
  tUWide PORT_master_aw_peek;
  tUWide PORT_master_w_peek;
  tUWide PORT_master_ar_peek;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_dm_run_control_dmactive____d1;
  tUInt8 DEF_dm_addr__h701;
  tUInt8 DEF_f_read_addr_first_EQ_0x16_9_OR_f_read_addr_fir_ETC___d77;
  tUInt8 DEF_f_read_addr_first_EQ_0x60___d26;
  tUInt8 DEF_f_read_addr_first_EQ_0x5F___d24;
  tUInt8 DEF_f_read_addr_first_EQ_0x40___d22;
  tUInt8 DEF_f_read_addr_first_EQ_0x3F___d121;
  tUInt8 DEF_f_read_addr_first_EQ_0x3E___d119;
  tUInt8 DEF_f_read_addr_first_EQ_0x3D___d117;
  tUInt8 DEF_f_read_addr_first_EQ_0x3C___d115;
  tUInt8 DEF_f_read_addr_first_EQ_0x3B___d113;
  tUInt8 DEF_f_read_addr_first_EQ_0x3A___d111;
  tUInt8 DEF_f_read_addr_first_EQ_0x39___d109;
  tUInt8 DEF_f_read_addr_first_EQ_0x38___d108;
  tUInt8 DEF_f_read_addr_first_EQ_0x30___d20;
  tUInt8 DEF_f_read_addr_first_EQ_0x20___d76;
  tUInt8 DEF_f_read_addr_first_EQ_0x19___d18;
  tUInt8 DEF_f_read_addr_first_EQ_0x18___d74;
  tUInt8 DEF_f_read_addr_first_EQ_0x17___d50;
  tUInt8 DEF_f_read_addr_first_EQ_0x16___d49;
  tUInt8 DEF_f_read_addr_first_EQ_0x15___d16;
  tUInt8 DEF_f_read_addr_first_EQ_0x14___d14;
  tUInt8 DEF_f_read_addr_first_EQ_0x13___d12;
  tUInt8 DEF_f_read_addr_first_EQ_0x12___d10;
  tUInt8 DEF_f_read_addr_first_EQ_0x11___d8;
  tUInt8 DEF_f_read_addr_first_EQ_0x10___d7;
  tUInt8 DEF_f_read_addr_first_EQ_0xF___d72;
  tUInt8 DEF_f_read_addr_first_EQ_0xD___d70;
  tUInt8 DEF_f_read_addr_first_EQ_0xC___d68;
  tUInt8 DEF_f_read_addr_first_EQ_0xB___d66;
  tUInt8 DEF_f_read_addr_first_EQ_0xA___d64;
  tUInt8 DEF_f_read_addr_first_EQ_0x9___d62;
  tUInt8 DEF_f_read_addr_first_EQ_0x8___d60;
  tUInt8 DEF_f_read_addr_first_EQ_0x7___d58;
  tUInt8 DEF_f_read_addr_first_EQ_0x6___d56;
  tUInt8 DEF_f_read_addr_first_EQ_0x5___d54;
  tUInt8 DEF_f_read_addr_first_EQ_0x4___d52;
  tUInt8 DEF_f_read_addr_first_EQ_0x10_OR_f_read_addr_first_ETC___d27;
 
 /* Local definitions */
 private:
  tUInt32 DEF_v__h502;
 
 /* Rules */
 public:
  void RL_rl_reset();
 
 /* Methods */
 public:
  void METH_dmi_read_addr(tUInt8 ARG_dmi_read_addr_dm_addr);
  tUInt8 METH_RDY_dmi_read_addr();
  tUInt32 METH_dmi_read_data();
  tUInt8 METH_RDY_dmi_read_data();
  void METH_dmi_write(tUInt8 ARG_dmi_write_dm_addr, tUInt32 ARG_dmi_write_dm_word);
  tUInt8 METH_RDY_dmi_write();
  tUInt8 METH_hart0_reset_client_request_get();
  tUInt8 METH_RDY_hart0_reset_client_request_get();
  void METH_hart0_reset_client_response_put(tUInt8 ARG_hart0_reset_client_response_put);
  tUInt8 METH_RDY_hart0_reset_client_response_put();
  tUInt8 METH_hart0_client_run_halt_request_get();
  tUInt8 METH_RDY_hart0_client_run_halt_request_get();
  void METH_hart0_client_run_halt_response_put(tUInt8 ARG_hart0_client_run_halt_response_put);
  tUInt8 METH_RDY_hart0_client_run_halt_response_put();
  tUInt8 METH_hart0_get_other_req_get();
  tUInt8 METH_RDY_hart0_get_other_req_get();
  tUWide METH_hart0_gpr_mem_client_request_get();
  tUInt8 METH_RDY_hart0_gpr_mem_client_request_get();
  void METH_hart0_gpr_mem_client_response_put(tUWide ARG_hart0_gpr_mem_client_response_put);
  tUInt8 METH_RDY_hart0_gpr_mem_client_response_put();
  tUWide METH_hart0_fpr_mem_client_request_get();
  tUInt8 METH_RDY_hart0_fpr_mem_client_request_get();
  void METH_hart0_fpr_mem_client_response_put(tUWide ARG_hart0_fpr_mem_client_response_put);
  tUInt8 METH_RDY_hart0_fpr_mem_client_response_put();
  tUWide METH_hart0_csr_mem_client_request_get();
  tUInt8 METH_RDY_hart0_csr_mem_client_request_get();
  void METH_hart0_csr_mem_client_response_put(tUWide ARG_hart0_csr_mem_client_response_put);
  tUInt8 METH_RDY_hart0_csr_mem_client_response_put();
  tUInt8 METH_ndm_reset_client_request_get();
  tUInt8 METH_RDY_ndm_reset_client_request_get();
  void METH_ndm_reset_client_response_put(tUInt8 ARG_ndm_reset_client_response_put);
  tUInt8 METH_RDY_ndm_reset_client_response_put();
  tUInt8 METH_master_aw_canPeek();
  tUInt8 METH_RDY_master_aw_canPeek();
  tUWide METH_master_aw_peek();
  tUInt8 METH_RDY_master_aw_peek();
  void METH_master_aw_drop();
  tUInt8 METH_RDY_master_aw_drop();
  tUInt8 METH_master_w_canPeek();
  tUInt8 METH_RDY_master_w_canPeek();
  tUWide METH_master_w_peek();
  tUInt8 METH_RDY_master_w_peek();
  void METH_master_w_drop();
  tUInt8 METH_RDY_master_w_drop();
  tUInt8 METH_master_b_canPut();
  tUInt8 METH_RDY_master_b_canPut();
  void METH_master_b_put(tUInt8 ARG_master_b_put_val);
  tUInt8 METH_RDY_master_b_put();
  tUInt8 METH_master_ar_canPeek();
  tUInt8 METH_RDY_master_ar_canPeek();
  tUWide METH_master_ar_peek();
  tUInt8 METH_RDY_master_ar_peek();
  void METH_master_ar_drop();
  tUInt8 METH_RDY_master_ar_drop();
  tUInt8 METH_master_r_canPut();
  tUInt8 METH_RDY_master_r_canPut();
  void METH_master_r_put(tUWide ARG_master_r_put_val);
  tUInt8 METH_RDY_master_r_put();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkDebug_Module &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkDebug_Module &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkDebug_Module &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkDebug_Module &backing);
};

#endif /* ifndef __mkDebug_Module_h__ */
