/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Fri Mar 25 15:59:20 CET 2022
 * 
 */

/* Generation options: */
#ifndef __mkMMU_ICache_h__
#define __mkMMU_ICache_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkSoC_Map.h"
#include "mkTLB.h"


/* Class declaration for the mkMMU_ICache module */
class MOD_mkMMU_ICache : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_cache_aw_events_register;
  MOD_Wire<tUInt32> INST_cache_aw_events_wires_ifc_ifc_wires;
  MOD_Wire<tUInt32> INST_cache_aw_events_wires_ifc_ifc_wires_1;
  MOD_Wire<tUInt32> INST_cache_aw_events_wires_ifc_ifc_wires_2;
  MOD_Wire<tUInt32> INST_cache_aw_events_wires_ifc_ifc_wires_3;
  MOD_Wire<tUInt32> INST_cache_aw_events_wires_ifc_ifc_wires_4;
  MOD_Wire<tUInt32> INST_cache_aw_events_wires_ifc_ifc_wires_5;
  MOD_Wire<tUInt32> INST_cache_aw_events_wires_ifc_ifc_wires_6;
  MOD_Wire<tUInt32> INST_cache_aw_events_wires_ifc_ifc_wires_7;
  MOD_ConfigReg<tUInt8> INST_cache_cfg_verbosity;
  MOD_CReg<tUInt8> INST_cache_ctr_wr_rsps_pending_crg;
  MOD_Wire<tUInt8> INST_cache_dw_commit;
  MOD_Wire<tUInt8> INST_cache_dw_exc;
  MOD_Wire<tUInt8> INST_cache_dw_exc_code;
  MOD_Wire<tUWide> INST_cache_dw_output_ld_val;
  MOD_Wire<tUWide> INST_cache_dw_output_st_amo_val;
  MOD_Wire<tUInt8> INST_cache_dw_valid;
  MOD_Fifo<tUWide> INST_cache_f_fabric_second_write_reqs;
  MOD_Fifo<tUWide> INST_cache_f_fabric_write_reqs;
  MOD_Fifo<tUWide> INST_cache_f_pte_writebacks;
  MOD_Fifo<tUInt8> INST_cache_f_reset_reqs;
  MOD_Fifo<tUInt8> INST_cache_f_reset_rsps;
  MOD_Fifo<tUWide> INST_cache_masterPortShim_arff;
  MOD_Fifo<tUWide> INST_cache_masterPortShim_awff;
  MOD_Fifo<tUInt8> INST_cache_masterPortShim_bff;
  MOD_Fifo<tUWide> INST_cache_masterPortShim_rff;
  MOD_Fifo<tUWide> INST_cache_masterPortShim_wff;
  MOD_Wire<tUInt8> INST_cache_pw_tlb_flush_req;
  MOD_BRAM<tUInt8,tUWide,tUInt8> INST_cache_ram_cword_set;
  MOD_BRAM<tUInt8,tUWide,tUInt8> INST_cache_ram_state_and_ctag_cset;
  MOD_Reg<tUInt64> INST_cache_rg_addr;
  MOD_Reg<tUInt8> INST_cache_rg_allow_cap;
  MOD_Reg<tUInt8> INST_cache_rg_amo_funct5;
  MOD_Reg<tUInt8> INST_cache_rg_cache_rereq_data;
  MOD_Reg<tUInt8> INST_cache_rg_cset_cword_in_cache;
  MOD_Reg<tUInt8> INST_cache_rg_cset_in_cache;
  MOD_Reg<tUInt8> INST_cache_rg_ddr4_ready;
  MOD_Reg<tUInt8> INST_cache_rg_error_during_refill;
  MOD_Reg<tUInt8> INST_cache_rg_exc_code;
  MOD_Reg<tUInt8> INST_cache_rg_is_unsigned;
  MOD_Reg<tUWide> INST_cache_rg_ld_val;
  MOD_Reg<tUInt64> INST_cache_rg_lower_word64;
  MOD_Reg<tUInt8> INST_cache_rg_lower_word64_full;
  MOD_Reg<tUInt8> INST_cache_rg_lower_word64_user;
  MOD_Reg<tUInt64> INST_cache_rg_lrsc_pa;
  MOD_Reg<tUInt8> INST_cache_rg_lrsc_valid;
  MOD_Reg<tUInt8> INST_cache_rg_mem_req_sent;
  MOD_Reg<tUInt8> INST_cache_rg_mstatus_MXR;
  MOD_Reg<tUInt8> INST_cache_rg_op;
  MOD_Reg<tUInt64> INST_cache_rg_pa;
  MOD_Reg<tUInt8> INST_cache_rg_priv;
  MOD_Reg<tUInt64> INST_cache_rg_pte_pa;
  MOD_Reg<tUInt64> INST_cache_rg_satp;
  MOD_Reg<tUInt8> INST_cache_rg_sstatus_SUM;
  MOD_Reg<tUWide> INST_cache_rg_st_amo_val;
  MOD_Reg<tUInt8> INST_cache_rg_state;
  MOD_Reg<tUInt8> INST_cache_rg_tlb_walk;
  MOD_Reg<tUInt8> INST_cache_rg_victim_way;
  MOD_Reg<tUInt8> INST_cache_rg_width_code;
  MOD_Reg<tUInt8> INST_cache_rg_wr_rsp_err;
  MOD_Wire<tUInt8> INST_cache_rw_reset_req;
  MOD_mkSoC_Map INST_cache_soc_map;
  MOD_mkTLB INST_cache_tlb;
  MOD_Wire<tUInt64> INST_cache_w_req_addr;
  MOD_Wire<tUInt8> INST_cache_w_req_amo_funct5;
  MOD_Wire<tUInt8> INST_cache_w_req_is_unsigned;
  MOD_Wire<tUInt8> INST_cache_w_req_mstatus_MXR;
  MOD_Wire<tUInt8> INST_cache_w_req_op;
  MOD_Wire<tUInt8> INST_cache_w_req_priv;
  MOD_Wire<tUInt64> INST_cache_w_req_satp;
  MOD_Wire<tUInt8> INST_cache_w_req_sstatus_SUM;
  MOD_Wire<tUWide> INST_cache_w_req_st_value;
  MOD_Wire<tUInt8> INST_cache_w_req_width_code;
  MOD_Wire<tUInt8> INST_cache_wr_mem_req_sent;
 
 /* Constructor */
 public:
  MOD_mkMMU_ICache(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_req_st_value;
  tUWide PORT_mem_master_r_put_val;
  tUWide PORT_mem_master_aw_peek;
  tUWide PORT_mem_master_w_peek;
  tUWide PORT_mem_master_ar_peek;
  tUWide PORT_cword_snd;
  tUWide PORT_st_amo_val_snd;
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_cache_masterPortShim_arff_i_notEmpty____d1186;
  tUInt8 DEF_cache_masterPortShim_wff_i_notEmpty____d1185;
  tUInt8 DEF_cache_masterPortShim_awff_i_notEmpty____d1184;
  tUInt8 DEF_WILL_FIRE_RL_cache_do_tlb_flush;
  tUInt8 DEF_WILL_FIRE_RL_cache_do_reset_req;
  tUInt8 DEF_WILL_FIRE_RL_cache_do_req;
  tUInt8 DEF_WILL_FIRE_RL_cache_rl_rereq;
  tUInt8 DEF_WILL_FIRE_RL_cache_rl_cache_refill_rsps_loop;
  tUInt8 DEF_WILL_FIRE_RL_cache_rl_start_cache_refill;
  tUInt8 DEF_cache_f_reset_rsps_first____d1161;
  tUInt8 DEF_cache_f_reset_rsps_i_notEmpty____d1163;
  tUInt8 DEF_cache_f_reset_reqs_notFull____d1160;
  tUInt8 DEF_NOT_cache_masterPortShim_rff_first__82_BITS_3__ETC___d785;
  tUInt8 DEF_cache_masterPortShim_rff_first__82_BIT_4___d786;
  tUInt8 DEF_cache_masterPortShim_rff_first__82_BIT_7_90_OR_ETC___d792;
  tUInt8 DEF_cache_masterPortShim_rff_first__82_BITS_3_TO_2___d783;
  tUInt8 DEF_cache_masterPortShim_rff_first__82_BIT_7___d790;
  tUInt8 DEF_cache_masterPortShim_rff_first__82_BIT_5___d791;
  tUInt8 DEF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_51_cac_ETC___d464;
  tUInt8 DEF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_51_cac_ETC___d460;
  tUInt8 DEF_b__h36621;
  tUWide DEF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_51_cac_ETC___d459;
  tUInt64 DEF_satp__h9356;
  tUInt8 DEF_cache_rg_op_52_EQ_0___d453;
  tUInt8 DEF_priv__h9359;
  tUInt8 DEF_sstatus_SUM__h9360;
  tUInt8 DEF_mstatus_MXR__h9361;
  tUWide DEF_cache_f_fabric_write_reqs_first____d352;
  tUWide DEF_cache_rg_st_amo_val___d454;
  tUWide DEF_cache_masterPortShim_rff_first____d782;
  tUInt8 DEF_x2__h7191;
  tUInt8 DEF_x__h57984;
  tUInt8 DEF_b__h6202;
  tUInt8 DEF_cache_rg_op__h9396;
  tUInt8 DEF_cache_f_reset_reqs_notEmpty____d416;
  tUInt8 DEF_width_code__h5592;
  tUInt8 DEF_cache_masterPortShim_rff_first__82_BIT_6___d788;
  tUInt8 DEF_cache_f_fabric_write_reqs_first__52_BITS_195_T_ETC___d354;
  tUInt8 DEF_cache_masterPortShim_rff_first__82_BITS_3_TO_2_ETC___d784;
  tUInt8 DEF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_51_cac_ETC___d462;
  tUInt8 DEF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_51_cac_ETC___d461;
  tUInt8 DEF_cache_rg_cset_in_cache_30_EQ_63___d431;
  tUInt8 DEF_cache_rg_state_17_EQ_3___d472;
  tUInt8 DEF_NOT_cache_f_fabric_write_reqs_first__52_BITS_1_ETC___d355;
  tUInt8 DEF_NOT_cache_masterPortShim_rff_first__82_BIT_4_86___d787;
  tUInt8 DEF_NOT_cache_tlb_mv_vm_get_xlate_cache_rg_satp_51_ETC___d465;
 
 /* Local definitions */
 private:
  tUInt8 DEF_cache_rg_victim_way__h52328;
  tUInt32 DEF_ppn_0__h37195;
  tUInt8 DEF_NOT_cache_masterPortShim_rff_first__82_BIT_4_8_ETC___d802;
  tUInt8 DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_52___d494;
  tUInt8 DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_105___d499;
  tUInt8 DEF_cache_f_reset_reqs_first____d422;
  tUInt64 DEF_v__h40473;
  tUInt64 DEF_v__h38898;
  tUInt64 DEF_v__h37783;
  tUInt64 DEF_v__h36856;
  tUInt32 DEF_v__h61997;
  tUInt32 DEF_v__h60564;
  tUInt32 DEF_v__h58808;
  tUInt32 DEF_v__h57877;
  tUInt32 DEF_v__h57835;
  tUInt32 DEF_v__h41462;
  tUInt32 DEF_v__h41204;
  tUInt32 DEF_v__h40190;
  tUInt32 DEF_v__h39871;
  tUInt32 DEF_v__h39780;
  tUInt32 DEF_v__h39700;
  tUInt32 DEF_v__h39620;
  tUInt32 DEF_v__h39181;
  tUInt32 DEF_v__h39064;
  tUInt32 DEF_v__h38744;
  tUInt32 DEF_v__h38664;
  tUInt32 DEF_v__h38485;
  tUInt32 DEF_v__h38066;
  tUInt32 DEF_v__h37949;
  tUInt32 DEF_v__h37628;
  tUInt32 DEF_v__h37548;
  tUInt32 DEF_v__h37366;
  tUInt32 DEF_v__h36667;
  tUInt32 DEF_v__h35856;
  tUInt32 DEF_v__h7843;
  tUInt32 DEF_v__h7707;
  tUInt32 DEF_v__h7610;
  tUInt32 DEF_v__h7133;
  tUInt32 DEF_signed_2___d427;
  tUWide DEF_cache_ram_cword_set_b_read____d504;
  tUWide DEF_cache_w_req_st_value_wget____d1084;
  tUWide DEF_cache_dw_output_st_amo_val_wget____d1177;
  tUWide DEF_cache_dw_output_ld_val_wget____d1173;
  tUWide DEF_cache_f_pte_writebacks_first____d410;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read____d493;
  tUInt64 DEF_pte_pa__h39555;
  tUInt64 DEF_x__h56500;
  tUInt64 DEF_addr__h57097;
  tUInt8 DEF_new_value__h58029;
  tUInt8 DEF_x__h60536;
  tUWide DEF_cache_ram_cword_set_b_read__04_BITS_257_TO_129___d506;
  tUWide DEF_cache_ram_cword_set_b_read__04_BITS_128_TO_0___d505;
  tUWide DEF_x_wget_snd__h61391;
  tUWide DEF_x_wget_snd__h61369;
  tUWide DEF_centry__h10111;
  tUWide DEF_cache_ram_cword_set_b_read__04_BITS_128_TO_0_0_ETC___d689;
  tUWide DEF_x__h35715;
  tUWide DEF_x__h35673;
  tUInt64 DEF_pte__h37023;
  tUInt64 DEF_n_ctag__h8623;
  tUInt64 DEF_n_ctag__h8367;
  tUInt64 DEF_ppn__h37657;
  tUInt64 DEF_satp_ppn__h2303;
  tUInt32 DEF_vpn__h2289;
  tUInt32 DEF_asid__h2302;
  tUInt32 DEF_vpn_1__h2291;
  tUInt32 DEF_vpn_0__h2292;
  tUInt8 DEF_cset_in_cache__h52409;
  tUWide DEF_IF_cache_rg_lower_word64_76_BIT_0_78_THEN_1_EL_ETC___d979;
  tUWide DEF_IF_cache_rg_victim_way_41_THEN_cache_masterPor_ETC___d1002;
  tUWide DEF_cache_masterPortShim_rff_first__82_BIT_0_68_AN_ETC___d1000;
  tUWide DEF_cache_ram_cword_set_b_read__04_BITS_257_TO_129_ETC___d1001;
  tUWide DEF_IF_cache_rg_victim_way_41_THEN_cache_masterPor_ETC___d1020;
  tUWide DEF_cache_masterPortShim_rff_first__82_BIT_0_68_AN_ETC___d982;
  tUWide DEF_IF_cache_rg_victim_way_41_THEN_cache_ram_cword_ETC___d1019;
  tUInt8 DEF_IF_cache_masterPortShim_rff_first__82_BITS_3_T_ETC___d813;
  tUInt8 DEF_NOT_cache_masterPortShim_rff_first__82_BIT_7_9_ETC___d815;
  tUInt8 DEF_cache_masterPortShim_rff_first__82_BITS_22_TO__ETC___d807;
  tUInt8 DEF_cache_rg_op_52_EQ_2___d753;
  tUInt8 DEF_NOT_cache_masterPortShim_rff_first__82_BITS_22_ETC___d808;
  tUInt8 DEF_NOT_cache_cfg_verbosity_read__02_ULE_1_03___d404;
  tUInt8 DEF_cache_masterPortShim_rff_first__82_BIT_4_86_AN_ETC___d828;
  tUInt8 DEF_NOT_cache_masterPortShim_rff_first__82_BIT_5_91___d800;
  tUInt8 DEF_NOT_cache_masterPortShim_rff_first__82_BITS_3__ETC___d863;
  tUInt8 DEF_cache_masterPortShim_rff_first__82_BITS_3_TO_2_ETC___d835;
  tUInt8 DEF_cache_masterPortShim_rff_first__82_BITS_3_TO_2_ETC___d831;
  tUInt8 DEF_cache_masterPortShim_rff_first__82_BITS_3_TO_2_ETC___d821;
  tUInt8 DEF_NOT_cache_f_reset_reqs_first__22___d423;
  tUInt8 DEF_NOT_cache_rg_state_17_EQ_3_72___d765;
  tUWide DEF_x__h10226;
  tUWide DEF_y__h10227;
  tUWide DEF_y__h10280;
  tUWide DEF_y__h22972;
  tUInt64 DEF_lev_1_PTN_pa__h37658;
  tUInt64 DEF_satp_pa__h2304;
  tUWide DEF__0b11_CONCAT_cache_f_pte_writebacks_first__10_B_ETC___d414;
  tUWide DEF__0_CONCAT_cache_f_pte_writebacks_first__10_BITS_ETC___d413;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d621;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d686;
  tUWide DEF_b__h41804;
  tUWide DEF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_51_cac_ETC___d727;
  tUWide DEF_x__h35666;
  tUWide DEF__0_BIT_0_28_CONCAT_0___d729;
  tUWide DEF_cache_tlb_mv_vm_get_xlate_cache_rg_satp_51_cac_ETC___d536;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d620;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d685;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d619;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d684;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d618;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d683;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d617;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d682;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d616;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d681;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d615;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d680;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d614;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d679;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d613;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d678;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d612;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d677;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d611;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d676;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d610;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d675;
  tUWide DEF__0_CONCAT_DONTCARE_37_CONCAT_0_CONCAT_DONTCARE_37___d438;
  tUWide DEF_cache_rg_victim_way_41_OR_cache_ram_state_and__ETC___d998;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d609;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d674;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d608;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d673;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d607;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d672;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d606;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d671;
  tUWide DEF__0_CONCAT_cache_rg_pa_36_BITS_63_TO_6_37_CONCAT_ETC___d939;
  tUWide DEF__0_CONCAT_0_CONCAT_cache_masterPortShim_rff_fir_ETC___d883;
  tUWide DEF__0_CONCAT_0_CONCAT_cache_masterPortShim_rff_fir_ETC___d843;
  tUWide DEF__0_CONCAT_cache_f_fabric_write_reqs_first__52_B_ETC___d384;
  tUWide DEF__0_CONCAT_0_CONCAT_cache_rg_satp_51_BITS_43_TO__ETC___d778;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d605;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d670;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d604;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d669;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d603;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d668;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d602;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d667;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d601;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d666;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d600;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d665;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d599;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d664;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d598;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d663;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d597;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d662;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d596;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d661;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d595;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d660;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d594;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d659;
  tUWide DEF_cache_f_fabric_write_reqs_first__52_BITS_127_T_ETC___d375;
  tUWide DEF_IF_cache_f_fabric_write_reqs_first__52_BITS_19_ETC___d400;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d593;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d658;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d592;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d657;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d591;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d656;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_5_ETC___d590;
  tUWide DEF_cache_ram_state_and_ctag_cset_b_read__93_BIT_1_ETC___d655;
  tUInt64 DEF_x__h37735;
  tUInt64 DEF_x__h7981;
 
 /* Rules */
 public:
  void RL_cache_aw_events_update_reg();
  void RL_cache_rl_fabric_send_write_req();
  void RL_cache_rl_writeback_updated_PTE();
  void RL_cache_rl_start_reset();
  void RL_cache_rl_reset();
  void RL_cache_rl_probe_and_immed_rsp();
  void RL_cache_rl_count_tlb_latency();
  void RL_cache_rl_start_tlb_refill();
  void RL_cache_rl_ptw_level_2();
  void RL_cache_rl_ptw_level_1();
  void RL_cache_rl_ptw_level_0();
  void RL_cache_rl_count_miss_lat();
  void RL_cache_rl_start_cache_refill();
  void RL_cache_rl_cache_refill_rsps_loop();
  void RL_cache_rl_rereq();
  void RL_cache_rl_discard_write_rsp();
  void RL_cache_rl_drive_exception_rsp();
  void RL_cache_do_req();
  void RL_cache_do_set_req_valid();
  void RL_cache_do_reset_req();
  void RL_cache_do_tlb_flush();
  void __me_check_17();
 
 /* Methods */
 public:
  void METH_set_verbosity(tUInt8 ARG_set_verbosity_verbosity);
  tUInt8 METH_RDY_set_verbosity();
  void METH_server_reset_request_put(tUInt8 ARG_server_reset_request_put);
  tUInt8 METH_RDY_server_reset_request_put();
  void METH_server_reset_response_get();
  tUInt8 METH_RDY_server_reset_response_get();
  void METH_req(tUInt8 ARG_req_op,
		tUInt8 ARG_req_width_code,
		tUInt8 ARG_req_is_unsigned,
		tUInt8 ARG_req_amo_funct5,
		tUInt64 ARG_req_addr,
		tUWide ARG_req_st_value,
		tUInt8 ARG_req_priv,
		tUInt8 ARG_req_sstatus_SUM,
		tUInt8 ARG_req_mstatus_MXR,
		tUInt64 ARG_req_satp);
  tUInt8 METH_RDY_req();
  void METH_commit();
  tUInt8 METH_RDY_commit();
  tUInt8 METH_valid();
  tUInt8 METH_RDY_valid();
  tUInt64 METH_addr();
  tUInt8 METH_RDY_addr();
  tUInt8 METH_cword_fst();
  tUInt8 METH_RDY_cword_fst();
  tUWide METH_cword_snd();
  tUInt8 METH_RDY_cword_snd();
  tUInt8 METH_st_amo_val_fst();
  tUInt8 METH_RDY_st_amo_val_fst();
  tUWide METH_st_amo_val_snd();
  tUInt8 METH_RDY_st_amo_val_snd();
  tUInt8 METH_exc();
  tUInt8 METH_RDY_exc();
  tUInt8 METH_exc_code();
  tUInt8 METH_RDY_exc_code();
  void METH_server_flush_request_put(tUInt8 ARG_server_flush_request_put);
  tUInt8 METH_RDY_server_flush_request_put();
  void METH_server_flush_response_get();
  tUInt8 METH_RDY_server_flush_response_get();
  void METH_tlb_flush();
  tUInt8 METH_RDY_tlb_flush();
  tUInt8 METH_mem_master_aw_canPeek();
  tUInt8 METH_RDY_mem_master_aw_canPeek();
  tUWide METH_mem_master_aw_peek();
  tUInt8 METH_RDY_mem_master_aw_peek();
  void METH_mem_master_aw_drop();
  tUInt8 METH_RDY_mem_master_aw_drop();
  tUInt8 METH_mem_master_w_canPeek();
  tUInt8 METH_RDY_mem_master_w_canPeek();
  tUWide METH_mem_master_w_peek();
  tUInt8 METH_RDY_mem_master_w_peek();
  void METH_mem_master_w_drop();
  tUInt8 METH_RDY_mem_master_w_drop();
  tUInt8 METH_mem_master_b_canPut();
  tUInt8 METH_RDY_mem_master_b_canPut();
  void METH_mem_master_b_put(tUInt8 ARG_mem_master_b_put_val);
  tUInt8 METH_RDY_mem_master_b_put();
  tUInt8 METH_mem_master_ar_canPeek();
  tUInt8 METH_RDY_mem_master_ar_canPeek();
  tUWide METH_mem_master_ar_peek();
  tUInt8 METH_RDY_mem_master_ar_peek();
  void METH_mem_master_ar_drop();
  tUInt8 METH_RDY_mem_master_ar_drop();
  tUInt8 METH_mem_master_r_canPut();
  tUInt8 METH_RDY_mem_master_r_canPut();
  void METH_mem_master_r_put(tUWide ARG_mem_master_r_put_val);
  tUInt8 METH_RDY_mem_master_r_put();
  tUInt32 METH_events();
  tUInt8 METH_RDY_events();
  void METH_ma_ddr4_ready();
  tUInt8 METH_RDY_ma_ddr4_ready();
  tUInt8 METH_mv_status();
  tUInt8 METH_RDY_mv_status();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkMMU_ICache &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkMMU_ICache &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkMMU_ICache &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkMMU_ICache &backing);
};

#endif /* ifndef __mkMMU_ICache_h__ */
