/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Tue Mar  8 15:41:57 GMT 2022
 * 
 */

/* Generation options: */
#ifndef __mkPerfCountersFlute_h__
#define __mkPerfCountersFlute_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkPerfCountersFlute module */
class MOD_mkPerfCountersFlute : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Wire<tUWide> INST_perf_counters_events_wire;
  MOD_ConfigReg<tUInt32> INST_perf_counters_rg_ctr_inhibit;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_0;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_1;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_10;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_11;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_12;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_13;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_14;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_15;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_16;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_17;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_18;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_19;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_2;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_20;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_21;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_22;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_23;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_24;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_25;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_26;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_27;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_28;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_3;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_4;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_5;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_6;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_7;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_8;
  MOD_ConfigReg<tUInt64> INST_perf_counters_vec_rg_counter_9;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_0;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_1;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_10;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_11;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_12;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_13;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_14;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_15;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_16;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_17;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_18;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_19;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_2;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_20;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_21;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_22;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_23;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_24;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_25;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_26;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_27;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_28;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_3;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_4;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_5;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_6;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_7;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_8;
  MOD_ConfigReg<tUInt8> INST_perf_counters_vec_rg_event_sel_9;
  MOD_Wire<tUInt32> INST_perf_counters_wr_overflow;
  MOD_Wire<tUWide> INST_perf_counters_write_counter_wire;
  MOD_Wire<tUInt32> INST_perf_counters_write_ctr_sel_wire;
 
 /* Constructor */
 public:
  MOD_mkPerfCountersFlute(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
  tUWide PORT_send_performance_events_evts;
  tUInt8 PORT_RDY_send_performance_events;
 
 /* Publicly accessible definitions */
 public:
 
 /* Local definitions */
 private:
  tUInt8 DEF_x__h18456;
  tUInt8 DEF_x__h18254;
  tUInt8 DEF_x__h18052;
  tUInt8 DEF_x__h17850;
  tUInt8 DEF_x__h17648;
  tUInt8 DEF_x__h17446;
  tUInt8 DEF_x__h17244;
  tUInt8 DEF_x__h17042;
  tUInt8 DEF_x__h16840;
  tUInt8 DEF_x__h16638;
  tUInt8 DEF_x__h16436;
  tUInt8 DEF_x__h16234;
  tUInt8 DEF_x__h16032;
  tUInt8 DEF_x__h15830;
  tUInt8 DEF_x__h15628;
  tUInt8 DEF_x__h15426;
  tUInt8 DEF_x__h15224;
  tUInt8 DEF_x__h15022;
  tUInt8 DEF_x__h14820;
  tUInt8 DEF_x__h14618;
  tUInt8 DEF_x__h14416;
  tUInt8 DEF_x__h14214;
  tUInt8 DEF_x__h14012;
  tUInt8 DEF_x__h13810;
  tUInt8 DEF_x__h13608;
  tUInt8 DEF_x__h13406;
  tUInt8 DEF_x__h13204;
  tUInt8 DEF_x__h13002;
  tUInt8 DEF_x__h7839;
  tUWide DEF_perf_counters_events_wire_wget____d98;
  tUWide DEF_perf_counters_write_counter_wire_wget____d586;
  tUInt64 DEF_perf_counters_vec_rg_counter_28_read____d573;
  tUInt64 DEF_perf_counters_vec_rg_counter_27_read____d561;
  tUInt64 DEF_perf_counters_vec_rg_counter_26_read____d548;
  tUInt64 DEF_perf_counters_vec_rg_counter_25_read____d535;
  tUInt64 DEF_perf_counters_vec_rg_counter_24_read____d522;
  tUInt64 DEF_perf_counters_vec_rg_counter_23_read____d509;
  tUInt64 DEF_perf_counters_vec_rg_counter_22_read____d496;
  tUInt64 DEF_perf_counters_vec_rg_counter_21_read____d483;
  tUInt64 DEF_perf_counters_vec_rg_counter_20_read____d470;
  tUInt64 DEF_perf_counters_vec_rg_counter_19_read____d457;
  tUInt64 DEF_perf_counters_vec_rg_counter_18_read____d444;
  tUInt64 DEF_perf_counters_vec_rg_counter_17_read____d431;
  tUInt64 DEF_perf_counters_vec_rg_counter_16_read____d418;
  tUInt64 DEF_perf_counters_vec_rg_counter_15_read____d405;
  tUInt64 DEF_perf_counters_vec_rg_counter_14_read____d392;
  tUInt64 DEF_perf_counters_vec_rg_counter_13_read____d379;
  tUInt64 DEF_perf_counters_vec_rg_counter_12_read____d366;
  tUInt64 DEF_perf_counters_vec_rg_counter_11_read____d353;
  tUInt64 DEF_perf_counters_vec_rg_counter_10_read____d340;
  tUInt64 DEF_perf_counters_vec_rg_counter_9_read____d327;
  tUInt64 DEF_perf_counters_vec_rg_counter_8_read____d314;
  tUInt64 DEF_perf_counters_vec_rg_counter_7_read____d301;
  tUInt64 DEF_perf_counters_vec_rg_counter_6_read____d288;
  tUInt64 DEF_perf_counters_vec_rg_counter_5_read____d275;
  tUInt64 DEF_perf_counters_vec_rg_counter_4_read____d262;
  tUInt64 DEF_perf_counters_vec_rg_counter_3_read____d249;
  tUInt64 DEF_perf_counters_vec_rg_counter_2_read____d236;
  tUInt64 DEF_perf_counters_vec_rg_counter_1_read____d223;
  tUInt64 DEF_perf_counters_vec_rg_counter_0_read____d94;
  tUInt32 DEF_perf_counters_rg_ctr_inhibit_read____d64;
  tUWide DEF_count_sum__h5614;
  tUWide DEF_count_sum__h5663;
  tUWide DEF_count_sum__h5712;
  tUWide DEF_count_sum__h5761;
  tUWide DEF_count_sum__h5810;
  tUWide DEF_count_sum__h5859;
  tUWide DEF_count_sum__h5908;
  tUWide DEF_count_sum__h5957;
  tUWide DEF_count_sum__h6006;
  tUWide DEF_count_sum__h6055;
  tUWide DEF_count_sum__h6104;
  tUWide DEF_count_sum__h6153;
  tUWide DEF_count_sum__h6202;
  tUWide DEF_count_sum__h6251;
  tUWide DEF_count_sum__h6300;
  tUWide DEF_count_sum__h6349;
  tUWide DEF_count_sum__h6398;
  tUWide DEF_count_sum__h6447;
  tUWide DEF_count_sum__h6496;
  tUWide DEF_count_sum__h6545;
  tUWide DEF_count_sum__h6594;
  tUWide DEF_count_sum__h6643;
  tUWide DEF_count_sum__h6692;
  tUWide DEF_count_sum__h6741;
  tUWide DEF_count_sum__h6790;
  tUWide DEF_count_sum__h6839;
  tUWide DEF_count_sum__h6888;
  tUWide DEF_count_sum__h6937;
  tUWide DEF_count_sum__h6986;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_28_read__73___d574;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_28__ETC___d579;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_27_read__61___d562;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_27__ETC___d567;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_26_read__48___d549;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_26__ETC___d554;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_25_read__35___d536;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_25__ETC___d541;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_24_read__22___d523;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_24__ETC___d528;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_23_read__09___d510;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_23__ETC___d515;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_22_read__96___d497;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_22__ETC___d502;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_21_read__83___d484;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_21__ETC___d489;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_20_read__70___d471;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_20__ETC___d476;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_19_read__57___d458;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_19__ETC___d463;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_18_read__44___d445;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_18__ETC___d450;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_17_read__31___d432;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_17__ETC___d437;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_16_read__18___d419;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_16__ETC___d424;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_15_read__05___d406;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_15__ETC___d411;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_14_read__92___d393;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_14__ETC___d398;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_13_read__79___d380;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_13__ETC___d385;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_12_read__66___d367;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_12__ETC___d372;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_11_read__53___d354;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_11__ETC___d359;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_10_read__40___d341;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_10__ETC___d346;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_9_read__27___d328;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_9_r_ETC___d333;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_8_read__14___d315;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_8_r_ETC___d320;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_7_read__01___d302;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_7_r_ETC___d307;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_6_read__88___d289;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_6_r_ETC___d294;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_5_read__75___d276;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_5_r_ETC___d281;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_4_read__62___d263;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_4_r_ETC___d268;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_3_read__49___d250;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_3_r_ETC___d255;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_2_read__36___d237;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_2_r_ETC___d242;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_1_read__23___d224;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_1_r_ETC___d229;
  tUWide DEF__0_CONCAT_perf_counters_vec_rg_counter_0_read__4___d95;
  tUWide DEF__0_CONCAT_IF_perf_counters_vec_rg_event_sel_0_r_ETC___d217;
  tUWide DEF_write_counter_idx_CONCAT_write_counter_val___d765;
 
 /* Rules */
 public:
  void RL_perf_counters_do_writes();
 
 /* Methods */
 public:
  void METH_send_performance_events(tUWide ARG_send_performance_events_evts);
  tUInt8 METH_RDY_send_performance_events();
  tUInt64 METH_read_counters_0__read();
  tUInt8 METH_RDY_read_counters_0__read();
  tUInt64 METH_read_counters_1__read();
  tUInt8 METH_RDY_read_counters_1__read();
  tUInt64 METH_read_counters_2__read();
  tUInt8 METH_RDY_read_counters_2__read();
  tUInt64 METH_read_counters_3__read();
  tUInt8 METH_RDY_read_counters_3__read();
  tUInt64 METH_read_counters_4__read();
  tUInt8 METH_RDY_read_counters_4__read();
  tUInt64 METH_read_counters_5__read();
  tUInt8 METH_RDY_read_counters_5__read();
  tUInt64 METH_read_counters_6__read();
  tUInt8 METH_RDY_read_counters_6__read();
  tUInt64 METH_read_counters_7__read();
  tUInt8 METH_RDY_read_counters_7__read();
  tUInt64 METH_read_counters_8__read();
  tUInt8 METH_RDY_read_counters_8__read();
  tUInt64 METH_read_counters_9__read();
  tUInt8 METH_RDY_read_counters_9__read();
  tUInt64 METH_read_counters_10__read();
  tUInt8 METH_RDY_read_counters_10__read();
  tUInt64 METH_read_counters_11__read();
  tUInt8 METH_RDY_read_counters_11__read();
  tUInt64 METH_read_counters_12__read();
  tUInt8 METH_RDY_read_counters_12__read();
  tUInt64 METH_read_counters_13__read();
  tUInt8 METH_RDY_read_counters_13__read();
  tUInt64 METH_read_counters_14__read();
  tUInt8 METH_RDY_read_counters_14__read();
  tUInt64 METH_read_counters_15__read();
  tUInt8 METH_RDY_read_counters_15__read();
  tUInt64 METH_read_counters_16__read();
  tUInt8 METH_RDY_read_counters_16__read();
  tUInt64 METH_read_counters_17__read();
  tUInt8 METH_RDY_read_counters_17__read();
  tUInt64 METH_read_counters_18__read();
  tUInt8 METH_RDY_read_counters_18__read();
  tUInt64 METH_read_counters_19__read();
  tUInt8 METH_RDY_read_counters_19__read();
  tUInt64 METH_read_counters_20__read();
  tUInt8 METH_RDY_read_counters_20__read();
  tUInt64 METH_read_counters_21__read();
  tUInt8 METH_RDY_read_counters_21__read();
  tUInt64 METH_read_counters_22__read();
  tUInt8 METH_RDY_read_counters_22__read();
  tUInt64 METH_read_counters_23__read();
  tUInt8 METH_RDY_read_counters_23__read();
  tUInt64 METH_read_counters_24__read();
  tUInt8 METH_RDY_read_counters_24__read();
  tUInt64 METH_read_counters_25__read();
  tUInt8 METH_RDY_read_counters_25__read();
  tUInt64 METH_read_counters_26__read();
  tUInt8 METH_RDY_read_counters_26__read();
  tUInt64 METH_read_counters_27__read();
  tUInt8 METH_RDY_read_counters_27__read();
  tUInt64 METH_read_counters_28__read();
  tUInt8 METH_RDY_read_counters_28__read();
  tUInt8 METH_read_ctr_sels_0__read();
  tUInt8 METH_RDY_read_ctr_sels_0__read();
  tUInt8 METH_read_ctr_sels_1__read();
  tUInt8 METH_RDY_read_ctr_sels_1__read();
  tUInt8 METH_read_ctr_sels_2__read();
  tUInt8 METH_RDY_read_ctr_sels_2__read();
  tUInt8 METH_read_ctr_sels_3__read();
  tUInt8 METH_RDY_read_ctr_sels_3__read();
  tUInt8 METH_read_ctr_sels_4__read();
  tUInt8 METH_RDY_read_ctr_sels_4__read();
  tUInt8 METH_read_ctr_sels_5__read();
  tUInt8 METH_RDY_read_ctr_sels_5__read();
  tUInt8 METH_read_ctr_sels_6__read();
  tUInt8 METH_RDY_read_ctr_sels_6__read();
  tUInt8 METH_read_ctr_sels_7__read();
  tUInt8 METH_RDY_read_ctr_sels_7__read();
  tUInt8 METH_read_ctr_sels_8__read();
  tUInt8 METH_RDY_read_ctr_sels_8__read();
  tUInt8 METH_read_ctr_sels_9__read();
  tUInt8 METH_RDY_read_ctr_sels_9__read();
  tUInt8 METH_read_ctr_sels_10__read();
  tUInt8 METH_RDY_read_ctr_sels_10__read();
  tUInt8 METH_read_ctr_sels_11__read();
  tUInt8 METH_RDY_read_ctr_sels_11__read();
  tUInt8 METH_read_ctr_sels_12__read();
  tUInt8 METH_RDY_read_ctr_sels_12__read();
  tUInt8 METH_read_ctr_sels_13__read();
  tUInt8 METH_RDY_read_ctr_sels_13__read();
  tUInt8 METH_read_ctr_sels_14__read();
  tUInt8 METH_RDY_read_ctr_sels_14__read();
  tUInt8 METH_read_ctr_sels_15__read();
  tUInt8 METH_RDY_read_ctr_sels_15__read();
  tUInt8 METH_read_ctr_sels_16__read();
  tUInt8 METH_RDY_read_ctr_sels_16__read();
  tUInt8 METH_read_ctr_sels_17__read();
  tUInt8 METH_RDY_read_ctr_sels_17__read();
  tUInt8 METH_read_ctr_sels_18__read();
  tUInt8 METH_RDY_read_ctr_sels_18__read();
  tUInt8 METH_read_ctr_sels_19__read();
  tUInt8 METH_RDY_read_ctr_sels_19__read();
  tUInt8 METH_read_ctr_sels_20__read();
  tUInt8 METH_RDY_read_ctr_sels_20__read();
  tUInt8 METH_read_ctr_sels_21__read();
  tUInt8 METH_RDY_read_ctr_sels_21__read();
  tUInt8 METH_read_ctr_sels_22__read();
  tUInt8 METH_RDY_read_ctr_sels_22__read();
  tUInt8 METH_read_ctr_sels_23__read();
  tUInt8 METH_RDY_read_ctr_sels_23__read();
  tUInt8 METH_read_ctr_sels_24__read();
  tUInt8 METH_RDY_read_ctr_sels_24__read();
  tUInt8 METH_read_ctr_sels_25__read();
  tUInt8 METH_RDY_read_ctr_sels_25__read();
  tUInt8 METH_read_ctr_sels_26__read();
  tUInt8 METH_RDY_read_ctr_sels_26__read();
  tUInt8 METH_read_ctr_sels_27__read();
  tUInt8 METH_RDY_read_ctr_sels_27__read();
  tUInt8 METH_read_ctr_sels_28__read();
  tUInt8 METH_RDY_read_ctr_sels_28__read();
  tUInt32 METH_read_ctr_inhibit__read();
  tUInt8 METH_RDY_read_ctr_inhibit__read();
  tUInt32 METH_read_ctr_overflow__read();
  tUInt8 METH_RDY_read_ctr_overflow__read();
  void METH_write_counter(tUInt8 ARG_write_counter_idx, tUInt64 ARG_write_counter_val);
  tUInt8 METH_RDY_write_counter();
  void METH_write_ctr_sel(tUInt8 ARG_write_ctr_sel_idx, tUInt8 ARG_write_ctr_sel_val);
  tUInt8 METH_RDY_write_ctr_sel();
  void METH_write_ctr_inhibit(tUInt32 ARG_write_ctr_inhibit_val);
  tUInt8 METH_RDY_write_ctr_inhibit();
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkPerfCountersFlute &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkPerfCountersFlute &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkPerfCountersFlute &backing);
};

#endif /* ifndef __mkPerfCountersFlute_h__ */
