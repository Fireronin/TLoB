/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Fri Mar 25 15:59:20 CET 2022
 * 
 */
#include "bluesim_primitives.h"
#include "mkRISCV_MBox.h"


/* Literal declarations */
static unsigned int const UWide_literal_128_h1_arr[] = { 1u, 0u, 0u, 0u };
static tUWide const UWide_literal_128_h1(128u, UWide_literal_128_h1_arr);


/* String declarations */
static std::string const __str_literal_1("    RISCV_MBox.rl_mul", 21u);
static std::string const __str_literal_3("    f3 0x%0h  v1 0x%0h  v2 0x%0h", 32u);
static std::string const __str_literal_2("%0d: ERROR: RISCV_MBox.rl_mul: illegal f3.", 42u);


/* Constructor */
MOD_mkRISCV_MBox::MOD_mkRISCV_MBox(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_cfg_verbosity(simHdl, "cfg_verbosity", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_dw_result(simHdl, "dw_result", this, 64u, (tUInt8)0u),
    INST_dw_valid(simHdl, "dw_valid", this, 1u, (tUInt8)0u),
    INST_intDiv_rg_denom2(simHdl, "intDiv_rg_denom2", this, 64u),
    INST_intDiv_rg_denom_is_signed(simHdl, "intDiv_rg_denom_is_signed", this, 1u),
    INST_intDiv_rg_n(simHdl, "intDiv_rg_n", this, 64u),
    INST_intDiv_rg_numer_is_signed(simHdl, "intDiv_rg_numer_is_signed", this, 1u),
    INST_intDiv_rg_quo(simHdl, "intDiv_rg_quo", this, 64u),
    INST_intDiv_rg_quoIsNeg(simHdl, "intDiv_rg_quoIsNeg", this, 1u),
    INST_intDiv_rg_remIsNeg(simHdl, "intDiv_rg_remIsNeg", this, 1u),
    INST_intDiv_rg_state(simHdl, "intDiv_rg_state", this, 3u, (tUInt8)0u, (tUInt8)0u),
    INST_rg_f3(simHdl, "rg_f3", this, 3u),
    INST_rg_is_OP_not_OP_32(simHdl, "rg_is_OP_not_OP_32", this, 1u),
    INST_rg_result(simHdl, "rg_result", this, 64u),
    INST_rg_state(simHdl, "rg_state", this, 2u),
    INST_rg_v1(simHdl, "rg_v1", this, 64u),
    INST_rg_v2(simHdl, "rg_v2", this, 64u),
    PORT_RST_N((tUInt8)1u),
    DEF_v__h5665(2863311530u),
    DEF_IF_rg_v1_BIT_63_5_THEN_INV_0x0_CONCAT_IF_rg_v1_ETC___d184(128u),
    DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d178(128u),
    DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d174(128u),
    DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d170(128u),
    DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d167(128u),
    DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d164(128u),
    DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d161(128u),
    DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d157(128u),
    DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d151(128u),
    DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d146(128u),
    DEF_IF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0_6_THEN_0x0_ETC___d139(128u),
    DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d133(128u),
    DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d129(128u),
    DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d123(128u),
    DEF_rg_v1_MUL_rg_v2___d105(128u),
    DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d118(128u),
    DEF_SEXT_rg_v1_BITS_31_TO_0_49_87_MUL_SEXT_rg_v2_B_ETC___d189(128u),
    DEF_prod__h4475(128u),
    DEF_prod___1__h4585(128u),
    DEF_prod___1__h5263(128u),
    DEF_prod__h5195(128u),
    DEF_x__h5265(128u),
    DEF_x__h4587(128u),
    DEF_x__h5295(128u),
    DEF_y__h5296(128u),
    DEF_x__h5297(128u),
    DEF_y__h5298(128u),
    DEF_x__h5299(128u),
    DEF_y__h5300(128u),
    DEF_x__h4961(128u),
    DEF_y__h4962(128u),
    DEF_x__h4963(128u),
    DEF_y__h4964(128u),
    DEF_x__h4965(128u),
    DEF_y__h4966(128u),
    DEF_x__h4617(128u),
    DEF_y__h4618(128u),
    DEF_x__h4619(128u),
    DEF_y__h4620(128u),
    DEF_x__h4621(128u),
    DEF_y__h4622(128u)
{
  symbol_count = 29u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkRISCV_MBox::init_symbols_0()
{
  init_symbol(&symbols[0u], "b__h5980", SYM_DEF, &DEF_b__h5980, 64u);
  init_symbol(&symbols[1u], "cfg_verbosity", SYM_MODULE, &INST_cfg_verbosity);
  init_symbol(&symbols[2u], "dw_result", SYM_MODULE, &INST_dw_result);
  init_symbol(&symbols[3u], "dw_valid", SYM_MODULE, &INST_dw_valid);
  init_symbol(&symbols[4u], "intDiv_rg_denom2", SYM_MODULE, &INST_intDiv_rg_denom2);
  init_symbol(&symbols[5u], "intDiv_rg_denom_is_signed", SYM_MODULE, &INST_intDiv_rg_denom_is_signed);
  init_symbol(&symbols[6u],
	      "intDiv_rg_denom_is_signed__h553",
	      SYM_DEF,
	      &DEF_intDiv_rg_denom_is_signed__h553,
	      1u);
  init_symbol(&symbols[7u], "intDiv_rg_n", SYM_MODULE, &INST_intDiv_rg_n);
  init_symbol(&symbols[8u], "intDiv_rg_numer_is_signed", SYM_MODULE, &INST_intDiv_rg_numer_is_signed);
  init_symbol(&symbols[9u],
	      "intDiv_rg_numer_is_signed__h532",
	      SYM_DEF,
	      &DEF_intDiv_rg_numer_is_signed__h532,
	      1u);
  init_symbol(&symbols[10u], "intDiv_rg_quo", SYM_MODULE, &INST_intDiv_rg_quo);
  init_symbol(&symbols[11u], "intDiv_rg_quoIsNeg", SYM_MODULE, &INST_intDiv_rg_quoIsNeg);
  init_symbol(&symbols[12u], "intDiv_rg_remIsNeg", SYM_MODULE, &INST_intDiv_rg_remIsNeg);
  init_symbol(&symbols[13u], "intDiv_rg_state", SYM_MODULE, &INST_intDiv_rg_state);
  init_symbol(&symbols[14u], "RL_intDiv_rl_loop1", SYM_RULE);
  init_symbol(&symbols[15u], "RL_intDiv_rl_loop2", SYM_RULE);
  init_symbol(&symbols[16u], "RL_intDiv_rl_start_div_by_zero", SYM_RULE);
  init_symbol(&symbols[17u], "RL_intDiv_rl_start_overflow", SYM_RULE);
  init_symbol(&symbols[18u], "RL_intDiv_rl_start_s", SYM_RULE);
  init_symbol(&symbols[19u], "RL_rg_div_rem", SYM_RULE);
  init_symbol(&symbols[20u], "RL_rl_mul", SYM_RULE);
  init_symbol(&symbols[21u], "RL_rl_mul2", SYM_RULE);
  init_symbol(&symbols[22u], "rg_f3", SYM_MODULE, &INST_rg_f3);
  init_symbol(&symbols[23u], "rg_is_OP_not_OP_32", SYM_MODULE, &INST_rg_is_OP_not_OP_32);
  init_symbol(&symbols[24u], "rg_result", SYM_MODULE, &INST_rg_result);
  init_symbol(&symbols[25u], "rg_state", SYM_MODULE, &INST_rg_state);
  init_symbol(&symbols[26u], "rg_v1", SYM_MODULE, &INST_rg_v1);
  init_symbol(&symbols[27u], "rg_v2", SYM_MODULE, &INST_rg_v2);
  init_symbol(&symbols[28u], "rg_v2__h5639", SYM_DEF, &DEF_rg_v2__h5639, 64u);
}


/* Rule actions */

void MOD_mkRISCV_MBox::RL_intDiv_rl_start_div_by_zero()
{
  INST_intDiv_rg_quo.METH_write(18446744073709551615llu);
  INST_intDiv_rg_state.METH_write((tUInt8)4u);
}

void MOD_mkRISCV_MBox::RL_intDiv_rl_start_overflow()
{
  DEF_b__h5980 = INST_rg_v1.METH_read();
  INST_intDiv_rg_quo.METH_write(DEF_b__h5980);
  INST_rg_v1.METH_write(0llu);
  INST_intDiv_rg_state.METH_write((tUInt8)4u);
}

void MOD_mkRISCV_MBox::RL_intDiv_rl_start_s()
{
  tUInt8 DEF_IF_intDiv_rg_numer_is_signed_AND_intDiv_rg_den_ETC___d42;
  tUInt8 DEF_IF_intDiv_rg_numer_is_signed_AND_intDiv_rg_den_ETC___d40;
  tUInt64 DEF_x__h667;
  tUInt64 DEF__theResult___fst__h765;
  tUInt64 DEF_numer___1__h697;
  tUInt64 DEF__theResult___snd_fst__h760;
  tUInt64 DEF_denom___1__h698;
  tUInt64 DEF_denom__h655;
  tUInt8 DEF_intDiv_rg_numer_is_signed_AND_intDiv_rg_denom__ETC___d29;
  DEF_intDiv_rg_numer_is_signed__h532 = INST_intDiv_rg_numer_is_signed.METH_read();
  DEF_intDiv_rg_denom_is_signed__h553 = INST_intDiv_rg_denom_is_signed.METH_read();
  DEF_intDiv_rg_numer_is_signed_AND_intDiv_rg_denom__ETC___d29 = DEF_intDiv_rg_numer_is_signed__h532 && DEF_intDiv_rg_denom_is_signed__h553;
  DEF_rg_v2__h5639 = INST_rg_v2.METH_read();
  DEF_rg_v2_BIT_63___h770 = (tUInt8)(DEF_rg_v2__h5639 >> 63u);
  DEF_b__h5980 = INST_rg_v1.METH_read();
  DEF_rg_v1_BIT_63___h719 = (tUInt8)(DEF_b__h5980 >> 63u);
  DEF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36 = DEF_rg_v1_BIT_63___h719 == DEF_rg_v2_BIT_63___h770;
  DEF_x__h4159 = -DEF_b__h5980;
  DEF_denom___1__h698 = DEF_rg_v2_BIT_63___h770 ? -DEF_rg_v2__h5639 : DEF_rg_v2__h5639;
  DEF_numer___1__h697 = DEF_rg_v1_BIT_63___h719 ? DEF_x__h4159 : DEF_b__h5980;
  DEF__theResult___fst__h765 = DEF_intDiv_rg_denom_is_signed__h553 ? DEF_denom___1__h698 : DEF_rg_v2__h5639;
  DEF__theResult___snd_fst__h760 = DEF_intDiv_rg_numer_is_signed__h532 ? DEF_rg_v2__h5639 : DEF__theResult___fst__h765;
  DEF_denom__h655 = DEF_intDiv_rg_numer_is_signed_AND_intDiv_rg_denom__ETC___d29 ? DEF_denom___1__h698 : DEF__theResult___snd_fst__h760;
  DEF_x__h667 = DEF_intDiv_rg_numer_is_signed__h532 ? DEF_numer___1__h697 : DEF_b__h5980;
  DEF_IF_intDiv_rg_numer_is_signed_AND_intDiv_rg_den_ETC___d40 = DEF_intDiv_rg_numer_is_signed_AND_intDiv_rg_denom__ETC___d29 ? !DEF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36 : (DEF_intDiv_rg_numer_is_signed__h532 ? DEF_rg_v1_BIT_63___h719 : DEF_intDiv_rg_denom_is_signed__h553 && DEF_rg_v2_BIT_63___h770);
  DEF_IF_intDiv_rg_numer_is_signed_AND_intDiv_rg_den_ETC___d42 = DEF_intDiv_rg_numer_is_signed_AND_intDiv_rg_denom__ETC___d29 ? DEF_rg_v1_BIT_63___h719 : DEF_intDiv_rg_numer_is_signed__h532 && DEF_rg_v1_BIT_63___h719;
  INST_rg_v1.METH_write(DEF_x__h667);
  INST_rg_v2.METH_write(DEF_denom__h655);
  INST_intDiv_rg_denom2.METH_write(DEF_denom__h655);
  INST_intDiv_rg_quoIsNeg.METH_write(DEF_IF_intDiv_rg_numer_is_signed_AND_intDiv_rg_den_ETC___d40);
  INST_intDiv_rg_remIsNeg.METH_write(DEF_IF_intDiv_rg_numer_is_signed_AND_intDiv_rg_den_ETC___d42);
  INST_intDiv_rg_quo.METH_write(0llu);
  INST_intDiv_rg_state.METH_write((tUInt8)2u);
  INST_intDiv_rg_n.METH_write(1llu);
}

void MOD_mkRISCV_MBox::RL_intDiv_rl_loop1()
{
  tUInt64 DEF_x__h3919;
  tUInt64 DEF_x__h3892;
  tUInt64 DEF_y__h3857;
  tUInt8 DEF_intDiv_rg_denom2_4_ULE_0_CONCAT_rg_v1_BITS_63__ETC___d47;
  tUInt8 DEF_NOT_intDiv_rg_denom2_4_ULE_0_CONCAT_rg_v1_BITS_ETC___d53;
  tUInt64 DEF_rg_v1_BITS_63_TO_1___h3872;
  tUInt64 DEF_intDiv_rg_denom2_BITS_62_TO_0___h3914;
  tUInt64 DEF_intDiv_rg_n_BITS_62_TO_0___h3927;
  DEF_y__h4179 = INST_intDiv_rg_n.METH_read();
  DEF_y__h4031 = INST_intDiv_rg_denom2.METH_read();
  DEF_b__h5980 = INST_rg_v1.METH_read();
  DEF_intDiv_rg_n_BITS_62_TO_0___h3927 = (tUInt64)(9223372036854775807llu & DEF_y__h4179);
  DEF_intDiv_rg_denom2_BITS_62_TO_0___h3914 = (tUInt64)(9223372036854775807llu & DEF_y__h4031);
  DEF_rg_v1_BITS_63_TO_1___h3872 = (tUInt64)(DEF_b__h5980 >> 1u);
  DEF_y__h3857 = (((tUInt64)((tUInt8)0u)) << 63u) | DEF_rg_v1_BITS_63_TO_1___h3872;
  DEF_intDiv_rg_denom2_4_ULE_0_CONCAT_rg_v1_BITS_63__ETC___d47 = DEF_y__h4031 <= DEF_y__h3857;
  DEF_NOT_intDiv_rg_denom2_4_ULE_0_CONCAT_rg_v1_BITS_ETC___d53 = !DEF_intDiv_rg_denom2_4_ULE_0_CONCAT_rg_v1_BITS_63__ETC___d47;
  DEF_x__h3892 = (DEF_intDiv_rg_denom2_BITS_62_TO_0___h3914 << 1u) | (tUInt64)((tUInt8)0u);
  DEF_x__h3919 = (DEF_intDiv_rg_n_BITS_62_TO_0___h3927 << 1u) | (tUInt64)((tUInt8)0u);
  if (DEF_intDiv_rg_denom2_4_ULE_0_CONCAT_rg_v1_BITS_63__ETC___d47)
    INST_intDiv_rg_denom2.METH_write(DEF_x__h3892);
  if (DEF_intDiv_rg_denom2_4_ULE_0_CONCAT_rg_v1_BITS_63__ETC___d47)
    INST_intDiv_rg_n.METH_write(DEF_x__h3919);
  if (DEF_NOT_intDiv_rg_denom2_4_ULE_0_CONCAT_rg_v1_BITS_ETC___d53)
    INST_intDiv_rg_state.METH_write((tUInt8)3u);
}

void MOD_mkRISCV_MBox::RL_intDiv_rl_loop2()
{
  tUInt64 DEF_x__h4038;
  tUInt64 DEF_x__h4182;
  tUInt8 DEF_NOT_rg_v1_ULT_rg_v2_5_8_AND_rg_v1_ULT_intDiv_r_ETC___d72;
  tUInt8 DEF_NOT_rg_v1_ULT_rg_v2_5___d58;
  tUInt8 DEF_NOT_rg_v1_ULT_rg_v2_5_8_AND_NOT_rg_v1_ULT_intD_ETC___d61;
  tUInt64 DEF_x__h3996;
  tUInt64 DEF_IF_rg_v1_ULT_rg_v2_5_THEN_NEG_rg_v1_6_ELSE_rg__ETC___d71;
  tUInt64 DEF_x__h4174;
  tUInt64 DEF_x__h4100;
  tUInt8 DEF_rg_v1_ULT_rg_v2___d55;
  tUInt64 DEF_IF_rg_v1_ULT_rg_v2_5_THEN_NEG_intDiv_rg_quo_3__ETC___d66;
  tUInt64 DEF_intDiv_rg_denom2_BITS_63_TO_1___h4060;
  tUInt64 DEF_intDiv_rg_n_BITS_63_TO_1___h4189;
  tUInt8 DEF_intDiv_rg_quoIsNeg__h4076;
  tUInt8 DEF_intDiv_rg_remIsNeg__h4157;
  tUInt8 DEF_rg_v1_ULT_rg_v2_5_AND_intDiv_rg_remIsNeg_7_8_O_ETC___d69;
  tUInt8 DEF_rg_v1_ULT_rg_v2_5_AND_intDiv_rg_quoIsNeg_6_7_O_ETC___d62;
  tUInt8 DEF_rg_v1_ULT_intDiv_rg_denom2_4___d59;
  DEF_intDiv_rg_remIsNeg__h4157 = INST_intDiv_rg_remIsNeg.METH_read();
  DEF_intDiv_rg_quoIsNeg__h4076 = INST_intDiv_rg_quoIsNeg.METH_read();
  DEF_a__h5979 = INST_intDiv_rg_quo.METH_read();
  DEF_y__h4179 = INST_intDiv_rg_n.METH_read();
  DEF_y__h4031 = INST_intDiv_rg_denom2.METH_read();
  DEF_rg_v2__h5639 = INST_rg_v2.METH_read();
  DEF_b__h5980 = INST_rg_v1.METH_read();
  DEF_rg_v1_ULT_intDiv_rg_denom2_4___d59 = DEF_b__h5980 < DEF_y__h4031;
  DEF_intDiv_rg_n_BITS_63_TO_1___h4189 = (tUInt64)(DEF_y__h4179 >> 1u);
  DEF_intDiv_rg_denom2_BITS_63_TO_1___h4060 = (tUInt64)(DEF_y__h4031 >> 1u);
  DEF_rg_v1_ULT_rg_v2___d55 = DEF_b__h5980 < DEF_rg_v2__h5639;
  DEF_x__h4100 = -DEF_a__h5979;
  DEF_x__h4174 = DEF_a__h5979 + DEF_y__h4179;
  DEF_IF_rg_v1_ULT_rg_v2_5_THEN_NEG_intDiv_rg_quo_3__ETC___d66 = DEF_rg_v1_ULT_rg_v2___d55 ? DEF_x__h4100 : DEF_x__h4174;
  DEF_x__h4159 = -DEF_b__h5980;
  DEF_x__h3996 = DEF_b__h5980 - DEF_y__h4031;
  DEF_IF_rg_v1_ULT_rg_v2_5_THEN_NEG_rg_v1_6_ELSE_rg__ETC___d71 = DEF_rg_v1_ULT_rg_v2___d55 ? DEF_x__h4159 : DEF_x__h3996;
  DEF_NOT_rg_v1_ULT_rg_v2_5___d58 = !DEF_rg_v1_ULT_rg_v2___d55;
  DEF_NOT_rg_v1_ULT_rg_v2_5_8_AND_NOT_rg_v1_ULT_intD_ETC___d61 = DEF_NOT_rg_v1_ULT_rg_v2_5___d58 && !DEF_rg_v1_ULT_intDiv_rg_denom2_4___d59;
  DEF_rg_v1_ULT_rg_v2_5_AND_intDiv_rg_quoIsNeg_6_7_O_ETC___d62 = (DEF_rg_v1_ULT_rg_v2___d55 && DEF_intDiv_rg_quoIsNeg__h4076) || DEF_NOT_rg_v1_ULT_rg_v2_5_8_AND_NOT_rg_v1_ULT_intD_ETC___d61;
  DEF_rg_v1_ULT_rg_v2_5_AND_intDiv_rg_remIsNeg_7_8_O_ETC___d69 = (DEF_rg_v1_ULT_rg_v2___d55 && DEF_intDiv_rg_remIsNeg__h4157) || DEF_NOT_rg_v1_ULT_rg_v2_5_8_AND_NOT_rg_v1_ULT_intD_ETC___d61;
  DEF_NOT_rg_v1_ULT_rg_v2_5_8_AND_rg_v1_ULT_intDiv_r_ETC___d72 = DEF_NOT_rg_v1_ULT_rg_v2_5___d58 && DEF_rg_v1_ULT_intDiv_rg_denom2_4___d59;
  DEF_x__h4182 = (((tUInt64)((tUInt8)0u)) << 63u) | DEF_intDiv_rg_n_BITS_63_TO_1___h4189;
  DEF_x__h4038 = (((tUInt64)((tUInt8)0u)) << 63u) | DEF_intDiv_rg_denom2_BITS_63_TO_1___h4060;
  if (DEF_rg_v1_ULT_rg_v2_5_AND_intDiv_rg_quoIsNeg_6_7_O_ETC___d62)
    INST_intDiv_rg_quo.METH_write(DEF_IF_rg_v1_ULT_rg_v2_5_THEN_NEG_intDiv_rg_quo_3__ETC___d66);
  if (DEF_rg_v1_ULT_rg_v2_5_AND_intDiv_rg_remIsNeg_7_8_O_ETC___d69)
    INST_rg_v1.METH_write(DEF_IF_rg_v1_ULT_rg_v2_5_THEN_NEG_rg_v1_6_ELSE_rg__ETC___d71);
  if (DEF_rg_v1_ULT_rg_v2___d55)
    INST_intDiv_rg_state.METH_write((tUInt8)4u);
  if (DEF_NOT_rg_v1_ULT_rg_v2_5_8_AND_rg_v1_ULT_intDiv_r_ETC___d72)
    INST_intDiv_rg_n.METH_write(DEF_x__h4182);
  if (DEF_NOT_rg_v1_ULT_rg_v2_5_8_AND_rg_v1_ULT_intDiv_r_ETC___d72)
    INST_intDiv_rg_denom2.METH_write(DEF_x__h4038);
}

void MOD_mkRISCV_MBox::RL_rl_mul()
{
  tUInt64 DEF_x__h5303;
  tUInt64 DEF_y__h4626;
  tUInt64 DEF_y__h4793;
  tUInt64 DEF_x__h5387;
  tUInt64 DEF_x__h5072;
  tUInt64 DEF_y__h5388;
  tUInt64 DEF_y__h5490;
  tUInt64 DEF_x__h5123;
  tUInt32 DEF_v__h5659;
  tUInt64 DEF_x__h5345;
  tUInt64 DEF_x__h4721;
  tUInt8 DEF_NOT_cfg_verbosity_read__9_ULE_1_0___d81;
  tUInt8 DEF_NOT_rg_is_OP_not_OP_32_2_3_OR_NOT_rg_f3_4_EQ_0_ETC___d101;
  tUInt8 DEF_rg_f3_4_EQ_0b0___d85;
  tUInt8 DEF_rg_f3_4_EQ_0b1___d88;
  tUInt8 DEF_rg_f3_4_EQ_0b10___d94;
  tUInt8 DEF_rg_f3_4_EQ_0b11___d91;
  tUInt64 DEF_b__h5253;
  tUInt64 DEF_b__h4574;
  tUInt64 DEF_v__h5559;
  tUInt64 DEF_v__h5542;
  tUInt64 DEF_v__h5175;
  tUInt64 DEF_v__h4896;
  tUInt64 DEF_v__h4455;
  tUInt64 DEF_v__h4421;
  tUInt32 DEF_x__h5595;
  tUInt32 DEF_rg_v1_BITS_63_TO_32___h5096;
  tUInt32 DEF_x__h5619;
  tUInt32 DEF_rg_v2_BITS_63_TO_32___h5433;
  tUInt64 DEF_IF_rg_v2_BIT_63_0_THEN_INV_rg_v2_13_PLUS_1_14__ETC___d115;
  tUInt64 DEF_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_PLUS_1_09__ETC___d110;
  tUInt32 DEF_x__h5571;
  tUInt64 DEF_hh__h4597;
  tUInt64 DEF_v__h4441;
  tUInt64 DEF_lh__h4595;
  tUInt64 DEF_hl__h4596;
  tUInt64 DEF_ll__h4594;
  tUInt64 DEF_v__h4468;
  tUInt64 DEF_hh__h4941;
  tUInt64 DEF_lh__h4939;
  tUInt64 DEF_hl__h4940;
  tUInt64 DEF_ll__h4938;
  tUInt64 DEF_v__h4909;
  tUInt64 DEF_hh__h5275;
  tUInt64 DEF_lh__h5273;
  tUInt64 DEF_hl__h5274;
  tUInt64 DEF_ll__h5272;
  tUInt64 DEF_v__h5188;
  tUInt8 DEF_NOT_rg_is_OP_not_OP_32_2___d83;
  tUInt8 DEF_NOT_rg_f3_4_EQ_0b0_5___d86;
  tUInt8 DEF__read__h49;
  DEF__read__h49 = INST_cfg_verbosity.METH_read();
  DEF_rg_is_OP_not_OP_32__h4425 = INST_rg_is_OP_not_OP_32.METH_read();
  DEF_x__h5546 = INST_rg_f3.METH_read();
  DEF_NOT_rg_is_OP_not_OP_32_2___d83 = !DEF_rg_is_OP_not_OP_32__h4425;
  DEF_rg_v2__h5639 = INST_rg_v2.METH_read();
  DEF_rg_v2_BIT_63___h770 = (tUInt8)(DEF_rg_v2__h5639 >> 63u);
  DEF_b__h5980 = INST_rg_v1.METH_read();
  DEF_rg_v1_BIT_63___h719 = (tUInt8)(DEF_b__h5980 >> 63u);
  wop_mul(WideData(64u, DEF_b__h5980), WideData(64u, DEF_rg_v2__h5639), DEF_rg_v1_MUL_rg_v2___d105);
  DEF_v__h4441 = primExtract64(64u, 128u, DEF_rg_v1_MUL_rg_v2___d105, 32u, 63u, 32u, 0u);
  DEF_rg_v2_BITS_63_TO_32___h5433 = (tUInt32)(DEF_rg_v2__h5639 >> 32u);
  DEF_x__h5619 = (tUInt32)(DEF_rg_v2__h5639);
  DEF_rg_v1_BITS_63_TO_32___h5096 = (tUInt32)(DEF_b__h5980 >> 32u);
  DEF_x__h5595 = (tUInt32)(DEF_b__h5980);
  wop_mul(WideData(64u, primSignExt64(64u, 32u, (tUInt32)(DEF_x__h5595))),
	  WideData(64u, primSignExt64(64u, 32u, (tUInt32)(DEF_x__h5619))),
	  DEF_SEXT_rg_v1_BITS_31_TO_0_49_87_MUL_SEXT_rg_v2_B_ETC___d189);
  DEF_x__h5571 = DEF_SEXT_rg_v1_BITS_31_TO_0_49_87_MUL_SEXT_rg_v2_B_ETC___d189.get_whole_word(0u);
  DEF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36 = DEF_rg_v1_BIT_63___h719 == DEF_rg_v2_BIT_63___h770;
  DEF_v__h5559 = primSignExt64(64u, 32u, (tUInt32)(DEF_x__h5571));
  DEF_rg_f3_4_EQ_0b11___d91 = DEF_x__h5546 == (tUInt8)3u;
  DEF_rg_f3_4_EQ_0b10___d94 = DEF_x__h5546 == (tUInt8)2u;
  DEF_rg_f3_4_EQ_0b1___d88 = DEF_x__h5546 == (tUInt8)1u;
  DEF_rg_f3_4_EQ_0b0___d85 = DEF_x__h5546 == (tUInt8)0u;
  DEF_NOT_rg_f3_4_EQ_0b0_5___d86 = !DEF_rg_f3_4_EQ_0b0___d85;
  DEF_v__h5542 = DEF_NOT_rg_is_OP_not_OP_32_2___d83 && DEF_rg_f3_4_EQ_0b0___d85 ? DEF_v__h5559 : 18446744073709551615llu;
  DEF_NOT_rg_is_OP_not_OP_32_2_3_OR_NOT_rg_f3_4_EQ_0_ETC___d101 = (DEF_NOT_rg_is_OP_not_OP_32_2___d83 || DEF_NOT_rg_f3_4_EQ_0b0_5___d86) && ((DEF_NOT_rg_is_OP_not_OP_32_2___d83 || !DEF_rg_f3_4_EQ_0b1___d88) && ((DEF_NOT_rg_is_OP_not_OP_32_2___d83 || !DEF_rg_f3_4_EQ_0b11___d91) && ((DEF_NOT_rg_is_OP_not_OP_32_2___d83 || !DEF_rg_f3_4_EQ_0b10___d94) && (DEF_rg_is_OP_not_OP_32__h4425 || DEF_NOT_rg_f3_4_EQ_0b0_5___d86))));
  DEF_NOT_cfg_verbosity_read__9_ULE_1_0___d81 = !(DEF__read__h49 <= (tUInt8)1u);
  DEF_x__h4721 = ~DEF_rg_v2__h5639;
  DEF_b__h4574 = DEF_x__h4721 + 1llu;
  DEF_IF_rg_v2_BIT_63_0_THEN_INV_rg_v2_13_PLUS_1_14__ETC___d115 = DEF_rg_v2_BIT_63___h770 ? DEF_b__h4574 : DEF_rg_v2__h5639;
  DEF_x__h5345 = ~DEF_b__h5980;
  DEF_b__h5253 = DEF_x__h5345 + 1llu;
  DEF_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_PLUS_1_09__ETC___d110 = DEF_rg_v1_BIT_63___h719 ? DEF_b__h5253 : DEF_b__h5980;
  DEF_x__h5123 = (((tUInt64)(0u)) << 32u) | (tUInt64)(DEF_x__h5595);
  DEF_y__h5490 = (((tUInt64)(0u)) << 32u) | (tUInt64)(DEF_x__h5619);
  wop_mul(WideData(64u, DEF_x__h5123),
	  WideData(64u, DEF_y__h5490),
	  DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d161);
  DEF_ll__h4938 = primExtract64(64u,
				128u,
				DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d161,
				32u,
				63u,
				32u,
				0u);
  DEF_y__h5388 = (((tUInt64)(0u)) << 32u) | (tUInt64)(DEF_rg_v2_BITS_63_TO_32___h5433);
  wop_mul(WideData(64u, DEF_x__h5123),
	  WideData(64u, DEF_y__h5388),
	  DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d151);
  DEF_lh__h4939 = primExtract64(64u,
				128u,
				DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d151,
				32u,
				63u,
				32u,
				0u);
  DEF_x__h5072 = (((tUInt64)(0u)) << 32u) | (tUInt64)(DEF_rg_v1_BITS_63_TO_32___h5096);
  wop_mul(WideData(64u, DEF_x__h5072),
	  WideData(64u, DEF_y__h5490),
	  DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d157);
  DEF_hl__h4940 = primExtract64(64u,
				128u,
				DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d157,
				32u,
				63u,
				32u,
				0u);
  wop_mul(WideData(64u, DEF_x__h5072),
	  WideData(64u, DEF_y__h5388),
	  DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d146);
  DEF_hh__h4941 = primExtract64(64u,
				128u,
				DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d146,
				32u,
				63u,
				32u,
				0u);
  DEF_x__h5387 = (((tUInt64)(0u)) << 32u) | (tUInt64)((tUInt32)(DEF_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_PLUS_1_09__ETC___d110));
  wop_mul(WideData(64u, DEF_x__h5387),
	  WideData(64u, DEF_y__h5490),
	  DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d178);
  DEF_ll__h5272 = primExtract64(64u,
				128u,
				DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d178,
				32u,
				63u,
				32u,
				0u);
  wop_mul(WideData(64u, DEF_x__h5387),
	  WideData(64u, DEF_y__h5388),
	  DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d170);
  DEF_lh__h5273 = primExtract64(64u,
				128u,
				DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d170,
				32u,
				63u,
				32u,
				0u);
  DEF_y__h4626 = (((tUInt64)(0u)) << 32u) | (tUInt64)((tUInt32)(DEF_IF_rg_v2_BIT_63_0_THEN_INV_rg_v2_13_PLUS_1_14__ETC___d115 >> 32u));
  wop_mul(WideData(64u, DEF_x__h5387),
	  WideData(64u, DEF_y__h4626),
	  DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d123);
  DEF_lh__h4595 = primExtract64(64u,
				128u,
				DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d123,
				32u,
				63u,
				32u,
				0u);
  DEF_y__h4793 = (((tUInt64)(0u)) << 32u) | (tUInt64)((tUInt32)(DEF_IF_rg_v2_BIT_63_0_THEN_INV_rg_v2_13_PLUS_1_14__ETC___d115));
  wop_mul(WideData(64u, DEF_x__h5387),
	  WideData(64u, DEF_y__h4793),
	  DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d133);
  DEF_ll__h4594 = primExtract64(64u,
				128u,
				DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d133,
				32u,
				63u,
				32u,
				0u);
  DEF_x__h5303 = (((tUInt64)(0u)) << 32u) | (tUInt64)((tUInt32)(DEF_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_PLUS_1_09__ETC___d110 >> 32u));
  wop_mul(WideData(64u, DEF_x__h5303),
	  WideData(64u, DEF_y__h5490),
	  DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d174);
  DEF_hl__h5274 = primExtract64(64u,
				128u,
				DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d174,
				32u,
				63u,
				32u,
				0u);
  wop_mul(WideData(64u, DEF_x__h5303),
	  WideData(64u, DEF_y__h5388),
	  DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d167);
  DEF_hh__h5275 = primExtract64(64u,
				128u,
				DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d167,
				32u,
				63u,
				32u,
				0u);
  wop_mul(WideData(64u, DEF_x__h5303),
	  WideData(64u, DEF_y__h4793),
	  DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d129);
  DEF_hl__h4596 = primExtract64(64u,
				128u,
				DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d129,
				32u,
				63u,
				32u,
				0u);
  wop_mul(WideData(64u, DEF_x__h5303),
	  WideData(64u, DEF_y__h4626),
	  DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d118);
  DEF_hh__h4597 = primExtract64(64u,
				128u,
				DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d118,
				32u,
				63u,
				32u,
				0u);
  DEF_y__h5296.set_whole_word((tUInt32)(0llu),
			      3u).build_concat((((tUInt64)((tUInt32)(0llu))) << 32u) | (tUInt64)((tUInt32)(DEF_ll__h5272 >> 32u)),
					       32u,
					       64u).set_whole_word((tUInt32)(DEF_ll__h5272), 0u);
  DEF_y__h5298.build_concat((((tUInt64)(0u)) << 32u) | (tUInt64)((tUInt32)(DEF_hl__h5274 >> 32u)),
			    64u,
			    64u).build_concat((((tUInt64)((tUInt32)(DEF_hl__h5274))) << 32u) | (tUInt64)(0u), 0u, 64u);
  DEF_x__h5299.set_whole_word((tUInt32)(DEF_hh__h5275 >> 32u),
			      3u).build_concat((((tUInt64)((tUInt32)(DEF_hh__h5275))) << 32u) | (tUInt64)((tUInt32)(0llu)),
					       32u,
					       64u).set_whole_word((tUInt32)(0llu), 0u);
  DEF_y__h5300.build_concat((((tUInt64)(0u)) << 32u) | (tUInt64)((tUInt32)(DEF_lh__h5273 >> 32u)),
			    64u,
			    64u).build_concat((((tUInt64)((tUInt32)(DEF_lh__h5273))) << 32u) | (tUInt64)(0u), 0u, 64u);
  wop_add(DEF_x__h5299, DEF_y__h5300, DEF_x__h5297);
  wop_add(DEF_x__h5297, DEF_y__h5298, DEF_x__h5295);
  wop_add(DEF_x__h5295, DEF_y__h5296, DEF_prod__h5195);
  wop_inv(DEF_prod__h5195, DEF_x__h5265);
  wop_add(DEF_x__h5265, UWide_literal_128_h1, DEF_prod___1__h5263);
  DEF_IF_rg_v1_BIT_63_5_THEN_INV_0x0_CONCAT_IF_rg_v1_ETC___d184 = DEF_rg_v1_BIT_63___h719 ? DEF_prod___1__h5263 : DEF_prod__h5195;
  DEF_v__h5188 = primExtract64(64u,
			       128u,
			       DEF_IF_rg_v1_BIT_63_5_THEN_INV_0x0_CONCAT_IF_rg_v1_ETC___d184,
			       32u,
			       127u,
			       32u,
			       64u);
  DEF_v__h5175 = DEF_rg_is_OP_not_OP_32__h4425 && DEF_rg_f3_4_EQ_0b10___d94 ? DEF_v__h5188 : DEF_v__h5542;
  DEF_y__h4962.set_whole_word((tUInt32)(0llu),
			      3u).build_concat((((tUInt64)((tUInt32)(0llu))) << 32u) | (tUInt64)((tUInt32)(DEF_ll__h4938 >> 32u)),
					       32u,
					       64u).set_whole_word((tUInt32)(DEF_ll__h4938), 0u);
  DEF_y__h4964.build_concat((((tUInt64)(0u)) << 32u) | (tUInt64)((tUInt32)(DEF_hl__h4940 >> 32u)),
			    64u,
			    64u).build_concat((((tUInt64)((tUInt32)(DEF_hl__h4940))) << 32u) | (tUInt64)(0u), 0u, 64u);
  DEF_x__h4965.set_whole_word((tUInt32)(DEF_hh__h4941 >> 32u),
			      3u).build_concat((((tUInt64)((tUInt32)(DEF_hh__h4941))) << 32u) | (tUInt64)((tUInt32)(0llu)),
					       32u,
					       64u).set_whole_word((tUInt32)(0llu), 0u);
  DEF_y__h4966.build_concat((((tUInt64)(0u)) << 32u) | (tUInt64)((tUInt32)(DEF_lh__h4939 >> 32u)),
			    64u,
			    64u).build_concat((((tUInt64)((tUInt32)(DEF_lh__h4939))) << 32u) | (tUInt64)(0u), 0u, 64u);
  wop_add(DEF_x__h4965, DEF_y__h4966, DEF_x__h4963);
  wop_add(DEF_x__h4963, DEF_y__h4964, DEF_x__h4961);
  wop_add(DEF_x__h4961, DEF_y__h4962, DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d164);
  DEF_v__h4909 = primExtract64(64u,
			       128u,
			       DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d164,
			       32u,
			       127u,
			       32u,
			       64u);
  DEF_v__h4896 = DEF_rg_is_OP_not_OP_32__h4425 && DEF_rg_f3_4_EQ_0b11___d91 ? DEF_v__h4909 : DEF_v__h5175;
  DEF_y__h4618.set_whole_word((tUInt32)(0llu),
			      3u).build_concat((((tUInt64)((tUInt32)(0llu))) << 32u) | (tUInt64)((tUInt32)(DEF_ll__h4594 >> 32u)),
					       32u,
					       64u).set_whole_word((tUInt32)(DEF_ll__h4594), 0u);
  DEF_y__h4620.build_concat((((tUInt64)(0u)) << 32u) | (tUInt64)((tUInt32)(DEF_hl__h4596 >> 32u)),
			    64u,
			    64u).build_concat((((tUInt64)((tUInt32)(DEF_hl__h4596))) << 32u) | (tUInt64)(0u), 0u, 64u);
  DEF_x__h4621.set_whole_word((tUInt32)(DEF_hh__h4597 >> 32u),
			      3u).build_concat((((tUInt64)((tUInt32)(DEF_hh__h4597))) << 32u) | (tUInt64)((tUInt32)(0llu)),
					       32u,
					       64u).set_whole_word((tUInt32)(0llu), 0u);
  DEF_y__h4622.build_concat((((tUInt64)(0u)) << 32u) | (tUInt64)((tUInt32)(DEF_lh__h4595 >> 32u)),
			    64u,
			    64u).build_concat((((tUInt64)((tUInt32)(DEF_lh__h4595))) << 32u) | (tUInt64)(0u), 0u, 64u);
  wop_add(DEF_x__h4621, DEF_y__h4622, DEF_x__h4619);
  wop_add(DEF_x__h4619, DEF_y__h4620, DEF_x__h4617);
  wop_add(DEF_x__h4617, DEF_y__h4618, DEF_prod__h4475);
  wop_inv(DEF_prod__h4475, DEF_x__h4587);
  wop_add(DEF_x__h4587, UWide_literal_128_h1, DEF_prod___1__h4585);
  DEF_IF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0_6_THEN_0x0_ETC___d139 = DEF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36 ? DEF_prod__h4475 : DEF_prod___1__h4585;
  DEF_v__h4468 = primExtract64(64u,
			       128u,
			       DEF_IF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0_6_THEN_0x0_ETC___d139,
			       32u,
			       127u,
			       32u,
			       64u);
  DEF_v__h4455 = DEF_rg_is_OP_not_OP_32__h4425 && DEF_rg_f3_4_EQ_0b1___d88 ? DEF_v__h4468 : DEF_v__h4896;
  DEF_v__h4421 = DEF_rg_is_OP_not_OP_32__h4425 && DEF_rg_f3_4_EQ_0b0___d85 ? DEF_v__h4441 : DEF_v__h4455;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_cfg_verbosity_read__9_ULE_1_0___d81)
      dollar_display(sim_hdl, this, "s", &__str_literal_1);
    if (DEF_NOT_rg_is_OP_not_OP_32_2_3_OR_NOT_rg_f3_4_EQ_0_ETC___d101)
      DEF_v__h5665 = dollar_stime(sim_hdl);
    else
      DEF_v__h5665 = 2863311530u;
  }
  DEF_v__h5659 = DEF_v__h5665 / 10u;
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_rg_is_OP_not_OP_32_2_3_OR_NOT_rg_f3_4_EQ_0_ETC___d101)
      dollar_display(sim_hdl, this, "s,32", &__str_literal_2, DEF_v__h5659);
    if (DEF_NOT_rg_is_OP_not_OP_32_2_3_OR_NOT_rg_f3_4_EQ_0_ETC___d101)
      dollar_display(sim_hdl,
		     this,
		     "s,3,64,64",
		     &__str_literal_3,
		     DEF_x__h5546,
		     DEF_b__h5980,
		     DEF_rg_v2__h5639);
    if (DEF_NOT_rg_is_OP_not_OP_32_2_3_OR_NOT_rg_f3_4_EQ_0_ETC___d101)
      dollar_finish(sim_hdl, "32", 1u);
  }
  INST_rg_result.METH_write(DEF_v__h4421);
  INST_rg_state.METH_write((tUInt8)1u);
}

void MOD_mkRISCV_MBox::RL_rl_mul2()
{
  tUInt64 DEF_result__h5866;
  DEF_result__h5866 = INST_rg_result.METH_read();
  INST_dw_valid.METH_wset((tUInt8)1u);
  INST_dw_result.METH_wset(DEF_result__h5866);
}

void MOD_mkRISCV_MBox::RL_rg_div_rem()
{
  tUInt64 DEF_result___1__h5934;
  tUInt64 DEF_new_value__h5928;
  tUInt64 DEF_IF_rg_f3_4_BIT_1_02_THEN_rg_v1_ELSE_intDiv_rg__ETC___d203;
  tUInt32 DEF_x__h5937;
  DEF_rg_is_OP_not_OP_32__h4425 = INST_rg_is_OP_not_OP_32.METH_read();
  DEF_x__h5546 = INST_rg_f3.METH_read();
  DEF_a__h5979 = INST_intDiv_rg_quo.METH_read();
  DEF_b__h5980 = INST_rg_v1.METH_read();
  DEF_IF_rg_f3_4_BIT_1_02_THEN_rg_v1_ELSE_intDiv_rg__ETC___d203 = (tUInt8)((tUInt8)1u & (DEF_x__h5546 >> 1u)) ? DEF_b__h5980 : DEF_a__h5979;
  DEF_x__h5937 = (tUInt32)(DEF_IF_rg_f3_4_BIT_1_02_THEN_rg_v1_ELSE_intDiv_rg__ETC___d203);
  DEF_result___1__h5934 = primSignExt64(64u, 32u, (tUInt32)(DEF_x__h5937));
  DEF_new_value__h5928 = DEF_rg_is_OP_not_OP_32__h4425 ? DEF_IF_rg_f3_4_BIT_1_02_THEN_rg_v1_ELSE_intDiv_rg__ETC___d203 : DEF_result___1__h5934;
  INST_dw_valid.METH_wset((tUInt8)1u);
  INST_dw_result.METH_wset(DEF_new_value__h5928);
}


/* Methods */

void MOD_mkRISCV_MBox::METH_set_verbosity(tUInt8 ARG_set_verbosity_verbosity)
{
  INST_cfg_verbosity.METH_write(ARG_set_verbosity_verbosity);
}

tUInt8 MOD_mkRISCV_MBox::METH_RDY_set_verbosity()
{
  tUInt8 DEF_CAN_FIRE_set_verbosity;
  tUInt8 PORT_RDY_set_verbosity;
  DEF_CAN_FIRE_set_verbosity = (tUInt8)1u;
  PORT_RDY_set_verbosity = DEF_CAN_FIRE_set_verbosity;
  return PORT_RDY_set_verbosity;
}

void MOD_mkRISCV_MBox::METH_req_reset()
{
}

tUInt8 MOD_mkRISCV_MBox::METH_RDY_req_reset()
{
  tUInt8 DEF_CAN_FIRE_req_reset;
  tUInt8 PORT_RDY_req_reset;
  DEF_CAN_FIRE_req_reset = (tUInt8)1u;
  PORT_RDY_req_reset = DEF_CAN_FIRE_req_reset;
  return PORT_RDY_req_reset;
}

void MOD_mkRISCV_MBox::METH_rsp_reset()
{
}

tUInt8 MOD_mkRISCV_MBox::METH_RDY_rsp_reset()
{
  tUInt8 DEF_CAN_FIRE_rsp_reset;
  tUInt8 PORT_RDY_rsp_reset;
  DEF_CAN_FIRE_rsp_reset = (tUInt8)1u;
  PORT_RDY_rsp_reset = DEF_CAN_FIRE_rsp_reset;
  return PORT_RDY_rsp_reset;
}

void MOD_mkRISCV_MBox::METH_req(tUInt8 ARG_req_is_OP_not_OP_32,
				tUInt8 ARG_req_f3,
				tUInt64 ARG_req_v1,
				tUInt64 ARG_req_v2)
{
  tUInt8 DEF_NOT_req_f3_BIT_0_07___d220;
  tUInt8 DEF_IF_req_f3_BIT_2_18_THEN_2_ELSE_0___d219;
  tUInt64 DEF_x__h6133;
  tUInt64 DEF_x__h6252;
  tUInt64 DEF__theResult___snd__h6190;
  tUInt64 DEF__theResult___snd__h6216;
  tUInt64 DEF__theResult___snd__h6160;
  tUInt64 DEF__theResult___fst__h6189;
  tUInt64 DEF__theResult___fst__h6215;
  tUInt64 DEF__theResult___fst__h6159;
  tUInt8 DEF_req_f3_BIT_0___d207;
  tUInt8 DEF_req_f3_BIT_2___d218;
  tUInt32 DEF_x__h6219;
  tUInt32 DEF_x__h6295;
  DEF_x__h6295 = (tUInt32)(ARG_req_v2);
  DEF_x__h6219 = (tUInt32)(ARG_req_v1);
  DEF_req_f3_BIT_2___d218 = (tUInt8)(ARG_req_f3 >> 2u);
  DEF_req_f3_BIT_0___d207 = (tUInt8)((tUInt8)1u & ARG_req_f3);
  DEF__theResult___fst__h6215 = (((tUInt64)(0u)) << 32u) | (tUInt64)(DEF_x__h6219);
  DEF__theResult___fst__h6189 = primSignExt64(64u, 32u, (tUInt32)(DEF_x__h6219));
  DEF__theResult___fst__h6159 = DEF_req_f3_BIT_0___d207 ? DEF__theResult___fst__h6215 : DEF__theResult___fst__h6189;
  DEF__theResult___snd__h6190 = primSignExt64(64u, 32u, (tUInt32)(DEF_x__h6295));
  DEF__theResult___snd__h6216 = (((tUInt64)(0u)) << 32u) | (tUInt64)(DEF_x__h6295);
  DEF__theResult___snd__h6160 = DEF_req_f3_BIT_0___d207 ? DEF__theResult___snd__h6216 : DEF__theResult___snd__h6190;
  DEF_x__h6252 = ARG_req_is_OP_not_OP_32 ? ARG_req_v2 : DEF__theResult___snd__h6160;
  DEF_x__h6133 = ARG_req_is_OP_not_OP_32 ? ARG_req_v1 : DEF__theResult___fst__h6159;
  DEF_NOT_req_f3_BIT_0_07___d220 = !DEF_req_f3_BIT_0___d207;
  DEF_IF_req_f3_BIT_2_18_THEN_2_ELSE_0___d219 = DEF_req_f3_BIT_2___d218 ? (tUInt8)2u : (tUInt8)0u;
  INST_rg_is_OP_not_OP_32.METH_write(ARG_req_is_OP_not_OP_32);
  INST_rg_v1.METH_write(DEF_x__h6133);
  INST_rg_f3.METH_write(ARG_req_f3);
  INST_rg_v2.METH_write(DEF_x__h6252);
  INST_rg_state.METH_write(DEF_IF_req_f3_BIT_2_18_THEN_2_ELSE_0___d219);
  if (DEF_req_f3_BIT_2___d218)
    INST_intDiv_rg_numer_is_signed.METH_write(DEF_NOT_req_f3_BIT_0_07___d220);
  if (DEF_req_f3_BIT_2___d218)
    INST_intDiv_rg_denom_is_signed.METH_write(DEF_NOT_req_f3_BIT_0_07___d220);
  if (DEF_req_f3_BIT_2___d218)
    INST_intDiv_rg_state.METH_write((tUInt8)1u);
}

tUInt8 MOD_mkRISCV_MBox::METH_RDY_req()
{
  tUInt8 PORT_RDY_req;
  tUInt8 DEF_CAN_FIRE_req;
  DEF_CAN_FIRE_req = (tUInt8)1u;
  PORT_RDY_req = DEF_CAN_FIRE_req;
  return PORT_RDY_req;
}

tUInt8 MOD_mkRISCV_MBox::METH_valid()
{
  tUInt8 DEF_dw_valid_wget____d222;
  tUInt8 DEF_dw_valid_whas____d221;
  tUInt8 PORT_valid;
  DEF_dw_valid_whas____d221 = INST_dw_valid.METH_whas();
  DEF_dw_valid_wget____d222 = INST_dw_valid.METH_wget();
  PORT_valid = DEF_dw_valid_whas____d221 && DEF_dw_valid_wget____d222;
  return PORT_valid;
}

tUInt8 MOD_mkRISCV_MBox::METH_RDY_valid()
{
  tUInt8 PORT_RDY_valid;
  tUInt8 DEF_CAN_FIRE_valid;
  DEF_CAN_FIRE_valid = (tUInt8)1u;
  PORT_RDY_valid = DEF_CAN_FIRE_valid;
  return PORT_RDY_valid;
}

tUInt64 MOD_mkRISCV_MBox::METH_word()
{
  tUInt64 DEF_x_wget__h4324;
  tUInt64 PORT_word;
  DEF_x_wget__h4324 = INST_dw_result.METH_wget();
  PORT_word = DEF_x_wget__h4324;
  return PORT_word;
}

tUInt8 MOD_mkRISCV_MBox::METH_RDY_word()
{
  tUInt8 PORT_RDY_word;
  tUInt8 DEF_CAN_FIRE_word;
  DEF_CAN_FIRE_word = (tUInt8)1u;
  PORT_RDY_word = DEF_CAN_FIRE_word;
  return PORT_RDY_word;
}


/* Reset routines */

void MOD_mkRISCV_MBox::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_intDiv_rg_state.reset_RST(ARG_rst_in);
  INST_cfg_verbosity.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkRISCV_MBox::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkRISCV_MBox::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_cfg_verbosity.dump_state(indent + 2u);
  INST_dw_result.dump_state(indent + 2u);
  INST_dw_valid.dump_state(indent + 2u);
  INST_intDiv_rg_denom2.dump_state(indent + 2u);
  INST_intDiv_rg_denom_is_signed.dump_state(indent + 2u);
  INST_intDiv_rg_n.dump_state(indent + 2u);
  INST_intDiv_rg_numer_is_signed.dump_state(indent + 2u);
  INST_intDiv_rg_quo.dump_state(indent + 2u);
  INST_intDiv_rg_quoIsNeg.dump_state(indent + 2u);
  INST_intDiv_rg_remIsNeg.dump_state(indent + 2u);
  INST_intDiv_rg_state.dump_state(indent + 2u);
  INST_rg_f3.dump_state(indent + 2u);
  INST_rg_is_OP_not_OP_32.dump_state(indent + 2u);
  INST_rg_result.dump_state(indent + 2u);
  INST_rg_state.dump_state(indent + 2u);
  INST_rg_v1.dump_state(indent + 2u);
  INST_rg_v2.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkRISCV_MBox::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 73u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0_6_THEN_0x0_ETC___d139", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_rg_v1_BIT_63_5_THEN_INV_0x0_CONCAT_IF_rg_v1_ETC___d184", 128u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "SEXT_rg_v1_BITS_31_TO_0_49_87_MUL_SEXT_rg_v2_B_ETC___d189", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d118", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d123", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d129", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d133", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d167", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d170", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d174", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d178", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d151", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d161", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d146", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d157", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d164", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "a__h5979", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "b__h5980", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "intDiv_rg_denom_is_signed__h553", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "intDiv_rg_numer_is_signed__h532", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "prod___1__h4585", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "prod___1__h5263", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "prod__h4475", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "prod__h5195", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rg_is_OP_not_OP_32__h4425", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rg_v1_BIT_63___h719", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rg_v1_MUL_rg_v2___d105", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rg_v2_BIT_63___h770", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rg_v2__h5639", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "v__h5665", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h4159", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h4587", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h4617", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h4619", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h4621", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h4961", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h4963", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h4965", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h5265", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h5295", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h5297", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h5299", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h5546", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h4031", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h4179", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h4618", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h4620", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h4622", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h4962", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h4964", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h4966", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h5296", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h5298", 128u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "y__h5300", 128u);
  num = INST_cfg_verbosity.dump_VCD_defs(num);
  num = INST_dw_result.dump_VCD_defs(num);
  num = INST_dw_valid.dump_VCD_defs(num);
  num = INST_intDiv_rg_denom2.dump_VCD_defs(num);
  num = INST_intDiv_rg_denom_is_signed.dump_VCD_defs(num);
  num = INST_intDiv_rg_n.dump_VCD_defs(num);
  num = INST_intDiv_rg_numer_is_signed.dump_VCD_defs(num);
  num = INST_intDiv_rg_quo.dump_VCD_defs(num);
  num = INST_intDiv_rg_quoIsNeg.dump_VCD_defs(num);
  num = INST_intDiv_rg_remIsNeg.dump_VCD_defs(num);
  num = INST_intDiv_rg_state.dump_VCD_defs(num);
  num = INST_rg_f3.dump_VCD_defs(num);
  num = INST_rg_is_OP_not_OP_32.dump_VCD_defs(num);
  num = INST_rg_result.dump_VCD_defs(num);
  num = INST_rg_state.dump_VCD_defs(num);
  num = INST_rg_v1.dump_VCD_defs(num);
  num = INST_rg_v2.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkRISCV_MBox::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkRISCV_MBox &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkRISCV_MBox::vcd_defs(tVCDDumpType dt, MOD_mkRISCV_MBox &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_IF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0_6_THEN_0x0_ETC___d139) != DEF_IF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0_6_THEN_0x0_ETC___d139)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0_6_THEN_0x0_ETC___d139, 128u);
	backing.DEF_IF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0_6_THEN_0x0_ETC___d139 = DEF_IF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0_6_THEN_0x0_ETC___d139;
      }
      ++num;
      if ((backing.DEF_IF_rg_v1_BIT_63_5_THEN_INV_0x0_CONCAT_IF_rg_v1_ETC___d184) != DEF_IF_rg_v1_BIT_63_5_THEN_INV_0x0_CONCAT_IF_rg_v1_ETC___d184)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_rg_v1_BIT_63_5_THEN_INV_0x0_CONCAT_IF_rg_v1_ETC___d184, 128u);
	backing.DEF_IF_rg_v1_BIT_63_5_THEN_INV_0x0_CONCAT_IF_rg_v1_ETC___d184 = DEF_IF_rg_v1_BIT_63_5_THEN_INV_0x0_CONCAT_IF_rg_v1_ETC___d184;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_SEXT_rg_v1_BITS_31_TO_0_49_87_MUL_SEXT_rg_v2_B_ETC___d189) != DEF_SEXT_rg_v1_BITS_31_TO_0_49_87_MUL_SEXT_rg_v2_B_ETC___d189)
      {
	vcd_write_val(sim_hdl, num, DEF_SEXT_rg_v1_BITS_31_TO_0_49_87_MUL_SEXT_rg_v2_B_ETC___d189, 128u);
	backing.DEF_SEXT_rg_v1_BITS_31_TO_0_49_87_MUL_SEXT_rg_v2_B_ETC___d189 = DEF_SEXT_rg_v1_BITS_31_TO_0_49_87_MUL_SEXT_rg_v2_B_ETC___d189;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d118) != DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d118)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d118, 128u);
	backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d118 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d118;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d123) != DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d123)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d123, 128u);
	backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d123 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d123;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d129) != DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d129)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d129, 128u);
	backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d129 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d129;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d133) != DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d133)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d133, 128u);
	backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d133 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d133;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d167) != DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d167)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d167, 128u);
	backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d167 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d167;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d170) != DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d170)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d170, 128u);
	backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d170 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d170;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d174) != DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d174)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d174, 128u);
	backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d174 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d174;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d178) != DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d178)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d178, 128u);
	backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d178 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d178;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d151) != DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d151)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d151, 128u);
	backing.DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d151 = DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d151;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d161) != DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d161)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d161, 128u);
	backing.DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d161 = DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d161;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d146) != DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d146)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d146, 128u);
	backing.DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d146 = DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d146;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d157) != DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d157)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d157, 128u);
	backing.DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d157 = DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d157;
      }
      ++num;
      if ((backing.DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d164) != DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d164)
      {
	vcd_write_val(sim_hdl, num, DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d164, 128u);
	backing.DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d164 = DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d164;
      }
      ++num;
      if ((backing.DEF_a__h5979) != DEF_a__h5979)
      {
	vcd_write_val(sim_hdl, num, DEF_a__h5979, 64u);
	backing.DEF_a__h5979 = DEF_a__h5979;
      }
      ++num;
      if ((backing.DEF_b__h5980) != DEF_b__h5980)
      {
	vcd_write_val(sim_hdl, num, DEF_b__h5980, 64u);
	backing.DEF_b__h5980 = DEF_b__h5980;
      }
      ++num;
      if ((backing.DEF_intDiv_rg_denom_is_signed__h553) != DEF_intDiv_rg_denom_is_signed__h553)
      {
	vcd_write_val(sim_hdl, num, DEF_intDiv_rg_denom_is_signed__h553, 1u);
	backing.DEF_intDiv_rg_denom_is_signed__h553 = DEF_intDiv_rg_denom_is_signed__h553;
      }
      ++num;
      if ((backing.DEF_intDiv_rg_numer_is_signed__h532) != DEF_intDiv_rg_numer_is_signed__h532)
      {
	vcd_write_val(sim_hdl, num, DEF_intDiv_rg_numer_is_signed__h532, 1u);
	backing.DEF_intDiv_rg_numer_is_signed__h532 = DEF_intDiv_rg_numer_is_signed__h532;
      }
      ++num;
      if ((backing.DEF_prod___1__h4585) != DEF_prod___1__h4585)
      {
	vcd_write_val(sim_hdl, num, DEF_prod___1__h4585, 128u);
	backing.DEF_prod___1__h4585 = DEF_prod___1__h4585;
      }
      ++num;
      if ((backing.DEF_prod___1__h5263) != DEF_prod___1__h5263)
      {
	vcd_write_val(sim_hdl, num, DEF_prod___1__h5263, 128u);
	backing.DEF_prod___1__h5263 = DEF_prod___1__h5263;
      }
      ++num;
      if ((backing.DEF_prod__h4475) != DEF_prod__h4475)
      {
	vcd_write_val(sim_hdl, num, DEF_prod__h4475, 128u);
	backing.DEF_prod__h4475 = DEF_prod__h4475;
      }
      ++num;
      if ((backing.DEF_prod__h5195) != DEF_prod__h5195)
      {
	vcd_write_val(sim_hdl, num, DEF_prod__h5195, 128u);
	backing.DEF_prod__h5195 = DEF_prod__h5195;
      }
      ++num;
      if ((backing.DEF_rg_is_OP_not_OP_32__h4425) != DEF_rg_is_OP_not_OP_32__h4425)
      {
	vcd_write_val(sim_hdl, num, DEF_rg_is_OP_not_OP_32__h4425, 1u);
	backing.DEF_rg_is_OP_not_OP_32__h4425 = DEF_rg_is_OP_not_OP_32__h4425;
      }
      ++num;
      if ((backing.DEF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36) != DEF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36)
      {
	vcd_write_val(sim_hdl, num, DEF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36, 1u);
	backing.DEF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36 = DEF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36;
      }
      ++num;
      if ((backing.DEF_rg_v1_BIT_63___h719) != DEF_rg_v1_BIT_63___h719)
      {
	vcd_write_val(sim_hdl, num, DEF_rg_v1_BIT_63___h719, 1u);
	backing.DEF_rg_v1_BIT_63___h719 = DEF_rg_v1_BIT_63___h719;
      }
      ++num;
      if ((backing.DEF_rg_v1_MUL_rg_v2___d105) != DEF_rg_v1_MUL_rg_v2___d105)
      {
	vcd_write_val(sim_hdl, num, DEF_rg_v1_MUL_rg_v2___d105, 128u);
	backing.DEF_rg_v1_MUL_rg_v2___d105 = DEF_rg_v1_MUL_rg_v2___d105;
      }
      ++num;
      if ((backing.DEF_rg_v2_BIT_63___h770) != DEF_rg_v2_BIT_63___h770)
      {
	vcd_write_val(sim_hdl, num, DEF_rg_v2_BIT_63___h770, 1u);
	backing.DEF_rg_v2_BIT_63___h770 = DEF_rg_v2_BIT_63___h770;
      }
      ++num;
      if ((backing.DEF_rg_v2__h5639) != DEF_rg_v2__h5639)
      {
	vcd_write_val(sim_hdl, num, DEF_rg_v2__h5639, 64u);
	backing.DEF_rg_v2__h5639 = DEF_rg_v2__h5639;
      }
      ++num;
      if ((backing.DEF_v__h5665) != DEF_v__h5665)
      {
	vcd_write_val(sim_hdl, num, DEF_v__h5665, 32u);
	backing.DEF_v__h5665 = DEF_v__h5665;
      }
      ++num;
      if ((backing.DEF_x__h4159) != DEF_x__h4159)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h4159, 64u);
	backing.DEF_x__h4159 = DEF_x__h4159;
      }
      ++num;
      if ((backing.DEF_x__h4587) != DEF_x__h4587)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h4587, 128u);
	backing.DEF_x__h4587 = DEF_x__h4587;
      }
      ++num;
      if ((backing.DEF_x__h4617) != DEF_x__h4617)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h4617, 128u);
	backing.DEF_x__h4617 = DEF_x__h4617;
      }
      ++num;
      if ((backing.DEF_x__h4619) != DEF_x__h4619)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h4619, 128u);
	backing.DEF_x__h4619 = DEF_x__h4619;
      }
      ++num;
      if ((backing.DEF_x__h4621) != DEF_x__h4621)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h4621, 128u);
	backing.DEF_x__h4621 = DEF_x__h4621;
      }
      ++num;
      if ((backing.DEF_x__h4961) != DEF_x__h4961)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h4961, 128u);
	backing.DEF_x__h4961 = DEF_x__h4961;
      }
      ++num;
      if ((backing.DEF_x__h4963) != DEF_x__h4963)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h4963, 128u);
	backing.DEF_x__h4963 = DEF_x__h4963;
      }
      ++num;
      if ((backing.DEF_x__h4965) != DEF_x__h4965)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h4965, 128u);
	backing.DEF_x__h4965 = DEF_x__h4965;
      }
      ++num;
      if ((backing.DEF_x__h5265) != DEF_x__h5265)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h5265, 128u);
	backing.DEF_x__h5265 = DEF_x__h5265;
      }
      ++num;
      if ((backing.DEF_x__h5295) != DEF_x__h5295)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h5295, 128u);
	backing.DEF_x__h5295 = DEF_x__h5295;
      }
      ++num;
      if ((backing.DEF_x__h5297) != DEF_x__h5297)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h5297, 128u);
	backing.DEF_x__h5297 = DEF_x__h5297;
      }
      ++num;
      if ((backing.DEF_x__h5299) != DEF_x__h5299)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h5299, 128u);
	backing.DEF_x__h5299 = DEF_x__h5299;
      }
      ++num;
      if ((backing.DEF_x__h5546) != DEF_x__h5546)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h5546, 3u);
	backing.DEF_x__h5546 = DEF_x__h5546;
      }
      ++num;
      if ((backing.DEF_y__h4031) != DEF_y__h4031)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h4031, 64u);
	backing.DEF_y__h4031 = DEF_y__h4031;
      }
      ++num;
      if ((backing.DEF_y__h4179) != DEF_y__h4179)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h4179, 64u);
	backing.DEF_y__h4179 = DEF_y__h4179;
      }
      ++num;
      if ((backing.DEF_y__h4618) != DEF_y__h4618)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h4618, 128u);
	backing.DEF_y__h4618 = DEF_y__h4618;
      }
      ++num;
      if ((backing.DEF_y__h4620) != DEF_y__h4620)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h4620, 128u);
	backing.DEF_y__h4620 = DEF_y__h4620;
      }
      ++num;
      if ((backing.DEF_y__h4622) != DEF_y__h4622)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h4622, 128u);
	backing.DEF_y__h4622 = DEF_y__h4622;
      }
      ++num;
      if ((backing.DEF_y__h4962) != DEF_y__h4962)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h4962, 128u);
	backing.DEF_y__h4962 = DEF_y__h4962;
      }
      ++num;
      if ((backing.DEF_y__h4964) != DEF_y__h4964)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h4964, 128u);
	backing.DEF_y__h4964 = DEF_y__h4964;
      }
      ++num;
      if ((backing.DEF_y__h4966) != DEF_y__h4966)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h4966, 128u);
	backing.DEF_y__h4966 = DEF_y__h4966;
      }
      ++num;
      if ((backing.DEF_y__h5296) != DEF_y__h5296)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h5296, 128u);
	backing.DEF_y__h5296 = DEF_y__h5296;
      }
      ++num;
      if ((backing.DEF_y__h5298) != DEF_y__h5298)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h5298, 128u);
	backing.DEF_y__h5298 = DEF_y__h5298;
      }
      ++num;
      if ((backing.DEF_y__h5300) != DEF_y__h5300)
      {
	vcd_write_val(sim_hdl, num, DEF_y__h5300, 128u);
	backing.DEF_y__h5300 = DEF_y__h5300;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_IF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0_6_THEN_0x0_ETC___d139, 128u);
      backing.DEF_IF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0_6_THEN_0x0_ETC___d139 = DEF_IF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0_6_THEN_0x0_ETC___d139;
      vcd_write_val(sim_hdl, num++, DEF_IF_rg_v1_BIT_63_5_THEN_INV_0x0_CONCAT_IF_rg_v1_ETC___d184, 128u);
      backing.DEF_IF_rg_v1_BIT_63_5_THEN_INV_0x0_CONCAT_IF_rg_v1_ETC___d184 = DEF_IF_rg_v1_BIT_63_5_THEN_INV_0x0_CONCAT_IF_rg_v1_ETC___d184;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_SEXT_rg_v1_BITS_31_TO_0_49_87_MUL_SEXT_rg_v2_B_ETC___d189, 128u);
      backing.DEF_SEXT_rg_v1_BITS_31_TO_0_49_87_MUL_SEXT_rg_v2_B_ETC___d189 = DEF_SEXT_rg_v1_BITS_31_TO_0_49_87_MUL_SEXT_rg_v2_B_ETC___d189;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d118, 128u);
      backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d118 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d118;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d123, 128u);
      backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d123 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d123;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d129, 128u);
      backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d129 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d129;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d133, 128u);
      backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d133 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d133;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d167, 128u);
      backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d167 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d167;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d170, 128u);
      backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d170 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d170;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d174, 128u);
      backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d174 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d174;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d178, 128u);
      backing.DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d178 = DEF__0x0_CONCAT_IF_rg_v1_BIT_63_5_THEN_INV_rg_v1_08_ETC___d178;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d151, 128u);
      backing.DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d151 = DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d151;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d161, 128u);
      backing.DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d161 = DEF__0x0_CONCAT_rg_v1_BITS_31_TO_0_49_50_MUL_0x0_CO_ETC___d161;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d146, 128u);
      backing.DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d146 = DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d146;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d157, 128u);
      backing.DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d157 = DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d157;
      vcd_write_val(sim_hdl, num++, DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d164, 128u);
      backing.DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d164 = DEF__0x0_CONCAT_rg_v1_BITS_63_TO_32_42_43_MUL_0x0_C_ETC___d164;
      vcd_write_val(sim_hdl, num++, DEF_a__h5979, 64u);
      backing.DEF_a__h5979 = DEF_a__h5979;
      vcd_write_val(sim_hdl, num++, DEF_b__h5980, 64u);
      backing.DEF_b__h5980 = DEF_b__h5980;
      vcd_write_val(sim_hdl, num++, DEF_intDiv_rg_denom_is_signed__h553, 1u);
      backing.DEF_intDiv_rg_denom_is_signed__h553 = DEF_intDiv_rg_denom_is_signed__h553;
      vcd_write_val(sim_hdl, num++, DEF_intDiv_rg_numer_is_signed__h532, 1u);
      backing.DEF_intDiv_rg_numer_is_signed__h532 = DEF_intDiv_rg_numer_is_signed__h532;
      vcd_write_val(sim_hdl, num++, DEF_prod___1__h4585, 128u);
      backing.DEF_prod___1__h4585 = DEF_prod___1__h4585;
      vcd_write_val(sim_hdl, num++, DEF_prod___1__h5263, 128u);
      backing.DEF_prod___1__h5263 = DEF_prod___1__h5263;
      vcd_write_val(sim_hdl, num++, DEF_prod__h4475, 128u);
      backing.DEF_prod__h4475 = DEF_prod__h4475;
      vcd_write_val(sim_hdl, num++, DEF_prod__h5195, 128u);
      backing.DEF_prod__h5195 = DEF_prod__h5195;
      vcd_write_val(sim_hdl, num++, DEF_rg_is_OP_not_OP_32__h4425, 1u);
      backing.DEF_rg_is_OP_not_OP_32__h4425 = DEF_rg_is_OP_not_OP_32__h4425;
      vcd_write_val(sim_hdl, num++, DEF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36, 1u);
      backing.DEF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36 = DEF_rg_v1_BIT_63_5_EQ_rg_v2_BIT_63_0___d36;
      vcd_write_val(sim_hdl, num++, DEF_rg_v1_BIT_63___h719, 1u);
      backing.DEF_rg_v1_BIT_63___h719 = DEF_rg_v1_BIT_63___h719;
      vcd_write_val(sim_hdl, num++, DEF_rg_v1_MUL_rg_v2___d105, 128u);
      backing.DEF_rg_v1_MUL_rg_v2___d105 = DEF_rg_v1_MUL_rg_v2___d105;
      vcd_write_val(sim_hdl, num++, DEF_rg_v2_BIT_63___h770, 1u);
      backing.DEF_rg_v2_BIT_63___h770 = DEF_rg_v2_BIT_63___h770;
      vcd_write_val(sim_hdl, num++, DEF_rg_v2__h5639, 64u);
      backing.DEF_rg_v2__h5639 = DEF_rg_v2__h5639;
      vcd_write_val(sim_hdl, num++, DEF_v__h5665, 32u);
      backing.DEF_v__h5665 = DEF_v__h5665;
      vcd_write_val(sim_hdl, num++, DEF_x__h4159, 64u);
      backing.DEF_x__h4159 = DEF_x__h4159;
      vcd_write_val(sim_hdl, num++, DEF_x__h4587, 128u);
      backing.DEF_x__h4587 = DEF_x__h4587;
      vcd_write_val(sim_hdl, num++, DEF_x__h4617, 128u);
      backing.DEF_x__h4617 = DEF_x__h4617;
      vcd_write_val(sim_hdl, num++, DEF_x__h4619, 128u);
      backing.DEF_x__h4619 = DEF_x__h4619;
      vcd_write_val(sim_hdl, num++, DEF_x__h4621, 128u);
      backing.DEF_x__h4621 = DEF_x__h4621;
      vcd_write_val(sim_hdl, num++, DEF_x__h4961, 128u);
      backing.DEF_x__h4961 = DEF_x__h4961;
      vcd_write_val(sim_hdl, num++, DEF_x__h4963, 128u);
      backing.DEF_x__h4963 = DEF_x__h4963;
      vcd_write_val(sim_hdl, num++, DEF_x__h4965, 128u);
      backing.DEF_x__h4965 = DEF_x__h4965;
      vcd_write_val(sim_hdl, num++, DEF_x__h5265, 128u);
      backing.DEF_x__h5265 = DEF_x__h5265;
      vcd_write_val(sim_hdl, num++, DEF_x__h5295, 128u);
      backing.DEF_x__h5295 = DEF_x__h5295;
      vcd_write_val(sim_hdl, num++, DEF_x__h5297, 128u);
      backing.DEF_x__h5297 = DEF_x__h5297;
      vcd_write_val(sim_hdl, num++, DEF_x__h5299, 128u);
      backing.DEF_x__h5299 = DEF_x__h5299;
      vcd_write_val(sim_hdl, num++, DEF_x__h5546, 3u);
      backing.DEF_x__h5546 = DEF_x__h5546;
      vcd_write_val(sim_hdl, num++, DEF_y__h4031, 64u);
      backing.DEF_y__h4031 = DEF_y__h4031;
      vcd_write_val(sim_hdl, num++, DEF_y__h4179, 64u);
      backing.DEF_y__h4179 = DEF_y__h4179;
      vcd_write_val(sim_hdl, num++, DEF_y__h4618, 128u);
      backing.DEF_y__h4618 = DEF_y__h4618;
      vcd_write_val(sim_hdl, num++, DEF_y__h4620, 128u);
      backing.DEF_y__h4620 = DEF_y__h4620;
      vcd_write_val(sim_hdl, num++, DEF_y__h4622, 128u);
      backing.DEF_y__h4622 = DEF_y__h4622;
      vcd_write_val(sim_hdl, num++, DEF_y__h4962, 128u);
      backing.DEF_y__h4962 = DEF_y__h4962;
      vcd_write_val(sim_hdl, num++, DEF_y__h4964, 128u);
      backing.DEF_y__h4964 = DEF_y__h4964;
      vcd_write_val(sim_hdl, num++, DEF_y__h4966, 128u);
      backing.DEF_y__h4966 = DEF_y__h4966;
      vcd_write_val(sim_hdl, num++, DEF_y__h5296, 128u);
      backing.DEF_y__h5296 = DEF_y__h5296;
      vcd_write_val(sim_hdl, num++, DEF_y__h5298, 128u);
      backing.DEF_y__h5298 = DEF_y__h5298;
      vcd_write_val(sim_hdl, num++, DEF_y__h5300, 128u);
      backing.DEF_y__h5300 = DEF_y__h5300;
    }
}

void MOD_mkRISCV_MBox::vcd_prims(tVCDDumpType dt, MOD_mkRISCV_MBox &backing)
{
  INST_cfg_verbosity.dump_VCD(dt, backing.INST_cfg_verbosity);
  INST_dw_result.dump_VCD(dt, backing.INST_dw_result);
  INST_dw_valid.dump_VCD(dt, backing.INST_dw_valid);
  INST_intDiv_rg_denom2.dump_VCD(dt, backing.INST_intDiv_rg_denom2);
  INST_intDiv_rg_denom_is_signed.dump_VCD(dt, backing.INST_intDiv_rg_denom_is_signed);
  INST_intDiv_rg_n.dump_VCD(dt, backing.INST_intDiv_rg_n);
  INST_intDiv_rg_numer_is_signed.dump_VCD(dt, backing.INST_intDiv_rg_numer_is_signed);
  INST_intDiv_rg_quo.dump_VCD(dt, backing.INST_intDiv_rg_quo);
  INST_intDiv_rg_quoIsNeg.dump_VCD(dt, backing.INST_intDiv_rg_quoIsNeg);
  INST_intDiv_rg_remIsNeg.dump_VCD(dt, backing.INST_intDiv_rg_remIsNeg);
  INST_intDiv_rg_state.dump_VCD(dt, backing.INST_intDiv_rg_state);
  INST_rg_f3.dump_VCD(dt, backing.INST_rg_f3);
  INST_rg_is_OP_not_OP_32.dump_VCD(dt, backing.INST_rg_is_OP_not_OP_32);
  INST_rg_result.dump_VCD(dt, backing.INST_rg_result);
  INST_rg_state.dump_VCD(dt, backing.INST_rg_state);
  INST_rg_v1.dump_VCD(dt, backing.INST_rg_v1);
  INST_rg_v2.dump_VCD(dt, backing.INST_rg_v2);
}
