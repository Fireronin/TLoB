/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Fri Mar 25 15:59:20 CET 2022
 * 
 */
#include "bluesim_primitives.h"
#include "mkSoC_Map.h"


/* Literal declarations */
static unsigned int const UWide_literal_151_h40000000000000000000ffff1fffff44000000_arr[] = { 1140850688u,
											      4280287231u,
											      255u,
											      0u,
											      4194304u };
static tUWide const UWide_literal_151_h40000000000000000000ffff1fffff44000000(151u,
									      UWide_literal_151_h40000000000000000000ffff1fffff44000000_arr);
static unsigned int const UWide_literal_151_h40000000000004000000ffff1fffff44000000_arr[] = { 1140850688u,
											      4280287231u,
											      255u,
											      4u,
											      4194304u };
static tUWide const UWide_literal_151_h40000000000004000000ffff1fffff44000000(151u,
									      UWide_literal_151_h40000000000004000000ffff1fffff44000000_arr);
static unsigned int const UWide_literal_151_h400000001c0000000000ffff1fffff44000000_arr[] = { 1140850688u,
											      4280287231u,
											      255u,
											      1835008u,
											      4194304u };
static tUWide const UWide_literal_151_h400000001c0000000000ffff1fffff44000000(151u,
									      UWide_literal_151_h400000001c0000000000ffff1fffff44000000_arr);
static unsigned int const UWide_literal_128_hc00000000000000040000000_arr[] = { 1073741824u,
										0u,
										3221225472u,
										0u };
static tUWide const UWide_literal_128_hc00000000000000040000000(128u,
								UWide_literal_128_hc00000000000000040000000_arr);
static unsigned int const UWide_literal_128_h800000000000000040000000_arr[] = { 1073741824u,
										0u,
										2147483648u,
										0u };
static tUWide const UWide_literal_128_h800000000000000040000000(128u,
								UWide_literal_128_h800000000000000040000000_arr);
static unsigned int const UWide_literal_128_h700000000000000000001000_arr[] = { 4096u,
										0u,
										1879048192u,
										0u };
static tUWide const UWide_literal_128_h700000000000000000001000(128u,
								UWide_literal_128_h700000000000000000001000_arr);
static unsigned int const UWide_literal_128_h623300000000000000010000_arr[] = { 65536u,
										0u,
										1647509504u,
										0u };
static tUWide const UWide_literal_128_h623300000000000000010000(128u,
								UWide_literal_128_h623300000000000000010000_arr);
static unsigned int const UWide_literal_128_h6fff00000000000000010000_arr[] = { 65536u,
										0u,
										1878982656u,
										0u };
static tUWide const UWide_literal_128_h6fff00000000000000010000(128u,
								UWide_literal_128_h6fff00000000000000010000_arr);
static unsigned int const UWide_literal_128_h623200000000000000001000_arr[] = { 4096u,
										0u,
										1647443968u,
										0u };
static tUWide const UWide_literal_128_h623200000000000000001000(128u,
								UWide_literal_128_h623200000000000000001000_arr);
static unsigned int const UWide_literal_128_h623400000000000000001000_arr[] = { 4096u,
										0u,
										1647575040u,
										0u };
static tUWide const UWide_literal_128_h623400000000000000001000(128u,
								UWide_literal_128_h623400000000000000001000_arr);
static unsigned int const UWide_literal_128_h400000000000000010000000_arr[] = { 268435456u,
										0u,
										1073741824u,
										0u };
static tUWide const UWide_literal_128_h400000000000000010000000(128u,
								UWide_literal_128_h400000000000000010000000_arr);
static unsigned int const UWide_literal_128_h623100000000000000001000_arr[] = { 4096u,
										0u,
										1647378432u,
										0u };
static tUWide const UWide_literal_128_h623100000000000000001000(128u,
								UWide_literal_128_h623100000000000000001000_arr);
static unsigned int const UWide_literal_128_h623000000000000000001000_arr[] = { 4096u,
										0u,
										1647312896u,
										0u };
static tUWide const UWide_literal_128_h623000000000000000001000(128u,
								UWide_literal_128_h623000000000000000001000_arr);
static unsigned int const UWide_literal_128_h622000000000000000010000_arr[] = { 65536u,
										0u,
										1646264320u,
										0u };
static tUWide const UWide_literal_128_h622000000000000000010000(128u,
								UWide_literal_128_h622000000000000000010000_arr);
static unsigned int const UWide_literal_128_h621000000000000000040000_arr[] = { 262144u,
										0u,
										1645215744u,
										0u };
static tUWide const UWide_literal_128_h621000000000000000040000(128u,
								UWide_literal_128_h621000000000000000040000_arr);
static unsigned int const UWide_literal_128_h100000000000000000010000_arr[] = { 65536u,
										0u,
										268435456u,
										0u };
static tUWide const UWide_literal_128_h100000000000000000010000(128u,
								UWide_literal_128_h100000000000000000010000_arr);
static unsigned int const UWide_literal_128_hc0000000000000000400000_arr[] = { 4194304u,
									       0u,
									       201326592u,
									       0u };
static tUWide const UWide_literal_128_hc0000000000000000400000(128u,
							       UWide_literal_128_hc0000000000000000400000_arr);


/* Constructor */
MOD_mkSoC_Map::MOD_mkSoC_Map(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent), __clk_handle_0(BAD_CLOCK_HANDLE), PORT_RST_N((tUInt8)1u)
{
  PORT_m_plic_addr_range.setSize(128u);
  PORT_m_plic_addr_range.clear();
  PORT_m_near_mem_io_addr_range.setSize(128u);
  PORT_m_near_mem_io_addr_range.clear();
  PORT_m_ethernet_0_addr_range.setSize(128u);
  PORT_m_ethernet_0_addr_range.clear();
  PORT_m_dma_0_addr_range.setSize(128u);
  PORT_m_dma_0_addr_range.clear();
  PORT_m_uart16550_0_addr_range.setSize(128u);
  PORT_m_uart16550_0_addr_range.clear();
  PORT_m_uart16550_1_addr_range.setSize(128u);
  PORT_m_uart16550_1_addr_range.clear();
  PORT_m_iic_0_addr_range.setSize(128u);
  PORT_m_iic_0_addr_range.clear();
  PORT_m_axi_quad_spi_0_full_addr_range.setSize(128u);
  PORT_m_axi_quad_spi_0_full_addr_range.clear();
  PORT_m_axi_quad_spi_0_lite_addr_range.setSize(128u);
  PORT_m_axi_quad_spi_0_lite_addr_range.clear();
  PORT_m_axi_quad_spi_1_addr_range.setSize(128u);
  PORT_m_axi_quad_spi_1_addr_range.clear();
  PORT_m_gpio_0_addr_range.setSize(128u);
  PORT_m_gpio_0_addr_range.clear();
  PORT_m_gpio_1_addr_range.setSize(128u);
  PORT_m_gpio_1_addr_range.clear();
  PORT_m_boot_rom_addr_range.setSize(128u);
  PORT_m_boot_rom_addr_range.clear();
  PORT_m_ddr4_0_uncached_addr_range.setSize(128u);
  PORT_m_ddr4_0_uncached_addr_range.clear();
  PORT_m_ddr4_0_cached_addr_range.setSize(128u);
  PORT_m_ddr4_0_cached_addr_range.clear();
  PORT_m_pcc_reset_value.setSize(151u);
  PORT_m_pcc_reset_value.clear();
  PORT_m_ddc_reset_value.setSize(151u);
  PORT_m_ddc_reset_value.clear();
  PORT_m_mtcc_reset_value.setSize(151u);
  PORT_m_mtcc_reset_value.clear();
  PORT_m_mepcc_reset_value.setSize(151u);
  PORT_m_mepcc_reset_value.clear();
  symbol_count = 19u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkSoC_Map::init_symbols_0()
{
  init_symbol(&symbols[0u],
	      "m_axi_quad_spi_0_full_addr_range",
	      SYM_PORT,
	      &PORT_m_axi_quad_spi_0_full_addr_range,
	      128u);
  init_symbol(&symbols[1u],
	      "m_axi_quad_spi_0_lite_addr_range",
	      SYM_PORT,
	      &PORT_m_axi_quad_spi_0_lite_addr_range,
	      128u);
  init_symbol(&symbols[2u],
	      "m_axi_quad_spi_1_addr_range",
	      SYM_PORT,
	      &PORT_m_axi_quad_spi_1_addr_range,
	      128u);
  init_symbol(&symbols[3u], "m_boot_rom_addr_range", SYM_PORT, &PORT_m_boot_rom_addr_range, 128u);
  init_symbol(&symbols[4u], "m_ddc_reset_value", SYM_PORT, &PORT_m_ddc_reset_value, 151u);
  init_symbol(&symbols[5u],
	      "m_ddr4_0_cached_addr_range",
	      SYM_PORT,
	      &PORT_m_ddr4_0_cached_addr_range,
	      128u);
  init_symbol(&symbols[6u],
	      "m_ddr4_0_uncached_addr_range",
	      SYM_PORT,
	      &PORT_m_ddr4_0_uncached_addr_range,
	      128u);
  init_symbol(&symbols[7u], "m_dma_0_addr_range", SYM_PORT, &PORT_m_dma_0_addr_range, 128u);
  init_symbol(&symbols[8u], "m_ethernet_0_addr_range", SYM_PORT, &PORT_m_ethernet_0_addr_range, 128u);
  init_symbol(&symbols[9u], "m_gpio_0_addr_range", SYM_PORT, &PORT_m_gpio_0_addr_range, 128u);
  init_symbol(&symbols[10u], "m_gpio_1_addr_range", SYM_PORT, &PORT_m_gpio_1_addr_range, 128u);
  init_symbol(&symbols[11u], "m_iic_0_addr_range", SYM_PORT, &PORT_m_iic_0_addr_range, 128u);
  init_symbol(&symbols[12u], "m_mepcc_reset_value", SYM_PORT, &PORT_m_mepcc_reset_value, 151u);
  init_symbol(&symbols[13u], "m_mtcc_reset_value", SYM_PORT, &PORT_m_mtcc_reset_value, 151u);
  init_symbol(&symbols[14u],
	      "m_near_mem_io_addr_range",
	      SYM_PORT,
	      &PORT_m_near_mem_io_addr_range,
	      128u);
  init_symbol(&symbols[15u], "m_pcc_reset_value", SYM_PORT, &PORT_m_pcc_reset_value, 151u);
  init_symbol(&symbols[16u], "m_plic_addr_range", SYM_PORT, &PORT_m_plic_addr_range, 128u);
  init_symbol(&symbols[17u],
	      "m_uart16550_0_addr_range",
	      SYM_PORT,
	      &PORT_m_uart16550_0_addr_range,
	      128u);
  init_symbol(&symbols[18u],
	      "m_uart16550_1_addr_range",
	      SYM_PORT,
	      &PORT_m_uart16550_1_addr_range,
	      128u);
}


/* Rule actions */


/* Methods */

tUWide MOD_mkSoC_Map::METH_m_plic_addr_range()
{
  PORT_m_plic_addr_range = UWide_literal_128_hc0000000000000000400000;
  return PORT_m_plic_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_plic_addr_range()
{
  tUInt8 PORT_RDY_m_plic_addr_range;
  tUInt8 DEF_CAN_FIRE_m_plic_addr_range;
  DEF_CAN_FIRE_m_plic_addr_range = (tUInt8)1u;
  PORT_RDY_m_plic_addr_range = DEF_CAN_FIRE_m_plic_addr_range;
  return PORT_RDY_m_plic_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_near_mem_io_addr_range()
{
  PORT_m_near_mem_io_addr_range = UWide_literal_128_h100000000000000000010000;
  return PORT_m_near_mem_io_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_near_mem_io_addr_range()
{
  tUInt8 PORT_RDY_m_near_mem_io_addr_range;
  tUInt8 DEF_CAN_FIRE_m_near_mem_io_addr_range;
  DEF_CAN_FIRE_m_near_mem_io_addr_range = (tUInt8)1u;
  PORT_RDY_m_near_mem_io_addr_range = DEF_CAN_FIRE_m_near_mem_io_addr_range;
  return PORT_RDY_m_near_mem_io_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_ethernet_0_addr_range()
{
  PORT_m_ethernet_0_addr_range = UWide_literal_128_h621000000000000000040000;
  return PORT_m_ethernet_0_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_ethernet_0_addr_range()
{
  tUInt8 PORT_RDY_m_ethernet_0_addr_range;
  tUInt8 DEF_CAN_FIRE_m_ethernet_0_addr_range;
  DEF_CAN_FIRE_m_ethernet_0_addr_range = (tUInt8)1u;
  PORT_RDY_m_ethernet_0_addr_range = DEF_CAN_FIRE_m_ethernet_0_addr_range;
  return PORT_RDY_m_ethernet_0_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_dma_0_addr_range()
{
  PORT_m_dma_0_addr_range = UWide_literal_128_h622000000000000000010000;
  return PORT_m_dma_0_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_dma_0_addr_range()
{
  tUInt8 PORT_RDY_m_dma_0_addr_range;
  tUInt8 DEF_CAN_FIRE_m_dma_0_addr_range;
  DEF_CAN_FIRE_m_dma_0_addr_range = (tUInt8)1u;
  PORT_RDY_m_dma_0_addr_range = DEF_CAN_FIRE_m_dma_0_addr_range;
  return PORT_RDY_m_dma_0_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_uart16550_0_addr_range()
{
  PORT_m_uart16550_0_addr_range = UWide_literal_128_h623000000000000000001000;
  return PORT_m_uart16550_0_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_uart16550_0_addr_range()
{
  tUInt8 PORT_RDY_m_uart16550_0_addr_range;
  tUInt8 DEF_CAN_FIRE_m_uart16550_0_addr_range;
  DEF_CAN_FIRE_m_uart16550_0_addr_range = (tUInt8)1u;
  PORT_RDY_m_uart16550_0_addr_range = DEF_CAN_FIRE_m_uart16550_0_addr_range;
  return PORT_RDY_m_uart16550_0_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_uart16550_1_addr_range()
{
  PORT_m_uart16550_1_addr_range = UWide_literal_128_h623400000000000000001000;
  return PORT_m_uart16550_1_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_uart16550_1_addr_range()
{
  tUInt8 PORT_RDY_m_uart16550_1_addr_range;
  tUInt8 DEF_CAN_FIRE_m_uart16550_1_addr_range;
  DEF_CAN_FIRE_m_uart16550_1_addr_range = (tUInt8)1u;
  PORT_RDY_m_uart16550_1_addr_range = DEF_CAN_FIRE_m_uart16550_1_addr_range;
  return PORT_RDY_m_uart16550_1_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_iic_0_addr_range()
{
  PORT_m_iic_0_addr_range = UWide_literal_128_h623100000000000000001000;
  return PORT_m_iic_0_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_iic_0_addr_range()
{
  tUInt8 PORT_RDY_m_iic_0_addr_range;
  tUInt8 DEF_CAN_FIRE_m_iic_0_addr_range;
  DEF_CAN_FIRE_m_iic_0_addr_range = (tUInt8)1u;
  PORT_RDY_m_iic_0_addr_range = DEF_CAN_FIRE_m_iic_0_addr_range;
  return PORT_RDY_m_iic_0_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_axi_quad_spi_0_full_addr_range()
{
  PORT_m_axi_quad_spi_0_full_addr_range = UWide_literal_128_h400000000000000010000000;
  return PORT_m_axi_quad_spi_0_full_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_axi_quad_spi_0_full_addr_range()
{
  tUInt8 PORT_RDY_m_axi_quad_spi_0_full_addr_range;
  tUInt8 DEF_CAN_FIRE_m_axi_quad_spi_0_full_addr_range;
  DEF_CAN_FIRE_m_axi_quad_spi_0_full_addr_range = (tUInt8)1u;
  PORT_RDY_m_axi_quad_spi_0_full_addr_range = DEF_CAN_FIRE_m_axi_quad_spi_0_full_addr_range;
  return PORT_RDY_m_axi_quad_spi_0_full_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_axi_quad_spi_0_lite_addr_range()
{
  PORT_m_axi_quad_spi_0_lite_addr_range = UWide_literal_128_h623400000000000000001000;
  return PORT_m_axi_quad_spi_0_lite_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_axi_quad_spi_0_lite_addr_range()
{
  tUInt8 PORT_RDY_m_axi_quad_spi_0_lite_addr_range;
  tUInt8 DEF_CAN_FIRE_m_axi_quad_spi_0_lite_addr_range;
  DEF_CAN_FIRE_m_axi_quad_spi_0_lite_addr_range = (tUInt8)1u;
  PORT_RDY_m_axi_quad_spi_0_lite_addr_range = DEF_CAN_FIRE_m_axi_quad_spi_0_lite_addr_range;
  return PORT_RDY_m_axi_quad_spi_0_lite_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_axi_quad_spi_1_addr_range()
{
  PORT_m_axi_quad_spi_1_addr_range = UWide_literal_128_h623200000000000000001000;
  return PORT_m_axi_quad_spi_1_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_axi_quad_spi_1_addr_range()
{
  tUInt8 PORT_RDY_m_axi_quad_spi_1_addr_range;
  tUInt8 DEF_CAN_FIRE_m_axi_quad_spi_1_addr_range;
  DEF_CAN_FIRE_m_axi_quad_spi_1_addr_range = (tUInt8)1u;
  PORT_RDY_m_axi_quad_spi_1_addr_range = DEF_CAN_FIRE_m_axi_quad_spi_1_addr_range;
  return PORT_RDY_m_axi_quad_spi_1_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_gpio_0_addr_range()
{
  PORT_m_gpio_0_addr_range = UWide_literal_128_h6fff00000000000000010000;
  return PORT_m_gpio_0_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_gpio_0_addr_range()
{
  tUInt8 PORT_RDY_m_gpio_0_addr_range;
  tUInt8 DEF_CAN_FIRE_m_gpio_0_addr_range;
  DEF_CAN_FIRE_m_gpio_0_addr_range = (tUInt8)1u;
  PORT_RDY_m_gpio_0_addr_range = DEF_CAN_FIRE_m_gpio_0_addr_range;
  return PORT_RDY_m_gpio_0_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_gpio_1_addr_range()
{
  PORT_m_gpio_1_addr_range = UWide_literal_128_h623300000000000000010000;
  return PORT_m_gpio_1_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_gpio_1_addr_range()
{
  tUInt8 PORT_RDY_m_gpio_1_addr_range;
  tUInt8 DEF_CAN_FIRE_m_gpio_1_addr_range;
  DEF_CAN_FIRE_m_gpio_1_addr_range = (tUInt8)1u;
  PORT_RDY_m_gpio_1_addr_range = DEF_CAN_FIRE_m_gpio_1_addr_range;
  return PORT_RDY_m_gpio_1_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_boot_rom_addr_range()
{
  PORT_m_boot_rom_addr_range = UWide_literal_128_h700000000000000000001000;
  return PORT_m_boot_rom_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_boot_rom_addr_range()
{
  tUInt8 PORT_RDY_m_boot_rom_addr_range;
  tUInt8 DEF_CAN_FIRE_m_boot_rom_addr_range;
  DEF_CAN_FIRE_m_boot_rom_addr_range = (tUInt8)1u;
  PORT_RDY_m_boot_rom_addr_range = DEF_CAN_FIRE_m_boot_rom_addr_range;
  return PORT_RDY_m_boot_rom_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_ddr4_0_uncached_addr_range()
{
  PORT_m_ddr4_0_uncached_addr_range = UWide_literal_128_h800000000000000040000000;
  return PORT_m_ddr4_0_uncached_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_ddr4_0_uncached_addr_range()
{
  tUInt8 PORT_RDY_m_ddr4_0_uncached_addr_range;
  tUInt8 DEF_CAN_FIRE_m_ddr4_0_uncached_addr_range;
  DEF_CAN_FIRE_m_ddr4_0_uncached_addr_range = (tUInt8)1u;
  PORT_RDY_m_ddr4_0_uncached_addr_range = DEF_CAN_FIRE_m_ddr4_0_uncached_addr_range;
  return PORT_RDY_m_ddr4_0_uncached_addr_range;
}

tUWide MOD_mkSoC_Map::METH_m_ddr4_0_cached_addr_range()
{
  PORT_m_ddr4_0_cached_addr_range = UWide_literal_128_hc00000000000000040000000;
  return PORT_m_ddr4_0_cached_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_ddr4_0_cached_addr_range()
{
  tUInt8 PORT_RDY_m_ddr4_0_cached_addr_range;
  tUInt8 DEF_CAN_FIRE_m_ddr4_0_cached_addr_range;
  DEF_CAN_FIRE_m_ddr4_0_cached_addr_range = (tUInt8)1u;
  PORT_RDY_m_ddr4_0_cached_addr_range = DEF_CAN_FIRE_m_ddr4_0_cached_addr_range;
  return PORT_RDY_m_ddr4_0_cached_addr_range;
}

tUInt8 MOD_mkSoC_Map::METH_m_is_mem_addr(tUInt64 ARG_m_is_mem_addr_addr)
{
  tUInt64 DEF_x__h243;
  tUInt8 DEF_m_is_mem_addr_addr_MINUS_0xC0000000_ULT_0x4000_ETC___d4;
  tUInt8 DEF_NOT_m_is_mem_addr_addr_ULT_0xC0000000___d2;
  tUInt8 PORT_m_is_mem_addr;
  DEF_NOT_m_is_mem_addr_addr_ULT_0xC0000000___d2 = !(ARG_m_is_mem_addr_addr < 3221225472llu);
  DEF_x__h243 = ARG_m_is_mem_addr_addr - 3221225472llu;
  DEF_m_is_mem_addr_addr_MINUS_0xC0000000_ULT_0x4000_ETC___d4 = DEF_x__h243 < 1073741824llu;
  PORT_m_is_mem_addr = DEF_NOT_m_is_mem_addr_addr_ULT_0xC0000000___d2 && DEF_m_is_mem_addr_addr_MINUS_0xC0000000_ULT_0x4000_ETC___d4;
  return PORT_m_is_mem_addr;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_is_mem_addr()
{
  tUInt8 PORT_RDY_m_is_mem_addr;
  tUInt8 DEF_CAN_FIRE_m_is_mem_addr;
  DEF_CAN_FIRE_m_is_mem_addr = (tUInt8)1u;
  PORT_RDY_m_is_mem_addr = DEF_CAN_FIRE_m_is_mem_addr;
  return PORT_RDY_m_is_mem_addr;
}

tUInt8 MOD_mkSoC_Map::METH_m_is_IO_addr(tUInt64 ARG_m_is_IO_addr_addr)
{
  tUInt64 DEF_x__h267;
  tUInt64 DEF_x__h291;
  tUInt64 DEF_x__h316;
  tUInt64 DEF_x__h341;
  tUInt64 DEF_x__h366;
  tUInt64 DEF_x__h466;
  tUInt64 DEF_x__h416;
  tUInt64 DEF_x__h441;
  tUInt64 DEF_x__h491;
  tUInt64 DEF_x__h516;
  tUInt64 DEF_x__h541;
  tUInt64 DEF_x__h566;
  tUInt64 DEF_x__h591;
  tUInt8 DEF_NOT_m_is_IO_addr_addr_ULT_0x80000000_7_8_AND_m_ETC___d81;
  tUInt8 DEF_NOT_m_is_IO_addr_addr_ULT_0xC000000_AND_m_is_I_ETC___d76;
  tUInt8 PORT_m_is_IO_addr;
  DEF_x__h591 = ARG_m_is_IO_addr_addr - 2147483648llu;
  DEF_NOT_m_is_IO_addr_addr_ULT_0x80000000_7_8_AND_m_ETC___d81 = !(ARG_m_is_IO_addr_addr < 2147483648llu) && DEF_x__h591 < 1073741824llu;
  DEF_x__h566 = ARG_m_is_IO_addr_addr - 1879048192llu;
  DEF_x__h516 = ARG_m_is_IO_addr_addr - 1878982656llu;
  DEF_x__h541 = ARG_m_is_IO_addr_addr - 1647509504llu;
  DEF_x__h441 = ARG_m_is_IO_addr_addr - 1073741824llu;
  DEF_x__h491 = ARG_m_is_IO_addr_addr - 1647443968llu;
  DEF_x__h416 = ARG_m_is_IO_addr_addr - 1647378432llu;
  DEF_x__h466 = ARG_m_is_IO_addr_addr - 1647575040llu;
  DEF_x__h366 = ARG_m_is_IO_addr_addr - 1647312896llu;
  DEF_x__h341 = ARG_m_is_IO_addr_addr - 1646264320llu;
  DEF_x__h291 = ARG_m_is_IO_addr_addr - 268435456llu;
  DEF_x__h316 = ARG_m_is_IO_addr_addr - 1645215744llu;
  DEF_x__h267 = ARG_m_is_IO_addr_addr - 201326592llu;
  DEF_NOT_m_is_IO_addr_addr_ULT_0xC000000_AND_m_is_I_ETC___d76 = (((((((((((!(ARG_m_is_IO_addr_addr < 201326592llu) && DEF_x__h267 < 4194304llu) || (!(ARG_m_is_IO_addr_addr < 268435456llu) && DEF_x__h291 < 65536llu)) || (!(ARG_m_is_IO_addr_addr < 1645215744llu) && DEF_x__h316 < 262144llu)) || (!(ARG_m_is_IO_addr_addr < 1646264320llu) && DEF_x__h341 < 65536llu)) || (!(ARG_m_is_IO_addr_addr < 1647312896llu) && DEF_x__h366 < 4096llu)) || (!(ARG_m_is_IO_addr_addr < 1647575040llu) && DEF_x__h466 < 4096llu)) || (!(ARG_m_is_IO_addr_addr < 1647378432llu) && DEF_x__h416 < 4096llu)) || (!(ARG_m_is_IO_addr_addr < 1073741824llu) && DEF_x__h441 < 268435456llu)) || (!(ARG_m_is_IO_addr_addr < 1647443968llu) && DEF_x__h491 < 4096llu)) || (!(ARG_m_is_IO_addr_addr < 1878982656llu) && DEF_x__h516 < 65536llu)) || (!(ARG_m_is_IO_addr_addr < 1647509504llu) && DEF_x__h541 < 65536llu)) || (!(ARG_m_is_IO_addr_addr < 1879048192llu) && DEF_x__h566 < 4096llu);
  PORT_m_is_IO_addr = DEF_NOT_m_is_IO_addr_addr_ULT_0xC000000_AND_m_is_I_ETC___d76 || DEF_NOT_m_is_IO_addr_addr_ULT_0x80000000_7_8_AND_m_ETC___d81;
  return PORT_m_is_IO_addr;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_is_IO_addr()
{
  tUInt8 PORT_RDY_m_is_IO_addr;
  tUInt8 DEF_CAN_FIRE_m_is_IO_addr;
  DEF_CAN_FIRE_m_is_IO_addr = (tUInt8)1u;
  PORT_RDY_m_is_IO_addr = DEF_CAN_FIRE_m_is_IO_addr;
  return PORT_RDY_m_is_IO_addr;
}

tUInt8 MOD_mkSoC_Map::METH_m_is_near_mem_IO_addr(tUInt64 ARG_m_is_near_mem_IO_addr_addr)
{
  tUInt64 DEF_x__h618;
  tUInt8 DEF_m_is_near_mem_IO_addr_addr_MINUS_0x10000000_4__ETC___d85;
  tUInt8 DEF_NOT_m_is_near_mem_IO_addr_addr_ULT_0x10000000_2___d83;
  tUInt8 PORT_m_is_near_mem_IO_addr;
  DEF_NOT_m_is_near_mem_IO_addr_addr_ULT_0x10000000_2___d83 = !(ARG_m_is_near_mem_IO_addr_addr < 268435456llu);
  DEF_x__h618 = ARG_m_is_near_mem_IO_addr_addr - 268435456llu;
  DEF_m_is_near_mem_IO_addr_addr_MINUS_0x10000000_4__ETC___d85 = DEF_x__h618 < 65536llu;
  PORT_m_is_near_mem_IO_addr = DEF_NOT_m_is_near_mem_IO_addr_addr_ULT_0x10000000_2___d83 && DEF_m_is_near_mem_IO_addr_addr_MINUS_0x10000000_4__ETC___d85;
  return PORT_m_is_near_mem_IO_addr;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_is_near_mem_IO_addr()
{
  tUInt8 PORT_RDY_m_is_near_mem_IO_addr;
  tUInt8 DEF_CAN_FIRE_m_is_near_mem_IO_addr;
  DEF_CAN_FIRE_m_is_near_mem_IO_addr = (tUInt8)1u;
  PORT_RDY_m_is_near_mem_IO_addr = DEF_CAN_FIRE_m_is_near_mem_IO_addr;
  return PORT_RDY_m_is_near_mem_IO_addr;
}

tUInt64 MOD_mkSoC_Map::METH_m_pc_reset_value()
{
  tUInt64 PORT_m_pc_reset_value;
  PORT_m_pc_reset_value = 1879048192llu;
  return PORT_m_pc_reset_value;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_pc_reset_value()
{
  tUInt8 PORT_RDY_m_pc_reset_value;
  tUInt8 DEF_CAN_FIRE_m_pc_reset_value;
  DEF_CAN_FIRE_m_pc_reset_value = (tUInt8)1u;
  PORT_RDY_m_pc_reset_value = DEF_CAN_FIRE_m_pc_reset_value;
  return PORT_RDY_m_pc_reset_value;
}

tUWide MOD_mkSoC_Map::METH_m_pcc_reset_value()
{
  PORT_m_pcc_reset_value = UWide_literal_151_h400000001c0000000000ffff1fffff44000000;
  return PORT_m_pcc_reset_value;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_pcc_reset_value()
{
  tUInt8 PORT_RDY_m_pcc_reset_value;
  tUInt8 DEF_CAN_FIRE_m_pcc_reset_value;
  DEF_CAN_FIRE_m_pcc_reset_value = (tUInt8)1u;
  PORT_RDY_m_pcc_reset_value = DEF_CAN_FIRE_m_pcc_reset_value;
  return PORT_RDY_m_pcc_reset_value;
}

tUWide MOD_mkSoC_Map::METH_m_ddc_reset_value()
{
  PORT_m_ddc_reset_value = UWide_literal_151_h40000000000000000000ffff1fffff44000000;
  return PORT_m_ddc_reset_value;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_ddc_reset_value()
{
  tUInt8 PORT_RDY_m_ddc_reset_value;
  tUInt8 DEF_CAN_FIRE_m_ddc_reset_value;
  DEF_CAN_FIRE_m_ddc_reset_value = (tUInt8)1u;
  PORT_RDY_m_ddc_reset_value = DEF_CAN_FIRE_m_ddc_reset_value;
  return PORT_RDY_m_ddc_reset_value;
}

tUWide MOD_mkSoC_Map::METH_m_mtcc_reset_value()
{
  PORT_m_mtcc_reset_value = UWide_literal_151_h40000000000004000000ffff1fffff44000000;
  return PORT_m_mtcc_reset_value;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_mtcc_reset_value()
{
  tUInt8 PORT_RDY_m_mtcc_reset_value;
  tUInt8 DEF_CAN_FIRE_m_mtcc_reset_value;
  DEF_CAN_FIRE_m_mtcc_reset_value = (tUInt8)1u;
  PORT_RDY_m_mtcc_reset_value = DEF_CAN_FIRE_m_mtcc_reset_value;
  return PORT_RDY_m_mtcc_reset_value;
}

tUWide MOD_mkSoC_Map::METH_m_mepcc_reset_value()
{
  PORT_m_mepcc_reset_value = UWide_literal_151_h40000000000000000000ffff1fffff44000000;
  return PORT_m_mepcc_reset_value;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_mepcc_reset_value()
{
  tUInt8 PORT_RDY_m_mepcc_reset_value;
  tUInt8 DEF_CAN_FIRE_m_mepcc_reset_value;
  DEF_CAN_FIRE_m_mepcc_reset_value = (tUInt8)1u;
  PORT_RDY_m_mepcc_reset_value = DEF_CAN_FIRE_m_mepcc_reset_value;
  return PORT_RDY_m_mepcc_reset_value;
}

tUInt64 MOD_mkSoC_Map::METH_m_mtvec_reset_value()
{
  tUInt64 PORT_m_mtvec_reset_value;
  PORT_m_mtvec_reset_value = 4096llu;
  return PORT_m_mtvec_reset_value;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_mtvec_reset_value()
{
  tUInt8 PORT_RDY_m_mtvec_reset_value;
  tUInt8 DEF_CAN_FIRE_m_mtvec_reset_value;
  DEF_CAN_FIRE_m_mtvec_reset_value = (tUInt8)1u;
  PORT_RDY_m_mtvec_reset_value = DEF_CAN_FIRE_m_mtvec_reset_value;
  return PORT_RDY_m_mtvec_reset_value;
}

tUInt64 MOD_mkSoC_Map::METH_m_nmivec_reset_value()
{
  tUInt64 PORT_m_nmivec_reset_value;
  PORT_m_nmivec_reset_value = 12297829382473034410llu;
  return PORT_m_nmivec_reset_value;
}

tUInt8 MOD_mkSoC_Map::METH_RDY_m_nmivec_reset_value()
{
  tUInt8 PORT_RDY_m_nmivec_reset_value;
  tUInt8 DEF_CAN_FIRE_m_nmivec_reset_value;
  DEF_CAN_FIRE_m_nmivec_reset_value = (tUInt8)1u;
  PORT_RDY_m_nmivec_reset_value = DEF_CAN_FIRE_m_nmivec_reset_value;
  return PORT_RDY_m_nmivec_reset_value;
}


/* Reset routines */

void MOD_mkSoC_Map::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkSoC_Map::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkSoC_Map::dump_state(unsigned int indent)
{
}


/* VCD dumping routines */

unsigned int MOD_mkSoC_Map::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 20u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_write_def(sim_hdl, num++, "m_axi_quad_spi_0_full_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_axi_quad_spi_0_lite_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_axi_quad_spi_1_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_boot_rom_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_ddc_reset_value", 151u);
  vcd_write_def(sim_hdl, num++, "m_ddr4_0_cached_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_ddr4_0_uncached_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_dma_0_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_ethernet_0_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_gpio_0_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_gpio_1_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_iic_0_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_mepcc_reset_value", 151u);
  vcd_write_def(sim_hdl, num++, "m_mtcc_reset_value", 151u);
  vcd_write_def(sim_hdl, num++, "m_near_mem_io_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_pcc_reset_value", 151u);
  vcd_write_def(sim_hdl, num++, "m_plic_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_uart16550_0_addr_range", 128u);
  vcd_write_def(sim_hdl, num++, "m_uart16550_1_addr_range", 128u);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkSoC_Map::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkSoC_Map &backing)
{
  vcd_defs(dt, backing);
}

void MOD_mkSoC_Map::vcd_defs(tVCDDumpType dt, MOD_mkSoC_Map &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 151u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 151u);
    vcd_write_x(sim_hdl, num++, 151u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 151u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
    vcd_write_x(sim_hdl, num++, 128u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.PORT_m_axi_quad_spi_0_full_addr_range) != PORT_m_axi_quad_spi_0_full_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_axi_quad_spi_0_full_addr_range, 128u);
	backing.PORT_m_axi_quad_spi_0_full_addr_range = PORT_m_axi_quad_spi_0_full_addr_range;
      }
      ++num;
      if ((backing.PORT_m_axi_quad_spi_0_lite_addr_range) != PORT_m_axi_quad_spi_0_lite_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_axi_quad_spi_0_lite_addr_range, 128u);
	backing.PORT_m_axi_quad_spi_0_lite_addr_range = PORT_m_axi_quad_spi_0_lite_addr_range;
      }
      ++num;
      if ((backing.PORT_m_axi_quad_spi_1_addr_range) != PORT_m_axi_quad_spi_1_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_axi_quad_spi_1_addr_range, 128u);
	backing.PORT_m_axi_quad_spi_1_addr_range = PORT_m_axi_quad_spi_1_addr_range;
      }
      ++num;
      if ((backing.PORT_m_boot_rom_addr_range) != PORT_m_boot_rom_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_boot_rom_addr_range, 128u);
	backing.PORT_m_boot_rom_addr_range = PORT_m_boot_rom_addr_range;
      }
      ++num;
      if ((backing.PORT_m_ddc_reset_value) != PORT_m_ddc_reset_value)
      {
	vcd_write_val(sim_hdl, num, PORT_m_ddc_reset_value, 151u);
	backing.PORT_m_ddc_reset_value = PORT_m_ddc_reset_value;
      }
      ++num;
      if ((backing.PORT_m_ddr4_0_cached_addr_range) != PORT_m_ddr4_0_cached_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_ddr4_0_cached_addr_range, 128u);
	backing.PORT_m_ddr4_0_cached_addr_range = PORT_m_ddr4_0_cached_addr_range;
      }
      ++num;
      if ((backing.PORT_m_ddr4_0_uncached_addr_range) != PORT_m_ddr4_0_uncached_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_ddr4_0_uncached_addr_range, 128u);
	backing.PORT_m_ddr4_0_uncached_addr_range = PORT_m_ddr4_0_uncached_addr_range;
      }
      ++num;
      if ((backing.PORT_m_dma_0_addr_range) != PORT_m_dma_0_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_dma_0_addr_range, 128u);
	backing.PORT_m_dma_0_addr_range = PORT_m_dma_0_addr_range;
      }
      ++num;
      if ((backing.PORT_m_ethernet_0_addr_range) != PORT_m_ethernet_0_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_ethernet_0_addr_range, 128u);
	backing.PORT_m_ethernet_0_addr_range = PORT_m_ethernet_0_addr_range;
      }
      ++num;
      if ((backing.PORT_m_gpio_0_addr_range) != PORT_m_gpio_0_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_gpio_0_addr_range, 128u);
	backing.PORT_m_gpio_0_addr_range = PORT_m_gpio_0_addr_range;
      }
      ++num;
      if ((backing.PORT_m_gpio_1_addr_range) != PORT_m_gpio_1_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_gpio_1_addr_range, 128u);
	backing.PORT_m_gpio_1_addr_range = PORT_m_gpio_1_addr_range;
      }
      ++num;
      if ((backing.PORT_m_iic_0_addr_range) != PORT_m_iic_0_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_iic_0_addr_range, 128u);
	backing.PORT_m_iic_0_addr_range = PORT_m_iic_0_addr_range;
      }
      ++num;
      if ((backing.PORT_m_mepcc_reset_value) != PORT_m_mepcc_reset_value)
      {
	vcd_write_val(sim_hdl, num, PORT_m_mepcc_reset_value, 151u);
	backing.PORT_m_mepcc_reset_value = PORT_m_mepcc_reset_value;
      }
      ++num;
      if ((backing.PORT_m_mtcc_reset_value) != PORT_m_mtcc_reset_value)
      {
	vcd_write_val(sim_hdl, num, PORT_m_mtcc_reset_value, 151u);
	backing.PORT_m_mtcc_reset_value = PORT_m_mtcc_reset_value;
      }
      ++num;
      if ((backing.PORT_m_near_mem_io_addr_range) != PORT_m_near_mem_io_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_near_mem_io_addr_range, 128u);
	backing.PORT_m_near_mem_io_addr_range = PORT_m_near_mem_io_addr_range;
      }
      ++num;
      if ((backing.PORT_m_pcc_reset_value) != PORT_m_pcc_reset_value)
      {
	vcd_write_val(sim_hdl, num, PORT_m_pcc_reset_value, 151u);
	backing.PORT_m_pcc_reset_value = PORT_m_pcc_reset_value;
      }
      ++num;
      if ((backing.PORT_m_plic_addr_range) != PORT_m_plic_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_plic_addr_range, 128u);
	backing.PORT_m_plic_addr_range = PORT_m_plic_addr_range;
      }
      ++num;
      if ((backing.PORT_m_uart16550_0_addr_range) != PORT_m_uart16550_0_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_uart16550_0_addr_range, 128u);
	backing.PORT_m_uart16550_0_addr_range = PORT_m_uart16550_0_addr_range;
      }
      ++num;
      if ((backing.PORT_m_uart16550_1_addr_range) != PORT_m_uart16550_1_addr_range)
      {
	vcd_write_val(sim_hdl, num, PORT_m_uart16550_1_addr_range, 128u);
	backing.PORT_m_uart16550_1_addr_range = PORT_m_uart16550_1_addr_range;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, PORT_m_axi_quad_spi_0_full_addr_range, 128u);
      backing.PORT_m_axi_quad_spi_0_full_addr_range = PORT_m_axi_quad_spi_0_full_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_axi_quad_spi_0_lite_addr_range, 128u);
      backing.PORT_m_axi_quad_spi_0_lite_addr_range = PORT_m_axi_quad_spi_0_lite_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_axi_quad_spi_1_addr_range, 128u);
      backing.PORT_m_axi_quad_spi_1_addr_range = PORT_m_axi_quad_spi_1_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_boot_rom_addr_range, 128u);
      backing.PORT_m_boot_rom_addr_range = PORT_m_boot_rom_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_ddc_reset_value, 151u);
      backing.PORT_m_ddc_reset_value = PORT_m_ddc_reset_value;
      vcd_write_val(sim_hdl, num++, PORT_m_ddr4_0_cached_addr_range, 128u);
      backing.PORT_m_ddr4_0_cached_addr_range = PORT_m_ddr4_0_cached_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_ddr4_0_uncached_addr_range, 128u);
      backing.PORT_m_ddr4_0_uncached_addr_range = PORT_m_ddr4_0_uncached_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_dma_0_addr_range, 128u);
      backing.PORT_m_dma_0_addr_range = PORT_m_dma_0_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_ethernet_0_addr_range, 128u);
      backing.PORT_m_ethernet_0_addr_range = PORT_m_ethernet_0_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_gpio_0_addr_range, 128u);
      backing.PORT_m_gpio_0_addr_range = PORT_m_gpio_0_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_gpio_1_addr_range, 128u);
      backing.PORT_m_gpio_1_addr_range = PORT_m_gpio_1_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_iic_0_addr_range, 128u);
      backing.PORT_m_iic_0_addr_range = PORT_m_iic_0_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_mepcc_reset_value, 151u);
      backing.PORT_m_mepcc_reset_value = PORT_m_mepcc_reset_value;
      vcd_write_val(sim_hdl, num++, PORT_m_mtcc_reset_value, 151u);
      backing.PORT_m_mtcc_reset_value = PORT_m_mtcc_reset_value;
      vcd_write_val(sim_hdl, num++, PORT_m_near_mem_io_addr_range, 128u);
      backing.PORT_m_near_mem_io_addr_range = PORT_m_near_mem_io_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_pcc_reset_value, 151u);
      backing.PORT_m_pcc_reset_value = PORT_m_pcc_reset_value;
      vcd_write_val(sim_hdl, num++, PORT_m_plic_addr_range, 128u);
      backing.PORT_m_plic_addr_range = PORT_m_plic_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_uart16550_0_addr_range, 128u);
      backing.PORT_m_uart16550_0_addr_range = PORT_m_uart16550_0_addr_range;
      vcd_write_val(sim_hdl, num++, PORT_m_uart16550_1_addr_range, 128u);
      backing.PORT_m_uart16550_1_addr_range = PORT_m_uart16550_1_addr_range;
    }
}
