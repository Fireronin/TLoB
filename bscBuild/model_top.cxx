/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Fri Apr 29 16:57:29 UTC 2022
 * 
 */
#include "bluesim_primitives.h"
#include "model_top.h"

#include <cstdlib>
#include <time.h>
#include "bluesim_kernel_api.h"
#include "bs_vcd.h"
#include "bs_reset.h"


/* Constructor */
MODEL_top::MODEL_top()
{
  top_instance = NULL;
}

/* Function for creating a new model */
void * new_MODEL_top()
{
  MODEL_top *model = new MODEL_top();
  return (void *)(model);
}

/* Schedule functions */

static void schedule_posedge_CLK(tSimStateHdl simHdl, void *instance_ptr)
       {
	 MOD_top &INST_top = *((MOD_top *)(instance_ptr));
	 tUInt8 DEF_INST_top_DEF_fifo1_isFull__h1012;
	 tUInt8 DEF_INST_top_DEF_fifo2_isFull__h1137;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_fifo1_mkConnectionVtoAf;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_fifo1_mkConnectionVtoAf;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_fifo2_mkConnectionVtoAf;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_fifo2_mkConnectionVtoAf;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_fifo3_mkConnectionVtoAf;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_fifo3_mkConnectionVtoAf;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_mkConnectionGetPut;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_mkConnectionGetPut;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_mkConnectionGetPut_1;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_mkConnectionGetPut_1;
	 DEF_INST_top_DEF_CAN_FIRE_RL_fifo1_mkConnectionVtoAf = INST_top.INST_fifo1_fifo.METH_i_notFull() && INST_top.INST_fifo1_fifo2.METH_i_notEmpty();
	 DEF_INST_top_DEF_WILL_FIRE_RL_fifo1_mkConnectionVtoAf = DEF_INST_top_DEF_CAN_FIRE_RL_fifo1_mkConnectionVtoAf;
	 DEF_INST_top_DEF_CAN_FIRE_RL_fifo2_mkConnectionVtoAf = INST_top.INST_fifo2_fifo.METH_i_notFull() && INST_top.INST_fifo2_fifo2.METH_i_notEmpty();
	 DEF_INST_top_DEF_WILL_FIRE_RL_fifo2_mkConnectionVtoAf = DEF_INST_top_DEF_CAN_FIRE_RL_fifo2_mkConnectionVtoAf;
	 DEF_INST_top_DEF_CAN_FIRE_RL_fifo3_mkConnectionVtoAf = INST_top.INST_fifo3_fifo.METH_i_notFull() && INST_top.INST_fifo3_fifo2.METH_i_notEmpty();
	 DEF_INST_top_DEF_WILL_FIRE_RL_fifo3_mkConnectionVtoAf = DEF_INST_top_DEF_CAN_FIRE_RL_fifo3_mkConnectionVtoAf;
	 DEF_INST_top_DEF_fifo2_isFull__h1137 = INST_top.INST_fifo2_isFull.METH_read();
	 DEF_INST_top_DEF_fifo1_isFull__h1012 = INST_top.INST_fifo1_isFull.METH_read();
	 DEF_INST_top_DEF_CAN_FIRE_RL_mkConnectionGetPut = !DEF_INST_top_DEF_fifo1_isFull__h1012 && DEF_INST_top_DEF_fifo2_isFull__h1137;
	 DEF_INST_top_DEF_WILL_FIRE_RL_mkConnectionGetPut = DEF_INST_top_DEF_CAN_FIRE_RL_mkConnectionGetPut;
	 DEF_INST_top_DEF_CAN_FIRE_RL_mkConnectionGetPut_1 = !DEF_INST_top_DEF_fifo2_isFull__h1137 && INST_top.INST_fifo3_isFull.METH_read();
	 DEF_INST_top_DEF_WILL_FIRE_RL_mkConnectionGetPut_1 = DEF_INST_top_DEF_CAN_FIRE_RL_mkConnectionGetPut_1;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_fifo1_mkConnectionVtoAf)
	   INST_top.RL_fifo1_mkConnectionVtoAf();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_fifo2_mkConnectionVtoAf)
	   INST_top.RL_fifo2_mkConnectionVtoAf();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_fifo3_mkConnectionVtoAf)
	   INST_top.RL_fifo3_mkConnectionVtoAf();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_mkConnectionGetPut)
	   INST_top.RL_mkConnectionGetPut();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_mkConnectionGetPut_1)
	   INST_top.RL_mkConnectionGetPut_1();
	 if (do_reset_ticks(simHdl))
	 {
	   INST_top.INST_fifo1_data.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_fifo1_isFull.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_fifo1_fifo.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_fifo1_fifo2.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_fifo2_data.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_fifo2_isFull.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_fifo2_fifo.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_fifo2_fifo2.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_fifo3_data.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_fifo3_isFull.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_fifo3_fifo.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_fifo3_fifo2.rst_tick_clk((tUInt8)1u);
	 }
       };

/* Model creation/destruction functions */

void MODEL_top::create_model(tSimStateHdl simHdl, bool master)
{
  sim_hdl = simHdl;
  init_reset_request_counters(sim_hdl);
  top_instance = new MOD_top(sim_hdl, "top", NULL);
  bk_get_or_define_clock(sim_hdl, "CLK");
  if (master)
  {
    bk_alter_clock(sim_hdl, bk_get_clock_by_name(sim_hdl, "CLK"), CLK_LOW, false, 0llu, 5llu, 5llu);
    bk_use_default_reset(sim_hdl);
  }
  bk_set_clock_event_fn(sim_hdl,
			bk_get_clock_by_name(sim_hdl, "CLK"),
			schedule_posedge_CLK,
			NULL,
			(tEdgeDirection)(POSEDGE));
  (top_instance->INST_fifo1_fifo.set_clk_0)("CLK");
  (top_instance->INST_fifo1_fifo2.set_clk_0)("CLK");
  (top_instance->INST_fifo2_fifo.set_clk_0)("CLK");
  (top_instance->INST_fifo2_fifo2.set_clk_0)("CLK");
  (top_instance->INST_fifo3_fifo.set_clk_0)("CLK");
  (top_instance->INST_fifo3_fifo2.set_clk_0)("CLK");
  (top_instance->set_clk_0)("CLK");
}
void MODEL_top::destroy_model()
{
  delete top_instance;
  top_instance = NULL;
}
void MODEL_top::reset_model(bool asserted)
{
  (top_instance->reset_RST_N)(asserted ? (tUInt8)0u : (tUInt8)1u);
}
void * MODEL_top::get_instance()
{
  return top_instance;
}

/* Fill in version numbers */
void MODEL_top::get_version(char const **name, char const **build)
{
  *name = "2021.07";
  *build = "4cac6eb";
}

/* Get the model creation time */
time_t MODEL_top::get_creation_time()
{
  
  /* Fri Apr 29 16:57:29 UTC 2022 */
  return 1651251449llu;
}

/* State dumping function */
void MODEL_top::dump_state()
{
  (top_instance->dump_state)(0u);
}

/* VCD dumping functions */
MOD_top & top_backing(tSimStateHdl simHdl)
{
  static MOD_top *instance = NULL;
  if (instance == NULL)
  {
    vcd_set_backing_instance(simHdl, true);
    instance = new MOD_top(simHdl, "top", NULL);
    vcd_set_backing_instance(simHdl, false);
  }
  return *instance;
}
void MODEL_top::dump_VCD_defs()
{
  (top_instance->dump_VCD_defs)(vcd_depth(sim_hdl));
}
void MODEL_top::dump_VCD(tVCDDumpType dt)
{
  (top_instance->dump_VCD)(dt, vcd_depth(sim_hdl), top_backing(sim_hdl));
}
