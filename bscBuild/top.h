/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Mon Dec 20 17:57:18 CET 2021
 * 
 */

/* Generation options: */
#ifndef __top_h__
#define __top_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the top module */
class MOD_top : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_arbiter_1_firstHot;
  MOD_Reg<tUInt8> INST_arbiter_1_firstHot_1;
  MOD_Reg<tUInt8> INST_arbiter_1_lastSelect;
  MOD_Reg<tUInt8> INST_arbiter_firstHot;
  MOD_Reg<tUInt8> INST_arbiter_firstHot_1;
  MOD_Reg<tUInt8> INST_arbiter_lastSelect;
  MOD_Wire<tUInt8> INST_dfltOutputCanPut;
  MOD_Wire<tUInt8> INST_dfltOutputCanPut_1;
  MOD_Wire<tUInt8> INST_dfltOutputCanPut_1_1;
  MOD_Wire<tUInt8> INST_dfltOutputCanPut_1_2;
  MOD_Wire<tUInt8> INST_inputCanPeek_0;
  MOD_Wire<tUInt8> INST_inputCanPeek_0_1;
  MOD_Wire<tUInt8> INST_inputCanPeek_1;
  MOD_Wire<tUInt8> INST_inputCanPeek_1_0;
  MOD_Wire<tUInt8> INST_inputCanPeek_1_0_1;
  MOD_Wire<tUInt8> INST_inputCanPeek_1_1;
  MOD_Wire<tUInt8> INST_inputDest_0;
  MOD_Wire<tUInt8> INST_inputDest_0_1;
  MOD_Wire<tUInt8> INST_inputDest_1;
  MOD_Wire<tUInt8> INST_inputDest_1_0;
  MOD_Wire<tUInt8> INST_inputDest_1_0_1;
  MOD_Wire<tUInt8> INST_inputDest_1_1;
  MOD_Wire<tUWide> INST_inputPeek_0;
  MOD_Wire<tUInt8> INST_inputPeek_0_1;
  MOD_Wire<tUInt8> INST_inputPeek_1;
  MOD_Wire<tUInt64> INST_inputPeek_1_0;
  MOD_Wire<tUWide> INST_inputPeek_1_0_1;
  MOD_Wire<tUWide> INST_inputPeek_1_1;
  MOD_Reg<tUInt8> INST_m1_awSent;
  MOD_Reg<tUInt32> INST_m1_cnt;
  MOD_Reg<tUInt32> INST_m1_nextWriteAddr;
  MOD_Reg<tUInt8> INST_m1_reqSent;
  MOD_Reg<tUInt32> INST_m1_rspCnt;
  MOD_CReg<tUInt64> INST_m1_shim_shim_arff_rv;
  MOD_CReg<tUInt64> INST_m1_shim_shim_awff_rv;
  MOD_CReg<tUInt8> INST_m1_shim_shim_bff_rv;
  MOD_CReg<tUWide> INST_m1_shim_shim_rff_rv;
  MOD_CReg<tUWide> INST_m1_shim_shim_wff_rv;
  MOD_Fifo<tUInt64> INST_merged_0_awff;
  MOD_Wire<tUInt8> INST_merged_0_awug_canPeekWire;
  MOD_Wire<tUInt8> INST_merged_0_awug_dropWire;
  MOD_Wire<tUInt64> INST_merged_0_awug_peekWire;
  MOD_Wire<tUInt8> INST_merged_0_doDrop;
  MOD_Reg<tUInt8> INST_merged_0_flitLeft;
  MOD_Wire<tUWide> INST_merged_0_outflit;
  MOD_Fifo<tUWide> INST_merged_0_wff;
  MOD_Wire<tUInt8> INST_merged_0_wug_canPeekWire;
  MOD_Wire<tUInt8> INST_merged_0_wug_dropWire;
  MOD_Wire<tUWide> INST_merged_0_wug_peekWire;
  MOD_Reg<tUInt8> INST_moreFlits;
  MOD_Reg<tUInt8> INST_moreFlits_1;
  MOD_Reg<tUInt8> INST_moreFlits_1_1;
  MOD_Reg<tUInt8> INST_moreFlits_1_2;
  MOD_Reg<tUInt64> INST_noRouteSlv_1_currentReq;
  MOD_Reg<tUInt32> INST_noRouteSlv_1_flitCount;
  MOD_Fifo<tUInt8> INST_noRouteSlv_rspFF;
  MOD_Wire<tUInt8> INST_outputCanPut_0;
  MOD_Wire<tUInt8> INST_outputCanPut_0_1;
  MOD_Wire<tUInt8> INST_outputCanPut_1_0;
  MOD_Wire<tUInt8> INST_outputCanPut_1_0_1;
  MOD_Fifo<tUInt8> INST_s1_awResp;
  MOD_CReg<tUInt64> INST_s1_shim_shim_arff_rv;
  MOD_CReg<tUInt64> INST_s1_shim_shim_awff_rv;
  MOD_CReg<tUInt8> INST_s1_shim_shim_bff_rv;
  MOD_CReg<tUWide> INST_s1_shim_shim_rff_rv;
  MOD_CReg<tUWide> INST_s1_shim_shim_wff_rv;
  MOD_Fifo<tUInt8> INST_s1_wResp;
  MOD_Wire<tUInt8> INST_selectInput_0;
  MOD_Wire<tUInt8> INST_selectInput_0_1;
  MOD_Wire<tUInt8> INST_selectInput_1;
  MOD_Wire<tUInt8> INST_selectInput_1_0;
  MOD_Wire<tUInt8> INST_selectInput_1_0_1;
  MOD_Wire<tUInt8> INST_selectInput_1_1;
  MOD_Wire<tUInt8> INST_split_0_awug_canPutWire;
  MOD_Wire<tUInt64> INST_split_0_awug_putWire;
  MOD_Wire<tUWide> INST_split_0_doPut;
  MOD_Reg<tUInt8> INST_split_0_flitLeft;
  MOD_Wire<tUInt8> INST_split_0_wug_canPutWire;
  MOD_Wire<tUWide> INST_split_0_wug_putWire;
  MOD_Wire<tUWide> INST_toDfltOutput;
  MOD_Wire<tUInt8> INST_toDfltOutput_1;
  MOD_Wire<tUInt64> INST_toDfltOutput_1_1;
  MOD_Wire<tUWide> INST_toDfltOutput_1_2;
  MOD_Wire<tUWide> INST_toOutput_0;
  MOD_Wire<tUInt8> INST_toOutput_0_1;
  MOD_Wire<tUInt64> INST_toOutput_1_0;
  MOD_Wire<tUWide> INST_toOutput_1_0_1;
 
 /* Constructor */
 public:
  MOD_top(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit_5;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit_5;
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit_4;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit_4;
  tUInt8 DEF_WILL_FIRE_RL_dflt_output_selected_1;
  tUInt8 DEF_WILL_FIRE_RL_output_selected_2;
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit_3;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit_3;
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit_2;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit_2;
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit_1;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit_1;
  tUInt8 DEF_WILL_FIRE_RL_dflt_output_selected;
  tUInt8 DEF_WILL_FIRE_RL_output_selected;
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit;
  tUInt8 DEF_s1_shim_shim_rff_rv_port1__read__86_BIT_131___d487;
  tUInt8 DEF_NOT_noRouteSlv_1_flitCount_21_EQ_0_22___d483;
  tUInt8 DEF_m1_shim_shim_arff_rv_port1__read__13_BIT_42___d414;
  tUInt8 DEF_s1_shim_shim_bff_rv_port1__read__98_BIT_2___d299;
  tUInt8 DEF_m1_shim_shim_wff_rv_port1__read__12_BIT_145___d113;
  tUInt8 DEF_m1_shim_shim_awff_rv_port1__read__9_BIT_42___d100;
  tUInt8 DEF_IF_inputDest_1_1_whas__06_THEN_inputDest_1_1_w_ETC___d508;
  tUInt8 DEF_IF_inputDest_1_1_whas__06_THEN_NOT_inputDest_1_ETC___d534;
  tUInt8 DEF_IF_inputDest_1_0_1_whas__95_THEN_inputDest_1_0_ETC___d497;
  tUInt8 DEF_IF_inputDest_1_0_1_whas__95_THEN_NOT_inputDest_ETC___d524;
  tUInt8 DEF_outputCanPut_1_0_1_wget____d499;
  tUInt8 DEF_outputCanPut_1_0_1_whas____d498;
  tUInt8 DEF_inputCanPeek_1_1_wget____d504;
  tUInt8 DEF_inputCanPeek_1_1_whas____d503;
  tUInt8 DEF_inputCanPeek_1_0_1_wget____d493;
  tUInt8 DEF_inputCanPeek_1_0_1_whas____d492;
  tUInt8 DEF_NOT_inputCanPeek_1_1_whas__03_30_OR_NOT_inputC_ETC___d532;
  tUInt8 DEF_NOT_inputCanPeek_1_0_1_whas__92_20_OR_NOT_inpu_ETC___d522;
  tUInt8 DEF_moreFlits_1_1_41_BIT_0___d464;
  tUInt8 DEF_IF_inputDest_1_0_whas__26_THEN_inputDest_1_0_w_ETC___d434;
  tUInt8 DEF_IF_inputDest_1_0_whas__26_THEN_NOT_inputDest_1_ETC___d429;
  tUInt8 DEF_IF_inputDest_1_whas__18_THEN_inputDest_1_wget__ETC___d320;
  tUInt8 DEF_IF_inputDest_1_whas__18_THEN_NOT_inputDest_1_w_ETC___d346;
  tUInt8 DEF_IF_inputDest_0_1_whas__07_THEN_inputDest_0_1_w_ETC___d309;
  tUInt8 DEF_IF_inputDest_0_1_whas__07_THEN_NOT_inputDest_0_ETC___d336;
  tUInt8 DEF_outputCanPut_0_1_wget____d311;
  tUInt8 DEF_outputCanPut_0_1_whas____d310;
  tUInt8 DEF_inputCanPeek_1_wget____d316;
  tUInt8 DEF_inputCanPeek_1_whas____d315;
  tUInt8 DEF_inputCanPeek_0_1_wget____d305;
  tUInt8 DEF_inputCanPeek_0_1_whas____d304;
  tUInt8 DEF_NOT_inputCanPeek_1_whas__15_42_OR_NOT_inputCan_ETC___d344;
  tUInt8 DEF_NOT_inputCanPeek_0_1_whas__04_32_OR_NOT_inputC_ETC___d334;
  tUInt8 DEF_moreFlits_48_BIT_0___d276;
  tUInt8 DEF_IF_inputDest_0_whas__33_THEN_inputDest_0_wget__ETC___d241;
  tUInt8 DEF_IF_inputDest_0_whas__33_THEN_NOT_inputDest_0_w_ETC___d236;
  tUInt8 DEF_x__h6715;
  tUWide DEF_s1_shim_shim_wff_rv_port1__read____d71;
  tUWide DEF_s1_shim_shim_wff_rv_port0__read____d167;
  tUWide DEF_m1_shim_shim_wff_rv_port1__read____d112;
  tUWide DEF_m1_shim_shim_wff_rv_port0__read____d13;
  tUWide DEF_s1_shim_shim_rff_rv_port1__read____d486;
  tUWide DEF_m1_shim_shim_rff_rv_port0__read____d489;
  tUInt64 DEF_s1_shim_shim_awff_rv_port1__read____d47;
  tUInt64 DEF_m1_shim_shim_arff_rv_port1__read____d413;
  tUInt64 DEF_m1_shim_shim_awff_rv_port1__read____d99;
  tUInt32 DEF_x__h40428;
  tUInt8 DEF_x__h9013;
  tUInt8 DEF_moreFlits_1_1___d441;
  tUInt8 DEF_s1_shim_shim_bff_rv_port1__read____d298;
  tUInt8 DEF_m1_shim_shim_bff_rv_port1__read____d28;
  tUInt8 DEF_moreFlits___d248;
  tUInt8 DEF_inputDest_1_1_wget____d507;
  tUInt8 DEF_inputDest_1_0_1_wget____d496;
  tUInt8 DEF_inputDest_1_0_wget____d427;
  tUInt8 DEF_inputCanPeek_1_0_whas____d423;
  tUInt8 DEF_inputCanPeek_1_0_wget____d424;
  tUInt8 DEF_inputDest_1_wget____d319;
  tUInt8 DEF_inputDest_0_1_wget____d308;
  tUInt8 DEF_inputDest_0_wget____d234;
  tUInt8 DEF_inputCanPeek_0_whas____d230;
  tUInt8 DEF_inputCanPeek_0_wget____d231;
  tUInt8 DEF_noRouteSlv_rspFF_notFull____d229;
  tUInt8 DEF_merged_0_wff_notEmpty____d207;
  tUInt8 DEF_s1_shim_shim_wff_rv_port0__read__67_BIT_145___d168;
  tUInt8 DEF_s1_shim_shim_awff_rv_port0__read__59_BIT_42___d160;
  tUInt8 DEF_inputCanPeek_1_1_whas__03_AND_inputCanPeek_1_1_ETC___d510;
  tUInt8 DEF_inputCanPeek_1_0_1_whas__92_AND_inputCanPeek_1_ETC___d502;
  tUInt8 DEF_NOT_inputDest_1_1_wget__07___d533;
  tUInt8 DEF_NOT_inputDest_1_0_1_wget__96___d523;
  tUInt8 DEF_inputCanPeek_1_whas__15_AND_inputCanPeek_1_wge_ETC___d322;
  tUInt8 DEF_inputCanPeek_0_1_whas__04_AND_inputCanPeek_0_1_ETC___d314;
  tUInt8 DEF_NOT_inputDest_1_wget__19___d345;
  tUInt8 DEF_NOT_inputDest_0_1_wget__08___d335;
  tUInt8 DEF_IF_split_0_flitLeft_76_EQ_0_77_THEN_split_0_aw_ETC___d228;
  tUInt8 DEF_split_0_flitLeft_76_EQ_0___d177;
  tUInt8 DEF_split_0_wug_canPutWire_whas__82_AND_split_0_wu_ETC___d184;
  tUInt8 DEF_IF_merged_0_flitLeft_38_EQ_0_39_THEN_merged_0__ETC___d209;
  tUInt8 DEF_merged_0_flitLeft_38_EQ_0___d139;
  tUInt8 DEF_noRouteSlv_1_flitCount_21_EQ_0___d422;
  tUInt8 DEF_inputCanPeek_1_0_whas__23_AND_inputCanPeek_1_0_ETC___d440;
  tUInt8 DEF_inputCanPeek_0_whas__30_AND_inputCanPeek_0_wge_ETC___d247;
  tUInt8 DEF_NOT_m1_shim_shim_rff_rv_port0__read__89_BIT_13_ETC___d491;
  tUInt8 DEF_outputCanPut_1_0_1_whas__98_AND_outputCanPut_1_ETC___d500;
  tUInt8 DEF_inputCanPeek_1_1_whas__03_AND_inputCanPeek_1_1_ETC___d505;
  tUInt8 DEF_inputCanPeek_1_0_1_whas__92_AND_inputCanPeek_1_ETC___d494;
  tUInt8 DEF_dfltOutputCanPut_1_1_whas__30_AND_dfltOutputCa_ETC___d432;
  tUInt8 DEF_NOT_s1_shim_shim_arff_rv_port0__read__18_BIT_4_ETC___d420;
  tUInt8 DEF_outputCanPut_1_0_whas__35_AND_outputCanPut_1_0_ETC___d437;
  tUInt8 DEF_NOT_moreFlits_1_1_41_BIT_0_64___d465;
  tUInt8 DEF_inputCanPeek_1_0_whas__23_AND_inputCanPeek_1_0_ETC___d425;
  tUInt8 DEF_NOT_m1_shim_shim_bff_rv_port0__read__01_BIT_2_02___d303;
  tUInt8 DEF_outputCanPut_0_1_whas__10_AND_outputCanPut_0_1_ETC___d312;
  tUInt8 DEF_inputCanPeek_1_whas__15_AND_inputCanPeek_1_wge_ETC___d317;
  tUInt8 DEF_inputCanPeek_0_1_whas__04_AND_inputCanPeek_0_1_ETC___d306;
  tUInt8 DEF_dfltOutputCanPut_whas__37_AND_dfltOutputCanPut_ETC___d239;
  tUInt8 DEF_outputCanPut_0_whas__42_AND_outputCanPut_0_wge_ETC___d244;
  tUInt8 DEF_NOT_moreFlits_48_BIT_0_76___d277;
  tUInt8 DEF_inputCanPeek_0_whas__30_AND_inputCanPeek_0_wge_ETC___d232;
  tUInt8 DEF_split_0_awug_canPutWire_whas__78_AND_split_0_a_ETC___d180;
  tUInt8 DEF_NOT_s1_shim_shim_wff_rv_port0__read__67_BIT_14_ETC___d169;
  tUInt8 DEF_NOT_s1_shim_shim_awff_rv_port0__read__59_BIT_4_ETC___d161;
 
 /* Local definitions */
 private:
  tUInt64 DEF_v__h40136;
  tUInt64 DEF_v__h39945;
  tUInt64 DEF_v__h39718;
  tUInt64 DEF_v__h39527;
  tUInt64 DEF_v__h31647;
  tUInt64 DEF_v__h24235;
  tUInt64 DEF_v__h24044;
  tUInt64 DEF_v__h23817;
  tUInt64 DEF_v__h23626;
  tUInt64 DEF_v__h13187;
  tUInt64 DEF_v__h4263;
  tUInt64 DEF_v__h4058;
  tUInt64 DEF_v__h3762;
  tUInt64 DEF_v__h2170;
  tUInt64 DEF_v__h1981;
  tUInt64 DEF_v__h1652;
  tUInt32 DEF_signed_1___d376;
  tUInt32 DEF_signed_0___d262;
  tUWide DEF_toOutput_0_wget____d287;
  tUWide DEF_inputPeek_0_wget____d267;
  tUWide DEF_split_0_doPut_wget____d187;
  tUWide DEF_merged_0_outflit_wget____d213;
  tUWide DEF_toDfltOutput_wget____d293;
  tUWide DEF_split_0_wug_putWire_wget____d173;
  tUWide DEF_merged_0_wff_first____d142;
  tUWide DEF_merged_0_wug_peekWire_wget____d133;
  tUWide DEF_toOutput_1_0_1_wget____d609;
  tUWide DEF_inputPeek_1_1_wget____d594;
  tUWide DEF_inputPeek_1_0_1_wget____d575;
  tUInt64 DEF_merged_0_awff_first____d141;
  tUWide DEF_merged_0_outflit_wget__13_BITS_186_TO_0___d218;
  tUWide DEF_merged_0_outflit_wget__13_BITS_144_TO_0___d219;
  tUWide DEF_split_0_doPut_wget__87_BITS_144_TO_0___d191;
  tUWide DEF_m1_shim_shim_wff_rv_port1__read__12_BITS_144_TO_0___d114;
  tUWide DEF_s1_shim_shim_rff_rv_port1__read__86_BITS_130_TO_0___d488;
  tUWide DEF_s1_shim_shim_wff_rv_port1__read__1_BITS_144_TO_17___d78;
  tUInt8 DEF_inputPeek_0_wget__67_BIT_0___d269;
  tUInt8 DEF_split_0_doPut_wget__87_BIT_187___d188;
  tUInt8 DEF_inputPeek_1_1_wget__94_BIT_0___d596;
  tUInt8 DEF_inputPeek_1_0_1_wget__75_BIT_0___d577;
  tUWide DEF_IF_inputPeek_0_whas__66_THEN_inputPeek_0_wget__ETC___d268;
  tUWide DEF_IF_merged_0_outflit_whas__11_AND_NOT_merged_0__ETC___d222;
  tUWide DEF_DONTCARE_CONCAT_IF_merged_0_outflit_whas__11_T_ETC___d221;
  tUWide DEF_IF_merged_0_wug_peekWire_whas__32_THEN_merged__ETC___d134;
  tUWide DEF_IF_merged_0_outflit_whas__11_THEN_merged_0_out_ETC___d220;
  tUWide DEF_IF_inputPeek_1_1_whas__93_THEN_inputPeek_1_1_w_ETC___d595;
  tUWide DEF_IF_inputPeek_1_0_1_whas__74_THEN_inputPeek_1_0_ETC___d576;
  tUInt64 DEF_IF_inputPeek_1_0_whas__58_THEN_inputPeek_1_0_w_ETC___d460;
  tUInt8 DEF_IF_inputPeek_0_1_whas__86_THEN_inputPeek_0_1_w_ETC___d388;
  tUInt8 DEF_IF_inputPeek_1_whas__00_THEN_inputPeek_1_wget__ETC___d402;
  tUWide DEF__0_CONCAT_merged_0_awff_first__41_CONCAT_merged_ETC___d143;
  tUWide DEF_NOT_merged_0_outflit_whas__11_12_OR_merged_0_o_ETC___d223;
  tUWide DEF__1_CONCAT_split_0_wug_putWire_wget__73___d174;
  tUWide DEF__1_CONCAT_0_CONCAT_m1_cnt_9_0_CONCAT_DONTCARE_C_ETC___d23;
  tUWide DEF_f_wdata__h1798;
  tUWide DEF__0_CONCAT_DONTCARE___d75;
  tUWide DEF__1_CONCAT_toOutput_1_0_1_wget__09___d610;
  tUWide DEF__0_CONCAT_DONTCARE___d592;
  tUWide DEF_DONTCARE_CONCAT_3_CONCAT_noRouteSlv_1_flitCoun_ETC___d485;
  tUInt64 DEF__0_CONCAT_DONTCARE___d51;
  tUInt8 DEF__0_CONCAT_DONTCARE___d396;
  tUInt8 DEF__0_CONCAT_DONTCARE___d32;
  tUInt8 DEF_NOT_split_0_doPut_wget__87_BIT_187_88___d189;
  tUInt32 DEF_x__h40433;
 
 /* Rules */
 public:
  void RL_m1_putAXI4_AWFlit();
  void RL_m1_putAXI4_WFlit();
  void RL_m1_getAXI4_BFlit();
  void RL_s1_getAXI4_AWFlit();
  void RL_s1_getAXI4_WFlit();
  void RL_s1_putAXI4_BFlit();
  void RL_merged_0_awug_setCanPeek();
  void RL_merged_0_awug_setPeek();
  void RL_merged_0_awug_warnDoDrop();
  void RL_merged_0_awug_doDrop();
  void RL_merged_0_wug_setCanPeek();
  void RL_merged_0_wug_setPeek();
  void RL_merged_0_wug_warnDoDrop();
  void RL_merged_0_wug_doDrop();
  void RL_merged_0_awFlit();
  void RL_merged_0_wFlit();
  void RL_merged_0_passFlit();
  void RL_merged_0_genFirst();
  void RL_merged_0_genOther();
  void RL_split_0_awug_setCanPut();
  void RL_split_0_awug_warnDoPut();
  void RL_split_0_awug_doPut();
  void RL_split_0_wug_setCanPut();
  void RL_split_0_wug_warnDoPut();
  void RL_split_0_wug_doPut();
  void RL_split_0_putFirst();
  void RL_split_0_putOther();
  void RL_set_input_canPeek_wire();
  void RL_set_input_peek_wires();
  void RL_set_output_canPut_wire();
  void RL_set_dflt_output_canPut_wire();
  void RL_arbitrate();
  void RL_arbitration_fail();
  void RL_input_first_flit();
  void RL_input_follow_flit();
  void RL_output_selected();
  void RL_dflt_output_selected();
  void RL_set_input_canPeek_wire_1();
  void RL_set_input_peek_wires_1();
  void RL_set_input_canPeek_wire_2();
  void RL_set_input_peek_wires_2();
  void RL_set_output_canPut_wire_1();
  void RL_arbitrate_1();
  void RL_arbitration_fail_1();
  void RL_legal_destination_fail_1();
  void RL_arbitration_fail_2();
  void RL_legal_destination_fail_2();
  void RL_input_first_flit_1();
  void RL_input_follow_flit_1();
  void RL_input_first_flit_2();
  void RL_input_follow_flit_2();
  void RL_output_selected_1();
  void RL_set_input_canPeek_wire_3();
  void RL_set_input_peek_wires_3();
  void RL_set_output_canPut_wire_2();
  void RL_set_dflt_output_canPut_wire_1();
  void RL_arbitrate_2();
  void RL_arbitration_fail_3();
  void RL_input_first_flit_3();
  void RL_input_follow_flit_3();
  void RL_output_selected_2();
  void RL_dflt_output_selected_1();
  void RL_set_input_canPeek_wire_4();
  void RL_set_input_peek_wires_4();
  void RL_set_input_canPeek_wire_5();
  void RL_set_input_peek_wires_5();
  void RL_set_output_canPut_wire_3();
  void RL_arbitrate_3();
  void RL_arbitration_fail_4();
  void RL_legal_destination_fail_4();
  void RL_arbitration_fail_5();
  void RL_legal_destination_fail_5();
  void RL_input_first_flit_4();
  void RL_input_follow_flit_4();
  void RL_input_first_flit_5();
  void RL_input_follow_flit_5();
  void RL_output_selected_3();
  void __me_check_33();
  void __me_check_35();
  void __me_check_47();
  void __me_check_49();
  void __me_check_58();
  void __me_check_60();
  void __me_check_72();
  void __me_check_74();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_top &backing);
  void vcd_defs(tVCDDumpType dt, MOD_top &backing);
  void vcd_prims(tVCDDumpType dt, MOD_top &backing);
};

#endif /* ifndef __top_h__ */
