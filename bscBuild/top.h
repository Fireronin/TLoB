/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Tue Mar  8 15:59:29 GMT 2022
 * 
 */

/* Generation options: */
#ifndef __top_h__
#define __top_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkCore.h"


/* Class declaration for the top module */
class MOD_top : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Fifo<tUWide> INST_aXI4_Fake_16550_base_axiShim_arff;
  MOD_Fifo<tUWide> INST_aXI4_Fake_16550_base_axiShim_awff;
  MOD_Fifo<tUInt8> INST_aXI4_Fake_16550_base_axiShim_bff;
  MOD_Fifo<tUWide> INST_aXI4_Fake_16550_base_axiShim_rff;
  MOD_Fifo<tUWide> INST_aXI4_Fake_16550_base_axiShim_wff;
  MOD_Wire<tUInt8> INST_aXI4_Fake_16550_base_irqReceiveDataReady;
  MOD_Wire<tUInt8> INST_aXI4_Fake_16550_base_irqTHREmpty;
  MOD_Wire<tUInt8> INST_aXI4_Fake_16550_base_pulseIrq;
  MOD_Reg<tUInt8> INST_aXI4_Fake_16550_base_regDLR_LSB;
  MOD_Reg<tUInt8> INST_aXI4_Fake_16550_base_regDLR_MSB;
  MOD_Reg<tUInt8> INST_aXI4_Fake_16550_base_regIER;
  MOD_Reg<tUInt8> INST_aXI4_Fake_16550_base_regLCR;
  MOD_Reg<tUInt8> INST_aXI4_Fake_16550_base_regLastTxReadyIrq;
  MOD_Reg<tUInt8> INST_aXI4_Fake_16550_base_regSCR;
  MOD_Reg<tUInt8> INST_aXI4_Fake_16550_base_regTHREmptyIrqPending;
  MOD_Wire<tUInt64> INST_aXI4_Fake_16550_base_rxData;
  MOD_Wire<tUInt8> INST_aXI4_Fake_16550_base_rxDropData;
  MOD_Fifo<tUWide> INST_aXI4_Fake_16550_base_rxShim_tff;
  MOD_Fifo<tUWide> INST_aXI4_Fake_16550_base_txShim_tff;
  MOD_Wire<tUInt64> INST_aXI4_Fake_16550_base_wireTxData;
  MOD_Reg<tUInt8> INST_arbiter_1_firstHot;
  MOD_Reg<tUInt8> INST_arbiter_1_firstHot_1;
  MOD_Reg<tUInt8> INST_arbiter_1_lastSelect;
  MOD_Reg<tUInt8> INST_arbiter_1_lastSelect_1;
  MOD_Reg<tUInt8> INST_arbiter_firstHot;
  MOD_Reg<tUInt8> INST_arbiter_firstHot_1;
  MOD_Reg<tUInt8> INST_arbiter_lastSelect;
  MOD_Reg<tUInt8> INST_arbiter_lastSelect_1;
  MOD_mkCore INST_core;
  MOD_Wire<tUInt8> INST_dfltOutputCanPut;
  MOD_Wire<tUInt8> INST_dfltOutputCanPut_1;
  MOD_Wire<tUInt8> INST_dfltOutputCanPut_1_1;
  MOD_Wire<tUInt8> INST_dfltOutputCanPut_1_2;
  MOD_Wire<tUInt8> INST_inputCanPeek_0;
  MOD_Wire<tUInt8> INST_inputCanPeek_0_1;
  MOD_Wire<tUInt8> INST_inputCanPeek_1;
  MOD_Wire<tUInt8> INST_inputCanPeek_1_0;
  MOD_Wire<tUInt8> INST_inputCanPeek_1_0_1;
  MOD_Wire<tUInt8> INST_inputCanPeek_1_1;
  MOD_Wire<tUInt8> INST_inputCanPeek_1_2;
  MOD_Wire<tUInt8> INST_inputCanPeek_2;
  MOD_Wire<tUInt8> INST_inputDest_0;
  MOD_Wire<tUInt8> INST_inputDest_0_1;
  MOD_Wire<tUInt8> INST_inputDest_1;
  MOD_Wire<tUInt8> INST_inputDest_1_0;
  MOD_Wire<tUInt8> INST_inputDest_1_0_1;
  MOD_Wire<tUInt8> INST_inputDest_1_1;
  MOD_Wire<tUInt8> INST_inputDest_1_2;
  MOD_Wire<tUInt8> INST_inputDest_2;
  MOD_Wire<tUWide> INST_inputPeek_0;
  MOD_Wire<tUInt8> INST_inputPeek_0_1;
  MOD_Wire<tUInt8> INST_inputPeek_1;
  MOD_Wire<tUWide> INST_inputPeek_1_0;
  MOD_Wire<tUWide> INST_inputPeek_1_0_1;
  MOD_Wire<tUWide> INST_inputPeek_1_1;
  MOD_Wire<tUWide> INST_inputPeek_1_2;
  MOD_Wire<tUInt8> INST_inputPeek_2;
  MOD_Reg<tUInt64> INST_memory_ifc_arAddrReg;
  MOD_Reg<tUInt64> INST_memory_ifc_awAddrReg;
  MOD_Fifo<tUInt32> INST_memory_ifc_readFF;
  MOD_Reg<tUInt8> INST_memory_ifc_rflitCount;
  MOD_CReg<tUWide> INST_memory_ifc_shim_shim_arff_rv;
  MOD_CReg<tUWide> INST_memory_ifc_shim_shim_awff_rv;
  MOD_CReg<tUInt8> INST_memory_ifc_shim_shim_bff_rv;
  MOD_CReg<tUWide> INST_memory_ifc_shim_shim_rff_rv;
  MOD_CReg<tUWide> INST_memory_ifc_shim_shim_wff_rv;
  MOD_Reg<tUInt32> INST_memory_ifc_wflitCount;
  MOD_Fifo<tUInt8> INST_memory_ifc_writeFF;
  MOD_SyncReg<tUInt8> INST_memory_mem_mem_mem_isAllocated;
  MOD_Reg<tUInt8> INST_memory_mem_mem_mem_isInitialized;
  MOD_Reg<tUInt64> INST_memory_mem_mem_mem_memCHandle;
  MOD_CReg<tUWide> INST_memory_mem_mem_mem_rsp_0_rv;
  MOD_MakeReset0 INST_memory_mem_mem_mem_rst;
  MOD_Fifo<tUWide> INST_merged_0_awff;
  MOD_Wire<tUInt8> INST_merged_0_awug_canPeekWire;
  MOD_Wire<tUInt8> INST_merged_0_awug_dropWire;
  MOD_Wire<tUWide> INST_merged_0_awug_peekWire;
  MOD_Wire<tUInt8> INST_merged_0_doDrop;
  MOD_Reg<tUInt8> INST_merged_0_flitLeft;
  MOD_Wire<tUWide> INST_merged_0_outflit;
  MOD_Fifo<tUWide> INST_merged_0_wff;
  MOD_Wire<tUInt8> INST_merged_0_wug_canPeekWire;
  MOD_Wire<tUInt8> INST_merged_0_wug_dropWire;
  MOD_Wire<tUWide> INST_merged_0_wug_peekWire;
  MOD_Reg<tUInt8> INST_moreFlits;
  MOD_Reg<tUInt8> INST_moreFlits_1;
  MOD_Reg<tUInt8> INST_moreFlits_1_1;
  MOD_Reg<tUInt8> INST_moreFlits_1_2;
  MOD_Reg<tUWide> INST_noRouteSlv_1_currentReq;
  MOD_Reg<tUInt32> INST_noRouteSlv_1_flitCount;
  MOD_Reg<tUInt8> INST_noRouteSlv_awidReg;
  MOD_Fifo<tUInt8> INST_noRouteSlv_rspFF;
  MOD_Wire<tUInt8> INST_outputCanPut_0;
  MOD_Wire<tUInt8> INST_outputCanPut_0_1;
  MOD_Wire<tUInt8> INST_outputCanPut_1;
  MOD_Wire<tUInt8> INST_outputCanPut_1_0;
  MOD_Wire<tUInt8> INST_outputCanPut_1_0_1;
  MOD_Wire<tUInt8> INST_outputCanPut_1_1;
  MOD_Wire<tUInt8> INST_selectInput_0;
  MOD_Wire<tUInt8> INST_selectInput_0_1;
  MOD_Wire<tUInt8> INST_selectInput_1;
  MOD_Wire<tUInt8> INST_selectInput_1_0;
  MOD_Wire<tUInt8> INST_selectInput_1_0_1;
  MOD_Wire<tUInt8> INST_selectInput_1_1;
  MOD_Wire<tUInt8> INST_selectInput_1_2;
  MOD_Wire<tUInt8> INST_selectInput_2;
  MOD_Wire<tUInt8> INST_split_0_awug_canPutWire;
  MOD_Wire<tUWide> INST_split_0_awug_putWire;
  MOD_Wire<tUWide> INST_split_0_doPut;
  MOD_Reg<tUInt8> INST_split_0_flitLeft;
  MOD_Wire<tUInt8> INST_split_0_wug_canPutWire;
  MOD_Wire<tUWide> INST_split_0_wug_putWire;
  MOD_Wire<tUInt8> INST_split_1_awug_canPutWire;
  MOD_Wire<tUWide> INST_split_1_awug_putWire;
  MOD_Wire<tUWide> INST_split_1_doPut;
  MOD_Reg<tUInt8> INST_split_1_flitLeft;
  MOD_Wire<tUInt8> INST_split_1_wug_canPutWire;
  MOD_Wire<tUWide> INST_split_1_wug_putWire;
  MOD_Wire<tUWide> INST_toDfltOutput;
  MOD_Wire<tUInt8> INST_toDfltOutput_1;
  MOD_Wire<tUWide> INST_toDfltOutput_1_1;
  MOD_Wire<tUWide> INST_toDfltOutput_1_2;
  MOD_Wire<tUWide> INST_toOutput_0;
  MOD_Wire<tUInt8> INST_toOutput_0_1;
  MOD_Wire<tUWide> INST_toOutput_1;
  MOD_Wire<tUWide> INST_toOutput_1_0;
  MOD_Wire<tUWide> INST_toOutput_1_0_1;
  MOD_Wire<tUWide> INST_toOutput_1_1;
 
 /* Constructor */
 public:
  MOD_top(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_memory_mem_mem_mem_rst$OUT_RST;
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit_7;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit_7;
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit_6;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit_6;
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit_5;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit_5;
  tUInt8 DEF_WILL_FIRE_RL_dflt_output_selected_1;
  tUInt8 DEF_WILL_FIRE_RL_output_selected_4;
  tUInt8 DEF_WILL_FIRE_RL_output_selected_3;
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit_4;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit_4;
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit_3;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit_3;
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit_2;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit_2;
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit_1;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit_1;
  tUInt8 DEF_WILL_FIRE_RL_dflt_output_selected;
  tUInt8 DEF_WILL_FIRE_RL_output_selected_1;
  tUInt8 DEF_WILL_FIRE_RL_output_selected;
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit;
  tUInt8 DEF_memory_ifc_shim_shim_rff_rv_port1__read__86_BI_ETC___d987;
  tUInt8 DEF_NOT_noRouteSlv_1_flitCount_88_EQ_0_89___d980;
  tUInt8 DEF_memory_ifc_shim_shim_bff_rv_port1__read__01_BIT_7___d602;
  tUInt8 DEF_IF_inputDest_1_2_whas__017_THEN_inputDest_1_2__ETC___d1019;
  tUInt8 DEF_IF_inputDest_1_2_whas__017_THEN_NOT_inputDest__ETC___d1057;
  tUInt8 DEF_IF_inputDest_1_1_whas__008_THEN_inputDest_1_1__ETC___d1010;
  tUInt8 DEF_IF_inputDest_1_1_whas__008_THEN_NOT_inputDest__ETC___d1039;
  tUInt8 DEF_IF_inputDest_1_0_1_whas__97_THEN_inputDest_1_0_ETC___d999;
  tUInt8 DEF_IF_inputDest_1_0_1_whas__97_THEN_NOT_inputDest_ETC___d1049;
  tUInt8 DEF_outputCanPut_1_0_1_wget____d1001;
  tUInt8 DEF_outputCanPut_1_0_1_whas____d1000;
  tUInt8 DEF_inputCanPeek_1_2_wget____d1015;
  tUInt8 DEF_inputCanPeek_1_2_whas____d1014;
  tUInt8 DEF_inputCanPeek_1_1_wget____d1006;
  tUInt8 DEF_inputCanPeek_1_1_whas____d1005;
  tUInt8 DEF_inputCanPeek_1_0_1_wget____d995;
  tUInt8 DEF_inputCanPeek_1_0_1_whas____d994;
  tUInt8 DEF_NOT_inputCanPeek_1_2_whas__014_053_OR_NOT_inpu_ETC___d1055;
  tUInt8 DEF_NOT_inputCanPeek_1_1_whas__005_035_OR_NOT_inpu_ETC___d1037;
  tUInt8 DEF_NOT_inputCanPeek_1_0_1_whas__94_045_OR_NOT_inp_ETC___d1047;
  tUInt8 DEF_moreFlits_1_1_23_BIT_1___d851;
  tUInt8 DEF_moreFlits_1_1_23_BIT_0___d849;
  tUInt8 DEF_IF_inputDest_1_0_whas__93_THEN_inputDest_1_0_w_ETC___d799;
  tUInt8 DEF_IF_inputDest_1_0_whas__93_THEN_inputDest_1_0_w_ETC___d796;
  tUInt8 DEF_NOT_outputCanPut_1_0_whas__10_11_OR_NOT_output_ETC___d814;
  tUInt8 DEF_IF_inputDest_2_whas__32_THEN_inputDest_2_wget__ETC___d634;
  tUInt8 DEF_IF_inputDest_2_whas__32_THEN_NOT_inputDest_2_w_ETC___d672;
  tUInt8 DEF_IF_inputDest_1_whas__23_THEN_inputDest_1_wget__ETC___d625;
  tUInt8 DEF_IF_inputDest_1_whas__23_THEN_NOT_inputDest_1_w_ETC___d654;
  tUInt8 DEF_IF_inputDest_0_1_whas__12_THEN_inputDest_0_1_w_ETC___d614;
  tUInt8 DEF_IF_inputDest_0_1_whas__12_THEN_NOT_inputDest_0_ETC___d664;
  tUInt8 DEF_outputCanPut_0_1_wget____d616;
  tUInt8 DEF_outputCanPut_0_1_whas____d615;
  tUInt8 DEF_inputCanPeek_2_wget____d630;
  tUInt8 DEF_inputCanPeek_2_whas____d629;
  tUInt8 DEF_inputCanPeek_1_wget____d621;
  tUInt8 DEF_inputCanPeek_1_whas____d620;
  tUInt8 DEF_inputCanPeek_0_1_wget____d610;
  tUInt8 DEF_inputCanPeek_0_1_whas____d609;
  tUInt8 DEF_NOT_inputCanPeek_2_whas__29_68_OR_NOT_inputCan_ETC___d670;
  tUInt8 DEF_NOT_inputCanPeek_1_whas__20_50_OR_NOT_inputCan_ETC___d652;
  tUInt8 DEF_NOT_inputCanPeek_0_1_whas__09_60_OR_NOT_inputC_ETC___d662;
  tUInt8 DEF_moreFlits_28_BIT_1___d560;
  tUInt8 DEF_moreFlits_28_BIT_0___d558;
  tUInt8 DEF_IF_inputDest_0_whas__98_THEN_inputDest_0_wget__ETC___d504;
  tUInt8 DEF_IF_inputDest_0_whas__98_THEN_inputDest_0_wget__ETC___d501;
  tUInt8 DEF_NOT_outputCanPut_0_whas__15_16_OR_NOT_outputCa_ETC___d519;
  tUInt8 DEF_x__h9886;
  tUInt8 DEF_aXI4_Fake_16550_base_rxShim_tff_notEmpty____d123;
  tUInt8 DEF_aXI4_Fake_16550_base_irqTHREmpty_whas____d134;
  tUInt8 DEF_aXI4_Fake_16550_base_irqReceiveDataReady_whas____d133;
  tUWide DEF_memory_ifc_shim_shim_arff_rv_port1__read____d63;
  tUWide DEF_memory_ifc_shim_shim_arff_rv_port0__read____d784;
  tUWide DEF_memory_ifc_shim_shim_awff_rv_port1__read____d12;
  tUWide DEF_memory_ifc_shim_shim_awff_rv_port0__read____d271;
  tUWide DEF_memory_ifc_shim_shim_wff_rv_port1__read____d10;
  tUWide DEF_memory_ifc_shim_shim_wff_rv_port0__read____d279;
  tUWide DEF_memory_ifc_shim_shim_rff_rv_port1__read____d986;
  tUWide DEF_memory_ifc_shim_shim_rff_rv_port0__read____d94;
  tUWide DEF_memory_mem_mem_mem_rsp_0_rv_port1__read____d14;
  tUWide DEF_memory_mem_mem_mem_rsp_0_rv_port0__read____d56;
  tUInt32 DEF_x__h58504;
  tUInt8 DEF_x__h15374;
  tUInt8 DEF_x__h12217;
  tUInt8 DEF_x__h6794;
  tUInt8 DEF_memory_ifc_shim_shim_bff_rv_port1__read____d601;
  tUInt8 DEF_moreFlits_1_1___d823;
  tUInt8 DEF_moreFlits___d528;
  tUInt8 DEF_inputDest_1_0_wget____d794;
  tUInt8 DEF_inputDest_0_wget____d499;
  tUInt8 DEF_inputDest_1_2_wget____d1018;
  tUInt8 DEF_inputDest_1_1_wget____d1009;
  tUInt8 DEF_inputDest_1_0_1_wget____d998;
  tUInt8 DEF_outputCanPut_1_0_whas____d810;
  tUInt8 DEF_outputCanPut_1_0_wget____d812;
  tUInt8 DEF_inputCanPeek_1_0_whas____d790;
  tUInt8 DEF_inputCanPeek_1_0_wget____d791;
  tUInt8 DEF_inputDest_2_wget____d633;
  tUInt8 DEF_inputDest_1_wget____d624;
  tUInt8 DEF_inputDest_0_1_wget____d613;
  tUInt8 DEF_outputCanPut_0_whas____d515;
  tUInt8 DEF_outputCanPut_0_wget____d517;
  tUInt8 DEF_inputCanPeek_0_whas____d495;
  tUInt8 DEF_inputCanPeek_0_wget____d496;
  tUInt8 DEF_noRouteSlv_rspFF_notFull____d494;
  tUInt8 DEF_merged_0_wff_notEmpty____d469;
  tUInt8 DEF_aXI4_Fake_16550_base_axiShim_wff_notFull____d422;
  tUInt8 DEF_aXI4_Fake_16550_base_axiShim_awff_notFull____d318;
  tUInt8 DEF_aXI4_Fake_16550_base_txShim_tff_notFull____d125;
  tUInt8 DEF_memory_ifc_shim_shim_awff_rv_port0__read__71_B_ETC___d272;
  tUInt8 DEF_memory_ifc_shim_shim_wff_rv_port0__read__79_BI_ETC___d280;
  tUInt8 DEF_aXI4_Fake_16550_base_regIER_BIT_1___h6175;
  tUInt8 DEF_inputDest_1_0_wget__94_BIT_0___d795;
  tUInt8 DEF_inputDest_0_wget__99_BIT_0___d500;
  tUInt8 DEF_inputCanPeek_1_0_1_whas__94_AND_inputCanPeek_1_ETC___d1004;
  tUInt8 DEF_inputCanPeek_1_1_whas__005_AND_inputCanPeek_1__ETC___d1012;
  tUInt8 DEF_inputCanPeek_1_2_whas__014_AND_inputCanPeek_1__ETC___d1021;
  tUInt8 DEF_NOT_inputDest_1_2_wget__018___d1056;
  tUInt8 DEF_NOT_inputDest_1_1_wget__009___d1038;
  tUInt8 DEF_NOT_inputDest_1_0_1_wget__98___d1048;
  tUInt8 DEF_inputCanPeek_0_1_whas__09_AND_inputCanPeek_0_1_ETC___d619;
  tUInt8 DEF_inputCanPeek_1_whas__20_AND_inputCanPeek_1_wge_ETC___d627;
  tUInt8 DEF_inputCanPeek_2_whas__29_AND_inputCanPeek_2_wge_ETC___d636;
  tUInt8 DEF_NOT_inputDest_2_wget__33___d671;
  tUInt8 DEF_NOT_inputDest_1_wget__24___d653;
  tUInt8 DEF_NOT_inputDest_0_1_wget__13___d663;
  tUInt8 DEF_IF_split_1_flitLeft_38_EQ_0_39_THEN_split_1_aw_ETC___d493;
  tUInt8 DEF_split_1_flitLeft_38_EQ_0___d439;
  tUInt8 DEF_split_1_wug_canPutWire_whas__44_AND_split_1_wu_ETC___d446;
  tUInt8 DEF_IF_split_0_flitLeft_88_EQ_0_89_THEN_split_0_aw_ETC___d491;
  tUInt8 DEF_split_0_flitLeft_88_EQ_0___d289;
  tUInt8 DEF_split_0_wug_canPutWire_whas__94_AND_split_0_wu_ETC___d296;
  tUInt8 DEF_IF_merged_0_flitLeft_50_EQ_0_51_THEN_merged_0__ETC___d471;
  tUInt8 DEF_merged_0_flitLeft_50_EQ_0___d251;
  tUInt8 DEF_noRouteSlv_1_flitCount_88_EQ_0___d789;
  tUInt8 DEF_IF_moreFlits_1_1_23_BIT_0_49_THEN_1_ELSE_0_50__ETC___d854;
  tUInt8 DEF_IF_IF_inputDest_1_0_whas__93_THEN_inputDest_1__ETC___d802;
  tUInt8 DEF_IF_moreFlits_28_BIT_0_58_THEN_1_ELSE_0_59_PLUS_ETC___d563;
  tUInt8 DEF_IF_IF_inputDest_0_whas__98_THEN_inputDest_0_wg_ETC___d507;
  tUInt8 DEF_inputCanPeek_1_0_whas__90_AND_inputCanPeek_1_0_ETC___d822;
  tUInt8 DEF_inputCanPeek_0_whas__95_AND_inputCanPeek_0_wge_ETC___d527;
  tUInt8 DEF_outputCanPut_1_0_1_whas__000_AND_outputCanPut__ETC___d1002;
  tUInt8 DEF_inputCanPeek_1_2_whas__014_AND_inputCanPeek_1__ETC___d1016;
  tUInt8 DEF_inputCanPeek_1_1_whas__005_AND_inputCanPeek_1__ETC___d1007;
  tUInt8 DEF_inputCanPeek_1_0_1_whas__94_AND_inputCanPeek_1_ETC___d996;
  tUInt8 DEF_dfltOutputCanPut_1_1_whas__04_AND_dfltOutputCa_ETC___d806;
  tUInt8 DEF_outputCanPut_1_1_whas__16_AND_outputCanPut_1_1_ETC___d818;
  tUInt8 DEF_NOT_memory_ifc_shim_shim_arff_rv_port0__read___ETC___d786;
  tUInt8 DEF_NOT_IF_moreFlits_1_1_23_BIT_0_49_THEN_1_ELSE_0_ETC___d855;
  tUInt8 DEF_inputCanPeek_1_0_whas__90_AND_inputCanPeek_1_0_ETC___d792;
  tUInt8 DEF_NOT_IF_IF_inputDest_1_0_whas__93_THEN_inputDes_ETC___d803;
  tUInt8 DEF_outputCanPut_0_1_whas__15_AND_outputCanPut_0_1_ETC___d617;
  tUInt8 DEF_inputCanPeek_2_whas__29_AND_inputCanPeek_2_wge_ETC___d631;
  tUInt8 DEF_inputCanPeek_1_whas__20_AND_inputCanPeek_1_wge_ETC___d622;
  tUInt8 DEF_inputCanPeek_0_1_whas__09_AND_inputCanPeek_0_1_ETC___d611;
  tUInt8 DEF_dfltOutputCanPut_whas__09_AND_dfltOutputCanPut_ETC___d511;
  tUInt8 DEF_outputCanPut_1_whas__21_AND_outputCanPut_1_wge_ETC___d523;
  tUInt8 DEF_NOT_IF_moreFlits_28_BIT_0_58_THEN_1_ELSE_0_59__ETC___d564;
  tUInt8 DEF_inputCanPeek_0_whas__95_AND_inputCanPeek_0_wge_ETC___d497;
  tUInt8 DEF_NOT_IF_IF_inputDest_0_whas__98_THEN_inputDest__ETC___d508;
  tUInt8 DEF_split_1_awug_canPutWire_whas__40_AND_split_1_a_ETC___d442;
  tUInt8 DEF_split_0_awug_canPutWire_whas__90_AND_split_0_a_ETC___d292;
  tUInt8 DEF_NOT_memory_ifc_shim_shim_wff_rv_port0__read__7_ETC___d281;
  tUInt8 DEF_NOT_memory_ifc_shim_shim_awff_rv_port0__read___ETC___d273;
  tUInt8 DEF_aXI4_Fake_16550_base_txShim_tff_notFull__25_AN_ETC___d127;
 
 /* Local definitions */
 private:
  tUInt8 DEF_aXI4_Fake_16550_base_regLCR_BIT_7___h7392;
  tUInt64 DEF_TASK_mem_read___d87;
  tUInt64 DEF_v__h595;
  tUInt64 DEF_v__h58212;
  tUInt64 DEF_v__h58021;
  tUInt64 DEF_v__h57794;
  tUInt64 DEF_v__h57603;
  tUInt64 DEF_v__h57376;
  tUInt64 DEF_v__h57185;
  tUInt64 DEF_v__h45490;
  tUInt64 DEF_v__h35716;
  tUInt64 DEF_v__h35525;
  tUInt64 DEF_v__h35298;
  tUInt64 DEF_v__h35107;
  tUInt64 DEF_v__h34880;
  tUInt64 DEF_v__h34689;
  tUInt64 DEF_v__h20313;
  tUInt32 DEF_signed_8___d372;
  tUInt32 DEF_signed_2___d729;
  tUInt32 DEF_signed_1___d717;
  tUInt32 DEF_signed_0___d542;
  tUWide DEF_toOutput_1_wget____d585;
  tUWide DEF_toOutput_0_wget____d581;
  tUWide DEF_inputPeek_0_wget____d548;
  tUWide DEF_split_1_doPut_wget____d449;
  tUWide DEF_split_0_doPut_wget____d299;
  tUWide DEF_merged_0_outflit_wget____d475;
  tUWide DEF_toDfltOutput_wget____d591;
  tUWide DEF_toDfltOutput_1_1_wget____d976;
  tUWide DEF_toOutput_1_1_wget____d876;
  tUWide DEF_toOutput_1_0_wget____d870;
  tUWide DEF_inputPeek_1_0_wget____d843;
  tUWide DEF_noRouteSlv_1_currentReq___d981;
  tUWide DEF_split_1_awug_putWire_wget____d324;
  tUWide DEF_split_0_awug_putWire_wget____d277;
  tUWide DEF_merged_0_awff_first____d253;
  tUWide DEF_merged_0_awug_peekWire_wget____d240;
  tUWide DEF_core_cpu_imem_master_ar_peek____d780;
  tUWide DEF_core_cpu_imem_master_aw_peek____d211;
  tUWide DEF_aXI4_Fake_16550_base_rxShim_tff_first____d112;
  tUWide DEF_split_1_wug_putWire_wget____d428;
  tUWide DEF_split_0_wug_putWire_wget____d285;
  tUWide DEF_merged_0_wff_first____d254;
  tUWide DEF_merged_0_wug_peekWire_wget____d245;
  tUWide DEF_core_cpu_imem_master_w_peek____d225;
  tUWide DEF_toOutput_1_0_1_wget____d1175;
  tUWide DEF_inputPeek_1_2_wget____d1159;
  tUWide DEF_inputPeek_1_1_wget____d1143;
  tUWide DEF_inputPeek_1_0_1_wget____d1124;
  tUWide DEF_aXI4_Fake_16550_base_axiShim_wff_first____d189;
  tUWide DEF_aXI4_Fake_16550_base_axiShim_arff_first____d141;
  tUWide DEF_aXI4_Fake_16550_base_axiShim_awff_first____d191;
  tUWide DEF_aXI4_Fake_16550_base_axiShim_rff_first____d991;
  tUInt64 DEF_memory_mem_mem_mem_memCHandle___d9;
  tUInt8 DEF_aXI4_Fake_16550_base_regLCR__h7389;
  tUWide DEF_merged_0_outflit_wget__75_BITS_170_TO_0___d480;
  tUWide DEF_split_1_doPut_wget__49_BITS_170_TO_73___d452;
  tUWide DEF_split_0_doPut_wget__99_BITS_170_TO_73___d302;
  tUWide DEF_merged_0_outflit_wget__75_BITS_72_TO_0___d481;
  tUWide DEF_split_1_doPut_wget__49_BITS_72_TO_0___d453;
  tUWide DEF_split_0_doPut_wget__99_BITS_72_TO_0___d303;
  tUWide DEF_memory_ifc_shim_shim_rff_rv_port1__read__86_BI_ETC___d988;
  tUWide DEF_split_1_wug_putWire_wget__28_BITS_72_TO_1___d429;
  tUInt8 DEF_inputPeek_0_wget__48_BIT_0___d551;
  tUInt8 DEF_split_1_doPut_wget__49_BIT_171___d450;
  tUInt8 DEF_split_0_doPut_wget__99_BIT_171___d300;
  tUInt8 DEF_inputPeek_1_2_wget__159_BIT_0___d1161;
  tUInt8 DEF_inputPeek_1_1_wget__143_BIT_0___d1145;
  tUInt8 DEF_inputPeek_1_0_1_wget__124_BIT_0___d1126;
  tUWide DEF_IF_inputPeek_0_whas__47_THEN_inputPeek_0_wget__ETC___d549;
  tUWide DEF_IF_merged_0_outflit_whas__73_AND_NOT_merged_0__ETC___d484;
  tUWide DEF_DONTCARE_CONCAT_IF_merged_0_outflit_whas__73_T_ETC___d483;
  tUWide DEF_IF_merged_0_awug_peekWire_whas__39_THEN_merged_ETC___d241;
  tUWide DEF_IF_inputPeek_1_0_whas__42_THEN_inputPeek_1_0_w_ETC___d844;
  tUWide DEF_IF_merged_0_wug_peekWire_whas__44_THEN_merged__ETC___d246;
  tUWide DEF_IF_merged_0_outflit_whas__73_THEN_merged_0_out_ETC___d482;
  tUWide DEF_IF_inputPeek_1_2_whas__158_THEN_inputPeek_1_2__ETC___d1160;
  tUWide DEF_IF_inputPeek_1_1_whas__142_THEN_inputPeek_1_1__ETC___d1144;
  tUWide DEF_IF_inputPeek_1_0_1_whas__123_THEN_inputPeek_1__ETC___d1125;
  tUInt8 DEF_IF_inputPeek_2_whas__65_THEN_inputPeek_2_wget__ETC___d767;
  tUInt8 DEF_IF_inputPeek_0_1_whas__39_THEN_inputPeek_0_1_w_ETC___d741;
  tUInt8 DEF_IF_inputPeek_1_whas__54_THEN_inputPeek_1_wget__ETC___d756;
  tUWide DEF__0_CONCAT_merged_0_awff_first__53_CONCAT_merged_ETC___d255;
  tUWide DEF_NOT_merged_0_outflit_whas__73_74_OR_merged_0_o_ETC___d485;
  tUWide DEF__1_CONCAT_split_0_awug_putWire_wget__77___d278;
  tUWide DEF__1_CONCAT_toOutput_1_0_wget__70___d871;
  tUWide DEF__0_CONCAT_DONTCARE___d24;
  tUWide DEF_aXI4_Fake_16550_base_wireTxData_wget__19_CONCA_ETC___d120;
  tUWide DEF__1_CONCAT_split_0_wug_putWire_wget__85___d286;
  tUWide DEF__0_CONCAT_DONTCARE___d22;
  tUWide DEF__1_CONCAT_memory_ifc_readFF_first__02_BITS_11_T_ETC___d110;
  tUWide DEF_IF_memory_mem_mem_mem_rsp_0_rv_port0__read__6__ETC___d109;
  tUWide DEF__0_CONCAT_DONTCARE___d1141;
  tUWide DEF__0_CONCAT_aXI4_Fake_16550_base_axiShim_rff_firs_ETC___d992;
  tUWide DEF_noRouteSlv_1_currentReq_81_BITS_97_TO_93_82_CO_ETC___d985;
  tUWide DEF__5_CONCAT_DONTCARE___d48;
  tUWide DEF__4_CONCAT_TASK_mem_read_7___d88;
  tUWide DEF__0_CONCAT_DONTCARE___d62;
  tUWide DEF_toOutput_1_1_wget__76_BITS_92_TO_29_77_CONCAT__ETC___d879;
  tUWide DEF_split_1_awug_putWire_wget__24_BITS_92_TO_29_25_ETC___d327;
  tUWide DEF_IF_aXI4_Fake_16550_base_axiShim_arff_first__41_ETC___d179;
  tUInt8 DEF__0_CONCAT_DONTCARE___d753;
  tUInt8 DEF__0_CONCAT_DONTCARE___d749;
  tUInt8 DEF__0_CONCAT_DONTCARE___d576;
  tUInt8 DEF_NOT_aXI4_Fake_16550_base_regLCR_44_BIT_7_45___d146;
  tUInt8 DEF_NOT_split_1_doPut_wget__49_BIT_171_50___d451;
  tUInt8 DEF_NOT_split_0_doPut_wget__99_BIT_171_00___d301;
  tUInt32 DEF_x__h58509;
 
 /* Rules */
 public:
  void RL_memory_mem_mem_mem_do_alloc();
  void RL_memory_mem_mem_mem_do_init();
  void RL_memory_ifc_writeReq();
  void RL_memory_ifc_writeRsp();
  void RL_memory_ifc_drainInternalWriteRsp();
  void RL_memory_ifc_readReq();
  void RL_memory_ifc_readRsp();
  void RL_aXI4_Fake_16550_base_rx_read_data();
  void RL_aXI4_Fake_16550_base_rx_drop_data();
  void RL_aXI4_Fake_16550_base_tx_write_data();
  void RL_aXI4_Fake_16550_base_receive_data_ready_irq();
  void RL_aXI4_Fake_16550_base_set_last_tx_ready_irq();
  void RL_aXI4_Fake_16550_base_set_thr_pending();
  void RL_aXI4_Fake_16550_base_thr_empty_irq();
  void RL_aXI4_Fake_16550_base_pulse_irq_line();
  void RL_aXI4_Fake_16550_base_read_req();
  void RL_aXI4_Fake_16550_base_write_req();
  void RL_merged_0_awug_setCanPeek();
  void RL_merged_0_awug_setPeek();
  void RL_merged_0_awug_warnDoDrop();
  void RL_merged_0_awug_doDrop();
  void RL_merged_0_wug_setCanPeek();
  void RL_merged_0_wug_setPeek();
  void RL_merged_0_wug_warnDoDrop();
  void RL_merged_0_wug_doDrop();
  void RL_merged_0_awFlit();
  void RL_merged_0_wFlit();
  void RL_merged_0_passFlit();
  void RL_merged_0_genFirst();
  void RL_merged_0_genOther();
  void RL_split_0_awug_setCanPut();
  void RL_split_0_awug_warnDoPut();
  void RL_split_0_awug_doPut();
  void RL_split_0_wug_setCanPut();
  void RL_split_0_wug_warnDoPut();
  void RL_split_0_wug_doPut();
  void RL_split_0_putFirst();
  void RL_split_0_putOther();
  void RL_split_1_awug_setCanPut();
  void RL_split_1_awug_warnDoPut();
  void RL_split_1_awug_doPut();
  void RL_split_1_wug_setCanPut();
  void RL_split_1_wug_warnDoPut();
  void RL_split_1_wug_doPut();
  void RL_split_1_putFirst();
  void RL_split_1_putOther();
  void RL_set_input_canPeek_wire();
  void RL_set_input_peek_wires();
  void RL_set_output_canPut_wire();
  void RL_set_output_canPut_wire_1();
  void RL_set_dflt_output_canPut_wire();
  void RL_arbitrate();
  void RL_arbitration_fail();
  void RL_input_first_flit();
  void RL_input_follow_flit();
  void RL_output_selected();
  void RL_output_selected_1();
  void RL_dflt_output_selected();
  void RL_set_input_canPeek_wire_1();
  void RL_set_input_peek_wires_1();
  void RL_set_input_canPeek_wire_2();
  void RL_set_input_peek_wires_2();
  void RL_set_input_canPeek_wire_3();
  void RL_set_input_peek_wires_3();
  void RL_set_output_canPut_wire_2();
  void RL_arbitrate_1();
  void RL_arbitration_fail_1();
  void RL_legal_destination_fail_1();
  void RL_arbitration_fail_2();
  void RL_legal_destination_fail_2();
  void RL_arbitration_fail_3();
  void RL_legal_destination_fail_3();
  void RL_input_first_flit_1();
  void RL_input_follow_flit_1();
  void RL_input_first_flit_2();
  void RL_input_follow_flit_2();
  void RL_input_first_flit_3();
  void RL_input_follow_flit_3();
  void RL_output_selected_2();
  void RL_set_input_canPeek_wire_4();
  void RL_set_input_peek_wires_4();
  void RL_set_output_canPut_wire_3();
  void RL_set_output_canPut_wire_4();
  void RL_set_dflt_output_canPut_wire_1();
  void RL_arbitrate_2();
  void RL_arbitration_fail_4();
  void RL_input_first_flit_4();
  void RL_input_follow_flit_4();
  void RL_output_selected_3();
  void RL_output_selected_4();
  void RL_dflt_output_selected_1();
  void RL_set_input_canPeek_wire_5();
  void RL_set_input_peek_wires_5();
  void RL_set_input_canPeek_wire_6();
  void RL_set_input_peek_wires_6();
  void RL_set_input_canPeek_wire_7();
  void RL_set_input_peek_wires_7();
  void RL_set_output_canPut_wire_5();
  void RL_arbitrate_3();
  void RL_arbitration_fail_5();
  void RL_legal_destination_fail_5();
  void RL_arbitration_fail_6();
  void RL_legal_destination_fail_6();
  void RL_arbitration_fail_7();
  void RL_legal_destination_fail_7();
  void RL_input_first_flit_5();
  void RL_input_follow_flit_5();
  void RL_input_first_flit_6();
  void RL_input_follow_flit_6();
  void RL_input_first_flit_7();
  void RL_input_follow_flit_7();
  void RL_output_selected_5();
  void __me_check_53();
  void __me_check_55();
  void __me_check_72();
  void __me_check_74();
  void __me_check_76();
  void __me_check_86();
  void __me_check_88();
  void __me_check_90();
  void __me_check_105();
  void __me_check_107();
  void __me_check_109();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_memory_mem_mem_mem_rst$OUT_RST(tUInt8 ARG_rst_in);
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
  static void static_reset_memory_mem_mem_mem_rst$OUT_RST(void *my_this, tUInt8 ARG_rst_in);
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_top &backing);
  void vcd_defs(tVCDDumpType dt, MOD_top &backing);
  void vcd_prims(tVCDDumpType dt, MOD_top &backing);
  void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_top &backing);
};

#endif /* ifndef __top_h__ */
