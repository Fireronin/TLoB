/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Wed Dec 15 19:40:13 CET 2021
 * 
 */

/* Generation options: */
#ifndef __top_h__
#define __top_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the top module */
class MOD_top : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_arbiter_firstHot;
  MOD_Fifo<tUInt8> INST_bf1;
  MOD_Fifo<tUInt8> INST_bf2;
  MOD_Wire<tUInt8> INST_dfltOutputCanPut;
  MOD_Fifo<tUInt8> INST_ff1;
  MOD_Fifo<tUInt8> INST_ff2;
  MOD_Wire<tUInt8> INST_inputCanPeek_0;
  MOD_Wire<tUInt8> INST_inputDest_0;
  MOD_Wire<tUInt8> INST_inputPeek_0;
  MOD_Reg<tUInt8> INST_moreFlits;
  MOD_Wire<tUInt8> INST_outputCanPut_0;
  MOD_Wire<tUInt8> INST_selectInput_0;
  MOD_Wire<tUInt8> INST_toDfltOutput;
  MOD_Wire<tUInt8> INST_toOutput_0;
 
 /* Constructor */
 public:
  MOD_top(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_WILL_FIRE_RL_input_follow_flit;
  tUInt8 DEF_WILL_FIRE_RL_input_first_flit;
  tUInt8 DEF_IF_inputDest_0_whas__2_THEN_inputDest_0_wget___ETC___d14;
  tUInt8 DEF_IF_inputDest_0_whas__2_THEN_NOT_inputDest_0_wg_ETC___d37;
  tUInt8 DEF_inputDest_0_wget____d13;
  tUInt8 DEF_inputCanPeek_0_whas____d9;
  tUInt8 DEF_inputCanPeek_0_wget____d10;
  tUInt8 DEF_NOT_inputDest_0_wget__3___d36;
  tUInt8 DEF_inputCanPeek_0_whas_AND_inputCanPeek_0_wget__0_ETC___d19;
  tUInt8 DEF_outputCanPut_0_whas__5_AND_outputCanPut_0_wget__6___d17;
  tUInt8 DEF_inputCanPeek_0_whas_AND_inputCanPeek_0_wget__0___d11;
 
 /* Local definitions */
 private:
  tUInt64 DEF_v__h3896;
  tUInt64 DEF_v__h3705;
  tUInt32 DEF_signed_0___d34;
  tUInt8 DEF_IF_inputPeek_0_whas__6_THEN_inputPeek_0_wget___ETC___d48;
 
 /* Rules */
 public:
  void RL_mkConnectionGetPut();
  void RL_set_input_canPeek_wire();
  void RL_set_input_peek_wires();
  void RL_set_output_canPut_wire();
  void RL_arbitrate();
  void RL_arbitration_fail();
  void RL_legal_destination_fail();
  void RL_input_first_flit();
  void RL_input_follow_flit();
  void RL_output_selected();
  void __me_check_7();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_top &backing);
  void vcd_defs(tVCDDumpType dt, MOD_top &backing);
  void vcd_prims(tVCDDumpType dt, MOD_top &backing);
};

#endif /* ifndef __top_h__ */
