/*
 * Generated by Bluespec Compiler, version 2021.07 (build 4cac6eb)
 * 
 * On Mon Apr 25 22:01:34 UTC 2022
 * 
 */

/* Generation options: */
#ifndef __top_h__
#define __top_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the top module */
class MOD_top : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_instance1_awSent;
  MOD_Reg<tUInt32> INST_instance1_cnt;
  MOD_Reg<tUInt32> INST_instance1_nextWriteAddr;
  MOD_Reg<tUInt8> INST_instance1_reqSent;
  MOD_Reg<tUInt32> INST_instance1_rspCnt;
  MOD_CReg<tUInt64> INST_instance1_shim_shim_arff_rv;
  MOD_CReg<tUInt64> INST_instance1_shim_shim_awff_rv;
  MOD_CReg<tUInt8> INST_instance1_shim_shim_bff_rv;
  MOD_CReg<tUWide> INST_instance1_shim_shim_rff_rv;
  MOD_CReg<tUWide> INST_instance1_shim_shim_wff_rv;
 
 /* Constructor */
 public:
  MOD_top(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUWide DEF_instance1_shim_shim_wff_rv_port0__read____d16;
  tUInt8 DEF_instance1_awSent__h1235;
 
 /* Local definitions */
 private:
  tUInt64 DEF_v__h1922;
  tUInt32 DEF__read__h1078;
  tUWide DEF__1_CONCAT_0_CONCAT_instance1_cnt_2_PLUS_1000_3__ETC___d26;
  tUWide DEF_f_wdata__h1725;
 
 /* Rules */
 public:
  void RL_instance1_putAXI4_AWFlit();
  void RL_instance1_putAXI4_WFlit();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_top &backing);
  void vcd_defs(tVCDDumpType dt, MOD_top &backing);
  void vcd_prims(tVCDDumpType dt, MOD_top &backing);
};

#endif /* ifndef __top_h__ */
