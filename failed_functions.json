{function AXI4_Common_Types: :bytesFromAXI4_Size {result Integer
    } {arguments AXI4_Common_Types: :AXI4_Size
    } {position {AXI/AXI4_Common_Types.bsv 58 18
        }
    }
} {function AXI4_Common_Types: :showAXI4_Size {result Fmt
    } {arguments AXI4_Common_Types: :AXI4_Size
    } {position {AXI/AXI4_Common_Types.bsv 68 14
        }
    }
} {function AXI4_Common_Types: :fromAXI4_Size {result Bit#(TExp#(SizeOf#(AXI4_Common_Types: :AXI4_Size)))
    } {arguments AXI4_Common_Types: :AXI4_Size
    } {position {AXI/AXI4_Common_Types.bsv 91 43
        }
    }
} {function AXI4_Common_Types: :toAXI4_Size {result Maybe#(AXI4_Common_Types: :AXI4_Size)
    } {arguments Bit#(TExp#(SizeOf#(AXI4_Common_Types: :AXI4_Size)))
    } {position {AXI/AXI4_Common_Types.bsv 94 29
        }
    }
} {function AXI4_Common_Types: :arcache_dev_nonbuf {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 155 13
        }
    }
} {function AXI4_Common_Types: :arcache_dev_buf {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 156 13
        }
    }
} {function AXI4_Common_Types: :arcache_norm_noncache_nonbuf {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 157 13
        }
    }
} {function AXI4_Common_Types: :arcache_norm_noncache_buf {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 158 13
        }
    }
} {function AXI4_Common_Types: :arcache_wthru_no_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 159 13
        }
    }
} {function AXI4_Common_Types: :arcache_wthru_r_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 160 13
        }
    }
} {function AXI4_Common_Types: :arcache_wthru_w_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 161 13
        }
    }
} {function AXI4_Common_Types: :arcache_wthru_r_w_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 162 13
        }
    }
} {function AXI4_Common_Types: :arcache_wback_no_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 163 13
        }
    }
} {function AXI4_Common_Types: :arcache_wback_r_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 164 13
        }
    }
} {function AXI4_Common_Types: :arcache_wback_w_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 165 13
        }
    }
} {function AXI4_Common_Types: :arcache_wback_r_w_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 166 13
        }
    }
} {function AXI4_Common_Types: :awcache_dev_nonbuf {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 168 13
        }
    }
} {function AXI4_Common_Types: :awcache_dev_buf {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 169 13
        }
    }
} {function AXI4_Common_Types: :awcache_norm_noncache_nonbuf {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 170 13
        }
    }
} {function AXI4_Common_Types: :awcache_norm_noncache_buf {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 171 13
        }
    }
} {function AXI4_Common_Types: :awcache_wthru_no_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 172 13
        }
    }
} {function AXI4_Common_Types: :awcache_wthru_r_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 173 13
        }
    }
} {function AXI4_Common_Types: :awcache_wthru_w_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 174 13
        }
    }
} {function AXI4_Common_Types: :awcache_wthru_r_w_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 175 13
        }
    }
} {function AXI4_Common_Types: :awcache_wback_no_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 176 13
        }
    }
} {function AXI4_Common_Types: :awcache_wback_r_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 177 13
        }
    }
} {function AXI4_Common_Types: :awcache_wback_w_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 178 13
        }
    }
} {function AXI4_Common_Types: :awcache_wback_r_w_alloc {result AXI4_Common_Types: :AXI4_Cache
    } {position {AXI/AXI4_Common_Types.bsv 179 13
        }
    }
} {function AXI4_Common_Types: :axi4Prot {result AXI4_Common_Types: :AXI4_Prot
    } {arguments {AXI4_Common_Types: :AXI4_Prot_2 AXI4_Common_Types: :AXI4_Prot_1 AXI4_Common_Types: :AXI4_Prot_0
        }
    } {position {AXI/AXI4_Common_Types.bsv 193 20
        }
    }
} {module AXI4Lite_AR_Utils: :toAXI4Lite_AR_Master_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_AR_Master_Sig#(addr_, user_)
            }
        }
    } {arguments src_t#(t)
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4Lite_AR_Utils: :ToAXI4Lite_ARFlit#(t, addr_, user_)
            } {SourceSink: :ToSource#(src_t#(t), t)
            }
        }
    } {position {AXI/AXI4Lite_AR_Utils.bsv 61 8
        }
    }
} {module AXI4Lite_AR_Utils: :fromAXI4Lite_AR_Master_Sig {interface {
            {SourceSink: :Source#(AXI4Lite_Types: :AXI4Lite_ARFlit#(addr_, user_))
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_AR_Master_Sig#(addr_, user_)
            }
        }
    } {position {AXI/AXI4Lite_AR_Utils.bsv 75 8
        }
    }
} {module AXI4Lite_AR_Utils: :toAXI4Lite_AR_Slave_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_AR_Slave_Sig#(addr_, user_)
            }
        }
    } {arguments snk_t
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4Lite_AR_Utils: :FromAXI4Lite_ARFlit#(t, addr_, user_)
            } {SourceSink: :ToSink#(snk_t, t)
            }
        }
    } {position {AXI/AXI4Lite_AR_Utils.bsv 93 8
        }
    }
} {module AXI4Lite_AR_Utils: :fromAXI4Lite_AR_Slave_Sig {interface {
            {SourceSink: :Sink#(AXI4Lite_Types: :AXI4Lite_ARFlit#(addr_, user_))
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_AR_Slave_Sig#(addr_, user_)
            }
        }
    } {position {AXI/AXI4Lite_AR_Utils.bsv 107 8
        }
    }
} {module AXI4Lite_AW_Utils: :toAXI4Lite_AW_Master_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_AW_Master_Sig#(addr_, user_)
            }
        }
    } {arguments src_t#(t)
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4Lite_AW_Utils: :ToAXI4Lite_AWFlit#(t, addr_, user_)
            } {SourceSink: :ToSource#(src_t#(t), t)
            }
        }
    } {position {AXI/AXI4Lite_AW_Utils.bsv 61 8
        }
    }
} {module AXI4Lite_AW_Utils: :fromAXI4Lite_AW_Master_Sig {interface {
            {SourceSink: :Source#(AXI4Lite_Types: :AXI4Lite_AWFlit#(addr_, user_))
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_AW_Master_Sig#(addr_, user_)
            }
        }
    } {position {AXI/AXI4Lite_AW_Utils.bsv 75 8
        }
    }
} {module AXI4Lite_AW_Utils: :toAXI4Lite_AW_Slave_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_AW_Slave_Sig#(addr_, user_)
            }
        }
    } {arguments snk_t
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4Lite_AW_Utils: :FromAXI4Lite_AWFlit#(t, addr_, user_)
            } {SourceSink: :ToSink#(snk_t, t)
            }
        }
    } {position {AXI/AXI4Lite_AW_Utils.bsv 93 8
        }
    }
} {module AXI4Lite_AW_Utils: :fromAXI4Lite_AW_Slave_Sig {interface {
            {SourceSink: :Sink#(AXI4Lite_Types: :AXI4Lite_AWFlit#(addr_, user_))
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_AW_Slave_Sig#(addr_, user_)
            }
        }
    } {position {AXI/AXI4Lite_AW_Utils.bsv 107 8
        }
    }
} {module AXI4Lite_B_Utils: :toAXI4Lite_B_Master_Sig {interface AXI4Lite_Types: :AXI4Lite_B_Master_Sig#(user_)
    } {arguments snk_t
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4Lite_B_Utils: :FromAXI4Lite_BFlit#(t, user_)
            } {SourceSink: :ToSink#(snk_t, t)
            }
        }
    } {position {AXI/AXI4Lite_B_Utils.bsv 61 8
        }
    }
} {module AXI4Lite_B_Utils: :fromAXI4Lite_B_Master_Sig {interface SourceSink: :Sink#(AXI4Lite_Types: :AXI4Lite_BFlit#(user_))
    } {arguments AXI4Lite_Types: :AXI4Lite_B_Master_Sig#(user_)
    } {position {AXI/AXI4Lite_B_Utils.bsv 72 8
        }
    }
} {module AXI4Lite_B_Utils: :toAXI4Lite_B_Slave_Sig {interface AXI4Lite_Types: :AXI4Lite_B_Slave_Sig#(user_)
    } {arguments src_t#(t)
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4Lite_B_Utils: :ToAXI4Lite_BFlit#(t, user_)
            } {SourceSink: :ToSource#(src_t#(t), t)
            }
        }
    } {position {AXI/AXI4Lite_B_Utils.bsv 90 8
        }
    }
} {module AXI4Lite_B_Utils: :fromAXI4Lite_B_Slave_Sig {interface SourceSink: :Source#(AXI4Lite_Types: :AXI4Lite_BFlit#(user_))
    } {arguments AXI4Lite_Types: :AXI4Lite_B_Slave_Sig#(user_)
    } {position {AXI/AXI4Lite_B_Utils.bsv 102 8
        }
    }
} {module AXI4Lite_R_Utils: :toAXI4Lite_R_Master_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_R_Master_Sig#(data_, user_)
            }
        }
    } {arguments snk_t
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4Lite_R_Utils: :FromAXI4Lite_RFlit#(t, data_, user_)
            } {SourceSink: :ToSink#(snk_t, t)
            }
        }
    } {position {AXI/AXI4Lite_R_Utils.bsv 61 8
        }
    }
} {module AXI4Lite_R_Utils: :fromAXI4Lite_R_Master_Sig {interface {
            {SourceSink: :Sink#(AXI4Lite_Types: :AXI4Lite_RFlit#(data_, user_))
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_R_Master_Sig#(data_, user_)
            }
        }
    } {position {AXI/AXI4Lite_R_Utils.bsv 75 8
        }
    }
} {module AXI4Lite_R_Utils: :toAXI4Lite_R_Slave_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_R_Slave_Sig#(data_, user_)
            }
        }
    } {arguments src_t#(t)
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4Lite_R_Utils: :ToAXI4Lite_RFlit#(t, data_, user_)
            } {SourceSink: :ToSource#(src_t#(t), t)
            }
        }
    } {position {AXI/AXI4Lite_R_Utils.bsv 93 8
        }
    }
} {module AXI4Lite_R_Utils: :fromAXI4Lite_R_Slave_Sig {interface {
            {SourceSink: :Source#(AXI4Lite_Types: :AXI4Lite_RFlit#(data_, user_))
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_R_Slave_Sig#(data_, user_)
            }
        }
    } {position {AXI/AXI4Lite_R_Utils.bsv 107 8
        }
    }
} {module AXI4Lite_W_Utils: :toAXI4Lite_W_Master_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_W_Master_Sig#(data_, user_)
            }
        }
    } {arguments src_t#(t)
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4Lite_W_Utils: :ToAXI4Lite_WFlit#(t, data_, user_)
            } {SourceSink: :ToSource#(src_t#(t), t)
            }
        }
    } {position {AXI/AXI4Lite_W_Utils.bsv 61 8
        }
    }
} {module AXI4Lite_W_Utils: :fromAXI4Lite_W_Master_Sig {interface {
            {SourceSink: :Source#(AXI4Lite_Types: :AXI4Lite_WFlit#(data_, user_))
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_W_Master_Sig#(data_, user_)
            }
        }
    } {position {AXI/AXI4Lite_W_Utils.bsv 75 8
        }
    }
} {module AXI4Lite_W_Utils: :toAXI4Lite_W_Slave_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_W_Slave_Sig#(data_, user_)
            }
        }
    } {arguments snk_t
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4Lite_W_Utils: :FromAXI4Lite_WFlit#(t, data_, user_)
            } {SourceSink: :ToSink#(snk_t, t)
            }
        }
    } {position {AXI/AXI4Lite_W_Utils.bsv 93 8
        }
    }
} {module AXI4Lite_W_Utils: :fromAXI4Lite_W_Slave_Sig {interface {
            {SourceSink: :Sink#(AXI4Lite_Types: :AXI4Lite_WFlit#(data_, user_))
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_W_Slave_Sig#(data_, user_)
            }
        }
    } {position {AXI/AXI4Lite_W_Utils.bsv 107 8
        }
    }
} {function AXI4Lite_Utils: :mergeLiteWrite {result {
            {SourceSink: :Source#(AXI4Lite_Types: :AXI4Lite_WriteFlit#(addr_, data_, awu_, wu_))
            }
        }
    } {arguments {
            {SourceSink: :Source#(AXI4Lite_Types: :AXI4Lite_AWFlit#(addr_, awu_))
            } {SourceSink: :Source#(AXI4Lite_Types: :AXI4Lite_WFlit#(data_, wu_))
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 52 64
        }
    }
} {function AXI4Lite_Utils: :splitLiteWrite {result {
            {SourceSink: :Sink#(AXI4Lite_Types: :AXI4Lite_WriteFlit#(addr_, data_, awu_, wu_))
            }
        }
    } {arguments {
            {SourceSink: :Sink#(AXI4Lite_Types: :AXI4Lite_AWFlit#(addr_, awu_))
            } {SourceSink: :Sink#(AXI4Lite_Types: :AXI4Lite_WFlit#(data_, wu_))
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 60 62
        }
    }
} {function AXI4Lite_Utils: :offsetAWFlit {result {
            {AXI4Lite_Types: :AXI4Lite_AWFlit#(a, b)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_AWFlit#(a, b)
            } Int#(a)
        }
    } {position {AXI/AXI4Lite_Utils.bsv 75 3
        }
    }
} {function AXI4Lite_Utils: :offsetARFlit {result {
            {AXI4Lite_Types: :AXI4Lite_ARFlit#(a, b)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_ARFlit#(a, b)
            } Int#(a)
        }
    } {position {AXI/AXI4Lite_Utils.bsv 79 3
        }
    }
} {function AXI4Lite_Utils: :offsetSlave {result {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g)
            } Integer
        }
    } {position {AXI/AXI4Lite_Utils.bsv 82 47
        }
    }
} {function AXI4Lite_Utils: :zeroUserFields {result {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c0, d0, e0, f0, g0)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c1, d1, e1, f1, g1)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 102 52
        }
    }
} {module AXI4Lite_Utils: :mkAXI4LiteShimBypassFIFOF {interface {
            {AXI4Lite_Types: :AXI4Lite_Shim#(a, b, c, d, e, f, g)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 149 8
        }
    }
} {module AXI4Lite_Utils: :mkAXI4LiteShimBypassFF1 {interface {
            {AXI4Lite_Types: :AXI4Lite_Shim#(a, b, c, d, e, f, g)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 149 8
        }
    }
} {module AXI4Lite_Utils: :mkAXI4LiteShimFF1 {interface {
            {AXI4Lite_Types: :AXI4Lite_Shim#(a, b, c, d, e, f, g)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 149 8
        }
    }
} {module AXI4Lite_Utils: :mkAXI4LiteShimFF {interface {
            {AXI4Lite_Types: :AXI4Lite_Shim#(a, b, c, d, e, f, g)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 149 8
        }
    }
} {module AXI4Lite_Utils: :mkAXI4LiteShimSizedFIFOF4 {interface {
            {AXI4Lite_Types: :AXI4Lite_Shim#(a, b, c, d, e, f, g)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 149 8
        }
    }
} {module AXI4Lite_Utils: :mkAXI4LiteShim {interface {
            {AXI4Lite_Types: :AXI4Lite_Shim#(a, b, c, d, e, f, g)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 184 8
        }
    }
} {function AXI4Lite_Utils: :debugAXI4Lite_Master {result {
            {AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g)
            } Fmt
        }
    } {position {AXI/AXI4Lite_Utils.bsv 194 10
        }
    }
} {function AXI4Lite_Utils: :debugAXI4Lite_Slave {result {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g)
            } Fmt
        }
    } {position {AXI/AXI4Lite_Utils.bsv 204 10
        }
    }
} {module AXI4Lite_Utils: :mkAXI4LiteDebugShim {interface {
            {AXI4Lite_Types: :AXI4Lite_Shim#(a, b, c, d, e, f, g)
            }
        }
    } {arguments String
    } {position {AXI/AXI4Lite_Utils.bsv 213 8
        }
    }
} {module AXI4Lite_Utils: :toAXI4Lite_Master_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_Master_Sig#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 236 8
        }
    }
} {module AXI4Lite_Utils: :fromAXI4Lite_Master_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Master_Sig#(a, b, c, d, e, f, g)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 250 8
        }
    }
} {module AXI4Lite_Utils: :liftAXI4Lite_Master_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_Master_Sig#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {function AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g) f(AXI4Lite_Types: :AXI4Lite_Master#(a1, b1, c1, d1, e1, f1, g1) x1)
            } {AXI4Lite_Types: :AXI4Lite_Master_Sig#(a1, b1, c1, d1, e1, f1, g1)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 265 8
        }
    }
} {module AXI4Lite_Utils: :toAXI4Lite_Slave_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_Slave_Sig#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 276 8
        }
    }
} {module AXI4Lite_Utils: :fromAXI4Lite_Slave_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Slave_Sig#(a, b, c, d, e, f, g)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 290 8
        }
    }
} {module AXI4Lite_Utils: :liftAXI4Lite_Slave_Sig {interface {
            {AXI4Lite_Types: :AXI4Lite_Slave_Sig#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {function AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g) f(AXI4Lite_Types: :AXI4Lite_Slave#(a1, b1, c1, d1, e1, f1, g1) x1)
            } {AXI4Lite_Types: :AXI4Lite_Slave_Sig#(a1, b1, c1, d1, e1, f1, g1)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 305 8
        }
    }
} {module AXI4Lite_Utils: :toUnguarded_AXI4Lite_Master {interface {
            {AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 319 8
        }
    }
} {module AXI4Lite_Utils: :toUnguarded_AXI4Lite_Slave {interface {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 333 8
        }
    }
} {function AXI4Lite_Utils: :guard_AXI4Lite_Master {result {
            {AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g)
            } Bool
        }
    } {position {AXI/AXI4Lite_Utils.bsv 347 42
        }
    }
} {function AXI4Lite_Utils: :guard_AXI4Lite_Slave {result {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g)
            } Bool
        }
    } {position {AXI/AXI4Lite_Utils.bsv 357 41
        }
    }
} {function AXI4Lite_Utils: :fmapAddress_AXI4Lite_Master {result {
            {AXI4Lite_Types: :AXI4Lite_Master#(aPost, t0, t1, t2, t3, t4, t5)
            }
        }
    } {arguments {
            {function Bit#(aPost) f(Bit#(aPre) x1)
            } {AXI4Lite_Types: :AXI4Lite_Master#(aPre, t0, t1, t2, t3, t4, t5)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 372 10
        }
    }
} {function AXI4Lite_Utils: :fmapAddress_AXI4Lite_Slave {result {
            {AXI4Lite_Types: :AXI4Lite_Slave#(aPost, t0, t1, t2, t3, t4, t5)
            }
        }
    } {arguments {
            {function Bit#(aPre) f(Bit#(aPost) x1)
            } {AXI4Lite_Types: :AXI4Lite_Slave#(aPre, t0, t1, t2, t3, t4, t5)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 403 10
        }
    }
} {function AXI4Lite_Utils: :zeroUserFields_AXI4Lite_Master {result {
            {AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Master#(a, b, c_, d_, e_, f_, g_)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 430 10
        }
    }
} {function AXI4Lite_Utils: :zeroUserFields_AXI4Lite_Slave {result {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c_, d_, e_, f_, g_)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 475 10
        }
    }
} {function AXI4Lite_Utils: :truncateAddrFieldsMasterLite {result {
            {AXI4Lite_Types: :AXI4Lite_Master#(a_, b, c, d, e, f, g)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g)
            }
        }
    } {provisos {
            {Add#(a__, a_, a)
            }
        }
    } {position {AXI/AXI4Lite_Utils.bsv 543 43
        }
    }
} {function AXI4_AR_Utils: :mapAXI4_ARFlit_arid {result {
            {AXI4_Types: :AXI4_ARFlit#(id_out, addr, user)
            }
        }
    } {arguments {
            {function Bit#(id_out) f(Bit#(id_in) x1)
            } {AXI4_Types: :AXI4_ARFlit#(id_in, addr, user)
            }
        }
    } {position {AXI/AXI4_AR_Utils.bsv 44 3
        }
    }
} {function AXI4_AR_Utils: :mapAXI4_ARFlit_araddr {result {
            {AXI4_Types: :AXI4_ARFlit#(id, addr_out, user)
            }
        }
    } {arguments {
            {function Bit#(addr_out) f(Bit#(addr_in) x1)
            } {AXI4_Types: :AXI4_ARFlit#(id, addr_in, user)
            }
        }
    } {position {AXI/AXI4_AR_Utils.bsv 60 3
        }
    }
} {function AXI4_AR_Utils: :mapAXI4_ARFlit_aruser {result {
            {AXI4_Types: :AXI4_ARFlit#(id, addr, user_out)
            }
        }
    } {arguments {
            {function Bit#(user_out) f(Bit#(user_in) x1)
            } {AXI4_Types: :AXI4_ARFlit#(id, addr, user_in)
            }
        }
    } {position {AXI/AXI4_AR_Utils.bsv 76 3
        }
    }
} {module AXI4_AR_Utils: :toAXI4_AR_Master_Sig {interface {
            {AXI4_Types: :AXI4_AR_Master_Sig#(id_, addr_, user_)
            }
        }
    } {arguments src_t#(t)
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4_AR_Utils: :ToAXI4_ARFlit#(t, id_, addr_, user_)
            } {SourceSink: :ToSource#(src_t#(t), t)
            }
        }
    } {position {AXI/AXI4_AR_Utils.bsv 119 8
        }
    }
} {module AXI4_AR_Utils: :fromAXI4_AR_Master_Sig {interface {
            {SourceSink: :Source#(AXI4_Types: :AXI4_ARFlit#(id_, addr_, user_))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_AR_Master_Sig#(id_, addr_, user_)
            }
        }
    } {position {AXI/AXI4_AR_Utils.bsv 141 8
        }
    }
} {module AXI4_AR_Utils: :toAXI4_AR_Slave_Sig {interface {
            {AXI4_Types: :AXI4_AR_Slave_Sig#(id_, addr_, user_)
            }
        }
    } {arguments snk_t
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4_AR_Utils: :FromAXI4_ARFlit#(t, id_, addr_, user_)
            } {SourceSink: :ToSink#(snk_t, t)
            }
        }
    } {position {AXI/AXI4_AR_Utils.bsv 167 8
        }
    }
} {module AXI4_AR_Utils: :fromAXI4_AR_Slave_Sig {interface {
            {SourceSink: :Sink#(AXI4_Types: :AXI4_ARFlit#(id_, addr_, user_))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_AR_Slave_Sig#(id_, addr_, user_)
            }
        }
    } {position {AXI/AXI4_AR_Utils.bsv 200 8
        }
    }
} {function AXI4_AW_Utils: :mapAXI4_AWFlit_awid {result {
            {AXI4_Types: :AXI4_AWFlit#(id_out, addr, user)
            }
        }
    } {arguments {
            {function Bit#(id_out) f(Bit#(id_in) x1)
            } {AXI4_Types: :AXI4_AWFlit#(id_in, addr, user)
            }
        }
    } {position {AXI/AXI4_AW_Utils.bsv 44 3
        }
    }
} {function AXI4_AW_Utils: :mapAXI4_AWFlit_awaddr {result {
            {AXI4_Types: :AXI4_AWFlit#(id, addr_out, user)
            }
        }
    } {arguments {
            {function Bit#(addr_out) f(Bit#(addr_in) x1)
            } {AXI4_Types: :AXI4_AWFlit#(id, addr_in, user)
            }
        }
    } {position {AXI/AXI4_AW_Utils.bsv 60 3
        }
    }
} {function AXI4_AW_Utils: :mapAXI4_AWFlit_awuser {result {
            {AXI4_Types: :AXI4_AWFlit#(id, addr, user_out)
            }
        }
    } {arguments {
            {function Bit#(user_out) f(Bit#(user_in) x1)
            } {AXI4_Types: :AXI4_AWFlit#(id, addr, user_in)
            }
        }
    } {position {AXI/AXI4_AW_Utils.bsv 76 3
        }
    }
} {module AXI4_AW_Utils: :toAXI4_AW_Master_Sig {interface {
            {AXI4_Types: :AXI4_AW_Master_Sig#(id_, addr_, user_)
            }
        }
    } {arguments src_t#(t)
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4_AW_Utils: :ToAXI4_AWFlit#(t, id_, addr_, user_)
            } {SourceSink: :ToSource#(src_t#(t), t)
            }
        }
    } {position {AXI/AXI4_AW_Utils.bsv 119 8
        }
    }
} {module AXI4_AW_Utils: :fromAXI4_AW_Master_Sig {interface {
            {SourceSink: :Source#(AXI4_Types: :AXI4_AWFlit#(id_, addr_, user_))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_AW_Master_Sig#(id_, addr_, user_)
            }
        }
    } {position {AXI/AXI4_AW_Utils.bsv 141 8
        }
    }
} {module AXI4_AW_Utils: :toAXI4_AW_Slave_Sig {interface {
            {AXI4_Types: :AXI4_AW_Slave_Sig#(id_, addr_, user_)
            }
        }
    } {arguments snk_t
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4_AW_Utils: :FromAXI4_AWFlit#(t, id_, addr_, user_)
            } {SourceSink: :ToSink#(snk_t, t)
            }
        }
    } {position {AXI/AXI4_AW_Utils.bsv 167 8
        }
    }
} {module AXI4_AW_Utils: :fromAXI4_AW_Slave_Sig {interface {
            {SourceSink: :Sink#(AXI4_Types: :AXI4_AWFlit#(id_, addr_, user_))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_AW_Slave_Sig#(id_, addr_, user_)
            }
        }
    } {position {AXI/AXI4_AW_Utils.bsv 200 8
        }
    }
} {function AXI4_AXI4Lite_Bridges: :die {result Action
    } {arguments Fmt
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 45 17
        }
    }
} {function AXI4_AXI4Lite_Bridges: :dfltAW {result {
            {AXI4_Types: :AXI4_AWFlit#(id_, addr_, awuser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 55 36
        }
    }
} {function AXI4_AXI4Lite_Bridges: :dfltW {result {
            {AXI4_Types: :AXI4_WFlit#(data_, wuser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 67 29
        }
    }
} {function AXI4_AXI4Lite_Bridges: :dfltAR {result {
            {AXI4_Types: :AXI4_ARFlit#(id_, addr_, aruser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 72 36
        }
    }
} {function AXI4_AXI4Lite_Bridges: :fromAXI4Lite_AW {result {
            {AXI4_Types: :AXI4_AWFlit#(id_, addr_, awuser_)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_AWFlit#(addr_, awuser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 87 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :fromAXI4Lite_W {result {
            {AXI4_Types: :AXI4_WFlit#(data_, wuser_)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_WFlit#(data_, wuser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 95 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :fromAXI4Lite_B {result {
            {AXI4_Types: :AXI4_BFlit#(id_, buser_)
            }
        }
    } {arguments {Bit#(id_) AXI4Lite_Types: :AXI4Lite_BFlit#(buser_)
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 103 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :fromAXI4Lite_AR {result {
            {AXI4_Types: :AXI4_ARFlit#(id_, addr_, aruser_)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_ARFlit#(addr_, aruser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 106 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :fromAXI4Lite_R {result {
            {AXI4_Types: :AXI4_RFlit#(id_, data_, ruser_)
            }
        }
    } {arguments {Bit#(id_) {AXI4Lite_Types: :AXI4Lite_RFlit#(data_, ruser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 114 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :toAXI4Lite_AW {result {
            {AXI4Lite_Types: :AXI4Lite_AWFlit#(addr_, awuser_)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_AWFlit#(id_, addr_, awuser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 123 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :toAXI4Lite_W {result {
            {AXI4Lite_Types: :AXI4Lite_WFlit#(data_, wuser_)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_WFlit#(data_, wuser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 128 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :toAXI4Lite_B {result AXI4Lite_Types: :AXI4Lite_BFlit#(buser_)
    } {arguments {
            {AXI4_Types: :AXI4_BFlit#(id_, buser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 133 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :toAXI4Lite_AR {result {
            {AXI4Lite_Types: :AXI4Lite_ARFlit#(addr_, aruser_)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_ARFlit#(id_, addr_, aruser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 137 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :toAXI4Lite_R {result {
            {AXI4Lite_Types: :AXI4Lite_RFlit#(data_, ruser_)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_RFlit#(id_, data_, ruser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 142 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :checkAXI4_AWFlit {result Action
    } {arguments {AXI4_Common_Types: :AXI4_Size Bool {AXI4_Types: :AXI4_AWFlit#(id_, addr_, awuser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 148 17
        }
    }
} {function AXI4_AXI4Lite_Bridges: :checkAXI4_WFlit {result Action
    } {arguments {
            {AXI4_Types: :AXI4_WFlit#(data_, wuser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 186 17
        }
    }
} {function AXI4_AXI4Lite_Bridges: :checkAXI4_BFlit {result Action
    } {arguments {Bool {AXI4_Types: :AXI4_BFlit#(id_, buser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 192 17
        }
    }
} {function AXI4_AXI4Lite_Bridges: :checkAXI4_ARFlit {result Action
    } {arguments {AXI4_Common_Types: :AXI4_Size Bool {AXI4_Types: :AXI4_ARFlit#(id_, addr_, aruser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 199 17
        }
    }
} {function AXI4_AXI4Lite_Bridges: :checkAXI4_RFlit {result Action
    } {arguments {Bool {AXI4_Types: :AXI4_RFlit#(id_, data_, ruser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 237 17
        }
    }
} {function AXI4_AXI4Lite_Bridges: :fromAXI4ToAXI4Lite_Master {result {
            {AXI4Lite_Types: :AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 361 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :fromAXI4LiteToAXI4_Master {result {
            {AXI4_Types: :AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 381 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :fromAXI4ToAXI4Lite_Slave {result {
            {AXI4Lite_Types: :AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 405 10
        }
    }
} {function AXI4_AXI4Lite_Bridges: :fromAXI4LiteToAXI4_Slave {result {
            {AXI4_Types: :AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)
            }
        }
    } {arguments {
            {AXI4Lite_Types: :AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)
            }
        }
    } {position {AXI/AXI4_AXI4Lite_Bridges.bsv 425 10
        }
    }
} {function AXI4_B_Utils: :mapAXI4_BFlit_bid {result {
            {AXI4_Types: :AXI4_BFlit#(id_out, user)
            }
        }
    } {arguments {
            {function Bit#(id_out) f(Bit#(id_in) x1)
            } {AXI4_Types: :AXI4_BFlit#(id_in, user)
            }
        }
    } {position {AXI/AXI4_B_Utils.bsv 44 3
        }
    }
} {function AXI4_B_Utils: :mapAXI4_BFlit_buser {result {
            {AXI4_Types: :AXI4_BFlit#(id, user_out)
            }
        }
    } {arguments {
            {function Bit#(user_out) f(Bit#(user_in) x1)
            } {AXI4_Types: :AXI4_BFlit#(id, user_in)
            }
        }
    } {position {AXI/AXI4_B_Utils.bsv 52 3
        }
    }
} {module AXI4_B_Utils: :toAXI4_B_Master_Sig {interface {
            {AXI4_Types: :AXI4_B_Master_Sig#(id_, user_)
            }
        }
    } {arguments snk_t
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4_B_Utils: :FromAXI4_BFlit#(t, id_, user_)
            } {SourceSink: :ToSink#(snk_t, t)
            }
        }
    } {position {AXI/AXI4_B_Utils.bsv 81 8
        }
    }
} {module AXI4_B_Utils: :fromAXI4_B_Master_Sig {interface {
            {SourceSink: :Sink#(AXI4_Types: :AXI4_BFlit#(id_, user_))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_B_Master_Sig#(id_, user_)
            }
        }
    } {position {AXI/AXI4_B_Utils.bsv 92 8
        }
    }
} {module AXI4_B_Utils: :toAXI4_B_Slave_Sig {interface {
            {AXI4_Types: :AXI4_B_Slave_Sig#(id_, user_)
            }
        }
    } {arguments src_t#(t)
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4_B_Utils: :ToAXI4_BFlit#(t, id_, user_)
            } {SourceSink: :ToSource#(src_t#(t), t)
            }
        }
    } {position {AXI/AXI4_B_Utils.bsv 110 8
        }
    }
} {module AXI4_B_Utils: :fromAXI4_B_Slave_Sig {interface {
            {SourceSink: :Source#(AXI4_Types: :AXI4_BFlit#(id_, user_))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_B_Slave_Sig#(id_, user_)
            }
        }
    } {position {AXI/AXI4_B_Utils.bsv 123 8
        }
    }
} {function AXI4_R_Utils: :mapAXI4_RFlit_rid {result {
            {AXI4_Types: :AXI4_RFlit#(id_out, data, user)
            }
        }
    } {arguments {
            {function Bit#(id_out) f(Bit#(id_in) x1)
            } {AXI4_Types: :AXI4_RFlit#(id_in, data, user)
            }
        }
    } {position {AXI/AXI4_R_Utils.bsv 44 3
        }
    }
} {function AXI4_R_Utils: :mapAXI4_RFlit_rdata {result {
            {AXI4_Types: :AXI4_RFlit#(id, data_out, user)
            }
        }
    } {arguments {
            {function Bit#(data_out) f(Bit#(data_in) x1)
            } {AXI4_Types: :AXI4_RFlit#(id, data_in, user)
            }
        }
    } {position {AXI/AXI4_R_Utils.bsv 54 3
        }
    }
} {function AXI4_R_Utils: :mapAXI4_RFlit_ruser {result {
            {AXI4_Types: :AXI4_RFlit#(id, data, user_out)
            }
        }
    } {arguments {
            {function Bit#(user_out) f(Bit#(user_in) x1)
            } {AXI4_Types: :AXI4_RFlit#(id, data, user_in)
            }
        }
    } {position {AXI/AXI4_R_Utils.bsv 64 3
        }
    }
} {module AXI4_R_Utils: :toAXI4_R_Master_Sig {interface {
            {AXI4_Types: :AXI4_R_Master_Sig#(id_, data_, user_)
            }
        }
    } {arguments snk_t
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4_R_Utils: :FromAXI4_RFlit#(t, id_, data_, user_)
            } {SourceSink: :ToSink#(snk_t, t)
            }
        }
    } {position {AXI/AXI4_R_Utils.bsv 101 8
        }
    }
} {module AXI4_R_Utils: :fromAXI4_R_Master_Sig {interface {
            {SourceSink: :Sink#(AXI4_Types: :AXI4_RFlit#(id_, data_, user_))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_R_Master_Sig#(id_, data_, user_)
            }
        }
    } {position {AXI/AXI4_R_Utils.bsv 115 8
        }
    }
} {module AXI4_R_Utils: :toAXI4_R_Slave_Sig {interface {
            {AXI4_Types: :AXI4_R_Slave_Sig#(id_, data_, user_)
            }
        }
    } {arguments src_t#(t)
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4_R_Utils: :ToAXI4_RFlit#(t, id_, data_, user_)
            } {SourceSink: :ToSource#(src_t#(t), t)
            }
        }
    } {position {AXI/AXI4_R_Utils.bsv 138 8
        }
    }
} {module AXI4_R_Utils: :fromAXI4_R_Slave_Sig {interface {
            {SourceSink: :Source#(AXI4_Types: :AXI4_RFlit#(id_, data_, user_))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_R_Slave_Sig#(id_, data_, user_)
            }
        }
    } {position {AXI/AXI4_R_Utils.bsv 154 8
        }
    }
} {function AXI4_W_Utils: :mapAXI4_WFlit_wdata {result {
            {AXI4_Types: :AXI4_WFlit#(data_out, user)
            }
        }
    } {arguments {
            {function Bit#(data_out) f(Bit#(data_in) x1)
            } {function Bit#(TDiv#(data_out,
                8)) f(Bit#(TDiv#(data_in,
                8)) x1)
            } {AXI4_Types: :AXI4_WFlit#(data_in, user)
            }
        }
    } {position {AXI/AXI4_W_Utils.bsv 44 3
        }
    }
} {function AXI4_W_Utils: :mapAXI4_WFlit_wuser {result {
            {AXI4_Types: :AXI4_WFlit#(data, user_out)
            }
        }
    } {arguments {
            {function Bit#(user_out) f(Bit#(user_in) x1)
            } {AXI4_Types: :AXI4_WFlit#(data, user_in)
            }
        }
    } {position {AXI/AXI4_W_Utils.bsv 54 3
        }
    }
} {module AXI4_W_Utils: :toAXI4_W_Master_Sig {interface {
            {AXI4_Types: :AXI4_W_Master_Sig#(data_, user_)
            }
        }
    } {arguments src_t#(t)
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4_W_Utils: :ToAXI4_WFlit#(t, data_, user_)
            } {SourceSink: :ToSource#(src_t#(t), t)
            }
        }
    } {position {AXI/AXI4_W_Utils.bsv 84 8
        }
    }
} {module AXI4_W_Utils: :fromAXI4_W_Master_Sig {interface {
            {SourceSink: :Source#(AXI4_Types: :AXI4_WFlit#(data_, user_))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_W_Master_Sig#(data_, user_)
            }
        }
    } {position {AXI/AXI4_W_Utils.bsv 98 8
        }
    }
} {module AXI4_W_Utils: :toAXI4_W_Slave_Sig {interface {
            {AXI4_Types: :AXI4_W_Slave_Sig#(data_, user_)
            }
        }
    } {arguments snk_t
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4_W_Utils: :FromAXI4_WFlit#(t, data_, user_)
            } {SourceSink: :ToSink#(snk_t, t)
            }
        }
    } {position {AXI/AXI4_W_Utils.bsv 116 8
        }
    }
} {module AXI4_W_Utils: :fromAXI4_W_Slave_Sig {interface {
            {SourceSink: :Sink#(AXI4_Types: :AXI4_WFlit#(data_, user_))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_W_Slave_Sig#(data_, user_)
            }
        }
    } {position {AXI/AXI4_W_Utils.bsv 130 8
        }
    }
} {module AXI4_Utils: :mergeWrite {interface {
            {SourceSink: :Source#(AXI4_Types: :AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))
            }
        }
    } {arguments {
            {SourceSink: :Source#(AXI4_Types: :AXI4_AWFlit#(id_, addr_, awuser_))
            } {SourceSink: :Source#(AXI4_Types: :AXI4_WFlit#(data_, wuser_))
            }
        }
    } {position {AXI/AXI4_Utils.bsv 60 8
        }
    }
} {module AXI4_Utils: :splitWrite {interface {
            {SourceSink: :Sink#(AXI4_Types: :AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))
            }
        }
    } {arguments {
            {SourceSink: :Sink#(AXI4_Types: :AXI4_AWFlit#(id_, addr_, awuser_))
            } {SourceSink: :Sink#(AXI4_Types: :AXI4_WFlit#(data_, wuser_))
            }
        }
    } {position {AXI/AXI4_Utils.bsv 123 8
        }
    }
} {function AXI4_Utils: :mapAXI4_Master_id {result {
            {AXI4_Types: :AXI4_Master#(id_out, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {function Bit#(id_out) f(Bit#(id_in) x1)
            } {function Bit#(id_in) f(Bit#(id_out) x1)
            } {AXI4_Types: :AXI4_Master#(id_in, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 193 3
        }
    }
} {function AXI4_Utils: :mapAXI4_Master_addr {result {
            {AXI4_Types: :AXI4_Master#(a, addr_out, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {function Bit#(addr_out) f(Bit#(addr_in) x1)
            } {AXI4_Types: :AXI4_Master#(a, addr_in, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 205 3
        }
    }
} {function AXI4_Utils: :mapAXI4_Master_user {result {
            {AXI4_Types: :AXI4_Master#(a, b, c, d_, e_, f_, g_, h_)
            }
        }
    } {arguments {
            {function Bit#(d_) f(Bit#(d) x1)
            } {function Bit#(e_) f(Bit#(e) x1)
            } {function Bit#(f) f(Bit#(f_) x1)
            } {function Bit#(g_) f(Bit#(g) x1)
            } {function Bit#(h) f(Bit#(h_) x1)
            } {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 216 3
        }
    }
} {function AXI4_Utils: :mapAXI4_Slave_addr {result {
            {AXI4_Types: :AXI4_Slave#(a, addr_b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {function Bit#(addr_a) f(Bit#(addr_b) x1)
            } {AXI4_Types: :AXI4_Slave#(a, addr_a, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 233 3
        }
    }
} {function AXI4_Utils: :mapAXI4_Slave_user {result {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d_, e_, f_, g_, h_)
            }
        }
    } {arguments {
            {function Bit#(d) f(Bit#(d_) x1)
            } {function Bit#(e) f(Bit#(e_) x1)
            } {function Bit#(f_) f(Bit#(f) x1)
            } {function Bit#(g) f(Bit#(g_) x1)
            } {function Bit#(h_) f(Bit#(h) x1)
            } {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 244 3
        }
    }
} {function AXI4_Utils: :prepend_AXI4_Master_id {result {
            {AXI4_Types: :AXI4_Master#(id_out, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {Bit#(TSub#(id_out, id_in))
            } {AXI4_Types: :AXI4_Master#(id_in, b, c, d, e, f, g, h)
            }
        }
    } {provisos {
            {Add#(_a, id_in, id_out)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 263 3
        }
    }
} {function AXI4_Utils: :truncate_AXI4_Master_addr {result {
            {AXI4_Types: :AXI4_Master#(a, addr_out, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Master#(a, addr_in, c, d, e, f, g, h)
            }
        }
    } {provisos {
            {Add#(_a, addr_out, addr_in)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 271 3
        }
    }
} {function AXI4_Utils: :prepend_AXI4_Master_addr {result {
            {AXI4_Types: :AXI4_Master#(a, addr_b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {Bit#(TSub#(addr_b, addr_a))
            } {AXI4_Types: :AXI4_Master#(a, addr_a, c, d, e, f, g, h)
            }
        }
    } {provisos {
            {Add#(_a, addr_a, addr_b)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 276 3
        }
    }
} {function AXI4_Utils: :zero_AXI4_Master_user {result {
            {AXI4_Types: :AXI4_Master#(a, b, c, d_, e_, f_, g_, h_)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 284 3
        }
    }
} {function AXI4_Utils: :truncate_AXI4_Slave_addr {result {
            {AXI4_Types: :AXI4_Slave#(a, addr_out, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Slave#(a, addr_in, c, d, e, f, g, h)
            }
        }
    } {provisos {
            {Add#(_a, addr_in, addr_out)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 291 3
        }
    }
} {function AXI4_Utils: :prepend_AXI4_Slave_addr {result {
            {AXI4_Types: :AXI4_Slave#(a, addr_a, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {Bit#(TSub#(addr_b, addr_a))
            } {AXI4_Types: :AXI4_Slave#(a, addr_b, c, d, e, f, g, h)
            }
        }
    } {provisos {
            {Add#(_a, addr_a, addr_b)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 296 3
        }
    }
} {function AXI4_Utils: :zero_AXI4_Slave_user {result {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d_, e_, f_, g_, h_)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 304 3
        }
    }
} {module AXI4_Utils: :mkPerpetualValueAXI4Slave {interface {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments Integer
    } {position {AXI/AXI4_Utils.bsv 312 8
        }
    }
} {module AXI4_Utils: :mkPerpetualZeroAXI4Slave {interface {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 353 8
        }
    }
} {module AXI4_Utils: :mkAXI4Limiter {interface {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments Integer
    } {position {AXI/AXI4_Utils.bsv 362 8
        }
    }
} {module AXI4_Utils: :mkSerialiser {interface {
            {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 432 8
        }
    }
} {module AXI4_Utils: :mkBurstToNoBurst {interface {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {provisos {
            {Add#(a__,
                8, b)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 495 8
        }
    }
} {module AXI4_Utils: :mkAXI4ShimBypassFIFOF {interface {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 685 8
        }
    }
} {module AXI4_Utils: :mkAXI4ShimBypassFF1 {interface {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 685 8
        }
    }
} {module AXI4_Utils: :mkAXI4ShimFF1 {interface {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 685 8
        }
    }
} {module AXI4_Utils: :mkAXI4ShimFF {interface {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 685 8
        }
    }
} {module AXI4_Utils: :mkAXI4ShimSizedFIFOF4 {interface {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 685 8
        }
    }
} {module AXI4_Utils: :mkAXI4ShimSizedFIFOF32 {interface {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 685 8
        }
    }
} {module AXI4_Utils: :mkAXI4ShimUGSizedFIFOF32 {interface {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 685 8
        }
    }
} {module AXI4_Utils: :mkAXI4ShimUGSizedFIFOF4 {interface {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 685 8
        }
    }
} {module AXI4_Utils: :mkAXI4Shim {interface {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 725 8
        }
    }
} {module AXI4_Utils: :toAXI4_Shim_Sig {interface {
            {AXI4_Types: :AXI4_Shim_Sig#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 730 8
        }
    }
} {function AXI4_Utils: :debugAXI4_Master {result {
            {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            } Fmt
        }
    } {position {AXI/AXI4_Utils.bsv 744 10
        }
    }
} {function AXI4_Utils: :debugAXI4_Slave {result {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            } Fmt
        }
    } {position {AXI/AXI4_Utils.bsv 754 10
        }
    }
} {module AXI4_Utils: :mkAXI4DebugShimSig {interface {
            {AXI4_Types: :AXI4_Shim_Sig#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments String
    } {position {AXI/AXI4_Utils.bsv 763 8
        }
    }
} {module AXI4_Utils: :mkAXI4DebugShim {interface {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments String
    } {position {AXI/AXI4_Utils.bsv 772 8
        }
    }
} {module AXI4_Utils: :monitorAXI4_Shim {interface {
            {Monitored: :Monitored#(AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h), Tuple2#(AXI4_Types: :AXI4_Events, AXI4_Types: :AXI4_Events))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Shim#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 783 8
        }
    }
} {module AXI4_Utils: :monitorAXI4_Master {interface {
            {Monitored: :Monitored#(AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h), AXI4_Types: :AXI4_Events)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 798 8
        }
    }
} {module AXI4_Utils: :monitorAXI4_Slave {interface {
            {Monitored: :Monitored#(AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h), AXI4_Types: :AXI4_Events)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 825 8
        }
    }
} {module AXI4_Utils: :toAXI4_Master_Sig {interface {
            {AXI4_Types: :AXI4_Master_Sig#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 857 8
        }
    }
} {module AXI4_Utils: :fromAXI4_Master_Sig {interface {
            {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Master_Sig#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 871 8
        }
    }
} {module AXI4_Utils: :liftAXI4_Master_Sig {interface {
            {AXI4_Types: :AXI4_Master_Sig#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {function AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h) f(AXI4_Types: :AXI4_Master#(a1, b1, c1, d1, e1, f1, g1, h1) x1)
            } {AXI4_Types: :AXI4_Master_Sig#(a1, b1, c1, d1, e1, f1, g1, h1)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 885 8
        }
    }
} {module AXI4_Utils: :toAXI4_Slave_Sig {interface {
            {AXI4_Types: :AXI4_Slave_Sig#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 896 8
        }
    }
} {module AXI4_Utils: :fromAXI4_Slave_Sig {interface {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Slave_Sig#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 910 8
        }
    }
} {module AXI4_Utils: :liftAXI4_Slave_Sig {interface {
            {AXI4_Types: :AXI4_Slave_Sig#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {function AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h) f(AXI4_Types: :AXI4_Slave#(a1, b1, c1, d1, e1, f1, g1, h1) x1)
            } {AXI4_Types: :AXI4_Slave_Sig#(a1, b1, c1, d1, e1, f1, g1, h1)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 924 8
        }
    }
} {module AXI4_Utils: :toWider_AXI4_Master {interface {
            {AXI4_Types: :AXI4_Master#(id_, addr_, wide_, awuser_, wuser_, buser_, aruser_, ruser_)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Master#(id_, addr_, narrow_, awuser_, wuser_, buser_, aruser_, ruser_)
            }
        }
    } {provisos {
            {Add#(TDiv#(narrow_,
                8), TDiv#(narrow_,
                8), TDiv#(wide_,
                8))
            } {Add#(narrow_, narrow_, wide_)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 938 8
        }
    }
} {module AXI4_Utils: :toWider_AXI4_Slave {interface {
            {AXI4_Types: :AXI4_Slave#(id_, addr_, wide_, awuser_, wuser_, buser_, aruser_, ruser_)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Slave#(id_, addr_, narrow_, awuser_, wuser_, buser_, aruser_, ruser_)
            }
        }
    } {provisos {
            {Add#(narrow_, narrow_, wide_)
            } {Add#(_a, wide_,
                128)
            } {Add#(_b,
                8, addr_)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 1038 8
        }
    }
} {module AXI4_Utils: :sizedSerializeWithId_AXI4_Slave {interface {
            {AXI4_Types: :AXI4_Slave#(a_, b, c, d, e, f, g, h)
            }
        }
    } {arguments {Integer Bit#(a) Integer Bit#(a) {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 1299 8
        }
    }
} {module AXI4_Utils: :sizedSerializeWithId_AXI4_Master {interface {
            {AXI4_Types: :AXI4_Master#(a_, b, c, d, e, f, g, h)
            }
        }
    } {arguments {Integer Bit#(a_) Integer Bit#(a_) {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 1338 8
        }
    }
} {module AXI4_Utils: :toUnguarded_AXI4_Master {interface {
            {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 1381 8
        }
    }
} {module AXI4_Utils: :toUnguarded_AXI4_Slave {interface {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            }
        }
    } {position {AXI/AXI4_Utils.bsv 1397 8
        }
    }
} {function AXI4_Utils: :guard_AXI4_Master {result {
            {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h)
            } Bool
        }
    } {position {AXI/AXI4_Utils.bsv 1413 40
        }
    }
} {function AXI4_Utils: :guard_AXI4_Slave {result {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h)
            } Bool
        }
    } {position {AXI/AXI4_Utils.bsv 1423 39
        }
    }
} {module AXI4Lite_Interconnect: :mkAXI4LiteBus_Sig {interface Empty
    } {arguments {
            {function Vector: :Vector#(nSlaves, Bool) f(Bit#(addr_) x1)
            } {Vector: :Vector#(nMasters, AXI4Lite_Types: :AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))
            } {Vector: :Vector#(nSlaves, AXI4Lite_Types: :AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))
            }
        }
    } {provisos {
            {Add#(1, b__, nMasters)
            } {Add#(1, a__, nSlaves)
            }
        }
    } {position {AXI/AXI4Lite_Interconnect.bsv 51 8
        }
    }
} {module AXI4Lite_Interconnect: :mkAXI4LiteBus {interface Empty
    } {arguments {
            {function Vector: :Vector#(nSlaves, Bool) f(Bit#(addr_) x1)
            } {Vector: :Vector#(nMasters, AXI4Lite_Types: :AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))
            } {Vector: :Vector#(nSlaves, AXI4Lite_Types: :AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))
            }
        }
    } {provisos {
            {Add#(1, b__, nMasters)
            } {Add#(1, a__, nSlaves)
            }
        }
    } {position {AXI/AXI4Lite_Interconnect.bsv 64 8
        }
    }
} {module AXI4_Interconnect: :mkAXI4Bus_Sig {interface Empty
    } {arguments {
            {function Vector: :Vector#(nSlaves, Bool) f(Bit#(addr_) x1)
            } {Vector: :Vector#(nMasters, AXI4_Types: :AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))
            } {Vector: :Vector#(nSlaves, AXI4_Types: :AXI4_Slave_Sig#(sid_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))
            }
        }
    } {provisos {
            {Add#(id_, TLog#(nMasters), sid_)
            } {Add#(1, b__, nMasters)
            } {Add#(1, a__, nSlaves)
            }
        }
    } {position {AXI/AXI4_Interconnect.bsv 54 8
        }
    }
} {module AXI4_Interconnect: :mkAXI4Bus {interface Empty
    } {arguments {
            {function Vector: :Vector#(nSlaves, Bool) f(Bit#(addr_) x1)
            } {Vector: :Vector#(nMasters, AXI4_Types: :AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))
            } {Vector: :Vector#(nSlaves, AXI4_Types: :AXI4_Slave#(sid_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))
            }
        }
    } {provisos {
            {Add#(id_, TLog#(nMasters), sid_)
            } {Add#(1, b__, nMasters)
            } {Add#(1, a__, nSlaves)
            }
        }
    } {position {AXI/AXI4_Interconnect.bsv 68 8
        }
    }
}

{function AXI4_W_Utils: :mapAXI4_WFlit_wdata {result {
            {AXI4_Types: :AXI4_WFlit#(data_out, user)
            }
        }
    } {arguments {
            {function Bit#(data_out) f(Bit#(data_in) x1)
            } {function Bit#(TDiv#(data_out,
                8)) f(Bit#(TDiv#(data_in,
                8)) x1)
            } {AXI4_Types: :AXI4_WFlit#(data_in, user)
            }
        }
    } {position {AXI/AXI4_W_Utils.bsv 44 3
        }
    }
} {function AXI4_W_Utils: :mapAXI4_WFlit_wuser {result {
            {AXI4_Types: :AXI4_WFlit#(data, user_out)
            }
        }
    } {arguments {
            {function Bit#(user_out) f(Bit#(user_in) x1)
            } {AXI4_Types: :AXI4_WFlit#(data, user_in)
            }
        }
    } {position {AXI/AXI4_W_Utils.bsv 54 3
        }
    }
} {module AXI4_W_Utils: :toAXI4_W_Master_Sig {interface {
            {AXI4_Types: :AXI4_W_Master_Sig#(data_, user_)
            }
        }
    } {arguments src_t#(t)
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4_W_Utils: :ToAXI4_WFlit#(t, data_, user_)
            } {SourceSink: :ToSource#(src_t#(t), t)
            }
        }
    } {position {AXI/AXI4_W_Utils.bsv 84 8
        }
    }
} {module AXI4_W_Utils: :fromAXI4_W_Master_Sig {interface {
            {SourceSink: :Source#(AXI4_Types: :AXI4_WFlit#(data_, user_))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_W_Master_Sig#(data_, user_)
            }
        }
    } {position {AXI/AXI4_W_Utils.bsv 98 8
        }
    }
} {module AXI4_W_Utils: :toAXI4_W_Slave_Sig {interface {
            {AXI4_Types: :AXI4_W_Slave_Sig#(data_, user_)
            }
        }
    } {arguments snk_t
    } {provisos {
            {Bits#(t, t_sz)
            } {AXI4_W_Utils: :FromAXI4_WFlit#(t, data_, user_)
            } {SourceSink: :ToSink#(snk_t, t)
            }
        }
    } {position {AXI/AXI4_W_Utils.bsv 116 8
        }
    }
} {module AXI4_W_Utils: :fromAXI4_W_Slave_Sig {interface {
            {SourceSink: :Sink#(AXI4_Types: :AXI4_WFlit#(data_, user_))
            }
        }
    } {arguments {
            {AXI4_Types: :AXI4_W_Slave_Sig#(data_, user_)
            }
        }
    } {position {AXI/AXI4_W_Utils.bsv 130 8
        }
    }
}