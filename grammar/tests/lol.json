Interface {DDR3: :DDR3_Pins#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)
} polymorphic {members {
        {method {Bit#(clkwidth) clk_p {} {
                    {(* ports = [] *)
                    } {(* result = "CLK_P" *)
                    } {(* prefix = "" *)
                    }
                }
            }
        } {method {Bit#(clkwidth) clk_n {} {
                    {(* ports = [] *)
                    } {(* result = "CLK_N" *)
                    } {(* prefix = "" *)
                    }
                }
            }
        } {method {Bit#(rowwidth) a {} {
                    {(* ports = [] *)
                    } {(* result = "A" *)
                    } {(* prefix = "" *)
                    }
                }
            }
        } {method {Bit#(bankwidth) ba {} {
                    {(* ports = [] *)
                    } {(* result = "BA" *)
                    } {(* prefix = "" *)
                    }
                }
            }
        } {method {Bit#(1) ras_n {} {
                    {(* ports = [] *)
                    } {(* result = "RAS_N" *)
                    } {(* prefix = "" *)
                    }
                }
            }
        } {method {Bit#(1) cas_n {} {
                    {(* ports = [] *)
                    } {(* result = "CAS_N" *)
                    } {(* prefix = "" *)
                    }
                }
            }
        } {method {Bit#(1) we_n {} {
                    {(* ports = [] *)
                    } {(* result = "WE_N" *)
                    } {(* prefix = "" *)
                    }
                }
            }
        } {method {Bit#(1) reset_n {} {
                    {(* ports = [] *)
                    } {(* result = "RESET_N" *)
                    } {(* prefix = "" *)
                    }
                }
            }
        } {method {Bit#(cswidth) cs_n {} {
                    {(* ports = [] *)
                    } {(* result = "CS_N" *)
                    } {(* prefix = "" *)
                    }
                }
            }
        } {method {Bit#(odtwidth) odt {} {
                    {(* ports = [] *)
                    } {(* result = "ODT" *)
                    } {(* prefix = "" *)
                    }
                }
            }
        } {method {Bit#(ckewidth) cke {} {
                    {(* ports = [] *)
                    } {(* result = "CKE" *)
                    } {(* prefix = "" *)
                    }
                }
            }
        } {method {Bit#(bewidth) dm {} {
                    {(* ports = [] *)
                    } {(* result = "DM" *)
                    } {(* prefix = "" *)
                    }
                }
            }
        } {interface Inout#(Bit#(datawidth)) dq {
                {(* prefix = "DQ" *)
                }
            }
        } {interface Inout#(Bit#(bewidth)) dqs_p {
                {(* prefix = "DQS_P" *)
                }
            }
        } {interface Inout#(Bit#(bewidth)) dqs_n {
                {(* prefix = "DQS_N" *)
                }
            }
        }
    }
} {position {DDR3.bsv 99 11
    }
} {attributes {
        {(* always_ready  *)
        } {(* always_enabled  *)
        }
    }
}