	component unnamed is
		port (
			araddr   : out std_logic_vector(13 downto 0);                     -- araddr
			arburst  : out std_logic_vector(1 downto 0);                      -- arburst
			arcache  : out std_logic_vector(3 downto 0);                      -- arcache
			arid     : out std_logic;                                         -- arid
			arlen    : out std_logic_vector(7 downto 0);                      -- arlen
			arlock   : out std_logic;                                         -- arlock
			arprot   : out std_logic_vector(2 downto 0);                      -- arprot
			arqos    : out std_logic_vector(3 downto 0);                      -- arqos
			arready  : in  std_logic                      := 'X';             -- arready
			arregion : out std_logic_vector(3 downto 0);                      -- arregion
			arsize   : out std_logic_vector(2 downto 0);                      -- arsize
			arvalid  : out std_logic;                                         -- arvalid
			awaddr   : out std_logic_vector(13 downto 0);                     -- awaddr
			awburst  : out std_logic_vector(1 downto 0);                      -- awburst
			awcache  : out std_logic_vector(3 downto 0);                      -- awcache
			awid     : out std_logic;                                         -- awid
			awlen    : out std_logic_vector(7 downto 0);                      -- awlen
			awlock   : out std_logic;                                         -- awlock
			awprot   : out std_logic_vector(2 downto 0);                      -- awprot
			awqos    : out std_logic_vector(3 downto 0);                      -- awqos
			awready  : in  std_logic                      := 'X';             -- awready
			awregion : out std_logic_vector(3 downto 0);                      -- awregion
			awsize   : out std_logic_vector(2 downto 0);                      -- awsize
			awvalid  : out std_logic;                                         -- awvalid
			bid      : in  std_logic                      := 'X';             -- bid
			bready   : out std_logic;                                         -- bready
			bresp    : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- bresp
			bvalid   : in  std_logic                      := 'X';             -- bvalid
			rdata    : in  std_logic_vector(127 downto 0) := (others => 'X'); -- rdata
			rid      : in  std_logic                      := 'X';             -- rid
			rlast    : in  std_logic                      := 'X';             -- rlast
			rready   : out std_logic;                                         -- rready
			rresp    : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- rresp
			rvalid   : in  std_logic                      := 'X';             -- rvalid
			wdata    : out std_logic_vector(127 downto 0);                    -- wdata
			wlast    : out std_logic;                                         -- wlast
			wready   : in  std_logic                      := 'X';             -- wready
			wstrb    : out std_logic_vector(15 downto 0);                     -- wstrb
			wvalid   : out std_logic;                                         -- wvalid
			CLK      : in  std_logic                      := 'X';             -- clk
			RST_N    : in  std_logic                      := 'X'              -- reset_n
		);
	end component unnamed;

