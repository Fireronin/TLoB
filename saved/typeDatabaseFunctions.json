{function ExampleAXI4::nb_flit {result Integer} {position {tutorial/ExampleAXI4.bsv 63 9}}} {function ExampleAXI4::nb_rsp {result Integer} {position {tutorial/ExampleAXI4.bsv 64 9}}} {module ExampleAXI4::axiMaster {interface {{AXI4_Types::AXI4_Master#(ExampleAXI4::MID_sz, ExampleAXI4::ADDR_sz, ExampleAXI4::DATA_sz, ExampleAXI4::AWUSER_sz, ExampleAXI4::WUSER_sz, ExampleAXI4::BUSER_sz, ExampleAXI4::ARUSER_sz, ExampleAXI4::RUSER_sz)}}} {arguments Integer} {position {tutorial/ExampleAXI4.bsv 66 8}}} {module ExampleAXI4::axiSlave {interface {{AXI4_Types::AXI4_Slave#(ExampleAXI4::SID_sz, ExampleAXI4::ADDR_sz, ExampleAXI4::DATA_sz, ExampleAXI4::AWUSER_sz, ExampleAXI4::WUSER_sz, ExampleAXI4::BUSER_sz, ExampleAXI4::ARUSER_sz, ExampleAXI4::RUSER_sz)}}} {arguments Integer} {position {tutorial/ExampleAXI4.bsv 110 8}}} {module ExampleAXI4::axiMaster_synth {interface {{AXI4_Types::AXI4_Master_Sig#(ExampleAXI4::MID_sz, ExampleAXI4::ADDR_sz, ExampleAXI4::DATA_sz, ExampleAXI4::AWUSER_sz, ExampleAXI4::WUSER_sz, ExampleAXI4::BUSER_sz, ExampleAXI4::ARUSER_sz, ExampleAXI4::RUSER_sz)}}} {position {tutorial/ExampleAXI4.bsv 144 8}}} {module ExampleAXI4::axiSlave_synth {interface {{AXI4_Types::AXI4_Slave_Sig#(ExampleAXI4::SID_sz, ExampleAXI4::ADDR_sz, ExampleAXI4::DATA_sz, ExampleAXI4::AWUSER_sz, ExampleAXI4::WUSER_sz, ExampleAXI4::BUSER_sz, ExampleAXI4::ARUSER_sz, ExampleAXI4::RUSER_sz)}}} {position {tutorial/ExampleAXI4.bsv 151 8}}}


{function CRC::reflect {result Bit#(a)} {arguments {Bool Bit#(a)}} {position {%/Libraries/CRC.bsv 12 18 {Library CRC}}}} {module CRC::mkCRC {interface CRC::CRC#(n)} {arguments {Bit#(n) Bit#(n) Bit#(n) Bool Bool}} {provisos {{Add#(8, n8, n)}}} {position {%/Libraries/CRC.bsv 33 8 {Library CRC}}}} {module CRC::mkCRC_CCITT {interface CRC::CRC#(16)} {position {%/Libraries/CRC.bsv 97 8 {Library CRC}}}} {module CRC::mkCRC16 {interface CRC::CRC#(16)} {position {%/Libraries/CRC.bsv 111 8 {Library CRC}}}} {module CRC::mkCRC32 {interface CRC::CRC#(32)} {position {%/Libraries/CRC.bsv 126 8 {Library CRC}}}}

{module BRAM::mkBRAM {interface {{BRAM::BRAM2Port#(addr, data)}}} {arguments Bool} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 159 8 {Library BRAM}}}} {module BRAM::mkBRAMLoad {interface {{BRAM::BRAM2Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 175 8 {Library BRAM}}}} {module BRAM::mkBRAM1 {interface {{BRAM::BRAM1Port#(addr, data)}}} {arguments Bool} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 192 8 {Library BRAM}}}} {module BRAM::mkBRAM1Load {interface {{BRAM::BRAM1Port#(addr, data)}}} {arguments {Bool String}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 208 8 {Library BRAM}}}} {module BRAM::mkBRAM1BE {interface {{BRAM::BRAM1PortBE#(addr, data, n)}}} {arguments Bool} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 224 8 {Library BRAM}}}} {module BRAM::mkBRAM1BELoad {interface {{BRAM::BRAM1PortBE#(addr, data, n)}}} {arguments {Bool String}} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 241 8 {Library BRAM}}}} {module BRAM::mkSyncBRAM {interface {{BRAM::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 259 8 {Library BRAM}}}} {module BRAM::mkSyncBRAMLoad {interface {{BRAM::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 274 8 {Library BRAM}}}} {module BRAM::mkBRAM1Port {interface {{BRAMCore::BRAM_PORT#(addr, data)}}} {arguments BRAM::BRAM_Configure} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 293 8 {Library BRAM}}}} {module BRAM::mkBRAM1PortBE {interface {{BRAMCore::BRAM_PORT_BE#(addr, data, n)}}} {arguments BRAM::BRAM_Configure} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 324 8 {Library BRAM}}}} {module BRAM::mkSyncBRAM2Port {interface {{BRAMCore::BRAM_DUAL_PORT#(addr, data)}}} {arguments {BRAM::BRAM_Configure Clock Reset Clock Reset}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 359 8 {Library BRAM}}}} {module BRAM::mkSyncBRAM2PortBE {interface {{BRAMCore::BRAM_DUAL_PORT_BE#(addr, data, n)}}} {arguments {BRAM::BRAM_Configure Clock Reset Clock Reset}} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 392 8 {Library BRAM}}}} {module BRAM::mkBRAMAdapter {interface {{BRAM::ServerWithClear#(bramreq_t, bramresp_t)}}} {arguments {BRAM::BRAM_Configure bramifc_t}} {provisos {{BRAM::BRAMToResponse#(bramifc_t, bramresp_t)} BRAM::RequestToResponse#(bramreq_t) {BRAM::RequestToBRAM#(bramreq_t, bramifc_t)} {Bits#(bramresp_t, sresp)}}} {position {%/Libraries/BRAM.bsv 455 8 {Library BRAM}}}} {module BRAM::mkBRAM1Server {interface {{BRAM::BRAM1Port#(addr, data)}}} {arguments BRAM::BRAM_Configure} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 638 8 {Library BRAM}}}} {module BRAM::mkBRAM1ServerBE {interface {{BRAM::BRAM1PortBE#(addr, data, n)}}} {arguments BRAM::BRAM_Configure} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 657 8 {Library BRAM}}}} {module BRAM::mkBRAM2Server {interface {{BRAM::BRAM2Port#(addr, data)}}} {arguments BRAM::BRAM_Configure} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 678 8 {Library BRAM}}}} {module BRAM::mkBRAM2ServerBE {interface {{BRAM::BRAM2PortBE#(addr, data, n)}}} {arguments BRAM::BRAM_Configure} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 707 8 {Library BRAM}}}} {module BRAM::mkSyncBRAM2Server {interface {{BRAM::BRAM2Port#(addr, data)}}} {arguments {BRAM::BRAM_Configure Clock Reset Clock Reset}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 738 8 {Library BRAM}}}} {module BRAM::mkSyncBRAM2ServerBE {interface {{BRAM::BRAM2PortBE#(addr, data, n)}}} {arguments {BRAM::BRAM_Configure Clock Reset Clock Reset}} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 768 8 {Library BRAM}}}} {module BRAM::checkSizes {interface Empty} {arguments {BRAM::BRAM_Configure addr_t String}} {provisos {{Bits#(addr_t, addr_sz)}}} {position {%/Libraries/BRAM.bsv 796 8 {Library BRAM}}}} {module BRAM::mkBypassFIFOAdapter {interface FIFOF::FIFOF#(a)} {arguments FIFOF::FIFOF#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BRAM.bsv 819 8 {Library BRAM}}}} {module BRAM::mkSizedReg {interface BRAM::SizedReg} {arguments {Integer Integer}} {position {%/Libraries/BRAM.bsv 890 8 {Library BRAM}}}} {module BRAM::mkSizedRegInt {interface BRAM::SizedReg} {arguments a} {provisos {Ord#(a) Eq#(a) Arith#(a) {Bits#(a, sa)}}} {position {%/Libraries/BRAM.bsv 944 8 {Library BRAM}}}} {function GetPut::peekGet {result a} {arguments GetPut::Get#(a)} {position {%/Libraries/GetPut.bs 142 0 {Library GetPut}}}} {function GetPut::fifoToGet {result GetPut::Get#(a)} {arguments FIFO::FIFO#(a)} {position {%/Libraries/GetPut.bs 162 0 {Library GetPut}}}} {function GetPut::fifoToGetS {result GetPut::GetS#(a)} {arguments FIFO::FIFO#(a)} {position {%/Libraries/GetPut.bs 169 0 {Library GetPut}}}} {function GetPut::fifoToPut {result GetPut::Put#(a)} {arguments FIFO::FIFO#(a)} {position {%/Libraries/GetPut.bs 229 0 {Library GetPut}}}} {module GetPut::mkGetPut {interface GetPut::GetPut#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/GetPut.bs 241 0 {Library GetPut}}}} {module GetPut::mkGPFIFO {interface GetPut::GetPut#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/GetPut.bs 272 0 {Library GetPut}}}} {module GetPut::mkGPFIFO1 {interface GetPut::GetPut#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/GetPut.bs 284 0 {Library GetPut}}}} {module GetPut::mkGPSizedFIFO {interface GetPut::GetPut#(a)} {arguments Integer} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/GetPut.bs 296 0 {Library GetPut}}}} {module ClientServer::mkRequestResponseBuffer {interface {{ClientServer::ClientServer#(a, b)}}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/ClientServer.bs 109 0 {Library ClientServer}}}} {module ClientServer::mkRequestResponseBuffer1 {interface {{ClientServer::ClientServer#(a, b)}}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/ClientServer.bs 130 0 {Library ClientServer}}}} {module ClientServer::mkSizedRequestResponseBuffer {interface {{ClientServer::ClientServer#(a, b)}}} {arguments Integer} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/ClientServer.bs 149 0 {Library ClientServer}}}} {module ClientServer::mkRequestBuffer {interface {{ClientServer::Server#(a, b)}}} {arguments {{ClientServer::Server#(a, b)}}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ClientServer.bs 169 0 {Library ClientServer}}}} {module ClientServer::mkResponseBuffer {interface {{ClientServer::Server#(a, b)}}} {arguments {{ClientServer::Server#(a, b)}}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/ClientServer.bs 190 0 {Library ClientServer}}}} {module ClientServer::joinServersBC {interface {{ClientServer::Server#(a, b)}}} {arguments {{List#(ClientServer::Server#(a, b))}}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/ClientServer.bs 212 0 {Library ClientServer}}}} {module ClientServer::joinServers {interface {{ClientServer::Server#(a, b)}}} {arguments {{List#(Tuple2#(function Maybe#(a') f(a x1), ClientServer::Server#(a', b)))}}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/ClientServer.bs 241 0 {Library ClientServer}}}} {module ClientServer::splitServer {interface {{Vector::Vector#(n, ClientServer::Server#(a, b))}}} {arguments {Integer {ClientServer::Server#(a, b)}}} {provisos {{Log#(n, ln)} {Bits#(b, sb)}}} {position {%/Libraries/ClientServer.bs 274 0 {Library ClientServer}}}} {function ClientServer::fifosToServer {result {{ClientServer::Server#(rq, rs)}}} {arguments {FIFO::FIFO#(rq) FIFO::FIFO#(rs)}} {position {%/Libraries/ClientServer.bs 309 0 {Library ClientServer}}}} {function ClientServer::fifosToClient {result {{ClientServer::Client#(rq, rs)}}} {arguments {FIFO::FIFO#(rq) FIFO::FIFO#(rs)}} {position {%/Libraries/ClientServer.bs 315 0 {Library ClientServer}}}} {function ClientServer::fifosToClientServer {result {{ClientServer::ClientServer#(rq, rs)}}} {arguments {FIFO::FIFO#(rq) FIFO::FIFO#(rs)}} {position {%/Libraries/ClientServer.bs 321 0 {Library ClientServer}}}} {function ClientServer::toGPClient {result {{ClientServer::Client#(rq, rs)}}} {arguments {rq_ifc rs_ifc}} {provisos {{GetPut::ToPut#(rs_ifc, rs)} {GetPut::ToGet#(rq_ifc, rq)}}} {position {%/Libraries/ClientServer.bs 326 0 {Library ClientServer}}}} {function ClientServer::toGPServer {result {{ClientServer::Server#(rq, rs)}}} {arguments {rq_ifc rs_ifc}} {provisos {{GetPut::ToGet#(rs_ifc, rs)} {GetPut::ToPut#(rq_ifc, rq)}}} {position {%/Libraries/ClientServer.bs 333 0 {Library ClientServer}}}}

{function ModuleContextCore::unM {result {{Module#(Tuple2#(c, i))}}} {arguments {{ModuleContextCore::ModuleContext#(c, i)} c}} {position {%/Libraries/ModuleContextCore.bs 6 0 {Library ModuleContextCore}}}} {function ModuleContextCore::getCompleteContext {result {{ModuleContextCore::ModuleContext#(c, c)}}} {position {%/Libraries/ModuleContextCore.bs 16 0 {Library ModuleContextCore}}}} {function ModuleContextCore::putCompleteContext {result {{ModuleContextCore::ModuleContext#(c, void)}}} {arguments c} {position {%/Libraries/ModuleContextCore.bs 19 0 {Library ModuleContextCore}}}} {function ModuleContextCore::runWithCompleteContext {result {{Module#(Tuple2#(c, i))}}} {arguments {c {ModuleContextCore::ModuleContext#(c, i)}}} {position {%/Libraries/ModuleContextCore.bs 22 0 {Library ModuleContextCore}}}}

{module ListReg::mkListReg {interface Reg#(List#(a))} {arguments List#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ListReg.bs 15 0 {Library ListReg}}}}

{function Complex::cmplx {result Complex::Complex#(a_type)} {arguments {a_type a_type}} {position {%/Libraries/Complex.bsv 159 27 {Library Complex}}}} {function Complex::cmplxMap {result Complex::Complex#(b_type)} {arguments {{function b_type f(a_type x1)} Complex::Complex#(a_type)}} {position {%/Libraries/Complex.bsv 168 27 {Library Complex}}}} {function Complex::cmplxSwap {result Complex::Complex#(a_type)} {arguments Complex::Complex#(a_type)} {position {%/Libraries/Complex.bsv 178 27 {Library Complex}}}} {function Complex::cmplxWrite {result Action} {arguments {String String String {function Action f(a_type x1)} Complex::Complex#(a_type)}} {position {%/Libraries/Complex.bsv 199 17 {Library Complex}}}} {function Complex::writeInt {result Action} {arguments Int#(n)} {position {%/Libraries/Complex.bsv 214 17 {Library Complex}}}} {function Complex::printComplex {result Action} {arguments {String Complex::Complex#(any_type)}} {provisos {{Bits#(any_type, pa)}}} {position {%/Libraries/Complex.bsv 228 17 {Library Complex}}}}

{module ListFIFO::mkListFIFOF {interface FIFOF::FIFOF#(List#(a))} {arguments Integer} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ListFIFO.bs 16 0 {Library ListFIFO}}}} {module ListFIFO::mkListFIFO {interface FIFO::FIFO#(List#(a))} {arguments Integer} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ListFIFO.bs 35 0 {Library ListFIFO}}}}

{function BitonicSort::pairs {result {{List#(Tuple2#(a, a))}}} {arguments List#(a)} {position {%/Libraries/BitonicSort.bs 14 0 {Library BitonicSort}}}} {function BitonicSort::unpairs {result List#(a)} {arguments {{List#(Tuple2#(a, a))}}} {position {%/Libraries/BitonicSort.bs 19 0 {Library BitonicSort}}}} {function BitonicSort::halve {result {{Tuple2#(List#(a), List#(a))}}} {arguments List#(a)} {position {%/Libraries/BitonicSort.bs 23 0 {Library BitonicSort}}}} {function BitonicSort::unhalve {result List#(a)} {arguments {{Tuple2#(List#(a), List#(a))}}} {position {%/Libraries/BitonicSort.bs 26 0 {Library BitonicSort}}}} {function BitonicSort::riffle {result List#(a)} {arguments List#(a)} {position {%/Libraries/BitonicSort.bs 29 0 {Library BitonicSort}}}} {function BitonicSort::unriffle {result List#(a)} {arguments List#(a)} {position {%/Libraries/BitonicSort.bs 32 0 {Library BitonicSort}}}} {function BitonicSort::papply {result {{Tuple2#(b, d)}}} {arguments {{Tuple2#(function b f(a x1), function d f(c x1))} {Tuple2#(a, c)}}} {position {%/Libraries/BitonicSort.bs 35 0 {Library BitonicSort}}}} {function BitonicSort::two {result List#(b)} {arguments {{function List#(b) f(List#(a) x1)} List#(a)}} {position {%/Libraries/BitonicSort.bs 38 0 {Library BitonicSort}}}} {function BitonicSort::ilv {result List#(b)} {arguments {{function List#(b) f(List#(a) x1)} List#(a)}} {position {%/Libraries/BitonicSort.bs 41 0 {Library BitonicSort}}}} {function BitonicSort::evens {result List#(b)} {arguments {{function Tuple2#(b, b) f(Tuple2#(a, a) x1)} List#(a)}} {position {%/Libraries/BitonicSort.bs 44 0 {Library BitonicSort}}}} {function BitonicSort::bfly {result List#(a)} {arguments {{function Tuple2#(a, a) f(Tuple2#(a, a) x1)} Integer List#(a)}} {position {%/Libraries/BitonicSort.bs 47 0 {Library BitonicSort}}}} {function BitonicSort::sndList {result List#(a)} {arguments {{function List#(a) f(List#(a) x1)} List#(a)}} {position {%/Libraries/BitonicSort.bs 51 0 {Library BitonicSort}}}} {function BitonicSort::sorter {result List#(a)} {arguments {{function Tuple2#(a, a) f(Tuple2#(a, a) x1)} Integer List#(a)}} {position {%/Libraries/BitonicSort.bs 54 0 {Library BitonicSort}}}} {function BitonicSort::cmpSwap {result {{Tuple2#(a, a)}}} {arguments {{function Bool f(a x1, a x2)} {Tuple2#(a, a)}}} {position {%/Libraries/BitonicSort.bs 58 0 {Library BitonicSort}}}} {function BitonicSort::sortLe {result {{Vector::Vector#(n, a)}}} {arguments {{function Bool f(a x1, a x2)} {Vector::Vector#(n, a)}}} {provisos {{Log#(n, k)}}} {position {%/Libraries/BitonicSort.bs 69 0 {Library BitonicSort}}}}

{function Enum::enumAll {result List#(a)} {provisos {Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/Enum.bs 16 0 {Library Enum}}}} {function Enum::enumFromTo {result List#(a)} {arguments {a a}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Enum.bs 27 0 {Library Enum}}}} {function Enum::enumB {result List#(Bit#(n))} {arguments {Bit#(n) Bit#(n)}} {position {%/Libraries/Enum.bs 30 0 {Library Enum}}}}

{module FoldFIFOF::mkFoldFIFO1 {interface FoldFIFOF::FoldFIFO#(a)} {provisos {{Bits#(a, k)}}} {position {%/Libraries/FoldFIFOF.bs 21 0 {Library FoldFIFOF}}}} {module FoldFIFOF::mkFoldFIFO {interface FoldFIFOF::FoldFIFO#(a)} {provisos {{Bits#(a, k)}}} {position {%/Libraries/FoldFIFOF.bs 39 0 {Library FoldFIFOF}}}}

{function BitUtils::genLowestIndexes {result {{Vector::Vector#(m, Maybe#(UInt#(idxs_t)))}}} {arguments Bit#(n)} {provisos {{Add#(xxx, 1, m)} {Log#(n, idxs_t)}}} {position {%/Libraries/BitUtils.bsv 25 1 {Library BitUtils}}}} {function BitUtils::copyLowestNBits {result Bit#(n)} {arguments {UInt#(idxs_t) Bit#(n)}} {provisos {{Add#(xxy, 1, idxs_t)} {Add#(xxx, 1, n)}}} {position {%/Libraries/BitUtils.bsv 53 1 {Library BitUtils}}}} {function BitUtils::copyLowestNBits_static {result Bit#(n)} {arguments {Integer Bit#(n)}} {position {%/Libraries/BitUtils.bsv 84 1 {Library BitUtils}}}} {function BitUtils::countLeadingZeros {result UInt#(idxs_t)} {arguments Bit#(n)} {provisos {{Add#(k, 1, idxs_t)} {Log#(n, k)}}} {position {%/Libraries/BitUtils.bsv 110 1 {Library BitUtils}}}}

{module DPSRAM::mkDPSRAM {interface {{Tuple2#(SyncSRAM::SyncSRAMS#(1, adrs, dtas), SyncSRAM::SyncSRAMS#(1, adrs, dtas))}}} {arguments Integer} {position {%/Libraries/DPSRAM.bs 18 0 {Library DPSRAM}}}} {function DPSRAM::mkDPSRAM_C {result {{Module#(Tuple2#(SyncSRAM::SyncSRAMS#(1, adrs, dtas), SyncSRAM::SyncSRAMS#(1, adrs, dtas)))}}} {arguments Integer} {position {%/Libraries/DPSRAM.bs 60 0 {Library DPSRAM}}}} {function DPSRAM::mkDPSRAM_V {result {{Module#(DPSRAM::VSyncSRAM#(adrs, dtas))}}} {arguments Integer} {position {%/Libraries/DPSRAM.bs 106 0 {Library DPSRAM}}}}

{module BRAMFIFO::mkSizedBRAMFIFOF {interface FIFOF::FIFOF#(t)} {arguments Integer} {provisos {{Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 47 8 {Library BRAMFIFO}}}} {module BRAMFIFO::mkSzBRAMFIFOF {interface {{BRAMFIFO::IBRAMFIFOF#(l, t)}}} {arguments Integer} {provisos {{Add#(1, x, l)} {Add#(1, l, d)} {Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 98 8 {Library BRAMFIFO}}}} {module BRAMFIFO::mkSizedBRAMFIFO {interface FIFO::FIFO#(t)} {arguments Integer} {provisos {{Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 205 8 {Library BRAMFIFO}}}} {module BRAMFIFO::mkSyncBRAMFIFO {interface Clocks::SyncFIFOIfc#(t)} {arguments {Integer Clock Reset Clock Reset}} {provisos {{Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 224 8 {Library BRAMFIFO}}}} {module BRAMFIFO::mkSncBRAMFIFOF {interface {{BRAMFIFO::ISyncBRAMFIFOFIfc#(l, t)}}} {arguments {Integer Clock Reset Clock Reset}} {provisos {{Add#(1, x, l)} {Add#(1, l, d)} {Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 269 8 {Library BRAMFIFO}}}} {module BRAMFIFO::mkSyncBRAMFIFOToCC {interface Clocks::SyncFIFOIfc#(t)} {arguments {Integer Clock Reset}} {provisos {{Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 355 8 {Library BRAMFIFO}}}} {module BRAMFIFO::mkSyncBRAMFIFOFromCC {interface Clocks::SyncFIFOIfc#(t)} {arguments {Integer Clock Reset}} {provisos {{Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 375 8 {Library BRAMFIFO}}}}

{module AlignedFIFOs::vMkRegU {interface AlignedFIFOs::RawReg#(_sn0)} {arguments Clock} {position {%/Libraries/AlignedFIFOs.bsv 60 11 {Library AlignedFIFOs}}}} {module AlignedFIFOs::mkRegStore {interface {{AlignedFIFOs::Store#(UInt#(0), a, 0)}}} {arguments {Clock Clock}} {provisos {{Bits#(a, a_sz)}}} {position {%/Libraries/AlignedFIFOs.bsv 73 8 {Library AlignedFIFOs}}}} {module AlignedFIFOs::mkRegVectorStore {interface {{AlignedFIFOs::Store#(UInt#(w), a, 0)}}} {arguments {Clock Clock}} {provisos {{Bits#(a, a_sz)}}} {position {%/Libraries/AlignedFIFOs.bsv 94 8 {Library AlignedFIFOs}}}} {module AlignedFIFOs::mkBRAMStore2W1R {interface {{AlignedFIFOs::Store#(i, a, 1)}}} {arguments {Clock Reset Clock Reset}} {provisos {Eq#(i) {Bits#(i, w)} {Bits#(a, a_sz)}}} {position {%/Libraries/AlignedFIFOs.bsv 115 8 {Library AlignedFIFOs}}}} {module AlignedFIFOs::mkBRAMStore1W2R {interface {{AlignedFIFOs::Store#(i, a, 1)}}} {arguments {Clock Reset Clock Reset}} {provisos {Eq#(i) {Bits#(i, w)} {Bits#(a, a_sz)}}} {position {%/Libraries/AlignedFIFOs.bsv 181 8 {Library AlignedFIFOs}}}} {module AlignedFIFOs::mkUGAlignedFIFO {interface AlignedFIFOs::AlignedFIFO#(a)} {arguments {Bool Bool Clock Reset Clock Reset {AlignedFIFOs::Store#(i, a, n)} Bool Bool}} {provisos {Arith#(i) Eq#(i) {Bits#(i, w)} {Bits#(a, sz_a)}}} {position {%/Libraries/AlignedFIFOs.bsv 264 8 {Library AlignedFIFOs}}}} {module AlignedFIFOs::mkAlignedFIFO {interface AlignedFIFOs::AlignedFIFO#(a)} {arguments {Clock Reset Clock Reset {AlignedFIFOs::Store#(i, a, n)} Bool Bool}} {provisos {Arith#(i) Eq#(i) {Bits#(i, w)} {Bits#(a, sz_a)}}} {position {%/Libraries/AlignedFIFOs.bsv 454 8 {Library AlignedFIFOs}}}}

{function Pull::apply {result Pull::Pull#(b)} {arguments {{function b f(a x1)} Pull::Pull#(a)}} {position {%/Libraries/Pull.bs 28 0 {Library Pull}}}} {function Pull::tee {result Pull::Pull#(a)} {arguments {{function Action f(a x1)} Pull::Pull#(a)}} {position {%/Libraries/Pull.bs 35 0 {Library Pull}}}} {module Pull::pass {interface Pull::Pull#(a)} {arguments Pull::Pull#(a)} {position {%/Libraries/Pull.bs 47 0 {Library Pull}}}} {module Pull::passed {interface Pull::Pull#(b)} {arguments {{function b f(a x1)} Pull::Pull#(a)}} {position {%/Libraries/Pull.bs 58 0 {Library Pull}}}} {module Pull::buffer {interface Pull::Pull#(a)} {arguments {a Pull::Pull#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Pull.bs 67 0 {Library Pull}}}} {module Pull::buffered {interface Pull::Pull#(b)} {arguments {{function b f(a x1)} Pull::Pull#(a)}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/Pull.bs 85 0 {Library Pull}}}} {module Pull::sink {interface Empty} {arguments Pull::Pull#(a)} {position {%/Libraries/Pull.bs 93 0 {Library Pull}}}} {module Pull::spew {interface Pull::Pull#(a)} {position {%/Libraries/Pull.bs 101 0 {Library Pull}}}} {function » {result m#(b)} {arguments {m#(a) {function m#(b) f(a x1)}}} {provisos Monad#(m)} {position {%/Libraries/Pull.bs 111 1 {Library Pull}}}} {function Pull::pipe {result m#(b)} {arguments {m#(a) {function m#(b) f(a x1)}}} {provisos Monad#(m)} {position {%/Libraries/Pull.bs 114 0 {Library Pull}}}}

{module SRAM::mkWrapSRAM {interface {{RAM::RAM#(adr, dta)}}} {arguments {{m#(SyncSRAM::SyncSRAMS#(lat, adrs, dtas))}}} {provisos {{Log#(lat4, llat)} {Add#(4, lat, lat4)} {Add#(1, lat, lat1)} {Bits#(dta, dtas)} {Bits#(adr, adrs)}}} {position {%/Libraries/SRAM.bs 30 0 {Library SRAM}}}} {module SRAM::wrapSRAM {interface {{Tuple2#(SyncSRAM::SyncSRAMC#(lat, adrs, dtas), RAM::RAM#(adr, dta))}}} {provisos {{Log#(lat4, llat)} {Add#(4, lat, lat4)} {Add#(1, lat, lat1)} {Bits#(dta, dtas)} {Bits#(adr, adrs)}}} {position {%/Libraries/SRAM.bs 51 0 {Library SRAM}}}} {module SRAM::mkShiftReg {interface {{SRAM::ShiftReg#(n, a)}}} {arguments a} {provisos {{Bits#(a, sa)} {Add#(1, n1, n)}}} {position {%/Libraries/SRAM.bs 139 0 {Library SRAM}}}}

{function StmtFSMUtil::setMEState {result Action} {arguments {StmtFSMUtil::MEState Integer}} {position {%/Libraries/StmtFSMUtil.bsv 27 17 {Library StmtFSMUtil}}}} {function StmtFSMUtil::set_delayedMEState {result Action} {arguments {StmtFSMUtil::MEState Integer}} {position {%/Libraries/StmtFSMUtil.bsv 31 17 {Library StmtFSMUtil}}}} {function StmtFSMUtil::resetMEState {result Action} {arguments StmtFSMUtil::MEState} {position {%/Libraries/StmtFSMUtil.bsv 35 17 {Library StmtFSMUtil}}}} {function StmtFSMUtil::reset_delayedMEState {result Action} {arguments StmtFSMUtil::MEState} {position {%/Libraries/StmtFSMUtil.bsv 39 17 {Library StmtFSMUtil}}}} {module StmtFSMUtil::mkMEState {interface StmtFSMUtil::MEState} {arguments Integer} {position {%/Libraries/StmtFSMUtil.bsv 47 8 {Library StmtFSMUtil}}}} {module StmtFSMUtil::mkMEStateInternal {interface StmtFSMUtil::MEStateInternal#(a)} {provisos {Literal#(a) Eq#(a) Bitwise#(a) {Bits#(a, sa)} Bounded#(a)}} {position {%/Libraries/StmtFSMUtil.bsv 139 8 {Library StmtFSMUtil}}}}


{module CommitIfc::mkNullSendCommit {interface CommitIfc::SendCommit#(a)} {provisos DefaultValue#(a)} {position {%/Libraries/CommitIfc.bsv 39 8 {Library CommitIfc}}}} {module CommitIfc::mkNullRecvCommit {interface CommitIfc::RecvCommit#(a)} {provisos DefaultValue#(a)} {position {%/Libraries/CommitIfc.bsv 51 8 {Library CommitIfc}}}} {module CommitIfc::mkClientFromClientCommit {interface {{ClientServer::Client#(req, resp)}}} {arguments {{CommitIfc::ClientCommit#(req, resp)}}} {provisos {{Bits#(req, _y)} {Bits#(resp, _x)}}} {position {%/Libraries/CommitIfc.bsv 364 8 {Library CommitIfc}}}}

{function CBus::collectCBusIFC {result {{CBus::ModWithCBus#(sa, sd, i)}}} {arguments {{Module#(CBus::IWithCBus#(CBus::CBus#(sa, sd), i))}}} {position {%/Libraries/CBus.bsv 95 31 {Library CBus}}}} {function CBus::exposeCBusIFC {result {{Module#(CBus::IWithCBus#(CBus::CBus#(sa, sd), i))}}} {arguments {{CBus::ModWithCBus#(sa, sd, i)}}} {position {%/Libraries/CBus.bsv 111 17 {Library CBus}}}} {module CBus::regRW {interface {{CBus::IWithCBus#(CBus::CBus#(sa, sd), Reg#(r))}}} {arguments {Bit#(sa) Bit#(TLog#(sd)) r}} {provisos {{Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 161 8 {Library CBus}}}} {function CBus::mkCBRegRW {result {{CBus::ModWithCBus#(sa, sd, Reg#(r))}}} {arguments {{CBus::CRAddr#(sa2, sd)} r}} {provisos {{Add#(ignore, sa2, sa)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 206 31 {Library CBus}}}} {module CBus::regR {interface {{CBus::IWithCBus#(CBus::CBus#(sa, sd), Reg#(r))}}} {arguments {Bit#(sa) Bit#(TLog#(sd)) r}} {provisos {{Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 219 8 {Library CBus}}}} {function CBus::mkCBRegR {result {{CBus::ModWithCBus#(sa, sd, Reg#(r))}}} {arguments {{CBus::CRAddr#(sa2, sd)} r}} {provisos {{Add#(ignore, sa2, sa)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 252 31 {Library CBus}}}} {module CBus::regW {interface {{CBus::IWithCBus#(CBus::CBus#(sa, sd), Reg#(r))}}} {arguments {Bit#(sa) Bit#(TLog#(sd)) r}} {provisos {{Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 264 8 {Library CBus}}}} {function CBus::mkCBRegW {result {{CBus::ModWithCBus#(sa, sd, Reg#(r))}}} {arguments {{CBus::CRAddr#(sa2, sd)} r}} {provisos {{Add#(ignore, sa2, sa)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 303 31 {Library CBus}}}} {module CBus::regRC {interface {{CBus::IWithCBus#(CBus::CBus#(sa, sd), Reg#(r))}}} {arguments {Bit#(sa) Bit#(TLog#(sd)) r}} {provisos {{Add#(k, sr, sd)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 313 8 {Library CBus}}}} {function CBus::mkCBRegRC {result {{CBus::ModWithCBus#(sa, sd, Reg#(r))}}} {arguments {{CBus::CRAddr#(sa2, sd)} r}} {provisos {{Add#(ignore, sa2, sa)} {Add#(k, sr, sd)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 356 31 {Library CBus}}}} {module CBus::regFile {interface {{CBus::IWithCBus#(CBus::CBus#(sa, sd), RegFile::RegFile#(Bit#(sa), r))}}} {arguments {Bit#(sa) Bit#(sa)}} {provisos {{Add#(k, sr, sd)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 369 8 {Library CBus}}}} {function CBus::mkCBRegFile {result {{CBus::ModWithCBus#(sa, sd, RegFile::RegFile#(Bit#(sa), r))}}} {arguments {Bit#(sa) Bit#(sa)}} {provisos {{Add#(k, sr, sd)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 406 31 {Library CBus}}}} {function CBus::foldt {result a} {arguments {{function a f(a x1, a x2)} a List#(a)}} {position {%/Libraries/CBus.bsv 421 12 {Library CBus}}}} {function CBus::bit_or {result Bit#(n)} {arguments {Bit#(n) Bit#(n)}} {position {%/Libraries/CBus.bsv 428 18 {Library CBus}}}} {function CBus::fold_maybes {result Maybe#(Bit#(n))} {arguments {Maybe#(Bit#(n)) Maybe#(Bit#(n))}} {position {%/Libraries/CBus.bsv 434 26 {Library CBus}}}} {function CBus::grab_left {result a} {arguments b} {provisos {{Add#(x, sa, sb)} {Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/CBus.bsv 441 12 {Library CBus}}}} {function CBus::zeroExtendNPBits {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(m, n, mn)}}} {position {%/Libraries/CBus.bsv 488 18 {Library CBus}}}} {function CBus::signExtendNPBits {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(m, n, mn)}}} {position {%/Libraries/CBus.bsv 498 18 {Library CBus}}}} {function CBus::truncateNPBits {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(m, n, mn)}}} {position {%/Libraries/CBus.bsv 508 18 {Library CBus}}}} {function CBus::truncateLSBNPBits {result Bit#(m)} {arguments Bit#(n)} {position {%/Libraries/CBus.bsv 518 18 {Library CBus}}}}


{module BGetPut::mkBGetPut {interface {{Tuple2#(BGetPut::BGetS#(sa), GetPut::Put#(a))}}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BGetPut.bs 72 0 {Library BGetPut}}}} {module BGetPut::mkGetBPut {interface {{Tuple2#(GetPut::Get#(a), BGetPut::BPutS#(sa))}}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BGetPut.bs 113 0 {Library BGetPut}}}} {module BGetPut::mkClientBServer {interface {{Tuple2#(ClientServer::Client#(a, b), BGetPut::BServerS#(sa, sb))}}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/BGetPut.bs 246 0 {Library BGetPut}}}} {module BGetPut::mkBClientServer {interface {{Tuple2#(BGetPut::BClientS#(sa, sb), ClientServer::Server#(a, b))}}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/BGetPut.bs 267 0 {Library BGetPut}}}}

{function ZBusUtil::mkZBit {result ZBusUtil::ZBit#(t)} {arguments t} {position {%/Libraries/ZBusUtil.bsv 40 19 {Library ZBusUtil}}}} {function ZBusUtil::zBitGetWord {result t} {arguments ZBusUtil::ZBit#(t)} {position {%/Libraries/ZBusUtil.bsv 44 12 {Library ZBusUtil}}}} {module ZBusUtil::vMkConvertToZ {interface ZBusUtil::ConvertToZ#(i)} {provisos {{Bits#(i, si)}}} {position {%/Libraries/ZBusUtil.bsv 56 34 {Library ZBusUtil}}}} {module ZBusUtil::mkConvertToZ {interface ZBusUtil::ConvertToZ#(i)} {provisos {{Bits#(i, si)} Eq#(i)}} {position {%/Libraries/ZBusUtil.bsv 65 8 {Library ZBusUtil}}}} {function ZBusUtil::bitToZBit {result ZBusUtil::ZBit#(i)} {arguments {i Bool}} {provisos {{Bits#(i, si)} Eq#(i)}} {position {%/Libraries/ZBusUtil.bsv 82 19 {Library ZBusUtil}}}} {module ZBusUtil::vMkConvertFromZ {interface ZBusUtil::ConvertFromZ#(i)} {provisos {{Bits#(i, si)}}} {position {%/Libraries/ZBusUtil.bsv 95 36 {Library ZBusUtil}}}} {module ZBusUtil::mkConvertFromZ {interface ZBusUtil::ConvertFromZ#(i)} {provisos {{Bits#(i, sz)} Eq#(i)}} {position {%/Libraries/ZBusUtil.bsv 104 8 {Library ZBusUtil}}}} {function ZBusUtil::zBitToBit {result i} {arguments ZBusUtil::ZBit#(i)} {provisos Eq#(i)} {position {%/Libraries/ZBusUtil.bsv 121 12 {Library ZBusUtil}}}} {module ZBusUtil::vMkResolveZ {interface ZBusUtil::ResolveZ#(i)} {provisos {{Bits#(i, _sn0)}}} {position {%/Libraries/ZBusUtil.bsv 134 32 {Library ZBusUtil}}}} {module ZBusUtil::mkResolveZ {interface ZBusUtil::ResolveZ#(i)} {provisos {{Bits#(i, si)} Eq#(i)}} {position {%/Libraries/ZBusUtil.bsv 143 8 {Library ZBusUtil}}}} {function ZBusUtil::resolveZ {result ZBusUtil::ZBit#(i)} {arguments {ZBusUtil::ZBit#(i) ZBusUtil::ZBit#(i)}} {provisos {{Bits#(i, si)} Eq#(i)}} {position {%/Libraries/ZBusUtil.bsv 160 19 {Library ZBusUtil}}}}

{module ZBus::mkZBus {interface Empty} {arguments List#(ZBus::ZBusBusIFC#(t))} {provisos {{Bits#(t, st)} Eq#(t)}} {position {%/Libraries/ZBus.bsv 34 8 {Library ZBus}}}} {function ZBus::updateFromBus {result Action} {arguments {List#(ZBus::ZBusBusIFC#(t)) ZBusUtil::ZBit#(t) Bool}} {position {%/Libraries/ZBus.bsv 52 17 {Library ZBus}}}} {function ZBus::updateZBusBusIFCFromBus {result Action} {arguments {ZBus::ZBusBusIFC#(t) ZBusUtil::ZBit#(t) Bool}} {position {%/Libraries/ZBus.bsv 66 17 {Library ZBus}}}} {function ZBus::bStateToValid {result Bool} {arguments ZBus::BState} {position {%/Libraries/ZBus.bsv 76 15 {Library ZBus}}}} {module ZBus::mkZBusInternal {interface ZBus::ZBusInternalIFC#(t)} {arguments List#(ZBus::ZBusBusIFC#(t))} {provisos {{Bits#(t, st)} Eq#(t)}} {position {%/Libraries/ZBus.bsv 92 8 {Library ZBus}}}} {function ZBus::zBusIFCGetToBusValue {result ZBusUtil::ZBit#(t)} {arguments ZBus::ZBusBusIFC#(t)} {position {%/Libraries/ZBus.bsv 129 19 {Library ZBus}}}} {function ZBus::resolveBusBState {result ZBus::BState} {arguments List#(ZBus::ZBusBusIFC#(t))} {position {%/Libraries/ZBus.bsv 234 17 {Library ZBus}}}} {function ZBus::getBStateFromZBusIFC {result ZBus::BState} {arguments ZBus::ZBusBusIFC#(t)} {position {%/Libraries/ZBus.bsv 247 17 {Library ZBus}}}} {function ZBus::createBState {result ZBus::BState} {arguments Bool} {position {%/Libraries/ZBus.bsv 255 17 {Library ZBus}}}} {function ZBus::resolveBState {result ZBus::BState} {arguments {ZBus::BState ZBus::BState}} {position {%/Libraries/ZBus.bsv 266 17 {Library ZBus}}}} {module ZBus::mkZBusBuffer {interface ZBus::ZBusDualIFC#(t)} {provisos {{Bits#(t, st)} Eq#(t)}} {position {%/Libraries/ZBus.bsv 328 8 {Library ZBus}}}}

{module ProbeWire::mkProbeWire {interface ProbeWire::ProbeWire#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ProbeWire.bsv 32 8 {Library ProbeWire}}}} {module ProbeWire::vMkProbeWire {interface ProbeWire::ProbeWire#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ProbeWire.bsv 42 10 {Library ProbeWire}}}} {function ProbeWire::keepType {result a} {arguments a} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ProbeWire.bsv 51 12 {Library ProbeWire}}}}

{module SRAMFile::mkSRAMFile {interface {{SyncSRAM::SyncSRAMS#(1, adrs, dtas)}}} {arguments {String Integer}} {position {%/Libraries/SRAMFile.bs 16 0 {Library SRAMFile}}}} {function SRAMFile::mkSRAMFile_C {result {{Module#(SyncSRAM::SyncSRAMS#(1, adrs, dtas))}}} {arguments {String Integer}} {position {%/Libraries/SRAMFile.bs 21 0 {Library SRAMFile}}}}

{module SPSRAM::mkSPSRAM {interface {{SyncSRAM::SyncSRAMS#(1, adrs, dtas)}}} {arguments Integer} {position {%/Libraries/SPSRAM.bs 18 0 {Library SPSRAM}}}} {function SPSRAM::mkSPSRAM_C {result {{Module#(SyncSRAM::SyncSRAMS#(1, adrs, dtas))}}} {arguments Integer} {position {%/Libraries/SPSRAM.bs 45 0 {Library SPSRAM}}}} {function SPSRAM::mkSPSRAM_V {result {{Module#(SPSRAM::VSyncSRAM#(adrs, dtas))}}} {arguments Integer} {position {%/Libraries/SPSRAM.bs 71 0 {Library SPSRAM}}}}

{module TRAM::tagRAM {interface {{TRAM::TRAM#(tg, adr, dta)}}} {arguments {Integer {m#(RAM::RAM#(adr, dta))}}} {provisos {{Bits#(tg, stg)}}} {position {%/Libraries/TRAM.bs 68 0 {Library TRAM}}}}

{module PAClib::mkSizedFIFOF_local {interface FIFOF::FIFOF#(t)} {arguments Integer} {provisos {{Bits#(t, tsiz)}}} {position {%/Libraries/PAClib.bsv 28 8 {Library PAClib}}}} {function PAClib::f_FIFOF_to_PipeOut {result PAClib::PipeOut#(a)} {arguments FIFOF::FIFOF#(a)} {position {%/Libraries/PAClib.bsv 60 24 {Library PAClib}}}} {module PAClib::mkFIFOF_to_Pipe {interface PAClib::PipeOut#(a)} {arguments {FIFOF::FIFOF#(a) PAClib::PipeOut#(a)}} {position {%/Libraries/PAClib.bsv 74 8 {Library PAClib}}}} {function PAClib::mkPipe_to_Server {result {{Module#(ClientServer::Server#(ta, tb))}}} {arguments {{PAClib::Pipe#(ta, tb)}}} {provisos {{Bits#(ta, wd_ta)}}} {position {%/Libraries/PAClib.bsv 101 17 {Library PAClib}}}} {module PAClib::mkSource_from_fav {interface PAClib::PipeOut#(a)} {arguments ActionValue#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 123 8 {Library PAClib}}}} {module PAClib::mkSource_from_constant {interface PAClib::PipeOut#(a)} {arguments a} {position {%/Libraries/PAClib.bsv 141 8 {Library PAClib}}}} {module PAClib::mkSink {interface Empty} {arguments PAClib::PipeOut#(a)} {position {%/Libraries/PAClib.bsv 160 8 {Library PAClib}}}} {module PAClib::mkSink_to_fa {interface Empty} {arguments {{function Action f(a x1)} PAClib::PipeOut#(a)}} {position {%/Libraries/PAClib.bsv 172 8 {Library PAClib}}}} {module PAClib::mkBuffer {interface PAClib::PipeOut#(a)} {arguments PAClib::PipeOut#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 191 8 {Library PAClib}}}} {module PAClib::mkBuffer_n {interface PAClib::PipeOut#(a)} {arguments {Integer PAClib::PipeOut#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 209 8 {Library PAClib}}}} {module PAClib::mkSynchBuffer {interface PAClib::PipeOut#(a)} {arguments {a PAClib::PipeOut#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 233 8 {Library PAClib}}}} {module PAClib::mkSynchBuffer_n {interface PAClib::PipeOut#(a)} {arguments {Integer a PAClib::PipeOut#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 259 8 {Library PAClib}}}} {module PAClib::mkFn_to_Pipe {interface PAClib::PipeOut#(tb)} {arguments {{function tb f(ta x1)} PAClib::PipeOut#(ta)}} {position {%/Libraries/PAClib.bsv 281 8 {Library PAClib}}}} {function PAClib::fn_tee_to_Action {result PAClib::PipeOut#(ta)} {arguments {{function Action f(ta x1)} PAClib::PipeOut#(ta)}} {position {%/Libraries/PAClib.bsv 305 24 {Library PAClib}}}} {module PAClib::mkAVFn_to_Pipe {interface PAClib::PipeOut#(tb)} {arguments {{function ActionValue#(tb) f(ta x1)} PAClib::PipeOut#(ta)}} {provisos {{Bits#(tb, wd_tb)} {Bits#(ta, wd_ta)}}} {position {%/Libraries/PAClib.bsv 321 8 {Library PAClib}}}} {module PAClib::mkFn_to_Pipe_Buffered {interface PAClib::PipeOut#(b)} {arguments {Bool {function b f(a x1)} Bool PAClib::PipeOut#(a)}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 342 8 {Library PAClib}}}} {module PAClib::mkFn_to_Pipe_SynchBuffered {interface PAClib::PipeOut#(b)} {arguments {Maybe#(a) {function b f(a x1)} Maybe#(b) PAClib::PipeOut#(a)}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 367 8 {Library PAClib}}}} {function PAClib::mkRetimedPipelineFn {result Module#(PAClib::PipeOut#(b))} {arguments {{function b f(a x1)} Integer PAClib::PipeOut#(a)}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/PAClib.bsv 396 17 {Library PAClib}}}} {module PAClib::mkTap {interface PAClib::PipeOut#(a)} {arguments {{function Action f(a x1)} PAClib::PipeOut#(a)}} {position {%/Libraries/PAClib.bsv 419 8 {Library PAClib}}}} {module PAClib::mkFunnel {interface {{PAClib::PipeOut#(Vector::Vector#(m, a))}}} {arguments {{PAClib::PipeOut#(Vector::Vector#(mk, a))}}} {provisos {{Mul#(mk, sa, TMul#(k, TMul#(m, sa)))} {Log#(k, logk)} {Mul#(m, k, mk)} {Add#(ignore_3, m, mk)} {Add#(ignore_2, 1, m)} {Add#(ignore_1, 1, mk)} {Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 448 8 {Library PAClib}}}} {module PAClib::mkFunnel_Indexed {interface {{PAClib::PipeOut#(Vector::Vector#(m, Tuple2#(a, UInt#(logmk))))}}} {arguments {{PAClib::PipeOut#(Vector::Vector#(mk, a))}}} {provisos {{Bits#(a, sa)} {Mul#(m, sa, _v100)} {Mul#(k, _v100, TMul#(mk, sa))} {Log#(k, logk)} {Mul#(m, k, mk)} {Log#(mk, logmk)} {Add#(ignore_3, m, mk)} {Add#(ignore_2, 1, m)} {Add#(ignore_1, 1, mk)}}} {position {%/Libraries/PAClib.bsv 491 8 {Library PAClib}}}} {module PAClib::mkUnfunnel {interface {{PAClib::PipeOut#(Vector::Vector#(mk, a))}}} {arguments {Bool {PAClib::PipeOut#(Vector::Vector#(m, a))}}} {provisos {{Add#(logk, 1, logk_plus_1)} {Log#(k, logk)} {Mul#(m, k, mk)} {Add#(ignore_3, m, mk)} {Add#(ignore_2, 1, m)} {Add#(ignore_1, 1, mk)} {Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 553 8 {Library PAClib}}}} {function PAClib::mkMap {result {{Module#(PAClib::PipeOut#(Vector::Vector#(n, b)))}}} {arguments {{PAClib::Pipe#(a, b)} {PAClib::PipeOut#(Vector::Vector#(n, a))}}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 635 17 {Library PAClib}}}} {function PAClib::mkMap_with_funnel_indexed {result {{Module#(PAClib::PipeOut#(Vector::Vector#(mk, b)))}}} {arguments {UInt#(m) {PAClib::Pipe#(Tuple2#(a, UInt#(logmk)), b)} Bool {PAClib::PipeOut#(Vector::Vector#(mk, a))}}} {provisos {{Bits#(a, sa)} {Mul#(m, sa, _v100)} {Add#(_ignore3, m, mk)} {Add#(_ignore2, 1, mk)} {Add#(_ignore1, 1, m)} {Mul#(k, _v100, TMul#(mk, sa))} {Log#(mk, logmk)} {Mul#(m, k, mk)} {Bits#(b, sb)}}} {position {%/Libraries/PAClib.bsv 694 17 {Library PAClib}}}} {function PAClib::mkMap_fn_with_funnel_indexed {result {{Module#(PAClib::PipeOut#(Vector::Vector#(mk, b)))}}} {arguments {UInt#(m) {function b f(Tuple2#(a, UInt#(logmk)) x1)} Bool {PAClib::PipeOut#(Vector::Vector#(mk, a))}}} {provisos {{Bits#(a, sa)} {Mul#(m, sa, _v100)} {Add#(_ignore3, m, mk)} {Add#(_ignore2, 1, mk)} {Add#(_ignore1, 1, m)} {Mul#(k, _v100, TMul#(mk, sa))} {Log#(mk, logmk)} {Mul#(m, k, mk)} {Bits#(b, sb)}}} {position {%/Libraries/PAClib.bsv 747 17 {Library PAClib}}}} {module PAClib::mkFork {interface {{Tuple2#(PAClib::PipeOut#(b), PAClib::PipeOut#(c))}}} {arguments {{function Tuple2#(b, c) f(a x1)} PAClib::PipeOut#(a)}} {position {%/Libraries/PAClib.bsv 795 8 {Library PAClib}}}} {module PAClib::mkFork2 {interface {{Tuple2#(PAClib::PipeOut#(b), PAClib::PipeOut#(c))}}} {arguments {{function Tuple2#(b, c) f(a x1)} PAClib::PipeOut#(a)}} {provisos {{Bits#(c, sc)} {Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 843 8 {Library PAClib}}}} {module PAClib::mkForkVector {interface {{Vector::Vector#(n, PAClib::PipeOut#(a))}}} {arguments PAClib::PipeOut#(a)} {position {%/Libraries/PAClib.bsv 869 8 {Library PAClib}}}} {module PAClib::mkExplodeVector {interface {{Vector::Vector#(n, PAClib::PipeOut#(a))}}} {arguments {{PAClib::PipeOut#(Vector::Vector#(n, a))}}} {position {%/Libraries/PAClib.bsv 899 8 {Library PAClib}}}} {module PAClib::mkForkAndBufferRight {interface {{Tuple2#(PAClib::PipeOut#(a), PAClib::PipeOut#(a))}}} {arguments PAClib::PipeOut#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 932 8 {Library PAClib}}}} {module PAClib::mkJoin {interface PAClib::PipeOut#(c)} {arguments {{function c f(a x1, b x2)} PAClib::PipeOut#(a) PAClib::PipeOut#(b)}} {position {%/Libraries/PAClib.bsv 947 8 {Library PAClib}}}} {function PAClib::mkCompose {result Module#(PAClib::PipeOut#(c))} {arguments {{PAClib::Pipe#(a, b)} {PAClib::Pipe#(b, c)} PAClib::PipeOut#(a)}} {position {%/Libraries/PAClib.bsv 974 17 {Library PAClib}}}} {function PAClib::mkCompose_buffered {result Module#(PAClib::PipeOut#(c))} {arguments {Bool {PAClib::Pipe#(a, b)} {PAClib::Pipe#(b, c)} PAClib::PipeOut#(a)}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/PAClib.bsv 989 17 {Library PAClib}}}} {function PAClib::mkLinearPipe_S {result Module#(PAClib::PipeOut#(a))} {arguments {Integer {function PAClib::Pipe#(a, a) f(UInt#(logn) x1)} PAClib::PipeOut#(a)}} {position {%/Libraries/PAClib.bsv 1011 17 {Library PAClib}}}} {function PAClib::mkLinearPipe_S_Alt {result Module#(PAClib::PipeOut#(b))} {arguments {Integer {PAClib::Pipe#(Tuple2#(a, UInt#(wj)), Tuple2#(a, UInt#(wj)))} {PAClib::Pipe#(a, b)} PAClib::PipeOut#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 1036 17 {Library PAClib}}}} {function PAClib::mkLinearPipe_D {result Module#(PAClib::PipeOut#(a))} {arguments {Integer {PAClib::Pipe#(Tuple2#(a, UInt#(logn)), a)} PAClib::PipeOut#(a)}} {position {%/Libraries/PAClib.bsv 1070 17 {Library PAClib}}}} {function PAClib::mkIfThenElse {result Module#(PAClib::PipeOut#(b))} {arguments {Integer {PAClib::Pipe#(a, b)} {PAClib::Pipe#(a, b)} {PAClib::PipeOut#(Tuple2#(a, Bool))}}} {position {%/Libraries/PAClib.bsv 1108 17 {Library PAClib}}}} {function PAClib::mkIfThenElse_unordered {result Module#(PAClib::PipeOut#(b))} {arguments {{PAClib::Pipe#(a, b)} {PAClib::Pipe#(a, b)} {PAClib::PipeOut#(Tuple2#(a, Bool))}}} {position {%/Libraries/PAClib.bsv 1174 17 {Library PAClib}}}} {function PAClib::mkWhileLoop {result Module#(PAClib::PipeOut#(c))} {arguments {{PAClib::Pipe#(a, Tuple2#(b, Bool))} {PAClib::Pipe#(b, a)} {PAClib::Pipe#(b, c)} PAClib::PipeOut#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 1240 17 {Library PAClib}}}} {function PAClib::mkForLoop {result Module#(PAClib::PipeOut#(b))} {arguments {Integer {PAClib::Pipe#(Tuple2#(a, UInt#(wj)), Tuple2#(a, UInt#(wj)))} {PAClib::Pipe#(a, b)} PAClib::PipeOut#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 1308 17 {Library PAClib}}}} {function PAClib::mkWhileFold {result Module#(PAClib::PipeOut#(a))} {arguments {{PAClib::Pipe#(Tuple2#(a, a), a)} {PAClib::PipeOut#(Tuple2#(a, Bool))}}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 1379 17 {Library PAClib}}}} {function PAClib::mkForFold {result Module#(PAClib::PipeOut#(a))} {arguments {UInt#(wj) {PAClib::Pipe#(Tuple2#(a, a), a)} PAClib::PipeOut#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 1444 17 {Library PAClib}}}} {function PAClib::mkReorder {result Module#(PAClib::PipeOut#(b))} {arguments {{PAClib::Pipe#(Tuple2#(CompletionBuffer::CBToken#(n), a), Tuple2#(CompletionBuffer::CBToken#(n), b))} PAClib::PipeOut#(a)}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/PAClib.bsv 1515 17 {Library PAClib}}}} {function PAClib::mkReplicateFn {result Module#(PAClib::PipeOut#(b))} {arguments {Integer {function b f(a x1, UInt#(n) x2)} PAClib::PipeOut#(a)}} {position {%/Libraries/PAClib.bsv 1554 17 {Library PAClib}}}}

{function LBus::initLBusContext {result LBus::LBusContext} {position {%/Libraries/LBus.bsv 25 13 {Library LBus}}}} {function LBus::unLbAddr {result Bit#(sa)} {arguments {{LBus::LbAddr#(sa, sd)}}} {position {%/Libraries/LBus.bsv 64 19 {Library LBus}}}} {function LBus::lbB2W {result {{LBus::LbAddr#(sa, sd)}}} {arguments {{LBus::LbAddr#(sa, sd)}}} {position {%/Libraries/LBus.bsv 71 25 {Library LBus}}}} {module LBus::lbs {interface i} {arguments {{Module#(LBus::LBReg#(sa, sd, i))}}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(sa, sd))}}} {position {%/Libraries/LBus.bsv 97 13 {Library LBus}}}} {module LBus::lbsInt {interface i} {arguments {{mc#(LBus::IWithLBus#(LBus::IntFlag#(sa, sd), i))}}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(sa, sd))}}} {position {%/Libraries/LBus.bsv 109 13 {Library LBus}}}} {module LBus::regRW {interface {{LBus::LBReg#(sa, sd, Reg#(r))}}} {arguments {LBus::ResetType {LBus::LbAddr#(sa, sd)} Integer r}} {provisos {{Add#(k, sr, sd)} {Bits#(r, sr)}}} {position {%/Libraries/LBus.bsv 125 8 {Library LBus}}}} {module LBus::mkLbRegRW {interface Reg#(r_type)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer r_type}} {provisos {{Add#(k, sr, 32)} {Bits#(r_type, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 173 13 {Library LBus}}}} {module LBus::mkLbWdRW {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} r}} {provisos {{Bits#(r, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 182 13 {Library LBus}}}} {module LBus::mkLbRegRWA {interface Reg#(r_type)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer r_type}} {provisos {{Add#(k, sr, 32)} {Bits#(r_type, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 189 13 {Library LBus}}}} {module LBus::mkLbWdRWA {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} r}} {provisos {{Bits#(r, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 198 13 {Library LBus}}}} {module LBus::mkLbRegRWU {interface Reg#(r_type)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer}} {provisos {{Add#(k, sr, 32)} {Bits#(r_type, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 205 13 {Library LBus}}}} {module LBus::mkLbWdRWU {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)}}} {provisos {{Bits#(r, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 214 13 {Library LBus}}}} {module LBus::regW1tC {interface {{LBus::LBReg#(sa, sd, Reg#(Bit#(1)))}}} {arguments {{LBus::LbAddr#(sa, sd)} Integer Bit#(1)}} {provisos {{Add#(k, 1, sd)}}} {position {%/Libraries/LBus.bsv 221 8 {Library LBus}}}} {module LBus::mkLbRegW1tC {interface Reg#(Bit#(1))} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer Bit#(1)}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 251 13 {Library LBus}}}} {module LBus::regRO {interface {{LBus::LBReg#(sa, sd, Reg#(r))}}} {arguments {LBus::ResetType {LBus::LbAddr#(sa, sd)} Integer r}} {provisos {{Add#(k, sr, sd)} {Bits#(r, sr)}}} {position {%/Libraries/LBus.bsv 258 8 {Library LBus}}}} {module LBus::mkLbRegRO {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer r}} {provisos {{Add#(k, sr, 32)} {Bits#(r, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 297 13 {Library LBus}}}} {module LBus::mkLbWdRO {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} r}} {provisos {{Bits#(r, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 304 13 {Library LBus}}}} {module LBus::mkLbRegROA {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer r}} {provisos {{Add#(k, sr, 32)} {Bits#(r, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 311 13 {Library LBus}}}} {module LBus::mkLbWdROA {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} r}} {provisos {{Bits#(r, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 318 13 {Library LBus}}}} {module LBus::mkLbRegROU {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer}} {provisos {{Add#(k, sr, 32)} {Bits#(r, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 325 13 {Library LBus}}}} {module LBus::mkLbWdROU {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)}}} {provisos {{Bits#(r, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 332 13 {Library LBus}}}} {module LBus::mkLbConfigRegRO {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer r}} {provisos {{Add#(k, sr, 32)} {Bits#(r, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 339 13 {Library LBus}}}} {module LBus::accum {interface {{LBus::LBReg#(sa, sd, LBus::Accum#(k))}}} {arguments {{LBus::LbAddr#(sa, sd)} Integer Bit#(k)}} {provisos {{Add#(k, i, sd)}}} {position {%/Libraries/LBus.bsv 354 8 {Library LBus}}}} {module LBus::mkLbAccum {interface LBus::Accum#(k)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer Bit#(k)}} {provisos {{Add#(k, i, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 390 13 {Library LBus}}}} {module LBus::w1tc {interface {{LBus::LBReg#(sa, sd, Reg#(Bit#(1)))}}} {arguments {{LBus::LbAddr#(sa, sd)} Integer}} {provisos {{Add#(k, 1, sd)}}} {position {%/Libraries/LBus.bsv 402 8 {Library LBus}}}} {module LBus::mkLbW1tC {interface Reg#(Bit#(1))} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 446 13 {Library LBus}}}} {module LBus::interrupt {interface {{LBus::IWithLBus#(LBus::IntFlag#(LBus::SA, LBus::SD), LBus::Interrupt)}}} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer {LBus::LbAddr#(LBus::SA, LBus::SD)} Integer}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 453 13 {Library LBus}}}} {module LBus::mkLbInterrupt {interface LBus::Interrupt} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer {LBus::LbAddr#(LBus::SA, LBus::SD)} Integer}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 476 4 {Library LBus}}}} {module LBus::mkLbClient {interface {{ClientServer::Client#(a, b)}}} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer {LBus::LbAddr#(LBus::SA, LBus::SD)} Integer {mc#(LBus::RegHandler#(a, b))}}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 490 13 {Library LBus}}}} {module LBus::mkLbOffset {interface i} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} mc#(i)}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 530 13 {Library LBus}}}} {function LBus::mkLbTop {result {{Module#(LBus::IWithLBus#(LBus::ILBus#(LBus::SA, LBus::SD), i))}}} {arguments {{Module#(LBus::Fan#(LBus::ILBus#(LBus::SA, LBus::SD), Vector::Vector#(1, LBus::ILbNode#(LBus::SA, LBus::SD))))} {ModuleContextCore::ModuleContext#(LBus::LBusContext, i)}}} {position {%/Libraries/LBus.bsv 897 17 {Library LBus}}}} {function LBus::mkLbFanout {result {{Module#(LBus::Fan#(LBus::ILBus#(LBus::SA, LBus::SD), Vector::Vector#(n, LBus::ILbNode#(LBus::SA, LBus::SD))))}}} {position {%/Libraries/LBus.bsv 910 17 {Library LBus}}}} {module LBus::mkLbHandler {interface {{LBus::ILBusHandler#(sa, sd)}}} {position {%/Libraries/LBus.bsv 1072 8 {Library LBus}}}} {function LBus::foldt {result a} {arguments {{function a f(a x1, a x2)} a List#(a)}} {position {%/Libraries/LBus.bsv 1162 12 {Library LBus}}}} {function LBus::or_f {result Bit#(n)} {arguments {Bit#(n) Bit#(n)}} {position {%/Libraries/LBus.bsv 1172 18 {Library LBus}}}} {function LBus::and_f {result Bool} {arguments {Bool Bool}} {position {%/Libraries/LBus.bsv 1173 15 {Library LBus}}}}

{function Wallace::wallaceAddBags {result Bit#(n)} {arguments {{Vector::Vector#(n, List#(Bit#(1)))}}} {position {%/Libraries/Wallace.bs 32 0 {Library Wallace}}}} {function Wallace::wallaceAdd {result Bit#(n)} {arguments List#(Bit#(m))} {provisos {{Add#(m, k, n)}}} {position {%/Libraries/Wallace.bs 41 0 {Library Wallace}}}} {function Wallace::wallaceStep {result {{Vector::Vector#(n, Wallace::BitBag)}}} {arguments {{Vector::Vector#(n, Wallace::BitBag)}}} {position {%/Libraries/Wallace.bs 44 0 {Library Wallace}}}} {function Wallace::combine {result {{Vector::Vector#(n, Wallace::BitBag)}}} {arguments {{Vector::Vector#(n, Tuple2#(Wallace::BitBag, Wallace::BitBag))}}} {position {%/Libraries/Wallace.bs 47 0 {Library Wallace}}}} {function Wallace::step {result {{Tuple2#(Wallace::BitBag, Wallace::BitBag)}}} {arguments {Wallace::BitBag Wallace::BitBag Wallace::BitBag}} {position {%/Libraries/Wallace.bs 50 0 {Library Wallace}}}} {function Wallace::head0 {result Wallace::Bit1} {arguments Wallace::BitBag} {position {%/Libraries/Wallace.bs 56 0 {Library Wallace}}}} {function Wallace::padWith {result {{Vector::Vector#(n, a)}}} {arguments {a {Vector::Vector#(m, a)}}} {provisos {{Add#(m, k, n)}}} {position {%/Libraries/Wallace.bs 60 0 {Library Wallace}}}} {function Wallace::padToKBits {result {{Vector::Vector#(k, Bit#(1))}}} {arguments List#(Bit#(1))} {position {%/Libraries/Wallace.bs 63 0 {Library Wallace}}}} {function Wallace::fullAdd {result {{Tuple2#(Wallace::Bit1, Wallace::Bit1)}}} {arguments {Wallace::Bit1 Wallace::Bit1 Wallace::Bit1}} {position {%/Libraries/Wallace.bs 84 0 {Library Wallace}}}} {function Wallace::halfAdd {result {{Tuple2#(Wallace::Bit1, Wallace::Bit1)}}} {arguments {Wallace::Bit1 Wallace::Bit1}} {position {%/Libraries/Wallace.bs 112 0 {Library Wallace}}}}


{function RegTwo::vMkRegTwo {result Module#(RegTwo::VRegTwo#(n))} {arguments Bit#(n)} {position {%/Libraries/RegTwo.bs 18 0 {Library RegTwo}}}} {module RegTwo::mkRegTwo {interface RegTwo::RegTwo#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/RegTwo.bs 30 0 {Library RegTwo}}}} {function RegTwo::vMkRegTwoA {result Module#(RegTwo::VRegTwo#(n))} {arguments Bit#(n)} {position {%/Libraries/RegTwo.bs 55 0 {Library RegTwo}}}} {module RegTwo::mkRegTwoA {interface RegTwo::RegTwo#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/RegTwo.bs 67 0 {Library RegTwo}}}} {function RegTwo::vMkRegTwoU {result Module#(RegTwo::VRegTwo#(n))} {position {%/Libraries/RegTwo.bs 92 0 {Library RegTwo}}}} {module RegTwo::mkRegTwoU {interface RegTwo::RegTwo#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/RegTwo.bs 104 0 {Library RegTwo}}}}

{module ModuleCollect::addToCollection {interface Empty} {arguments a} {provisos {{ModuleContext::Context#(mc, UnitAppendList::UAList#(a))}}} {position {%/Libraries/ModuleCollect.bsv 16 13 {Library ModuleCollect}}}} {module ModuleCollect::mapCollection {interface i} {arguments {{function a f(a x1)} mc#(i)}} {provisos {{ModuleContext::Context#(mc, UnitAppendList::UAList#(a))}}} {position {%/Libraries/ModuleCollect.bsv 22 13 {Library ModuleCollect}}}} {function ModuleCollect::getCollection {result {{Module#(Tuple2#(i, List#(a)))}}} {arguments {{ModuleCollect::ModuleCollect#(a, i)}}} {position {%/Libraries/ModuleCollect.bsv 31 17 {Library ModuleCollect}}}} {function ModuleCollect::exposeCollection {result {{Module#(ModuleCollect::IWithCollection#(a, i))}}} {arguments {{ModuleCollect::ModuleCollect#(a, i)}}} {position {%/Libraries/ModuleCollect.bsv 41 17 {Library ModuleCollect}}}}

{function OVLAssertions::default_msg {result String} {position {%/Libraries/OVLAssertions.bsv 113 8}}} {function OVLAssertions::default_num {result Int#(32)} {position {%/Libraries/OVLAssertions.bsv 114 10}}} {function OVLAssertions::mkOVLDefaults {result OVLAssertions::OVLDefaults#(a)} {provisos Bounded#(a)} {position {%/Libraries/OVLAssertions.bsv 116 26}}} {function OVLAssertions::mkOVLDefaultsTemplate {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 145 34}}} {function OVLAssertions::updateOVLDefaults {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {provisos {Eq#(a) Bounded#(a)}} {position {%/Libraries/OVLAssertions.bsv 177 26}}} {function OVLAssertions::updateOVLSeverityLevel {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 210 26}}} {function OVLAssertions::updateOVLPropertyType {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 228 26}}} {function OVLAssertions::updateOVLMsg {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 245 26}}} {function OVLAssertions::updateOVLCoverageLevel {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 262 26}}} {function OVLAssertions::updateOVLActionOnNewStart {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 279 26}}} {function OVLAssertions::updateOVLEdgeType {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 296 26}}} {function OVLAssertions::updateOVLNecessaryCondition {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 314 26}}} {function OVLAssertions::updateOVLInactive {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 331 26}}} {function OVLAssertions::updateOVLNumCks {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 348 26}}} {function OVLAssertions::updateOVLValue {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {provisos {Eq#(a) Bounded#(a)}} {position {%/Libraries/OVLAssertions.bsv 365 26}}} {function OVLAssertions::updateOVLMin {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {provisos {Eq#(a) Bounded#(a)}} {position {%/Libraries/OVLAssertions.bsv 384 26}}} {function OVLAssertions::updateOVLMax {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {provisos {Eq#(a) Bounded#(a)}} {position {%/Libraries/OVLAssertions.bsv 403 26}}} {function OVLAssertions::updateOVLMinCks {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 423 26}}} {function OVLAssertions::updateOVLMaxCks {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 440 26}}} {function OVLAssertions::updateOVLMinAckCycle {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 457 26}}} {function OVLAssertions::updateOVLMaxAckCycle {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 474 26}}} {function OVLAssertions::updateOVLMaxAckLength {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 491 26}}} {function OVLAssertions::updateOVLReqDrop {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 508 26}}} {function OVLAssertions::updateOVLDeassertCount {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 525 26}}} {function OVLAssertions::updateOVLDepth {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 542 26}}} {function OVLAssertions::updateOVLCheckOverlapping {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 560 26}}} {function OVLAssertions::updateOVLCheckMissingStart {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 577 26}}} {function OVLAssertions::updateOVLSimultaneousPushPop {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 594 26}}} {function OVLAssertions::create_assert_always_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 713 34}}} {module OVLAssertions::bsv_assert_always {interface OVLAssertions::AssertTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 726 8}}} {module OVLAssertions::v_assert_always {interface OVLAssertions::VAssertTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 744 8}}} {function OVLAssertions::create_assert_always_on_edge_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 768 34}}} {module OVLAssertions::bsv_assert_always_on_edge {interface OVLAssertions::AssertSampleTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 783 8}}} {module OVLAssertions::v_assert_always_on_edge {interface OVLAssertions::VAssertSampleTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 804 8}}} {function OVLAssertions::create_assert_change_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 830 34}}} {module OVLAssertions::bsv_assert_change {interface OVLAssertions::AssertStartTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 846 8}}} {module OVLAssertions::v_assert_change {interface OVLAssertions::VAssertStartTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 868 8}}} {function OVLAssertions::create_assert_decrement_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Literal#(a)} {position {%/Libraries/OVLAssertions.bsv 897 34}}} {module OVLAssertions::bsv_assert_decrement {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) Literal#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 913 8}}} {module OVLAssertions::v_assert_decrement {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 932 8}}} {function OVLAssertions::create_assert_delta_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Literal#(a)} {position {%/Libraries/OVLAssertions.bsv 959 34}}} {module OVLAssertions::bsv_assert_delta {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) Literal#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 976 8}}} {module OVLAssertions::v_assert_delta {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 995 8}}} {function OVLAssertions::create_assert_even_parity_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1025 34}}} {module OVLAssertions::bsv_assert_even_parity {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1038 8}}} {module OVLAssertions::v_assert_even_parity {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 1057 8}}} {function OVLAssertions::create_assert_frame_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1085 34}}} {module OVLAssertions::bsv_assert_frame {interface OVLAssertions::AssertStartTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1102 8}}} {module OVLAssertions::v_assert_frame {interface OVLAssertions::VAssertStartTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1123 8}}} {function OVLAssertions::create_assert_handshake_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1153 34}}} {module OVLAssertions::bsv_assert_handshake {interface OVLAssertions::AssertStartTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1172 8}}} {module OVLAssertions::v_assert_handshake {interface OVLAssertions::VAssertStartTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1193 8}}} {function OVLAssertions::create_assert_implication_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1226 34}}} {module OVLAssertions::bsv_assert_implication {interface OVLAssertions::AssertStartTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1239 8}}} {module OVLAssertions::v_assert_implication {interface OVLAssertions::VAssertStartTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1260 8}}} {function OVLAssertions::create_assert_increment_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Literal#(a)} {position {%/Libraries/OVLAssertions.bsv 1285 34}}} {module OVLAssertions::bsv_assert_increment {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) Literal#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1301 8}}} {module OVLAssertions::v_assert_increment {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1321 8}}} {function OVLAssertions::create_assert_never_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1348 34}}} {module OVLAssertions::bsv_assert_never {interface OVLAssertions::AssertTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1361 8}}} {module OVLAssertions::v_assert_never {interface OVLAssertions::VAssertTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1379 8}}} {function OVLAssertions::create_assert_odd_parity_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1404 34}}} {module OVLAssertions::bsv_assert_odd_parity {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1417 8}}} {module OVLAssertions::v_assert_odd_parity {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 1436 8}}} {function OVLAssertions::create_assert_next_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1466 34}}} {module OVLAssertions::bsv_assert_next {interface OVLAssertions::AssertStartTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1484 8}}} {module OVLAssertions::v_assert_next {interface OVLAssertions::VAssertStartTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1505 8}}} {function OVLAssertions::create_assert_no_overflow_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Bounded#(a)} {position {%/Libraries/OVLAssertions.bsv 1535 34}}} {module OVLAssertions::bsv_assert_no_overflow {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1553 8}}} {module OVLAssertions::v_assert_no_overflow {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1572 8}}} {function OVLAssertions::create_assert_no_underflow_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Bounded#(a)} {position {%/Libraries/OVLAssertions.bsv 1604 34}}} {module OVLAssertions::bsv_assert_no_underflow {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1621 8}}} {module OVLAssertions::v_assert_no_underflow {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1641 8}}} {function OVLAssertions::create_assert_one_cold_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1671 34}}} {module OVLAssertions::bsv_assert_one_cold {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1686 8}}} {module OVLAssertions::v_assert_one_cold {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 1705 8}}} {function OVLAssertions::create_assert_one_hot_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1733 34}}} {module OVLAssertions::bsv_assert_one_hot {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1746 8}}} {module OVLAssertions::v_assert_one_hot {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 1765 8}}} {function OVLAssertions::create_assert_proposition_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1791 34}}} {module OVLAssertions::bsv_assert_proposition {interface OVLAssertions::AssertTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1804 8}}} {module OVLAssertions::v_assert_proposition {interface OVLAssertions::VAssertTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1819 8}}} {function OVLAssertions::create_assert_range_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Bounded#(a)} {position {%/Libraries/OVLAssertions.bsv 1845 34}}} {module OVLAssertions::bsv_assert_range {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1862 8}}} {module OVLAssertions::v_assert_range {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1881 8}}} {function OVLAssertions::create_assert_time_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1912 34}}} {module OVLAssertions::bsv_assert_time {interface OVLAssertions::AssertStartTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1928 8}}} {module OVLAssertions::v_assert_time {interface OVLAssertions::VAssertStartTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1950 8}}} {function OVLAssertions::create_assert_unchange_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1978 34}}} {module OVLAssertions::bsv_assert_unchange {interface OVLAssertions::AssertStartTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1994 8}}} {module OVLAssertions::v_assert_unchange {interface OVLAssertions::VAssertStartTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2016 8}}} {function OVLAssertions::create_assert_width_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2047 34}}} {module OVLAssertions::bsv_assert_width {interface OVLAssertions::AssertTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 2063 8}}} {module OVLAssertions::v_assert_width {interface OVLAssertions::VAssertTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 2081 8}}} {function OVLAssertions::create_assert_win_change_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2109 34}}} {module OVLAssertions::bsv_assert_win_change {interface OVLAssertions::AssertStartStopTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2122 8}}} {module OVLAssertions::v_assert_win_change {interface OVLAssertions::VAssertStartStopTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2147 8}}} {function OVLAssertions::create_assert_win_unchange_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2176 34}}} {module OVLAssertions::bsv_assert_win_unchange {interface OVLAssertions::AssertStartStopTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2189 8}}} {module OVLAssertions::v_assert_win_unchange {interface OVLAssertions::VAssertStartStopTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2214 8}}} {function OVLAssertions::create_assert_window_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2243 34}}} {module OVLAssertions::bsv_assert_window {interface OVLAssertions::AssertStartStopTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 2256 8}}} {module OVLAssertions::v_assert_window {interface OVLAssertions::VAssertStartStopTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 2280 8}}} {function OVLAssertions::create_assert_zero_one_hot_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2307 34}}} {module OVLAssertions::bsv_assert_zero_one_hot {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2320 8}}} {module OVLAssertions::v_assert_zero_one_hot {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2339 8}}} {function OVLAssertions::create_assert_cycle_sequence_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2367 34}}} {module OVLAssertions::bsv_assert_cycle_sequence {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Add#(ignore, 2, sa)} {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2381 8}}} {module OVLAssertions::v_assert_cycle_sequence {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2400 8}}} {function OVLAssertions::create_assert_never_unknown_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2428 34}}} {module OVLAssertions::bsv_assert_never_unknown {interface OVLAssertions::AssertStartTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2441 8}}} {module OVLAssertions::v_assert_never_unknown {interface OVLAssertions::VAssertStartTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2463 8}}} {function OVLAssertions::create_assert_no_transition_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2503 34}}} {module OVLAssertions::bsv_assert_no_transition {interface OVLAssertions::AssertTransitionTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2516 8}}} {module OVLAssertions::v_assert_no_transition {interface OVLAssertions::VAssertTransitionTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2541 8}}} {function OVLAssertions::create_assert_transition_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2571 34}}} {module OVLAssertions::bsv_assert_transition {interface OVLAssertions::AssertTransitionTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2584 8}}} {module OVLAssertions::v_assert_transition {interface OVLAssertions::VAssertTransitionTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2609 8}}} {function OVLAssertions::create_assert_quiescent_state_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2653 34}}} {module OVLAssertions::bsv_assert_quiescent_state {interface OVLAssertions::AssertQuiescentTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2666 8}}} {module OVLAssertions::v_assert_quiescent_state {interface OVLAssertions::VAssertQuiescentTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2691 8}}} {function OVLAssertions::create_assert_never_unknown_async_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Literal#(a)} {position {%/Libraries/OVLAssertions.bsv 2720 34}}} {module OVLAssertions::bsv_assert_never_unknown_async {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) Literal#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2734 8}}} {module OVLAssertions::v_assert_never_unknown_async {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2753 8}}} {function OVLAssertions::create_assert_fifo_index_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Bounded#(a)} {position {%/Libraries/OVLAssertions.bsv 2792 34}}} {module OVLAssertions::bsv_assert_fifo_index {interface {{OVLAssertions::AssertFifoTest_IFC#(a, b)}}} {arguments OVLAssertions::OVLDefaults#(Bit#(0))} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2808 8}}} {module OVLAssertions::v_assert_fifo_index {interface {{OVLAssertions::VAssertFifoTest_IFC#(_sn1, _sn0)}}} {arguments {OVLAssertions::OVLDefaults#(Bit#(0)) Integer Integer}} {position {%/Libraries/OVLAssertions.bsv 2830 8}}}

{function + {result Bit#(m)} {arguments {Bit#(k) Bit#(l)}} {provisos {{Add#(ld, l, m)} {Add#(kd, k, m)}}} {position {%/Libraries/FlexBitArith.bs 3 1 {Library FlexBitArith}}}} {function - {result Bit#(m)} {arguments {Bit#(k) Bit#(l)}} {provisos {{Add#(ld, l, m)} {Add#(kd, k, m)}}} {position {%/Libraries/FlexBitArith.bs 6 1 {Library FlexBitArith}}}}

{module SplitTRAM::splitBTRAM {interface {{Tuple2#(TRAM::TRAM#(tg, adr, dta), TRAM::TRAM#(tg', adr, dta))}}} {arguments {{TRAM::TRAM#(Either#(tg, tg'), adr, dta)}}} {provisos {{Bits#(dta, dtas)} {Bits#(tg', tgs')} {Bits#(tg, tgs)}}} {position {%/Libraries/SplitTRAM.bs 11 0 {Library SplitTRAM}}}} {module SplitTRAM::splitTRAM {interface {{Tuple2#(TRAM::TRAM#(tg, adr, dta), TRAM::TRAM#(tg', adr, dta))}}} {arguments {{TRAM::TRAM#(Either#(tg, tg'), adr, dta)}}} {position {%/Libraries/SplitTRAM.bs 53 0 {Library SplitTRAM}}}}

{function Gray::grayEncode {result Gray::Gray#(n)} {arguments Bit#(n)} {provisos {{Add#(1, msb, n)}}} {position {%/Libraries/Gray.bsv 44 19 {Library Gray}}}} {function Gray::grayDecode {result Bit#(n)} {arguments Gray::Gray#(n)} {provisos {{Add#(1, msb, n)}}} {position {%/Libraries/Gray.bsv 56 18 {Library Gray}}}} {function Gray::grayIncrDecr {result Gray::Gray#(n)} {arguments {Bool Gray::Gray#(n)}} {provisos {{Add#(1, msb, n)}}} {position {%/Libraries/Gray.bsv 68 19 {Library Gray}}}} {function Gray::grayIncr {result Gray::Gray#(n)} {arguments Gray::Gray#(n)} {provisos {{Add#(1, msb, n)}}} {position {%/Libraries/Gray.bsv 93 19 {Library Gray}}}} {function Gray::grayDecr {result Gray::Gray#(n)} {arguments Gray::Gray#(n)} {provisos {{Add#(1, msb, n)}}} {position {%/Libraries/Gray.bsv 97 19 {Library Gray}}}}

{function UnitAppendList::flatten0 {result List#(a)} {arguments {UnitAppendList::UAList#(a) List#(a)}} {position {%/Libraries/UnitAppendList.bsv 14 19 {Library UnitAppendList}}}} {function UnitAppendList::flatten {result List#(a)} {arguments UnitAppendList::UAList#(a)} {position {%/Libraries/UnitAppendList.bsv 22 19 {Library UnitAppendList}}}} {function UnitAppendList::uaMap {result UnitAppendList::UAList#(b)} {arguments {{function b f(a x1)} UnitAppendList::UAList#(a)}} {position {%/Libraries/UnitAppendList.bsv 25 21 {Library UnitAppendList}}}} {module UnitAppendList::uaMapM {interface UnitAppendList::UAList#(b)} {arguments {{function _m__#(b) f(a x1)} UnitAppendList::UAList#(a)}} {position {%/Libraries/UnitAppendList.bsv 40 8 {Library UnitAppendList}}}}


{module BypassReg::mkBypassReg {interface BypassReg::WReg#(a)} {arguments a} {provisos {{Bits#(a, asz)}}} {position {%/Libraries/BypassReg.bsv 18 8 {Library BypassReg}}}}

{module UniqueWrappers::mkUniqueWrapper {interface {{UniqueWrappers::Wrapper#(a, b)}}} {arguments {{function b f(a x1)}}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/UniqueWrappers.bsv 48 8 {Library UniqueWrappers}}}} {module UniqueWrappers::mkUniqueWrapper2 {interface {{UniqueWrappers::Wrapper2#(a1, a2, b)}}} {arguments {{function b f(a1 x1, a2 x2)}}} {provisos {{Bits#(b, sb)} {Bits#(a2, sa2)} {Bits#(a1, sa1)}}} {position {%/Libraries/UniqueWrappers.bsv 77 8 {Library UniqueWrappers}}}} {module UniqueWrappers::mkUniqueWrapper3 {interface {{UniqueWrappers::Wrapper3#(a1, a2, a3, b)}}} {arguments {{function b f(a1 x1, a2 x2, a3 x3)}}} {provisos {{Bits#(b, sb)} {Bits#(a3, sa3)} {Bits#(a2, sa2)} {Bits#(a1, sa1)}}} {position {%/Libraries/UniqueWrappers.bsv 96 8 {Library UniqueWrappers}}}}

{module FIFOLevel::mkFIFOLevel {interface {{FIFOLevel::FIFOLevelIfc#(a_type, fifoDepth)}}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 63 8 {Library FIFOLevel}}}} {module FIFOLevel::mkGFIFOLevel {interface {{FIFOLevel::FIFOLevelIfc#(a_type, fifoDepth)}}} {arguments {Bool Bool Bool}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 126 8 {Library FIFOLevel}}}} {module FIFOLevel::mkSyncFIFOLevel {interface {{FIFOLevel::SyncFIFOLevelIfc#(a_type, fifoDepth)}}} {arguments {Clock Reset Clock}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 254 8 {Library FIFOLevel}}}} {module FIFOLevel::mkFIFOCount {interface {{FIFOLevel::FIFOCountIfc#(a_type, fifoDepth)}}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 570 8 {Library FIFOLevel}}}} {module FIFOLevel::mkGFIFOCount {interface {{FIFOLevel::FIFOCountIfc#(a_type, fifoDepth)}}} {arguments {Bool Bool Bool}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 623 8 {Library FIFOLevel}}}} {module FIFOLevel::mkSyncFIFOCount {interface {{FIFOLevel::SyncFIFOCountIfc#(a_type, fifoDepth)}}} {arguments {Clock Reset Clock}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 718 8 {Library FIFOLevel}}}} {module FIFOLevel::mkGSyncFIFOCount {interface {{FIFOLevel::SyncFIFOCountIfc#(a_type, fifoDepth)}}} {arguments {Bool Bool Clock Reset Clock}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 779 8 {Library FIFOLevel}}}}

{module BRAM_Compat::mkBypassFIFOF_ {interface FIFOF::FIFOF#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BRAM_Compat.bsv 105 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBypassFIFOF2_ {interface FIFOF::FIFOF#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BRAM_Compat.bsv 157 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBypassFIFOF3_ {interface FIFOF::FIFOF#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BRAM_Compat.bsv 216 8 {Library BRAM_Compat}}}} {module BRAM_Compat::vBRAM2 {interface {{BRAM_Compat::BRAM_DUAL_PORT#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset}} {provisos {{Bits#(addr, addr_sz)} {Bits#(data, data_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 288 8 {Library BRAM_Compat}}}} {module BRAM_Compat::vBRAM2Load {interface {{BRAM_Compat::BRAM_DUAL_PORT#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String Integer}} {provisos {{Bits#(addr, addr_sz)} {Bits#(data, data_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 324 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAM2 {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 369 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAM {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 383 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAM2LoadEither {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String Integer}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 498 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAMLoadEither {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String Integer}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 512 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM2 {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments Bool} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 634 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM2LoadHex {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 647 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM2LoadBin {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 660 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAM2LoadHex {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 674 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAM2LoadBin {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 685 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM2Load {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 695 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAM2Load {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 706 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments Bool} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 716 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAMLoadHex {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 729 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAMLoadBin {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 742 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAMLoadHex {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 756 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAMLoadBin {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 767 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAMLoad {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 777 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAMLoad {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 788 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM0 {interface {{BRAM_Compat::BRAM_DUAL_PORT#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 798 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM20 {interface {{BRAM_Compat::BRAM_DUAL_PORT#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 808 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM0Load {interface {{BRAM_Compat::BRAM_DUAL_PORT#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String Integer}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 834 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM20Load {interface {{BRAM_Compat::BRAM_DUAL_PORT#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String Integer}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 844 8 {Library BRAM_Compat}}}} {module BRAM_Compat::vBRAM1 {interface {{BRAM_Compat::BRAM_PORT#(addr, data)}}} {arguments Bool} {provisos {{Bits#(addr, addr_sz)} {Bits#(data, data_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 881 8 {Library BRAM_Compat}}}} {module BRAM_Compat::vBRAM1Load {interface {{BRAM_Compat::BRAM_PORT#(addr, data)}}} {arguments {Bool String Integer}} {provisos {{Bits#(addr, addr_sz)} {Bits#(data, data_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 903 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1 {interface {{BRAM_Compat::BRAM1Port#(addr, data)}}} {arguments Bool} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 933 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1LoadEither {interface {{BRAM_Compat::BRAM1Port#(addr, data)}}} {arguments {Bool String Integer}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1001 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1LoadHex {interface {{BRAM_Compat::BRAM1Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1077 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1LoadBin {interface {{BRAM_Compat::BRAM1Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1087 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1Load {interface {{BRAM_Compat::BRAM1Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1097 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM10 {interface {{BRAM_Compat::BRAM_PORT#(addr, data)}}} {arguments Bool} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1107 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM10Load {interface {{BRAM_Compat::BRAM_PORT#(addr, data)}}} {arguments {Bool String Integer}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1123 8 {Library BRAM_Compat}}}} {module BRAM_Compat::vBRAM1BE {interface {{BRAM_Compat::BRAM_PORT_BE#(addr, data, _sn2)}}} {arguments Bool} {provisos {{Mul#(chunk_sz, _sn2, data_sz)} {Div#(data_sz, _sn2, chunk_sz)} {Bits#(addr, addr_sz)} {Bits#(data, data_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1147 8 {Library BRAM_Compat}}}} {module BRAM_Compat::vBRAM1BELoad {interface {{BRAM_Compat::BRAM_PORT_BE#(addr, data, _sn2)}}} {arguments {Bool String Integer}} {provisos {{Mul#(chunk_sz, _sn2, data_sz)} {Div#(data_sz, _sn2, chunk_sz)} {Bits#(addr, addr_sz)} {Bits#(data, data_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1178 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1BE {interface {{BRAM_Compat::BRAM1PortBE#(addr, data, n)}}} {arguments Bool} {provisos {Bounded#(addr) {Mul#(n, be_sz, data_sz)} {Div#(data_sz, n, be_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1216 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1BELoadEither {interface {{BRAM_Compat::BRAM1PortBE#(addr, data, n)}}} {arguments {Bool String Integer}} {provisos {Bounded#(addr) {Mul#(n, be_sz, data_sz)} {Div#(data_sz, n, be_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1286 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1BELoadHex {interface {{BRAM_Compat::BRAM1PortBE#(addr, data, n)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Mul#(n, be_sz, data_sz)} {Div#(data_sz, n, be_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1363 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1BELoadBin {interface {{BRAM_Compat::BRAM1PortBE#(addr, data, n)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Mul#(n, be_sz, data_sz)} {Div#(data_sz, n, be_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1375 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1BELoad {interface {{BRAM_Compat::BRAM1PortBE#(addr, data, n)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Mul#(n, be_sz, data_sz)} {Div#(data_sz, n, be_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1387 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM10BE {interface {{BRAM_Compat::BRAM_PORT_BE#(addr, data, n)}}} {arguments Bool} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1399 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM10BELoad {interface {{BRAM_Compat::BRAM_PORT_BE#(addr, data, n)}}} {arguments {Bool String Integer}} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1417 8 {Library BRAM_Compat}}}}

{function SVA::valueFunctionSVA {result a} {arguments {b {function a f(b x1, b x2)}}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/SVA.bsv 15 12 {Library SVA}}}} {function {$sampled} {result b} {arguments b} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/SVA.bsv 32 12 {Library SVA}}}} {function {$rose} {result Bool} {arguments b} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/SVA.bsv 38 15 {Library SVA}}}} {function {$fell} {result Bool} {arguments b} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/SVA.bsv 44 15 {Library SVA}}}} {function {$stable} {result Bool} {arguments b} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/SVA.bsv 50 15 {Library SVA}}}} {function {$onehot} {result Bool} {arguments b} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/SVA.bsv 55 15 {Library SVA}}}} {function {$onehot0} {result Bool} {arguments b} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/SVA.bsv 61 15 {Library SVA}}}} {function {$isunknown} {result Bool} {arguments b} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/SVA.bsv 66 15 {Library SVA}}}} {function {$countones} {result UInt#(lsb)} {arguments b} {provisos {{Add#(1, a, lsb)} {Log#(TAdd#(1, sb), lsb)} {Bits#(b, sb)}}} {position {%/Libraries/SVA.bsv 70 21 {Library SVA}}}} {module SVA::mkSeqVoid {interface SVA::Sequence} {position {%/Libraries/SVA.bsv 86 8 {Library SVA}}}} {module SVA::mkSeqTrue {interface SVA::Sequence} {position {%/Libraries/SVA.bsv 93 8 {Library SVA}}}} {module SVA::mkDoSeqExpr {interface SVA::Wrap1} {position {%/Libraries/SVA.bsv 113 8 {Library SVA}}}} {module SVA::mkSeqExpr {interface SVA::Sequence} {arguments Bool} {position {%/Libraries/SVA.bsv 119 8 {Library SVA}}}} {module SVA::mkSeqAsgn {interface SVA::Sequence} {arguments Action} {position {%/Libraries/SVA.bsv 131 8 {Library SVA}}}} {module SVA::mkDoSeqConcatA {interface SVA::Wrap2} {position {%/Libraries/SVA.bsv 161 8 {Library SVA}}}} {module SVA::mkDoSeqConcatB {interface SVA::Wrap2} {position {%/Libraries/SVA.bsv 187 8 {Library SVA}}}} {module SVA::mkSeqConcat {interface SVA::Sequence} {arguments {_m__#(SVA::Sequence) _m__#(SVA::Sequence)}} {position {%/Libraries/SVA.bsv 199 8 {Library SVA}}}} {module SVA::mkDoSeqFuseA {interface SVA::Wrap2} {position {%/Libraries/SVA.bsv 242 8 {Library SVA}}}} {module SVA::mkSeqFuse {interface SVA::Sequence} {arguments {_m__#(SVA::Sequence) _m__#(SVA::Sequence)}} {position {%/Libraries/SVA.bsv 254 8 {Library SVA}}}} {module SVA::mkSeqRunning {interface SVA::Wrap3} {position {%/Libraries/SVA.bsv 309 8 {Library SVA}}}} {module SVA::mkDoSeqOrRes {interface SVA::Wrap4} {position {%/Libraries/SVA.bsv 344 8 {Library SVA}}}} {module SVA::mkSeqOr {interface SVA::Sequence} {arguments {_m__#(SVA::Sequence) _m__#(SVA::Sequence)}} {position {%/Libraries/SVA.bsv 360 8 {Library SVA}}}} {module SVA::mkDoSeqIntersectRes {interface SVA::Wrap5} {position {%/Libraries/SVA.bsv 419 8 {Library SVA}}}} {module SVA::mkSeqIntersect {interface SVA::Sequence} {arguments {_m__#(SVA::Sequence) _m__#(SVA::Sequence)}} {position {%/Libraries/SVA.bsv 433 8 {Library SVA}}}} {module SVA::mkDoSeqFirstMatch {interface SVA::Wrap6} {position {%/Libraries/SVA.bsv 491 8 {Library SVA}}}} {module SVA::mkSeqFirstMatch {interface SVA::Sequence} {arguments _m__#(SVA::Sequence)} {position {%/Libraries/SVA.bsv 503 8 {Library SVA}}}} {module SVA::mkSeqNull {interface SVA::Sequence} {position {%/Libraries/SVA.bsv 521 8 {Library SVA}}}} {module SVA::mkDoSeqUnbound {interface SVA::Wrap7} {position {%/Libraries/SVA.bsv 550 8 {Library SVA}}}} {module SVA::mkSeqUnbound {interface SVA::Sequence} {arguments _m__#(SVA::Sequence)} {position {%/Libraries/SVA.bsv 565 8 {Library SVA}}}} {module SVA::mkSeqRepConst {interface SVA::Sequence} {arguments {_m__#(SVA::Sequence) Integer}} {position {%/Libraries/SVA.bsv 590 8 {Library SVA}}}} {module SVA::mkSeqRepRange {interface SVA::Sequence} {arguments {_m__#(SVA::Sequence) Integer Integer}} {position {%/Libraries/SVA.bsv 612 8 {Library SVA}}}} {module SVA::mkDoSeqDelayUnbound {interface SVA::Wrap7} {position {%/Libraries/SVA.bsv 638 8 {Library SVA}}}} {module SVA::mkSeqDelayConst {interface SVA::Sequence} {arguments {_m__#(SVA::Sequence) Integer}} {position {%/Libraries/SVA.bsv 680 8 {Library SVA}}}} {module SVA::mkSeqDelayRange {interface SVA::Sequence} {arguments {_m__#(SVA::Sequence) Integer Integer}} {position {%/Libraries/SVA.bsv 702 8 {Library SVA}}}} {module SVA::mkPropSeq {interface SVA::Property} {arguments _m__#(SVA::Sequence)} {position {%/Libraries/SVA.bsv 741 8 {Library SVA}}}} {module SVA::mkPropNot {interface SVA::Property} {arguments SVA::Property} {position {%/Libraries/SVA.bsv 757 8 {Library SVA}}}} {module SVA::mkPropOr {interface SVA::Property} {arguments {SVA::Property SVA::Property}} {position {%/Libraries/SVA.bsv 772 8 {Library SVA}}}} {module SVA::mkPropAnd {interface SVA::Property} {arguments {SVA::Property SVA::Property}} {position {%/Libraries/SVA.bsv 790 8 {Library SVA}}}} {function SVA::readReg {result Bool} {arguments Reg#(Bool)} {position {%/Libraries/SVA.bsv 809 15 {Library SVA}}}} {function SVA::getFreeP {result List#(Bool)} {arguments List#(Bool)} {position {%/Libraries/SVA.bsv 814 22 {Library SVA}}}} {function SVA::runPs {result ActionValue#(List#(Maybe#(SVA::PropRes)))} {arguments {List#(SVA::Property) List#(Bool)}} {position {%/Libraries/SVA.bsv 823 47 {Library SVA}}}} {function SVA::unRun {result Bool} {arguments Maybe#(SVA::PropRes)} {position {%/Libraries/SVA.bsv 844 15 {Library SVA}}}} {function SVA::getRes {result SVA::PropRes} {arguments {List#(Maybe#(SVA::PropRes)) SVA::PropRes}} {position {%/Libraries/SVA.bsv 853 18 {Library SVA}}}} {function SVA::assignRegs {result Action} {arguments {List#(Reg#(Bool)) List#(Bool)}} {position {%/Libraries/SVA.bsv 866 17 {Library SVA}}}} {module SVA::mkPropImplies {interface SVA::Property} {arguments {_m__#(SVA::Sequence) List#(SVA::Property)}} {position {%/Libraries/SVA.bsv 878 8 {Library SVA}}}} {module SVA::mkAssert {interface SVA::Assertion} {arguments {SVA::Property Action Action}} {position {%/Libraries/SVA.bsv 910 8 {Library SVA}}}} {module SVA::mkAssertAlways {interface SVA::Assertion} {arguments {List#(SVA::Property) Action Action}} {position {%/Libraries/SVA.bsv 951 8 {Library SVA}}}}



{module Randomizable::vmkGenericRandomizer {interface Randomizable::VRandomize#(_sn0)} {arguments {Bit#(_sn0) Bit#(_sn0) Integer}} {position {%/Libraries/Randomizable.bsv 27 8 {Library Randomizable}}}} {module Randomizable::mkGenericRandomizer {interface Randomizable::Randomize#(a)} {provisos {Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/Randomizable.bsv 38 8 {Library Randomizable}}}} {module Randomizable::mkConstrainedRandomizer {interface Randomizable::Randomize#(a)} {arguments {a a}} {provisos {Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/Randomizable.bsv 50 8 {Library Randomizable}}}} {function Randomizable::rand32 {result ActionValue#(Bit#(32))} {position {%/Libraries/Randomizable.bsv 112 47 {Library Randomizable}}}} {function Randomizable::srand {result Action} {arguments Bit#(32)} {position {%/Libraries/Randomizable.bsv 113 31 {Library Randomizable}}}} {module Randomizable::cmkGenericRandomizer {interface Randomizable::VRandomize#(n)} {arguments {Bit#(n) Bit#(n)}} {provisos {{Add#(n, 32, j)}}} {position {%/Libraries/Randomizable.bsv 115 8 {Library Randomizable}}}} {function Randomizable::randomizeToGet {result GetPut::Get#(a)} {arguments Randomizable::Randomize#(a)} {position {%/Libraries/Randomizable.bsv 149 18 {Library Randomizable}}}} {module Randomizable::mkSpecialRandomizer {interface Randomizable::Randomize#(a)} {arguments {{function a f(a x1)}}} {provisos Randomizable::Randomizable#(a)} {position {%/Libraries/Randomizable.bsv 159 8 {Library Randomizable}}}}

{module GrayCounter::mkGrayCounter {interface GrayCounter::GrayCounter#(n)} {arguments {Gray::Gray#(n) Clock Reset}} {provisos {{Add#(1, msb, n)}}} {position {%/Libraries/GrayCounter.bsv 38 8 {Library GrayCounter}}}}

{function UIntRange::primRange {result Bit#(n)} {arguments {Bit#(n) Bit#(n) Bit#(n)}} {position {%/Libraries/UIntRange.bs 27 10 {Library UIntRange}}}} {function UIntRange::incr {result {{UIntRange::UIntRange#(lo, hi)}}} {arguments {{UIntRange::UIntRange#(lo, hi)}}} {position {%/Libraries/UIntRange.bs 66 0 {Library UIntRange}}}} {function UIntRange::decr {result {{UIntRange::UIntRange#(lo, hi)}}} {arguments {{UIntRange::UIntRange#(lo, hi)}}} {position {%/Libraries/UIntRange.bs 80 0 {Library UIntRange}}}}

{function NumberTypes::wrap {result NumberTypes::WrapNumber#(sz)} {arguments UInt#(sz)} {position {%/Libraries/NumberTypes.bsv 29 26 {Library NumberTypes}}}} {function NumberTypes::unwrap {result UInt#(sz)} {arguments NumberTypes::WrapNumber#(sz)} {position {%/Libraries/NumberTypes.bsv 31 20 {Library NumberTypes}}}} {function NumberTypes::addUInt {result NumberTypes::WrapNumber#(n)} {arguments {NumberTypes::WrapNumber#(n) UInt#(n)}} {position {%/Libraries/NumberTypes.bsv 33 25 {Library NumberTypes}}}} {function NumberTypes::unwrapBI {result UInt#(n)} {arguments {{NumberTypes::BuffIndex#(n, m)}}} {position {%/Libraries/NumberTypes.bsv 110 19 {Library NumberTypes}}}} {function NumberTypes::addBIUInt {result {{NumberTypes::BuffIndex#(n, m)}}} {arguments {{NumberTypes::BuffIndex#(n, m)} UInt#(n)}} {provisos {{Add#(TLog#(m), _v100, n)}}} {position {%/Libraries/NumberTypes.bsv 112 26 {Library NumberTypes}}}} {function NumberTypes::sbtrctBIUInt {result {{NumberTypes::BuffIndex#(n, m)}}} {arguments {{NumberTypes::BuffIndex#(n, m)} UInt#(n)}} {provisos {{Add#(TLog#(m), _v100, n)}}} {position {%/Libraries/NumberTypes.bsv 118 26 {Library NumberTypes}}}}

{module TriState::mkTriState {interface TriState::TriState#(t)} {arguments {Bool t}} {provisos {{Bits#(t, st)}}} {position {%/Libraries/TriState.bsv 28 8 {Library TriState}}}} {module TriState::vMkTriState {interface TriState::TriState#(t)} {arguments {Bool t}} {provisos {{Bits#(t, st)}}} {position {%/Libraries/TriState.bsv 37 8 {Library TriState}}}}

{function RPush::apply {result RPush::RPush#(a)} {arguments {{function b f(a x1)} RPush::RPush#(b)}} {position {%/Libraries/RPush.bs 37 0 {Library RPush}}}} {function RPush::tee {result RPush::RPush#(a)} {arguments {{function Action f(a x1)} RPush::RPush#(a)}} {position {%/Libraries/RPush.bs 45 0 {Library RPush}}}} {module RPush::pass {interface RPush::RPush#(a)} {arguments RPush::RPush#(a)} {position {%/Libraries/RPush.bs 52 0 {Library RPush}}}} {module RPush::passed {interface RPush::RPush#(a)} {arguments {{function b f(a x1)} RPush::RPush#(b)}} {position {%/Libraries/RPush.bs 64 0 {Library RPush}}}} {module RPush::buffer {interface RPush::RPush#(a)} {arguments RPush::RPush#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/RPush.bs 73 0 {Library RPush}}}} {module RPush::buffered {interface RPush::RPush#(a)} {arguments {{function b f(a x1)} RPush::RPush#(b)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/RPush.bs 90 0 {Library RPush}}}} {module RPush::sink {interface RPush::RPush#(a)} {position {%/Libraries/RPush.bs 97 0 {Library RPush}}}} {module RPush::spew {interface Empty} {arguments RPush::RPush#(a)} {position {%/Libraries/RPush.bs 108 0 {Library RPush}}}} {function » {result m#(b)} {arguments {{function m#(b) f(a x1)} m#(a)}} {provisos Monad#(m)} {position {%/Libraries/RPush.bs 118 1 {Library RPush}}}} {function RPush::pipe {result m#(b)} {arguments {{function m#(b) f(a x1)} m#(a)}} {provisos Monad#(m)} {position {%/Libraries/RPush.bs 121 0 {Library RPush}}}} {function RPush::fifoToRPush {result RPush::RPush#(a)} {arguments FIFO::FIFO#(a)} {position {%/Libraries/RPush.bs 128 0 {Library RPush}}}}

{function HList::hNil {result HList::HNil} {position {%/Libraries/HList.bsv 4 6 {Library HList}}}} {function HList::hCons {result {{HList::HCons#(e, l)}}} {arguments {e l}} {position {%/Libraries/HList.bsv 11 22 {Library HList}}}} {function HList::hLength {result Integer} {arguments hL} {provisos {{HList::HLength#(hL, n)}}} {position {%/Libraries/HList.bsv 51 18 {Library HList}}}} {function HList::hList1 {result HList::HList1#(t1)} {arguments t1} {position {%/Libraries/HList.bsv 148 34 {Library HList}}}} {function HList::hList2 {result {{HList::HList2#(t1, t2)}}} {arguments {t1 t2}} {position {%/Libraries/HList.bsv 149 34 {Library HList}}}} {function HList::hList3 {result {{HList::HList3#(t1, t2, t3)}}} {arguments {t1 t2 t3}} {position {%/Libraries/HList.bsv 150 34 {Library HList}}}} {function HList::hList4 {result {{HList::HList4#(t1, t2, t3, t4)}}} {arguments {t1 t2 t3 t4}} {position {%/Libraries/HList.bsv 151 34 {Library HList}}}} {function HList::hList5 {result {{HList::HList5#(t1, t2, t3, t4, t5)}}} {arguments {t1 t2 t3 t4 t5}} {position {%/Libraries/HList.bsv 155 4 {Library HList}}}} {function HList::hList6 {result {{HList::HList6#(t1, t2, t3, t4, t5, t6)}}} {arguments {t1 t2 t3 t4 t5 t6}} {position {%/Libraries/HList.bsv 159 4 {Library HList}}}} {function HList::hList7 {result {{HList::HList7#(t1, t2, t3, t4, t5, t6, t7)}}} {arguments {t1 t2 t3 t4 t5 t6 t7}} {position {%/Libraries/HList.bsv 163 4 {Library HList}}}} {function HList::hList8 {result {{HList::HList8#(t1, t2, t3, t4, t5, t6, t7, t8)}}} {arguments {t1 t2 t3 t4 t5 t6 t7 t8}} {position {%/Libraries/HList.bsv 167 4 {Library HList}}}}

{module MIMO::mkMIMOBram {interface {{MIMO::MIMO#(max_in, max_out, size, t)}}} {arguments MIMO::MIMOConfiguration} {provisos {{Add#(__e, max_out, max)} {Add#(em1, 1, e)} {Div#(size, max, em1)} {Max#(max_in, max_out, max)} {Add#(__d, outtot, total)} {Mul#(st, max_out, outtot)} {Mul#(st, max_in, intot)} {Mul#(st, size, total)} {Add#(__c, max_out, size)} {Add#(__b, max_in, size)} {Add#(2, __a, size)} {Add#(__f, 1, st)} {Bits#(t, st)}}} {position {%/Libraries/MIMO.bsv 82 8 {Library MIMO}}}} {module MIMO::mkMIMOReg {interface {{MIMO::MIMO#(max_in, max_out, size, t)}}} {arguments MIMO::MIMOConfiguration} {provisos {{Add#(__d, outtot, total)} {Mul#(st, max_out, outtot)} {Mul#(st, max_in, intot)} {Mul#(st, size, total)} {Add#(__c, max_out, size)} {Add#(__b, max_in, size)} {Add#(2, __a, size)} {Bits#(t, st)}}} {position {%/Libraries/MIMO.bsv 281 8 {Library MIMO}}}} {module MIMO::mkMIMO {interface {{MIMO::MIMO#(max_in, max_out, size, t)}}} {arguments MIMO::MIMOConfiguration} {provisos {{Add#(__d, outtot, total)} {Mul#(st, max_out, outtot)} {Mul#(st, max_in, intot)} {Mul#(st, size, total)} {Add#(__c, max_out, size)} {Add#(__b, max_in, size)} {Add#(2, __a, size)} {Add#(1, __e, st)} {Bits#(t, st)}}} {position {%/Libraries/MIMO.bsv 408 8 {Library MIMO}}}} {module MIMO::mkMIMOV {interface {{MIMO::MIMO#(max_in, max_out, size, t)}}} {provisos {{Add#(__c, max_out, size)} {Add#(__b, max_in, size)} {Add#(2, __a, size)} DefaultValue#(t) {Bits#(t, st)}}} {position {%/Libraries/MIMO.bsv 441 8 {Library MIMO}}}}


{function CompletionBuffer::isPowerOf2 {result Bool} {arguments Integer} {position {%/Libraries/CompletionBuffer.bsv 37 15 {Library CompletionBuffer}}}} {module CompletionBuffer::mkCompletionBuffer {interface {{CompletionBuffer::CompletionBuffer#(n, a)}}} {provisos {{Add#(1, ln, ln1)} {Log#(n, ln)} {Bits#(a, sa)}}} {position {%/Libraries/CompletionBuffer.bsv 43 8 {Library CompletionBuffer}}}}

{module NullCrossingFIFOF::mkCtoUNullCrossingFIFOF {interface NullCrossingFIFOF::CrossingFIFOF#(a)} {arguments {Clock Reset Clock Reset}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/NullCrossingFIFOF.bsv 13 8 {Library NullCrossingFIFOF}}}} {module NullCrossingFIFOF::mkUtoCNullCrossingFIFOF {interface NullCrossingFIFOF::CrossingFIFOF#(a)} {arguments {Clock Reset Clock Reset}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/NullCrossingFIFOF.bsv 55 8 {Library NullCrossingFIFOF}}}} {module NullCrossingFIFOF::mkUtoCNullCrossingReg {interface NullCrossingFIFOF::SceMiCrossingReg#(a)} {arguments {Clock Reset Clock Reset}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/NullCrossingFIFOF.bsv 131 8 {Library NullCrossingFIFOF}}}}

{function ModuleContextCore::getCompleteContext {result {{ModuleContextCore::ModuleContext#(c, c)}}} {position {%/Libraries/ModuleContextCore.bs 16 0 {Library ModuleContextCore}}}} {function ModuleContextCore::putCompleteContext {result {{ModuleContextCore::ModuleContext#(c, void)}}} {arguments c} {position {%/Libraries/ModuleContextCore.bs 19 0 {Library ModuleContextCore}}}} {function ModuleContextCore::runWithCompleteContext {result {{Module#(Tuple2#(c, i))}}} {arguments {c {ModuleContextCore::ModuleContext#(c, i)}}} {position {%/Libraries/ModuleContextCore.bs 22 0 {Library ModuleContextCore}}}} {module ModuleContext::applyToContext {interface Empty} {arguments {{function c2 f(c2 x1)}}} {provisos {{ModuleContext::Context#(mc1, c2)}}} {position {%/Libraries/ModuleContext.bsv 50 14 {Library ModuleContext}}}} {module ModuleContext::applyToContextM {interface Empty} {arguments {{function mc1#(c2) f(c2 x1)}}} {provisos {{ModuleContext::Context#(mc1, c2)}}} {position {%/Libraries/ModuleContext.bsv 57 14 {Library ModuleContext}}}} {function ModuleContext::initClockContext {result ModuleContext::ClockContextP#(n)} {position {%/Libraries/ModuleContext.bsv 72 19 {Library ModuleContext}}}} {module ModuleContext::mkInitialClockContextWithClocks {interface ModuleContext::ClockContext} {arguments {{Vector::Vector#(ModuleContext::CLOCKCONTEXTSIZE, Clock)} {Vector::Vector#(ModuleContext::CLOCKCONTEXTSIZE, Reset)}}} {position {%/Libraries/ModuleContext.bsv 79 8 {Library ModuleContext}}}} {function ModuleContext::unbury {result {{Module#(Tuple2#(ifc, ifcType))}}} {arguments {c1 {ModuleContextCore::ModuleContext#(c1, ifcType)}}} {provisos {{ModuleContext::Expose#(c1, ifc, n)}}} {position {%/Libraries/ModuleContext.bsv 232 17 {Library ModuleContext}}}} {function ModuleContext::unburyWithClocks {result {{Module#(Tuple2#(ifc, ifcType))}}} {arguments {c1 {ModuleContextCore::ModuleContext#(c1, ifcType)}}} {provisos {{HList::Gettable#(c1, ModuleContext::ClockContextP#(n))} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(c1), ModuleContext::ClockContextP#(n))} {ModuleContext::Expose#(c1, ifc, n)}}} {position {%/Libraries/ModuleContext.bsv 244 17 {Library ModuleContext}}}} {module ModuleContext::rebury {interface ifcType} {arguments {{Module#(Tuple2#(ifc, ifcType))}}} {provisos {{ModuleContext::Hide#(c1, ifc)}}} {position {%/Libraries/ModuleContext.bsv 257 13 {Library ModuleContext}}}} {module ModuleContext::reburyWithClocks {interface ifcType} {arguments {{module f#(Vector::Vector#(n, Clock) x1, Vector::Vector#(n, Reset) x2)(Tuple2#(ifc, ifcType))}}} {provisos {{ModuleContext::Context#(c1, ModuleContext::ClockContextP#(n))} {ModuleContext::Hide#(c1, ifc)}}} {position {%/Libraries/ModuleContext.bsv 264 13 {Library ModuleContext}}}} {module ModuleCollect::addToCollection {interface Empty} {arguments a} {provisos {{ModuleContext::Context#(mc, UnitAppendList::UAList#(a))}}} {position {%/Libraries/ModuleCollect.bsv 16 13 {Library ModuleCollect}}}} {module ModuleCollect::mapCollection {interface i} {arguments {{function a f(a x1)} mc#(i)}} {provisos {{ModuleContext::Context#(mc, UnitAppendList::UAList#(a))}}} {position {%/Libraries/ModuleCollect.bsv 22 13 {Library ModuleCollect}}}} {function ModuleCollect::getCollection {result {{Module#(Tuple2#(i, List#(a)))}}} {arguments {{ModuleCollect::ModuleCollect#(a, i)}}} {position {%/Libraries/ModuleCollect.bsv 31 17 {Library ModuleCollect}}}} {function ModuleCollect::exposeCollection {result {{Module#(ModuleCollect::IWithCollection#(a, i))}}} {arguments {{ModuleCollect::ModuleCollect#(a, i)}}} {position {%/Libraries/ModuleCollect.bsv 41 17 {Library ModuleCollect}}}}

{function Boolify::eqByBit {result Bool} {arguments {Bit#(n) Bit#(n)}} {position {%/Libraries/Boolify.bs 52 0 {Library Boolify}}}}

{module Cntrs::mkCount {interface Cntrs::Count#(t)} {arguments t} {provisos {{Bits#(t, st)} Cntrs::ModArith#(t) Arith#(t)}} {position {%/Libraries/Cntrs.bsv 23 8 {Library Cntrs}}}} {module Cntrs::vCount0 {interface Cntrs::VCount#(t)} {provisos {{Bits#(t, st)} Literal#(t) Cntrs::ModArith#(t)}} {position {%/Libraries/Cntrs.bsv 51 8 {Library Cntrs}}}} {module Cntrs::vCount {interface Cntrs::VCount#(t)} {arguments t} {provisos {Cntrs::ModArith#(t) {Bits#(t, st)}}} {position {%/Libraries/Cntrs.bsv 63 8 {Library Cntrs}}}} {module Cntrs::mkUC {interface Cntrs::UCount} {arguments Cntrs::Count#(UInt#(s))} {position {%/Libraries/Cntrs.bsv 120 8 {Library Cntrs}}}} {module Cntrs::mkUCount {interface Cntrs::UCount} {arguments {Integer Integer}} {position {%/Libraries/Cntrs.bsv 133 8 {Library Cntrs}}}}

{module LFSR::mkPolyLFSR {interface LFSR::LFSR#(Bit#(n))} {arguments List#(Integer)} {position {%/Libraries/LFSR.bs 40 0 {Library LFSR}}}} {module LFSR::mkFeedLFSR {interface LFSR::LFSR#(Bit#(n))} {arguments Bit#(n)} {position {%/Libraries/LFSR.bs 50 0 {Library LFSR}}}} {module LFSR::mkLFSR_4 {interface LFSR::LFSR#(Bit#(4))} {position {%/Libraries/LFSR.bs 75 0 {Library LFSR}}}} {module LFSR::mkLFSR_8 {interface LFSR::LFSR#(Bit#(8))} {position {%/Libraries/LFSR.bs 77 0 {Library LFSR}}}} {module LFSR::mkLFSR_16 {interface LFSR::LFSR#(Bit#(16))} {position {%/Libraries/LFSR.bs 79 0 {Library LFSR}}}} {module LFSR::mkLFSR_32 {interface LFSR::LFSR#(Bit#(32))} {position {%/Libraries/LFSR.bs 81 0 {Library LFSR}}}} {module LFSR::mkRCounter {interface LFSR::LFSR#(Bit#(n))} {arguments Bit#(n)} {position {%/Libraries/LFSR.bs 91 0 {Library LFSR}}}}

{module FoldFIFO::mkFoldFIFO {interface FoldFIFO::FoldFIFO#(a)} {provisos {{Bits#(a, k)}}} {position {%/Libraries/FoldFIFO.bs 17 0 {Library FoldFIFO}}}}

{module Probe::mkProbe {interface Probe::Probe#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Probe.bsv 38 8 {Library Probe}}}} {module Probe::vMkProbe {interface Probe::Probe#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Probe.bsv 48 11 {Library Probe}}}}

{module ModuleContext::applyToContext {interface Empty} {arguments {{function c2 f(c2 x1)}}} {provisos {{ModuleContext::Context#(mc1, c2)}}} {position {%/Libraries/ModuleContext.bsv 50 14 {Library ModuleContext}}}} {module ModuleContext::applyToContextM {interface Empty} {arguments {{function mc1#(c2) f(c2 x1)}}} {provisos {{ModuleContext::Context#(mc1, c2)}}} {position {%/Libraries/ModuleContext.bsv 57 14 {Library ModuleContext}}}} {function ModuleContext::initClockContext {result ModuleContext::ClockContextP#(n)} {position {%/Libraries/ModuleContext.bsv 72 19 {Library ModuleContext}}}} {module ModuleContext::mkInitialClockContextWithClocks {interface ModuleContext::ClockContext} {arguments {{Vector::Vector#(ModuleContext::CLOCKCONTEXTSIZE, Clock)} {Vector::Vector#(ModuleContext::CLOCKCONTEXTSIZE, Reset)}}} {position {%/Libraries/ModuleContext.bsv 79 8 {Library ModuleContext}}}} {function ModuleContext::unbury {result {{Module#(Tuple2#(ifc, ifcType))}}} {arguments {c1 {ModuleContextCore::ModuleContext#(c1, ifcType)}}} {provisos {{ModuleContext::Expose#(c1, ifc, n)}}} {position {%/Libraries/ModuleContext.bsv 232 17 {Library ModuleContext}}}} {function ModuleContext::unburyWithClocks {result {{Module#(Tuple2#(ifc, ifcType))}}} {arguments {c1 {ModuleContextCore::ModuleContext#(c1, ifcType)}}} {provisos {{HList::Gettable#(c1, ModuleContext::ClockContextP#(n))} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(c1), ModuleContext::ClockContextP#(n))} {ModuleContext::Expose#(c1, ifc, n)}}} {position {%/Libraries/ModuleContext.bsv 244 17 {Library ModuleContext}}}} {module ModuleContext::rebury {interface ifcType} {arguments {{Module#(Tuple2#(ifc, ifcType))}}} {provisos {{ModuleContext::Hide#(c1, ifc)}}} {position {%/Libraries/ModuleContext.bsv 257 13 {Library ModuleContext}}}} {module ModuleContext::reburyWithClocks {interface ifcType} {arguments {{module f#(Vector::Vector#(n, Clock) x1, Vector::Vector#(n, Reset) x2)(Tuple2#(ifc, ifcType))}}} {provisos {{ModuleContext::Context#(c1, ModuleContext::ClockContextP#(n))} {ModuleContext::Hide#(c1, ifc)}}} {position {%/Libraries/ModuleContext.bsv 264 13 {Library ModuleContext}}}} {function ModuleContextCore::getCompleteContext {result {{ModuleContextCore::ModuleContext#(c, c)}}} {position {%/Libraries/ModuleContextCore.bs 16 0 {Library ModuleContextCore}}}} {function ModuleContextCore::putCompleteContext {result {{ModuleContextCore::ModuleContext#(c, void)}}} {arguments c} {position {%/Libraries/ModuleContextCore.bs 19 0 {Library ModuleContextCore}}}} {function ModuleContextCore::runWithCompleteContext {result {{Module#(Tuple2#(c, i))}}} {arguments {c {ModuleContextCore::ModuleContext#(c, i)}}} {position {%/Libraries/ModuleContextCore.bs 22 0 {Library ModuleContextCore}}}}

{function OInt::toOInt {result OInt::OInt#(n)} {arguments Bit#(k)} {provisos {{Log#(n, k)}}} {position {%/Libraries/OInt.bs 87 0 {Library OInt}}}} {function OInt::fromOInt {result Bit#(k)} {arguments OInt::OInt#(n)} {provisos {{Log#(n, k)}}} {position {%/Libraries/OInt.bs 95 0 {Library OInt}}}} {function OInt::select {result a} {arguments {{Vector::Vector#(n, a)} OInt::OInt#(n)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OInt.bs 104 0 {Library OInt}}}} {function OInt::or {result Bool} {arguments {{Vector::Vector#(n, Bool)}}} {position {%/Libraries/OInt.bs 112 0 {Library OInt}}}}

{module Mcp::mcpBuffered {interface Pull::Pull#(b)} {arguments {Integer {function b f(a x1)} Pull::Pull#(a)}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/Mcp.bs 12 0 {Library Mcp}}}} {module Mcp::mcpUnit {interface Reg#(b)} {arguments {Integer {function b f(a x1)} a Bool}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/Mcp.bs 17 0 {Library Mcp}}}} {module Mcp::mcpUnitF {interface Mcp::IMcpUnitF#(b)} {arguments {Integer {function b f(a x1)} a Bool}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/Mcp.bs 22 0 {Library Mcp}}}} {function Mcp::delay2 {result Integer} {position {%/Libraries/Mcp.bs 29 0 {Library Mcp}}}} {function Mcp::delay3 {result Integer} {position {%/Libraries/Mcp.bs 31 0 {Library Mcp}}}} {function Mcp::delay4 {result Integer} {position {%/Libraries/Mcp.bs 33 0 {Library Mcp}}}} {module Mcp::mcp2_buffer {interface Pull::Pull#(a)} {arguments {a Pull::Pull#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Mcp.bs 38 0 {Library Mcp}}}} {module Mcp::mcp2_buffered {interface Pull::Pull#(b)} {arguments {{function b f(a x1)} Pull::Pull#(a)}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/Mcp.bs 55 0 {Library Mcp}}}} {module Mcp::mcp3_buffer {interface Pull::Pull#(a)} {arguments {a Pull::Pull#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Mcp.bs 60 0 {Library Mcp}}}} {module Mcp::mcp3_buffered {interface Pull::Pull#(b)} {arguments {{function b f(a x1)} Pull::Pull#(a)}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/Mcp.bs 82 0 {Library Mcp}}}} {module Mcp::mcp4_buffer {interface Pull::Pull#(a)} {arguments {a Pull::Pull#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Mcp.bs 86 0 {Library Mcp}}}} {module Mcp::mcp4_buffered {interface Pull::Pull#(b)} {arguments {{function b f(a x1)} Pull::Pull#(a)}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/Mcp.bs 108 0 {Library Mcp}}}} {module Mcp::mcp2_unit {interface Reg#(b)} {arguments {{function b f(a x1)} a Bool}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/Mcp.bs 113 0 {Library Mcp}}}} {module Mcp::mcp3_unit {interface Reg#(b)} {arguments {{function b f(a x1)} a Bool}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/Mcp.bs 156 0 {Library Mcp}}}} {module Mcp::mcp4_unit {interface Reg#(b)} {arguments {{function b f(a x1)} a Bool}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/Mcp.bs 203 0 {Library Mcp}}}} {module Mcp::mcp2_unitF {interface Mcp::IMcpUnitF#(b)} {arguments {{function b f(a x1)} a Bool}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/Mcp.bs 252 0 {Library Mcp}}}} {module Mcp::mcp3_unitF {interface Mcp::IMcpUnitF#(b)} {arguments {{function b f(a x1)} a Bool}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/Mcp.bs 295 0 {Library Mcp}}}} {module Mcp::mcp4_unitF {interface Mcp::IMcpUnitF#(b)} {arguments {{function b f(a x1)} a Bool}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/Mcp.bs 342 0 {Library Mcp}}}} {module Mcp::mkMcpRegU {interface Reg#(a)} {arguments Integer} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Mcp.bs 390 0 {Library Mcp}}}} {function Mcp::vMkMcpRegU {result Module#(Mcp::VReg#(n))} {arguments Integer} {position {%/Libraries/Mcp.bs 415 0 {Library Mcp}}}}

{function PopCount::popCountNaive {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(a, 1, m)}}} {position {%/Libraries/PopCount.bs 22 0 {Library PopCount}}}} {function PopCount::zExt1 {result Bit#(m)} {arguments Bit#(1)} {provisos {{Add#(m1, 1, m)}}} {position {%/Libraries/PopCount.bs 25 0 {Library PopCount}}}} {function PopCount::popCountTable {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(a, 1, m)}}} {position {%/Libraries/PopCount.bs 34 0 {Library PopCount}}}} {function PopCount::popCountTree {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(a, 1, m)} {Add#(1, b, n)}}} {position {%/Libraries/PopCount.bs 43 0 {Library PopCount}}}} {function PopCount::popCountWallace {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(1, a, m)}}} {position {%/Libraries/PopCount.bs 52 0 {Library PopCount}}}} {function PopCount::start {result {{Vector::Vector#(n, List#(Bit#(1)))}}} {arguments List#(Bit#(1))} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/PopCount.bs 55 0 {Library PopCount}}}} {function PopCount::popCountTableWallace {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(4, k, m)}}} {position {%/Libraries/PopCount.bs 69 0 {Library PopCount}}}} {function PopCount::popCountTableTree {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(a, 4, m)}}} {position {%/Libraries/PopCount.bs 77 0 {Library PopCount}}}} {function PopCount::popCK {result Bit#(PopCount::LogK)} {arguments Bit#(PopCount::K)} {position {%/Libraries/PopCount.bs 81 0 {Library PopCount}}}} {function PopCount::splitInKs {result List#(Bit#(k))} {arguments {Nat Bit#(n)}} {position {%/Libraries/PopCount.bs 84 0 {Library PopCount}}}}

{function Push::apply {result Push::Push#(a)} {arguments {{function b f(a x1)} Push::Push#(b)}} {position {%/Libraries/Push.bs 33 0 {Library Push}}}} {function Push::tee {result Push::Push#(a)} {arguments {{function Action f(a x1)} Push::Push#(a)}} {position {%/Libraries/Push.bs 40 0 {Library Push}}}} {module Push::pass {interface Push::Push#(a)} {arguments Push::Push#(a)} {position {%/Libraries/Push.bs 47 0 {Library Push}}}} {module Push::passed {interface Push::Push#(a)} {arguments {{function b f(a x1)} Push::Push#(b)}} {position {%/Libraries/Push.bs 58 0 {Library Push}}}} {module Push::buffer {interface Push::Push#(a)} {arguments {a Push::Push#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Push.bs 67 0 {Library Push}}}} {module Push::qbuffer {interface Push::Push#(a)} {arguments Push::Push#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Push.bs 81 0 {Library Push}}}} {module Push::q1buffer {interface Push::Push#(a)} {arguments Push::Push#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Push.bs 99 0 {Library Push}}}} {module Push::buffered {interface Push::Push#(a)} {arguments {{function b f(a x1)} Push::Push#(b)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Push.bs 116 0 {Library Push}}}} {module Push::q1buffered {interface Push::Push#(a)} {arguments {{function b f(a x1)} Push::Push#(b)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Push.bs 126 0 {Library Push}}}} {module Push::qbuffered {interface Push::Push#(a)} {arguments {{function b f(a x1)} Push::Push#(b)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Push.bs 136 0 {Library Push}}}} {module Push::sink {interface Push::Push#(a)} {position {%/Libraries/Push.bs 144 0 {Library Push}}}} {module Push::spew {interface Empty} {arguments Push::Push#(a)} {position {%/Libraries/Push.bs 154 0 {Library Push}}}} {function » {result m#(b)} {arguments {{function m#(b) f(a x1)} m#(a)}} {provisos Monad#(m)} {position {%/Libraries/Push.bs 164 1 {Library Push}}}} {function Push::pipe {result m#(b)} {arguments {{function m#(b) f(a x1)} m#(a)}} {provisos Monad#(m)} {position {%/Libraries/Push.bs 167 0 {Library Push}}}} {function Push::regToPush {result Push::Push#(a)} {arguments Reg#(a)} {position {%/Libraries/Push.bs 174 0 {Library Push}}}} {function Push::fifoToPush {result Push::Push#(a)} {arguments FIFO::FIFO#(a)} {position {%/Libraries/Push.bs 183 0 {Library Push}}}}

{function Arbitrate::select_grant {result {{Vector::Vector#(n, Bool)}}} {arguments {{Vector::Vector#(n, Bool)} UInt#(TLog#(n))}} {position {%/Libraries/Arbitrate.bsv 33 27 {Library Arbitrate}}}} {function Arbitrate::hasRequest {result Bool} {arguments FIFOF::FIFOF#(a)} {position {%/Libraries/Arbitrate.bsv 49 15 {Library Arbitrate}}}} {function Arbitrate::fifosToServer {result {{ClientServer::Server#(req, resp)}}} {arguments {{Tuple2#(FIFOF::FIFOF#(req), FIFO::FIFO#(resp))}}} {position {%/Libraries/Arbitrate.bsv 53 28 {Library Arbitrate}}}} {module Arbitrate::mkRoundRobin {interface Arbitrate::Arbitrate#(n)} {provisos {{Log#(n, logn)} {Add#(1, z, n)}}} {position {%/Libraries/Arbitrate.bsv 81 8 {Library Arbitrate}}}} {module Arbitrate::mkFixedPriority {interface Arbitrate::Arbitrate#(n)} {provisos {{Log#(n, logn)} {Add#(1, z, n)}}} {position {%/Libraries/Arbitrate.bsv 117 8 {Library Arbitrate}}}} {module Arbitrate::mkArbiter {interface {{Arbitrate::Arbiter#(n, req, resp)}}} {arguments {Arbitrate::Arbitrate#(n) Integer}} {provisos {Arbitrate::ArbRequestTC#(req) {Bits#(resp, sresp)} {Bits#(req, sreq)} {Add#(1, _1, n)}}} {position {%/Libraries/Arbitrate.bsv 148 8 {Library Arbitrate}}}}

{module CGetPut::mkCGetPut {interface {{Tuple2#(CGetPut::CGetS#(n, a, sa), GetPut::Put#(a))}}} {provisos {{Log#(n1, ln)} {Add#(n, 1, n1)} {Add#(1, k, n)} {Bits#(a, sa)}}} {position {%/Libraries/CGetPut.bs 70 0 {Library CGetPut}}}} {module CGetPut::mkGetCPut {interface {{Tuple2#(GetPut::Get#(a), CGetPut::CPutS#(n, a, sa))}}} {provisos {{Log#(n, ln)} {Add#(1, k, n)} {Bits#(a, sa)}}} {position {%/Libraries/CGetPut.bs 106 0 {Library CGetPut}}}} {module CGetPut::mkCGetCPut {interface {{Tuple2#(CGetPut::CGetS#(n, a, sa), CGetPut::CPutS#(n, a, sa))}}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/CGetPut.bs 220 0 {Library CGetPut}}}} {module CGetPut::mkClientCServer {interface {{Tuple2#(ClientServer::Client#(a, b), CGetPut::CServerS#(n, a, sa, b, sb))}}} {provisos {{Add#(1, k, n)} {Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/CGetPut.bs 308 0 {Library CGetPut}}}} {module CGetPut::mkCClientServer {interface {{Tuple2#(CGetPut::CClientS#(n, a, sa, b, sb), ClientServer::Server#(a, b))}}} {provisos {{Add#(1, k, n)} {Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/CGetPut.bs 329 0 {Library CGetPut}}}}

{function Tabulate::tabulate {result b} {arguments {{function b f(a x1)} a}} {provisos {{Bits#(a, sa)} Bounded#(a)}} {position {%/Libraries/Tabulate.bs 23 0 {Library Tabulate}}}}

{module Once::mkOnce {interface Once::Once} {arguments Action} {position {%/Libraries/Once.bs 34 0 {Library Once}}}}

{module Arbiter::mkArbiter {interface Arbiter::Arbiter_IFC#(count)} {arguments Bool} {position {%/Libraries/Arbiter.bsv 34 8 {Library Arbiter}}}} {module Arbiter::mkStickyArbiter {interface Arbiter::Arbiter_IFC#(count)} {position {%/Libraries/Arbiter.bsv 124 8 {Library Arbiter}}}} {module Arbiter::mkHoldArbiter {interface Arbiter::Arbiter_IFC#(count)} {position {%/Libraries/Arbiter.bsv 226 8 {Library Arbiter}}}} {function Arbiter::isTrue {result Bool} {arguments Bool} {position {%/Libraries/Arbiter.bsv 315 15 {Library Arbiter}}}}


{module Gearbox::mkNto1Gearbox {interface {{Gearbox::Gearbox#(in, 1, a)}}} {arguments {Clock Reset Clock Reset}} {provisos {{Add#(1, z, in)} {Bits#(a, a_sz)}}} {position {%/Libraries/Gearbox.bsv 50 8 {Library Gearbox}}}} {module Gearbox::mk1toNGearbox {interface {{Gearbox::Gearbox#(1, out, a)}}} {arguments {Clock Reset Clock Reset}} {provisos {{Add#(out, x, elements)} {Add#(1, w, elements)} {Mul#(2, out, elements)} {Add#(1, z, out)} {Bits#(a, a_sz)}}} {position {%/Libraries/Gearbox.bsv 250 8 {Library Gearbox}}}} {function Gearbox::readCReg {result b} {arguments Clocks::CrossingReg#(b)} {position {%/Libraries/Gearbox.bsv 452 12 {Library Gearbox}}}} {function Gearbox::readCCReg {result b} {arguments Clocks::CrossingReg#(b)} {position {%/Libraries/Gearbox.bsv 456 12 {Library Gearbox}}}} {function Gearbox::writeCReg {result Action} {arguments {Clocks::CrossingReg#(b) b}} {position {%/Libraries/Gearbox.bsv 460 17 {Library Gearbox}}}} {function Gearbox::readVCReg {result {{Vector::Vector#(n, b)}}} {arguments {{Vector::Vector#(n, Clocks::CrossingReg#(b))}}} {provisos {{Add#(1, x2, n)}}} {position {%/Libraries/Gearbox.bsv 466 24 {Library Gearbox}}}} {function Gearbox::readVCCReg {result {{Vector::Vector#(n, b)}}} {arguments {{Vector::Vector#(n, Clocks::CrossingReg#(b))}}} {provisos {{Add#(1, x2, n)}}} {position {%/Libraries/Gearbox.bsv 470 24 {Library Gearbox}}}} {function Gearbox::writeVCReg {result Action} {arguments {{Vector::Vector#(n, Clocks::CrossingReg#(b))} {Vector::Vector#(n, b)}}} {position {%/Libraries/Gearbox.bsv 474 17 {Library Gearbox}}}}

{module STRAM::mkWrapSTRAM {interface {{TRAM::TRAM#(tg, adr, dta)}}} {arguments {{m#(SyncSRAM::SyncSRAMS#(lat, adrs, dtas))}}} {provisos {{Log#(lat1, llat)} {Add#(1, lat, lat1)} {Bits#(tg, tgs)} {Bits#(dta, dtas)} {Bits#(adr, adrs)}}} {position {%/Libraries/STRAM.bs 25 0 {Library STRAM}}}} {module STRAM::wrapSTRAM {interface {{Tuple2#(SyncSRAM::SyncSRAMC#(lat, adrs, dtas), TRAM::TRAM#(tg, adr, dta))}}} {provisos {{Log#(lat1, llat)} {Add#(1, lat, lat1)} {Bits#(tg, tgs)} {Bits#(dta, dtas)} {Bits#(adr, adrs)}}} {position {%/Libraries/STRAM.bs 42 0 {Library STRAM}}}}

{function ActionSeq::aJoin {result c} {arguments {Action a}} {provisos {{ActionSeq::ActionJoin#(a, c)}}} {position {%/Libraries/ActionSeq.bs 53 0 {Library ActionSeq}}}} {module ActionSeq::actionSeq {interface ActionSeq::ActionSeq} {arguments ActionSeq::ActionList#(n)} {provisos {{Log#(i, k)} {Add#(n, 1, i)}}} {position {%/Libraries/ActionSeq.bs 82 0 {Library ActionSeq}}}} {module ActionSeq::mkActionSeq {interface ActionSeq::ActionSeq} {arguments List#(Action)} {position {%/Libraries/ActionSeq.bs 101 0 {Library ActionSeq}}}} {module ActionSeq::mkActionSeqN {interface ActionSeq::ActionSeqN#(n)} {arguments {List#(Action) Integer}} {provisos {{Add#(n, 1, n1)}}} {position {%/Libraries/ActionSeq.bs 107 0 {Library ActionSeq}}}} {module ActionSeq::aS2 {interface ActionSeq::ActionSeqN#(n)} {arguments {List#(Action) Integer Reg#(Bit#(a))}} {position {%/Libraries/ActionSeq.bs 118 0 {Library ActionSeq}}}} {module ActionSeq::actionSeqBreak {interface ActionSeq::ActionSeq} {arguments {{function ActionSeq::ActionList#(n) f(Action x1)}}} {provisos {{Log#(i, k)} {Add#(n, 1, i)}}} {position {%/Libraries/ActionSeq.bs 146 0 {Library ActionSeq}}}} {function ActionSeq::mkRules {result Rules} {arguments {Bool ActionSeq::RegB#(k) ActionSeq::ActionList#(n)}} {position {%/Libraries/ActionSeq.bs 164 0 {Library ActionSeq}}}} {function ActionSeq::mR2 {result Rules} {arguments {Bool ActionSeq::RegB#(k) List#(Action)}} {position {%/Libraries/ActionSeq.bs 167 0 {Library ActionSeq}}}} {function ActionSeq::step {result Rules} {arguments {Bool ActionSeq::RegB#(k) {Tuple2#(Integer, Action)} Rules}} {position {%/Libraries/ActionSeq.bs 170 0 {Library ActionSeq}}}} {module ActionSeq::seqOfActionSeq {interface ActionSeq::ActionSeq} {arguments ActionSeq::SeqList#(n)} {provisos {{Log#(i, k)} {Add#(j, 1, i)} {Add#(n, 1, j)}}} {position {%/Libraries/ActionSeq.bs 192 0 {Library ActionSeq}}}} {function ActionSeq::mkSeqRules {result Rules} {arguments {ActionSeq::RegB#(k) ActionSeq::SeqList#(n)}} {provisos {{Add#(n, 1, j)}}} {position {%/Libraries/ActionSeq.bs 207 0 {Library ActionSeq}}}} {function ActionSeq::seqStep {result Rules} {arguments {ActionSeq::RegB#(k) {Tuple3#(Integer, ActionSeq::ActionSeq, ActionSeq::ActionSeq)} Rules}} {position {%/Libraries/ActionSeq.bs 215 0 {Library ActionSeq}}}}

{function Fork::vfork {result Bit#(m)} {arguments Bit#(n)} {position {%/Libraries/Fork.bs 15 8 {Library Fork}}}} {function Fork::fork {result {{Tuple2#(a, a)}}} {arguments a} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Fork.bs 22 0 {Library Fork}}}} {function Fork::forkL {result List#(a)} {arguments {Integer a}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Fork.bs 30 0 {Library Fork}}}} {function Fork::forkLN {result {{Vector::Vector#(n, a)}}} {arguments a} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Fork.bs 42 0 {Library Fork}}}}


{module EdgeDetect::mkRequestDetect {interface EdgeDetect::RequestDetect} {position {%/Libraries/EdgeDetect.bsv 13 8 {Library EdgeDetect}}}}


{module AxiDefines::mkAxiLowPower {interface AxiDefines::AxiLowPower} {position {AxiDefines.bsv 564 8}}} {function AxiDefines::getAxiAddrCmd {result {{AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 713 32}}} {function AxiDefines::getAxiWrData {result {{AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 740 31}}} {function AxiDefines::getAxiLen {result AxiDefines::AxiLen} {arguments {{TLM3Defines::TLMBLength#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 751 17}}} {function AxiDefines::getAxiSize {result AxiDefines::AxiSize} {arguments TLM3Defines::TLMBSize} {position {AxiDefines.bsv 756 18}}} {function AxiDefines::getAxiBurst {result AxiDefines::AxiBurst} {arguments TLM3Defines::TLMBurstMode} {position {AxiDefines.bsv 760 19}}} {function AxiDefines::getAxiLock {result AxiDefines::AxiLock} {arguments TLM3Defines::TLMLock} {position {AxiDefines.bsv 768 18}}} {function AxiDefines::getAxiId {result {{AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 772 27}}} {function AxiDefines::getAxiResp {result AxiDefines::AxiResp} {arguments {TLM3Defines::TLMStatus Bit#(n)}} {provisos {{Add#(_1, 3, n)}}} {position {AxiDefines.bsv 776 18}}} {function AxiDefines::fromAxiAddrCmd {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), s0)}}} {position {AxiDefines.bsv 792 39}}} {function AxiDefines::fromAxiLen {result {{TLM3Defines::TLMBLength#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments AxiDefines::AxiLen} {position {AxiDefines.bsv 822 32}}} {function AxiDefines::fromAxiBurst {result TLM3Defines::TLMBurstMode} {arguments AxiDefines::AxiBurst} {position {AxiDefines.bsv 826 23}}} {function AxiDefines::fromAxiSize {result TLM3Defines::TLMBSize} {arguments AxiDefines::AxiSize} {position {AxiDefines.bsv 834 19}}} {function AxiDefines::fromAxiLock {result TLM3Defines::TLMLock} {arguments AxiDefines::AxiLock} {position {AxiDefines.bsv 838 18}}} {function AxiDefines::fromAxiId {result {{TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 842 27}}} {function AxiDefines::fromAxiResp {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments AxiDefines::AxiResp} {position {AxiDefines.bsv 846 33}}} {function AxiDefines::fromAxiRdResp {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 875 33}}} {function AxiDefines::fromAxiWrResp {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 904 33}}} {module AxiMaster::mkAxiRdMasterIFC {interface {{AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {AxiMaster.bsv 27 8}}} {module AxiMaster::mkAxiWrMasterIFC {interface {{AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {AxiMaster.bsv 69 8}}} {module AxiMaster::mkAxiRdBusMasterIFC {interface {{AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiMaster.bsv 115 8}}} {module AxiMaster::mkAxiWrBusMasterIFC {interface {{AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiMaster.bsv 145 8}}} {function AxiMaster::isLocked {result Bool} {arguments TLM3Defines::TLMLock} {position {AxiMaster.bsv 188 15}}} {module AxiMaster::mkAxiRdMaster {interface {{AxiDefines::AxiRdMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments UInt#(32)} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AxiMaster.bsv 196 8}}} {module AxiMaster::mkAxiWrMaster {interface {{AxiDefines::AxiWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AxiMaster.bsv 339 8}}} {module AxiMaster::mkAxiWrMasterP {interface {{AxiDefines::AxiWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool {BusDefines::BusSender#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSender#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AxiMaster.bsv 355 8}}} {module AxiMaster::mkAxiRdWrMaster {interface {{AxiDefines::AxiRdWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AxiMaster.bsv 543 8}}} {module AxiPC::mkAxiRdMasterPC {interface {{AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {AxiPC::AxiPCParams {AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiPC.bsv 16 8}}} {module AxiPC::mkAxiRdSlavePC {interface {{AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {AxiPC::AxiPCParams {AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiPC.bsv 140 8}}} {module AxiPC::mkAxiWrMasterPC {interface {{AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {AxiPC::AxiPCParams {AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiPC.bsv 278 8}}} {module AxiPC::mkAxiWrSlavePC {interface {{AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {AxiPC::AxiPCParams {AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiPC.bsv 400 8}}} {module AxiPC::mkAxiPC {interface {{AxiPC::AxiPC_Ifc#(_sn3, _sn2, _sn1, length_size, user_size)}}} {arguments AxiPC::AxiPCParams} {position {AxiPC.bsv 642 8}}} {module AxiSlave::mkAxiRdSlaveIFC {interface {{AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {AxiSlave.bsv 26 8}}} {module AxiSlave::mkAxiWrSlaveIFC {interface {{AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {AxiSlave.bsv 76 8}}} {module AxiSlave::mkAxiRdBusSlaveIFC {interface {{AxiDefines::AxiRdBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiSlave.bsv 146 8}}} {module AxiSlave::mkAxiWrBusSlaveIFC {interface {{AxiDefines::AxiWrBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiSlave.bsv 176 8}}} {module AxiSlave::mkAxiRdSlave {interface {{AxiDefines::AxiRdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {AxiSlave.bsv 218 8}}} {module AxiSlave::mkAxiRdSlaveSynth {interface {{AxiDefines::AxiRdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments Bool} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {AxiSlave.bsv 237 8}}} {module AxiSlave::mkAxiWrSlave {interface {{AxiDefines::AxiWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {AxiSlave.bsv 323 8}}} {module AxiSlave::mkAxiWrSlaveSynth {interface {{AxiDefines::AxiWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool Integer}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {AxiSlave.bsv 341 8}}} {module AxiSlave::mkAxiWrSlaveSynthP {interface {{AxiDefines::AxiWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool Integer {BusDefines::BusReceiver#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusReceiver#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {AxiSlave.bsv 357 8}}} {module AxiSlave::mkSlaveSlice {interface {{AxiSlave::SlaveSlice#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {GetPut::GetS#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {GetPut::GetS#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} FIFO::FIFO#(req_t)}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)}}} {position {AxiSlave.bsv 504 8}}} {module AxiSlave::mkAxiRdSlaveDummy {interface {{AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiSlave.bsv 609 8}}} {module AxiSlave::mkAxiWrSlaveDummy {interface {{AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiSlave.bsv 645 8}}} {module AxiSlave::mkAxiWrSlaveDummyX {interface {{AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiSlave.bsv 687 8}}} {module AxiSlave::mkAxiRdWrSlave {interface {{AxiDefines::AxiRdWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bool f(Bit#(addr_size) x1)}}} {provisos {{Bits#(req_t, s0)} {Bits#(resp_t, s1)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {AxiSlave.bsv 734 8}}} {module AxiRdBus::mkAxiRdBus {interface Empty} {arguments {{Vector::Vector#(master_count, AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Vector::Vector#(slv_count, AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{Add#(slv_count, 1, slave_count)}}} {position {AxiRdBus.bsv 33 8}}} {module AxiRdBus::mkAxiRdBusS {interface Empty} {arguments {{function Bit#(slave_count) f(Bit#(addr_size) x1)} {Vector::Vector#(master_count, AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Vector::Vector#(slv_count, AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{Add#(slv_count, 1, slave_count)}}} {position {AxiRdBus.bsv 59 8}}} {function AxiRdBus::getAxiRdMasterAddr {result {{BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiRdBus.bsv 159 42}}} {function AxiRdBus::getAxiRdMasterResp {result {{BusDefines::BusRecv#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiRdBus.bsv 163 41}}} {function AxiRdBus::getAxiRdSlaveAddr {result {{BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiRdBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiRdBus.bsv 167 42}}} {function AxiRdBus::getAxiRdSlaveResp {result {{BusDefines::BusSend#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiRdBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiRdBus.bsv 171 41}}} {module AxiWrBus::mkAxiWrBus {interface Empty} {arguments {{Vector::Vector#(master_count, AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Vector::Vector#(slv_count, AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{Add#(slv_count, 1, slave_count)}}} {position {AxiWrBus.bsv 33 8}}} {module AxiWrBus::mkAxiWrBusS {interface Empty} {arguments {{function Bit#(slave_count) f(Bit#(addr_size) x1)} {Vector::Vector#(master_count, AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Vector::Vector#(slv_count, AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{Add#(slv_count, 1, slave_count)}}} {position {AxiWrBus.bsv 59 8}}} {function AxiWrBus::getAxiWrMasterAddr {result {{BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 183 42}}} {function AxiWrBus::getAxiWrMasterData {result {{BusDefines::BusSend#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 187 41}}} {function AxiWrBus::getAxiWrMasterResp {result {{BusDefines::BusRecv#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 191 41}}} {function AxiWrBus::getAxiWrSlaveAddr {result {{BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiWrBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 195 42}}} {function AxiWrBus::getAxiWrSlaveData {result {{BusDefines::BusRecv#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiWrBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 199 41}}} {function AxiWrBus::getAxiWrSlaveResp {result {{BusDefines::BusSend#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiWrBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 203 41}}} {function AxiWrBus::getRequest {result Bool} {arguments Arbiter::ArbiterRequest_IFC} {position {AxiWrBus.bsv 211 15}}} {function AxiWrBus::getGrant {result Bool} {arguments Arbiter::ArbiterClient_IFC} {position {AxiWrBus.bsv 215 15}}} {function AxiWrBus::addrMatch {result Bool} {arguments {{AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size)} {AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 219 15}}}

{module AxiSlave::mkAxiRdSlaveIFC {interface {{AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {AxiSlave.bsv 26 8}}} {module AxiSlave::mkAxiWrSlaveIFC {interface {{AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {AxiSlave.bsv 76 8}}} {module AxiSlave::mkAxiRdBusSlaveIFC {interface {{AxiDefines::AxiRdBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiSlave.bsv 146 8}}} {module AxiSlave::mkAxiWrBusSlaveIFC {interface {{AxiDefines::AxiWrBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiSlave.bsv 176 8}}} {module AxiSlave::mkAxiRdSlave {interface {{AxiDefines::AxiRdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {AxiSlave.bsv 218 8}}} {module AxiSlave::mkAxiRdSlaveSynth {interface {{AxiDefines::AxiRdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments Bool} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {AxiSlave.bsv 237 8}}} {module AxiSlave::mkAxiWrSlave {interface {{AxiDefines::AxiWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {AxiSlave.bsv 323 8}}} {module AxiSlave::mkAxiWrSlaveSynth {interface {{AxiDefines::AxiWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool Integer}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {AxiSlave.bsv 341 8}}} {module AxiSlave::mkAxiWrSlaveSynthP {interface {{AxiDefines::AxiWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool Integer {BusDefines::BusReceiver#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusReceiver#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {AxiSlave.bsv 357 8}}} {module AxiSlave::mkSlaveSlice {interface {{AxiSlave::SlaveSlice#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {GetPut::GetS#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {GetPut::GetS#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} FIFO::FIFO#(req_t)}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)}}} {position {AxiSlave.bsv 504 8}}} {module AxiSlave::mkAxiRdSlaveDummy {interface {{AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiSlave.bsv 609 8}}} {module AxiSlave::mkAxiWrSlaveDummy {interface {{AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiSlave.bsv 645 8}}} {module AxiSlave::mkAxiWrSlaveDummyX {interface {{AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiSlave.bsv 687 8}}} {module AxiSlave::mkAxiRdWrSlave {interface {{AxiDefines::AxiRdWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bool f(Bit#(addr_size) x1)}}} {provisos {{Bits#(req_t, s0)} {Bits#(resp_t, s1)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {AxiSlave.bsv 734 8}}}

{module AxiMaster::mkAxiRdMasterIFC {interface {{AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {AxiMaster.bsv 27 8}}} {module AxiMaster::mkAxiWrMasterIFC {interface {{AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {AxiMaster.bsv 69 8}}} {module AxiMaster::mkAxiRdBusMasterIFC {interface {{AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiMaster.bsv 115 8}}} {module AxiMaster::mkAxiWrBusMasterIFC {interface {{AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiMaster.bsv 145 8}}} {function AxiMaster::isLocked {result Bool} {arguments TLM3Defines::TLMLock} {position {AxiMaster.bsv 188 15}}} {module AxiMaster::mkAxiRdMaster {interface {{AxiDefines::AxiRdMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments UInt#(32)} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AxiMaster.bsv 196 8}}} {module AxiMaster::mkAxiWrMaster {interface {{AxiDefines::AxiWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AxiMaster.bsv 339 8}}} {module AxiMaster::mkAxiWrMasterP {interface {{AxiDefines::AxiWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool {BusDefines::BusSender#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSender#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AxiMaster.bsv 355 8}}} {module AxiMaster::mkAxiRdWrMaster {interface {{AxiDefines::AxiRdWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AxiMaster.bsv 543 8}}}

{module AxiDefines::mkAxiLowPower {interface AxiDefines::AxiLowPower} {position {AxiDefines.bsv 564 8}}} {function AxiDefines::getAxiAddrCmd {result {{AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 713 32}}} {function AxiDefines::getAxiWrData {result {{AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 740 31}}} {function AxiDefines::getAxiLen {result AxiDefines::AxiLen} {arguments {{TLM3Defines::TLMBLength#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 751 17}}} {function AxiDefines::getAxiSize {result AxiDefines::AxiSize} {arguments TLM3Defines::TLMBSize} {position {AxiDefines.bsv 756 18}}} {function AxiDefines::getAxiBurst {result AxiDefines::AxiBurst} {arguments TLM3Defines::TLMBurstMode} {position {AxiDefines.bsv 760 19}}} {function AxiDefines::getAxiLock {result AxiDefines::AxiLock} {arguments TLM3Defines::TLMLock} {position {AxiDefines.bsv 768 18}}} {function AxiDefines::getAxiId {result {{AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 772 27}}} {function AxiDefines::getAxiResp {result AxiDefines::AxiResp} {arguments {TLM3Defines::TLMStatus Bit#(n)}} {provisos {{Add#(_1, 3, n)}}} {position {AxiDefines.bsv 776 18}}} {function AxiDefines::fromAxiAddrCmd {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), s0)}}} {position {AxiDefines.bsv 792 39}}} {function AxiDefines::fromAxiLen {result {{TLM3Defines::TLMBLength#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments AxiDefines::AxiLen} {position {AxiDefines.bsv 822 32}}} {function AxiDefines::fromAxiBurst {result TLM3Defines::TLMBurstMode} {arguments AxiDefines::AxiBurst} {position {AxiDefines.bsv 826 23}}} {function AxiDefines::fromAxiSize {result TLM3Defines::TLMBSize} {arguments AxiDefines::AxiSize} {position {AxiDefines.bsv 834 19}}} {function AxiDefines::fromAxiLock {result TLM3Defines::TLMLock} {arguments AxiDefines::AxiLock} {position {AxiDefines.bsv 838 18}}} {function AxiDefines::fromAxiId {result {{TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 842 27}}} {function AxiDefines::fromAxiResp {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments AxiDefines::AxiResp} {position {AxiDefines.bsv 846 33}}} {function AxiDefines::fromAxiRdResp {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 875 33}}} {function AxiDefines::fromAxiWrResp {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiDefines.bsv 904 33}}}

{module AxiPC::mkAxiRdMasterPC {interface {{AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {AxiPC::AxiPCParams {AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiPC.bsv 16 8}}} {module AxiPC::mkAxiRdSlavePC {interface {{AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {AxiPC::AxiPCParams {AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiPC.bsv 140 8}}} {module AxiPC::mkAxiWrMasterPC {interface {{AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {AxiPC::AxiPCParams {AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiPC.bsv 278 8}}} {module AxiPC::mkAxiWrSlavePC {interface {{AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {AxiPC::AxiPCParams {AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiPC.bsv 400 8}}} {module AxiPC::mkAxiPC {interface {{AxiPC::AxiPC_Ifc#(_sn3, _sn2, _sn1, length_size, user_size)}}} {arguments AxiPC::AxiPCParams} {position {AxiPC.bsv 642 8}}}

{module AxiRdBus::mkAxiRdBus {interface Empty} {arguments {{Vector::Vector#(master_count, AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Vector::Vector#(slv_count, AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{Add#(slv_count, 1, slave_count)}}} {position {AxiRdBus.bsv 33 8}}} {module AxiRdBus::mkAxiRdBusS {interface Empty} {arguments {{function Bit#(slave_count) f(Bit#(addr_size) x1)} {Vector::Vector#(master_count, AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Vector::Vector#(slv_count, AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{Add#(slv_count, 1, slave_count)}}} {position {AxiRdBus.bsv 59 8}}} {function AxiRdBus::getAxiRdMasterAddr {result {{BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiRdBus.bsv 159 42}}} {function AxiRdBus::getAxiRdMasterResp {result {{BusDefines::BusRecv#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiRdBus.bsv 163 41}}} {function AxiRdBus::getAxiRdSlaveAddr {result {{BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiRdBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiRdBus.bsv 167 42}}} {function AxiRdBus::getAxiRdSlaveResp {result {{BusDefines::BusSend#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiRdBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiRdBus.bsv 171 41}}} {function AxiRdBus::getRequest {result Bool} {arguments Arbiter::ArbiterRequest_IFC} {position {AxiRdBus.bsv 179 15}}} {function AxiRdBus::getGrant {result Bool} {arguments Arbiter::ArbiterClient_IFC} {position {AxiRdBus.bsv 183 15}}} {function AxiRdBus::addrMatch {result Bool} {arguments {{AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size)} {AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiRdBus.bsv 187 15}}}

{module AxiWrBus::mkAxiWrBus {interface Empty} {arguments {{Vector::Vector#(master_count, AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Vector::Vector#(slv_count, AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{Add#(slv_count, 1, slave_count)}}} {position {AxiWrBus.bsv 33 8}}} {module AxiWrBus::mkAxiWrBusS {interface Empty} {arguments {{function Bit#(slave_count) f(Bit#(addr_size) x1)} {Vector::Vector#(master_count, AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Vector::Vector#(slv_count, AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{Add#(slv_count, 1, slave_count)}}} {position {AxiWrBus.bsv 59 8}}} {function AxiWrBus::getAxiWrMasterAddr {result {{BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 183 42}}} {function AxiWrBus::getAxiWrMasterData {result {{BusDefines::BusSend#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 187 41}}} {function AxiWrBus::getAxiWrMasterResp {result {{BusDefines::BusRecv#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 191 41}}} {function AxiWrBus::getAxiWrSlaveAddr {result {{BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiWrBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 195 42}}} {function AxiWrBus::getAxiWrSlaveData {result {{BusDefines::BusRecv#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiWrBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 199 41}}} {function AxiWrBus::getAxiWrSlaveResp {result {{BusDefines::BusSend#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))}}} {arguments {{AxiDefines::AxiWrBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 203 41}}} {function AxiWrBus::getRequest {result Bool} {arguments Arbiter::ArbiterRequest_IFC} {position {AxiWrBus.bsv 211 15}}} {function AxiWrBus::getGrant {result Bool} {arguments Arbiter::ArbiterClient_IFC} {position {AxiWrBus.bsv 215 15}}} {function AxiWrBus::addrMatch {result Bool} {arguments {{AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size)} {AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AxiWrBus.bsv 219 15}}}

{module AHBArbiterSupport::mkAHBArbiter {interface AHBArbiterSupport::AHBArbiter#(count)} {arguments Bool} {position {AHBArbiterSupport.bsv 36 8}}} {function AHBArbiterSupport::dummyAction {result Action} {position {AHBArbiterSupport.bsv 148 17}}}

{module Arbiter::mkArbiter {interface Arbiter::Arbiter_IFC#(count)} {arguments Bool} {position {%/Libraries/Arbiter.bsv 34 8 {Library Arbiter}}}} {module Arbiter::mkStickyArbiter {interface Arbiter::Arbiter_IFC#(count)} {position {%/Libraries/Arbiter.bsv 124 8 {Library Arbiter}}}} {module Arbiter::mkHoldArbiter {interface Arbiter::Arbiter_IFC#(count)} {position {%/Libraries/Arbiter.bsv 226 8 {Library Arbiter}}}} {function Arbiter::isTrue {result Bool} {arguments Bool} {position {%/Libraries/Arbiter.bsv 315 15 {Library Arbiter}}}} {module AHBArbiterSupport::mkAHBArbiter {interface AHBArbiterSupport::AHBArbiter#(count)} {arguments Bool} {position {AHBArbiterSupport.bsv 36 8}}} {function AHBArbiterSupport::dummyAction {result Action} {position {AHBArbiterSupport.bsv 148 17}}}

{function BusSwitch::reverseBusSwitchPath {result {{BusSwitch::BusSwitchPath#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusSwitch::BusSwitchPath#(id_size, addr_size, data_size, length_size, user_size)}}} {position {BusSwitch.bsv 30 35}}} {module BusSwitch::mkBusSwitch {interface {{BusSwitch::BusSwitch#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Vector::Vector#(send_count, BusDefines::BusSend#(a))} {Vector::Vector#(recv_count, BusDefines::BusRecv#(a))} Bool}} {provisos {{BusDefines::BusPayload#(a, Bit#(id_size))} {Bits#(a, sa)}}} {position {BusSwitch.bsv 44 8}}}

{module TLMCBusAdapter::mkTLMCBusAdapter {interface {{TLMDefines::TLMRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{function Bit#(caddr_size) f(Bit#(addr_size) x1)} {TLMCBusAdapter::TLMCBus#(id_size, addr_size, data_size, uint_size, cstm_type, caddr_size)}}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Add#(id_size, _v103, _v102)} {Add#(id_size, _v104, _v103)} {Bits#(cstm_type, _v104)} {Add#(ignore, caddr_size, addr_size)} {Add#(2, _v101, _v105)} {Add#(data_size, _v105, _v106)} {Add#(2, _v106, s1)} {Add#(1, _v100, _v107)} {Add#(uint_size, _v107, _v108)} {Add#(TLog#(TDiv#(data_size, 8)), _v108, _v109)} {Add#(2, _v109, _v110)} {Add#(TDiv#(data_size, 8), _v110, _v111)} {Add#(uint_size, _v111, _v112)} {Add#(data_size, _v112, _v113)} {Add#(addr_size, _v113, _v114)} {Add#(2, _v114, _v115)} {Add#(2, _v115, _v116)} {Add#(_v117, _v116, _v118)} {Add#(_v119, _v120, _v118)} {Max#(_v116, _v120, _v118)} {Add#(1, _v118, s0)} {Add#(data_size, _v103, _v120)}}} {position {TLMCBusAdapter.bsv 21 8}}} {module TLMCBusAdapter::mkTLMCBusAdapterToReadWrite {interface {{TLMDefines::TLMReadWriteRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{function Bit#(caddr_size) f(Bit#(addr_size) x1)} {TLMCBusAdapter::TLMCBus#(id_size, addr_size, data_size, uint_size, cstm_type, caddr_size)}}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Add#(id_size, _v103, _v102)} {Add#(id_size, _v104, _v103)} {Bits#(cstm_type, _v104)} {Add#(ignore, caddr_size, addr_size)} {Add#(2, _v101, _v105)} {Add#(data_size, _v105, _v106)} {Add#(2, _v106, s1)} {Add#(1, _v100, _v107)} {Add#(uint_size, _v107, _v108)} {Add#(TLog#(TDiv#(data_size, 8)), _v108, _v109)} {Add#(2, _v109, _v110)} {Add#(TDiv#(data_size, 8), _v110, _v111)} {Add#(uint_size, _v111, _v112)} {Add#(data_size, _v112, _v113)} {Add#(addr_size, _v113, _v114)} {Add#(2, _v114, _v115)} {Add#(2, _v115, _v116)} {Add#(_v117, _v116, _v118)} {Add#(_v119, _v120, _v118)} {Max#(_v116, _v120, _v118)} {Add#(1, _v118, s0)} {Add#(data_size, _v103, _v120)}}} {position {TLMCBusAdapter.bsv 80 8}}}

{module TLM2ReadWriteRam::mkTLMReadWriteRam {interface {{TLM2Defines::TLMReadWriteRecvIFC#(req_t, resp_t)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Add#(id_size, _v103, _v102)} {Add#(id_size, _v104, _v103)} {Bits#(cstm_type, _v104)} {Add#(_v105, uint_size, 32)} {Add#(2, _v101, _v106)} {Add#(data_size, _v106, _v107)} {Add#(2, _v107, s1)} {Add#(1, _v100, _v108)} {Add#(uint_size, _v108, _v109)} {Add#(TLog#(TDiv#(data_size, 8)), _v109, _v110)} {Add#(2, _v110, _v111)} {Add#(TDiv#(data_size, 8), _v111, _v112)} {Add#(uint_size, _v112, _v113)} {Add#(data_size, _v113, _v114)} {Add#(addr_size, _v114, _v115)} {Add#(2, _v115, _v116)} {Add#(2, _v116, _v117)} {Add#(_v118, _v117, _v119)} {Add#(_v120, _v121, _v119)} {Max#(_v117, _v121, _v119)} {Add#(1, _v119, s0)} {Add#(data_size, _v103, _v121)} DefaultValue#(cstm_type) {TLM2Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2ReadWriteRam.bsv 26 8}}}

{module TLMReduce::mkTLMReducer {interface {{TLMDefines::TLMTransformIFC#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Add#(2, _v100, s2)} {Add#(_v101, s2, _v102)} {Max#(s2, _v103, _v102)} {Add#(2, _v104, _v100)} {Add#(addr_size, _v105, _v104)} {Add#(data_size, _v106, _v105)} {Add#(uint_size, _v107, _v106)} {Add#(TDiv#(data_size, 8), _v108, _v107)} {Add#(2, _v109, _v108)} {Add#(TLog#(TDiv#(data_size, 8)), _v110, _v109)} {Add#(uint_size, _v111, _v110)} {Add#(1, _v112, _v111)} {Add#(uint_size, _v112, _v113)} {Add#(id_size, _v114, _v112)} {Add#(id_size, _v115, _v114)} {Add#(id_size, _v116, _v115)} {Bits#(cstm_type, _v116)} {Add#(2, _v113, _v117)} {Add#(data_size, _v117, _v118)} {Add#(2, _v118, s1)} {Add#(_v119, _v103, _v102)} {Add#(1, _v102, s0)} {Add#(data_size, _v115, _v103)}}} {position {TLMReduce.bsv 23 8}}}

{function TLM2Utils::createBasicRequestDescriptor {result {{TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos DefaultValue#(cstm_type)} {position {TLM2Utils.bsv 22 39}}} {function TLM2Utils::createBasicTLMResponse {result {{TLM2Defines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos DefaultValue#(cstm_type)} {position {TLM2Utils.bsv 37 33}}} {function TLM2Utils::createTLMBitMask {result {{TLM2Defines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLM2Defines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Utils.bsv 47 29}}} {function TLM2Utils::maskTLMData {result {{TLM2Defines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLM2Defines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Utils.bsv 57 29}}} {function TLM2Utils::overwriteTLMData {result {{TLM2Defines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLM2Defines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Utils.bsv 65 29}}}

{module TLMDefines::mkTLMRandomizer {interface {{Randomizable::Randomize#(TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))}}} {arguments Maybe#(TLMDefines::TLMCommand)} {provisos {Bounded#(cstm_type) {Add#(data_size, _v100, s1)} {Add#(id_size, _v101, _v100)} {Bits#(cstm_type, _v101)} {Add#(2, _v102, s0)} {Add#(2, _v103, _v102)} {Add#(addr_size, _v104, _v103)} {Add#(data_size, _v105, _v104)} {Add#(uint_size, _v106, _v105)} {Add#(TDiv#(data_size, 8), _v107, _v106)} {Add#(2, _v108, _v107)} {Add#(TLog#(TDiv#(data_size, 8)), _v109, _v108)} {Add#(uint_size, _v110, _v109)} {Add#(1, _v111, _v110)} {Add#(id_size, _v112, _v111)} {Add#(id_size, _v100, _v112)}}} {position {TLMDefines.bsv 80 8}}} {module TLMDefines::mkTLMSource {interface {{TLMDefines::TLMSendIFC#(4, 32, 32, 10, Bit#(0))}}} {arguments {Maybe#(TLMDefines::TLMCommand) Bool}} {position {TLMDefines.bsv 202 8}}} {function TLMDefines::getTLMCycleCount {result {{TLMDefines::TLMUInt#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMDefines.bsv 236 31}}} {function TLMDefines::getTLMBurstSize {result Bit#(n)} {arguments {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Add#(TLog#(TDiv#(data_size, 8)), 1, n)}}} {position {TLMDefines.bsv 243 18}}} {function TLMDefines::getTLMIncr {result Bit#(n)} {arguments {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Add#(TLog#(TDiv#(data_size, 8)), 1, n)}}} {position {TLMDefines.bsv 248 18}}} {function TLMDefines::getTLMByteEn {result {{TLMDefines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMDefines.bsv 256 33}}} {function TLMDefines::incrTLMAddr {result {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMDefines.bsv 264 41}}} {function TLMDefines::countLSBZeros {result {{Bit#(TLog#(TAdd#(n, 1)))}}} {arguments Bit#(n)} {position {TLMDefines.bsv 281 34}}} {function TLMDefines::getTLMData {result {{TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMDefines.bsv 292 31}}} {function TLMDefines::fshowBurstMode {result Fmt} {arguments {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMDefines.bsv 333 14}}} {function TLMDefines::alwaysAddrMatch {result Bool} {arguments a} {position {TLMDefines.bsv 478 15}}}

{function TLMUtils::createBasicRequestDescriptor {result {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v103)} {Add#(id_size, _v104, _v102)} {Bits#(cstm_type, _v105)} {Add#(id_size, _v105, _v104)} {Add#(1, _v103, _v106)} {Add#(uint_size, _v106, _v107)} {Add#(TLog#(TDiv#(data_size, 8)), _v107, _v108)} {Add#(2, _v108, _v109)} {Add#(TDiv#(data_size, 8), _v109, _v100)} {Add#(data_size, _v101, _v110)} {Add#(addr_size, _v110, _v111)} {Add#(2, _v111, _v112)} {Add#(2, _v112, s0)}}} {position {TLMUtils.bsv 21 41}}} {function TLMUtils::createBasicTLMResponse {result {{TLMDefines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Add#(id_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Bits#(cstm_type, _v103)} {Add#(id_size, _v103, _v102)} {Add#(uint_size, _v101, _v104)} {Add#(2, _v104, _v105)} {Add#(data_size, _v105, _v106)} {Add#(2, _v106, s0)}}} {position {TLMUtils.bsv 43 35}}} {function TLMUtils::createTLMBitMask {result {{TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMUtils.bsv 54 31}}} {function TLMUtils::maskTLMData {result {{TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type)} {TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMUtils.bsv 64 31}}} {function TLMUtils::overwriteTLMData {result {{TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type)} {TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)} {TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMUtils.bsv 72 31}}}

{module TLM2CBusAdapter::mkTLMCBusAdapter {interface {{TLM2Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {{function Bit#(caddr_size) f(Bit#(addr_size) x1)} {TLM2CBusAdapter::TLMCBus#(id_size, addr_size, data_size, uint_size, cstm_type, caddr_size)}}} {provisos {{Add#(ignore, caddr_size, addr_size)} {Bits#(resp_t, s1)} {Add#(id_size, _v100, _v101)} {Add#(id_size, _v101, _v102)} {Add#(1, _v102, _v103)} {Add#(uint_size, _v103, _v104)} {Add#(TLog#(TDiv#(data_size, 8)), _v104, _v105)} {Add#(2, _v105, _v106)} {Add#(TDiv#(data_size, 8), _v106, _v107)} {Add#(uint_size, _v107, _v108)} {Add#(data_size, _v108, _v109)} {Add#(addr_size, _v109, _v110)} {Add#(2, _v110, _v111)} {Add#(2, _v111, _v112)} {Add#(_v113, _v112, _v114)} {Add#(_v115, _v116, _v114)} {Max#(_v112, _v116, _v114)} {Add#(1, _v114, s0)} {Bits#(cstm_type, _v117)} {Add#(id_size, _v117, _v100)} {Add#(data_size, _v100, _v116)} DefaultValue#(cstm_type) {TLM2Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2CBusAdapter.bsv 24 8}}} {module TLM2CBusAdapter::mkTLMCBusAdapterToReadWrite {interface {{TLM2Defines::TLMReadWriteRecvIFC#(req_t, resp_t)}}} {arguments {{function Bit#(caddr_size) f(Bit#(addr_size) x1)} {TLM2CBusAdapter::TLMCBus#(id_size, addr_size, data_size, uint_size, cstm_type, caddr_size)}}} {provisos {{Add#(ignore, caddr_size, addr_size)} {Bits#(resp_t, s1)} {Add#(id_size, _v100, _v101)} {Add#(id_size, _v101, _v102)} {Add#(1, _v102, _v103)} {Add#(uint_size, _v103, _v104)} {Add#(TLog#(TDiv#(data_size, 8)), _v104, _v105)} {Add#(2, _v105, _v106)} {Add#(TDiv#(data_size, 8), _v106, _v107)} {Add#(uint_size, _v107, _v108)} {Add#(data_size, _v108, _v109)} {Add#(addr_size, _v109, _v110)} {Add#(2, _v110, _v111)} {Add#(2, _v111, _v112)} {Add#(_v113, _v112, _v114)} {Add#(_v115, _v116, _v114)} {Max#(_v112, _v116, _v114)} {Add#(1, _v114, s0)} {Bits#(cstm_type, _v117)} {Add#(id_size, _v117, _v100)} {Add#(data_size, _v100, _v116)} DefaultValue#(cstm_type) {TLM2Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2CBusAdapter.bsv 81 8}}}

{module TLMReadWriteRam::mkTLMReadWriteRam {interface {{TLMDefines::TLMReadWriteRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Add#(id_size, _v103, _v102)} {Add#(id_size, _v104, _v103)} {Bits#(cstm_type, _v104)} {Add#(_v105, uint_size, 32)} {Add#(2, _v101, _v106)} {Add#(data_size, _v106, _v107)} {Add#(2, _v107, s1)} {Add#(1, _v100, _v108)} {Add#(uint_size, _v108, _v109)} {Add#(TLog#(TDiv#(data_size, 8)), _v109, _v110)} {Add#(2, _v110, _v111)} {Add#(TDiv#(data_size, 8), _v111, _v112)} {Add#(uint_size, _v112, _v113)} {Add#(data_size, _v113, _v114)} {Add#(addr_size, _v114, _v115)} {Add#(2, _v115, _v116)} {Add#(2, _v116, _v117)} {Add#(_v118, _v117, _v119)} {Add#(_v120, _v121, _v119)} {Max#(_v117, _v121, _v119)} {Add#(1, _v119, s0)} {Add#(data_size, _v103, _v121)}}} {position {TLMReadWriteRam.bsv 25 8}}}

{module TLMRam::mkTLMRam {interface {{TLMDefines::TLMRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Add#(id_size, _v103, _v102)} {Add#(id_size, _v104, _v103)} {Bits#(cstm_type, _v104)} {Add#(_v105, uint_size, 32)} {Add#(2, _v101, _v106)} {Add#(data_size, _v106, _v107)} {Add#(2, _v107, s1)} {Add#(1, _v100, _v108)} {Add#(uint_size, _v108, _v109)} {Add#(TLog#(TDiv#(data_size, 8)), _v109, _v110)} {Add#(2, _v110, _v111)} {Add#(TDiv#(data_size, 8), _v111, _v112)} {Add#(uint_size, _v112, _v113)} {Add#(data_size, _v113, _v114)} {Add#(addr_size, _v114, _v115)} {Add#(2, _v115, _v116)} {Add#(2, _v116, _v117)} {Add#(_v118, _v117, _v119)} {Add#(_v120, _v121, _v119)} {Max#(_v117, _v121, _v119)} {Add#(1, _v119, s0)} {Add#(data_size, _v103, _v121)}}} {position {TLMRam.bsv 24 8}}}

{module TLM2Ram::mkTLMRam_unbuffered {interface {{TLM2Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Add#(id_size, _v103, _v102)} {Add#(id_size, _v104, _v103)} {Bits#(cstm_type, _v104)} {Add#(2, _v101, _v105)} {Add#(data_size, _v105, _v106)} {Add#(2, _v106, s1)} {Add#(1, _v100, _v107)} {Add#(uint_size, _v107, _v108)} {Add#(TLog#(TDiv#(data_size, 8)), _v108, _v109)} {Add#(2, _v109, _v110)} {Add#(TDiv#(data_size, 8), _v110, _v111)} {Add#(uint_size, _v111, _v112)} {Add#(data_size, _v112, _v113)} {Add#(addr_size, _v113, _v114)} {Add#(2, _v114, _v115)} {Add#(2, _v115, _v116)} {Add#(_v117, _v116, _v118)} {Add#(_v119, _v120, _v118)} {Max#(_v116, _v120, _v118)} {Add#(1, _v118, s0)} {Add#(data_size, _v103, _v120)} DefaultValue#(cstm_type) {TLM2Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Ram.bsv 25 8}}} {module TLM2Ram::mkTLMRamX {interface {{TLM2Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(id_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Bits#(cstm_type, _v103)} {Add#(id_size, _v103, _v102)} {Add#(uint_size, _v101, _v104)} {Add#(2, _v104, _v105)} {Add#(data_size, _v105, _v106)} {Add#(2, _v106, s1)} {Bits#(req_t, s0)} DefaultValue#(cstm_type) {TLM2Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Ram.bsv 99 8}}} {module TLM2Ram::mkTLMRam {interface {{TLM2Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(id_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Bits#(cstm_type, _v103)} {Add#(id_size, _v103, _v102)} {Add#(uint_size, _v101, _v104)} {Add#(2, _v104, _v105)} {Add#(data_size, _v105, _v106)} {Add#(2, _v106, s1)} {Bits#(req_t, s0)} DefaultValue#(cstm_type) {TLM2Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Ram.bsv 112 8}}}

{module TLM2Reduce::mkTLMReducer {interface {{TLM2Defines::TLMTransformIFC#(req_t, resp_t)}}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v103)} {Add#(id_size, _v104, _v102)} {Bits#(cstm_type, _v105)} {Add#(id_size, _v105, _v104)} {Add#(1, _v103, _v106)} {Add#(uint_size, _v106, _v107)} {Add#(TLog#(TDiv#(data_size, 8)), _v107, _v108)} {Add#(2, _v108, _v109)} {Add#(TDiv#(data_size, 8), _v109, _v100)} {Add#(data_size, _v101, _v110)} {Add#(addr_size, _v110, _v111)} {Add#(2, _v111, _v112)} {Add#(2, _v112, s2)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM2Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Reduce.bsv 23 8}}}

{module TLM2BRAM::mkTLMBRAM {interface {{TLM2Defines::TLMRecvIFC#(reqt, respt)}}} {arguments {{BRAM::BRAMServer#(Bit#(anx), Bit#(dn))}}} {provisos {{Add#(_v100, uint_size, 32)} {TLM2Defines::TLMResponseTC#(respt, id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMRequestTC#(reqt, id_size, addr_size, data_size, uint_size, cstm_type)} {Add#(dn, id, data_size)} {Add#(an, ia, addr_size)} {Add#(anx, iax, addr_size)} DefaultValue#(cstm_type) {Bits#(respt, sr)} {Add#(TDiv#(dn, 8), xn, TDiv#(data_size, 8))} {Add#(anx, TLog#(TDiv#(data_size, 8)), an)}}} {position {TLM2BRAM.bsv 18 8}}} {module TLM2BRAM::mkTLMBRAMBE {interface {{TLM2Defines::TLMRecvIFC#(reqt, respt)}}} {arguments {{BRAM::BRAMServerBE#(Bit#(anx), Bit#(dn), nn)}}} {provisos {{Add#(_v100, uint_size, 32)} {TLM2Defines::TLMResponseTC#(respt, id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMRequestTC#(reqt, id_size, addr_size, data_size, uint_size, cstm_type)} {Add#(dn, id, data_size)} {Add#(an, ia, addr_size)} {Add#(anx, iax, addr_size)} DefaultValue#(cstm_type) {Bits#(respt, sr)} {Add#(nn, xn, TDiv#(data_size, 8))} {Add#(anx, TLog#(TDiv#(data_size, 8)), an)}}} {position {TLM2BRAM.bsv 42 8}}} {function TLM2BRAM::convertBRAMType {result {{BRAM::BRAMServerBE#(TLM2Defines::TLMAddr#(id_size, addr_size, data_size, uint_size, cstm_type), TLM2Defines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type), n)}}} {arguments {{BRAM::BRAMServerBE#(Bit#(an), Bit#(dn), nn)}}} {provisos {{Add#(nn, ni, n)} {Add#(dn, di, data_size)} {Add#(an, ai, addr_size)}}} {position {TLM2BRAM.bsv 113 10}}}

{module TLM2Defines::mkTLMRandomizer {interface Randomizable::Randomize#(a)} {arguments Maybe#(TLM2Defines::TLMCommand)} {provisos {Bounded#(cstm_type) {Add#(data_size, _v100, s1)} {Add#(id_size, _v101, _v100)} {Bits#(cstm_type, _v101)} {Add#(2, _v102, s0)} {Add#(2, _v103, _v102)} {Add#(addr_size, _v104, _v103)} {Add#(data_size, _v105, _v104)} {Add#(uint_size, _v106, _v105)} {Add#(TDiv#(data_size, 8), _v107, _v106)} {Add#(2, _v108, _v107)} {Add#(TLog#(TDiv#(data_size, 8)), _v109, _v108)} {Add#(uint_size, _v110, _v109)} {Add#(1, _v111, _v110)} {Add#(id_size, _v112, _v111)} {Add#(id_size, _v100, _v112)} {TLM2Defines::TLMRequestTC#(a, id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Defines.bsv 152 8}}} {module TLM2Defines::mkTLMSource {interface {{TLM2Defines::TLMSendIFC#(req_t, resp_t)}}} {arguments {Maybe#(TLM2Defines::TLMCommand) Bool}} {provisos {Bounded#(cstm_type) {Bits#(cstm_type, s1)} {Bits#(resp_t, s0)} {TLM2Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, uint_size, cstm_type)} {TLM2Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Defines.bsv 271 8}}} {module TLM2Defines::mkTLMSourceStd {interface {{TLM2Defines::TLMSendIFC#(TLM2Defines::TLMRequestStd, TLM2Defines::TLMResponseStd)}}} {arguments {Maybe#(TLM2Defines::TLMCommand) Bool}} {position {TLM2Defines.bsv 309 8}}} {module TLM2Defines::mkTLM2Source {interface {{TLM2Defines::TLMSendIFC#(TLM2Defines::TLMRequestStd, TLM2Defines::TLMResponseStd)}}} {arguments {Maybe#(TLM2Defines::TLMCommand) Bool}} {position {TLM2Defines.bsv 340 8}}} {function TLM2Defines::getTLMCycleCount {result {{TLM2Defines::TLMUInt#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Defines.bsv 374 29}}} {function TLM2Defines::getTLMBurstSize {result Bit#(n)} {arguments {{TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Add#(TLog#(TDiv#(data_size, 8)), 1, n)}}} {position {TLM2Defines.bsv 381 18}}} {function TLM2Defines::getTLMIncr {result Bit#(n)} {arguments {{TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Add#(TLog#(TDiv#(data_size, 8)), 1, n)}}} {position {TLM2Defines.bsv 386 18}}} {function TLM2Defines::getTLMByteEn {result {{TLM2Defines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Defines.bsv 394 31}}} {function TLM2Defines::incrTLMAddr {result {{TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Defines.bsv 402 39}}} {function TLM2Defines::countLSBZeros {result {{Bit#(TLog#(TAdd#(n, 1)))}}} {arguments Bit#(n)} {position {TLM2Defines.bsv 419 34}}} {function TLM2Defines::getTLMData {result {{TLM2Defines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLM2Defines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Defines.bsv 430 29}}} {function TLM2Defines::fshowBurstMode {result Fmt} {arguments {{TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLM2Defines.bsv 472 14}}} {function TLM2Defines::alwaysAddrMatch {result Bool} {arguments a} {position {TLM2Defines.bsv 610 15}}} {function TLM2Defines::addByteEnable {result {{TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Div#(data_size, 8, byte_size)}}} {position {TLM2Defines.bsv 614 39}}}

{module TLMDefines::mkTLMRandomizer {interface {{Randomizable::Randomize#(TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))}}} {arguments Maybe#(TLMDefines::TLMCommand)} {provisos {Bounded#(cstm_type) {Add#(data_size, _v100, s1)} {Add#(id_size, _v101, _v100)} {Bits#(cstm_type, _v101)} {Add#(2, _v102, s0)} {Add#(2, _v103, _v102)} {Add#(addr_size, _v104, _v103)} {Add#(data_size, _v105, _v104)} {Add#(uint_size, _v106, _v105)} {Add#(TDiv#(data_size, 8), _v107, _v106)} {Add#(2, _v108, _v107)} {Add#(TLog#(TDiv#(data_size, 8)), _v109, _v108)} {Add#(uint_size, _v110, _v109)} {Add#(1, _v111, _v110)} {Add#(id_size, _v112, _v111)} {Add#(id_size, _v100, _v112)}}} {position {TLMDefines.bsv 80 8}}} {module TLMDefines::mkTLMSource {interface {{TLMDefines::TLMSendIFC#(4, 32, 32, 10, Bit#(0))}}} {arguments {Maybe#(TLMDefines::TLMCommand) Bool}} {position {TLMDefines.bsv 202 8}}} {function TLMDefines::getTLMCycleCount {result {{TLMDefines::TLMUInt#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMDefines.bsv 236 31}}} {function TLMDefines::getTLMBurstSize {result Bit#(n)} {arguments {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Add#(TLog#(TDiv#(data_size, 8)), 1, n)}}} {position {TLMDefines.bsv 243 18}}} {function TLMDefines::getTLMIncr {result Bit#(n)} {arguments {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Add#(TLog#(TDiv#(data_size, 8)), 1, n)}}} {position {TLMDefines.bsv 248 18}}} {function TLMDefines::getTLMByteEn {result {{TLMDefines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMDefines.bsv 256 33}}} {function TLMDefines::incrTLMAddr {result {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMDefines.bsv 264 41}}} {function TLMDefines::countLSBZeros {result {{Bit#(TLog#(TAdd#(n, 1)))}}} {arguments Bit#(n)} {position {TLMDefines.bsv 281 34}}} {function TLMDefines::getTLMData {result {{TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMDefines.bsv 292 31}}} {function TLMDefines::fshowBurstMode {result Fmt} {arguments {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMDefines.bsv 333 14}}} {function TLMDefines::alwaysAddrMatch {result Bool} {arguments a} {position {TLMDefines.bsv 478 15}}} {module TLMCBusAdapter::mkTLMCBusAdapter {interface {{TLMDefines::TLMRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{function Bit#(caddr_size) f(Bit#(addr_size) x1)} {TLMCBusAdapter::TLMCBus#(id_size, addr_size, data_size, uint_size, cstm_type, caddr_size)}}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Add#(id_size, _v103, _v102)} {Add#(id_size, _v104, _v103)} {Bits#(cstm_type, _v104)} {Add#(ignore, caddr_size, addr_size)} {Add#(2, _v101, _v105)} {Add#(data_size, _v105, _v106)} {Add#(2, _v106, s1)} {Add#(1, _v100, _v107)} {Add#(uint_size, _v107, _v108)} {Add#(TLog#(TDiv#(data_size, 8)), _v108, _v109)} {Add#(2, _v109, _v110)} {Add#(TDiv#(data_size, 8), _v110, _v111)} {Add#(uint_size, _v111, _v112)} {Add#(data_size, _v112, _v113)} {Add#(addr_size, _v113, _v114)} {Add#(2, _v114, _v115)} {Add#(2, _v115, _v116)} {Add#(_v117, _v116, _v118)} {Add#(_v119, _v120, _v118)} {Max#(_v116, _v120, _v118)} {Add#(1, _v118, s0)} {Add#(data_size, _v103, _v120)}}} {position {TLMCBusAdapter.bsv 21 8}}} {module TLMCBusAdapter::mkTLMCBusAdapterToReadWrite {interface {{TLMDefines::TLMReadWriteRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{function Bit#(caddr_size) f(Bit#(addr_size) x1)} {TLMCBusAdapter::TLMCBus#(id_size, addr_size, data_size, uint_size, cstm_type, caddr_size)}}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Add#(id_size, _v103, _v102)} {Add#(id_size, _v104, _v103)} {Bits#(cstm_type, _v104)} {Add#(ignore, caddr_size, addr_size)} {Add#(2, _v101, _v105)} {Add#(data_size, _v105, _v106)} {Add#(2, _v106, s1)} {Add#(1, _v100, _v107)} {Add#(uint_size, _v107, _v108)} {Add#(TLog#(TDiv#(data_size, 8)), _v108, _v109)} {Add#(2, _v109, _v110)} {Add#(TDiv#(data_size, 8), _v110, _v111)} {Add#(uint_size, _v111, _v112)} {Add#(data_size, _v112, _v113)} {Add#(addr_size, _v113, _v114)} {Add#(2, _v114, _v115)} {Add#(2, _v115, _v116)} {Add#(_v117, _v116, _v118)} {Add#(_v119, _v120, _v118)} {Max#(_v116, _v120, _v118)} {Add#(1, _v118, s0)} {Add#(data_size, _v103, _v120)}}} {position {TLMCBusAdapter.bsv 80 8}}} {module TLMReduce::mkTLMReducer {interface {{TLMDefines::TLMTransformIFC#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Add#(2, _v100, s2)} {Add#(_v101, s2, _v102)} {Max#(s2, _v103, _v102)} {Add#(2, _v104, _v100)} {Add#(addr_size, _v105, _v104)} {Add#(data_size, _v106, _v105)} {Add#(uint_size, _v107, _v106)} {Add#(TDiv#(data_size, 8), _v108, _v107)} {Add#(2, _v109, _v108)} {Add#(TLog#(TDiv#(data_size, 8)), _v110, _v109)} {Add#(uint_size, _v111, _v110)} {Add#(1, _v112, _v111)} {Add#(uint_size, _v112, _v113)} {Add#(id_size, _v114, _v112)} {Add#(id_size, _v115, _v114)} {Add#(id_size, _v116, _v115)} {Bits#(cstm_type, _v116)} {Add#(2, _v113, _v117)} {Add#(data_size, _v117, _v118)} {Add#(2, _v118, s1)} {Add#(_v119, _v103, _v102)} {Add#(1, _v102, s0)} {Add#(data_size, _v115, _v103)}}} {position {TLMReduce.bsv 23 8}}} {function TLMUtils::createBasicRequestDescriptor {result {{TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v103)} {Add#(id_size, _v104, _v102)} {Bits#(cstm_type, _v105)} {Add#(id_size, _v105, _v104)} {Add#(1, _v103, _v106)} {Add#(uint_size, _v106, _v107)} {Add#(TLog#(TDiv#(data_size, 8)), _v107, _v108)} {Add#(2, _v108, _v109)} {Add#(TDiv#(data_size, 8), _v109, _v100)} {Add#(data_size, _v101, _v110)} {Add#(addr_size, _v110, _v111)} {Add#(2, _v111, _v112)} {Add#(2, _v112, s0)}}} {position {TLMUtils.bsv 21 41}}} {function TLMUtils::createBasicTLMResponse {result {{TLMDefines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {provisos {{Add#(id_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Bits#(cstm_type, _v103)} {Add#(id_size, _v103, _v102)} {Add#(uint_size, _v101, _v104)} {Add#(2, _v104, _v105)} {Add#(data_size, _v105, _v106)} {Add#(2, _v106, s0)}}} {position {TLMUtils.bsv 43 35}}} {function TLMUtils::createTLMBitMask {result {{TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMUtils.bsv 54 31}}} {function TLMUtils::maskTLMData {result {{TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type)} {TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMUtils.bsv 64 31}}} {function TLMUtils::overwriteTLMData {result {{TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {{TLMDefines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type)} {TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)} {TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {position {TLMUtils.bsv 72 31}}} {module TLMRam::mkTLMRam {interface {{TLMDefines::TLMRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Add#(id_size, _v103, _v102)} {Add#(id_size, _v104, _v103)} {Bits#(cstm_type, _v104)} {Add#(_v105, uint_size, 32)} {Add#(2, _v101, _v106)} {Add#(data_size, _v106, _v107)} {Add#(2, _v107, s1)} {Add#(1, _v100, _v108)} {Add#(uint_size, _v108, _v109)} {Add#(TLog#(TDiv#(data_size, 8)), _v109, _v110)} {Add#(2, _v110, _v111)} {Add#(TDiv#(data_size, 8), _v111, _v112)} {Add#(uint_size, _v112, _v113)} {Add#(data_size, _v113, _v114)} {Add#(addr_size, _v114, _v115)} {Add#(2, _v115, _v116)} {Add#(2, _v116, _v117)} {Add#(_v118, _v117, _v119)} {Add#(_v120, _v121, _v119)} {Max#(_v117, _v121, _v119)} {Add#(1, _v119, s0)} {Add#(data_size, _v103, _v121)}}} {position {TLMRam.bsv 24 8}}} {module TLMReadWriteRam::mkTLMReadWriteRam {interface {{TLMDefines::TLMReadWriteRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(uint_size, _v100, _v101)} {Add#(id_size, _v102, _v100)} {Add#(id_size, _v103, _v102)} {Add#(id_size, _v104, _v103)} {Bits#(cstm_type, _v104)} {Add#(_v105, uint_size, 32)} {Add#(2, _v101, _v106)} {Add#(data_size, _v106, _v107)} {Add#(2, _v107, s1)} {Add#(1, _v100, _v108)} {Add#(uint_size, _v108, _v109)} {Add#(TLog#(TDiv#(data_size, 8)), _v109, _v110)} {Add#(2, _v110, _v111)} {Add#(TDiv#(data_size, 8), _v111, _v112)} {Add#(uint_size, _v112, _v113)} {Add#(data_size, _v113, _v114)} {Add#(addr_size, _v114, _v115)} {Add#(2, _v115, _v116)} {Add#(2, _v116, _v117)} {Add#(_v118, _v117, _v119)} {Add#(_v120, _v121, _v119)} {Max#(_v117, _v121, _v119)} {Add#(1, _v119, s0)} {Add#(data_size, _v103, _v121)}}} {position {TLMReadWriteRam.bsv 25 8}}}


{module BusFIFO::mkBusSender {interface BusDefines::BusSender#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 18 8}}} {module BusFIFO::mkBusSenderDD {interface BusDefines::BusSender#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 53 8}}} {module BusFIFO::mkBusReceiver {interface BusDefines::BusReceiver#(a)} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 88 8}}} {module BusFIFO::mkSizedBusSender {interface BusDefines::BusSender#(a)} {arguments {a Integer}} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 127 8}}} {module BusFIFO::mkSizedBusReceiver {interface BusDefines::BusReceiver#(a)} {arguments Integer} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 162 8}}} {module BusFIFO::mkBypassBusSender {interface BusDefines::BusSender#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 201 8}}} {module BusFIFO::mkBypassBusReceiver {interface BusDefines::BusReceiver#(a)} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 240 8}}} {module BusFIFO::mkPipelineBusSender {interface BusDefines::BusSender#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 279 8}}} {module BusFIFO::mkPipelineBusReceiver {interface BusDefines::BusReceiver#(a)} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 318 8}}}

{module BusFIFO::mkBusSender {interface BusDefines::BusSender#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 18 8}}} {module BusFIFO::mkBusSenderDD {interface BusDefines::BusSender#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 53 8}}} {module BusFIFO::mkBusReceiver {interface BusDefines::BusReceiver#(a)} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 88 8}}} {module BusFIFO::mkSizedBusSender {interface BusDefines::BusSender#(a)} {arguments {a Integer}} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 127 8}}} {module BusFIFO::mkSizedBusReceiver {interface BusDefines::BusReceiver#(a)} {arguments Integer} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 162 8}}} {module BusFIFO::mkBypassBusSender {interface BusDefines::BusSender#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 201 8}}} {module BusFIFO::mkBypassBusReceiver {interface BusDefines::BusReceiver#(a)} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 240 8}}} {module BusFIFO::mkPipelineBusSender {interface BusDefines::BusSender#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 279 8}}} {module BusFIFO::mkPipelineBusReceiver {interface BusDefines::BusReceiver#(a)} {provisos {{Bits#(a, sa)}}} {position {BusFIFO.bsv 318 8}}}

{function State::runState {result {{Tuple2#(a, s)}}} {arguments {{State::State#(s, a)} s}} {position {State.bs 15 0}}} {function State::get {result {{State::State#(s, s)}}} {position {State.bs 18 0}}} {function State::put {result {{State::State#(s, void)}}} {arguments s} {position {State.bs 21 0}}}

{function GenCRepr::toByteList {result GenCRepr::ByteList} {arguments Bit#(n)} {position {GenCRepr.bs 15 0}}} {function GenCRepr::fromByteList {result Bit#(n)} {arguments GenCRepr::ByteList} {provisos {{Add#(8, n, k)}}} {position {GenCRepr.bs 26 0}}} {function GenCRepr::pack {result Bit#(m)} {arguments a} {provisos {{Mul#(n, 8, m)} {GenCRepr::GenCRepr#(a, n)}}} {position {GenCRepr.bs 91 0}}} {function GenCRepr::unpack {result a} {arguments Bit#(m)} {provisos {{Mul#(n, 8, m)} {GenCRepr::GenCRepr#(a, n)}}} {position {GenCRepr.bs 95 0}}} {function GenCRepr::numCBytes {result Maybe#(Integer)} {arguments Integer} {position {GenCRepr.bs 100 0}}} {function GenCRepr::genCIntType {result {{Tuple2#(String, String)}}} {arguments {Bool Integer}} {position {GenCRepr.bs 108 0}}} {function GenCRepr::genCIntPack {result String} {arguments {Integer String String}} {position {GenCRepr.bs 115 0}}} {function GenCRepr::genCIntUnpack {result String} {arguments {Integer String String}} {position {GenCRepr.bs 127 0}}} {function GenCRepr::writeCDecls {result Module#(Empty)} {arguments {String tys}} {provisos GenCRepr::GenAllCDecls#(tys)} {position {GenCRepr.bs 697 0}}}

{function GenCMsg::toRx {result {{GenCMsg::Rx#(ns, nd, a)}}} {arguments FIFOF::FIFOF#(a)} {position {GenCMsg.bs 40 0}}} {function GenCMsg::toTx {result {{GenCMsg::Tx#(ns, nd, a)}}} {arguments FIFOF::FIFOF#(a)} {position {GenCMsg.bs 43 0}}} {function GenCMsg::dropSize {result {{GetPut::Put#(GenCMsg::SizedVector#(n, a))}}} {arguments {{GetPut::Put#(Vector::Vector#(n, a))}}} {position {GenCMsg.bs 60 0}}} {function GenCMsg::writeCMsgDecls {result Module#(Empty)} {arguments {String fifos}} {provisos {{Generic#(fifos, Meta#(MetaData#(_v100, _v101, _v102, 1), _v103))} {GenCMsg::FIFOs'#(Meta#(MetaData#(_v100, _v101, _v102, 1), _v103), _v104, _v105, _v106, _v107)} GenCRepr::ByteListToVector#(_v106) {Add#(_v108, _v106, txBytes)} {Add#(_v105, _v109, _v108)} {Add#(_v107, _v110, rxBytes)} {Add#(_v111, _v104, rxBytes)} {Add#(_v107, _v109, _v111)} GenCMsg::ByteVector#(_v109) {Div#(_v112, 8, _v109)} {Log#(TAdd#(1, TAdd#(_v105, _v107)), _v112)}}} {position {GenCMsg.bs 435 0}}}


{module TLM3Ram::mkTLMRam_unbuffered {interface {{TLM3Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(2, TAdd#(data_size, TAdd#(2, TAdd#(user_size, TAdd#(4, TAdd#(id_size, 1))))), s1)} {Add#(1, TMax#(TAdd#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10)))))))))))))), TAdd#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))))), s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Ram.bsv 25 8}}} {module TLM3Ram::mkTLMRamX {interface {{TLM3Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(2, TAdd#(data_size, TAdd#(2, TAdd#(user_size, TAdd#(4, TAdd#(id_size, 1))))), s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Ram.bsv 99 8}}} {module TLM3Ram::mkTLMRam {interface {{TLM3Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(2, TAdd#(data_size, TAdd#(2, TAdd#(user_size, TAdd#(4, TAdd#(id_size, 1))))), s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Ram.bsv 112 8}}}

{module TLM3BRAM::mkTLMBRAM {interface {{TLM3Defines::TLMRecvIFC#(reqt, respt)}}} {arguments {{BRAM::BRAMServer#(Bit#(anx), Bit#(dn))}}} {provisos {{TLM3Defines::TLMResponseTC#(respt, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(reqt, id_size, addr_size, data_size, length_size, user_size)} {Bits#(respt, sr)}}} {position {TLM3BRAM.bsv 18 8}}} {module TLM3BRAM::mkTLMBRAMBE {interface {{TLM3Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {{BRAM::BRAMServerBE#(Bit#(anx), Bit#(dn), nn)}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Div#(data_size, 8, byte_size)} {Bits#(resp_t, sr)}}} {position {TLM3BRAM.bsv 35 8}}} {function TLM3BRAM::convertBRAMType {result {{BRAM::BRAMServerBE#(TLM3Defines::TLMAddr#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMData#(id_size, addr_size, data_size, length_size, user_size), n)}}} {arguments {{BRAM::BRAMServerBE#(Bit#(an), Bit#(dn), nn)}}} {position {TLM3BRAM.bsv 103 10}}}

{function TLM3Api::getRequestLength {result UInt#(16)} {arguments TLM3Api::TLMRequestHeader} {position {TLM3Api.bsv 74 19}}} {function TLM3Api::setRequestLength {result TLM3Api::TLMRequestHeader} {arguments {TLM3Api::TLMRequestHeader UInt#(16)}} {position {TLM3Api.bsv 79 27}}} {function TLM3Api::toTLMRequestHeader {result TLM3Api::TLMRequestHeader} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Api.bsv 126 27}}} {function TLM3Api::fromTLMRequestHeader {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments TLM3Api::TLMRequestHeader} {position {TLM3Api.bsv 162 39}}} {function TLM3Api::toTLMResponseHeader {result TLM3Api::TLMResponseHeader} {arguments {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Api.bsv 203 28}}} {function TLM3Api::fromTLMResponseHeader {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments TLM3Api::TLMResponseHeader} {position {TLM3Api.bsv 217 33}}} {function TLM3Api::hdrToChunks {result {{Vector::Vector#(2, TLM3Api::Chunk)}}} {arguments a} {provisos {{Bits#(a, sa)}}} {position {TLM3Api.bsv 239 28}}} {module TLM3Api::mkApiSender {interface {{TLM3Api::ApiSendIFC#(req_t, resp_t)}}} {provisos {{Add#(data_size, user_size, du_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(1, length_size, n)}}} {position {TLM3Api.bsv 264 8}}} {module TLM3Api::mkApiReceiver {interface {{TLM3Api::ApiRecvIFC#(req_t, resp_t)}}} {arguments UInt#(32)} {provisos {{Add#(data_size, user_size, du_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(1, length_size, n)}}} {position {TLM3Api.bsv 553 8}}} {function TLM3Api::checkSizes {result Bool} {arguments {Integer Integer Integer}} {position {TLM3Api.bsv 855 15}}} {module TLM3Api::mkCFIFO {interface TLM3Api::CFIFO#(a)} {arguments UInt#(32)} {provisos {Ord#(a) Literal#(a) Eq#(a) Arith#(a) {Bits#(a, sa)}}} {position {TLM3Api.bsv 886 8}}} {function TLM3Api::truncateLSBNP {result a} {arguments b} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {TLM3Api.bsv 935 12}}} {module TLM3Api::mkApiReceiverXL {interface {{TLM3Api::ApiRecvIFC#(req_t, resp_t)}}} {arguments {UInt#(32) Integer}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Api.bsv 947 8}}}

{module TLM3ReadWriteRam::mkTLMReadWriteRam {interface {{TLM3Defines::TLMReadWriteRecvIFC#(req_t, resp_t)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(2, TAdd#(data_size, TAdd#(2, TAdd#(user_size, TAdd#(4, TAdd#(id_size, 1))))), s1)} {Add#(1, TMax#(TAdd#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10)))))))))))))), TAdd#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))))), s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3ReadWriteRam.bsv 26 8}}}

{module TLM3CBusAdapter::mkTLMCBusAdapter {interface {{TLM3Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {{function Bit#(caddr_size) f(Bit#(addr_size) x1)} {TLM3CBusAdapter::TLMCBus#(id_size, addr_size, data_size, length_size, user_size, caddr_size)}}} {provisos {{Bits#(resp_t, s1)} {Add#(1, TMax#(TAdd#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10)))))))))))))), TAdd#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))))), s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3CBusAdapter.bsv 24 8}}} {module TLM3CBusAdapter::mkTLMCBusAdapterToReadWrite {interface {{TLM3Defines::TLMReadWriteRecvIFC#(req_t, resp_t)}}} {arguments {{function Bit#(caddr_size) f(Bit#(addr_size) x1)} {TLM3CBusAdapter::TLMCBus#(id_size, addr_size, data_size, length_size, user_size, caddr_size)}}} {provisos {{Bits#(resp_t, s1)} {Add#(1, TMax#(TAdd#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10)))))))))))))), TAdd#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))))), s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3CBusAdapter.bsv 82 8}}}

{module CB::mkCompletionBuffer {interface {{CB::CompletionBuffer#(ln, a, b)}}} {provisos {FShow#(b) {Add#(1, ln, ln1)} {Bits#(b, sb)} {Bits#(a, sa)}}} {position {CB.bsv 74 8}}}

{module TLM3Reorder::mkTLMReorder1 {interface {{TLM3Reorder::TLMReorder#(1, ln, req_t, resp_t)}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {TLM3Reorder.bsv 33 8}}} {module TLM3Reorder::mkTLMReorderP {interface {{TLM3Reorder::TLMReorder#(m, ln, req_t, resp_t)}}} {provisos {FShow#(resp_t) {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {TLM3Reorder.bsv 52 8}}}

{module TLM3Defines::mkTLMRandomizer {interface Randomizable::Randomize#(a)} {arguments Maybe#(TLM3Defines::TLMCommand)} {provisos {{Add#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))), s1)} {Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), s0)} {TLM3Defines::TLMRequestTC#(a, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 232 8}}} {module TLM3Defines::mkTLMSource {interface {{TLM3Defines::TLMSendIFC#(req_t, resp_t)}}} {arguments {Maybe#(TLM3Defines::TLMCommand) Bool}} {provisos {{Bits#(resp_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 358 8}}} {module TLM3Defines::mkTLMSourceStd {interface {{TLM3Defines::TLMSendIFC#(TLM3Defines::TLMRequestStd, TLM3Defines::TLMResponseStd)}}} {arguments {Maybe#(TLM3Defines::TLMCommand) Bool}} {position {TLM3Defines.bsv 394 8}}} {module TLM3Defines::mkTLM2Source {interface {{TLM3Defines::TLMSendIFC#(TLM3Defines::TLMRequestStd, TLM3Defines::TLMResponseStd)}}} {arguments {Maybe#(TLM3Defines::TLMCommand) Bool}} {position {TLM3Defines.bsv 425 8}}} {function TLM3Defines::getTLMCycleCount {result {{TLM3Defines::TLMBLength#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 459 32}}} {function TLM3Defines::getTLMIncr {result Bit#(n)} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{Add#(TLog#(TDiv#(data_size, 8)), 1, n)}}} {position {TLM3Defines.bsv 466 18}}} {function TLM3Defines::getTLMByteEn {result {{TLM3Defines::TLMByteEn#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 475 31}}} {function TLM3Defines::getTLMByteEnU {result {{TLM3Defines::TLMByteEn#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 480 31}}} {function TLM3Defines::getTLMByteEnL {result {{TLM3Defines::TLMByteEn#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 485 31}}} {function TLM3Defines::getTLMByteEnUL {result {{TLM3Defines::TLMByteEn#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 504 31}}} {function TLM3Defines::incrTLMAddr {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 535 39}}} {function TLM3Defines::countLSBZeros {result {{Bit#(TLog#(TAdd#(n, 1)))}}} {arguments Bit#(n)} {position {TLM3Defines.bsv 553 34}}} {function TLM3Defines::getTLMData {result {{TLM3Defines::TLMData#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 563 29}}} {function TLM3Defines::incrTLMAddrN {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Integer {TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 574 39}}} {function TLM3Defines::fshowBurstMode {result Fmt} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 617 14}}} {function TLM3Defines::alwaysAddrMatch {result Bool} {arguments a} {position {TLM3Defines.bsv 848 15}}} {function TLM3Defines::addByteEnable {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 852 39}}} {function TLM3Defines::addByteEnableU {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 859 39}}} {function TLM3Defines::alignAddress {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 866 39}}} {function TLM3Defines::isValidRequest {result Bool} {arguments {{TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size)} TLM3Defines::TLMFamily}} {position {TLM3Defines.bsv 965 15}}} {function TLM3Defines::isValidResponse {result Bool} {arguments {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)} TLM3Defines::TLMFamily}} {position {TLM3Defines.bsv 969 15}}} {module TLM3Defines::wrapFIFO {interface FIFO::FIFO#(a)} {arguments FIFO::FIFO#(a)} {position {TLM3Defines.bsv 973 8}}} {module TLM3Defines::wrapFIFOF {interface FIFOF::FIFOF#(a)} {arguments FIFOF::FIFOF#(a)} {position {TLM3Defines.bsv 1005 8}}} {function TLM3Defines::getMaxBSize {result TLM3Defines::TLMBSize} {arguments Integer} {position {TLM3Defines.bsv 1052 19}}} {module TLM3Defines::mkSafeDepthParamFIFO {interface FIFO::FIFO#(a)} {arguments UInt#(32)} {provisos {{Bits#(a, sa)}}} {position {TLM3Defines.bsv 1069 8}}} {module TLM3Defines::mkSafeDepthParamFIFOF {interface FIFOF::FIFOF#(a)} {arguments UInt#(32)} {provisos {{Bits#(a, sa)}}} {position {TLM3Defines.bsv 1076 8}}} {module TLM3Defines::mkSizedSFIFO {interface {{TLM3Defines::SFIFO#(a, b)}}} {arguments Integer} {provisos {Eq#(b) Arith#(b) {Bits#(b, sb)} {Bits#(a, sa)}}} {position {TLM3Defines.bsv 1094 8}}} {module TLM3Defines::mkTCtr {interface TLM3Defines::TCounter} {arguments Reg#(UInt#(s))} {position {TLM3Defines.bsv 1174 8}}} {module TLM3Defines::mkTCounter {interface TLM3Defines::TCounter} {arguments Integer} {position {TLM3Defines.bsv 1190 8}}} {module TLM3Defines::mkSafeDepthParamSFIFO {interface {{TLM3Defines::SFIFO#(a, b)}}} {arguments UInt#(32)} {provisos {Eq#(a) Eq#(b) Bounded#(b) Arith#(b) {Bits#(b, sb)} {Bits#(a, sa)}}} {position {TLM3Defines.bsv 1212 8}}} {function TLM3Defines::fromSFIFO {result FIFO::FIFO#(a)} {arguments {{TLM3Defines::SFIFO#(a, b)}}} {position {TLM3Defines.bsv 1344 19}}} {function BusSwitch::reverseBusSwitchPath {result {{BusSwitch::BusSwitchPath#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusSwitch::BusSwitchPath#(id_size, addr_size, data_size, length_size, user_size)}}} {position {BusSwitch.bsv 30 35}}} {module BusSwitch::mkBusSwitch {interface {{BusSwitch::BusSwitch#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Vector::Vector#(send_count, BusDefines::BusSend#(a))} {Vector::Vector#(recv_count, BusDefines::BusRecv#(a))} Bool}} {provisos {{BusDefines::BusPayload#(a, Bit#(id_size))} {Bits#(a, sa)}}} {position {BusSwitch.bsv 44 8}}} {module TLM3BRAM::mkTLMBRAM {interface {{TLM3Defines::TLMRecvIFC#(reqt, respt)}}} {arguments {{BRAM::BRAMServer#(Bit#(anx), Bit#(dn))}}} {provisos {{TLM3Defines::TLMResponseTC#(respt, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(reqt, id_size, addr_size, data_size, length_size, user_size)} {Bits#(respt, sr)}}} {position {TLM3BRAM.bsv 18 8}}} {module TLM3BRAM::mkTLMBRAMBE {interface {{TLM3Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {{BRAM::BRAMServerBE#(Bit#(anx), Bit#(dn), nn)}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Div#(data_size, 8, byte_size)} {Bits#(resp_t, sr)}}} {position {TLM3BRAM.bsv 35 8}}} {function TLM3BRAM::convertBRAMType {result {{BRAM::BRAMServerBE#(TLM3Defines::TLMAddr#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMData#(id_size, addr_size, data_size, length_size, user_size), n)}}} {arguments {{BRAM::BRAMServerBE#(Bit#(an), Bit#(dn), nn)}}} {position {TLM3BRAM.bsv 103 10}}} {module TLM3CBusAdapter::mkTLMCBusAdapter {interface {{TLM3Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {{function Bit#(caddr_size) f(Bit#(addr_size) x1)} {TLM3CBusAdapter::TLMCBus#(id_size, addr_size, data_size, length_size, user_size, caddr_size)}}} {provisos {{Bits#(resp_t, s1)} {Add#(1, TMax#(TAdd#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10)))))))))))))), TAdd#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))))), s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3CBusAdapter.bsv 24 8}}} {module TLM3CBusAdapter::mkTLMCBusAdapterToReadWrite {interface {{TLM3Defines::TLMReadWriteRecvIFC#(req_t, resp_t)}}} {arguments {{function Bit#(caddr_size) f(Bit#(addr_size) x1)} {TLM3CBusAdapter::TLMCBus#(id_size, addr_size, data_size, length_size, user_size, caddr_size)}}} {provisos {{Bits#(resp_t, s1)} {Add#(1, TMax#(TAdd#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10)))))))))))))), TAdd#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))))), s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3CBusAdapter.bsv 82 8}}} {module TLM3FlowControl::mkTLMFlow {interface TLM3FlowControl::TLMFlow#(a)} {arguments UInt#(32)} {provisos {{Bits#(a, sa)} TLM3FlowControl::FlowPayload#(a)}} {position {TLM3FlowControl.bsv 63 8}}} {function TLM3FlowControl::paramLog {result UInt#(32)} {arguments UInt#(32)} {position {TLM3FlowControl.bsv 91 20}}} {module TLM3Limit::mkTLMLimitP {interface {{TLM3Defines::TLMTransformIFC#(req_t, resp_t)}}} {arguments {Integer UInt#(32)}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Limit.bsv 22 8}}} {module TLM3Limit::mkTLMLimitPInternal {interface {{TLM3Defines::TLMTransformIFC#(req_t, resp_t)}}} {arguments {Integer UInt#(32)}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Limit.bsv 36 8}}} {module TLM3Limit::mkTLMUnlimited {interface {{TLM3Defines::TLMTransformIFC#(req_t, resp_t)}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Limit.bsv 84 8}}} {module TLM3Limit::mkTLMLimitRequestFIFO {interface FIFO::FIFO#(a)} {arguments {Integer FIFO::FIFO#(Bool)}} {provisos {{TLM3Defines::TLMRequestTC#(a, id_size, addr_size, data_size, length_size, user_size)} {Bits#(a, sa)}}} {position {TLM3Limit.bsv 108 8}}} {module TLM3Limit::mkTLMLimitRequestFIFO0 {interface FIFO::FIFO#(a)} {arguments FIFO::FIFO#(Bool)} {provisos {{TLM3Defines::TLMRequestTC#(a, id_size, addr_size, data_size, length_size, user_size)} {Bits#(a, sa)}}} {position {TLM3Limit.bsv 237 8}}} {function TLM3Api::getRequestLength {result UInt#(16)} {arguments TLM3Api::TLMRequestHeader} {position {TLM3Api.bsv 74 19}}} {function TLM3Api::setRequestLength {result TLM3Api::TLMRequestHeader} {arguments {TLM3Api::TLMRequestHeader UInt#(16)}} {position {TLM3Api.bsv 79 27}}} {function TLM3Api::toTLMRequestHeader {result TLM3Api::TLMRequestHeader} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Api.bsv 126 27}}} {function TLM3Api::fromTLMRequestHeader {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments TLM3Api::TLMRequestHeader} {position {TLM3Api.bsv 162 39}}} {function TLM3Api::toTLMResponseHeader {result TLM3Api::TLMResponseHeader} {arguments {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Api.bsv 203 28}}} {function TLM3Api::fromTLMResponseHeader {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments TLM3Api::TLMResponseHeader} {position {TLM3Api.bsv 217 33}}} {function TLM3Api::hdrToChunks {result {{Vector::Vector#(2, TLM3Api::Chunk)}}} {arguments a} {provisos {{Bits#(a, sa)}}} {position {TLM3Api.bsv 239 28}}} {module TLM3Api::mkApiSender {interface {{TLM3Api::ApiSendIFC#(req_t, resp_t)}}} {provisos {{Add#(data_size, user_size, du_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(1, length_size, n)}}} {position {TLM3Api.bsv 264 8}}} {module TLM3Api::mkApiReceiver {interface {{TLM3Api::ApiRecvIFC#(req_t, resp_t)}}} {arguments UInt#(32)} {provisos {{Add#(data_size, user_size, du_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(1, length_size, n)}}} {position {TLM3Api.bsv 553 8}}} {function TLM3Api::checkSizes {result Bool} {arguments {Integer Integer Integer}} {position {TLM3Api.bsv 855 15}}} {module TLM3Api::mkCFIFO {interface TLM3Api::CFIFO#(a)} {arguments UInt#(32)} {provisos {Ord#(a) Literal#(a) Eq#(a) Arith#(a) {Bits#(a, sa)}}} {position {TLM3Api.bsv 886 8}}} {function TLM3Api::truncateLSBNP {result a} {arguments b} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {TLM3Api.bsv 935 12}}} {module TLM3Api::mkApiReceiverXL {interface {{TLM3Api::ApiRecvIFC#(req_t, resp_t)}}} {arguments {UInt#(32) Integer}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Api.bsv 947 8}}} {module TLM3Reduce::mkTLMReducer {interface {{TLM3Defines::TLMTransformIFC#(req_t, resp_t)}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Reduce.bsv 25 8}}} {module TLM3Reduce::mkTLMReducerP {interface {{TLM3Defines::TLMTransformIFC#(req_t, resp_t)}}} {arguments {Bool Bool}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(1, length_size, n)}}} {position {TLM3Reduce.bsv 35 8}}} {module TLM3Reduce::mkTLMSplit {interface {{TLM3Defines::TLMReadWriteSendIFC#(req_t, resp_t)}}} {arguments {UInt#(32) {TLM3Defines::TLMSendIFC#(req_t, resp_t)}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Reduce.bsv 185 8}}} {module TLM3Reduce::mkTLMJoin {interface {{TLM3Defines::TLMReadWriteRecvIFC#(req_t, resp_t)}}} {arguments {{TLM3Defines::TLMRecvIFC#(req_t, resp_t)}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Reduce.bsv 286 8}}} {function TLM3Utils::createBasicRequestDescriptor {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Utils.bsv 22 39}}} {function TLM3Utils::createBasicTLMResponse {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Utils.bsv 37 33}}} {function TLM3Utils::createTLMBitMask {result Bit#(data_size)} {arguments {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Utils.bsv 47 26}}} {function TLM3Utils::maskTLMData {result Bit#(data_size)} {arguments {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} Bit#(data_size)}} {position {TLM3Utils.bsv 61 26}}} {function TLM3Utils::overwriteTLMData {result Bit#(data_size)} {arguments {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} Bit#(data_size) Bit#(data_size)}} {provisos {{Div#(data_size, 8, b)}}} {position {TLM3Utils.bsv 71 18}}} {module TLM3Ram::mkTLMRam_unbuffered {interface {{TLM3Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(2, TAdd#(data_size, TAdd#(2, TAdd#(user_size, TAdd#(4, TAdd#(id_size, 1))))), s1)} {Add#(1, TMax#(TAdd#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10)))))))))))))), TAdd#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))))), s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Ram.bsv 25 8}}} {module TLM3Ram::mkTLMRamX {interface {{TLM3Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(2, TAdd#(data_size, TAdd#(2, TAdd#(user_size, TAdd#(4, TAdd#(id_size, 1))))), s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Ram.bsv 99 8}}} {module TLM3Ram::mkTLMRam {interface {{TLM3Defines::TLMRecvIFC#(req_t, resp_t)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(2, TAdd#(data_size, TAdd#(2, TAdd#(user_size, TAdd#(4, TAdd#(id_size, 1))))), s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Ram.bsv 112 8}}} {module TLM3ReadWriteRam::mkTLMReadWriteRam {interface {{TLM3Defines::TLMReadWriteRecvIFC#(req_t, resp_t)}}} {arguments {Bit#(4) Bool}} {provisos {{Add#(2, TAdd#(data_size, TAdd#(2, TAdd#(user_size, TAdd#(4, TAdd#(id_size, 1))))), s1)} {Add#(1, TMax#(TAdd#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10)))))))))))))), TAdd#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))))), s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3ReadWriteRam.bsv 26 8}}} {module TLM3Reorder::mkTLMReorder1 {interface {{TLM3Reorder::TLMReorder#(1, ln, req_t, resp_t)}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {TLM3Reorder.bsv 33 8}}} {module TLM3Reorder::mkTLMReorderP {interface {{TLM3Reorder::TLMReorder#(m, ln, req_t, resp_t)}}} {provisos {FShow#(resp_t) {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {TLM3Reorder.bsv 52 8}}}

{module TLM3Defines::mkTLMRandomizer {interface Randomizable::Randomize#(a)} {arguments Maybe#(TLM3Defines::TLMCommand)} {provisos {{Add#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))), s1)} {Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), s0)} {TLM3Defines::TLMRequestTC#(a, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 232 8}}} {module TLM3Defines::mkTLMSource {interface {{TLM3Defines::TLMSendIFC#(req_t, resp_t)}}} {arguments {Maybe#(TLM3Defines::TLMCommand) Bool}} {provisos {{Bits#(resp_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 358 8}}} {module TLM3Defines::mkTLMSourceStd {interface {{TLM3Defines::TLMSendIFC#(TLM3Defines::TLMRequestStd, TLM3Defines::TLMResponseStd)}}} {arguments {Maybe#(TLM3Defines::TLMCommand) Bool}} {position {TLM3Defines.bsv 394 8}}} {module TLM3Defines::mkTLM2Source {interface {{TLM3Defines::TLMSendIFC#(TLM3Defines::TLMRequestStd, TLM3Defines::TLMResponseStd)}}} {arguments {Maybe#(TLM3Defines::TLMCommand) Bool}} {position {TLM3Defines.bsv 425 8}}} {function TLM3Defines::getTLMCycleCount {result {{TLM3Defines::TLMBLength#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 459 32}}} {function TLM3Defines::getTLMIncr {result Bit#(n)} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{Add#(TLog#(TDiv#(data_size, 8)), 1, n)}}} {position {TLM3Defines.bsv 466 18}}} {function TLM3Defines::getTLMByteEn {result {{TLM3Defines::TLMByteEn#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 475 31}}} {function TLM3Defines::getTLMByteEnU {result {{TLM3Defines::TLMByteEn#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 480 31}}} {function TLM3Defines::getTLMByteEnL {result {{TLM3Defines::TLMByteEn#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 485 31}}} {function TLM3Defines::getTLMByteEnUL {result {{TLM3Defines::TLMByteEn#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 504 31}}} {function TLM3Defines::incrTLMAddr {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 535 39}}} {function TLM3Defines::countLSBZeros {result {{Bit#(TLog#(TAdd#(n, 1)))}}} {arguments Bit#(n)} {position {TLM3Defines.bsv 553 34}}} {function TLM3Defines::getTLMData {result {{TLM3Defines::TLMData#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 563 29}}} {function TLM3Defines::incrTLMAddrN {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Integer {TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 574 39}}} {function TLM3Defines::fshowBurstMode {result Fmt} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 617 14}}} {function TLM3Defines::alwaysAddrMatch {result Bool} {arguments a} {position {TLM3Defines.bsv 848 15}}} {function TLM3Defines::addByteEnable {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 852 39}}} {function TLM3Defines::addByteEnableU {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 859 39}}} {function TLM3Defines::alignAddress {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 866 39}}} {function TLM3Defines::isValidRequest {result Bool} {arguments {{TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size)} TLM3Defines::TLMFamily}} {position {TLM3Defines.bsv 965 15}}} {function TLM3Defines::isValidResponse {result Bool} {arguments {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)} TLM3Defines::TLMFamily}} {position {TLM3Defines.bsv 969 15}}} {module TLM3Defines::wrapFIFO {interface FIFO::FIFO#(a)} {arguments FIFO::FIFO#(a)} {position {TLM3Defines.bsv 973 8}}} {module TLM3Defines::wrapFIFOF {interface FIFOF::FIFOF#(a)} {arguments FIFOF::FIFOF#(a)} {position {TLM3Defines.bsv 1005 8}}} {function TLM3Defines::getMaxBSize {result TLM3Defines::TLMBSize} {arguments Integer} {position {TLM3Defines.bsv 1052 19}}} {module TLM3Defines::mkSafeDepthParamFIFO {interface FIFO::FIFO#(a)} {arguments UInt#(32)} {provisos {{Bits#(a, sa)}}} {position {TLM3Defines.bsv 1069 8}}} {module TLM3Defines::mkSafeDepthParamFIFOF {interface FIFOF::FIFOF#(a)} {arguments UInt#(32)} {provisos {{Bits#(a, sa)}}} {position {TLM3Defines.bsv 1076 8}}} {module TLM3Defines::mkSizedSFIFO {interface {{TLM3Defines::SFIFO#(a, b)}}} {arguments Integer} {provisos {Eq#(b) Arith#(b) {Bits#(b, sb)} {Bits#(a, sa)}}} {position {TLM3Defines.bsv 1094 8}}} {module TLM3Defines::mkTCtr {interface TLM3Defines::TCounter} {arguments Reg#(UInt#(s))} {position {TLM3Defines.bsv 1174 8}}} {module TLM3Defines::mkTCounter {interface TLM3Defines::TCounter} {arguments Integer} {position {TLM3Defines.bsv 1190 8}}} {module TLM3Defines::mkSafeDepthParamSFIFO {interface {{TLM3Defines::SFIFO#(a, b)}}} {arguments UInt#(32)} {provisos {Eq#(a) Eq#(b) Bounded#(b) Arith#(b) {Bits#(b, sb)} {Bits#(a, sa)}}} {position {TLM3Defines.bsv 1212 8}}} {function TLM3Defines::fromSFIFO {result FIFO::FIFO#(a)} {arguments {{TLM3Defines::SFIFO#(a, b)}}} {position {TLM3Defines.bsv 1344 19}}}

{module TLM3FlowControl::mkTLMFlow {interface TLM3FlowControl::TLMFlow#(a)} {arguments UInt#(32)} {provisos {{Bits#(a, sa)} TLM3FlowControl::FlowPayload#(a)}} {position {TLM3FlowControl.bsv 63 8}}} {function TLM3FlowControl::paramLog {result UInt#(32)} {arguments UInt#(32)} {position {TLM3FlowControl.bsv 91 20}}}

{module TLM3Reduce::mkTLMReducer {interface {{TLM3Defines::TLMTransformIFC#(req_t, resp_t)}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Reduce.bsv 25 8}}} {module TLM3Reduce::mkTLMReducerP {interface {{TLM3Defines::TLMTransformIFC#(req_t, resp_t)}}} {arguments {Bool Bool}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(1, length_size, n)}}} {position {TLM3Reduce.bsv 35 8}}} {module TLM3Reduce::mkTLMSplit {interface {{TLM3Defines::TLMReadWriteSendIFC#(req_t, resp_t)}}} {arguments {UInt#(32) {TLM3Defines::TLMSendIFC#(req_t, resp_t)}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Reduce.bsv 185 8}}} {module TLM3Reduce::mkTLMJoin {interface {{TLM3Defines::TLMReadWriteRecvIFC#(req_t, resp_t)}}} {arguments {{TLM3Defines::TLMRecvIFC#(req_t, resp_t)}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Reduce.bsv 286 8}}}

{module TLM3Limit::mkTLMLimitP {interface {{TLM3Defines::TLMTransformIFC#(req_t, resp_t)}}} {arguments {Integer UInt#(32)}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Limit.bsv 22 8}}} {module TLM3Limit::mkTLMLimitPInternal {interface {{TLM3Defines::TLMTransformIFC#(req_t, resp_t)}}} {arguments {Integer UInt#(32)}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Limit.bsv 36 8}}} {module TLM3Limit::mkTLMUnlimited {interface {{TLM3Defines::TLMTransformIFC#(req_t, resp_t)}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Limit.bsv 84 8}}} {module TLM3Limit::mkTLMLimitRequestFIFO {interface FIFO::FIFO#(a)} {arguments {Integer FIFO::FIFO#(Bool)}} {provisos {{TLM3Defines::TLMRequestTC#(a, id_size, addr_size, data_size, length_size, user_size)} {Bits#(a, sa)}}} {position {TLM3Limit.bsv 108 8}}} {module TLM3Limit::mkTLMLimitRequestFIFO0 {interface FIFO::FIFO#(a)} {arguments FIFO::FIFO#(Bool)} {provisos {{TLM3Defines::TLMRequestTC#(a, id_size, addr_size, data_size, length_size, user_size)} {Bits#(a, sa)}}} {position {TLM3Limit.bsv 237 8}}}

{module TokenBuffer::mkTokenBuffer {interface {{TokenBuffer::TokenBuffer#(m, ln, a)}}} {provisos {{Add#(m, 1, m1)} Eq#(a) {Bits#(a, sa)}}} {position {TokenBuffer.bsv 24 8}}}

{function TLM3Utils::createBasicRequestDescriptor {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Utils.bsv 22 39}}} {function TLM3Utils::createBasicTLMResponse {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Utils.bsv 37 33}}} {function TLM3Utils::createTLMBitMask {result Bit#(data_size)} {arguments {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Utils.bsv 47 26}}} {function TLM3Utils::maskTLMData {result Bit#(data_size)} {arguments {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} Bit#(data_size)}} {position {TLM3Utils.bsv 61 26}}} {function TLM3Utils::overwriteTLMData {result Bit#(data_size)} {arguments {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} Bit#(data_size) Bit#(data_size)}} {provisos {{Div#(data_size, 8, b)}}} {position {TLM3Utils.bsv 71 18}}}


{module AhbToAhbBridge::mkAhbToAhbBridgeWM {interface {{AhbToAhbBridge::AhbToAhbBridge#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AhbToAhbBridge.bsv 41 8}}}

{module AhbBus::mkAhbBus {interface {{AhbDefines::AhbBus#(m, s, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bit#(s2) f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{Add#(s, 1, s2)}}} {position {AhbBus.bsv 25 8}}} {module AhbBus::mkAhbBusEBT {interface {{AhbDefines::AhbBus#(m, s, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bit#(s2) f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{Add#(s, 1, s2)}}} {position {AhbBus.bsv 32 8}}} {module AhbBus::mkAhbBusP {interface {{AhbDefines::AhbBus#(m, s, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bit#(s2) f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)} Bool {function _m__#(AhbDefines::AhbArbiter#(m, id_size, addr_size, data_size, length_size, user_size)) f(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{Add#(s, 1, s2)}}} {position {AhbBus.bsv 39 8}}} {module AhbBus::mkAhbXtorMasterConnector {interface {{AhbDefines::AhbXtorMasterConnector#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbBus.bsv 90 8}}} {module AhbBus::mkAhbXtorSlaveConnector {interface {{AhbDefines::AhbXtorSlaveConnector#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {position {AhbBus.bsv 157 8}}} {module AhbBus::mkAhbBusFabric {interface Empty} {arguments {{Vector::Vector#(master_count, AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {Vector::Vector#(slv_count, AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))} Bool {function _m__#(AhbDefines::AhbArbiter#(master_count, id_size, addr_size, data_size, length_size, user_size)) f(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{Add#(slv_count, 1, slave_count)}}} {position {AhbBus.bsv 232 8}}} {module AhbBus::getCurrentSlave {interface ReadOnly#(AhbDefines::LBit#(slave_count))} {arguments {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} {Vector::Vector#(slave_count, AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))} Bool}} {position {AhbBus.bsv 385 8}}} {function AhbBus::getCurrentSlaveVector {result {{Vector::Vector#(slave_count, Bool)}}} {arguments {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} {Vector::Vector#(slave_count, AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))} Bool}} {position {AhbBus.bsv 403 37}}} {function AhbBus::selectSlave {result AhbDefines::LBit#(slave_count)} {arguments {{Vector::Vector#(slave_count, AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))} {AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbBus.bsv 431 29}}} {function AhbBus::selectQualified {result a} {arguments {{Vector::Vector#(n, Bool)} {Vector::Vector#(n, a)}}} {provisos {{Add#(1, ignore, n)} {Bits#(a, sa)}}} {position {AhbBus.bsv 451 12}}}

{module AhbSlave::mkAhbSlaveIFC {interface {{AhbSlave::AhbSlaveIFC#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments Bool} {position {AhbSlave.bsv 39 8}}} {module AhbSlave::mkAhbSlaveWM {interface {{AhbDefines::AhbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AhbSlave.bsv 127 8}}} {module AhbSlave::mkAhbSlave {interface {{AhbDefines::AhbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AhbSlave.bsv 148 8}}} {module AhbSlave::mkAhbSlaveKB {interface {{AhbDefines::AhbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AhbSlave.bsv 160 8}}} {module AhbSlave::mkAhbSlaveP {interface {{AhbDefines::AhbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool Bool Bool Bool FIFOF::FIFOF#(resp_t) FIFOF::FIFOF#(req_t)}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s0)}}} {position {AhbSlave.bsv 172 8}}} {module AhbSlave::mkAhbSlaveUnmapped {interface {{AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbSlave.bsv 419 8}}} {module AhbSlave::mkAhbSlaveDummy {interface {{AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbSlave.bsv 448 8}}} {module AhbSlave::mkAhbSlaveDead {interface {{AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbSlave.bsv 510 8}}} {module AhbSlave::mkMFIFO {interface AhbSlave::MFIFO#(a)} {provisos {Eq#(a) Arith#(a) {Bits#(a, sa)}}} {position {AhbSlave.bsv 558 8}}} {module AhbSlave::mkBypassMFIFO {interface AhbSlave::MFIFO#(a)} {provisos {Ord#(a) Eq#(a) Arith#(a) {Bits#(a, sa)}}} {position {AhbSlave.bsv 599 8}}} {module AhbSlave::mkMFIFO2 {interface {{AhbSlave::MFIFO2#(a, b)}}} {provisos {Eq#(a) Arith#(a) {Bits#(b, sb)} {Bits#(a, sa)}}} {position {AhbSlave.bsv 647 8}}}

{module AhbPC::mkAhbMasterPC {interface {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbPC.bsv 16 8}}} {module AhbPC::mkAhbSlavePC {interface {{AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbPC.bsv 101 8}}} {module AhbPC::mkAhbPC {interface {{AhbPC::AhbPC_Ifc#(id_size, _sn1, _sn0, length_size, user_size)}}} {arguments AhbPC::AhbPCPrms} {position {AhbPC.bsv 292 8}}}

{module Arbiter::mkArbiter {interface Arbiter::Arbiter_IFC#(count)} {arguments Bool} {position {%/Libraries/Arbiter.bsv 34 8 {Library Arbiter}}}} {module Arbiter::mkStickyArbiter {interface Arbiter::Arbiter_IFC#(count)} {position {%/Libraries/Arbiter.bsv 124 8 {Library Arbiter}}}} {module Arbiter::mkHoldArbiter {interface Arbiter::Arbiter_IFC#(count)} {position {%/Libraries/Arbiter.bsv 226 8 {Library Arbiter}}}} {function Arbiter::isTrue {result Bool} {arguments Bool} {position {%/Libraries/Arbiter.bsv 315 15 {Library Arbiter}}}} {module AhbArbiterSupport::mkAhbArbiter {interface {{AhbDefines::AhbArbiter#(count, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbArbiterSupport.bsv 18 8}}} {module AhbArbiterSupport::mkAhbMasterMonitor {interface AhbArbiterSupport::AhbMonitor} {arguments {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbArbiterSupport.bsv 171 8}}} {function AhbArbiterSupport::isFirst {result Bool} {arguments AhbDefines::AhbTransfer} {position {AhbArbiterSupport.bsv 242 15}}} {module AhbArbiterSupport::mkAhbResponseHandler {interface AhbDefines::AhbResponseHandler} {arguments UInt#(16)} {position {AhbArbiterSupport.bsv 252 8}}}

{module Arbiter::mkArbiter {interface Arbiter::Arbiter_IFC#(count)} {arguments Bool} {position {%/Libraries/Arbiter.bsv 34 8 {Library Arbiter}}}} {module Arbiter::mkStickyArbiter {interface Arbiter::Arbiter_IFC#(count)} {position {%/Libraries/Arbiter.bsv 124 8 {Library Arbiter}}}} {module Arbiter::mkHoldArbiter {interface Arbiter::Arbiter_IFC#(count)} {position {%/Libraries/Arbiter.bsv 226 8 {Library Arbiter}}}} {function Arbiter::isTrue {result Bool} {arguments Bool} {position {%/Libraries/Arbiter.bsv 315 15 {Library Arbiter}}}} {function AhbDefines::fromAhbMastCtrl {result {{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbMastCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 84 29}}} {function AhbDefines::toAhbMastCtrl {result {{AhbDefines::AhbMastCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 95 33}}} {function AhbDefines::getAhbCtrl {result {{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 699 29}}} {function AhbDefines::getAhbWrite {result AhbDefines::AhbWrite} {arguments TLM3Defines::TLMCommand} {position {AhbDefines.bsv 720 19}}} {function AhbDefines::getAhbBurst {result AhbDefines::AhbBurst} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 727 19}}} {function AhbDefines::getAhbSize {result AhbDefines::AhbSize} {arguments TLM3Defines::TLMBSize} {position {AhbDefines.bsv 745 18}}} {function AhbDefines::getAhbCycleCount {result Integer} {arguments AhbDefines::AhbBurst} {position {AhbDefines.bsv 749 18}}} {function AhbDefines::getAhbData {result {{AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 759 29}}} {function AhbDefines::fromAhbCtrl {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 771 39}}} {function AhbDefines::fromAhbWrite {result TLM3Defines::TLMCommand} {arguments AhbDefines::AhbWrite} {position {AhbDefines.bsv 811 21}}} {function AhbDefines::fromAhbResp {result TLM3Defines::TLMStatus} {arguments AhbDefines::AhbResp} {position {AhbDefines.bsv 818 20}}} {function AhbDefines::fromAhbSize {result TLM3Defines::TLMBSize} {arguments AhbDefines::AhbSize} {position {AhbDefines.bsv 828 19}}} {function AhbDefines::fromAhbBurst {result {{Tuple2#(TLM3Defines::TLMBurstMode, UInt#(n))}}} {arguments {AhbDefines::AhbBurst AhbDefines::AhbTransfer}} {position {AhbDefines.bsv 832 42}}} {function AhbDefines::addAddrMatch {result {{AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)} {AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 920 36}}} {function AhbDefines::toAhbTbCtrl {result {{AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 980 31}}} {function AhbDefines::fromAhbTbCtrl {result {{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 991 29}}} {module AhbArbiterSupport::mkAhbArbiter {interface {{AhbDefines::AhbArbiter#(count, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbArbiterSupport.bsv 18 8}}} {module AhbArbiterSupport::mkAhbMasterMonitor {interface AhbArbiterSupport::AhbMonitor} {arguments {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbArbiterSupport.bsv 171 8}}} {function AhbArbiterSupport::isFirst {result Bool} {arguments AhbDefines::AhbTransfer} {position {AhbArbiterSupport.bsv 242 15}}} {module AhbArbiterSupport::mkAhbResponseHandler {interface AhbDefines::AhbResponseHandler} {arguments UInt#(16)} {position {AhbArbiterSupport.bsv 252 8}}} {module AhbMaster::mkAhbMasterIFC {interface {{AhbMaster::AhbMasterIFC#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool AhbMaster::EBTMode}} {position {AhbMaster.bsv 44 8}}} {module AhbMaster::mkAhbMaster {interface {{AhbDefines::AhbMasterXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments UInt#(32)} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AhbMaster.bsv 125 8}}} {function AhbMaster::assertLock {result Bool} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbMaster.bsv 471 15}}} {module AhbMaster::mkAHBMasterDummy {interface {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbMaster.bsv 477 8}}} {module AhbPC::mkAhbMasterPC {interface {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbPC.bsv 16 8}}} {module AhbPC::mkAhbSlavePC {interface {{AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbPC.bsv 101 8}}} {module AhbPC::mkAhbPC {interface {{AhbPC::AhbPC_Ifc#(id_size, _sn1, _sn0, length_size, user_size)}}} {arguments AhbPC::AhbPCPrms} {position {AhbPC.bsv 292 8}}} {module AhbSlave::mkAhbSlaveIFC {interface {{AhbSlave::AhbSlaveIFC#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments Bool} {position {AhbSlave.bsv 39 8}}} {module AhbSlave::mkAhbSlaveWM {interface {{AhbDefines::AhbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AhbSlave.bsv 127 8}}} {module AhbSlave::mkAhbSlave {interface {{AhbDefines::AhbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AhbSlave.bsv 148 8}}} {module AhbSlave::mkAhbSlaveKB {interface {{AhbDefines::AhbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AhbSlave.bsv 160 8}}} {module AhbSlave::mkAhbSlaveP {interface {{AhbDefines::AhbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool Bool Bool Bool FIFOF::FIFOF#(resp_t) FIFOF::FIFOF#(req_t)}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s0)}}} {position {AhbSlave.bsv 172 8}}} {module AhbSlave::mkAhbSlaveUnmapped {interface {{AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbSlave.bsv 419 8}}} {module AhbSlave::mkAhbSlaveDummy {interface {{AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbSlave.bsv 448 8}}} {module AhbSlave::mkAhbSlaveDead {interface {{AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbSlave.bsv 510 8}}} {module AhbSlave::mkMFIFO {interface AhbSlave::MFIFO#(a)} {provisos {Eq#(a) Arith#(a) {Bits#(a, sa)}}} {position {AhbSlave.bsv 558 8}}} {module AhbSlave::mkBypassMFIFO {interface AhbSlave::MFIFO#(a)} {provisos {Ord#(a) Eq#(a) Arith#(a) {Bits#(a, sa)}}} {position {AhbSlave.bsv 599 8}}} {module AhbSlave::mkMFIFO2 {interface {{AhbSlave::MFIFO2#(a, b)}}} {provisos {Eq#(a) Arith#(a) {Bits#(b, sb)} {Bits#(a, sa)}}} {position {AhbSlave.bsv 647 8}}} {module AhbBus::mkAhbBus {interface {{AhbDefines::AhbBus#(m, s, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bit#(s2) f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{Add#(s, 1, s2)}}} {position {AhbBus.bsv 25 8}}} {module AhbBus::mkAhbBusEBT {interface {{AhbDefines::AhbBus#(m, s, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bit#(s2) f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{Add#(s, 1, s2)}}} {position {AhbBus.bsv 32 8}}} {module AhbBus::mkAhbBusP {interface {{AhbDefines::AhbBus#(m, s, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bit#(s2) f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)} Bool {function _m__#(AhbDefines::AhbArbiter#(m, id_size, addr_size, data_size, length_size, user_size)) f(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{Add#(s, 1, s2)}}} {position {AhbBus.bsv 39 8}}} {module AhbBus::mkAhbXtorMasterConnector {interface {{AhbDefines::AhbXtorMasterConnector#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbBus.bsv 90 8}}} {module AhbBus::mkAhbXtorSlaveConnector {interface {{AhbDefines::AhbXtorSlaveConnector#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {position {AhbBus.bsv 157 8}}} {module AhbBus::mkAhbBusFabric {interface Empty} {arguments {{Vector::Vector#(master_count, AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {Vector::Vector#(slv_count, AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))} Bool {function _m__#(AhbDefines::AhbArbiter#(master_count, id_size, addr_size, data_size, length_size, user_size)) f(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{Add#(slv_count, 1, slave_count)}}} {position {AhbBus.bsv 232 8}}} {module AhbBus::getCurrentSlave {interface ReadOnly#(AhbDefines::LBit#(slave_count))} {arguments {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} {Vector::Vector#(slave_count, AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))} Bool}} {position {AhbBus.bsv 385 8}}} {function AhbBus::getCurrentSlaveVector {result {{Vector::Vector#(slave_count, Bool)}}} {arguments {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} {Vector::Vector#(slave_count, AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))} Bool}} {position {AhbBus.bsv 403 37}}} {function AhbBus::selectSlave {result AhbDefines::LBit#(slave_count)} {arguments {{Vector::Vector#(slave_count, AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))} {AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbBus.bsv 431 29}}} {function AhbBus::selectQualified {result a} {arguments {{Vector::Vector#(n, Bool)} {Vector::Vector#(n, a)}}} {provisos {{Add#(1, ignore, n)} {Bits#(a, sa)}}} {position {AhbBus.bsv 451 12}}} {module AhbToAhbBridge::mkAhbToAhbBridgeWM {interface {{AhbToAhbBridge::AhbToAhbBridge#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AhbToAhbBridge.bsv 41 8}}}

{module AhbMaster::mkAhbMasterIFC {interface {{AhbMaster::AhbMasterIFC#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool AhbMaster::EBTMode}} {position {AhbMaster.bsv 44 8}}} {module AhbMaster::mkAhbMaster {interface {{AhbDefines::AhbMasterXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments UInt#(32)} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {AhbMaster.bsv 125 8}}} {function AhbMaster::assertLock {result Bool} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbMaster.bsv 471 15}}} {module AhbMaster::mkAHBMasterDummy {interface {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbMaster.bsv 477 8}}}

{module AhbArbiterSupport::mkAhbArbiter {interface {{AhbDefines::AhbArbiter#(count, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbArbiterSupport.bsv 18 8}}} {module AhbArbiterSupport::mkAhbMasterMonitor {interface AhbArbiterSupport::AhbMonitor} {arguments {{AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbArbiterSupport.bsv 171 8}}} {function AhbArbiterSupport::isFirst {result Bool} {arguments AhbDefines::AhbTransfer} {position {AhbArbiterSupport.bsv 242 15}}} {module AhbArbiterSupport::mkAhbResponseHandler {interface AhbDefines::AhbResponseHandler} {arguments UInt#(16)} {position {AhbArbiterSupport.bsv 252 8}}}

{function AhbDefines::fromAhbMastCtrl {result {{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbMastCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 84 29}}} {function AhbDefines::toAhbMastCtrl {result {{AhbDefines::AhbMastCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 95 33}}} {function AhbDefines::getAhbCtrl {result {{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 699 29}}} {function AhbDefines::getAhbWrite {result AhbDefines::AhbWrite} {arguments TLM3Defines::TLMCommand} {position {AhbDefines.bsv 720 19}}} {function AhbDefines::getAhbBurst {result AhbDefines::AhbBurst} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 727 19}}} {function AhbDefines::getAhbSize {result AhbDefines::AhbSize} {arguments TLM3Defines::TLMBSize} {position {AhbDefines.bsv 745 18}}} {function AhbDefines::getAhbCycleCount {result Integer} {arguments AhbDefines::AhbBurst} {position {AhbDefines.bsv 749 18}}} {function AhbDefines::getAhbData {result {{AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 759 29}}} {function AhbDefines::fromAhbCtrl {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 771 39}}} {function AhbDefines::fromAhbWrite {result TLM3Defines::TLMCommand} {arguments AhbDefines::AhbWrite} {position {AhbDefines.bsv 811 21}}} {function AhbDefines::fromAhbResp {result TLM3Defines::TLMStatus} {arguments AhbDefines::AhbResp} {position {AhbDefines.bsv 818 20}}} {function AhbDefines::fromAhbSize {result TLM3Defines::TLMBSize} {arguments AhbDefines::AhbSize} {position {AhbDefines.bsv 828 19}}} {function AhbDefines::fromAhbBurst {result {{Tuple2#(TLM3Defines::TLMBurstMode, UInt#(n))}}} {arguments {AhbDefines::AhbBurst AhbDefines::AhbTransfer}} {position {AhbDefines.bsv 832 42}}} {function AhbDefines::addAddrMatch {result {{AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)} {AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 920 36}}} {function AhbDefines::toAhbTbCtrl {result {{AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 980 31}}} {function AhbDefines::fromAhbTbCtrl {result {{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {position {AhbDefines.bsv 991 29}}}

{function Axi4Defines::fromAxi4RdResp {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Defines.bsv 121 33}}} {function Axi4Defines::fromAxi4WrResp {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Defines.bsv 152 33}}} {function Axi4Defines::getAxi4AddrCmd {result {{Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Defines.bsv 674 33}}} {function Axi4Defines::getAxi4WrData {result {{Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Defines.bsv 704 32}}} {function Axi4Defines::getAxi4Len {result Axi4Defines::Axi4Len} {arguments {{TLM3Defines::TLMBLength#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Defines.bsv 715 18}}} {function Axi4Defines::getAxi4Lock {result Axi4Defines::Axi4Lock} {arguments TLM3Defines::TLMLock} {position {Axi4Defines.bsv 719 19}}} {function Axi4Defines::fromAxi4AddrCmd {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), s0)}}} {position {Axi4Defines.bsv 727 39}}} {function Axi4Defines::fromAxi4Len {result {{TLM3Defines::TLMBLength#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments Axi4Defines::Axi4Len} {position {Axi4Defines.bsv 758 32}}} {function Axi4Defines::fromAxi4Qos {result TLM3Defines::TLMQos} {arguments Axi4Defines::Axi4Qos} {position {Axi4Defines.bsv 762 17}}} {function Axi4Defines::fromAxi4Lock {result TLM3Defines::TLMLock} {arguments Axi4Defines::Axi4Lock} {position {Axi4Defines.bsv 766 18}}} {function Axi4LDefines::nop {result Action} {arguments a} {position {Axi4LDefines.bsv 57 17}}} {function Axi4LDefines::getAxi4LAddrCmd {result {{Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LDefines.bsv 321 34}}} {function Axi4LDefines::getAxi4LWrData {result {{Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LDefines.bsv 336 33}}} {function Axi4LDefines::fromAxi4LAddrCmd {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), s0)}}} {position {Axi4LDefines.bsv 349 39}}} {function Axi4LDefines::fromAxi4LRdResp {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LDefines.bsv 374 33}}} {module Axi4LMaster::mkAxi4LRdMasterIFC {interface {{Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4LMaster.bsv 26 8}}} {module Axi4LMaster::mkAxi4LWrMasterIFC {interface {{Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} BusDefines::BusRecv#(AxiDefines::AxiResp)}} {position {Axi4LMaster.bsv 56 8}}} {module Axi4LMaster::mkAxi4LRdBusMasterIFC {interface {{Axi4LDefines::Axi4LRdBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LMaster.bsv 93 8}}} {module Axi4LMaster::mkAxi4LWrBusMasterIFC {interface {{Axi4LDefines::Axi4LWrBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LMaster.bsv 115 8}}} {module Axi4LMaster::mkAxi4LRdMaster {interface {{Axi4LDefines::Axi4LRdMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments UInt#(32)} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4LMaster.bsv 150 8}}} {module Axi4LMaster::mkAxi4LWrMaster {interface {{Axi4LDefines::Axi4LWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4LMaster.bsv 219 8}}} {module Axi4LMaster::mkAxi4LWrMasterP {interface {{Axi4LDefines::Axi4LWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool {BusDefines::BusSender#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSender#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4LMaster.bsv 234 8}}} {module Axi4LMaster::mkAxi4LRdWrMaster {interface {{Axi4LDefines::Axi4LRdWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4LMaster.bsv 313 8}}} {module Axi4LPC::mkAxi4LRdMasterPC {interface {{Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4LPC::Axi4LPCParams {Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LPC.bsv 18 8}}} {module Axi4LPC::mkAxi4LRdSlavePC {interface {{Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4LPC::Axi4LPCParams {Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LPC.bsv 100 8}}} {module Axi4LPC::mkAxi4LWrMasterPC {interface {{Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4LPC::Axi4LPCParams {Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LPC.bsv 185 8}}} {module Axi4LPC::mkAxi4LWrSlavePC {interface {{Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4LPC::Axi4LPCParams {Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LPC.bsv 273 8}}} {module Axi4LPC::mkAxi4LPC {interface {{Axi4LPC::Axi4LPC_Ifc#(id_size, _sn2, _sn1, length_size, user_size)}}} {arguments Axi4LPC::Axi4LPCParams} {position {Axi4LPC.bsv 428 8}}} {module Axi4LSlave::mkAxi4LRdSlaveIFC {interface {{Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4LSlave.bsv 26 8}}} {module Axi4LSlave::mkAxi4LWrSlaveIFC {interface {{Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} BusDefines::BusSend#(AxiDefines::AxiResp)}} {position {Axi4LSlave.bsv 56 8}}} {module Axi4LSlave::mkAxi4LRdBusSlaveIFC {interface {{Axi4LDefines::Axi4LRdBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LSlave.bsv 101 8}}} {module Axi4LSlave::mkAxi4LWrBusSlaveIFC {interface {{Axi4LDefines::Axi4LWrBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LSlave.bsv 123 8}}} {module Axi4LSlave::mkAxi4LRdSlave {interface {{Axi4LDefines::Axi4LRdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4LSlave.bsv 155 8}}} {module Axi4LSlave::mkAxi4LRdSlaveSynth {interface {{Axi4LDefines::Axi4LRdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4LSlave.bsv 172 8}}} {module Axi4LSlave::mkAxi4LWrSlave {interface {{Axi4LDefines::Axi4LWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4LSlave.bsv 223 8}}} {module Axi4LSlave::mkAxi4LWrSlaveSynth {interface {{Axi4LDefines::Axi4LWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4LSlave.bsv 240 8}}} {module Axi4LSlave::mkAxi4LWrSlaveSynthP {interface {{Axi4LDefines::Axi4LWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusReceiver#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusReceiver#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4LSlave.bsv 254 8}}} {module Axi4LSlave::mkAxi4LRdWrSlave {interface {{Axi4LDefines::Axi4LRdWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(Bit#(addr_size) x1)}}} {provisos {{Bits#(req_t, s0)} {Bits#(resp_t, s1)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {Axi4LSlave.bsv 300 8}}} {module Axi4Master::mkAxi4RdMasterIFC {interface {{Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4Master.bsv 28 8}}} {module Axi4Master::mkAxi4WrMasterIFC {interface {{Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4Master.bsv 75 8}}} {module Axi4Master::mkAxi4RdBusMasterIFC {interface {{Axi4Defines::Axi4RdBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Master.bsv 125 8}}} {module Axi4Master::mkAxi4WrBusMasterIFC {interface {{Axi4Defines::Axi4WrBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Master.bsv 158 8}}} {module Axi4Master::mkAxi4RdMaster {interface {{Axi4Defines::Axi4RdMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments UInt#(32)} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4Master.bsv 205 8}}} {module Axi4Master::mkAxi4WrMaster {interface {{Axi4Defines::Axi4WrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4Master.bsv 265 8}}} {module Axi4Master::mkAxi4WrMasterP {interface {{Axi4Defines::Axi4WrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool {BusDefines::BusSender#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSender#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4Master.bsv 281 8}}} {module Axi4Master::mkAxi4RdWrMaster {interface {{Axi4Defines::Axi4RdWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4Master.bsv 368 8}}} {module Axi4PC::mkAxi4RdMasterPC {interface {{Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4PC::Axi4PCParams {Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4PC.bsv 18 8}}} {module Axi4PC::mkAxi4RdSlavePC {interface {{Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4PC::Axi4PCParams {Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4PC.bsv 157 8}}} {module Axi4PC::mkAxi4WrMasterPC {interface {{Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4PC::Axi4PCParams {Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4PC.bsv 319 8}}} {module Axi4PC::mkAxi4WrSlavePC {interface {{Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4PC::Axi4PCParams {Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4PC.bsv 456 8}}} {module Axi4PC::mkAxi4PC {interface {{Axi4PC::Axi4PC_Ifc#(_sn4, _sn3, _sn1, length_size, _sn2)}}} {arguments Axi4PC::Axi4PCParams} {position {Axi4PC.bsv 730 8}}} {module Axi4Slave::mkAxi4RdSlaveIFC {interface {{Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4Slave.bsv 28 8}}} {module Axi4Slave::mkAxi4WrSlaveIFC {interface {{Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4Slave.bsv 88 8}}} {module Axi4Slave::mkAxi4RdBusSlaveIFC {interface {{Axi4Defines::Axi4RdBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Slave.bsv 168 8}}} {module Axi4Slave::mkAxi4WrBusSlaveIFC {interface {{Axi4Defines::Axi4WrBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Slave.bsv 201 8}}} {module Axi4Slave::mkAxi4RdSlave {interface {{Axi4Defines::Axi4RdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4Slave.bsv 245 8}}} {module Axi4Slave::mkAxi4RdSlaveSynth {interface {{Axi4Defines::Axi4RdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments Bool} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {Axi4Slave.bsv 263 8}}} {module Axi4Slave::mkAxi4WrSlave {interface {{Axi4Defines::Axi4WrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4Slave.bsv 350 8}}} {module Axi4Slave::mkAxi4WrSlaveSynth {interface {{Axi4Defines::Axi4WrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments Bool} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {Axi4Slave.bsv 368 8}}} {module Axi4Slave::mkAxi4WrSlaveSynthP {interface {{Axi4Defines::Axi4WrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {BusDefines::BusReceiver#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusReceiver#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {Axi4Slave.bsv 383 8}}} {module Axi4Slave::mkAxi4RdSlaveDummy {interface {{Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Slave.bsv 593 8}}} {module Axi4Slave::mkAxi4WrSlaveDummy {interface {{Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Slave.bsv 629 8}}} {module Axi4Slave::mkAxi4WrSlaveDummyX {interface {{Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Slave.bsv 671 8}}} {module Axi4Slave::mkAxi4RdWrSlave {interface {{Axi4Defines::Axi4RdWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bool f(Bit#(addr_size) x1)}}} {provisos {{Bits#(req_t, s0)} {Bits#(resp_t, s1)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {Axi4Slave.bsv 722 8}}}

{function Axi4LDefines::nop {result Action} {arguments a} {position {Axi4LDefines.bsv 57 17}}} {function Axi4LDefines::getAxi4LAddrCmd {result {{Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LDefines.bsv 321 34}}} {function Axi4LDefines::getAxi4LWrData {result {{Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LDefines.bsv 336 33}}} {function Axi4LDefines::fromAxi4LAddrCmd {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), s0)}}} {position {Axi4LDefines.bsv 349 39}}} {function Axi4LDefines::fromAxi4LRdResp {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LDefines.bsv 374 33}}}

{module Axi4LMaster::mkAxi4LRdMasterIFC {interface {{Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4LMaster.bsv 26 8}}} {module Axi4LMaster::mkAxi4LWrMasterIFC {interface {{Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} BusDefines::BusRecv#(AxiDefines::AxiResp)}} {position {Axi4LMaster.bsv 56 8}}} {module Axi4LMaster::mkAxi4LRdBusMasterIFC {interface {{Axi4LDefines::Axi4LRdBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LMaster.bsv 93 8}}} {module Axi4LMaster::mkAxi4LWrBusMasterIFC {interface {{Axi4LDefines::Axi4LWrBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LMaster.bsv 115 8}}} {module Axi4LMaster::mkAxi4LRdMaster {interface {{Axi4LDefines::Axi4LRdMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments UInt#(32)} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4LMaster.bsv 150 8}}} {module Axi4LMaster::mkAxi4LWrMaster {interface {{Axi4LDefines::Axi4LWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4LMaster.bsv 219 8}}} {module Axi4LMaster::mkAxi4LWrMasterP {interface {{Axi4LDefines::Axi4LWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool {BusDefines::BusSender#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSender#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4LMaster.bsv 234 8}}} {module Axi4LMaster::mkAxi4LRdWrMaster {interface {{Axi4LDefines::Axi4LRdWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4LMaster.bsv 313 8}}}

{module Axi4Slave::mkAxi4RdSlaveIFC {interface {{Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4Slave.bsv 28 8}}} {module Axi4Slave::mkAxi4WrSlaveIFC {interface {{Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4Slave.bsv 88 8}}} {module Axi4Slave::mkAxi4RdBusSlaveIFC {interface {{Axi4Defines::Axi4RdBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Slave.bsv 168 8}}} {module Axi4Slave::mkAxi4WrBusSlaveIFC {interface {{Axi4Defines::Axi4WrBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Slave.bsv 201 8}}} {module Axi4Slave::mkAxi4RdSlave {interface {{Axi4Defines::Axi4RdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4Slave.bsv 245 8}}} {module Axi4Slave::mkAxi4RdSlaveSynth {interface {{Axi4Defines::Axi4RdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments Bool} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {Axi4Slave.bsv 263 8}}} {module Axi4Slave::mkAxi4WrSlave {interface {{Axi4Defines::Axi4WrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4Slave.bsv 350 8}}} {module Axi4Slave::mkAxi4WrSlaveSynth {interface {{Axi4Defines::Axi4WrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments Bool} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {Axi4Slave.bsv 368 8}}} {module Axi4Slave::mkAxi4WrSlaveSynthP {interface {{Axi4Defines::Axi4WrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {BusDefines::BusReceiver#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusReceiver#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {Axi4Slave.bsv 383 8}}} {module Axi4Slave::mkAxi4RdSlaveDummy {interface {{Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Slave.bsv 593 8}}} {module Axi4Slave::mkAxi4WrSlaveDummy {interface {{Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Slave.bsv 629 8}}} {module Axi4Slave::mkAxi4WrSlaveDummyX {interface {{Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Slave.bsv 671 8}}} {module Axi4Slave::mkAxi4RdWrSlave {interface {{Axi4Defines::Axi4RdWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Bool {function Bool f(Bit#(addr_size) x1)}}} {provisos {{Bits#(req_t, s0)} {Bits#(resp_t, s1)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {Axi4Slave.bsv 722 8}}}

{module Axi4PC::mkAxi4RdMasterPC {interface {{Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4PC::Axi4PCParams {Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4PC.bsv 18 8}}} {module Axi4PC::mkAxi4RdSlavePC {interface {{Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4PC::Axi4PCParams {Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4PC.bsv 157 8}}} {module Axi4PC::mkAxi4WrMasterPC {interface {{Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4PC::Axi4PCParams {Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4PC.bsv 319 8}}} {module Axi4PC::mkAxi4WrSlavePC {interface {{Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4PC::Axi4PCParams {Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4PC.bsv 456 8}}} {module Axi4PC::mkAxi4PC {interface {{Axi4PC::Axi4PC_Ifc#(_sn4, _sn3, _sn1, length_size, _sn2)}}} {arguments Axi4PC::Axi4PCParams} {position {Axi4PC.bsv 730 8}}}

{module Axi4Master::mkAxi4RdMasterIFC {interface {{Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4Master.bsv 28 8}}} {module Axi4Master::mkAxi4WrMasterIFC {interface {{Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4Master.bsv 75 8}}} {module Axi4Master::mkAxi4RdBusMasterIFC {interface {{Axi4Defines::Axi4RdBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Master.bsv 125 8}}} {module Axi4Master::mkAxi4WrBusMasterIFC {interface {{Axi4Defines::Axi4WrBusMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Master.bsv 158 8}}} {module Axi4Master::mkAxi4RdMaster {interface {{Axi4Defines::Axi4RdMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments UInt#(32)} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4Master.bsv 205 8}}} {module Axi4Master::mkAxi4WrMaster {interface {{Axi4Defines::Axi4WrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4Master.bsv 265 8}}} {module Axi4Master::mkAxi4WrMasterP {interface {{Axi4Defines::Axi4WrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool {BusDefines::BusSender#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSender#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4Master.bsv 281 8}}} {module Axi4Master::mkAxi4RdWrMaster {interface {{Axi4Defines::Axi4RdWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {UInt#(32) Bool}} {provisos {{TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {Axi4Master.bsv 368 8}}}

{function Axi4Defines::fromAxi4RdResp {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Defines.bsv 121 33}}} {function Axi4Defines::fromAxi4WrResp {result {{TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Defines.bsv 152 33}}} {function Axi4Defines::getAxi4AddrCmd {result {{Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Defines.bsv 674 33}}} {function Axi4Defines::getAxi4WrData {result {{Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Defines.bsv 704 32}}} {function Axi4Defines::getAxi4Len {result Axi4Defines::Axi4Len} {arguments {{TLM3Defines::TLMBLength#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4Defines.bsv 715 18}}} {function Axi4Defines::getAxi4Lock {result Axi4Defines::Axi4Lock} {arguments TLM3Defines::TLMLock} {position {Axi4Defines.bsv 719 19}}} {function Axi4Defines::fromAxi4AddrCmd {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), s0)}}} {position {Axi4Defines.bsv 727 39}}} {function Axi4Defines::fromAxi4Len {result {{TLM3Defines::TLMBLength#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments Axi4Defines::Axi4Len} {position {Axi4Defines.bsv 758 32}}} {function Axi4Defines::fromAxi4Qos {result TLM3Defines::TLMQos} {arguments Axi4Defines::Axi4Qos} {position {Axi4Defines.bsv 762 17}}} {function Axi4Defines::fromAxi4Lock {result TLM3Defines::TLMLock} {arguments Axi4Defines::Axi4Lock} {position {Axi4Defines.bsv 766 18}}}

{module Axi4LSlave::mkAxi4LRdSlaveIFC {interface {{Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusSend#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4LSlave.bsv 26 8}}} {module Axi4LSlave::mkAxi4LWrSlaveIFC {interface {{Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusRecv#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} BusDefines::BusSend#(AxiDefines::AxiResp)}} {position {Axi4LSlave.bsv 56 8}}} {module Axi4LSlave::mkAxi4LRdBusSlaveIFC {interface {{Axi4LDefines::Axi4LRdBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LSlave.bsv 101 8}}} {module Axi4LSlave::mkAxi4LWrBusSlaveIFC {interface {{Axi4LDefines::Axi4LWrBusSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LSlave.bsv 123 8}}} {module Axi4LSlave::mkAxi4LRdSlave {interface {{Axi4LDefines::Axi4LRdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4LSlave.bsv 155 8}}} {module Axi4LSlave::mkAxi4LRdSlaveSynth {interface {{Axi4LDefines::Axi4LRdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4LSlave.bsv 172 8}}} {module Axi4LSlave::mkAxi4LWrSlave {interface {{Axi4LDefines::Axi4LWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4LSlave.bsv 223 8}}} {module Axi4LSlave::mkAxi4LWrSlaveSynth {interface {{Axi4LDefines::Axi4LWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4LSlave.bsv 240 8}}} {module Axi4LSlave::mkAxi4LWrSlaveSynthP {interface {{Axi4LDefines::Axi4LWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{BusDefines::BusReceiver#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusReceiver#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))}}} {provisos {{TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(req_t, s0)} {Bits#(resp_t, s1)} {Add#(_1, 3, data_size)}}} {position {Axi4LSlave.bsv 254 8}}} {module Axi4LSlave::mkAxi4LRdWrSlave {interface {{Axi4LDefines::Axi4LRdWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(Bit#(addr_size) x1)}}} {provisos {{Bits#(req_t, s0)} {Bits#(resp_t, s1)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {Add#(_1, 3, data_size)}}} {position {Axi4LSlave.bsv 300 8}}}

{module Axi4LPC::mkAxi4LRdMasterPC {interface {{Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4LPC::Axi4LPCParams {Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LPC.bsv 18 8}}} {module Axi4LPC::mkAxi4LRdSlavePC {interface {{Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4LPC::Axi4LPCParams {Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LPC.bsv 100 8}}} {module Axi4LPC::mkAxi4LWrMasterPC {interface {{Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4LPC::Axi4LPCParams {Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LPC.bsv 185 8}}} {module Axi4LPC::mkAxi4LWrSlavePC {interface {{Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {Axi4LPC::Axi4LPCParams {Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {Axi4LPC.bsv 273 8}}} {module Axi4LPC::mkAxi4LPC {interface {{Axi4LPC::Axi4LPC_Ifc#(id_size, _sn2, _sn1, length_size, user_size)}}} {arguments Axi4LPC::Axi4LPCParams} {position {Axi4LPC.bsv 428 8}}}

{module ApbBus::mkApbBusFabric {interface Empty} {arguments {{ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} {Vector::Vector#(slv_count, ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))} Bool}} {provisos {{Add#(slv_count, 1, slave_count)}}} {position {ApbBus.bsv 34 8}}} {function ApbBus::getCurrentSlaveVector {result {{Vector::Vector#(slave_count, Bool)}}} {arguments {{ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} {Vector::Vector#(slave_count, ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))} Bool}} {position {ApbBus.bsv 93 37}}} {function ApbBus::selectQualified {result a} {arguments {{Vector::Vector#(n, Bool)} {Vector::Vector#(n, a)}}} {provisos {{Add#(1, ignore, n)} {Bits#(a, sa)}}} {position {ApbBus.bsv 117 12}}}

{function ApbDefines::getApbCtrl {result {{ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbDefines.bsv 453 29}}} {function ApbDefines::getApbWrite {result ApbDefines::ApbWrite} {arguments TLM3Defines::TLMCommand} {position {ApbDefines.bsv 469 19}}} {function ApbDefines::getApbData {result {{ApbDefines::ApbData#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbDefines.bsv 476 29}}} {function ApbDefines::fromApbCtrl {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbDefines.bsv 484 39}}} {function ApbDefines::fromApbWrite {result TLM3Defines::TLMCommand} {arguments ApbDefines::ApbWrite} {position {ApbDefines.bsv 504 21}}} {function ApbDefines::addAddrMatch {result {{ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(ApbDefines::ApbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)} {ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbDefines.bsv 533 36}}} {module ApbSlave::mkApbSlaveIFC {interface {{ApbSlave::ApbSlaveIFC#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbSlave.bsv 58 8}}} {module ApbSlave::mkApbSlaveWM {interface {{ApbDefines::ApbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(ApbDefines::ApbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {FShow#(resp_t) {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {ApbSlave.bsv 139 8}}} {module ApbSlave::mkApbSlave {interface {{ApbDefines::ApbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {provisos {FShow#(resp_t) {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {ApbSlave.bsv 171 8}}} {module ApbSlave::mkApbErrorSlave {interface {{ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbSlave.bsv 222 8}}} {module ApbSlave::mkApbNotReadySlave {interface {{ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbSlave.bsv 252 8}}} {module ApbBus::mkApbBusFabric {interface Empty} {arguments {{ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} {Vector::Vector#(slv_count, ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))} Bool}} {provisos {{Add#(slv_count, 1, slave_count)}}} {position {ApbBus.bsv 34 8}}} {function ApbBus::getCurrentSlaveVector {result {{Vector::Vector#(slave_count, Bool)}}} {arguments {{ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} {Vector::Vector#(slave_count, ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))} Bool}} {position {ApbBus.bsv 93 37}}} {function ApbBus::selectQualified {result a} {arguments {{Vector::Vector#(n, Bool)} {Vector::Vector#(n, a)}}} {provisos {{Add#(1, ignore, n)} {Bits#(a, sa)}}} {position {ApbBus.bsv 117 12}}} {module ApbMaster::mkApbMaster {interface {{ApbDefines::ApbMasterXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments Bool} {provisos {{Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), s2)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbMaster.bsv 43 8}}}

{module ApbMaster::mkApbMaster {interface {{ApbDefines::ApbMasterXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments Bool} {provisos {{Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), s2)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)} {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbMaster.bsv 43 8}}}

{module ApbSlave::mkApbSlaveIFC {interface {{ApbSlave::ApbSlaveIFC#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbSlave.bsv 58 8}}} {module ApbSlave::mkApbSlaveWM {interface {{ApbDefines::ApbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(ApbDefines::ApbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)}}} {provisos {FShow#(resp_t) {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {ApbSlave.bsv 139 8}}} {module ApbSlave::mkApbSlave {interface {{ApbDefines::ApbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size)}}} {provisos {FShow#(resp_t) {TLM3Defines::TLMResponseTC#(resp_t, id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(req_t, id_size, addr_size, data_size, length_size, user_size)} {Bits#(resp_t, s1)} {Bits#(req_t, s0)}}} {position {ApbSlave.bsv 171 8}}} {module ApbSlave::mkApbErrorSlave {interface {{ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbSlave.bsv 222 8}}} {module ApbSlave::mkApbNotReadySlave {interface {{ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbSlave.bsv 252 8}}}

{function ApbDefines::getApbCtrl {result {{ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbDefines.bsv 453 29}}} {function ApbDefines::getApbWrite {result ApbDefines::ApbWrite} {arguments TLM3Defines::TLMCommand} {position {ApbDefines.bsv 469 19}}} {function ApbDefines::getApbData {result {{ApbDefines::ApbData#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbDefines.bsv 476 29}}} {function ApbDefines::fromApbCtrl {result {{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbDefines.bsv 484 39}}} {function ApbDefines::fromApbWrite {result TLM3Defines::TLMCommand} {arguments ApbDefines::ApbWrite} {position {ApbDefines.bsv 504 21}}} {function ApbDefines::addAddrMatch {result {{ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)}}} {arguments {{function Bool f(ApbDefines::ApbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)} {ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)}}} {position {ApbDefines.bsv 533 36}}}

{function COBS::mkCOBSEncoder {result Module#(COBS::COBSEncoder#(n))} {provisos {{Log#(TAdd#(1, n), sizeWidth)}}} {position {COBS.bs 14 0}}} {function COBS::mkCOBSDecoder {result Module#(COBS::COBSDecoder#(n))} {provisos {{Log#(TAdd#(1, n), sizeWidth)}}} {position {COBS.bs 73 0}}}

{module AlteraCells::mkAlteraClockGen {interface AlteraCells::AlteraClockGen} {arguments AlteraCells::AlteraClockGenParams} {position {AlteraCells.bsv 271 8}}} {module AlteraCells::mkAlteraClockDiffIn {interface Clock} {arguments {Clock Clock}} {position {AlteraCells.bsv 298 8}}} {module AlteraCells::mkAlteraClockDiffOut {interface AlteraCells::DiffClock} {position {AlteraCells.bsv 322 8}}} {module AlteraCells::mkAlteraODDR {interface AlteraCells::ODDR#(a)} {arguments AlteraCells::ODDRParams} {provisos {{Bits#(a, sa)}}} {position {AlteraCells.bsv 393 8}}} {module AlteraCells::mkAlteraClockDDR {interface Clock} {arguments {AlteraCells::ODDRParams Bit#(1) Bit#(1)}} {position {AlteraCells.bsv 425 8}}} {module AlteraCells::mkAlteraIDDR {interface AlteraCells::IDDR#(a)} {arguments AlteraCells::IDDRParams} {provisos {{Bits#(a, sa)}}} {position {AlteraCells.bsv 487 8}}}

{module AlteraCells::vMkAltPLL {interface AlteraCells::AlteraClockGen} {arguments AlteraCells::AlteraClockGenParams} {position {AlteraCells.bsv 158 8}}} {module AlteraCells::mkAlteraClockGen {interface AlteraCells::AlteraClockGen} {arguments AlteraCells::AlteraClockGenParams} {position {AlteraCells.bsv 271 8}}} {module AlteraCells::vMkAltInbufDiff {interface Clocks::ClockGenIfc} {arguments {Clock Clock}} {position {AlteraCells.bsv 281 8}}} {module AlteraCells::mkAlteraClockDiffIn {interface Clock} {arguments {Clock Clock}} {position {AlteraCells.bsv 298 8}}} {module AlteraCells::vMkAltOutbufDiff {interface AlteraCells::DiffClock} {position {AlteraCells.bsv 307 8}}} {module AlteraCells::mkAlteraClockDiffOut {interface AlteraCells::DiffClock} {position {AlteraCells.bsv 322 8}}} {module AlteraCells::vMkAltDdioOut {interface AlteraCells::ODDR#(a)} {arguments AlteraCells::ODDRParams} {provisos {{Bits#(a, sa)}}} {position {AlteraCells.bsv 360 8}}} {module AlteraCells::mkAlteraODDR {interface AlteraCells::ODDR#(a)} {arguments AlteraCells::ODDRParams} {provisos {{Bits#(a, sa)}}} {position {AlteraCells.bsv 393 8}}} {module AlteraCells::vMkAltDdioClockOut {interface Clocks::ClockGenIfc} {arguments {AlteraCells::ODDRParams Bit#(1) Bit#(1)}} {position {AlteraCells.bsv 400 8}}} {module AlteraCells::mkAlteraClockDDR {interface Clock} {arguments {AlteraCells::ODDRParams Bit#(1) Bit#(1)}} {position {AlteraCells.bsv 425 8}}} {module AlteraCells::vMkAltDdioIn {interface AlteraCells::IDDR#(a)} {arguments AlteraCells::IDDRParams} {provisos {{Bits#(a, sa)}}} {position {AlteraCells.bsv 459 8}}} {module AlteraCells::mkAlteraIDDR {interface AlteraCells::IDDR#(a)} {arguments AlteraCells::IDDRParams} {provisos {{Bits#(a, sa)}}} {position {AlteraCells.bsv 487 8}}} {module AlteraCells::vMkAltLvdsTx {interface {{AlteraCells::SERDES_TX#(a, b)}}} {arguments AlteraCells::LVDSTX} {provisos {{Div#(sa, x, sb)} {Mul#(sb, x, sa)} {Bits#(a, sa)} {Bits#(b, sb)}}} {position {AlteraCells.bsv 568 8}}} {module AlteraCells::mkAlteraLVDS_TX {interface {{AlteraCells::SERDES_TX#(in, out)}}} {arguments AlteraCells::LVDSTX} {provisos {{Div#(sa, factor, sb)} {Mul#(sb, factor, sa)} {Bits#(out, sb)} {Bits#(in, sa)}}} {position {AlteraCells.bsv 628 8}}} {module AlteraCells::vMkAltLvdsRx {interface {{AlteraCells::SERDES_RX#(a, b)}}} {arguments AlteraCells::LVDSRX} {provisos {{Div#(sb, x, sa)} {Mul#(sa, x, sb)} {Bits#(a, sa)} {Bits#(b, sb)}}} {position {AlteraCells.bsv 755 8}}} {module AlteraCells::mkAlteraLVDS_RX {interface {{AlteraCells::SERDES_RX#(in, out)}}} {arguments AlteraCells::LVDSRX} {provisos {{Div#(sb, factor, sa)} {Mul#(sa, factor, sb)} {Bits#(out, sb)} {Bits#(in, sa)}}} {position {AlteraCells.bsv 841 8}}}

{function ClkCtrlServer::getCycleStampMSB {result Bit#(32)} {arguments ClkCtrlServer::ClkCtrlCycleStamp} {position {ClkCtrlServer.bsv 15 19}}} {function ClkCtrlServer::getCycleStampLSB {result Bit#(32)} {arguments ClkCtrlServer::ClkCtrlCycleStamp} {position {ClkCtrlServer.bsv 19 19}}} {module ClkCtrlServer::mkClkCtrlServer {interface ClkCtrlServer::ClkCtrlServer} {position {ClkCtrlServer.bsv 72 8}}} {module ClkCtrlServer::mkClkCtrlServerWithCClk {interface ClkCtrlServer::ClkCtrlServerWithCClk} {arguments {Clock Reset}} {position {ClkCtrlServer.bsv 115 8}}} {module ClkCtrlServer::mkClkCtrlServerCore {interface ClkCtrlServer::ClkCtrlServerCore} {arguments {Clock Reset}} {position {ClkCtrlServer.bsv 164 8}}}

{function PCIE::getReqID {result PCIE::PciId} {arguments {PCIE::BusNumber PCIE::DevNumber PCIE::FuncNumber}} {position {PCIE.bsv 587 16}}} {function PCIE::getLowerAddr {result PCIE::TLPLowerAddr} {arguments {PCIE::DWAddress PCIE::TLPFirstDWBE}} {position {PCIE.bsv 591 23}}} {function PCIE::computeByteCount {result Bit#(12)} {arguments {Bit#(10) Bit#(4) Bit#(4)}} {position {PCIE.bsv 601 19}}} {function PCIE::byteSwap {result Bit#(32)} {arguments Bit#(32)} {position {PCIE.bsv 626 19}}} {function PCIE::dwordSwap128 {result Bit#(128)} {arguments Bit#(128)} {position {PCIE.bsv 631 20}}} {function PCIE::dwordSwap128BE {result Bit#(16)} {arguments Bit#(16)} {position {PCIE.bsv 636 19}}} {function PCIE::dwordSwap64 {result Bit#(64)} {arguments Bit#(64)} {position {PCIE.bsv 641 19}}} {function PCIE::dwordSwap64BE {result Bit#(8)} {arguments Bit#(8)} {position {PCIE.bsv 646 18}}}

{module PTMClocks::packClock {interface PTMClocks::OutputBit} {arguments Clock} {position {PTMClocks.bsv 17 8}}} {module PTMClocks::mkClockGater {interface PTMClocks::EnabledClock} {arguments Bool} {position {PTMClocks.bsv 37 8}}} {module PTMClocks::mkEdgeDetector {interface PTMClocks::EdgeDetector} {arguments Clock} {position {PTMClocks.bsv 50 8}}} {module PTMClocks::mkEdgeDetectorSim {interface PTMClocks::EdgeDetector} {arguments Clock} {position {PTMClocks.bsv 75 8}}}

{module RS232::mkBaudGenerator {interface RS232::BaudGenerator} {arguments Bit#(16)} {position {RS232.bsv 138 8}}} {module RS232::mkInputFilter {interface {{RS232::InputFilter#(size, a)}}} {arguments {a a}} {provisos {{Add#(logsize, 1, csize)} {Log#(size, logsize)} Eq#(a) {Bits#(a, 1)}}} {position {RS232.bsv 203 8}}} {module RS232::mkEdgeDetector {interface RS232::EdgeDetector#(a)} {arguments {a a}} {provisos {Eq#(a) {Bits#(a, 1)}}} {position {RS232.bsv 250 8}}} {function RS232::getRising {result Bool} {arguments RS232::EdgeDetector#(a)} {position {RS232.bsv 286 15}}} {function RS232::getFalling {result Bool} {arguments RS232::EdgeDetector#(a)} {position {RS232.bsv 290 15}}} {module RS232::mkSynchronizer {interface RS232::Synchronizer#(a)} {arguments a} {provisos {{Bits#(a, 1)}}} {position {RS232.bsv 301 8}}} {module RS232::mkInputMovingFilter {interface {{RS232::InputMovingFilter#(width, threshold, a)}}} {arguments a} {provisos {Eq#(a) {Bits#(a, 1)}}} {position {RS232.bsv 333 8}}} {module RS232::mkUART {interface RS232::UART#(d)} {arguments {Bit#(4) RS232::Parity RS232::StopBits Bit#(16)}} {provisos {{Add#(2, _1, d)}}} {position {RS232.bsv 384 8}}}

{module DDR3::mkAsyncResetLong {interface Reset} {arguments {Integer Reset Clock}} {position {DDR3.bsv 183 8}}} {module DDR3::mkXilinxDDR3Controller_2beats {interface {{DDR3::DDR3_Controller#(ddr3addrsize, ddr3datasize, ddr3besize, 2, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)}}} {arguments {{DDR3::VDDR3_Controller_Xilinx#(ddr3addrsize, ddr3datasize, ddr3besize, 2, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} DDR3::DDR3_Configure}} {provisos {{Add#(ddr3datasize, _5, TMul#(ddr3datasize, 2))} {Add#(ddr3besize, _4, TMul#(ddr3besize, 2))} {Add#(_3, 1, ddr3besize)} {Add#(_2, 1, ddr3addrsize)} {Add#(_1, 8, ddr3datasize)}}} {position {DDR3.bsv 202 8}}} {module DDR3::mkXilinxDDR3Controller_1beat {interface {{DDR3::DDR3_Controller#(ddr3addrsize, ddr3datasize, ddr3besize, 1, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)}}} {arguments {{DDR3::VDDR3_Controller_Xilinx#(ddr3addrsize, ddr3datasize, ddr3besize, 1, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} DDR3::DDR3_Configure}} {provisos {{Add#(_3, 1, ddr3besize)} {Add#(_2, 1, ddr3addrsize)} {Add#(_1, 8, ddr3datasize)}}} {position {DDR3.bsv 337 8}}}

{function Video::vga640x480x60 {result Video::VideoTiming} {position {Video.bsv 59 13}}} {function Video::vesa800x600x60 {result Video::VideoTiming} {position {Video.bsv 75 13}}} {function Video::vesa1024x768x60 {result Video::VideoTiming} {position {Video.bsv 91 13}}} {function Video::vesa1280x1024x60 {result Video::VideoTiming} {position {Video.bsv 107 13}}} {function Video::vesa1600x1200x60 {result Video::VideoTiming} {position {Video.bsv 123 13}}} {function Video::hdtv_480p {result Video::VideoTiming} {position {Video.bsv 139 13}}} {function Video::hdtv_720p {result Video::VideoTiming} {position {Video.bsv 155 13}}} {function Video::hdtv_1080p {result Video::VideoTiming} {position {Video.bsv 171 13}}} {module Video::mkCSAdder {interface Video::CSAdder} {position {Video.bsv 220 8}}} {module Video::mkCSMult {interface Video::CSMult} {position {Video.bsv 317 8}}} {module Video::mkCSMacc {interface Video::CSMacc} {arguments {Bit#(17) Bit#(17) Bit#(17) Bit#(25)}} {position {Video.bsv 446 8}}} {module Video::mkRGB888toCrYCbY422 {interface Video::RGB888toCrYCbY422} {position {Video.bsv 563 8}}} {module Video::mkSyncGenerator {interface Video::SyncGenerator} {arguments Video::SyncDescriptor} {position {Video.bsv 695 8}}}

{module DDR4::mkAsyncResetLong {interface Reset} {arguments {Integer Reset Clock}} {position {DDR4.bsv 187 8}}} {module DDR4::mkXilinxDDR4Controller_2beats {interface {{DDR4::DDR4_Controller#(ddr4addrsize, ddr4datasize, ddr4besize, 2, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)}}} {arguments {{DDR4::VDDR4_Controller_Xilinx#(ddr4addrsize, ddr4datasize, ddr4besize, 2, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} DDR4::DDR4_Configure}} {provisos {{Add#(ddr4datasize, _5, TMul#(ddr4datasize, 2))} {Add#(ddr4besize, _4, TMul#(ddr4besize, 2))} {Add#(_3, 1, ddr4besize)} {Add#(_2, 1, ddr4addrsize)} {Add#(_1, 8, ddr4datasize)}}} {position {DDR4.bsv 206 8}}} {module DDR4::mkXilinxDDR4Controller_1beat {interface {{DDR4::DDR4_Controller#(ddr4addrsize, ddr4datasize, ddr4besize, 1, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)}}} {arguments {{DDR4::VDDR4_Controller_Xilinx#(ddr4addrsize, ddr4datasize, ddr4besize, 1, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} DDR4::DDR4_Configure}} {provisos {{Add#(_3, 1, ddr4besize)} {Add#(_2, 1, ddr4addrsize)} {Add#(_1, 8, ddr4datasize)}}} {position {DDR4.bsv 346 8}}}

{module I2C::mkI2C {interface I2C::I2C} {arguments Integer} {position {I2C.bsv 94 8}}} {module I2C::mkI2CController {interface I2C::I2CController#(n)} {provisos {{Add#(1, _1, n)}}} {position {I2C.bsv 247 8}}}

{module PTMClocks::packClock {interface PTMClocks::OutputBit} {arguments Clock} {position {PTMClocks.bsv 17 8}}} {module PTMClocks::mkClockGater {interface PTMClocks::EnabledClock} {arguments Bool} {position {PTMClocks.bsv 37 8}}} {module PTMClocks::mkEdgeDetectorSim {interface PTMClocks::EdgeDetector} {arguments Clock} {position {PTMClocks.bsv 75 8}}} {function ClkCtrlServer::getCycleStampMSB {result Bit#(32)} {arguments ClkCtrlServer::ClkCtrlCycleStamp} {position {ClkCtrlServer.bsv 15 19}}} {function ClkCtrlServer::getCycleStampLSB {result Bit#(32)} {arguments ClkCtrlServer::ClkCtrlCycleStamp} {position {ClkCtrlServer.bsv 19 19}}} {module ClkCtrlServer::mkClkCtrlServer {interface ClkCtrlServer::ClkCtrlServer} {position {ClkCtrlServer.bsv 72 8}}} {module ClkCtrlServer::mkClkCtrlServerWithCClk {interface ClkCtrlServer::ClkCtrlServerWithCClk} {arguments {Clock Reset}} {position {ClkCtrlServer.bsv 115 8}}} {module ClkCtrlServer::mkClkCtrlServerCore {interface ClkCtrlServer::ClkCtrlServerCore} {arguments {Clock Reset}} {position {ClkCtrlServer.bsv 164 8}}} {module I2C::mkI2C {interface I2C::I2C} {arguments Integer} {position {I2C.bsv 94 8}}} {module I2C::mkI2CController {interface I2C::I2CController#(n)} {provisos {{Add#(1, _1, n)}}} {position {I2C.bsv 247 8}}} {module RS232::mkBaudGenerator {interface RS232::BaudGenerator} {arguments Bit#(16)} {position {RS232.bsv 138 8}}} {module RS232::mkInputFilter {interface {{RS232::InputFilter#(size, a)}}} {arguments {a a}} {provisos {{Add#(logsize, 1, csize)} {Log#(size, logsize)} Eq#(a) {Bits#(a, 1)}}} {position {RS232.bsv 203 8}}} {module RS232::mkEdgeDetector {interface RS232::EdgeDetector#(a)} {arguments {a a}} {provisos {Eq#(a) {Bits#(a, 1)}}} {position {RS232.bsv 250 8}}} {module RS232::mkSynchronizer {interface RS232::Synchronizer#(a)} {arguments a} {provisos {{Bits#(a, 1)}}} {position {RS232.bsv 301 8}}} {module RS232::mkInputMovingFilter {interface {{RS232::InputMovingFilter#(width, threshold, a)}}} {arguments a} {provisos {Eq#(a) {Bits#(a, 1)}}} {position {RS232.bsv 333 8}}} {module RS232::mkUART {interface RS232::UART#(d)} {arguments {Bit#(4) RS232::Parity RS232::StopBits Bit#(16)}} {provisos {{Add#(2, _1, d)}}} {position {RS232.bsv 384 8}}} {module DDR3::mkXilinxDDR3Controller_2beats {interface {{DDR3::DDR3_Controller#(ddr3addrsize, ddr3datasize, ddr3besize, 2, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)}}} {arguments {{DDR3::VDDR3_Controller_Xilinx#(ddr3addrsize, ddr3datasize, ddr3besize, 2, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} DDR3::DDR3_Configure}} {provisos {{Add#(ddr3datasize, _5, TMul#(ddr3datasize, 2))} {Add#(ddr3besize, _4, TMul#(ddr3besize, 2))} {Add#(_3, 1, ddr3besize)} {Add#(_2, 1, ddr3addrsize)} {Add#(_1, 8, ddr3datasize)}}} {position {DDR3.bsv 202 8}}} {module DDR3::mkXilinxDDR3Controller_1beat {interface {{DDR3::DDR3_Controller#(ddr3addrsize, ddr3datasize, ddr3besize, 1, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)}}} {arguments {{DDR3::VDDR3_Controller_Xilinx#(ddr3addrsize, ddr3datasize, ddr3besize, 1, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} DDR3::DDR3_Configure}} {provisos {{Add#(_3, 1, ddr3besize)} {Add#(_2, 1, ddr3addrsize)} {Add#(_1, 8, ddr3datasize)}}} {position {DDR3.bsv 337 8}}} {module DDR4::mkAsyncResetLong {interface Reset} {arguments {Integer Reset Clock}} {position {DDR4.bsv 187 8}}} {module DDR4::mkXilinxDDR4Controller_2beats {interface {{DDR4::DDR4_Controller#(ddr4addrsize, ddr4datasize, ddr4besize, 2, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)}}} {arguments {{DDR4::VDDR4_Controller_Xilinx#(ddr4addrsize, ddr4datasize, ddr4besize, 2, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} DDR4::DDR4_Configure}} {provisos {{Add#(ddr4datasize, _5, TMul#(ddr4datasize, 2))} {Add#(ddr4besize, _4, TMul#(ddr4besize, 2))} {Add#(_3, 1, ddr4besize)} {Add#(_2, 1, ddr4addrsize)} {Add#(_1, 8, ddr4datasize)}}} {position {DDR4.bsv 206 8}}} {module DDR4::mkXilinxDDR4Controller_1beat {interface {{DDR4::DDR4_Controller#(ddr4addrsize, ddr4datasize, ddr4besize, 1, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)}}} {arguments {{DDR4::VDDR4_Controller_Xilinx#(ddr4addrsize, ddr4datasize, ddr4besize, 1, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} DDR4::DDR4_Configure}} {provisos {{Add#(_3, 1, ddr4besize)} {Add#(_2, 1, ddr4addrsize)} {Add#(_1, 8, ddr4datasize)}}} {position {DDR4.bsv 346 8}}} {function PCIE::getReqID {result PCIE::PciId} {arguments {PCIE::BusNumber PCIE::DevNumber PCIE::FuncNumber}} {position {PCIE.bsv 587 16}}} {function PCIE::getLowerAddr {result PCIE::TLPLowerAddr} {arguments {PCIE::DWAddress PCIE::TLPFirstDWBE}} {position {PCIE.bsv 591 23}}} {function PCIE::computeByteCount {result Bit#(12)} {arguments {Bit#(10) Bit#(4) Bit#(4)}} {position {PCIE.bsv 601 19}}} {function PCIE::byteSwap {result Bit#(32)} {arguments Bit#(32)} {position {PCIE.bsv 626 19}}} {function PCIE::dwordSwap128 {result Bit#(128)} {arguments Bit#(128)} {position {PCIE.bsv 631 20}}} {function PCIE::dwordSwap128BE {result Bit#(16)} {arguments Bit#(16)} {position {PCIE.bsv 636 19}}} {function PCIE::dwordSwap64 {result Bit#(64)} {arguments Bit#(64)} {position {PCIE.bsv 641 19}}} {function PCIE::dwordSwap64BE {result Bit#(8)} {arguments Bit#(8)} {position {PCIE.bsv 646 18}}} {function Video::vga640x480x60 {result Video::VideoTiming} {position {Video.bsv 59 13}}} {function Video::vesa800x600x60 {result Video::VideoTiming} {position {Video.bsv 75 13}}} {function Video::vesa1024x768x60 {result Video::VideoTiming} {position {Video.bsv 91 13}}} {function Video::vesa1280x1024x60 {result Video::VideoTiming} {position {Video.bsv 107 13}}} {function Video::vesa1600x1200x60 {result Video::VideoTiming} {position {Video.bsv 123 13}}} {function Video::hdtv_480p {result Video::VideoTiming} {position {Video.bsv 139 13}}} {function Video::hdtv_720p {result Video::VideoTiming} {position {Video.bsv 155 13}}} {function Video::hdtv_1080p {result Video::VideoTiming} {position {Video.bsv 171 13}}} {module Video::mkCSAdder {interface Video::CSAdder} {position {Video.bsv 220 8}}} {module Video::mkCSMult {interface Video::CSMult} {position {Video.bsv 317 8}}} {module Video::mkCSMacc {interface Video::CSMacc} {arguments {Bit#(17) Bit#(17) Bit#(17) Bit#(25)}} {position {Video.bsv 446 8}}} {module Video::mkRGB888toCrYCbY422 {interface Video::RGB888toCrYCbY422} {position {Video.bsv 563 8}}} {module Video::mkSyncGenerator {interface Video::SyncGenerator} {arguments Video::SyncDescriptor} {position {Video.bsv 695 8}}}

{module DDR2FakeBurst::mkDDR2FakeBurst {interface DDR2Types::DDR2Client} {arguments DDR2Types::DDR2Client} {position {DDR2FakeBurst.bsv 15 8}}}

{module ML507_mig_33_wrapper::mkMig33Wrapper {interface ML507_mig_33_wrapper::Mig33} {arguments {Clock Clock Clock Clock Reset Bool}} {position {ML507_mig_33_wrapper.bsv 51 8}}} {module DDR2Types::mkDDR2ClientSync {interface DDR2Types::DDR2Client} {arguments {DDR2Types::DDR2Client Clock Reset Clock Reset}} {position {DDR2Types.bsv 84 8}}} {module DDR2FakeBurst::mkDDR2FakeBurst {interface DDR2Types::DDR2Client} {arguments DDR2Types::DDR2Client} {position {DDR2FakeBurst.bsv 15 8}}} {module ML507_DDR2::mkDDR2Burst4 {interface ML507_DDR2::DDR2} {arguments {Clock Clock Clock Clock Reset Bool}} {position {ML507_DDR2.bsv 47 8}}} {module ML507_DDR2::mkDemarshaller {interface ML507_DDR2::Demarshaller#(a)} {provisos {{Bits#(a, _sa)}}} {position {ML507_DDR2.bsv 200 8}}} {module ML507_DDR2::mkMarshaller {interface ML507_DDR2::Marshaller#(a)} {provisos {{Bits#(a, _sa)}}} {position {ML507_DDR2.bsv 229 8}}}

{module ML507_DDR2::mkDDR2Burst4 {interface ML507_DDR2::DDR2} {arguments {Clock Clock Clock Clock Reset Bool}} {position {ML507_DDR2.bsv 47 8}}} {module ML507_DDR2::mkDemarshaller {interface ML507_DDR2::Demarshaller#(a)} {provisos {{Bits#(a, _sa)}}} {position {ML507_DDR2.bsv 200 8}}} {module ML507_DDR2::mkMarshaller {interface ML507_DDR2::Marshaller#(a)} {provisos {{Bits#(a, _sa)}}} {position {ML507_DDR2.bsv 229 8}}}

{module DDR2Types::mkDDR2ClientSync {interface DDR2Types::DDR2Client} {arguments {DDR2Types::DDR2Client Clock Reset Clock Reset}} {position {DDR2Types.bsv 84 8}}}

{module ML507_mig_33_wrapper::mkMig33Wrapper {interface ML507_mig_33_wrapper::Mig33} {arguments {Clock Clock Clock Clock Reset Bool}} {position {ML507_mig_33_wrapper.bsv 51 8}}}

{module XilinxCells::vMkBUFG {interface Wire#(one_bit)} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 144 8}}} {module XilinxCells::mkBUFG {interface Wire#(a)} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 160 8}}} {module XilinxCells::vMkClockBUFG {interface Clocks::ClockGenIfc} {position {XilinxCells.bsv 175 8}}} {module XilinxCells::mkClockBUFG {interface Clock} {position {XilinxCells.bsv 186 8}}} {module XilinxCells::vMkClockBitBUFG {interface ReadOnly#(one_bit)} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 192 8}}} {module XilinxCells::mkClockBitBUFG {interface ReadOnly#(one_bit)} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 206 8}}} {module XilinxCells::vMkBitClockBUFG {interface Clocks::ClockGenIfc} {arguments ReadOnly#(one_bit)} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 215 8}}} {module XilinxCells::mkBitClockBUFG {interface Clock} {arguments ReadOnly#(one_bit)} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 228 8}}} {module XilinxCells::vMkResetBUFG {interface XilinxCells::ResetGenIfc} {position {XilinxCells.bsv 240 8}}} {module XilinxCells::mkResetBUFG {interface Reset} {position {XilinxCells.bsv 249 8}}} {module XilinxCells::vMkBUFR {interface Wire#(one_bit)} {arguments XilinxCells::BUFRParams} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 270 8}}} {module XilinxCells::mkBUFR {interface Wire#(a)} {arguments XilinxCells::BUFRParams} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 292 8}}} {module XilinxCells::vMkClockBUFR {interface Clocks::ClockGenIfc} {arguments XilinxCells::BUFRParams} {position {XilinxCells.bsv 307 8}}} {module XilinxCells::mkClockBUFR {interface Clock} {arguments XilinxCells::BUFRParams} {position {XilinxCells.bsv 323 8}}} {module XilinxCells::vMkClockBitBUFR {interface ReadOnly#(one_bit)} {arguments XilinxCells::BUFRParams} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 329 8}}} {module XilinxCells::mkClockBitBUFR {interface ReadOnly#(one_bit)} {arguments XilinxCells::BUFRParams} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 348 8}}} {module XilinxCells::vMkIBUFG {interface Wire#(one_bit)} {arguments XilinxCells::IBUFGParams} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 375 8}}} {module XilinxCells::mkIBUFG {interface Wire#(a)} {arguments XilinxCells::IBUFGParams} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 396 8}}} {module XilinxCells::vMkClockIBUFG {interface Clocks::ClockGenIfc} {arguments XilinxCells::IBUFGParams} {position {XilinxCells.bsv 411 8}}} {module XilinxCells::mkClockIBUFG {interface Clock} {arguments XilinxCells::IBUFGParams} {position {XilinxCells.bsv 425 8}}} {module XilinxCells::vMkIBUF {interface Wire#(one_bit)} {arguments XilinxCells::IBUFParams} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 452 8}}} {module XilinxCells::mkIBUF {interface Wire#(a)} {arguments XilinxCells::IBUFParams} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 474 8}}} {module XilinxCells::vMkClockIBUF {interface Clocks::ClockGenIfc} {arguments XilinxCells::IBUFParams} {position {XilinxCells.bsv 489 8}}} {module XilinxCells::mkClockIBUF {interface Clock} {arguments XilinxCells::IBUFParams} {position {XilinxCells.bsv 504 8}}} {module XilinxCells::vMkResetIBUF {interface XilinxCells::ResetGenIfc} {arguments XilinxCells::IBUFParams} {position {XilinxCells.bsv 510 8}}} {module XilinxCells::mkResetIBUF {interface Reset} {arguments XilinxCells::IBUFParams} {position {XilinxCells.bsv 525 8}}} {module XilinxCells::vMkClockIBUFDS {interface Clocks::ClockGenIfc} {arguments {XilinxCells::IBUFDSParams Clock Clock}} {position {XilinxCells.bsv 557 8}}} {module XilinxCells::mkClockIBUFDS {interface Clock} {arguments {XilinxCells::IBUFDSParams Clock Clock}} {position {XilinxCells.bsv 580 8}}} {module XilinxCells::vMkClockIBUFGDS {interface Clocks::ClockGenIfc} {arguments {XilinxCells::IBUFGDSParams Clock Clock}} {position {XilinxCells.bsv 607 8}}} {module XilinxCells::mkClockIBUFGDS {interface Clock} {arguments {XilinxCells::IBUFGDSParams Clock Clock}} {position {XilinxCells.bsv 628 8}}} {module XilinxCells::vMkClockIBUFDS_GTXE1 {interface XilinxCells::GTXE1ClockGenIfc} {arguments {XilinxCells::IBUFDS_GTXE1Params Bool Clock Clock}} {position {XilinxCells.bsv 656 8}}} {module XilinxCells::mkClockIBUFDS_GTXE1 {interface Clock} {arguments {XilinxCells::IBUFDS_GTXE1Params Bool Clock Clock}} {position {XilinxCells.bsv 680 8}}} {module XilinxCells::mkClockIBUFDS_GTXE1_div2 {interface Clock} {arguments {XilinxCells::IBUFDS_GTXE1Params Bool Clock Clock}} {position {XilinxCells.bsv 685 8}}} {module XilinxCells::mkClockIBUFDS_GTXE1_both {interface {{Vector::Vector#(2, Clock)}}} {arguments {XilinxCells::IBUFDS_GTXE1Params Bool Clock Clock}} {position {XilinxCells.bsv 690 8}}} {module XilinxCells::vMkClockIBUFDS_GTE2 {interface XilinxCells::GTE2ClockGenIfc} {arguments {XilinxCells::IBUFDS_GTE2Params Bool Clock Clock}} {position {XilinxCells.bsv 721 8}}} {module XilinxCells::mkClockIBUFDS_GTE2 {interface Clock} {arguments {XilinxCells::IBUFDS_GTE2Params Bool Clock Clock}} {position {XilinxCells.bsv 745 8}}} {module XilinxCells::mkClockIBUFDS_GTE2_div2 {interface Clock} {arguments {XilinxCells::IBUFDS_GTE2Params Bool Clock Clock}} {position {XilinxCells.bsv 750 8}}} {module XilinxCells::mkClockIBUFDS_GTE2_both {interface {{Vector::Vector#(2, Clock)}}} {arguments {XilinxCells::IBUFDS_GTE2Params Bool Clock Clock}} {position {XilinxCells.bsv 755 8}}} {module XilinxCells::vMkClockIBUFDS_GTE3 {interface XilinxCells::GTE3ClockGenIfc} {arguments {Bool Clock Clock}} {position {XilinxCells.bsv 772 8}}} {module XilinxCells::mkClockIBUFDS_GTE3 {interface {{Vector::Vector#(2, Clock)}}} {arguments {Bool Clock Clock}} {position {XilinxCells.bsv 807 8}}} {module XilinxCells::vMkClockIBUFDS_GTHE1 {interface Clocks::ClockGenIfc} {arguments {Clock Clock}} {position {XilinxCells.bsv 819 8}}} {module XilinxCells::mkClockIBUFDS_GTHE1 {interface Clock} {arguments {Clock Clock}} {position {XilinxCells.bsv 834 8}}} {module XilinxCells::vMkOBUF {interface Wire#(one_bit)} {arguments XilinxCells::OBUFParams} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 859 8}}} {module XilinxCells::mkOBUF {interface Wire#(a)} {arguments XilinxCells::OBUFParams} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 880 8}}} {module XilinxCells::vMkClockOBUFDS {interface XilinxCells::DiffClock} {arguments XilinxCells::OBUFDSParams} {position {XilinxCells.bsv 917 8}}} {module XilinxCells::mkClockOBUFDS {interface XilinxCells::DiffClock} {arguments XilinxCells::OBUFDSParams} {position {XilinxCells.bsv 934 8}}} {module XilinxCells::vMkODDR {interface XilinxCells::ODDR#(a)} {arguments XilinxCells::ODDRParams#(a)} {provisos {DefaultValue#(a) {Bits#(a, 1)}}} {position {XilinxCells.bsv 975 8}}} {module XilinxCells::mkODDR {interface XilinxCells::ODDR#(a)} {arguments XilinxCells::ODDRParams#(a)} {provisos {DefaultValue#(a) {Bits#(a, sa)}}} {position {XilinxCells.bsv 1008 8}}} {module XilinxCells::vMkClockODDR {interface Clocks::ClockGenIfc} {arguments {XilinxCells::ODDRParams#(Bit#(1)) Bit#(1) Bit#(1)}} {position {XilinxCells.bsv 1060 8}}} {module XilinxCells::mkClockODDR {interface Clock} {arguments {XilinxCells::ODDRParams#(Bit#(1)) Bit#(1) Bit#(1)}} {position {XilinxCells.bsv 1080 8}}} {module XilinxCells::vMkIDDR {interface XilinxCells::VIDDR#(a)} {arguments XilinxCells::IDDRParams#(a)} {provisos {DefaultValue#(a) {Bits#(a, 1)}}} {position {XilinxCells.bsv 1124 8}}} {module XilinxCells::mkIDDR {interface XilinxCells::IDDR#(a)} {arguments XilinxCells::IDDRParams#(a)} {provisos {DefaultValue#(a) {Bits#(a, sa)}}} {position {XilinxCells.bsv 1158 8}}} {module XilinxCells::vMkIDELAYCTRL {interface XilinxCells::IDELAYCTRL} {arguments Integer} {position {XilinxCells.bsv 1229 8}}} {module XilinxCells::mkIDELAYCTRL {interface XilinxCells::IDELAYCTRL} {arguments Integer} {position {XilinxCells.bsv 1242 8}}} {module XilinxCells::vMkIDELAY {interface XilinxCells::VIDELAY#(a)} {arguments XilinxCells::IDELAYParams} {provisos {{Bits#(a, 1)}}} {position {XilinxCells.bsv 1283 8}}} {module XilinxCells::mkIDELAY {interface XilinxCells::IDELAY#(a)} {arguments XilinxCells::IDELAYParams} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 1315 8}}} {module XilinxCells::vMkIODELAY {interface XilinxCells::VIODELAY#(a)} {arguments XilinxCells::IODELAYParams} {provisos {{Bits#(a, 1)}}} {position {XilinxCells.bsv 1432 8}}} {module XilinxCells::mkIODELAY {interface XilinxCells::IODELAY#(a)} {arguments XilinxCells::IODELAYParams} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 1496 8}}} {module XilinxCells::vMkClockIODELAY {interface Clocks::ClockGenIfc} {arguments XilinxCells::ClockIODELAYParams} {position {XilinxCells.bsv 1559 8}}} {module XilinxCells::mkClockIODELAY {interface Clock} {arguments XilinxCells::ClockIODELAYParams} {position {XilinxCells.bsv 1611 8}}} {module XilinxCells::vMkPLL {interface XilinxCells::VPLL} {arguments XilinxCells::PLLParams} {position {XilinxCells.bsv 1757 8}}} {module XilinxCells::vMkPLLSF {interface XilinxCells::VPLL} {arguments XilinxCells::PLLParams} {position {XilinxCells.bsv 1833 8}}} {module XilinxCells::mkPLL {interface XilinxCells::PLL} {arguments XilinxCells::PLLParams} {position {XilinxCells.bsv 1920 8}}} {module XilinxCells::mkClockGenerator {interface XilinxCells::ClockGenerator} {arguments XilinxCells::ClockGeneratorParams} {position {XilinxCells.bsv 2026 8}}} {module XilinxCells::vMkMMCME2_ADV {interface XilinxCells::MMCM} {arguments {XilinxCells::MMCMParams Clock Clock Clock}} {position {XilinxCells.bsv 2185 8}}} {module XilinxCells::vMkMMCME2SF_ADV {interface XilinxCells::MMCM} {arguments {XilinxCells::MMCMParams Clock Clock Clock}} {position {XilinxCells.bsv 2282 8}}} {module XilinxCells::mkMMCME2 {interface XilinxCells::MMCME2} {arguments XilinxCells::MMCMParams} {position {XilinxCells.bsv 2391 8}}} {module XilinxCells::vMkMMCME3_ADV {interface XilinxCells::VMMCME3} {arguments {XilinxCells::MMCMParams Clock Clock Clock}} {position {XilinxCells.bsv 2473 8}}} {module XilinxCells::vMkMMCME3SF_ADV {interface XilinxCells::VMMCME3} {arguments {XilinxCells::MMCMParams Clock Clock Clock}} {position {XilinxCells.bsv 2576 8}}} {module XilinxCells::mkMMCME3 {interface XilinxCells::MMCME3} {arguments XilinxCells::MMCMParams} {position {XilinxCells.bsv 2691 8}}} {module XilinxCells::mkClockGenerator6 {interface XilinxCells::ClockGenerator6} {arguments XilinxCells::ClockGenerator6Params} {position {XilinxCells.bsv 2829 8}}} {module XilinxCells::mkClockGenerator7 {interface XilinxCells::ClockGenerator7} {arguments XilinxCells::ClockGenerator7Params} {position {XilinxCells.bsv 3104 8}}} {module XilinxCells::mkClockGeneratorU {interface XilinxCells::ClockGeneratorU} {arguments XilinxCells::ClockGeneratorUParams} {position {XilinxCells.bsv 3379 8}}} {module XilinxCells::vMkDCM {interface XilinxCells::VDCM} {arguments {XilinxCells::DCMParams Clock Clock}} {position {XilinxCells.bsv 3657 8}}} {module XilinxCells::mkDCM {interface XilinxCells::DCM} {arguments {XilinxCells::DCMParams Clock Clock}} {position {XilinxCells.bsv 3716 8}}} {module XilinxCells::mkDCMClockDivider {interface Clocks::ClockDividerIfc} {arguments {Real Real}} {position {XilinxCells.bsv 3746 8}}} {module XilinxCells::vMkMMCM {interface XilinxCells::MMCM} {arguments {XilinxCells::MMCMParams Clock Clock Clock}} {position {XilinxCells.bsv 3971 8}}} {module XilinxCells::vMkMMCMSF {interface XilinxCells::MMCM} {arguments {XilinxCells::MMCMParams Clock Clock Clock}} {position {XilinxCells.bsv 4067 8}}} {module XilinxCells::mkMMCMOrig {interface XilinxCells::MMCM} {arguments {XilinxCells::MMCMParams Clock Clock Clock}} {position {XilinxCells.bsv 4178 8}}} {module XilinxCells::vMkSRL16E {interface XilinxCells::VSRL16E} {arguments XilinxCells::SRL16EParams} {position {XilinxCells.bsv 4214 8}}} {module XilinxCells::mkSRL16E {interface XilinxCells::SRL16E} {arguments XilinxCells::SRL16EParams} {position {XilinxCells.bsv 4242 8}}} {module XilinxCells::vMkSRLC32E {interface XilinxCells::SRLC32E} {arguments XilinxCells::SRLC32EParams} {position {XilinxCells.bsv 4277 8}}} {module XilinxCells::mkSRLC32E {interface XilinxCells::SRLC32E} {arguments XilinxCells::SRLC32EParams} {position {XilinxCells.bsv 4296 8}}} {module XilinxCells::vMkMMCM_ADV {interface XilinxCells::MMCM} {arguments {XilinxCells::MMCMParams Clock Clock Clock}} {position {XilinxCells.bsv 4306 8}}} {module XilinxCells::vMkMMCMSF_ADV {interface XilinxCells::MMCM} {arguments {XilinxCells::MMCMParams Clock Clock Clock}} {position {XilinxCells.bsv 4403 8}}} {module XilinxCells::mkMMCM {interface XilinxCells::MMCME2} {arguments XilinxCells::MMCMParams} {position {XilinxCells.bsv 4512 8}}}

{module ButtonController::mkButtonController {interface ButtonController::ButtonController} {arguments Clock} {position {ButtonController.bsv 50 8}}} {module DIPSwitch::mkDIPSwitch {interface DIPSwitch::DIPSwitch#(n)} {arguments Clock} {position {DIPSwitch.bsv 33 8}}} {module GPIOController::mkGPIOController {interface GPIOController::GPIOController} {arguments Bool} {position {GPIOController.bsv 66 8}}} {function GPIOController::getGPIO {result GPIOController::GPIO} {arguments GPIOController::GPIOController} {position {GPIOController.bsv 111 15}}} {function GPIOController::gpioToInout {result Inout#(Bit#(1))} {arguments GPIOController::GPIO} {position {GPIOController.bsv 116 26}}} {function GPIOController::inoutToGPIO {result GPIOController::GPIO} {arguments Inout#(Bit#(1))} {position {GPIOController.bsv 121 15}}} {function LEDController::led_off {result LEDController::Level} {position {LEDController.bsv 29 7}}} {function LEDController::led_on_max {result LEDController::Level} {position {LEDController.bsv 30 7}}} {function LEDController::no_lag {result LEDController::Lag} {position {LEDController.bsv 33 5}}} {function LEDController::max_lag {result LEDController::Lag} {position {LEDController.bsv 34 5}}} {module LEDController::mkLEDController {interface LEDController::LEDController} {arguments Bool} {position {LEDController.bsv 80 8}}} {function LEDController::combineLEDs {result LEDController::LED#(n)} {arguments {{Vector::Vector#(n, LEDController::LEDController)}}} {position {LEDController.bsv 248 18}}} {function LEDController::bitsToLED {result LEDController::LED#(n)} {arguments Bit#(n)} {position {LEDController.bsv 262 18}}} {module LCDController::mkLCDController {interface LCDController::LCDController} {position {LCDController.bsv 44 8}}} {function LCDController::lcdPad {result {{Vector::Vector#(n, Bit#(8))}}} {position {LCDController.bsv 304 29}}} {function LCDController::lcdLine {result {{Vector::Vector#(16, Bit#(8))}}} {arguments String} {position {LCDController.bsv 309 30}}} {function LCDController::lcdBar {result {{Vector::Vector#(13, Bit#(8))}}} {arguments UInt#(6)} {position {LCDController.bsv 326 30}}} {function LCDController::lcdLogoTop {result {{Vector::Vector#(2, Bit#(8))}}} {position {LCDController.bsv 347 29}}} {function LCDController::lcdLogoBottom {result {{Vector::Vector#(2, Bit#(8))}}} {position {LCDController.bsv 351 29}}} {module XilinxCells::mkBUFG {interface Wire#(a)} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 160 8}}} {module XilinxCells::mkClockBUFG {interface Clock} {position {XilinxCells.bsv 186 8}}} {module XilinxCells::mkClockBitBUFG {interface ReadOnly#(one_bit)} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 206 8}}} {module XilinxCells::mkBitClockBUFG {interface Clock} {arguments ReadOnly#(one_bit)} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 228 8}}} {module XilinxCells::mkResetBUFG {interface Reset} {position {XilinxCells.bsv 249 8}}} {module XilinxCells::mkBUFR {interface Wire#(a)} {arguments XilinxCells::BUFRParams} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 292 8}}} {module XilinxCells::mkClockBUFR {interface Clock} {arguments XilinxCells::BUFRParams} {position {XilinxCells.bsv 323 8}}} {module XilinxCells::mkClockBitBUFR {interface ReadOnly#(one_bit)} {arguments XilinxCells::BUFRParams} {provisos {{Bits#(one_bit, 1)}}} {position {XilinxCells.bsv 348 8}}} {module XilinxCells::mkIBUFG {interface Wire#(a)} {arguments XilinxCells::IBUFGParams} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 396 8}}} {module XilinxCells::mkClockIBUFG {interface Clock} {arguments XilinxCells::IBUFGParams} {position {XilinxCells.bsv 425 8}}} {module XilinxCells::mkIBUF {interface Wire#(a)} {arguments XilinxCells::IBUFParams} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 474 8}}} {module XilinxCells::mkClockIBUF {interface Clock} {arguments XilinxCells::IBUFParams} {position {XilinxCells.bsv 504 8}}} {module XilinxCells::mkResetIBUF {interface Reset} {arguments XilinxCells::IBUFParams} {position {XilinxCells.bsv 525 8}}} {module XilinxCells::mkClockIBUFDS {interface Clock} {arguments {XilinxCells::IBUFDSParams Clock Clock}} {position {XilinxCells.bsv 580 8}}} {module XilinxCells::mkClockIBUFGDS {interface Clock} {arguments {XilinxCells::IBUFGDSParams Clock Clock}} {position {XilinxCells.bsv 628 8}}} {module XilinxCells::mkClockIBUFDS_GTXE1 {interface Clock} {arguments {XilinxCells::IBUFDS_GTXE1Params Bool Clock Clock}} {position {XilinxCells.bsv 680 8}}} {module XilinxCells::mkClockIBUFDS_GTXE1_div2 {interface Clock} {arguments {XilinxCells::IBUFDS_GTXE1Params Bool Clock Clock}} {position {XilinxCells.bsv 685 8}}} {module XilinxCells::mkClockIBUFDS_GTXE1_both {interface {{Vector::Vector#(2, Clock)}}} {arguments {XilinxCells::IBUFDS_GTXE1Params Bool Clock Clock}} {position {XilinxCells.bsv 690 8}}} {module XilinxCells::mkClockIBUFDS_GTE2 {interface Clock} {arguments {XilinxCells::IBUFDS_GTE2Params Bool Clock Clock}} {position {XilinxCells.bsv 745 8}}} {module XilinxCells::mkClockIBUFDS_GTE2_div2 {interface Clock} {arguments {XilinxCells::IBUFDS_GTE2Params Bool Clock Clock}} {position {XilinxCells.bsv 750 8}}} {module XilinxCells::mkClockIBUFDS_GTE2_both {interface {{Vector::Vector#(2, Clock)}}} {arguments {XilinxCells::IBUFDS_GTE2Params Bool Clock Clock}} {position {XilinxCells.bsv 755 8}}} {module XilinxCells::mkClockIBUFDS_GTE3 {interface {{Vector::Vector#(2, Clock)}}} {arguments {Bool Clock Clock}} {position {XilinxCells.bsv 807 8}}} {module XilinxCells::mkClockIBUFDS_GTHE1 {interface Clock} {arguments {Clock Clock}} {position {XilinxCells.bsv 834 8}}} {module XilinxCells::mkOBUF {interface Wire#(a)} {arguments XilinxCells::OBUFParams} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 880 8}}} {module XilinxCells::mkClockOBUFDS {interface XilinxCells::DiffClock} {arguments XilinxCells::OBUFDSParams} {position {XilinxCells.bsv 934 8}}} {module XilinxCells::mkODDR {interface XilinxCells::ODDR#(a)} {arguments XilinxCells::ODDRParams#(a)} {provisos {DefaultValue#(a) {Bits#(a, sa)}}} {position {XilinxCells.bsv 1008 8}}} {module XilinxCells::mkClockODDR {interface Clock} {arguments {XilinxCells::ODDRParams#(Bit#(1)) Bit#(1) Bit#(1)}} {position {XilinxCells.bsv 1080 8}}} {module XilinxCells::mkIDDR {interface XilinxCells::IDDR#(a)} {arguments XilinxCells::IDDRParams#(a)} {provisos {DefaultValue#(a) {Bits#(a, sa)}}} {position {XilinxCells.bsv 1158 8}}} {module XilinxCells::mkIDELAYCTRL {interface XilinxCells::IDELAYCTRL} {arguments Integer} {position {XilinxCells.bsv 1242 8}}} {module XilinxCells::mkIDELAY {interface XilinxCells::IDELAY#(a)} {arguments XilinxCells::IDELAYParams} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 1315 8}}} {module XilinxCells::mkIODELAY {interface XilinxCells::IODELAY#(a)} {arguments XilinxCells::IODELAYParams} {provisos {{Bits#(a, sa)}}} {position {XilinxCells.bsv 1496 8}}} {module XilinxCells::mkClockIODELAY {interface Clock} {arguments XilinxCells::ClockIODELAYParams} {position {XilinxCells.bsv 1611 8}}} {module XilinxCells::mkPLL {interface XilinxCells::PLL} {arguments XilinxCells::PLLParams} {position {XilinxCells.bsv 1920 8}}} {module XilinxCells::mkClockGenerator {interface XilinxCells::ClockGenerator} {arguments XilinxCells::ClockGeneratorParams} {position {XilinxCells.bsv 2026 8}}} {module XilinxCells::mkMMCME2 {interface XilinxCells::MMCME2} {arguments XilinxCells::MMCMParams} {position {XilinxCells.bsv 2391 8}}} {module XilinxCells::mkMMCME3 {interface XilinxCells::MMCME3} {arguments XilinxCells::MMCMParams} {position {XilinxCells.bsv 2691 8}}} {module XilinxCells::mkClockGenerator6 {interface XilinxCells::ClockGenerator6} {arguments XilinxCells::ClockGenerator6Params} {position {XilinxCells.bsv 2829 8}}} {module XilinxCells::mkClockGenerator7 {interface XilinxCells::ClockGenerator7} {arguments XilinxCells::ClockGenerator7Params} {position {XilinxCells.bsv 3104 8}}} {module XilinxCells::mkClockGeneratorU {interface XilinxCells::ClockGeneratorU} {arguments XilinxCells::ClockGeneratorUParams} {position {XilinxCells.bsv 3379 8}}} {module XilinxCells::mkDCM {interface XilinxCells::DCM} {arguments {XilinxCells::DCMParams Clock Clock}} {position {XilinxCells.bsv 3716 8}}} {module XilinxCells::mkDCMClockDivider {interface Clocks::ClockDividerIfc} {arguments {Real Real}} {position {XilinxCells.bsv 3746 8}}} {module XilinxCells::mkSRL16E {interface XilinxCells::SRL16E} {arguments XilinxCells::SRL16EParams} {position {XilinxCells.bsv 4242 8}}} {module XilinxCells::mkSRLC32E {interface XilinxCells::SRLC32E} {arguments XilinxCells::SRLC32EParams} {position {XilinxCells.bsv 4296 8}}} {module XilinxCells::mkMMCM {interface XilinxCells::MMCME2} {arguments XilinxCells::MMCMParams} {position {XilinxCells.bsv 4512 8}}} {module DVIController::mkDVIController {interface DVIController::DVIController#(clockMHz)} {arguments Video::VideoTiming} {position {DVIController.bsv 107 8}}} {module HDMIController::mkHDMIController {interface HDMIController::HDMIController} {arguments HDMIController::HDMIParams} {position {HDMIController.bsv 105 8}}}

{module ButtonController::mkButtonController {interface ButtonController::ButtonController} {arguments Clock} {position {ButtonController.bsv 50 8}}} {module DIPSwitch::mkDIPSwitch {interface DIPSwitch::DIPSwitch#(n)} {arguments Clock} {position {DIPSwitch.bsv 33 8}}} {module GPIOController::mkGPIOController {interface GPIOController::GPIOController} {arguments Bool} {position {GPIOController.bsv 66 8}}} {function GPIOController::getGPIO {result GPIOController::GPIO} {arguments GPIOController::GPIOController} {position {GPIOController.bsv 111 15}}} {function GPIOController::gpioToInout {result Inout#(Bit#(1))} {arguments GPIOController::GPIO} {position {GPIOController.bsv 116 26}}} {function GPIOController::inoutToGPIO {result GPIOController::GPIO} {arguments Inout#(Bit#(1))} {position {GPIOController.bsv 121 15}}} {function LEDController::led_off {result LEDController::Level} {position {LEDController.bsv 29 7}}} {function LEDController::led_on_max {result LEDController::Level} {position {LEDController.bsv 30 7}}} {function LEDController::no_lag {result LEDController::Lag} {position {LEDController.bsv 33 5}}} {function LEDController::max_lag {result LEDController::Lag} {position {LEDController.bsv 34 5}}} {module LEDController::mkLEDController {interface LEDController::LEDController} {arguments Bool} {position {LEDController.bsv 80 8}}} {function LEDController::combineLEDs {result LEDController::LED#(n)} {arguments {{Vector::Vector#(n, LEDController::LEDController)}}} {position {LEDController.bsv 248 18}}} {function LEDController::bitsToLED {result LEDController::LED#(n)} {arguments Bit#(n)} {position {LEDController.bsv 262 18}}} {module LCDController::mkLCDController {interface LCDController::LCDController} {position {LCDController.bsv 44 8}}} {function LCDController::lcdPad {result {{Vector::Vector#(n, Bit#(8))}}} {position {LCDController.bsv 304 29}}} {function LCDController::lcdLine {result {{Vector::Vector#(16, Bit#(8))}}} {arguments String} {position {LCDController.bsv 309 30}}} {function LCDController::lcdBar {result {{Vector::Vector#(13, Bit#(8))}}} {arguments UInt#(6)} {position {LCDController.bsv 326 30}}} {function LCDController::lcdLogoTop {result {{Vector::Vector#(2, Bit#(8))}}} {position {LCDController.bsv 347 29}}} {function LCDController::lcdLogoBottom {result {{Vector::Vector#(2, Bit#(8))}}} {position {LCDController.bsv 351 29}}} {module DVIController::mkDVIController {interface DVIController::DVIController#(clockMHz)} {arguments Video::VideoTiming} {position {DVIController.bsv 107 8}}} {module HDMIController::mkHDMIController {interface HDMIController::HDMIController} {arguments HDMIController::HDMIParams} {position {HDMIController.bsv 105 8}}}

{module DIPSwitch::mkDIPSwitch {interface DIPSwitch::DIPSwitch#(n)} {arguments Clock} {position {DIPSwitch.bsv 33 8}}}

{function LEDController::led_off {result LEDController::Level} {position {LEDController.bsv 29 7}}} {function LEDController::led_on_max {result LEDController::Level} {position {LEDController.bsv 30 7}}} {function LEDController::no_lag {result LEDController::Lag} {position {LEDController.bsv 33 5}}} {function LEDController::max_lag {result LEDController::Lag} {position {LEDController.bsv 34 5}}} {module LEDController::mkLEDController {interface LEDController::LEDController} {arguments Bool} {position {LEDController.bsv 80 8}}} {function LEDController::combineLEDs {result LEDController::LED#(n)} {arguments {{Vector::Vector#(n, LEDController::LEDController)}}} {position {LEDController.bsv 248 18}}} {function LEDController::bitsToLED {result LEDController::LED#(n)} {arguments Bit#(n)} {position {LEDController.bsv 262 18}}}

{module GPIOController::mkGPIOController {interface GPIOController::GPIOController} {arguments Bool} {position {GPIOController.bsv 66 8}}} {function GPIOController::getGPIO {result GPIOController::GPIO} {arguments GPIOController::GPIOController} {position {GPIOController.bsv 111 15}}} {function GPIOController::gpioToInout {result Inout#(Bit#(1))} {arguments GPIOController::GPIO} {position {GPIOController.bsv 116 26}}} {function GPIOController::inoutToGPIO {result GPIOController::GPIO} {arguments Inout#(Bit#(1))} {position {GPIOController.bsv 121 15}}}

{module ButtonController::mkButtonController {interface ButtonController::ButtonController} {arguments Clock} {position {ButtonController.bsv 50 8}}}

{module DVIController::mkDVIController {interface DVIController::DVIController#(clockMHz)} {arguments Video::VideoTiming} {position {DVIController.bsv 107 8}}}

{module LCDController::mkLCDController {interface LCDController::LCDController} {position {LCDController.bsv 44 8}}} {function LCDController::lcdPad {result {{Vector::Vector#(n, Bit#(8))}}} {position {LCDController.bsv 304 29}}} {function LCDController::lcdLine {result {{Vector::Vector#(16, Bit#(8))}}} {arguments String} {position {LCDController.bsv 309 30}}} {function LCDController::lcdBar {result {{Vector::Vector#(13, Bit#(8))}}} {arguments UInt#(6)} {position {LCDController.bsv 326 30}}} {function LCDController::lcdLogoTop {result {{Vector::Vector#(2, Bit#(8))}}} {position {LCDController.bsv 347 29}}} {function LCDController::lcdLogoBottom {result {{Vector::Vector#(2, Bit#(8))}}} {position {LCDController.bsv 351 29}}}

{module HDMIController::mkHDMIController {interface HDMIController::HDMIController} {arguments HDMIController::HDMIParams} {position {HDMIController.bsv 105 8}}}

{module XilinxClocks::mkXilinxClockController {interface XilinxClocks::XilinxClockController} {arguments {XilinxClocks::XilinxClockParams Clock}} {position {XilinxClocks.bsv 222 8}}} {module XilinxClocks::vMMCME3_ADV {interface XilinxClocks::VMMCM_ADV} {arguments {XilinxCells::MMCMParams Clock}} {position {XilinxClocks.bsv 606 8}}} {module XilinxClocks::vMMCME2_ADV {interface XilinxClocks::VMMCM_ADV} {arguments {XilinxCells::MMCMParams Clock}} {position {XilinxClocks.bsv 710 8}}} {module XilinxClocks::vMMCM_ADV {interface XilinxClocks::VMMCM_ADV} {arguments {XilinxCells::MMCMParams Clock}} {position {XilinxClocks.bsv 814 8}}}

{module ClockHacks::packClock {interface ClockHacks::OutputBit} {arguments Clock} {position {src_BSV/ClockHacks.bsv 13 8}}} {module ClockHacks::packReset {interface ClockHacks::OutputBit} {arguments Reset} {position {src_BSV/ClockHacks.bsv 27 8}}} {module ClockHacks::unpackClock {interface ClockHacks::UnpackedClock} {position {src_BSV/ClockHacks.bsv 47 8}}} {module ClockHacks::unpackReset {interface ClockHacks::UnpackedReset} {arguments Clock} {position {src_BSV/ClockHacks.bsv 67 8}}} {module ClockHacks::mkBlock {interface ClockHacks::BlockIfc} {position {src_BSV/ClockHacks.bsv 88 8}}} {module ClockHacks::mkTop {interface Empty} {position {src_BSV/ClockHacks.bsv 96 8}}}


{function JtagTap::irmask {result Bit#(JtagTap::IR_LENGTH)} {position {src_BSV/JtagTap.bsv 28 17}}} {function JtagTap::ir_bypass0 {result Bit#(JtagTap::IR_LENGTH)} {position {src_BSV/JtagTap.bsv 29 17}}} {function JtagTap::ir_idcode {result Bit#(JtagTap::IR_LENGTH)} {position {src_BSV/JtagTap.bsv 30 17}}} {function JtagTap::ir_dtmcs {result Bit#(JtagTap::IR_LENGTH)} {position {src_BSV/JtagTap.bsv 37 17}}} {function JtagTap::ir_dmi {result Bit#(JtagTap::IR_LENGTH)} {position {src_BSV/JtagTap.bsv 40 17}}} {function JtagTap::ir_reserved12 {result Bit#(JtagTap::IR_LENGTH)} {position {src_BSV/JtagTap.bsv 49 17}}} {function JtagTap::ir_reserved13 {result Bit#(JtagTap::IR_LENGTH)} {position {src_BSV/JtagTap.bsv 50 17}}} {function JtagTap::ir_reserved14 {result Bit#(JtagTap::IR_LENGTH)} {position {src_BSV/JtagTap.bsv 51 17}}} {function JtagTap::ir_reserved15 {result Bit#(JtagTap::IR_LENGTH)} {position {src_BSV/JtagTap.bsv 52 17}}} {function JtagTap::ir_reserved16 {result Bit#(JtagTap::IR_LENGTH)} {position {src_BSV/JtagTap.bsv 53 17}}} {function JtagTap::ir_reserved17 {result Bit#(JtagTap::IR_LENGTH)} {position {src_BSV/JtagTap.bsv 54 17}}} {function JtagTap::ir_bypass1f {result Bit#(JtagTap::IR_LENGTH)} {position {src_BSV/JtagTap.bsv 55 17}}} {function JtagTap::idcode {result Bit#(32)} {position {src_BSV/JtagTap.bsv 56 10}}} {function JtagTap::drmask_bypass {result Bit#(JtagTap::DR_LENGTH)} {position {src_BSV/JtagTap.bsv 57 17}}} {function JtagTap::drmask_idcode {result Bit#(JtagTap::DR_LENGTH)} {position {src_BSV/JtagTap.bsv 58 17}}} {function JtagTap::drmask_dtmcs {result Bit#(JtagTap::DR_LENGTH)} {position {src_BSV/JtagTap.bsv 59 17}}} {function JtagTap::drmask_dmi {result Bit#(JtagTap::DR_LENGTH)} {position {src_BSV/JtagTap.bsv 60 17}}} {function JtagTap::opNOP {result JtagTap::DMI_OP} {position {src_BSV/JtagTap.bsv 108 8}}} {function JtagTap::opREAD {result JtagTap::DMI_OP} {position {src_BSV/JtagTap.bsv 109 8}}} {function JtagTap::opWRITE {result JtagTap::DMI_OP} {position {src_BSV/JtagTap.bsv 110 8}}} {function JtagTap::opRESERVED {result JtagTap::DMI_OP} {position {src_BSV/JtagTap.bsv 111 8}}} {function JtagTap::opSUCCESS {result JtagTap::DMI_OP} {position {src_BSV/JtagTap.bsv 112 8}}} {function JtagTap::opFAILED {result JtagTap::DMI_OP} {position {src_BSV/JtagTap.bsv 113 8}}} {function JtagTap::opBUSY {result JtagTap::DMI_OP} {position {src_BSV/JtagTap.bsv 114 8}}} {function JtagTap::f_dmi_stuck {result Bool} {arguments JtagTap::DMI} {position {src_BSV/JtagTap.bsv 126 15}}} {function JtagTap::f_next_state {result JtagTap::JtagState} {arguments {JtagTap::JtagState Bit#(1)}} {position {src_BSV/JtagTap.bsv 133 20}}} {module JtagTap::mkJtagTap {interface JtagTap::JtagTap_IFC} {position {src_BSV/JtagTap.bsv 180 8}}}

{module P2_Core::mkP2_Core {interface P2_Core::P2_Core_IFC} {position {src_BSV/P2_Core.bsv 129 8}}}

