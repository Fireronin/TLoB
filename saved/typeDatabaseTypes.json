Alias ExampleAXI4::NMASTERS 2 {position {tutorial/ExampleAXI4.bsv 42 11}}
Alias ExampleAXI4::NSLAVES 2 {position {tutorial/ExampleAXI4.bsv 43 11}}
Alias ExampleAXI4::SlaveWidth 4096 {position {tutorial/ExampleAXI4.bsv 45 14}}
Alias ExampleAXI4::MID_sz 1 {position {tutorial/ExampleAXI4.bsv 47 25}}
Alias ExampleAXI4::SID_sz 2 {position {tutorial/ExampleAXI4.bsv 48 39}}
Alias ExampleAXI4::ADDR_sz 14 {position {tutorial/ExampleAXI4.bsv 49 53}}
Alias ExampleAXI4::DATA_sz 128 {position {tutorial/ExampleAXI4.bsv 50 13}}
Alias ExampleAXI4::AWUSER_sz 0 {position {tutorial/ExampleAXI4.bsv 51 13}}
Alias ExampleAXI4::WUSER_sz 0 {position {tutorial/ExampleAXI4.bsv 52 13}}
Alias ExampleAXI4::BUSER_sz 0 {position {tutorial/ExampleAXI4.bsv 53 13}}
Alias ExampleAXI4::ARUSER_sz 0 {position {tutorial/ExampleAXI4.bsv 54 13}}
Alias ExampleAXI4::RUSER_sz 0 {position {tutorial/ExampleAXI4.bsv 55 13}}
Struct {AddressFlit::AFlit#(numeric type d, numeric type o)} polymorphic {members {{Bit#(d) data} {Bit#(o) dest}}} {position {tutorial/AddressFlit.bsv 8 3}}
Interface {CRC::CRC#(numeric type n)} polymorphic {members {{method {Action add Bit#(8) {{(* ports = ["data"] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bit#(n) result {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(n)) complete {} {{(* ports = [] *)}}}}}} {position {%/Libraries/CRC.bsv 19 11 {Library CRC}}}
Struct BRAM::BRAM_Configure {members {{Integer memorySize} {Integer latency} {BRAM::LoadFormat loadFormat} {Integer outFIFODepth} {Bool allowWriteResponseBypass {width 1}}}} {position {%/Libraries/BRAM.bsv 47 6 {Library BRAM}}}
TaggedUnion BRAM::LoadFormat {members {{void None {width 0}} {String Hex} {String Binary}}} {position {%/Libraries/BRAM.bsv 53 6 {Library BRAM}}}
Struct {BRAM_Compat::BRAMRequest#(type addr, type data)} polymorphic {members {{Bool write {width 1}} {addr address} {data datain}}} {position {%/Libraries/BRAM_Compat.bsv 23 19 {Library BRAM_Compat}}}
Struct {BRAM_Compat::BRAMRequestBE#(type addr, type data, numeric type n)} polymorphic {members {{Bit#(n) writeen} {addr address} {data datain}}} {position {%/Libraries/BRAM_Compat.bsv 29 19 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMServer#(type addr, type data)} {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} {position {%/Libraries/BRAM_Compat.bsv 31 49 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMClient#(type addr, type data)} {ClientServer::Client#(BRAM_Compat::BRAMRequest#(addr, data), data)} {position {%/Libraries/BRAM_Compat.bsv 32 49 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMServerBE#(type addr, type data, numeric type n)} {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} {position {%/Libraries/BRAM_Compat.bsv 34 54 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMClientBE#(type addr, type data, numeric type n)} {ClientServer::Client#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} {position {%/Libraries/BRAM_Compat.bsv 35 54 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM1Port#(type addr, type data)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portA {}}}} {position {%/Libraries/BRAM_Compat.bsv 66 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM1PortBE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}}}} {position {%/Libraries/BRAM_Compat.bsv 94 11 {Library BRAM_Compat}}}
Alias {BRAM::BRAM1PortBE8#(type addr, type data)} {BRAM::BRAM1PortBE#(addr, data, TDiv#(SizeOf#(data), 8))} {position {%/Libraries/BRAM.bsv 134 59 {Library BRAM}}}
Interface {BRAM_Compat::BRAM2Port#(type addr, type data)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 61 11 {Library BRAM_Compat}}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {BRAM_Compat::BRAM2PortBE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 89 11 {Library BRAM_Compat}}}
Typeclass {BRAM::RequestToBRAM#(type bram_request_t, type bramifc_t)} {members {{{function Action f(bramifc_t x1, bram_request_t x2)} doRequest}}} {instances {{BRAM::RequestToBRAM#(BRAM::BRAMRequest#(addr, data), BRAMCore::BRAM_PORT#(addr, data))} {BRAM::RequestToBRAM#(BRAM::BRAMRequestBE#(addr, data, n), BRAMCore::BRAM_PORT_BE#(addr, data, n))}}} {position {%/Libraries/BRAM.bsv 429 11 {Library BRAM}}}
Typeclass {BRAM::RequestToResponse#(type bram_request_t)} {members {{{function Bool f(bram_request_t x1)} responseRequired} {{function Bool f(bram_request_t x1)} isWriteRequest}}} {instances {{BRAM::RequestToResponse#(BRAM::BRAMRequest#(addr, data))} {BRAM::RequestToResponse#(BRAM::BRAMRequestBE#(addr, data, n))}}} {position {%/Libraries/BRAM.bsv 432 11 {Library BRAM}}}
Typeclass {BRAM::BRAMToResponse#(type bramifc_t, type response_t)} {members {{{function ActionValue#(response_t) f(bramifc_t x1)} getResponse} {{function response_t f(bramifc_t x1)} readResponse}}} {instances {{BRAM::BRAMToResponse#(BRAMCore::BRAM_PORT#(addr, data), data)} {BRAM::BRAMToResponse#(BRAMCore::BRAM_PORT_BE#(addr, data, n), data)}}} {position {%/Libraries/BRAM.bsv 436 11 {Library BRAM}}}
Interface {BRAM::ServerWithClear#(type req, type resp)} polymorphic {members {{interface {ClientServer::Server#(req, resp)} server {}} {method {Action clear {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/BRAM.bsv 443 11 {Library BRAM}}}
Interface BRAM::SizedReg {members {{method {Action _write Integer {{(* ports = ["i"] *)}}}} {method {Action addA Integer {{(* ports = ["i"] *)}}}} {method {Action addB Integer {{(* ports = ["d"] *)}}}} {method {Bool isLessThan Integer {{(* ports = ["i"] *)}}}} {method {Bool isGreaterThan Integer {{(* ports = ["i"] *)}}}} {method {Bool isEqualTo Integer {{(* ports = ["i"] *)}}}}}} {position {%/Libraries/BRAM.bsv 880 11 {Library BRAM}}}
Interface {GetPut::Get#(type a)} polymorphic {members {{method {ActionValue#(a) get {} {}}}}} {position {%/Libraries/GetPut.bs 88 10 {Library GetPut}}}
Interface {GetPut::GetS#(type a)} polymorphic {members {{method {a first {} {}}} {method {Action deq {} {}}}}} {position {%/Libraries/GetPut.bs 91 10 {Library GetPut}}}
Interface {GetPut::Put#(type a)} polymorphic {members {{method {Action put a {{(* prefix = "" *)} {(* result = "UNUSED" *)} {(* ports = ["put"] *)}}}}}} {position {%/Libraries/GetPut.bs 115 10 {Library GetPut}}}
Interface {GetPut::PutS#(type a)} polymorphic {members {{method {Action offer a {}}} {method {Bool accepted {} {}}}}} {position {%/Libraries/GetPut.bs 118 10 {Library GetPut}}}
Interface {AhbMaster::GetPut#(type p, type g)} polymorphic {members {{method {ActionValue#(g) getput p {{(* ports = ["value"] *)}}}}}} {position {AhbMaster.bsv 31 11}}
Typeclass {GetPut::ToGet#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Get#(b) f(a x1)} toGet}}} {instances {{GetPut::ToGet#(ActionValue#(a), a)} {GetPut::ToGet#(AlignedFIFOs::AlignedFIFO#(t), t)} {GetPut::ToGet#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToGet#(CommitIfc::SendCommit#(a), a)} {GetPut::ToGet#(FIFO::FIFO#(a), a)} {GetPut::ToGet#(FIFOF::FIFOF#(a), a)} {GetPut::ToGet#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(GenCMsg::Rx#(d, s, a), a)} {GetPut::ToGet#(GetPut::Get#(a), a)} {GetPut::ToGet#(MasterSlaveCHERI::CheckedGet#(data_t), data_t)} {GetPut::ToGet#(NullCrossingFIFOF::CrossingFIFOF#(t), t)} {GetPut::ToGet#(PAClib::PipeOut#(a), a)} {GetPut::ToGet#(RWire#(a), a)} {GetPut::ToGet#(ReadOnly#(a), a)} {GetPut::ToGet#(Reg#(a), a)} {GetPut::ToGet#(Semi_FIFOF::FIFOF_O#(t), t)} {GetPut::ToGet#(SourceSink::Source#(t), t)} {GetPut::ToGet#(a, a)}}} {position {%/Libraries/GetPut.bs 417 6 {Library GetPut}}}
Typeclass {GetPut::ToPut#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Put#(b) f(a x1)} toPut}}} {instances {{GetPut::ToPut#(AlignedFIFOs::AlignedFIFO#(t), t)} {GetPut::ToPut#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToPut#(CommitIfc::RecvCommit#(a), a)} {GetPut::ToPut#(FIFO::FIFO#(a), a)} {GetPut::ToPut#(FIFOF::FIFOF#(a), a)} {GetPut::ToPut#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(GenCMsg::Tx#(d, s, a), a)} {GetPut::ToPut#(GetPut::Put#(a), a)} {GetPut::ToPut#(MasterSlaveCHERI::CheckedPut#(data_t), data_t)} {GetPut::ToPut#(NullCrossingFIFOF::CrossingFIFOF#(t), t)} {GetPut::ToPut#(RWire#(a), a)} {GetPut::ToPut#(Reg#(a), a)} {GetPut::ToPut#(Semi_FIFOF::FIFOF_I#(t), t)} {GetPut::ToPut#(SourceSink::Sink#(t), t)} {GetPut::ToPut#(function Action f(a x1), a)}}} {position {%/Libraries/GetPut.bs 420 6 {Library GetPut}}}
Interface {ClientServer::Client#(type a, type b)} polymorphic {members {{interface GetPut::Get#(a) request {}} {interface GetPut::Put#(b) response {}}}} {position {%/Libraries/ClientServer.bs 34 10 {Library ClientServer}}}
Interface {ClientServer::Server#(type a, type b)} polymorphic {members {{interface GetPut::Put#(a) request {}} {interface GetPut::Get#(b) response {}}}} {position {%/Libraries/ClientServer.bs 45 10 {Library ClientServer}}}
Alias {ClientServer::ClientServer#(type a, type b)} {Tuple2#(ClientServer::Client#(a, b), ClientServer::Server#(a, b))} {position {%/Libraries/ClientServer.bs 100 5 {Library ClientServer}}}
TaggedUnion {ModuleContextCore::ModuleContext#(type c, type i)} polymorphic {members {{{module f#(c x1)(Tuple2#(c, i))} M}}} {position {%/Libraries/ModuleContextCore.bs 4 5 {Library ModuleContextCore}}}

Struct {Complex::Complex#(type any_t)} polymorphic {members {{any_t rel} {any_t img}}} {position {%/Libraries/Complex.bsv 22 11 {Library Complex}}}



Interface {FoldFIFOF::FoldFIFO#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Bool notFull {} {}}} {method {Bool notEmpty {} {}}} {method {Action clear {} {}}} {method {b foldr {{function b f(a x1, b x2)} b} {}}}}} {position {%/Libraries/FoldFIFOF.bs 12 10 {Library FoldFIFOF}}}

Interface {SPSRAM::VSyncSRAM#(numeric type adrs, numeric type dtas)} polymorphic {members {{method {PrimAction exec {Bit#(adrs) Bit#(dtas) Bit#(1) Bit#(1)} {}}} {method {Bit#(dtas) rdata {} {}}}}} {position {%/Libraries/SPSRAM.bs 67 10 {Library SPSRAM}}}
Interface {BRAMFIFO::IBRAMFIFOF#(numeric type log2depth, type t)} polymorphic {members {{interface FIFOF::FIFOF#(t) fifo {}}}} {position {%/Libraries/BRAMFIFO.bsv 32 11 {Library BRAMFIFO}}}
Interface {BRAMFIFO::ISyncBRAMFIFOFIfc#(numeric type log2depth, type t)} polymorphic {members {{interface Clocks::SyncFIFOIfc#(t) fifo {}}}} {position {%/Libraries/BRAMFIFO.bsv 36 11 {Library BRAMFIFO}}}
Interface {AlignedFIFOs::Store#(type i, type a, numeric type n)} polymorphic {members {{method {Action write {i a} {{(* ports = ["idx", "value"] *)}}}} {method {Action prefetch i {{(* ports = ["idx"] *)}}}} {method {a read i {{(* ports = ["idx"] *)}}}}}} {position {%/Libraries/AlignedFIFOs.bsv 44 11 {Library AlignedFIFOs}}}
Interface {AlignedFIFOs::RawReg#(numeric type n)} polymorphic {members {{method {Action write Bit#(n) {{(* ports = ["x"] *)}}}} {method {Bit#(n) read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/AlignedFIFOs.bsv 54 11 {Library AlignedFIFOs}}} {attributes {{(* always_ready  *)}}}
Interface {AlignedFIFOs::AlignedFIFO#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["x"] *)}}}} {method {a first {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/AlignedFIFOs.bsv 232 11 {Library AlignedFIFOs}}}
Interface {Pull::Pull#(type a)} polymorphic {members {{method {ActionValue#(a) pull {} {}}}}} {position {%/Libraries/Pull.bs 21 10 {Library Pull}}}
Interface {SRAM::ShiftReg#(numeric type n, type a)} polymorphic {members {{method {a output {} {}}} {method {Action shift a {}}}}} {position {%/Libraries/SRAM.bs 135 11 {Library SRAM}}}
Interface StmtFSMUtil::MEState {members {{method {Action set Integer {{(* ports = ["value"] *)}}}} {method {Action set_delayed Integer {{(* ports = ["value"] *)}}}} {method {Action reset {} {{(* ports = [] *)}}}} {method {Action reset_delayed {} {{(* ports = [] *)}}}} {method {Bool is Integer {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/StmtFSMUtil.bsv 7 11 {Library StmtFSMUtil}}}
Interface {StmtFSMUtil::MEStateInternal#(type a)} polymorphic {members {{method {Action set Integer {{(* ports = ["value"] *)}}}} {method {Action set_delayed Integer {{(* ports = ["value"] *)}}}} {method {Action reset {} {{(* ports = [] *)}}}} {method {Action reset_delayed {} {{(* ports = [] *)}}}} {method {Bool is Integer {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/StmtFSMUtil.bsv 15 11 {Library StmtFSMUtil}}}
Alias {SyncSRAM::SyncSRAMS#(numeric type lat, numeric type adrs, numeric type dtas)} {ClientServer::Server#(SyncSRAM::SyncSRAMrequest#(lat, adrs, dtas), Bit#(dtas))} {position {%/Libraries/SyncSRAM.bs 21 5 {Library SyncSRAM}}}
Alias {SyncSRAM::SyncSRAMC#(numeric type lat, numeric type adrs, numeric type dtas)} {ClientServer::Client#(SyncSRAM::SyncSRAMrequest#(lat, adrs, dtas), Bit#(dtas))} {position {%/Libraries/SyncSRAM.bs 30 5 {Library SyncSRAM}}}
Interface {SyncSRAM::SyncSRAMrequest#(numeric type lat, numeric type adrs, numeric type dtas)} polymorphic {members {{method {Bit#(adrs) addr {} {}}} {method {Bit#(dtas) wdata {} {}}} {method {Bit#(1) we {} {}}} {method {Bit#(1) ena {} {}}}}} {position {%/Libraries/SyncSRAM.bs 43 11 {Library SyncSRAM}}}
Interface {CommitIfc::SendCommit#(type a)} polymorphic {members {{method {a dataout {} {{(* ports = [] *)}}}} {method {Action ack {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/CommitIfc.bsv 15 11 {Library CommitIfc}}}
Interface {CommitIfc::RecvCommit#(type a)} polymorphic {members {{method {Action datain a {{(* ports = ["din"] *)} {(* always_ready  *)}}}} {method {Bool accept {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/CommitIfc.bsv 21 11 {Library CommitIfc}}}
Typeclass {CommitIfc::ToSendCommit#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(CommitIfc::SendCommit#(b)) f(a x1)   provisos (IsModule#(c, d))} mkSendCommit}}} {instances {{CommitIfc::ToSendCommit#(Clocks::SyncFIFOIfc#(a), a)} {CommitIfc::ToSendCommit#(FIFO::FIFO#(a), a)} {CommitIfc::ToSendCommit#(FIFOF::FIFOF#(a), a)} {CommitIfc::ToSendCommit#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {CommitIfc::ToSendCommit#(GetPut::Get#(a), a)   provisos (Bits#(a, sa))} {CommitIfc::ToSendCommit#(RWire#(a), a)}}} {position {%/Libraries/CommitIfc.bsv 147 11 {Library CommitIfc}}}
Typeclass {CommitIfc::ToRecvCommit#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(CommitIfc::RecvCommit#(b)) f(a x1)   provisos (IsModule#(c, d))} mkRecvCommit}}} {instances {{CommitIfc::ToRecvCommit#(Clocks::SyncFIFOIfc#(a), a)   provisos (Bits#(a, sa))} {CommitIfc::ToRecvCommit#(FIFOF::FIFOF#(a), a)   provisos (Bits#(a, sa))} {CommitIfc::ToRecvCommit#(FIFOLevel::FIFOLevelIfc#(a, n), a)   provisos (Bits#(a, sa))} {CommitIfc::ToRecvCommit#(GetPut::Put#(a), a)   provisos (Bits#(a, sa))} {CommitIfc::ToRecvCommit#(RWire#(a), a)}}} {position {%/Libraries/CommitIfc.bsv 152 11 {Library CommitIfc}}}
Interface {CommitIfc::ClientCommit#(type req, type resp)} polymorphic {members {{interface CommitIfc::SendCommit#(req) request {}} {interface CommitIfc::RecvCommit#(resp) response {}}}} {position {%/Libraries/CommitIfc.bsv 354 11 {Library CommitIfc}}}
Interface {CommitIfc::ServerCommit#(type req, type resp)} polymorphic {members {{interface CommitIfc::RecvCommit#(req) request {}} {interface CommitIfc::SendCommit#(resp) response {}}}} {position {%/Libraries/CommitIfc.bsv 359 11 {Library CommitIfc}}}
Interface {CBus::CBus#(numeric type sa, numeric type sd)} polymorphic {members {{method {Action write {Bit#(sa) Bit#(sd)} {{(* ports = ["addr", "data"] *)}}}} {method {ActionValue#(Bit#(sd)) read Bit#(sa) {{(* ports = ["addr"] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/CBus.bsv 16 11 {Library CBus}}}
Interface {CBus::IWithCBus#(type cbus_IFC, type device_IFC)} polymorphic {members {{method {cbus_IFC cbus_ifc {} {}}} {method {device_IFC device_ifc {} {}}}}} {position {%/Libraries/CBus.bsv 23 11 {Library CBus}}}
Alias {CBus::CBusItem#(numeric type sa, numeric type sd)} {CBus::CBus#(sa, sd)} {position {%/Libraries/CBus.bsv 33 23 {Library CBus}}}
Alias {CBus::ModWithCBus#(numeric type sa, numeric type sd, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(sa, sd)), HList::HNil), i)} {position {%/Libraries/CBus.bsv 36 46 {Library CBus}}}
Struct {CBus::CRAddr#(numeric type sa, numeric type sd)} polymorphic {members {{Bit#(sa) a} {Bit#(TLog#(sd)) o}}} {position {%/Libraries/CBus.bsv 41 6 {Library CBus}}}
Typeclass {CBus::ExtendNP#(type a, numeric type m, numeric type n)} {members {{{function a#(m) f(a#(n) x1)} extendNP} {{function a#(m) f(a#(n) x1)} zeroExtendNP} {{function a#(m) f(a#(n) x1)} signExtendNP} {{function a#(m) f(a#(n) x1)} truncateNP} {{function a#(m) f(a#(n) x1)} truncateLSBNP}}} {instances {{CBus::ExtendNP#(Bit, m, n)} {CBus::ExtendNP#(Int, m, n)} {CBus::ExtendNP#(UInt, m, n)}}} {position {%/Libraries/CBus.bsv 454 11 {Library CBus}}}

Interface {BGetPut::BGetS#(numeric type sa)} polymorphic {members {{method {Bit#(sa) gvalue {} {}}} {method {Bool gpresent {} {}}} {method {Action gcredit Bool {}}}}} {position {%/Libraries/BGetPut.bs 36 10 {Library BGetPut}}}
Interface {BGetPut::BPutS#(numeric type sa)} polymorphic {members {{method {Action pvalue Bit#(sa) {}}} {method {Action ppresent Bool {}}} {method {Bool pcredit {} {}}}}} {position {%/Libraries/BGetPut.bs 48 10 {Library BGetPut}}}
Alias {BGetPut::BGet#(type a)} BGetPut::BGetS#(SizeOf#(a)) {position {%/Libraries/BGetPut.bs 60 5 {Library BGetPut}}}
Alias {BGetPut::BPut#(type a)} BGetPut::BPutS#(SizeOf#(a)) {position {%/Libraries/BGetPut.bs 61 5 {Library BGetPut}}}
Alias {BGetPut::BGetPut#(type a)} {Tuple2#(BGetPut::BGetS#(SizeOf#(a)), GetPut::Put#(a))} {position {%/Libraries/BGetPut.bs 63 5 {Library BGetPut}}}
Alias {BGetPut::GetBPut#(type a)} {Tuple2#(GetPut::Get#(a), BGetPut::BPutS#(SizeOf#(a)))} {position {%/Libraries/BGetPut.bs 64 5 {Library BGetPut}}}
Interface {BGetPut::BClientS#(numeric type sa, numeric type sb)} polymorphic {members {{interface BGetPut::BGetS#(sa) request {}} {interface BGetPut::BPutS#(sb) response {}}}} {position {%/Libraries/BGetPut.bs 182 10 {Library BGetPut}}}
Interface {BGetPut::BServerS#(numeric type sa, numeric type sb)} polymorphic {members {{interface BGetPut::BPutS#(sa) request {}} {interface BGetPut::BGetS#(sb) response {}}}} {position {%/Libraries/BGetPut.bs 186 10 {Library BGetPut}}}
Alias {BGetPut::BClient#(type a, type b)} {BGetPut::BClientS#(SizeOf#(a), SizeOf#(b))} {position {%/Libraries/BGetPut.bs 208 5 {Library BGetPut}}}
Alias {BGetPut::BServer#(type a, type b)} {BGetPut::BServerS#(SizeOf#(a), SizeOf#(b))} {position {%/Libraries/BGetPut.bs 209 5 {Library BGetPut}}}
Alias {BGetPut::BClientServer#(type a, type b)} {Tuple2#(BGetPut::BClientS#(SizeOf#(a), SizeOf#(b)), ClientServer::Server#(a, b))} {position {%/Libraries/BGetPut.bs 210 5 {Library BGetPut}}}
Alias {BGetPut::ClientBServer#(type a, type b)} {Tuple2#(ClientServer::Client#(a, b), BGetPut::BServerS#(SizeOf#(a), SizeOf#(b)))} {position {%/Libraries/BGetPut.bs 211 5 {Library BGetPut}}}
Struct {ZBusUtil::ZBit#(type t)} polymorphic {members {{t word}}} {position {%/Libraries/ZBusUtil.bsv 34 19 {Library ZBusUtil}}}
Interface {ZBusUtil::ConvertToZ#(type i)} polymorphic {members {{method {ZBusUtil::ZBit#(i) convert {i Bool} {{(* ports = ["x1", "x2"] *)}}}}}} {position {%/Libraries/ZBusUtil.bsv 52 11 {Library ZBusUtil}}}
Interface {ZBusUtil::ConvertFromZ#(type i)} polymorphic {members {{method {i convert ZBusUtil::ZBit#(i) {{(* ports = ["x1"] *)}}}}}} {position {%/Libraries/ZBusUtil.bsv 91 11 {Library ZBusUtil}}}
Interface {ZBusUtil::ResolveZ#(type i)} polymorphic {members {{method {ZBusUtil::ZBit#(i) resolve {ZBusUtil::ZBit#(i) ZBusUtil::ZBit#(i)} {{(* ports = ["x1", "x2"] *)}}}}}} {position {%/Libraries/ZBusUtil.bsv 130 11 {Library ZBusUtil}}}
Interface {ZBus::ZBusInternalIFC#(type t)} polymorphic {members {{method {ZBusUtil::ZBit#(t) zout {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ZBus.bsv 84 11 {Library ZBus}}}
Interface {ZBus::ZBusBusIFC#(type t)} polymorphic {members {{method {Action fromBusSample {ZBusUtil::ZBit#(t) Bool} {{(* ports = ["value", "isJust"] *)}}}} {method {ZBusUtil::ZBit#(t) toBusValue {} {{(* ports = [] *)}}}} {method {Bool toBusCtl {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ZBus.bsv 158 11 {Library ZBus}}}
Enum ZBus::BState {members {HiZN HiZ Nothing}} {width 2} {position {%/Libraries/ZBus.bsv 227 35 {Library ZBus}}}
Interface {ZBus::ZBusClientIFC#(type t)} polymorphic {members {{method {Action drive t {{(* ports = ["value"] *)}}}} {method {t get {} {{(* ports = [] *)}}}} {method {Bool fromBusValid {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ZBus.bsv 317 11 {Library ZBus}}}
Interface {ZBus::ZBusDualIFC#(type t)} polymorphic {members {{interface ZBus::ZBusBusIFC#(t) busIFC {}} {interface ZBus::ZBusClientIFC#(t) clientIFC {}}}} {position {%/Libraries/ZBus.bsv 323 11 {Library ZBus}}}
Interface {ProbeWire::ProbeWire#(type a)} polymorphic {members {{method {a id a {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/ProbeWire.bsv 28 11 {Library ProbeWire}}}

Interface {SPSRAM::VSyncSRAM#(numeric type adrs, numeric type dtas)} polymorphic {members {{method {PrimAction exec {Bit#(adrs) Bit#(dtas) Bit#(1) Bit#(1)} {}}} {method {Bit#(dtas) rdata {} {}}}}} {position {%/Libraries/SPSRAM.bs 67 10 {Library SPSRAM}}}
Alias {TRAM::TRAM#(type tag, type adr, type dta)} {ClientServer::Server#(TRAM::TRAMreq#(tag, adr, dta), Tuple2#(tag, dta))} {position {%/Libraries/TRAM.bs 18 5 {Library TRAM}}}
Alias {TRAM::TRAMclient#(type tag, type adr, type dta)} {ClientServer::Client#(TRAM::TRAMreq#(tag, adr, dta), Tuple2#(tag, dta))} {position {%/Libraries/TRAM.bs 26 5 {Library TRAM}}}
TaggedUnion {TRAM::TRAMreq#(type tg, type adr, type dta)} polymorphic {members {{{Tuple2#(tg, adr)} Read} {{Tuple2#(adr, dta)} Write}}} {position {%/Libraries/TRAM.bs 45 5 {Library TRAM}}}
Alias {TRAM::TRAMresp#(type tg, type dta)} {Tuple2#(tg, dta)} {position {%/Libraries/TRAM.bs 57 5 {Library TRAM}}}
Interface {PAClib::PipeOut#(type t)} polymorphic {members {{method {t first {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PAClib.bsv 44 11 {Library PAClib}}}
Alias {PAClib::Pipe#(type ta, type tb)} {module f#(PAClib::PipeOut#(ta) x1)(PAClib::PipeOut#(tb))} {position {%/Libraries/PAClib.bsv 55 9 {Library PAClib}}}
Typeclass {PAClib::VectorTreeReduce#(numeric type n, type a)} {members {{{module f#(module x1#(PAClib::PipeOut#(Tuple2#(a, a)) x1)(PAClib::PipeOut#(a)), Bit#(32) x2, PAClib::PipeOut#(Vector::Vector#(n, a)) x3)(PAClib::PipeOut#(a))} mkTreeReducePipe} {{module f#(function a x1(a x1, a x2), function a x2(a x1), Bit#(32) x3, PAClib::PipeOut#(Vector::Vector#(n, a)) x4)(PAClib::PipeOut#(a))} mkTreeReduceFn}}} {instances {{PAClib::VectorTreeReduce#(1, a)   provisos (Bits#(a, sa))} {PAClib::VectorTreeReduce#(2, a)   provisos (Bits#(a, sa))} {PAClib::VectorTreeReduce#(n, a)   provisos (PAClib::VectorTreeReduce#(n2, a), Div#(n, 2, n2), Bits#(a, sa))}}} {position {%/Libraries/PAClib.bsv 1582 11 {Library PAClib}}}
Alias LBus::LBUS_ADDR_SIZE 24 {position {%/Libraries/LBus.bsv 19 12 {Library LBus}}}
Alias LBus::LBUS_DATA_SIZE 32 {position {%/Libraries/LBus.bsv 20 12 {Library LBus}}}
Alias LBus::LBusContext {LBus::LBusContextP#(24, 32)} {position {%/Libraries/LBus.bsv 22 58 {Library LBus}}}
Alias LBus::LBusContextIfc {LBus::ILbLeaf#(24, 32)} {position {%/Libraries/LBus.bsv 23 58 {Library LBus}}}
Alias LBus::SA 24 {position {%/Libraries/LBus.bsv 29 24 {Library LBus}}}
Alias LBus::SD 32 {position {%/Libraries/LBus.bsv 30 24 {Library LBus}}}
Interface {LBus::LBSReg#(numeric type sa, numeric type sd)} polymorphic {members {{method {{LBus::LbAddr#(sa, sd)} lbsAddr {} {{(* ports = [] *)}}}} {method {Action lbsSet Bit#(sd) {{(* ports = ["x1"] *)}}}} {method {ActionValue#(Bit#(sd)) lbsGet {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 38 11 {Library LBus}}}
Interface {LBus::IntFlag#(numeric type sa, numeric type sd)} polymorphic {members {{method {Bit#(1) flag {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 48 11 {Library LBus}}}
TaggedUnion {LBus::LBSItem#(numeric type sa, numeric type sd)} polymorphic {members {{{LBus::LBSReg#(sa, sd)} Rg} {{LBus::IntFlag#(sa, sd)} Flg}}} {position {%/Libraries/LBus.bsv 55 3 {Library LBus}}}
TaggedUnion {LBus::LbAddr#(numeric type sa, numeric type sd)} polymorphic {members {{Bit#(sa) LbAddr}}} {position {%/Libraries/LBus.bsv 62 3 {Library LBus}}}
Struct {LBus::LBusContextP#(numeric type sa, numeric type sd)} polymorphic {members {{{List#(LBus::LBSItem#(sa, sd))} items} {{List#(LBus::ILbLeaf#(sa, sd))} leaves}}} {position {%/Libraries/LBus.bsv 86 19 {Library LBus}}}
Alias {LBus::LBusContextIfcP#(numeric type sa, numeric type sd)} {LBus::ILbLeaf#(sa, sd)} {position {%/Libraries/LBus.bsv 88 26 {Library LBus}}}
Interface {LBus::IWithLBus#(type busIfc, type deviceIfc)} polymorphic {members {{method {busIfc bus {} {}}} {method {deviceIfc device {} {}}}}} {position {%/Libraries/LBus.bsv 90 11 {Library LBus}}}
Alias {LBus::LBReg#(numeric type sa, numeric type sd, type i)} {LBus::IWithLBus#(LBus::LBSReg#(sa, sd), i)} {position {%/Libraries/LBus.bsv 95 40 {Library LBus}}}
Enum LBus::ResetType {members {SYNC ASYNC NONE}} {width 2} {position {%/Libraries/LBus.bsv 123 36 {Library LBus}}}
Interface {LBus::Accum#(numeric type n)} polymorphic {members {{method {Action add Bit#(n) {{(* ports = ["x1"] *)}}}} {method {Bit#(n) value {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 349 11 {Library LBus}}}
Interface LBus::Interrupt {members {{method {Action set {} {{(* ports = [] *)}}}} {method {Bool _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 397 11 {Library LBus}}}
Interface {LBus::RegHandler#(type a, type b)} polymorphic {members {{method {a getRequest {} {{(* ports = [] *)}}}} {method {Action storeResponse b {{(* ports = ["x1"] *)}}}}}} {position {%/Libraries/LBus.bsv 485 11 {Library LBus}}}
Enum LBus::LbRWop {members {LbRead LbWrite}} {width 1} {position {%/Libraries/LBus.bsv 565 32 {Library LBus}}}
Interface {LBus::ILBus#(numeric type sa, numeric type sd)} polymorphic {members {{method {Action req {Bool LBus::LbRWop Bit#(sa) Bit#(sd)} {{(* ports = ["valid", "op", "addr", "dat"] *)}}}} {method {Bit#(sd) rdDat {} {{(* ports = [] *)}}}} {method {Bit#(1) ack {} {{(* ports = [] *)}}}} {method {Bit#(1) inrpt {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 568 11 {Library LBus}}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {LBus::LbReq#(numeric type sa, numeric type sd)} polymorphic {members {{LBus::LbRWop wr {width 1}} {Bit#(sa) adr} {Bit#(sd) dat}}} {position {%/Libraries/LBus.bsv 579 19 {Library LBus}}}
Interface {LBus::ILbLeaf#(numeric type sa, numeric type sd)} polymorphic {members {{interface {GetPut::Put#(Maybe#(LBus::LbReq#(sa, sd)))} req {}} {interface GetPut::Get#(Maybe#(Bit#(sd))) ack {}} {interface GetPut::Get#(Bit#(1)) inrpt {{(* always_ready  *)}}}}} {position {%/Libraries/LBus.bsv 581 11 {Library LBus}}}
Interface {LBus::ILbNode#(numeric type sa, numeric type sd)} polymorphic {members {{interface {GetPut::Get#(Maybe#(LBus::LbReq#(sa, sd)))} req {}} {interface GetPut::Put#(Maybe#(Bit#(sd))) ack {}} {interface GetPut::Put#(Bit#(1)) inrpt {}}}} {position {%/Libraries/LBus.bsv 588 11 {Library LBus}}}
Interface {LBus::DutWithLBusIfc#(type i)} polymorphic {members {{method {i dutIfc {} {}}} {interface {LBus::ILbLeaf#(24, 32)} lbus {}}}} {position {%/Libraries/LBus.bsv 845 11 {Library LBus}}}
Typeclass {LBus::LBusAddable#(type m1, type m2)} {dependencies {{m1 determines m2} {m2 determines m1}}} {members {{{function m1#(LBus::DutWithLBusIfc#(a)) f(m2#(a) x1)} runWithLBus}}} {instances {{LBus::LBusAddable#(Module, ModuleContextCore::ModuleContext#(LBus::LBusContext))} {LBus::LBusAddable#(ModuleContextCore::ModuleContext#(c1), ModuleContextCore::ModuleContext#(HList::HCons#(LBus::LBusContext, c1)))}}} {position {%/Libraries/LBus.bsv 850 11 {Library LBus}}}
Enum LBus::LbState {members {Idle Req1 Req2 Req3}} {width 2} {position {%/Libraries/LBus.bsv 886 27 {Library LBus}}}
Interface {LBus::Fan#(type intype, type outtype)} polymorphic {members {{method {intype fanin {} {}}} {method {outtype fanout {} {}}}}} {position {%/Libraries/LBus.bsv 888 11 {Library LBus}}}
Interface {LBus::ILBusDriver#(numeric type sa, numeric type sd)} polymorphic {members {{method {Bool valid {} {{(* ports = [] *)}}}} {method {LBus::LbRWop op {} {{(* ports = [] *)}}}} {method {Bit#(sa) addr {} {{(* ports = [] *)}}}} {method {Bit#(sd) dat {} {{(* ports = [] *)}}}} {method {Action rdDat Bit#(sd) {{(* ports = ["x"] *)}}}} {method {Action ack Bit#(1) {{(* ports = ["x"] *)}}}} {method {Action inrpt Bit#(1) {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/LBus.bsv 1034 11 {Library LBus}}}
Interface {LBus::ILBusHandler#(numeric type sa, numeric type sd)} polymorphic {members {{interface {LBus::ILBusDriver#(sa, sd)} driver {}} {interface {ClientServer::Server#(RAM::RAMreq#(Bit#(sa), Bit#(sd)), Bit#(sd))} lbserver {}} {method {Bool interrupting {} {{(* ports = [] *)}}}} {method {Action resetInterrupt {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 1062 11 {Library LBus}}}
Enum LBus::HandlerState {members {Idle Writing Reading}} {width 2} {position {%/Libraries/LBus.bsv 1070 30 {Library LBus}}}
Alias Wallace::Bit1 Bit#(1) {position {%/Libraries/Wallace.bs 22 5 {Library Wallace}}}
Alias Wallace::BitBag List#(Bit#(1)) {position {%/Libraries/Wallace.bs 23 5 {Library Wallace}}}

Interface {RegTwo::RegTwo#(type a)} polymorphic {members {{method {Action setA a {}}} {method {Action setB a {}}} {method {a get {} {}}}}} {position {%/Libraries/RegTwo.bs 7 10 {Library RegTwo}}}
Interface {RegTwo::VRegTwo#(numeric type n)} polymorphic {members {{method {PrimAction setA Bit#(n) {}}} {method {PrimAction setB Bit#(n) {}}} {method {Bit#(n) get {} {}}}}} {position {%/Libraries/RegTwo.bs 12 10 {Library RegTwo}}}
Alias {ModuleCollect::ModuleCollect#(type a, type b)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(a), HList::HNil), b)} {position {%/Libraries/ModuleCollect.bsv 14 45 {Library ModuleCollect}}}
Interface {ModuleCollect::IWithCollection#(type a, type i)} polymorphic {members {{method {i device {} {{(* ports = [] *)}}}} {method {List#(a) collection {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ModuleCollect.bsv 36 11 {Library ModuleCollect}}}
Enum OVLAssertions::OVLSeverityLevel {members {OVL_FATAL OVL_ERROR OVL_WARNING OVL_INFO DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 17 33}}
Enum OVLAssertions::OVLPropertyType {members {OVL_ASSERT OVL_ASSUME OVL_IGNORE DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 22 33}}
Enum OVLAssertions::OVLCoverageLevel {members {OVL_COVER_NONE OVL_COVER_ALL OVL_COVER_SANITY OVL_COVER_BASIC OVL_COVER_CORNER OVL_COVER_STATISTIC DEFAULT ILLEGAL}} {width 32} {position {%/Libraries/OVLAssertions.bsv 30 33}}
Enum OVLAssertions::OVLActionOnNewStart {members {OVL_IGNORE_NEW_START OVL_RESET_ON_NEW_START OVL_ERROR_ON_NEW_START DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 39 33}}
Enum OVLAssertions::OVLEdgeType {members {OVL_NOEDGE OVL_POSEDGE OVL_NEGEDGE OVL_ANYEDGE DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 45 33}}
Enum OVLAssertions::OVLNecessaryCondition {members {OVL_TRIGGER_ON_MOST_PIPE OVL_TRIGGER_ON_FIRST_PIPE OVL_TRIGGER_ON_FIRST_NOPIPE DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 50 33}}
Enum OVLAssertions::OVLInactive {members {OVL_ALL_ZEROS OVL_ALL_ONES OVL_ONE_COLD DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 55 33}}
Struct {OVLAssertions::OVLDefaults#(type a)} polymorphic {members {{OVLAssertions::OVLSeverityLevel severity_level {width 3}} {OVLAssertions::OVLPropertyType property_type {width 3}} {String msg} {OVLAssertions::OVLCoverageLevel coverage_level {width 32}} {OVLAssertions::OVLActionOnNewStart action_on_new_start {width 3}} {OVLAssertions::OVLEdgeType edge_type {width 3}} {OVLAssertions::OVLNecessaryCondition necessary_condition {width 3}} {OVLAssertions::OVLInactive inactive {width 3}} {Int#(32) num_cks {width 32}} {Int#(32) min_cks {width 32}} {Int#(32) max_cks {width 32}} {Int#(32) min_ack_cycle {width 32}} {Int#(32) max_ack_cycle {width 32}} {Int#(32) max_ack_length {width 32}} {Int#(32) req_drop {width 32}} {Int#(32) deassert_count {width 32}} {Int#(32) depth {width 32}} {a value} {a min} {a max} {Bool check_overlapping {width 1}} {Bool check_missing_start {width 1}} {Bool simultaneous_push_pop {width 1}}}} {position {%/Libraries/OVLAssertions.bsv 81 19}}
Struct {OVLAssertions::OVLDefaultsTemplate#(type a)} polymorphic {members {{Maybe#(OVLAssertions::OVLSeverityLevel) severity_level {width 4}} {Maybe#(OVLAssertions::OVLPropertyType) property_type {width 4}} {Maybe#(String) msg} {Maybe#(OVLAssertions::OVLCoverageLevel) coverage_level {width 33}} {Maybe#(OVLAssertions::OVLActionOnNewStart) action_on_new_start {width 4}} {Maybe#(OVLAssertions::OVLEdgeType) edge_type {width 4}} {Maybe#(OVLAssertions::OVLNecessaryCondition) necessary_condition {width 4}} {Maybe#(OVLAssertions::OVLInactive) inactive {width 4}} {Maybe#(Int#(32)) num_cks {width 33}} {Maybe#(Int#(32)) min_cks {width 33}} {Maybe#(Int#(32)) max_cks {width 33}} {Maybe#(Int#(32)) min_ack_cycle {width 33}} {Maybe#(Int#(32)) max_ack_cycle {width 33}} {Maybe#(Int#(32)) max_ack_length {width 33}} {Maybe#(Int#(32)) req_drop {width 33}} {Maybe#(Int#(32)) deassert_count {width 33}} {Maybe#(Int#(32)) depth {width 33}} {Maybe#(a) value} {Maybe#(a) min} {Maybe#(a) max} {Maybe#(Bool) check_overlapping {width 2}} {Maybe#(Bool) check_missing_start {width 2}} {Maybe#(Bool) simultaneous_push_pop {width 2}}}} {position {%/Libraries/OVLAssertions.bsv 107 19}}
Interface {OVLAssertions::AssertTest_IFC#(type a)} polymorphic {members {{method {Action test a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 648 11}}
Interface {OVLAssertions::VAssertTest_IFC#(numeric type n)} polymorphic {members {{method {Action test Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 654 11}}
Interface {OVLAssertions::AssertSampleTest_IFC#(type a)} polymorphic {members {{method {Action sample Bool {{(* ports = ["value"] *)}}}} {method {Action test a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 660 11}}
Interface {OVLAssertions::VAssertSampleTest_IFC#(numeric type n)} polymorphic {members {{method {Action sample Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action test Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 667 11}}
Interface {OVLAssertions::AssertStartTest_IFC#(type a)} polymorphic {members {{method {Action start Bool {{(* ports = ["value"] *)}}}} {method {Action test a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 674 11}}
Interface {OVLAssertions::VAssertStartTest_IFC#(numeric type n)} polymorphic {members {{method {Action start Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action test Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 681 11}}
Interface {OVLAssertions::AssertStartStopTest_IFC#(type a)} polymorphic {members {{method {Action start Bool {{(* ports = ["value"] *)}}}} {method {Action stop Bool {{(* ports = ["value"] *)}}}} {method {Action test a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 688 11}}
Interface {OVLAssertions::VAssertStartStopTest_IFC#(numeric type n)} polymorphic {members {{method {Action start Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action stop Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action test Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 696 11}}
Interface {OVLAssertions::AssertTransitionTest_IFC#(type a)} polymorphic {members {{method {Action test a {{(* ports = ["value"] *)}}}} {method {Action start a {{(* ports = ["value"] *)}}}} {method {Action next a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2491 11}}
Interface {OVLAssertions::VAssertTransitionTest_IFC#(numeric type n)} polymorphic {members {{method {Action test Bit#(n) {{(* ports = ["value"] *)}}}} {method {Action start Bit#(n) {{(* ports = ["value"] *)}}}} {method {Action next Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2497 11}}
Interface {OVLAssertions::AssertQuiescentTest_IFC#(type a)} polymorphic {members {{method {Action sample Bool {{(* ports = ["value"] *)}}}} {method {Action state a {{(* ports = ["value"] *)}}}} {method {Action check a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2640 11}}
Interface {OVLAssertions::VAssertQuiescentTest_IFC#(numeric type n)} polymorphic {members {{method {Action sample Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action state Bit#(n) {{(* ports = ["value"] *)}}}} {method {Action check Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2646 11}}
Interface {OVLAssertions::AssertFifoTest_IFC#(type a, type b)} polymorphic {members {{method {Action push a {{(* ports = ["value"] *)}}}} {method {Action pop b {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2782 11}}
Interface {OVLAssertions::VAssertFifoTest_IFC#(numeric type n, numeric type m)} polymorphic {members {{method {Action push Bit#(n) {{(* ports = ["value"] *)}}}} {method {Action pop Bit#(m) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2787 11}}


Struct {Gray::Gray#(numeric type n)} polymorphic {members {{Bit#(n) code}}} {position {%/Libraries/Gray.bsv 15 19 {Library Gray}}}
TaggedUnion {UnitAppendList::UAList#(type a)} polymorphic {members {{void NoItems {width 0}} {a One} {{Tuple2#(UnitAppendList::UAList#(a), UnitAppendList::UAList#(a))} Append}}} {position {%/Libraries/UnitAppendList.bsv 7 3 {Library UnitAppendList}}}

Interface {BypassReg::WReg#(type a)} polymorphic {members {{method {Action bypass a {{(* ports = ["x"] *)}}}} {method {a _read {} {{(* ports = [] *)}}}} {method {Action _write a {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/BypassReg.bsv 12 11 {Library BypassReg}}}
Interface {UniqueWrappers::Wrapper#(type a, type b)} polymorphic {members {{method {ActionValue#(b) func a {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/UniqueWrappers.bsv 40 11 {Library UniqueWrappers}}}
Interface {UniqueWrappers::Wrapper2#(type a1, type a2, type b)} polymorphic {members {{method {ActionValue#(b) func {a1 a2} {{(* ports = ["x", "y"] *)}}}}}} {position {%/Libraries/UniqueWrappers.bsv 73 11 {Library UniqueWrappers}}}
Interface {UniqueWrappers::Wrapper3#(type a1, type a2, type a3, type b)} polymorphic {members {{method {ActionValue#(b) func {a1 a2 a3} {{(* ports = ["x", "y", "z"] *)}}}}}} {position {%/Libraries/UniqueWrappers.bsv 92 11 {Library UniqueWrappers}}}
Interface {FIFOLevel::FIFOLevelIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["x1"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool isLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool isGreaterThan Integer {{(* ports = ["c1"] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 42 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOLevelIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {Bool sIsLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool sIsGreaterThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool dIsLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool dIsGreaterThan Integer {{(* ports = ["c1"] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 220 11 {Library FIFOLevel}}}
Interface {FIFOLevel::FIFOCountIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} count {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 557 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOCountIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} sCount {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} dCount {} {{(* ports = [] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 701 11 {Library FIFOLevel}}}
Struct {BRAM_Compat::BRAMRequest#(type addr, type data)} polymorphic {members {{Bool write {width 1}} {addr address} {data datain}}} {position {%/Libraries/BRAM_Compat.bsv 23 19 {Library BRAM_Compat}}}
Struct {BRAM_Compat::BRAMRequestBE#(type addr, type data, numeric type n)} polymorphic {members {{Bit#(n) writeen} {addr address} {data datain}}} {position {%/Libraries/BRAM_Compat.bsv 29 19 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMServer#(type addr, type data)} {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} {position {%/Libraries/BRAM_Compat.bsv 31 49 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMClient#(type addr, type data)} {ClientServer::Client#(BRAM_Compat::BRAMRequest#(addr, data), data)} {position {%/Libraries/BRAM_Compat.bsv 32 49 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMServerBE#(type addr, type data, numeric type n)} {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} {position {%/Libraries/BRAM_Compat.bsv 34 54 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMClientBE#(type addr, type data, numeric type n)} {ClientServer::Client#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} {position {%/Libraries/BRAM_Compat.bsv 35 54 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM_PORT#(type addr, type data)} polymorphic {members {{method {Action put {Bool addr data} {{(* ports = ["write", "address", "datain"] *)}}}} {method {data read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/BRAM_Compat.bsv 46 11 {Library BRAM_Compat}}} {attributes {{(* always_ready  *)}}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {BRAM_Compat::BRAM_DUAL_PORT#(type addr, type data)} polymorphic {members {{interface {BRAM_Compat::BRAM_PORT#(addr, data)} a {}} {interface {BRAM_Compat::BRAM_PORT#(addr, data)} b {}}}} {position {%/Libraries/BRAM_Compat.bsv 56 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM2Port#(type addr, type data)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 61 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM1Port#(type addr, type data)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portA {}}}} {position {%/Libraries/BRAM_Compat.bsv 66 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM_PORT_BE#(type addr, type data, numeric type n)} polymorphic {members {{method {Action put {Bit#(n) addr data} {{(* ports = ["writeen", "address", "datain"] *)}}}} {method {data read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/BRAM_Compat.bsv 74 11 {Library BRAM_Compat}}} {attributes {{(* always_ready  *)}}}
Interface {BRAM_Compat::BRAM_DUAL_PORT_BE#(type addr, type data, numeric type n)} polymorphic {members {{interface {BRAM_Compat::BRAM_PORT_BE#(addr, data, n)} a {}} {interface {BRAM_Compat::BRAM_PORT_BE#(addr, data, n)} b {}}}} {position {%/Libraries/BRAM_Compat.bsv 79 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM_BE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 84 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM2PortBE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 89 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM1PortBE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}}}} {position {%/Libraries/BRAM_Compat.bsv 94 11 {Library BRAM_Compat}}}
Enum SVA::SeqRes {members {SeqFail SeqPending SeqHold SeqHoldStrong}} {width 2} {position {%/Libraries/SVA.bsv 79 48 {Library SVA}}}
Interface SVA::Sequence {members {{method {Bool running {} {{(* ports = [] *)}}}} {method {ActionValue#(SVA::SeqRes) advance {} {{(* ports = [] *)}}}}}} {position {%/Libraries/SVA.bsv 81 11 {Library SVA}}}
Interface SVA::Wrap1 {members {{method {SVA::SeqRes f Bool {{(* ports = ["b"] *)}}}}}} {position {%/Libraries/SVA.bsv 108 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap2 {members {{method {{Tuple3#(Bool, Bool, SVA::SeqRes)} f SVA::SeqRes {{(* ports = ["r"] *)}}}}}} {position {%/Libraries/SVA.bsv 156 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap3 {members {{method {Bool f SVA::SeqRes {{(* ports = ["r"] *)}}}}}} {position {%/Libraries/SVA.bsv 304 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap4 {members {{method {SVA::SeqRes f {Bool Bool SVA::SeqRes SVA::SeqRes} {{(* ports = ["run_1", "run_2", "res_l", "res_r"] *)}}}}}} {position {%/Libraries/SVA.bsv 339 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap5 {members {{method {SVA::SeqRes f {SVA::SeqRes SVA::SeqRes} {{(* ports = ["res_l", "res_r"] *)}}}}}} {position {%/Libraries/SVA.bsv 414 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap6 {members {{method {{Tuple2#(Bool, SVA::SeqRes)} f SVA::SeqRes {{(* ports = ["r"] *)}}}}}} {position {%/Libraries/SVA.bsv 486 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap7 {members {{method {{Tuple3#(Bool, Maybe#(SVA::SeqRes), SVA::SeqRes)} f {SVA::SeqRes SVA::SeqRes} {{(* ports = ["r", "ff"] *)}}}}}} {position {%/Libraries/SVA.bsv 545 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Enum SVA::PropRes {members {PropTrue PropUndetermined PropFalse PropVacuous}} {width 2} {position {%/Libraries/SVA.bsv 735 55 {Library SVA}}}
Interface SVA::Property {members {{method {ActionValue#(SVA::PropRes) advance {} {{(* ports = [] *)}}}}}} {position {%/Libraries/SVA.bsv 737 11 {Library SVA}}}
Enum SVA::AssertRes {members {AssertOkay AssertFail}} {width 1} {position {%/Libraries/SVA.bsv 904 28 {Library SVA}}}
Interface SVA::Assertion {members {{method {ActionValue#(SVA::AssertRes) advance {} {{(* ports = [] *)}}}}}} {position {%/Libraries/SVA.bsv 906 11 {Library SVA}}}
Typeclass {CShow::CShow#(type a)} {members {{{function Fmt f(a x1)} cshow} {{function Fmt f(a x1)} cshowP}}} {instances {CShow::CShow#(Bit#(n)) CShow::CShow#(Char) CShow::CShow#(Fmt) CShow::CShow#(Int#(a)) CShow::CShow#(Real) CShow::CShow#(String) {CShow::CShow#(Tuple2#(a, b))   provisos (CShow::CShowTuple#(b), CShow::CShow#(a))} CShow::CShow#(UInt#(a)) {CShow::CShow#(a)   provisos (CShow::CShow'#(r), Generic#(a, r))} CShow::CShow#(void)}} {position {%/Libraries/CShow.bs 12 6 {Library CShow}}}
Typeclass {CShow::CShowTuple#(type a)} {members {{{function Fmt f(a x1)} cshowTuple}}} {instances {{CShow::CShowTuple#(Tuple2#(a, b))   provisos (CShow::CShowTuple#(b), CShow::CShow#(a))} {CShow::CShowTuple#(a)   provisos (CShow::CShow#(a))}}} {position {%/Libraries/CShow.bs 49 6 {Library CShow}}}

Typeclass {CShow::CShowSummand#(type a)} {members {{{function Fmt f(a x1)} cshowSummandNamed} {{function Fmt f(a x1)} cshowSummandAnon}}} {instances {{CShow::CShowSummand#(Meta#(MetaField#(name, idx), a))   provisos (CShow::CShow'#(a))} {CShow::CShowSummand#(Tuple2#(a, b))   provisos (CShow::CShowSummand#(b), CShow::CShowSummand#(a))} CShow::CShowSummand#(void)}} {position {%/Libraries/CShow.bs 101 6 {Library CShow}}}
Typeclass {IVec::IVec#(numeric type n, type t)} {dependencies {{t determines n} {n determines t}}} {members {{{function t#(a) f(Vector::Vector#(n, a) x1)} toIVec} {{function Vector::Vector#(n, a) f(t#(a) x1)} fromIVec}}} {instances {{IVec::IVec#(0, IVec::IVec0)} {IVec::IVec#(1, IVec::IVec1)} {IVec::IVec#(10, IVec::IVec10)} {IVec::IVec#(11, IVec::IVec11)} {IVec::IVec#(12, IVec::IVec12)} {IVec::IVec#(13, IVec::IVec13)} {IVec::IVec#(14, IVec::IVec14)} {IVec::IVec#(15, IVec::IVec15)} {IVec::IVec#(16, IVec::IVec16)} {IVec::IVec#(2, IVec::IVec2)} {IVec::IVec#(3, IVec::IVec3)} {IVec::IVec#(32, IVec::IVec32)} {IVec::IVec#(33, IVec::IVec33)} {IVec::IVec#(4, IVec::IVec4)} {IVec::IVec#(5, IVec::IVec5)} {IVec::IVec#(6, IVec::IVec6)} {IVec::IVec#(7, IVec::IVec7)} {IVec::IVec#(8, IVec::IVec8)} {IVec::IVec#(9, IVec::IVec9)}}} {position {%/Libraries/IVec.bs 28 6 {Library IVec}}}
Interface {IVec::IVec0#(type a)} polymorphic {members {}} {position {%/Libraries/IVec.bs 33 10 {Library IVec}}}
Interface {IVec::IVec1#(type a)} polymorphic {members {{method {a _m00 {} {}}}}} {position {%/Libraries/IVec.bs 45 10 {Library IVec}}}
Interface {IVec::IVec2#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}}}} {position {%/Libraries/IVec.bs 60 10 {Library IVec}}}
Interface {IVec::IVec3#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}}}} {position {%/Libraries/IVec.bs 78 10 {Library IVec}}}
Interface {IVec::IVec4#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}}}} {position {%/Libraries/IVec.bs 99 10 {Library IVec}}}
Interface {IVec::IVec5#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}}}} {position {%/Libraries/IVec.bs 123 10 {Library IVec}}}
Interface {IVec::IVec6#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}}}} {position {%/Libraries/IVec.bs 150 10 {Library IVec}}}
Interface {IVec::IVec7#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}}}} {position {%/Libraries/IVec.bs 180 10 {Library IVec}}}
Interface {IVec::IVec8#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}}}} {position {%/Libraries/IVec.bs 213 10 {Library IVec}}}
Interface {IVec::IVec9#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}}}} {position {%/Libraries/IVec.bs 249 10 {Library IVec}}}
Interface {IVec::IVec10#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}}}} {position {%/Libraries/IVec.bs 288 10 {Library IVec}}}
Interface {IVec::IVec11#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}}}} {position {%/Libraries/IVec.bs 330 10 {Library IVec}}}
Interface {IVec::IVec12#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}}}} {position {%/Libraries/IVec.bs 375 10 {Library IVec}}}
Interface {IVec::IVec13#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}}}} {position {%/Libraries/IVec.bs 423 10 {Library IVec}}}
Interface {IVec::IVec14#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}}}} {position {%/Libraries/IVec.bs 474 10 {Library IVec}}}
Interface {IVec::IVec15#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}} {method {a _m14 {} {}}}}} {position {%/Libraries/IVec.bs 528 10 {Library IVec}}}
Interface {IVec::IVec16#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}} {method {a _m14 {} {}}} {method {a _m15 {} {}}}}} {position {%/Libraries/IVec.bs 585 10 {Library IVec}}}
Interface {IVec::IVec32#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}} {method {a _m14 {} {}}} {method {a _m15 {} {}}} {method {a _m16 {} {}}} {method {a _m17 {} {}}} {method {a _m18 {} {}}} {method {a _m19 {} {}}} {method {a _m20 {} {}}} {method {a _m21 {} {}}} {method {a _m22 {} {}}} {method {a _m23 {} {}}} {method {a _m24 {} {}}} {method {a _m25 {} {}}} {method {a _m26 {} {}}} {method {a _m27 {} {}}} {method {a _m28 {} {}}} {method {a _m29 {} {}}} {method {a _m30 {} {}}} {method {a _m31 {} {}}}}} {position {%/Libraries/IVec.bs 645 10 {Library IVec}}}
Interface {IVec::IVec33#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}} {method {a _m14 {} {}}} {method {a _m15 {} {}}} {method {a _m16 {} {}}} {method {a _m17 {} {}}} {method {a _m18 {} {}}} {method {a _m19 {} {}}} {method {a _m20 {} {}}} {method {a _m21 {} {}}} {method {a _m22 {} {}}} {method {a _m23 {} {}}} {method {a _m24 {} {}}} {method {a _m25 {} {}}} {method {a _m26 {} {}}} {method {a _m27 {} {}}} {method {a _m28 {} {}}} {method {a _m29 {} {}}} {method {a _m30 {} {}}} {method {a _m31 {} {}}} {method {a _m32 {} {}}}}} {position {%/Libraries/IVec.bs 754 10 {Library IVec}}}
Interface {Randomizable::Randomize#(type a)} polymorphic {members {{interface Randomizable::Control cntrl {}} {method {ActionValue#(a) next {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Randomizable.bsv 13 11 {Library Randomizable}}}
Interface {Randomizable::VRandomize#(numeric type n)} polymorphic {members {{method {ActionValue#(Bit#(n)) next {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Randomizable.bsv 18 11 {Library Randomizable}}}
Enum CPU_Globals::Control {members {CONTROL_DISCARD CONTROL_STRAIGHT CONTROL_BRANCH CONTROL_CSRR_W CONTROL_CAPBRANCH CONTROL_SCR_W CONTROL_CSRR_S_or_C CONTROL_FENCE CONTROL_FENCE_I CONTROL_SFENCE_VMA CONTROL_MRET CONTROL_SRET CONTROL_URET CONTROL_WFI CONTROL_TRAP}} {width 4} {position {../src_Core/CPU/CPU_Globals.bsv 443 6}}
Typeclass {Randomizable::Randomizable#(type t)} {members {{{a#(Randomizable::Randomize#(t))   provisos (IsModule#(a, b))} mkRandomizer}}} {instances {{Randomizable::Randomizable#(TLM2Defines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Bounded#(cstm_type), Add#(data_size, _v100, s1), Add#(id_size, _v101, _v100), Bits#(cstm_type, _v101), Add#(2, _v102, s0), Add#(2, _v103, _v102), Add#(addr_size, _v104, _v103), Add#(data_size, _v105, _v104), Add#(uint_size, _v106, _v105), Add#(TDiv#(data_size, 8), _v107, _v106), Add#(2, _v108, _v107), Add#(TLog#(TDiv#(data_size, 8)), _v109, _v108), Add#(uint_size, _v110, _v109), Add#(1, _v111, _v110), Add#(id_size, _v112, _v111), Add#(id_size, _v100, _v112))} {Randomizable::Randomizable#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size))   provisos (Add#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))), s1), Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), s0))} {Randomizable::Randomizable#(TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Bounded#(cstm_type), Add#(data_size, _v100, s1), Add#(id_size, _v101, _v100), Bits#(cstm_type, _v101), Add#(2, _v102, s0), Add#(2, _v103, _v102), Add#(addr_size, _v104, _v103), Add#(data_size, _v105, _v104), Add#(uint_size, _v106, _v105), Add#(TDiv#(data_size, 8), _v107, _v106), Add#(2, _v108, _v107), Add#(TLog#(TDiv#(data_size, 8)), _v109, _v108), Add#(uint_size, _v110, _v109), Add#(1, _v111, _v110), Add#(id_size, _v112, _v111), Add#(id_size, _v100, _v112))}}} {position {%/Libraries/Randomizable.bsv 180 11 {Library Randomizable}}}
Interface {GrayCounter::GrayCounter#(numeric type n)} polymorphic {members {{method {Action incr {} {{(* ports = [] *)}}}} {method {Action decr {} {{(* ports = [] *)}}}} {method {Action sWriteBin Bit#(n) {{(* ports = ["value"] *)}}}} {method {Bit#(n) sReadBin {} {{(* ports = [] *)}}}} {method {Action sWriteGray Gray::Gray#(n) {{(* ports = ["value"] *)}}}} {method {Gray::Gray#(n) sReadGray {} {{(* ports = [] *)}}}} {method {Bit#(n) dReadBin {} {{(* ports = [] *)}}}} {method {Gray::Gray#(n) dReadGray {} {{(* ports = [] *)}}}}}} {position {%/Libraries/GrayCounter.bsv 20 11 {Library GrayCounter}}}
TaggedUnion {UIntRange::UIntRange#(numeric type lo, numeric type hi)} polymorphic {members {{{Bit#(TLog#(TAdd#(hi, 1)))} U}}} {position {%/Libraries/UIntRange.bs 24 6 {Library UIntRange}}}
Struct {NumberTypes::WrapNumber#(numeric type sz)} polymorphic {members {{UInt#(sz) n}}} {position {%/Libraries/NumberTypes.bsv 12 33 {Library NumberTypes}}}
Struct {NumberTypes::BuffIndex#(numeric type sz, numeric type ln)} polymorphic {members {{UInt#(sz) bix}}} {position {%/Libraries/NumberTypes.bsv 47 35 {Library NumberTypes}}}
Interface {TriState::TriState#(type t)} polymorphic {members {{interface Inout#(t) io {}} {method {t _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/TriState.bsv 16 11 {Library TriState}}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {RPush::RPush#(type a)} polymorphic {members {{method {Action push a {}}} {method {Action clear {} {}}}}} {position {%/Libraries/RPush.bs 29 10 {Library RPush}}}
Struct HList::HNil {members {}} {position {%/Libraries/HList.bsv 3 19 {Library HList}}}
Struct {HList::HCons#(type e, type l)} polymorphic {members {{e hd} {l tl}}} {position {%/Libraries/HList.bsv 9 19 {Library HList}}}
Typeclass {HList::HList#(type l)} {members {}} {instances {{HList::HList#(HList::HCons#(e, l))   provisos (HList::HList#(l))} HList::HList#(HList::HNil)}} {position {%/Libraries/HList.bsv 13 11 {Library HList}}}
Typeclass {HList::HHead#(type l, type h)} {dependencies {{l determines h}}} {members {{{function h f(l x1)} hHead}}} {instances {{HList::HHead#(HList::HCons#(e, l), e)}}} {position {%/Libraries/HList.bsv 23 11 {Library HList}}}
Typeclass {HList::HTail#(type l, type lt)} {dependencies {{l determines lt}}} {members {{{function lt f(l x1)} hTail}}} {instances {{HList::HTail#(HList::HCons#(e, l), l)}}} {position {%/Libraries/HList.bsv 32 11 {Library HList}}}
Typeclass {HList::HLength#(type l, numeric type n)} {dependencies {{l determines n}}} {members {}} {instances {{HList::HLength#(HList::HCons#(e, l), nPlus1)   provisos (Add#(n, 1, nPlus1), HList::HLength#(l, n))} {HList::HLength#(HList::HNil, 0)}}} {position {%/Libraries/HList.bsv 41 11 {Library HList}}}
Typeclass {HList::HAppend#(type l, type l1, type l2)} {dependencies {{(l, l1) determines l2}}} {members {{{function l2 f(l x1, l1 x2)} hAppend}}} {instances {{HList::HAppend#(HList::HCons#(e, l), l1, HList::HCons#(e, l2))   provisos (HList::HAppend#(l, l1, l2), HList::HList#(l))} {HList::HAppend#(HList::HNil, l, l)}}} {position {%/Libraries/HList.bsv 61 11 {Library HList}}}
Typeclass {HList::HSplit#(type l, type l1, type l2)} {members {{{function Tuple2#(l1, l2) f(l x1)} hSplit}}} {instances {{HList::HSplit#(HList::HCons#(hd, tl), HList::HCons#(hd, l3), l2)   provisos (HList::HSplit#(tl, l3, l2))} {HList::HSplit#(HList::HNil, HList::HNil, HList::HNil)} {HList::HSplit#(l, HList::HNil, l)}}} {position {%/Libraries/HList.bsv 80 11 {Library HList}}}
Typeclass {HList::Gettable#(type c1, type c2)} {members {{{function c2 f(c1 x1)} getIt} {{function c1 f(c1 x1, c2 x2)} putIt}}} {instances {{HList::Gettable#(HList::HCons#(t1, t2), t1)} {HList::Gettable#(HList::HCons#(t1, t2), t3)   provisos (HList::Gettable#(t2, t3))}}} {position {%/Libraries/HList.bsv 106 11 {Library HList}}}
Alias {HList::HList1#(type t)} {HList::HCons#(t, HList::HNil)} {position {%/Libraries/HList.bsv 127 62 {Library HList}}}
Alias {HList::HList2#(type t1, type t2)} {HList::HCons#(t1, HList::HCons#(t2, HList::HNil))} {position {%/Libraries/HList.bsv 128 62 {Library HList}}}
Alias {HList::HList3#(type t1, type t2, type t3)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HNil)))} {position {%/Libraries/HList.bsv 129 62 {Library HList}}}
Alias {HList::HList4#(type t1, type t2, type t3, type t4)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HNil))))} {position {%/Libraries/HList.bsv 130 62 {Library HList}}}
Alias {HList::HList5#(type t1, type t2, type t3, type t4, type t5)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HCons#(t5, HList::HNil)))))} {position {%/Libraries/HList.bsv 134 15 {Library HList}}}
Alias {HList::HList6#(type t1, type t2, type t3, type t4, type t5, type t6)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HCons#(t5, HList::HCons#(t6, HList::HNil))))))} {position {%/Libraries/HList.bsv 138 15 {Library HList}}}
Alias {HList::HList7#(type t1, type t2, type t3, type t4, type t5, type t6, type t7)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HCons#(t5, HList::HCons#(t6, HList::HCons#(t7, HList::HNil)))))))} {position {%/Libraries/HList.bsv 142 15 {Library HList}}}
Alias {HList::HList8#(type t1, type t2, type t3, type t4, type t5, type t6, type t7, type t8)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HCons#(t5, HList::HCons#(t6, HList::HCons#(t7, HList::HCons#(t8, HList::HNil))))))))} {position {%/Libraries/HList.bsv 146 15 {Library HList}}}
Alias {AhbDefines::LUInt#(numeric type m)} {UInt#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 29 35}}
Struct MIMO::MIMOConfiguration {members {{Bool unguarded {width 1}} {Bool bram_based {width 1}}}} {position {%/Libraries/MIMO.bsv 40 3 {Library MIMO}}}
Interface {MIMO::MIMO#(numeric type max_in, numeric type max_out, numeric type size, type t)} polymorphic {members {{method {Action enq {{UInt#(TLog#(TAdd#(max_in, 1)))} {Vector::Vector#(max_in, t)}} {{(* ports = ["count", "data"] *)}}}} {method {{Vector::Vector#(max_out, t)} first {} {{(* ports = [] *)}}}} {method {Action deq {{UInt#(TLog#(TAdd#(max_out, 1)))}} {{(* ports = ["count"] *)}}}} {method {Bool enqReady {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool enqReadyN {{UInt#(TLog#(TAdd#(max_in, 1)))}} {{(* ports = ["count"] *)} {(* always_ready  *)}}}} {method {Bool deqReady {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool deqReadyN {{UInt#(TLog#(TAdd#(max_out, 1)))}} {{(* ports = ["count"] *)} {(* always_ready  *)}}}} {method {{UInt#(TLog#(TAdd#(size, 1)))} count {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/MIMO.bsv 52 11 {Library MIMO}}}

Interface {CB::CompletionBuffer#(numeric type ln, type a, type b)} polymorphic {members {{interface {GetPut::Put#(CB::TokenRequest#(a, ln))} request {{(* ports = [] *)}}} {interface {GetPut::Get#(CB::TokenRange#(a, ln))} reserve {{(* ports = [] *)}}} {interface {GetPut::Put#(Tuple2#(Bit#(ln), b))} complete {{(* ports = [] *)}}} {interface GetPut::Get#(b) drain {{(* ports = [] *)}}}}} {position {CB.bsv 63 11}}
Alias {CompletionBuffer::CBToken#(numeric type n)} Bit#(TLog#(n)) {position {%/Libraries/CompletionBuffer.bsv 34 24 {Library CompletionBuffer}}}
Interface {NullCrossingFIFOF::CrossingFIFOF#(type a)} polymorphic {members {{interface FIFOF::FIFOF#(a) fifo {}} {method {Bool allowCclock {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/NullCrossingFIFOF.bsv 7 11 {Library NullCrossingFIFOF}}}
Interface {NullCrossingFIFOF::SceMiCrossingReg#(type a)} polymorphic {members {{interface Reg#(a) regifc {}} {method {Bool writtenPulse {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool readPulse {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool allowCclock {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/NullCrossingFIFOF.bsv 120 11 {Library NullCrossingFIFOF}}}
TaggedUnion {ModuleContextCore::ModuleContext#(type c, type i)} polymorphic {members {{{module f#(c x1)(Tuple2#(c, i))} M}}} {position {%/Libraries/ModuleContextCore.bs 4 5 {Library ModuleContextCore}}}
Alias ModuleContext::CLOCKCONTEXTSIZE 9 {position {%/Libraries/ModuleContext.bsv 11 11 {Library ModuleContext}}}
Typeclass {ModuleContext::Context#(type mc1, type c2)} {members {{{mc1#(c2)   provisos (IsModule#(mc1, a))} getContext} {{function mc1#(Empty) f(c2 x1)   provisos (IsModule#(mc1, a))} putContext}}} {instances {{ModuleContext::Context#(Module, void)} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(st1), st1)} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(st1), st2)   provisos (HList::Gettable#(st1, st2))}}} {position {%/Libraries/ModuleContext.bsv 13 11 {Library ModuleContext}}}
Struct {ModuleContext::ClockContextP#(numeric type n)} polymorphic {members {{{Vector::Vector#(n, Clock)} clks} {{Vector::Vector#(n, Reset)} rsts}}} {position {%/Libraries/ModuleContext.bsv 70 19 {Library ModuleContext}}}
Alias ModuleContext::ClockContext ModuleContext::ClockContextP#(9) {position {%/Libraries/ModuleContext.bsv 75 42 {Library ModuleContext}}}
Alias ModuleContext::ClockContextIfc Empty {position {%/Libraries/ModuleContext.bsv 76 15 {Library ModuleContext}}}
Alias {ModuleContext::ClockModule#(type a)} {ModuleContextCore::ModuleContext#(HList::HCons#(ModuleContext::ClockContextP#(9), HList::HNil), a)} {position {%/Libraries/ModuleContext.bsv 77 51 {Library ModuleContext}}}
Typeclass {ModuleContext::Expose#(type c, type ifc, numeric type n)} {dependencies {{c determines (ifc, n)}}} {members {{{function a#(ifc) f(c x1)   provisos (IsModule#(a, b))} unburyContext} {{function a#(ifc) f(c x1, ModuleContext::ClockContextP#(n) x2)   provisos (IsModule#(a, b))} unburyContextWithClocks}}} {instances {{ModuleContext::Expose#(HList::HCons#(c1, c2), Tuple2#(ifc1, ifc2), n)   provisos (ModuleContext::Expose#(c2, ifc2, n), ModuleContext::Expose#(c1, ifc1, n))} {ModuleContext::Expose#(HList::HList1#(ct1), ifc1, n)   provisos (ModuleContext::Expose#(ct1, ifc1, n))} {ModuleContext::Expose#(LBus::LBusContextP#(sa, sd), LBus::LBusContextIfcP#(sa, sd), ModuleContext::CLOCKCONTEXTSIZE)} {ModuleContext::Expose#(ModuleContext::ClockContextP#(n), Empty, n)}}} {position {%/Libraries/ModuleContext.bsv 86 11 {Library ModuleContext}}}
Typeclass {ModuleContext::Hide#(type mc, type ifc)} {members {{{function mc#(Empty) f(ifc x1)} reburyContext}}} {instances {{ModuleContext::Hide#(mc, Empty)   provisos (IsModule#(mc, a))} {ModuleContext::Hide#(mc, LBus::LBusContextIfcP#(sa, sd))   provisos (ModuleContext::Context#(mc, LBus::LBusContextP#(sa, sd)), IsModule#(mc, _a))} {ModuleContext::Hide#(mc, Tuple2#(ifc1, ifc2))   provisos (ModuleContext::Hide#(mc, ifc2), ModuleContext::Hide#(mc, ifc1), IsModule#(mc, a))}}} {position {%/Libraries/ModuleContext.bsv 135 11 {Library ModuleContext}}}
Typeclass {ModuleContext::ContextRun#(type m, type c1, type ctx2)} {dependencies {{(m, c1) determines ctx2}}} {members {{{function m#(Tuple2#(c1, a)) f(c1 x1, ModuleContextCore::ModuleContext#(ctx2, a) x2)} runWithContext}}} {instances {{ModuleContext::ContextRun#(Module, c1, c1)} {ModuleContext::ContextRun#(ModuleContextCore::ModuleContext#(ctx), c1, HList::HCons#(c1, ctx))}}} {position {%/Libraries/ModuleContext.bsv 158 11 {Library ModuleContext}}}
Typeclass {ModuleContext::ContextsRun#(type m, type c1, type ctx2)} {dependencies {{(m, c1) determines ctx2}}} {members {{{function m#(Tuple2#(c1, a)) f(c1 x1, ModuleContextCore::ModuleContext#(ctx2, a) x2)} runWithContexts}}} {instances {{ModuleContext::ContextsRun#(Module, c1, c1)} {ModuleContext::ContextsRun#(ModuleContextCore::ModuleContext#(ctx), c1, ctx2)   provisos (HList::HSplit#(ctx2, c1, ctx), HList::HAppend#(c1, ctx, ctx2))}}} {position {%/Libraries/ModuleContext.bsv 164 11 {Library ModuleContext}}}
Alias {ModuleCollect::ModuleCollect#(type a, type b)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(a), HList::HNil), b)} {position {%/Libraries/ModuleCollect.bsv 14 45 {Library ModuleCollect}}}
Interface {ModuleCollect::IWithCollection#(type a, type i)} polymorphic {members {{method {i device {} {{(* ports = [] *)}}}} {method {List#(a) collection {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ModuleCollect.bsv 36 11 {Library ModuleCollect}}}
Typeclass {Boolify::Boolify#(type a)} {members {{{function a f(a x1)} boolify}}} {instances {{Boolify::Boolify#(function b f(a x1))   provisos (Bits#(b, sb), Bits#(a, sa), Bounded#(a))} {Boolify::Boolify#(function c f(a x1, b x2))   provisos (Boolify::Boolify#(function c f(Tuple2#(a, b) x1)))}}} {position {%/Libraries/Boolify.bs 20 6 {Library Boolify}}}
Interface {Cntrs::Count#(type t)} polymorphic {members {{method {Action incr t {{(* ports = ["val"] *)}}}} {method {Action decr t {{(* ports = ["val"] *)}}}} {method {Action update t {{(* ports = ["val"] *)}}}} {method {Action _write t {{(* ports = ["val"] *)}}}} {method {t _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Cntrs.bsv 12 11 {Library Cntrs}}}
Interface {Cntrs::VCount#(type t)} polymorphic {members {{method {Action incrA t {{(* ports = ["val"] *)}}}} {method {Action incrB t {{(* ports = ["val"] *)}}}} {method {Action update t {{(* ports = ["val"] *)}}}} {method {Action _write t {{(* ports = ["val"] *)}}}} {method {t _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Cntrs.bsv 42 11 {Library Cntrs}}}
Typeclass {Cntrs::ModArith#(type t)} {members {}} {instances {Cntrs::ModArith#(Bit#(n)) Cntrs::ModArith#(Int#(n)) Cntrs::ModArith#(UInt#(n))}} {position {%/Libraries/Cntrs.bsv 95 11 {Library Cntrs}}}
Interface Cntrs::UCount {members {{method {Action update Integer {{(* ports = ["val"] *)}}}} {method {Action _write Integer {{(* ports = ["val"] *)}}}} {method {Action incr Integer {{(* ports = ["val"] *)}}}} {method {Action decr Integer {{(* ports = ["val"] *)}}}} {method {Bool isEqual Integer {{(* ports = ["val"] *)}}}} {method {Bool isLessThan Integer {{(* ports = ["val"] *)}}}} {method {Bool isGreaterThan Integer {{(* ports = ["val"] *)}}}}}} {position {%/Libraries/Cntrs.bsv 109 11 {Library Cntrs}}}
Interface {LFSR::LFSR#(type a)} polymorphic {members {{method {Action seed a {}}} {method {a value {} {}}} {method {Action next {} {}}}}} {position {%/Libraries/LFSR.bs 28 10 {Library LFSR}}}
Interface {FoldFIFOF::FoldFIFO#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Bool notFull {} {}}} {method {Bool notEmpty {} {}}} {method {Action clear {} {}}} {method {b foldr {{function b f(a x1, b x2)} b} {}}}}} {position {%/Libraries/FoldFIFOF.bs 12 10 {Library FoldFIFOF}}}
Interface {Probe::Probe#(type a)} polymorphic {members {{method {Action _write a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/Probe.bsv 34 11 {Library Probe}}}
Alias ModuleContext::CLOCKCONTEXTSIZE 9 {position {%/Libraries/ModuleContext.bsv 11 11 {Library ModuleContext}}}
Typeclass {ModuleContext::Context#(type mc1, type c2)} {members {{{mc1#(c2)   provisos (IsModule#(mc1, a))} getContext} {{function mc1#(Empty) f(c2 x1)   provisos (IsModule#(mc1, a))} putContext}}} {instances {{ModuleContext::Context#(Module, void)} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(st1), st1)} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(st1), st2)   provisos (HList::Gettable#(st1, st2))}}} {position {%/Libraries/ModuleContext.bsv 13 11 {Library ModuleContext}}}
Struct {ModuleContext::ClockContextP#(numeric type n)} polymorphic {members {{{Vector::Vector#(n, Clock)} clks} {{Vector::Vector#(n, Reset)} rsts}}} {position {%/Libraries/ModuleContext.bsv 70 19 {Library ModuleContext}}}
Alias ModuleContext::ClockContext ModuleContext::ClockContextP#(9) {position {%/Libraries/ModuleContext.bsv 75 42 {Library ModuleContext}}}
Alias ModuleContext::ClockContextIfc Empty {position {%/Libraries/ModuleContext.bsv 76 15 {Library ModuleContext}}}
Alias {ModuleContext::ClockModule#(type a)} {ModuleContextCore::ModuleContext#(HList::HCons#(ModuleContext::ClockContextP#(9), HList::HNil), a)} {position {%/Libraries/ModuleContext.bsv 77 51 {Library ModuleContext}}}
Typeclass {ModuleContext::Expose#(type c, type ifc, numeric type n)} {dependencies {{c determines (ifc, n)}}} {members {{{function a#(ifc) f(c x1)   provisos (IsModule#(a, b))} unburyContext} {{function a#(ifc) f(c x1, ModuleContext::ClockContextP#(n) x2)   provisos (IsModule#(a, b))} unburyContextWithClocks}}} {instances {{ModuleContext::Expose#(HList::HCons#(c1, c2), Tuple2#(ifc1, ifc2), n)   provisos (ModuleContext::Expose#(c2, ifc2, n), ModuleContext::Expose#(c1, ifc1, n))} {ModuleContext::Expose#(HList::HList1#(ct1), ifc1, n)   provisos (ModuleContext::Expose#(ct1, ifc1, n))} {ModuleContext::Expose#(LBus::LBusContextP#(sa, sd), LBus::LBusContextIfcP#(sa, sd), ModuleContext::CLOCKCONTEXTSIZE)} {ModuleContext::Expose#(ModuleContext::ClockContextP#(n), Empty, n)}}} {position {%/Libraries/ModuleContext.bsv 86 11 {Library ModuleContext}}}
Typeclass {ModuleContext::Hide#(type mc, type ifc)} {members {{{function mc#(Empty) f(ifc x1)} reburyContext}}} {instances {{ModuleContext::Hide#(mc, Empty)   provisos (IsModule#(mc, a))} {ModuleContext::Hide#(mc, LBus::LBusContextIfcP#(sa, sd))   provisos (ModuleContext::Context#(mc, LBus::LBusContextP#(sa, sd)), IsModule#(mc, _a))} {ModuleContext::Hide#(mc, Tuple2#(ifc1, ifc2))   provisos (ModuleContext::Hide#(mc, ifc2), ModuleContext::Hide#(mc, ifc1), IsModule#(mc, a))}}} {position {%/Libraries/ModuleContext.bsv 135 11 {Library ModuleContext}}}
Typeclass {ModuleContext::ContextRun#(type m, type c1, type ctx2)} {dependencies {{(m, c1) determines ctx2}}} {members {{{function m#(Tuple2#(c1, a)) f(c1 x1, ModuleContextCore::ModuleContext#(ctx2, a) x2)} runWithContext}}} {instances {{ModuleContext::ContextRun#(Module, c1, c1)} {ModuleContext::ContextRun#(ModuleContextCore::ModuleContext#(ctx), c1, HList::HCons#(c1, ctx))}}} {position {%/Libraries/ModuleContext.bsv 158 11 {Library ModuleContext}}}
Typeclass {ModuleContext::ContextsRun#(type m, type c1, type ctx2)} {dependencies {{(m, c1) determines ctx2}}} {members {{{function m#(Tuple2#(c1, a)) f(c1 x1, ModuleContextCore::ModuleContext#(ctx2, a) x2)} runWithContexts}}} {instances {{ModuleContext::ContextsRun#(Module, c1, c1)} {ModuleContext::ContextsRun#(ModuleContextCore::ModuleContext#(ctx), c1, ctx2)   provisos (HList::HSplit#(ctx2, c1, ctx), HList::HAppend#(c1, ctx, ctx2))}}} {position {%/Libraries/ModuleContext.bsv 164 11 {Library ModuleContext}}}
TaggedUnion {ModuleContextCore::ModuleContext#(type c, type i)} polymorphic {members {{{module f#(c x1)(Tuple2#(c, i))} M}}} {position {%/Libraries/ModuleContextCore.bs 4 5 {Library ModuleContextCore}}}
TaggedUnion {OInt::OInt#(numeric type n)} polymorphic {members {{{Vector::Vector#(n, Bool)} O}}} {position {%/Libraries/OInt.bs 22 5 {Library OInt}}}
Interface {Mcp::IMcpUnitF#(type b)} polymorphic {members {{method {b result {} {}}} {method {Bool isValid {} {}}}}} {position {%/Libraries/Mcp.bs 8 10 {Library Mcp}}}
Interface {RevertingVirtualReg::VReg#(numeric type n)} polymorphic {members {{method {PrimAction write Bit#(n) {}}} {method {Bit#(n) read {} {}}}}} {position {%/Libraries/RevertingVirtualReg.bs 3 10 {Library RevertingVirtualReg}}}
Alias PopCount::K 8 {position {%/Libraries/PopCount.bs 61 5 {Library PopCount}}}
Alias PopCount::LogK 4 {position {%/Libraries/PopCount.bs 62 5 {Library PopCount}}}
Interface {Push::Push#(type a)} polymorphic {members {{method {Action push a {}}}}} {position {%/Libraries/Push.bs 26 10 {Library Push}}}
Typeclass {Arbitrate::ArbRequestTC#(type a)} {members {{{function Bool f(a x1)} isReadRequest} {{function Bool f(a x1)} isWriteRequest}}} {instances Arbitrate::ArbRequestTC#(I2C::I2CRequest)} {position {%/Libraries/Arbitrate.bsv 25 11 {Library Arbitrate}}}
Interface {Arbitrate::Arbitrate#(numeric type size)} polymorphic {members {{method {Action request {{Vector::Vector#(size, Bool)}} {{(* ports = ["req"] *)}}}} {method {{Vector::Vector#(size, Bool)} grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbitrate.bsv 63 11 {Library Arbitrate}}}
Interface {Arbitrate::Arbiter#(numeric type ports, type request, type response)} polymorphic {members {{method {{Vector::Vector#(ports, ClientServer::Server#(request, response))} users {} {}}} {interface {ClientServer::Client#(request, response)} master {}}}} {position {%/Libraries/Arbitrate.bsv 68 11 {Library Arbitrate}}}
Interface {CGetPut::CGetS#(numeric type n, type a, numeric type sa)} polymorphic {members {{method {Bit#(sa) gvalue {} {}}} {method {Bool gpresent {} {}}} {method {Action gcredit Bool {}}}}} {position {%/Libraries/CGetPut.bs 23 11 {Library CGetPut}}}
Interface {CGetPut::CPutS#(numeric type n, type a, numeric type sa)} polymorphic {members {{method {Action pvalue Bit#(sa) {}}} {method {Action ppresent Bool {}}} {method {Bool pcredit {} {}}}}} {position {%/Libraries/CGetPut.bs 28 11 {Library CGetPut}}}
Alias {CGetPut::CGet#(numeric type n, type a)} {CGetPut::CGetS#(n, a, SizeOf#(a))} {position {%/Libraries/CGetPut.bs 53 5 {Library CGetPut}}}
Alias {CGetPut::CPut#(numeric type n, type a)} {CGetPut::CPutS#(n, a, SizeOf#(a))} {position {%/Libraries/CGetPut.bs 59 5 {Library CGetPut}}}
Alias {CGetPut::CGetPut#(numeric type n, type a)} {Tuple2#(CGetPut::CGetS#(n, a, SizeOf#(a)), GetPut::Put#(a))} {position {%/Libraries/CGetPut.bs 61 5 {Library CGetPut}}}
Alias {CGetPut::GetCPut#(numeric type n, type a)} {Tuple2#(GetPut::Get#(a), CGetPut::CPutS#(n, a, SizeOf#(a)))} {position {%/Libraries/CGetPut.bs 62 5 {Library CGetPut}}}
Interface {CGetPut::CClientS#(numeric type n, type a, numeric type sa, type b, numeric type sb)} polymorphic {members {{interface {CGetPut::CGetS#(n, a, sa)} request {}} {interface {CGetPut::CPutS#(n, b, sb)} response {}}}} {position {%/Libraries/CGetPut.bs 267 10 {Library CGetPut}}}
Interface {CGetPut::CServerS#(numeric type n, type a, numeric type sa, type b, numeric type sb)} polymorphic {members {{interface {CGetPut::CPutS#(n, a, sa)} request {}} {interface {CGetPut::CGetS#(n, b, sb)} response {}}}} {position {%/Libraries/CGetPut.bs 271 10 {Library CGetPut}}}
Alias {CGetPut::CClient#(numeric type n, type a, type b)} {CGetPut::CClientS#(n, a, SizeOf#(a), b, SizeOf#(b))} {position {%/Libraries/CGetPut.bs 281 5 {Library CGetPut}}}
Alias {CGetPut::CServer#(numeric type n, type a, type b)} {CGetPut::CServerS#(n, a, SizeOf#(a), b, SizeOf#(b))} {position {%/Libraries/CGetPut.bs 282 5 {Library CGetPut}}}
Alias {CGetPut::CClientServer#(numeric type n, type a, type b)} {Tuple2#(CGetPut::CClientS#(n, a, SizeOf#(a), b, SizeOf#(b)), ClientServer::Server#(a, b))} {position {%/Libraries/CGetPut.bs 284 5 {Library CGetPut}}}
Alias {CGetPut::ClientCServer#(numeric type n, type a, type b)} {Tuple2#(ClientServer::Client#(a, b), CGetPut::CServerS#(n, a, SizeOf#(a), b, SizeOf#(b)))} {position {%/Libraries/CGetPut.bs 285 5 {Library CGetPut}}}

Interface StmtFSM::Once {members {{method {Action start {} {}}} {method {Action clear {} {}}} {method {Bool done {} {}}}}} {position {%/Libraries/StmtFSM.bs 293 10 {Library StmtFSM}}}
Interface Arbiter::ArbiterClient_IFC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Action lock {} {{(* ports = [] *)}}}} {method {Bool grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 11 11 {Library Arbiter}}}
Interface Arbiter::ArbiterRequest_IFC {members {{method {Bool request {} {{(* ports = [] *)}}}} {method {Bool lock {} {{(* ports = [] *)}}}} {method {Action grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 17 11 {Library Arbiter}}}
Interface {Arbiter::Arbiter_IFC#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {Bit#(TLog#(count)) grant_id {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 23 11 {Library Arbiter}}}
Typeclass {Arbiter::Arbitable#(type a)} {members {{{function b#(Arbiter::ArbiterRequest_IFC) f(a x1)   provisos (IsModule#(b, c))} mkArbiterRequest}}} {instances {Arbiter::Arbitable#(AhbDefines::AhbMasterArbiter) {Arbiter::Arbitable#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size))} Arbiter::Arbitable#(BusDefines::BusSend#(a))}} {position {%/Libraries/Arbiter.bsv 340 11 {Library Arbiter}}}

Interface {Gearbox::Gearbox#(numeric type in, numeric type out, type a)} polymorphic {members {{method {Action enq {{Vector::Vector#(in, a)}} {{(* ports = ["din"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {{Vector::Vector#(out, a)} first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Gearbox.bsv 35 11 {Library Gearbox}}}

Alias {ActionSeq::ActionList#(numeric type n)} {Vector::Vector#(n, Action)} {position {%/Libraries/ActionSeq.bs 41 5 {Library ActionSeq}}}
Typeclass {ActionSeq::ActionJoin#(type a, type c)} {dependencies {{a determines c}}} {members {{{function c f(Action x1, a x2)} |>}}} {instances {{ActionSeq::ActionJoin#(Action, ActionSeq::ActionList#(2))} {ActionSeq::ActionJoin#(ActionSeq::ActionList#(n), ActionSeq::ActionList#(m))   provisos (Add#(1, n, m))}}} {position {%/Libraries/ActionSeq.bs 44 6 {Library ActionSeq}}}
Interface ActionSeq::ActionSeq {members {{method {Action start {} {}}} {method {Bool done {} {}}} {method {Action checkDone {} {}}}}} {position {%/Libraries/ActionSeq.bs 68 10 {Library ActionSeq}}}
Alias {ActionSeq::RegB#(numeric type k)} Reg#(Bit#(k)) {position {%/Libraries/ActionSeq.bs 73 5 {Library ActionSeq}}}
Interface {ActionSeq::ActionSeqN#(numeric type n)} polymorphic {members {{interface ActionSeq::ActionSeq _actionSeq {}}}} {position {%/Libraries/ActionSeq.bs 98 11 {Library ActionSeq}}}
Alias {ActionSeq::SeqList#(numeric type n)} {Vector::Vector#(n, ActionSeq::ActionSeq)} {position {%/Libraries/ActionSeq.bs 183 5 {Library ActionSeq}}}

Alias {RAM::RAM#(type adr, type dta)} {ClientServer::Server#(RAM::RAMreq#(adr, dta), dta)} {position {%/Libraries/RAM.bs 19 5 {Library RAM}}}
Alias {RAM::RAMclient#(type adr, type dta)} {ClientServer::Client#(RAM::RAMreq#(adr, dta), dta)} {position {%/Libraries/RAM.bs 25 5 {Library RAM}}}
TaggedUnion {RAM::RAMreq#(type adr, type dta)} polymorphic {members {{adr Read} {{Tuple2#(adr, dta)} Write}}} {position {%/Libraries/RAM.bs 34 5 {Library RAM}}}
Interface EdgeDetect::RequestDetect {members {{method {Action send {} {{(* ports = [] *)}}}} {method {Bool pulse {} {{(* ports = [] *)}}}} {method {Bool pending {} {{(* ports = [] *)}}}} {method {Action ack {} {{(* ports = [] *)}}}}}} {position {%/Libraries/EdgeDetect.bsv 3 11 {Library EdgeDetect}}}

Alias {AxiDefines::AxiAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {AxiDefines.bsv 28 42}}
Alias {AxiDefines::AxiData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {AxiDefines.bsv 29 42}}
Alias {AxiDefines::AxiByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {AxiDefines.bsv 30 42}}
Alias {AxiDefines::AxiId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {AxiDefines.bsv 32 46}}
Alias AxiDefines::AxiLen UInt#(4) {position {AxiDefines.bsv 33 46}}
Alias AxiDefines::AxiSize TLM3Defines::TLMBSize {position {AxiDefines.bsv 34 18}}
Struct AxiDefines::AxiProt {members {{TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMPrivilege privilege {width 1}}}} {width 3} {position {AxiDefines.bsv 40 19}}
Struct AxiDefines::AxiCache {members {{TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}}}} {width 4} {position {AxiDefines.bsv 47 19}}
Enum AxiDefines::AxiBurst {members {FIXED INCR WRAP}} {width 2} {position {AxiDefines.bsv 49 46}}
Alias AxiDefines::AxiLock TLM3Defines::TLMLock {position {AxiDefines.bsv 50 18}}
Enum AxiDefines::AxiResp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {AxiDefines.bsv 51 46}}
Struct {AxiDefines::AxiAddrCmd#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {UInt#(4) len {width 4}} {TLM3Defines::TLMBSize size {width 3}} {AxiDefines::AxiBurst burst {width 2}} {TLM3Defines::TLMLock lock {width 2}} {AxiDefines::AxiCache cache {width 4}} {AxiDefines::AxiProt prot {width 3}} {Bit#(addr_size) addr}}} {position {AxiDefines.bsv 63 19}}
Struct {AxiDefines::AxiWrData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {Bit#(data_size) data} {{Bit#(TDiv#(data_size, 8))} strb} {Bool last {width 1}}}} {position {AxiDefines.bsv 83 19}}
Struct {AxiDefines::AxiRdResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {Bit#(data_size) data} {AxiDefines::AxiResp resp {width 2}} {Bool last {width 1}}}} {position {AxiDefines.bsv 99 19}}
Struct {AxiDefines::AxiWrResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {AxiDefines::AxiResp resp {width 2}}}} {position {AxiDefines.bsv 113 19}}
Interface {AxiDefines::AxiWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) awID {} {{(* ports = [] *)} {(* result = "AWID" *)}}}} {method {Bit#(addr_size) awADDR {} {{(* ports = [] *)} {(* result = "AWADDR" *)}}}} {method {UInt#(4) awLEN {} {{(* ports = [] *)} {(* result = "AWLEN" *)}}}} {method {TLM3Defines::TLMBSize awSIZE {} {{(* ports = [] *)} {(* result = "AWSIZE" *)}}}} {method {AxiDefines::AxiBurst awBURST {} {{(* ports = [] *)} {(* result = "AWBURST" *)}}}} {method {TLM3Defines::TLMLock awLOCK {} {{(* ports = [] *)} {(* result = "AWLOCK" *)}}}} {method {AxiDefines::AxiCache awCACHE {} {{(* ports = [] *)} {(* result = "AWCACHE" *)}}}} {method {AxiDefines::AxiProt awPROT {} {{(* ports = [] *)} {(* result = "AWPROT" *)}}}} {method {Bool awVALID {} {{(* ports = [] *)} {(* result = "AWVALID" *)}}}} {method {Action awREADY Bool {{(* ports = ["AWREADY"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) wID {} {{(* ports = [] *)} {(* result = "WID" *)}}}} {method {Bit#(data_size) wDATA {} {{(* ports = [] *)} {(* result = "WDATA" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} wSTRB {} {{(* ports = [] *)} {(* result = "WSTRB" *)}}}} {method {Bool wLAST {} {{(* ports = [] *)} {(* result = "WLAST" *)}}}} {method {Bool wVALID {} {{(* ports = [] *)} {(* result = "WVALID" *)}}}} {method {Action wREADY Bool {{(* ports = ["WREADY"] *)} {(* result = "unusedwm1" *)} {(* prefix = "" *)}}}} {method {Bool bREADY {} {{(* ports = [] *)} {(* result = "BREADY" *)}}}} {method {Action bID Bit#(id_size) {{(* ports = ["BID"] *)} {(* result = "unusedwm2" *)} {(* prefix = "" *)}}}} {method {Action bRESP AxiDefines::AxiResp {{(* ports = ["BRESP"] *)} {(* result = "unusedwm3" *)} {(* prefix = "" *)}}}} {method {Action bVALID Bool {{(* ports = ["BVALID"] *)} {(* result = "unusedwm4" *)} {(* prefix = "" *)}}}}}} {position {AxiDefines.bsv 184 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiRdMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) arID {} {{(* ports = [] *)} {(* result = "ARID" *)}}}} {method {Bit#(addr_size) arADDR {} {{(* ports = [] *)} {(* result = "ARADDR" *)}}}} {method {UInt#(4) arLEN {} {{(* ports = [] *)} {(* result = "ARLEN" *)}}}} {method {TLM3Defines::TLMBSize arSIZE {} {{(* ports = [] *)} {(* result = "ARSIZE" *)}}}} {method {AxiDefines::AxiBurst arBURST {} {{(* ports = [] *)} {(* result = "ARBURST" *)}}}} {method {TLM3Defines::TLMLock arLOCK {} {{(* ports = [] *)} {(* result = "ARLOCK" *)}}}} {method {AxiDefines::AxiCache arCACHE {} {{(* ports = [] *)} {(* result = "ARCACHE" *)}}}} {method {AxiDefines::AxiProt arPROT {} {{(* ports = [] *)} {(* result = "ARPROT" *)}}}} {method {Bool arVALID {} {{(* ports = [] *)} {(* result = "ARVALID" *)}}}} {method {Action arREADY Bool {{(* ports = ["ARREADY"] *)} {(* result = "unusedrm0" *)} {(* prefix = "" *)}}}} {method {Bool rREADY {} {{(* ports = [] *)} {(* result = "RREADY" *)}}}} {method {Action rID Bit#(id_size) {{(* ports = ["RID"] *)} {(* result = "unusedrm1" *)} {(* prefix = "" *)}}}} {method {Action rDATA Bit#(data_size) {{(* ports = ["RDATA"] *)} {(* result = "unusedrm2" *)} {(* prefix = "" *)}}}} {method {Action rRESP AxiDefines::AxiResp {{(* ports = ["RRESP"] *)} {(* result = "unusedrm3" *)} {(* prefix = "" *)}}}} {method {Action rLAST Bool {{(* ports = ["RLAST"] *)} {(* result = "unusedrm4" *)} {(* prefix = "" *)}}}} {method {Action rVALID Bool {{(* ports = ["RVALID"] *)} {(* result = "unusedrm5" *)} {(* prefix = "" *)}}}}}} {position {AxiDefines.bsv 241 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action awID Bit#(id_size) {{(* ports = ["AWID"] *)} {(* result = "unusedws0" *)} {(* prefix = "" *)}}}} {method {Action awADDR Bit#(addr_size) {{(* ports = ["AWADDR"] *)} {(* result = "unusedws1" *)} {(* prefix = "" *)}}}} {method {Action awLEN UInt#(4) {{(* ports = ["AWLEN"] *)} {(* result = "unusedws2" *)} {(* prefix = "" *)}}}} {method {Action awSIZE TLM3Defines::TLMBSize {{(* ports = ["AWSIZE"] *)} {(* result = "unusedws3" *)} {(* prefix = "" *)}}}} {method {Action awBURST AxiDefines::AxiBurst {{(* ports = ["AWBURST"] *)} {(* result = "unusedws4" *)} {(* prefix = "" *)}}}} {method {Action awLOCK TLM3Defines::TLMLock {{(* ports = ["AWLOCK"] *)} {(* result = "unusedws5" *)} {(* prefix = "" *)}}}} {method {Action awCACHE AxiDefines::AxiCache {{(* ports = ["AWCACHE"] *)} {(* result = "unusedws6" *)} {(* prefix = "" *)}}}} {method {Action awPROT AxiDefines::AxiProt {{(* ports = ["AWPROT"] *)} {(* result = "unusedws7" *)} {(* prefix = "" *)}}}} {method {Action awVALID Bool {{(* ports = ["AWVALID"] *)} {(* result = "unusedws8" *)} {(* prefix = "" *)}}}} {method {Bool awREADY {} {{(* ports = [] *)} {(* result = "AWREADY" *)}}}} {method {Action wID Bit#(id_size) {{(* ports = ["WID"] *)} {(* result = "unusedws9" *)} {(* prefix = "" *)}}}} {method {Action wDATA Bit#(data_size) {{(* ports = ["WDATA"] *)} {(* result = "unusedws10" *)} {(* prefix = "" *)}}}} {method {Action wSTRB {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["WSTRB"] *)} {(* result = "unusedws11" *)} {(* prefix = "" *)}}}} {method {Action wLAST Bool {{(* ports = ["WLAST"] *)} {(* result = "unusedws12" *)} {(* prefix = "" *)}}}} {method {Action wVALID Bool {{(* ports = ["WVALID"] *)} {(* result = "unusedws13" *)} {(* prefix = "" *)}}}} {method {Bool wREADY {} {{(* ports = [] *)} {(* result = "WREADY" *)}}}} {method {Action bREADY Bool {{(* ports = ["BREADY"] *)} {(* result = "unusedws14" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) bID {} {{(* ports = [] *)} {(* result = "BID" *)}}}} {method {AxiDefines::AxiResp bRESP {} {{(* ports = [] *)} {(* result = "BRESP" *)}}}} {method {Bool bVALID {} {{(* ports = [] *)} {(* result = "BVALID" *)}}}}}} {position {AxiDefines.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiRdSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action arID Bit#(id_size) {{(* ports = ["ARID"] *)} {(* result = "unusedrs0" *)} {(* prefix = "" *)}}}} {method {Action arADDR Bit#(addr_size) {{(* ports = ["ARADDR"] *)} {(* result = "unusedrs1" *)} {(* prefix = "" *)}}}} {method {Action arLEN UInt#(4) {{(* ports = ["ARLEN"] *)} {(* result = "unusedrs2" *)} {(* prefix = "" *)}}}} {method {Action arSIZE TLM3Defines::TLMBSize {{(* ports = ["ARSIZE"] *)} {(* result = "unusedrs3" *)} {(* prefix = "" *)}}}} {method {Action arBURST AxiDefines::AxiBurst {{(* ports = ["ARBURST"] *)} {(* result = "unusedrs4" *)} {(* prefix = "" *)}}}} {method {Action arLOCK TLM3Defines::TLMLock {{(* ports = ["ARLOCK"] *)} {(* result = "unusedrs5" *)} {(* prefix = "" *)}}}} {method {Action arCACHE AxiDefines::AxiCache {{(* ports = ["ARCACHE"] *)} {(* result = "unusedrs6" *)} {(* prefix = "" *)}}}} {method {Action arPROT AxiDefines::AxiProt {{(* ports = ["ARPROT"] *)} {(* result = "unusedrs7" *)} {(* prefix = "" *)}}}} {method {Action arVALID Bool {{(* ports = ["ARVALID"] *)} {(* result = "unusedrs8" *)} {(* prefix = "" *)}}}} {method {Bool arREADY {} {{(* ports = [] *)} {(* result = "ARREADY" *)}}}} {method {Action rREADY Bool {{(* ports = ["RREADY"] *)} {(* result = "unusedrs9" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) rID {} {{(* ports = [] *)} {(* result = "RID" *)}}}} {method {Bit#(data_size) rDATA {} {{(* ports = [] *)} {(* result = "RDATA" *)}}}} {method {AxiDefines::AxiResp rRESP {} {{(* ports = [] *)} {(* result = "RRESP" *)}}}} {method {Bool rLAST {} {{(* ports = [] *)} {(* result = "RLAST" *)}}}} {method {Bool rVALID {} {{(* ports = [] *)} {(* result = "RVALID" *)}}}}}} {position {AxiDefines.bsv 344 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiRdBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 392 11}}
Interface {AxiDefines::AxiWrBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusRecv#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 397 11}}
Interface {AxiDefines::AxiRdBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 403 11}}
Interface {AxiDefines::AxiWrBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusSend#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 408 11}}
Interface {AxiDefines::AxiRdFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 418 11}}
Interface {AxiDefines::AxiRdFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {AxiDefines.bsv 423 11}}
Interface {AxiDefines::AxiWrFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 429 11}}
Interface {AxiDefines::AxiWrFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {AxiDefines.bsv 434 11}}
Interface {AxiDefines::AxiRdMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 478 11}}
Interface {AxiDefines::AxiWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 484 11}}
Interface {AxiDefines::AxiRdSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 490 11}}
Interface {AxiDefines::AxiWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 496 11}}
Interface {AxiDefines::AxiRdWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 506 11}}
Interface {AxiDefines::AxiRdWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 514 11}}
Interface {AxiDefines::AxiRdWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 522 11}}
Interface {AxiDefines::AxiRdWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 529 11}}
Interface AxiDefines::AxiLowPower {members {{method {Action cSYSREQ Bool {{(* ports = ["CSYSREQ"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bool cSYSACK {} {{(* ports = [] *)} {(* result = "CSYSACK" *)}}}} {method {Bool cACTIVE {} {{(* ports = [] *)} {(* result = "CACTIVE" *)}}}}}} {position {AxiDefines.bsv 554 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Typeclass {AxiExtend::Extendable#(type ifc_t, type ifc_ext_t)} {members {{{function a#(ifc_ext_t) f(UInt#(32) x1, ifc_t x2)   provisos (IsModule#(a, b))} extendIds}}} {instances {{AxiExtend::Extendable#(AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdFabricMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdFabricSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrFabricMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrFabricSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))}}} {position {AxiExtend.bsv 18 11}}
Interface {AxiPC::AxiPC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action aw_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action aw_len UInt#(4) {{(* ports = ["aw_len"] *)}}}} {method {Action aw_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action aw_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action aw_lock TLM3Defines::TLMLock {{(* ports = ["value"] *)}}}} {method {Action aw_cache AxiDefines::AxiCache {{(* ports = ["value"] *)}}}} {method {Action aw_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action aw_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action aw_valid Bool {{(* ports = ["value"] *)}}}} {method {Action aw_ready Bool {{(* ports = ["value"] *)}}}} {method {Action w_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action w_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action w_strb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["value"] *)}}}} {method {Action w_last Bool {{(* ports = ["value"] *)}}}} {method {Action w_valid Bool {{(* ports = ["value"] *)}}}} {method {Action w_ready Bool {{(* ports = ["value"] *)}}}} {method {Action b_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action b_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action b_valid Bool {{(* ports = ["value"] *)}}}} {method {Action b_ready Bool {{(* ports = ["value"] *)}}}} {method {Action ar_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action ar_len UInt#(4) {{(* ports = ["value"] *)}}}} {method {Action ar_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action ar_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action ar_lock TLM3Defines::TLMLock {{(* ports = ["value"] *)}}}} {method {Action ar_cache AxiDefines::AxiCache {{(* ports = ["value"] *)}}}} {method {Action ar_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action ar_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action ar_valid Bool {{(* ports = ["value"] *)}}}} {method {Action ar_ready Bool {{(* ports = ["value"] *)}}}} {method {Action r_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action r_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action r_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action r_last Bool {{(* ports = ["value"] *)}}}} {method {Action r_valid Bool {{(* ports = ["value"] *)}}}} {method {Action r_ready Bool {{(* ports = ["value"] *)}}}} {method {Action c_active Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysreq Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysack Bool {{(* ports = ["value"] *)}}}}}} {position {AxiPC.bsv 573 11}}
Struct AxiPC::AxiPCParams {members {{UInt#(32) exmon_width {width 32}} {UInt#(32) maxwaits {width 32}}}} {width 64} {position {AxiPC.bsv 629 19}}
Interface {AxiSlave::SlaveSlice#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {GetPut::GetS#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr_f {}} {interface {GetPut::GetS#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} data_f {}} {interface ReadOnly#(Maybe#(Bit#(id_size))) id {}}}} {position {AxiSlave.bsv 498 11}}
Interface {AxiSlave::SlaveSlice#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {GetPut::GetS#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr_f {}} {interface {GetPut::GetS#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} data_f {}} {interface ReadOnly#(Maybe#(Bit#(id_size))) id {}}}} {position {AxiSlave.bsv 498 11}}

Alias {AxiDefines::AxiAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {AxiDefines.bsv 28 42}}
Alias {AxiDefines::AxiData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {AxiDefines.bsv 29 42}}
Alias {AxiDefines::AxiByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {AxiDefines.bsv 30 42}}
Alias {AxiDefines::AxiId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {AxiDefines.bsv 32 46}}
Alias AxiDefines::AxiLen UInt#(4) {position {AxiDefines.bsv 33 46}}
Alias AxiDefines::AxiSize TLM3Defines::TLMBSize {position {AxiDefines.bsv 34 18}}
Struct AxiDefines::AxiProt {members {{TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMPrivilege privilege {width 1}}}} {width 3} {position {AxiDefines.bsv 40 19}}
Struct AxiDefines::AxiCache {members {{TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}}}} {width 4} {position {AxiDefines.bsv 47 19}}
Enum AxiDefines::AxiBurst {members {FIXED INCR WRAP}} {width 2} {position {AxiDefines.bsv 49 46}}
Alias AxiDefines::AxiLock TLM3Defines::TLMLock {position {AxiDefines.bsv 50 18}}
Enum AxiDefines::AxiResp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {AxiDefines.bsv 51 46}}
Struct {AxiDefines::AxiAddrCmd#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {UInt#(4) len {width 4}} {TLM3Defines::TLMBSize size {width 3}} {AxiDefines::AxiBurst burst {width 2}} {TLM3Defines::TLMLock lock {width 2}} {AxiDefines::AxiCache cache {width 4}} {AxiDefines::AxiProt prot {width 3}} {Bit#(addr_size) addr}}} {position {AxiDefines.bsv 63 19}}
Struct {AxiDefines::AxiWrData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {Bit#(data_size) data} {{Bit#(TDiv#(data_size, 8))} strb} {Bool last {width 1}}}} {position {AxiDefines.bsv 83 19}}
Struct {AxiDefines::AxiRdResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {Bit#(data_size) data} {AxiDefines::AxiResp resp {width 2}} {Bool last {width 1}}}} {position {AxiDefines.bsv 99 19}}
Struct {AxiDefines::AxiWrResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {AxiDefines::AxiResp resp {width 2}}}} {position {AxiDefines.bsv 113 19}}
Interface {AxiDefines::AxiWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) awID {} {{(* ports = [] *)} {(* result = "AWID" *)}}}} {method {Bit#(addr_size) awADDR {} {{(* ports = [] *)} {(* result = "AWADDR" *)}}}} {method {UInt#(4) awLEN {} {{(* ports = [] *)} {(* result = "AWLEN" *)}}}} {method {TLM3Defines::TLMBSize awSIZE {} {{(* ports = [] *)} {(* result = "AWSIZE" *)}}}} {method {AxiDefines::AxiBurst awBURST {} {{(* ports = [] *)} {(* result = "AWBURST" *)}}}} {method {TLM3Defines::TLMLock awLOCK {} {{(* ports = [] *)} {(* result = "AWLOCK" *)}}}} {method {AxiDefines::AxiCache awCACHE {} {{(* ports = [] *)} {(* result = "AWCACHE" *)}}}} {method {AxiDefines::AxiProt awPROT {} {{(* ports = [] *)} {(* result = "AWPROT" *)}}}} {method {Bool awVALID {} {{(* ports = [] *)} {(* result = "AWVALID" *)}}}} {method {Action awREADY Bool {{(* ports = ["AWREADY"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) wID {} {{(* ports = [] *)} {(* result = "WID" *)}}}} {method {Bit#(data_size) wDATA {} {{(* ports = [] *)} {(* result = "WDATA" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} wSTRB {} {{(* ports = [] *)} {(* result = "WSTRB" *)}}}} {method {Bool wLAST {} {{(* ports = [] *)} {(* result = "WLAST" *)}}}} {method {Bool wVALID {} {{(* ports = [] *)} {(* result = "WVALID" *)}}}} {method {Action wREADY Bool {{(* ports = ["WREADY"] *)} {(* result = "unusedwm1" *)} {(* prefix = "" *)}}}} {method {Bool bREADY {} {{(* ports = [] *)} {(* result = "BREADY" *)}}}} {method {Action bID Bit#(id_size) {{(* ports = ["BID"] *)} {(* result = "unusedwm2" *)} {(* prefix = "" *)}}}} {method {Action bRESP AxiDefines::AxiResp {{(* ports = ["BRESP"] *)} {(* result = "unusedwm3" *)} {(* prefix = "" *)}}}} {method {Action bVALID Bool {{(* ports = ["BVALID"] *)} {(* result = "unusedwm4" *)} {(* prefix = "" *)}}}}}} {position {AxiDefines.bsv 184 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiRdMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) arID {} {{(* ports = [] *)} {(* result = "ARID" *)}}}} {method {Bit#(addr_size) arADDR {} {{(* ports = [] *)} {(* result = "ARADDR" *)}}}} {method {UInt#(4) arLEN {} {{(* ports = [] *)} {(* result = "ARLEN" *)}}}} {method {TLM3Defines::TLMBSize arSIZE {} {{(* ports = [] *)} {(* result = "ARSIZE" *)}}}} {method {AxiDefines::AxiBurst arBURST {} {{(* ports = [] *)} {(* result = "ARBURST" *)}}}} {method {TLM3Defines::TLMLock arLOCK {} {{(* ports = [] *)} {(* result = "ARLOCK" *)}}}} {method {AxiDefines::AxiCache arCACHE {} {{(* ports = [] *)} {(* result = "ARCACHE" *)}}}} {method {AxiDefines::AxiProt arPROT {} {{(* ports = [] *)} {(* result = "ARPROT" *)}}}} {method {Bool arVALID {} {{(* ports = [] *)} {(* result = "ARVALID" *)}}}} {method {Action arREADY Bool {{(* ports = ["ARREADY"] *)} {(* result = "unusedrm0" *)} {(* prefix = "" *)}}}} {method {Bool rREADY {} {{(* ports = [] *)} {(* result = "RREADY" *)}}}} {method {Action rID Bit#(id_size) {{(* ports = ["RID"] *)} {(* result = "unusedrm1" *)} {(* prefix = "" *)}}}} {method {Action rDATA Bit#(data_size) {{(* ports = ["RDATA"] *)} {(* result = "unusedrm2" *)} {(* prefix = "" *)}}}} {method {Action rRESP AxiDefines::AxiResp {{(* ports = ["RRESP"] *)} {(* result = "unusedrm3" *)} {(* prefix = "" *)}}}} {method {Action rLAST Bool {{(* ports = ["RLAST"] *)} {(* result = "unusedrm4" *)} {(* prefix = "" *)}}}} {method {Action rVALID Bool {{(* ports = ["RVALID"] *)} {(* result = "unusedrm5" *)} {(* prefix = "" *)}}}}}} {position {AxiDefines.bsv 241 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action awID Bit#(id_size) {{(* ports = ["AWID"] *)} {(* result = "unusedws0" *)} {(* prefix = "" *)}}}} {method {Action awADDR Bit#(addr_size) {{(* ports = ["AWADDR"] *)} {(* result = "unusedws1" *)} {(* prefix = "" *)}}}} {method {Action awLEN UInt#(4) {{(* ports = ["AWLEN"] *)} {(* result = "unusedws2" *)} {(* prefix = "" *)}}}} {method {Action awSIZE TLM3Defines::TLMBSize {{(* ports = ["AWSIZE"] *)} {(* result = "unusedws3" *)} {(* prefix = "" *)}}}} {method {Action awBURST AxiDefines::AxiBurst {{(* ports = ["AWBURST"] *)} {(* result = "unusedws4" *)} {(* prefix = "" *)}}}} {method {Action awLOCK TLM3Defines::TLMLock {{(* ports = ["AWLOCK"] *)} {(* result = "unusedws5" *)} {(* prefix = "" *)}}}} {method {Action awCACHE AxiDefines::AxiCache {{(* ports = ["AWCACHE"] *)} {(* result = "unusedws6" *)} {(* prefix = "" *)}}}} {method {Action awPROT AxiDefines::AxiProt {{(* ports = ["AWPROT"] *)} {(* result = "unusedws7" *)} {(* prefix = "" *)}}}} {method {Action awVALID Bool {{(* ports = ["AWVALID"] *)} {(* result = "unusedws8" *)} {(* prefix = "" *)}}}} {method {Bool awREADY {} {{(* ports = [] *)} {(* result = "AWREADY" *)}}}} {method {Action wID Bit#(id_size) {{(* ports = ["WID"] *)} {(* result = "unusedws9" *)} {(* prefix = "" *)}}}} {method {Action wDATA Bit#(data_size) {{(* ports = ["WDATA"] *)} {(* result = "unusedws10" *)} {(* prefix = "" *)}}}} {method {Action wSTRB {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["WSTRB"] *)} {(* result = "unusedws11" *)} {(* prefix = "" *)}}}} {method {Action wLAST Bool {{(* ports = ["WLAST"] *)} {(* result = "unusedws12" *)} {(* prefix = "" *)}}}} {method {Action wVALID Bool {{(* ports = ["WVALID"] *)} {(* result = "unusedws13" *)} {(* prefix = "" *)}}}} {method {Bool wREADY {} {{(* ports = [] *)} {(* result = "WREADY" *)}}}} {method {Action bREADY Bool {{(* ports = ["BREADY"] *)} {(* result = "unusedws14" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) bID {} {{(* ports = [] *)} {(* result = "BID" *)}}}} {method {AxiDefines::AxiResp bRESP {} {{(* ports = [] *)} {(* result = "BRESP" *)}}}} {method {Bool bVALID {} {{(* ports = [] *)} {(* result = "BVALID" *)}}}}}} {position {AxiDefines.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiRdSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action arID Bit#(id_size) {{(* ports = ["ARID"] *)} {(* result = "unusedrs0" *)} {(* prefix = "" *)}}}} {method {Action arADDR Bit#(addr_size) {{(* ports = ["ARADDR"] *)} {(* result = "unusedrs1" *)} {(* prefix = "" *)}}}} {method {Action arLEN UInt#(4) {{(* ports = ["ARLEN"] *)} {(* result = "unusedrs2" *)} {(* prefix = "" *)}}}} {method {Action arSIZE TLM3Defines::TLMBSize {{(* ports = ["ARSIZE"] *)} {(* result = "unusedrs3" *)} {(* prefix = "" *)}}}} {method {Action arBURST AxiDefines::AxiBurst {{(* ports = ["ARBURST"] *)} {(* result = "unusedrs4" *)} {(* prefix = "" *)}}}} {method {Action arLOCK TLM3Defines::TLMLock {{(* ports = ["ARLOCK"] *)} {(* result = "unusedrs5" *)} {(* prefix = "" *)}}}} {method {Action arCACHE AxiDefines::AxiCache {{(* ports = ["ARCACHE"] *)} {(* result = "unusedrs6" *)} {(* prefix = "" *)}}}} {method {Action arPROT AxiDefines::AxiProt {{(* ports = ["ARPROT"] *)} {(* result = "unusedrs7" *)} {(* prefix = "" *)}}}} {method {Action arVALID Bool {{(* ports = ["ARVALID"] *)} {(* result = "unusedrs8" *)} {(* prefix = "" *)}}}} {method {Bool arREADY {} {{(* ports = [] *)} {(* result = "ARREADY" *)}}}} {method {Action rREADY Bool {{(* ports = ["RREADY"] *)} {(* result = "unusedrs9" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) rID {} {{(* ports = [] *)} {(* result = "RID" *)}}}} {method {Bit#(data_size) rDATA {} {{(* ports = [] *)} {(* result = "RDATA" *)}}}} {method {AxiDefines::AxiResp rRESP {} {{(* ports = [] *)} {(* result = "RRESP" *)}}}} {method {Bool rLAST {} {{(* ports = [] *)} {(* result = "RLAST" *)}}}} {method {Bool rVALID {} {{(* ports = [] *)} {(* result = "RVALID" *)}}}}}} {position {AxiDefines.bsv 344 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiRdBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 392 11}}
Interface {AxiDefines::AxiWrBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusRecv#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 397 11}}
Interface {AxiDefines::AxiRdBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 403 11}}
Interface {AxiDefines::AxiWrBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusSend#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 408 11}}
Interface {AxiDefines::AxiRdFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 418 11}}
Interface {AxiDefines::AxiRdFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {AxiDefines.bsv 423 11}}
Interface {AxiDefines::AxiWrFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 429 11}}
Interface {AxiDefines::AxiWrFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {AxiDefines.bsv 434 11}}
Interface {AxiDefines::AxiRdMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 478 11}}
Interface {AxiDefines::AxiWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 484 11}}
Interface {AxiDefines::AxiRdSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 490 11}}
Interface {AxiDefines::AxiWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 496 11}}
Interface {AxiDefines::AxiRdWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 506 11}}
Interface {AxiDefines::AxiRdWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 514 11}}
Interface {AxiDefines::AxiRdWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 522 11}}
Interface {AxiDefines::AxiRdWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 529 11}}
Interface AxiDefines::AxiLowPower {members {{method {Action cSYSREQ Bool {{(* ports = ["CSYSREQ"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bool cSYSACK {} {{(* ports = [] *)} {(* result = "CSYSACK" *)}}}} {method {Bool cACTIVE {} {{(* ports = [] *)} {(* result = "CACTIVE" *)}}}}}} {position {AxiDefines.bsv 554 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiPC::AxiPC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action aw_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action aw_len UInt#(4) {{(* ports = ["aw_len"] *)}}}} {method {Action aw_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action aw_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action aw_lock TLM3Defines::TLMLock {{(* ports = ["value"] *)}}}} {method {Action aw_cache AxiDefines::AxiCache {{(* ports = ["value"] *)}}}} {method {Action aw_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action aw_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action aw_valid Bool {{(* ports = ["value"] *)}}}} {method {Action aw_ready Bool {{(* ports = ["value"] *)}}}} {method {Action w_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action w_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action w_strb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["value"] *)}}}} {method {Action w_last Bool {{(* ports = ["value"] *)}}}} {method {Action w_valid Bool {{(* ports = ["value"] *)}}}} {method {Action w_ready Bool {{(* ports = ["value"] *)}}}} {method {Action b_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action b_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action b_valid Bool {{(* ports = ["value"] *)}}}} {method {Action b_ready Bool {{(* ports = ["value"] *)}}}} {method {Action ar_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action ar_len UInt#(4) {{(* ports = ["value"] *)}}}} {method {Action ar_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action ar_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action ar_lock TLM3Defines::TLMLock {{(* ports = ["value"] *)}}}} {method {Action ar_cache AxiDefines::AxiCache {{(* ports = ["value"] *)}}}} {method {Action ar_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action ar_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action ar_valid Bool {{(* ports = ["value"] *)}}}} {method {Action ar_ready Bool {{(* ports = ["value"] *)}}}} {method {Action r_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action r_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action r_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action r_last Bool {{(* ports = ["value"] *)}}}} {method {Action r_valid Bool {{(* ports = ["value"] *)}}}} {method {Action r_ready Bool {{(* ports = ["value"] *)}}}} {method {Action c_active Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysreq Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysack Bool {{(* ports = ["value"] *)}}}}}} {position {AxiPC.bsv 573 11}}
Struct AxiPC::AxiPCParams {members {{UInt#(32) exmon_width {width 32}} {UInt#(32) maxwaits {width 32}}}} {width 64} {position {AxiPC.bsv 629 19}}


Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Interface {AHBArbiterSupport::AHBArbiter#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {{Maybe#(Bit#(TSub#(TAdd#(TLog#(count), 1), TDiv#(TLog#(count), count))))} hmaster {} {{(* ports = [] *)}}}} {method {Action update {} {{(* ports = [] *)}}}}}} {position {AHBArbiterSupport.bsv 18 11}}
Typeclass {Arbiter::Arbitable#(type a)} {members {{{function b#(Arbiter::ArbiterRequest_IFC) f(a x1)   provisos (IsModule#(b, c))} mkArbiterRequest}}} {instances {Arbiter::Arbitable#(AhbDefines::AhbMasterArbiter) {Arbiter::Arbitable#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size))} Arbiter::Arbitable#(BusDefines::BusSend#(a))}} {position {%/Libraries/Arbiter.bsv 340 11 {Library Arbiter}}}
Interface Arbiter::ArbiterClient_IFC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Action lock {} {{(* ports = [] *)}}}} {method {Bool grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 11 11 {Library Arbiter}}}
Interface Arbiter::ArbiterRequest_IFC {members {{method {Bool request {} {{(* ports = [] *)}}}} {method {Bool lock {} {{(* ports = [] *)}}}} {method {Action grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 17 11 {Library Arbiter}}}
Interface {Arbiter::Arbiter_IFC#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {Bit#(TLog#(count)) grant_id {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 23 11 {Library Arbiter}}}
Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Interface {AHBArbiterSupport::AHBArbiter#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {{Maybe#(Bit#(TSub#(TAdd#(TLog#(count), 1), TDiv#(TLog#(count), count))))} hmaster {} {{(* ports = [] *)}}}} {method {Action update {} {{(* ports = [] *)}}}}}} {position {AHBArbiterSupport.bsv 18 11}}
Typeclass {Arbiter::Arbitable#(type a)} {members {{{function b#(Arbiter::ArbiterRequest_IFC) f(a x1)   provisos (IsModule#(b, c))} mkArbiterRequest}}} {instances {Arbiter::Arbitable#(AhbDefines::AhbMasterArbiter) {Arbiter::Arbitable#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size))} Arbiter::Arbitable#(BusDefines::BusSend#(a))}} {position {%/Libraries/Arbiter.bsv 340 11 {Library Arbiter}}}
Struct {BusSwitch::BusSwitchPath#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) send_port} {Bit#(id_size) recv_port} {Bit#(id_size) send_id} {Bit#(id_size) recv_id}}} {position {BusSwitch.bsv 28 19}}
Interface {BusSwitch::BusSwitch#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action set_path {{BusSwitch::BusSwitchPath#(id_size, addr_size, data_size, length_size, user_size)}} {{(* ports = ["path"] *)}}}} {method {Bool done {} {{(* ports = [] *)}}}} {method {Action ack {} {{(* ports = [] *)}}}}}} {position {BusSwitch.bsv 38 11}}
Alias {TLM3CBusAdapter::TLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CBus#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 20 38}}
Alias {TLM3CBusAdapter::ModWithTLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(caddr_size, data_size)), HList::HNil), i)} {position {TLM3CBusAdapter.bsv 21 48}}



Alias TLM3Defines::TLMRequestStd {TLM3Defines::TLMRequest#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 31 36}}
Alias TLM3Defines::TLMResponseStd {TLM3Defines::TLMResponse#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 32 36}}
Enum TLM3Defines::TLMCommand {members {READ WRITE UNKNOWN}} {width 2} {position {TLM3Defines.bsv 34 53}}
Enum TLM3Defines::TLMMode {members {REGULAR DEBUG CONTROL UNKNOWN}} {width 2} {position {TLM3Defines.bsv 35 53}}
Enum TLM3Defines::TLMBurstMode {members {INCR WRAP CNST UNKNOWN}} {width 2} {position {TLM3Defines.bsv 36 53}}
Enum TLM3Defines::TLMStatus {members {SUCCESS ERROR EXOKAY UNKNOWN}} {width 2} {position {TLM3Defines.bsv 44 48}}
Alias {TLM3Defines::TLMId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {TLM3Defines.bsv 67 42}}
Alias {TLM3Defines::TLMAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {TLM3Defines.bsv 68 42}}
Alias {TLM3Defines::TLMData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {TLM3Defines.bsv 69 42}}
Alias {TLMDefines::TLMUInt#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} UInt#(uint_size) {position {TLMDefines.bsv 36 42}}
Alias {TLM3Defines::TLMByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {TLM3Defines.bsv 70 42}}
Alias {TLMDefines::TLMBurstSize#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} {Bit#(TLog#(TDiv#(data_size, 8)))} {position {TLMDefines.bsv 38 42}}
Alias {TLMDefines::TLMCustom#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} cstm_type {position {TLMDefines.bsv 39 42}}
Struct {TLM3Defines::RequestDescriptor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMMode mode {width 2}} {Bit#(addr_size) addr} {Bit#(user_size) user_addr} {Bit#(4) region {width 4}} {Bit#(data_size) data} {UInt#(length_size) b_length} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {Bit#(4) prty {width 4}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(id_size) transaction_id} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMMark mark {width 2}} {Bool cntrl_flow {width 1}}}} {position {TLM3Defines.bsv 116 19}}
Struct {TLM3Defines::RequestData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 123 19}}
TaggedUnion {TLM3Defines::TLMRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {{TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size)} Data}}} {position {TLM3Defines.bsv 128 25}}
Struct {TLM3Defines::TLMResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {Bit#(data_size) data} {TLM3Defines::TLMStatus status {width 2}} {Bit#(user_size) user} {Bit#(4) prty {width 4}} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 138 19}}
Interface {TLM3Defines::TLMSendIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(req) tx {}} {interface GetPut::Put#(resp) rx {}}}} {position {TLM3Defines.bsv 790 11}}
Interface {TLM3Defines::TLMRecvIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(resp) tx {}} {interface GetPut::Put#(req) rx {}}}} {position {TLM3Defines.bsv 795 11}}
Interface {TLM3Defines::TLMReadWriteSendIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 800 11}}
Interface {TLM3Defines::TLMReadWriteRecvIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMRecvIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 805 11}}
Interface {TLM3Defines::TLMTransformIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} in {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} out {}}}} {position {TLM3Defines.bsv 810 11}}
Typeclass {TLMDefines::Monitorable#(type a)} {members {{{function b#(Empty) f(a x1)   provisos (IsModule#(b, c))} mkMonitor}}} {position {TLMDefines.bsv 466 11}}
Typeclass {TLM3Defines::AddrMatch#(type addr_t, type ifc_t)} {members {{{function ifc_t f(function Bool x1(addr_t x1), ifc_t x2)} addAddrMatch}}} {position {TLM3Defines.bsv 844 11}}

Alias {TLM3CBusAdapter::TLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CBus#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 20 38}}
Alias {TLM3CBusAdapter::ModWithTLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(caddr_size, data_size)), HList::HNil), i)} {position {TLM3CBusAdapter.bsv 21 48}}
Alias {TLM3CBusAdapter::TLMCRAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CRAddr#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 22 40}}




Typeclass {TLM3BRAM::ToBRAMSeverBETC#(type a, type addr, type data, numeric type n)} {dependencies {{a determines (addr, data, n)}}} {members {{{function ClientServer::Server#(BRAM::BRAMRequestBE#(addr, data, n), data) f(a x1)} toBRAMServerBE}}} {instances {{TLM3BRAM::ToBRAMSeverBETC#(BRAM::BRAMServer#(addr, data), addr, data, n)} {TLM3BRAM::ToBRAMSeverBETC#(BRAM::BRAMServerBE#(addr, data, n), addr, data, n)}}} {position {TLM3BRAM.bsv 132 11}}
Alias TLM3Defines::TLMRequestStd {TLM3Defines::TLMRequest#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 31 36}}
Alias TLM3Defines::TLMResponseStd {TLM3Defines::TLMResponse#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 32 36}}
Enum TLM3Defines::TLMCommand {members {READ WRITE UNKNOWN}} {width 2} {position {TLM3Defines.bsv 34 53}}
Enum TLM3Defines::TLMMode {members {REGULAR DEBUG CONTROL UNKNOWN}} {width 2} {position {TLM3Defines.bsv 35 53}}
Enum TLM3Defines::TLMBurstMode {members {INCR WRAP CNST UNKNOWN}} {width 2} {position {TLM3Defines.bsv 36 53}}
Enum TLM3Defines::TLMStatus {members {SUCCESS ERROR EXOKAY UNKNOWN}} {width 2} {position {TLM3Defines.bsv 44 48}}
Alias {TLM3Defines::TLMId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {TLM3Defines.bsv 67 42}}
Alias {TLM3Defines::TLMAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {TLM3Defines.bsv 68 42}}
Alias {TLM3Defines::TLMData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {TLM3Defines.bsv 69 42}}
Alias {TLMDefines::TLMUInt#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} UInt#(uint_size) {position {TLMDefines.bsv 36 42}}
Alias {TLM3Defines::TLMByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {TLM3Defines.bsv 70 42}}
Alias {TLMDefines::TLMBurstSize#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} {Bit#(TLog#(TDiv#(data_size, 8)))} {position {TLMDefines.bsv 38 42}}
Alias {TLMDefines::TLMCustom#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} cstm_type {position {TLMDefines.bsv 39 42}}
Struct {TLM3Defines::RequestDescriptor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMMode mode {width 2}} {Bit#(addr_size) addr} {Bit#(user_size) user_addr} {Bit#(4) region {width 4}} {Bit#(data_size) data} {UInt#(length_size) b_length} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {Bit#(4) prty {width 4}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(id_size) transaction_id} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMMark mark {width 2}} {Bool cntrl_flow {width 1}}}} {position {TLM3Defines.bsv 116 19}}
Struct {TLM3Defines::RequestData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 123 19}}
TaggedUnion {TLM3Defines::TLMRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {{TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size)} Data}}} {position {TLM3Defines.bsv 128 25}}
Struct {TLM3Defines::TLMResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {Bit#(data_size) data} {TLM3Defines::TLMStatus status {width 2}} {Bit#(user_size) user} {Bit#(4) prty {width 4}} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 138 19}}
Typeclass {TLM3Defines::TLMRequestTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMRequest} {{function a f(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMRequest}}} {instances {{TLM3Defines::TLMRequestTC#(AhbDefines::AhbXtorRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(BRAM::BRAMRequest#(Bit#(addr_size), Bit#(data_size)), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(BRAM::BRAMRequestBE#(Bit#(addr_size), Bit#(data_size), TDiv#(data_size, 8)), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 206 11}}
Typeclass {TLM3Defines::TLMResponseTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMResponse} {{function a f(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMResponse}}} {instances {{TLM3Defines::TLMResponseTC#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(Bit#(data_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 212 11}}
Interface {TLM3Defines::TLMSendIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(req) tx {}} {interface GetPut::Put#(resp) rx {}}}} {position {TLM3Defines.bsv 790 11}}
Interface {TLM3Defines::TLMRecvIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(resp) tx {}} {interface GetPut::Put#(req) rx {}}}} {position {TLM3Defines.bsv 795 11}}
Interface {TLM3Defines::TLMReadWriteSendIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 800 11}}
Interface {TLM3Defines::TLMReadWriteRecvIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMRecvIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 805 11}}
Interface {TLM3Defines::TLMTransformIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} in {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} out {}}}} {position {TLM3Defines.bsv 810 11}}
Typeclass {TLM3Defines::AddrMatch#(type addr_t, type ifc_t)} {members {{{function ifc_t f(function Bool x1(addr_t x1), ifc_t x2)} addAddrMatch}}} {position {TLM3Defines.bsv 844 11}}
Alias TLM3Defines::TLMRequestStd {TLM3Defines::TLMRequest#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 31 36}}
Alias TLM3Defines::TLMResponseStd {TLM3Defines::TLMResponse#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 32 36}}
Enum TLM3Defines::TLMCommand {members {READ WRITE UNKNOWN}} {width 2} {position {TLM3Defines.bsv 34 53}}
Enum TLM3Defines::TLMMode {members {REGULAR DEBUG CONTROL UNKNOWN}} {width 2} {position {TLM3Defines.bsv 35 53}}
Enum TLM3Defines::TLMBurstMode {members {INCR WRAP CNST UNKNOWN}} {width 2} {position {TLM3Defines.bsv 36 53}}
Enum TLM3Defines::TLMStatus {members {SUCCESS ERROR EXOKAY UNKNOWN}} {width 2} {position {TLM3Defines.bsv 44 48}}
Alias {TLM3Defines::TLMId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {TLM3Defines.bsv 67 42}}
Alias {TLM3Defines::TLMAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {TLM3Defines.bsv 68 42}}
Alias {TLM3Defines::TLMData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {TLM3Defines.bsv 69 42}}
Alias {TLMDefines::TLMUInt#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} UInt#(uint_size) {position {TLMDefines.bsv 36 42}}
Alias {TLM3Defines::TLMByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {TLM3Defines.bsv 70 42}}
Alias {TLMDefines::TLMBurstSize#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} {Bit#(TLog#(TDiv#(data_size, 8)))} {position {TLMDefines.bsv 38 42}}
Alias {TLMDefines::TLMCustom#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} cstm_type {position {TLMDefines.bsv 39 42}}
Struct {TLM3Defines::RequestDescriptor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMMode mode {width 2}} {Bit#(addr_size) addr} {Bit#(user_size) user_addr} {Bit#(4) region {width 4}} {Bit#(data_size) data} {UInt#(length_size) b_length} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {Bit#(4) prty {width 4}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(id_size) transaction_id} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMMark mark {width 2}} {Bool cntrl_flow {width 1}}}} {position {TLM3Defines.bsv 116 19}}
Struct {TLM3Defines::RequestData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 123 19}}
TaggedUnion {TLM3Defines::TLMRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {{TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size)} Data}}} {position {TLM3Defines.bsv 128 25}}
Struct {TLM3Defines::TLMResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {Bit#(data_size) data} {TLM3Defines::TLMStatus status {width 2}} {Bit#(user_size) user} {Bit#(4) prty {width 4}} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 138 19}}
Interface {TLM3Defines::TLMSendIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(req) tx {}} {interface GetPut::Put#(resp) rx {}}}} {position {TLM3Defines.bsv 790 11}}
Interface {TLM3Defines::TLMRecvIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(resp) tx {}} {interface GetPut::Put#(req) rx {}}}} {position {TLM3Defines.bsv 795 11}}
Interface {TLM3Defines::TLMReadWriteSendIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 800 11}}
Interface {TLM3Defines::TLMReadWriteRecvIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMRecvIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 805 11}}
Interface {TLM3Defines::TLMTransformIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} in {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} out {}}}} {position {TLM3Defines.bsv 810 11}}
Typeclass {TLMDefines::Monitorable#(type a)} {members {{{function b#(Empty) f(a x1)   provisos (IsModule#(b, c))} mkMonitor}}} {position {TLMDefines.bsv 466 11}}
Typeclass {TLM3Defines::AddrMatch#(type addr_t, type ifc_t)} {members {{{function ifc_t f(function Bool x1(addr_t x1), ifc_t x2)} addAddrMatch}}} {position {TLM3Defines.bsv 844 11}}
Alias {TLM3CBusAdapter::TLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CBus#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 20 38}}
Alias {TLM3CBusAdapter::ModWithTLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(caddr_size, data_size)), HList::HNil), i)} {position {TLM3CBusAdapter.bsv 21 48}}
Interface {BusDefines::BusSender#(type a)} polymorphic {members {{interface FIFO::FIFO#(a) in {}} {interface BusDefines::BusSend#(a) out {}}}} {position {BusDefines.bsv 15 11}}
Interface {BusDefines::BusReceiver#(type a)} polymorphic {members {{interface BusDefines::BusRecv#(a) in {}} {interface FIFO::FIFO#(a) out {}}}} {position {BusDefines.bsv 20 11}}
Interface {BusDefines::BusSend#(type a)} polymorphic {members {{method {a data {} {{(* ports = [] *)}}}} {method {Bool valid {} {{(* ports = [] *)}}}} {method {Action ready Bool {{(* ports = ["value"] *)}}}}}} {position {BusDefines.bsv 26 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {BusDefines::BusRecv#(type a)} polymorphic {members {{method {Action data a {{(* ports = ["value"] *)}}}} {method {Action valid Bool {{(* ports = ["value"] *)}}}} {method {Bool ready {} {{(* ports = [] *)}}}}}} {position {BusDefines.bsv 33 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Typeclass {BusDefines::BusPayload#(type a, type b)} {dependencies {{a determines b}}} {members {{{function Bool f(a x1)} isLast} {{function b f(a x1)} getId} {{function a f(a x1, b x2)} setId}}} {instances {{BusDefines::BusPayload#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))}}} {position {BusDefines.bsv 56 11}}

Interface {BusDefines::BusSender#(type a)} polymorphic {members {{interface FIFO::FIFO#(a) in {}} {interface BusDefines::BusSend#(a) out {}}}} {position {BusDefines.bsv 15 11}}
Interface {BusDefines::BusReceiver#(type a)} polymorphic {members {{interface BusDefines::BusRecv#(a) in {}} {interface FIFO::FIFO#(a) out {}}}} {position {BusDefines.bsv 20 11}}
Interface {BusDefines::BusSend#(type a)} polymorphic {members {{method {a data {} {{(* ports = [] *)}}}} {method {Bool valid {} {{(* ports = [] *)}}}} {method {Action ready Bool {{(* ports = ["value"] *)}}}}}} {position {BusDefines.bsv 26 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {BusDefines::BusRecv#(type a)} polymorphic {members {{method {Action data a {{(* ports = ["value"] *)}}}} {method {Action valid Bool {{(* ports = ["value"] *)}}}} {method {Bool ready {} {{(* ports = [] *)}}}}}} {position {BusDefines.bsv 33 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Typeclass {BusDefines::BusPayload#(type a, type b)} {dependencies {{a determines b}}} {members {{{function Bool f(a x1)} isLast} {{function b f(a x1)} getId} {{function a f(a x1, b x2)} setId}}} {instances {{BusDefines::BusPayload#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))}}} {position {BusDefines.bsv 56 11}}
Enum XilinxClocks::State {members {Restart WaitLock WaitStart Address Read Modify Write WaitWriteReady}} {width 3} {position {XilinxClocks.bsv 41 3}}
Alias GenCRepr::ByteList List#(Bit#(8)) {position {GenCRepr.bs 11 5}}
Typeclass {GenCRepr::ByteListToVector#(numeric type n)} {members {{{function Vector::Vector#(n, Bit#(8)) f(List#(Bit#(8)) x1)} byteListToVector}}} {instances {GenCRepr::ByteListToVector#(0) {GenCRepr::ByteListToVector#(n)   provisos (GenCRepr::ByteListToVector#(n1), Add#(n1, 1, n))}}} {position {GenCRepr.bs 35 6}}
Typeclass {GenCRepr::GenCRepr#(type a, numeric type n)} {dependencies {{a determines n}}} {members {{{function String f(a x1)} typeName} {{function Tuple2#(String, String) f(a x1)} genCType} {{function Maybe#(String) f(a x1)} genCTypeDecl} {{function List#(Bit#(8)) f(a x1)} packBytes} {{function String f(a x1, String x2, String x3)} genCPack} {{function Maybe#(Tuple2#(String, String)) f(a x1)} genCPackDecl} {{function Tuple2#(a, List#(Bit#(8))) f(List#(Bit#(8)) x1)} unpackBytes} {{State::State#(List#(Bit#(8)), a)} unpackBytesS} {{function String f(a x1, String x2, String x3)} genCUnpack} {{function Maybe#(Tuple2#(String, String)) f(a x1)} genCUnpackDecl}}} {instances {{GenCRepr::GenCRepr#(Bool, 1)} {GenCRepr::GenCRepr#(Int#(b), n)   provisos (Div#(b, 8, n))} {GenCRepr::GenCRepr#(UInt#(b), n)   provisos (Div#(b, 8, n))} {GenCRepr::GenCRepr#(a, n)   provisos (GenCRepr::GenCRepr#(a, n1), GenCRepr::GenCRepr'#(r, n), Generic#(a, r))}}} {position {GenCRepr.bs 48 6}}

Typeclass {GenCRepr::TypeNames#(type a)} {members {{{function String f(a x1)} typeNames}}} {instances {GenCRepr::TypeNames#(NumArg#(n)) {GenCRepr::TypeNames#(StarArg#(a))   provisos (GenCRepr::GenCRepr#(a, n))} GenCRepr::TypeNames#(StrArg#(s)) {GenCRepr::TypeNames#(Tuple2#(NumArg#(n), b))   provisos (GenCRepr::TypeNames#(b))} {GenCRepr::TypeNames#(Tuple2#(StarArg#(a), b))   provisos (GenCRepr::TypeNames#(b), GenCRepr::GenCRepr#(a, n))} {GenCRepr::TypeNames#(Tuple2#(StrArg#(s), b))   provisos (GenCRepr::TypeNames#(b))} GenCRepr::TypeNames#(void)}} {position {GenCRepr.bs 375 6}}
Typeclass {GenCRepr::GenCUnionBody#(numeric type nt, type a, numeric type i, numeric type n)} {dependencies {{(nt, a) determines (i, n)}}} {members {{{function String f(Bit#(nt) x1, a x2, String x3)} genCEnumBody} {{function String f(Bit#(nt) x1, a x2, String x3)} genCUnionBody} {{function Bool f(Bit#(nt) x1, a x2)} hasUnionMembers} {{function List#(Bit#(8)) f(Bit#(nt) x1, a x2)} packUnionBody} {{function String f(Bit#(nt) x1, a x2, String x3)} genCPackUnionBody} {{function State::State#(List#(Bit#(8)), a) f(Bit#(nt) x1)} unpackUnionBody} {{function String f(Bit#(nt) x1, a x2, String x3)} genCUnpackUnionBody}}} {instances {{GenCRepr::GenCUnionBody#(tagBytes, Either#(a, b), i1, n)   provisos (Mul#(tagBytes, 8, tagBits), Max#(n1, n2, n), GenCRepr::GenCUnionBody#(tagBytes, b, i2, n2), GenCRepr::GenCUnionBody#(tagBytes, a, i1, n1))} {GenCRepr::GenCUnionBody#(tagBytes, Meta#(MetaConsAnon#(ctorName, ctorIdx, 0), void), ctorIdx, 0)   provisos (Mul#(tagBytes, 8, tagBits))} {GenCRepr::GenCUnionBody#(tagBytes, Meta#(MetaConsAnon#(ctorName, ctorIdx, 1), Meta#(MetaField#(fieldName, fieldIdx), Conc#(a))), ctorIdx, n)   provisos (Mul#(tagBytes, 8, tagBits), GenCRepr::GenCRepr#(a, n))} {GenCRepr::GenCUnionBody#(tagBytes, Meta#(MetaConsAnon#(ctorName, ctorIdx, numFields), bodyRepr), ctorIdx, n)   provisos (Mul#(tagBytes, 8, tagBits), GenCRepr::GenCStructBody#(bodyRepr, n))} {GenCRepr::GenCUnionBody#(tagBytes, Meta#(MetaConsNamed#(ctorName, ctorIdx, numFields), bodyRepr), ctorIdx, n)   provisos (Mul#(tagBytes, 8, tagBits), GenCRepr::GenCStructBody#(bodyRepr, n))}}} {position {GenCRepr.bs 406 6}}
Typeclass {GenCRepr::GenCStructBody#(type a, numeric type n)} {dependencies {{a determines n}}} {members {{{function String f(a x1, Bool x2)} genCStructBody} {{function List#(Bit#(8)) f(a x1)} packStructBody} {{function String f(a x1, Bool x2, String x3)} genCPackStructBody} {{State::State#(List#(Bit#(8)), a)} unpackStructBody} {{function String f(a x1, Bool x2, String x3)} genCUnpackStructBody}}} {instances {{GenCRepr::GenCStructBody#(Meta#(MetaField#(name, idx), Conc#(a)), n)   provisos (GenCRepr::GenCRepr#(a, n))} {GenCRepr::GenCStructBody#(Tuple2#(a, b), n)   provisos (Add#(n1, n2, n), GenCRepr::GenCStructBody#(b, n2), GenCRepr::GenCStructBody#(a, n1))} {GenCRepr::GenCStructBody#(void, 0)}}} {position {GenCRepr.bs 545 6}}
Typeclass {GenCRepr::GenCDecls#(type a)} {members {{{function List#(String) f(a x1)} componentTypeNames} {{function State::State#(List#(String), String) f(a x1)} genCHeaderDecls} {{function State::State#(List#(String), String) f(a x1)} genCImplDecls}}} {instances {{GenCRepr::GenCDecls#(a)   provisos (GenCRepr::GenCDecls'#(r), Generic#(a, r), GenCRepr::GenCRepr#(a, n))}}} {position {GenCRepr.bs 593 6}}

Typeclass {GenCRepr::GenAllCDecls#(type a)} {members {{{function State::State#(List#(String), String) f(a x1)} genAllCHeaderDecls} {{function State::State#(List#(String), String) f(a x1)} genAllCImplDecls}}} {instances {{GenCRepr::GenAllCDecls#(Tuple2#(a, b))   provisos (GenCRepr::GenAllCDecls#(b), GenCRepr::GenCDecls'#(_v100), Generic#(a, _v100), GenCRepr::GenCRepr#(a, _v101))} {GenCRepr::GenAllCDecls#(a)   provisos (GenCRepr::GenCDecls'#(_v100), Generic#(a, _v100), GenCRepr::GenCRepr#(a, _v101))} GenCRepr::GenAllCDecls#(void)}} {position {GenCRepr.bs 680 6}}
Typeclass {GenCMsg::ByteVector#(numeric type n)} {members {{{function Vector::Vector#(n, Bit#(8)) f(Bit#(TMul#(n, 8)) x1)} toByteVector} {{function Bit#(TMul#(n, 8)) f(Vector::Vector#(n, Bit#(8)) x1)} fromByteVector}}} {instances {GenCMsg::ByteVector#(0) {GenCMsg::ByteVector#(n)   provisos (GenCMsg::ByteVector#(n1), Add#(n1, 1, n))}}} {position {GenCMsg.bs 11 6}}
Interface {GenCMsg::Rx#(numeric type destFIFOSize, numeric type srcFIFOSize, type a)} polymorphic {members {{method {Action deq {} {}}} {method {a first {} {}}} {method {Bool notEmpty {} {}}}}} {position {GenCMsg.bs 28 11}}
Interface {GenCMsg::Tx#(numeric type destFIFOSize, numeric type srcFIFOSize, type a)} polymorphic {members {{method {Action enq a {}}} {method {Bool notFull {} {}}}}} {position {GenCMsg.bs 36 11}}
Alias {GenCMsg::SizedVector#(numeric type n, type a)} {Tuple2#(UInt#(TLog#(TAdd#(1, n))), Vector::Vector#(n, a))} {position {GenCMsg.bs 58 5}}
Interface {GenCMsg::MsgManager#(type fifos, numeric type rxBytes, numeric type txBytes)} polymorphic {members {{method {fifos fifos {} {}}} {interface {GetPut::Put#(Vector::Vector#(rxBytes, Bit#(8)))} rxMsg {}} {interface {GetPut::Get#(Tuple2#(UInt#(TLog#(TAdd#(1, txBytes))), Vector::Vector#(txBytes, Bit#(8))))} txMsg {}}}} {position {GenCMsg.bs 65 10}}
Typeclass {GenCMsg::GenCMsg#(type fifos, numeric type rxBytes, numeric type txBytes)} {dependencies {{fifos determines (rxBytes, txBytes)}}} {members {{{Module#(GenCMsg::MsgManager#(fifos, rxBytes, txBytes))} mkMsgManager} {{function State::State#(List#(String), String) f(fifos x1)} genCMsgHeaderDecls} {{function State::State#(List#(String), String) f(fifos x1)} genCMsgImplDecls}}} {instances {{GenCMsg::GenCMsg#(fifos, rxTotalBytes, txTotalBytes)   provisos (Generic#(fifos, Meta#(MetaData#(name, pkg, ta, 1), r)), GenCMsg::FIFOs'#(Meta#(MetaData#(name, pkg, ta, 1), r), rxBytes, rxCount, txBytes, txCount), GenCRepr::ByteListToVector#(txBytes), Add#(txHead, txBytes, txTotalBytes), Add#(rxCount, tagBytes, txHead), Add#(txCount, rxRest, rxTotalBytes), Add#(rxHead, rxBytes, rxTotalBytes), Add#(txCount, tagBytes, rxHead), GenCMsg::ByteVector#(tagBytes), Div#(tagBits, 8, tagBytes), Log#(TAdd#(1, TAdd#(rxCount, txCount)), tagBits))}}} {position {GenCMsg.bs 70 6}}
Typeclass {GenCMsg::FIFOs#(type fifos, numeric type rxBytes, numeric type rxCount, numeric type txBytes, numeric type txCount)} {dependencies {{fifos determines (rxBytes, rxCount, txBytes, txCount)}}} {members {{{module f#(fifos x1)(Vector::Vector#(rxCount, Reg#(UInt#(8))))} mkRxCredits} {{module f#(fifos x1)(Vector::Vector#(txCount, Reg#(UInt#(8))))} mkTxCredits} {{module f#(Vector::Vector#(rxCount, Reg#(UInt#(8))) x1, function Bool x2(Integer x1), List#(Bit#(8)) x3, Action x4, Vector::Vector#(txCount, Reg#(UInt#(8))) x5, function Action x6(Integer x1, List#(Bit#(8)) x2))(Tuple2#(fifos, Rules))} mkFIFOs} {{function State::State#(List#(String), String) f(fifos x1)} genCMsgTypeHeaderDcls} {{function State::State#(List#(String), String) f(fifos x1)} genCMsgTypeImplDcls} {{function String f(fifos x1)} genCFIFOStructItems} {{function String f(fifos x1)} genCFIFOInitCredits} {{function String f(fifos x1)} genCFIFORestoreCredits} {{function String f(fifos x1)} genCFIFOCollectCredits} {{function String f(fifos x1, Integer x2)} genCFIFOEncode} {{function String f(fifos x1, Integer x2)} genCFIFODecode} {{function String f(fifos x1, String x2)} genCFIFOHeaderDcls} {{function String f(fifos x1, String x2)} genCFIFOImplDcls}}} {instances {{GenCMsg::FIFOs#(a, brx, nrx, btx, ntx)   provisos (GenCMsg::FIFOs'#(r, brx, nrx, btx, ntx), Generic#(a, r))}}} {position {GenCMsg.bs 185 6}}

Alias TLM3Stream::DFLT 0 {position {TLM3Stream.bsv 20 11}}
Alias TLM3Stream::STRB 1 {position {TLM3Stream.bsv 21 11}}
Alias TLM3Stream::KEEP 2 {position {TLM3Stream.bsv 22 11}}
Alias TLM3Stream::KEEPSTRB 3 {position {TLM3Stream.bsv 23 11}}
Alias {TLM3Stream::TLMKeep#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TMul#(TMin#(1, TMax#(0, TSub#(TMax#(1, length_size), 1))), TDiv#(data_size, 8)))} {position {TLM3Stream.bsv 25 135}}
Alias {TLM3Stream::TLMStrb#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TMul#(TSub#(TMax#(length_size, TAdd#(TDiv#(length_size, 2), TDiv#(length_size, 2))), length_size), TDiv#(data_size, 8)))} {position {TLM3Stream.bsv 26 135}}
Struct {TLM3Stream::TLMTransfer#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(addr_size) dest} {Bit#(user_size) user} {Bit#(id_size) transaction_id} {{Bit#(TDiv#(data_size, 8))} keep} {{Bit#(TDiv#(data_size, 8))} strb} {Bool is_last {width 1}}}} {position {TLM3Stream.bsv 35 19}}
Typeclass {TLM3Stream::TLMTransferTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMTransfer} {{function a f(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMTransfer}}} {instances {{TLM3Stream::TLMTransferTC#(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Stream.bsv 59 11}}

Typeclass {TLM3BRAM::ToBRAMSeverBETC#(type a, type addr, type data, numeric type n)} {dependencies {{a determines (addr, data, n)}}} {members {{{function ClientServer::Server#(BRAM::BRAMRequestBE#(addr, data, n), data) f(a x1)} toBRAMServerBE}}} {instances {{TLM3BRAM::ToBRAMSeverBETC#(BRAM::BRAMServer#(addr, data), addr, data, n)} {TLM3BRAM::ToBRAMSeverBETC#(BRAM::BRAMServerBE#(addr, data, n), addr, data, n)}}} {position {TLM3BRAM.bsv 132 11}}
Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Alias {AhbDefines::LUInt#(numeric type m)} {UInt#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 29 35}}
Alias TLM3Api::TLMHeaderId Bit#(10) {position {TLM3Api.bsv 29 19}}
Struct TLM3Api::TLMRequestHeader {members {{UInt#(15) b_length {width 15}} {TLM3Api::TLMRequestParams params {width 36}}}} {width 51} {position {TLM3Api.bsv 33 19}}
Struct TLM3Api::TLMRequestParams {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(10) transaction_id {width 10}} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {Bit#(4) region {width 4}} {Bit#(4) qos {width 4}} {Bool cntrl_flow {width 1}} {Bool spec_byte_enable {width 1}}}} {width 36} {position {TLM3Api.bsv 57 19}}
Struct TLM3Api::TLMResponseHeader {members {{UInt#(15) b_length {width 15}} {TLM3Api::TLMResponseParams params {width 17}}}} {width 32} {position {TLM3Api.bsv 62 19}}
Struct TLM3Api::TLMResponseParams {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMStatus status {width 2}} {Bit#(10) transaction_id {width 10}} {TLM3Defines::TLMErrorCode error {width 3}}}} {width 17} {position {TLM3Api.bsv 68 19}}
Alias TLM3Api::Chunk Bit#(32) {position {TLM3Api.bsv 237 18}}
Interface {TLM3Api::ApiRecvIFC#(type req_t, type resp_t)} polymorphic {members {{interface {ClientServer::Server#(Bit#(32), Bit#(32))} scemi {}} {interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} out {}}}} {position {TLM3Api.bsv 248 11}}
Interface {TLM3Api::ApiSendIFC#(type req_t, type resp_t)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} in {}} {interface {ClientServer::Client#(Bit#(32), Bit#(32))} scemi {}}}} {position {TLM3Api.bsv 253 11}}
Enum TLM3Api::SendState {members {SHeader0 SHeader1 SAddrRead SAddrWrite SUserRead SUserWrite SData}} {width 3} {position {TLM3Api.bsv 262 88}}
Enum TLM3Api::RecvState {members {RHeader0 RHeader1 RAddr RUser RData}} {width 3} {position {TLM3Api.bsv 551 56}}
Interface {TLM3Api::CFIFO#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["count"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {TLM3Api.bsv 879 11}}

Alias {TLM3CBusAdapter::TLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CBus#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 20 38}}
Alias {TLM3CBusAdapter::ModWithTLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(caddr_size, data_size)), HList::HNil), i)} {position {TLM3CBusAdapter.bsv 21 48}}
Alias {TLM3CBusAdapter::TLMCRAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CRAddr#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 22 40}}
TaggedUnion {CB::TokenRR#(type a, numeric type ln)} polymorphic {members {{{CB::TokenRequest#(a, ln)} Request} {{CB::TokenRange#(a, ln)} Range}}} {position {CB.bsv 22 25}}
Struct {CB::TokenRange#(type a, numeric type ln)} polymorphic {members {{a label} {Bit#(ln) token} {Bit#(ln) size}}} {position {CB.bsv 27 19}}
Struct {CB::TokenRequest#(type a, numeric type ln)} polymorphic {members {{a label} {Bit#(ln) size}}} {position {CB.bsv 31 19}}
Interface {CB::CompletionBuffer#(numeric type ln, type a, type b)} polymorphic {members {{interface {GetPut::Put#(CB::TokenRequest#(a, ln))} request {{(* ports = [] *)}}} {interface {GetPut::Get#(CB::TokenRange#(a, ln))} reserve {{(* ports = [] *)}}} {interface {GetPut::Put#(Tuple2#(Bit#(ln), b))} complete {{(* ports = [] *)}}} {interface GetPut::Get#(b) drain {{(* ports = [] *)}}}}} {position {CB.bsv 63 11}}
Interface {TLM3Reorder::TLMReorder#(numeric type m, numeric type ln, type req_t, type resp_t)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} in {}} {interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} out {}}}} {position {TLM3Reorder.bsv 21 11}}
Alias {TLM3Reorder::TLMReorderBuffer#(numeric type lm, numeric type ld, type req_t, type resp_t)} {TLM3Reorder::TLMReorder#(TExp#(ld), TMax#(8, TAdd#(lm, ld)), req_t, resp_t)} {position {TLM3Reorder.bsv 27 9}}
Enum TLM3Defines::TLMFamily {members {DEFAULT APB AHB AXI AXI4}} {width 3} {position {TLM3Defines.bsv 29 45}}
Alias TLM3Defines::TLMRequestStd {TLM3Defines::TLMRequest#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 31 36}}
Alias TLM3Defines::TLMResponseStd {TLM3Defines::TLMResponse#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 32 36}}
Enum TLM3Defines::TLMCommand {members {READ WRITE UNKNOWN}} {width 2} {position {TLM3Defines.bsv 34 53}}
Enum TLM3Defines::TLMMode {members {REGULAR DEBUG CONTROL UNKNOWN}} {width 2} {position {TLM3Defines.bsv 35 53}}
Enum TLM3Defines::TLMBurstMode {members {INCR WRAP CNST UNKNOWN}} {width 2} {position {TLM3Defines.bsv 36 53}}
Enum TLM3Defines::TLMStatus {members {SUCCESS ERROR EXOKAY UNKNOWN}} {width 2} {position {TLM3Defines.bsv 44 48}}
Enum TLM3Defines::TLMErrorCode {members {NONE SPLIT_CONTINUE RETRY SPLIT RW_ONLY UNMAPPED SLVERR DECERR}} {width 3} {position {TLM3Defines.bsv 54 17}}
Enum TLM3Defines::TLMLock {members {NORMAL EXCLUSIVE LOCKED RESERVED}} {width 2} {position {TLM3Defines.bsv 61 52}}
Alias TLM3Defines::TLMBurstLong UInt#(15) {position {TLM3Defines.bsv 64 19}}
Alias TLM3Defines::TLMQos Bit#(4) {position {TLM3Defines.bsv 65 18}}
Alias {TLM3Defines::TLMId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {TLM3Defines.bsv 67 42}}
Alias {TLM3Defines::TLMAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {TLM3Defines.bsv 68 42}}
Alias {TLM3Defines::TLMData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {TLM3Defines.bsv 69 42}}
Alias {TLM3Defines::TLMByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {TLM3Defines.bsv 70 42}}
Alias {TLM3Defines::TLMBLength#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} UInt#(length_size) {position {TLM3Defines.bsv 71 42}}
Alias {TLM3Defines::TLMUser#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(user_size) {position {TLM3Defines.bsv 72 42}}
Alias {TLM3Defines::TLMUserPort#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(user_size) {position {TLM3Defines.bsv 74 42}}
Enum TLM3Defines::TLMBSize {members {BITS8 BITS16 BITS32 BITS64 BITS128 BITS256 BITS512 BITS1024}} {width 3} {position {TLM3Defines.bsv 76 84}}
Enum TLM3Defines::TLMCache {members {NO_CACHE CACHE}} {width 1} {position {TLM3Defines.bsv 78 38}}
Enum TLM3Defines::TLMModify {members {NO_MODIFY MODIFY}} {width 1} {position {TLM3Defines.bsv 80 38}}
Enum TLM3Defines::TLMBuffer {members {NO_BUFFER BUFFER}} {width 1} {position {TLM3Defines.bsv 81 38}}
Enum TLM3Defines::TLMAllocate {members {NO_ALLOCATE ALLOCATE}} {width 1} {position {TLM3Defines.bsv 82 38}}
Enum TLM3Defines::TLMPrivilege {members {NORMAL PRIVILEGED}} {width 1} {position {TLM3Defines.bsv 84 35}}
Enum TLM3Defines::TLMSecurity {members {SECURE NON_SECURE}} {width 1} {position {TLM3Defines.bsv 85 35}}
Enum TLM3Defines::TLMAccess {members {DATA INST}} {width 1} {position {TLM3Defines.bsv 86 28}}
Enum TLM3Defines::TLMMark {members {LAST NOT_LAST OPEN}} {width 2} {position {TLM3Defines.bsv 87 38}}
Alias TLM3Defines::TLMRegion Bit#(4) {position {TLM3Defines.bsv 89 17}}
Struct {TLM3Defines::RequestDescriptor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMMode mode {width 2}} {Bit#(addr_size) addr} {Bit#(user_size) user_addr} {Bit#(4) region {width 4}} {Bit#(data_size) data} {UInt#(length_size) b_length} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {Bit#(4) prty {width 4}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(id_size) transaction_id} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMMark mark {width 2}} {Bool cntrl_flow {width 1}}}} {position {TLM3Defines.bsv 116 19}}
Struct {TLM3Defines::RequestData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 123 19}}
TaggedUnion {TLM3Defines::TLMRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {{TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size)} Data}}} {position {TLM3Defines.bsv 128 25}}
Struct {TLM3Defines::TLMResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {Bit#(data_size) data} {TLM3Defines::TLMStatus status {width 2}} {Bit#(user_size) user} {Bit#(4) prty {width 4}} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 138 19}}
Typeclass {TLM3Defines::TLMRequestTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMRequest} {{function a f(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMRequest}}} {instances {{TLM3Defines::TLMRequestTC#(AhbDefines::AhbXtorRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(BRAM::BRAMRequest#(Bit#(addr_size), Bit#(data_size)), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(BRAM::BRAMRequestBE#(Bit#(addr_size), Bit#(data_size), TDiv#(data_size, 8)), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 206 11}}
Typeclass {TLM3Defines::TLMResponseTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMResponse} {{function a f(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMResponse}}} {instances {{TLM3Defines::TLMResponseTC#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(Bit#(data_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 212 11}}
Interface {TLM3Defines::TLMSendIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(req) tx {}} {interface GetPut::Put#(resp) rx {}}}} {position {TLM3Defines.bsv 790 11}}
Interface {TLM3Defines::TLMRecvIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(resp) tx {}} {interface GetPut::Put#(req) rx {}}}} {position {TLM3Defines.bsv 795 11}}
Interface {TLM3Defines::TLMReadWriteSendIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 800 11}}
Interface {TLM3Defines::TLMReadWriteRecvIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMRecvIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 805 11}}
Interface {TLM3Defines::TLMTransformIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} in {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} out {}}}} {position {TLM3Defines.bsv 810 11}}
Typeclass {TLM3Defines::AddrMatch#(type addr_t, type ifc_t)} {members {{{function ifc_t f(function Bool x1(addr_t x1), ifc_t x2)} addAddrMatch}}} {position {TLM3Defines.bsv 844 11}}
TaggedUnion {TLM3Defines::TLMBEKind#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{void Calculate {width 0}} {{Bit#(TDiv#(data_size, 8))} Specify}}} {position {TLM3Defines.bsv 1045 25}}
Interface {TLM3Defines::SFIFO#(type a, type b)} polymorphic {members {{method {Action enq a {{(* ports = ["value"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {TLM3Defines.bsv 1087 11}}
Interface TLM3Defines::TCounter {members {{method {Action incr {} {{(* ports = [] *)}}}} {method {Action decr {} {{(* ports = [] *)}}}} {method {Bool isEq Integer {{(* ports = ["n"] *)}}}} {method {Action setNext {a Array#(Reg#(a))} {{(* ports = ["value", "as"] *)}}}} {method {Action set {a Array#(Reg#(a))} {{(* ports = ["value", "as"] *)}}}} {method {a getNext Array#(Reg#(a)) {{(* ports = ["as"] *)}}}} {method {a get Array#(Reg#(a)) {{(* ports = ["as"] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {TLM3Defines.bsv 1163 11}}
Struct {BusSwitch::BusSwitchPath#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) send_port} {Bit#(id_size) recv_port} {Bit#(id_size) send_id} {Bit#(id_size) recv_id}}} {position {BusSwitch.bsv 28 19}}
Interface {BusSwitch::BusSwitch#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action set_path {{BusSwitch::BusSwitchPath#(id_size, addr_size, data_size, length_size, user_size)}} {{(* ports = ["path"] *)}}}} {method {Bool done {} {{(* ports = [] *)}}}} {method {Action ack {} {{(* ports = [] *)}}}}}} {position {BusSwitch.bsv 38 11}}
Typeclass {TLM3BRAM::ToBRAMSeverBETC#(type a, type addr, type data, numeric type n)} {dependencies {{a determines (addr, data, n)}}} {members {{{function ClientServer::Server#(BRAM::BRAMRequestBE#(addr, data, n), data) f(a x1)} toBRAMServerBE}}} {instances {{TLM3BRAM::ToBRAMSeverBETC#(BRAM::BRAMServer#(addr, data), addr, data, n)} {TLM3BRAM::ToBRAMSeverBETC#(BRAM::BRAMServerBE#(addr, data, n), addr, data, n)}}} {position {TLM3BRAM.bsv 132 11}}
Alias {TLM3CBusAdapter::TLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CBus#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 20 38}}
Alias {TLM3CBusAdapter::ModWithTLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(caddr_size, data_size)), HList::HNil), i)} {position {TLM3CBusAdapter.bsv 21 48}}
Alias {TLM3CBusAdapter::TLMCRAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CRAddr#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 22 40}}
Typeclass {TLM3FlowControl::FlowPayload#(type a)} {members {{{function Bool f(a x1)} lastOne} {{function Bool f(a x1)} canStall}}} {instances {{TLM3FlowControl::FlowPayload#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size))} {TLM3FlowControl::FlowPayload#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size))}}} {position {TLM3FlowControl.bsv 17 11}}
Interface {TLM3FlowControl::TLMFlow#(type a)} polymorphic {members {{interface GetPut::Get#(a) tx {}} {interface GetPut::Put#(a) rx {}}}} {position {TLM3FlowControl.bsv 58 11}}
Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Alias {AhbDefines::LUInt#(numeric type m)} {UInt#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 29 35}}
Alias TLM3Api::TLMHeaderId Bit#(10) {position {TLM3Api.bsv 29 19}}
Struct TLM3Api::TLMRequestHeader {members {{UInt#(15) b_length {width 15}} {TLM3Api::TLMRequestParams params {width 36}}}} {width 51} {position {TLM3Api.bsv 33 19}}
Struct TLM3Api::TLMRequestParams {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(10) transaction_id {width 10}} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {Bit#(4) region {width 4}} {Bit#(4) qos {width 4}} {Bool cntrl_flow {width 1}} {Bool spec_byte_enable {width 1}}}} {width 36} {position {TLM3Api.bsv 57 19}}
Struct TLM3Api::TLMResponseHeader {members {{UInt#(15) b_length {width 15}} {TLM3Api::TLMResponseParams params {width 17}}}} {width 32} {position {TLM3Api.bsv 62 19}}
Struct TLM3Api::TLMResponseParams {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMStatus status {width 2}} {Bit#(10) transaction_id {width 10}} {TLM3Defines::TLMErrorCode error {width 3}}}} {width 17} {position {TLM3Api.bsv 68 19}}
Alias TLM3Api::Chunk Bit#(32) {position {TLM3Api.bsv 237 18}}
Interface {TLM3Api::ApiRecvIFC#(type req_t, type resp_t)} polymorphic {members {{interface {ClientServer::Server#(Bit#(32), Bit#(32))} scemi {}} {interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} out {}}}} {position {TLM3Api.bsv 248 11}}
Interface {TLM3Api::ApiSendIFC#(type req_t, type resp_t)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} in {}} {interface {ClientServer::Client#(Bit#(32), Bit#(32))} scemi {}}}} {position {TLM3Api.bsv 253 11}}
Enum TLM3Api::SendState {members {SHeader0 SHeader1 SAddrRead SAddrWrite SUserRead SUserWrite SData}} {width 3} {position {TLM3Api.bsv 262 88}}
Enum TLM3Api::RecvState {members {RHeader0 RHeader1 RAddr RUser RData}} {width 3} {position {TLM3Api.bsv 551 56}}
Interface {TLM3Api::CFIFO#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["count"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {TLM3Api.bsv 879 11}}
Enum TLM3Reduce::MD {members {Rd Wr RdOrWr}} {width 2} {position {TLM3Reduce.bsv 284 31}}
Alias TLM3Stream::DFLT 0 {position {TLM3Stream.bsv 20 11}}
Alias TLM3Stream::STRB 1 {position {TLM3Stream.bsv 21 11}}
Alias TLM3Stream::KEEP 2 {position {TLM3Stream.bsv 22 11}}
Alias TLM3Stream::KEEPSTRB 3 {position {TLM3Stream.bsv 23 11}}
Alias {TLM3Stream::TLMKeep#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TMul#(TMin#(1, TMax#(0, TSub#(TMax#(1, length_size), 1))), TDiv#(data_size, 8)))} {position {TLM3Stream.bsv 25 135}}
Alias {TLM3Stream::TLMStrb#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TMul#(TSub#(TMax#(length_size, TAdd#(TDiv#(length_size, 2), TDiv#(length_size, 2))), length_size), TDiv#(data_size, 8)))} {position {TLM3Stream.bsv 26 135}}
Struct {TLM3Stream::TLMTransfer#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(addr_size) dest} {Bit#(user_size) user} {Bit#(id_size) transaction_id} {{Bit#(TDiv#(data_size, 8))} keep} {{Bit#(TDiv#(data_size, 8))} strb} {Bool is_last {width 1}}}} {position {TLM3Stream.bsv 35 19}}
Typeclass {TLM3Stream::TLMTransferTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMTransfer} {{function a f(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMTransfer}}} {instances {{TLM3Stream::TLMTransferTC#(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Stream.bsv 59 11}}
Interface {TLM3Reorder::TLMReorder#(numeric type m, numeric type ln, type req_t, type resp_t)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} in {}} {interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} out {}}}} {position {TLM3Reorder.bsv 21 11}}
Alias {TLM3Reorder::TLMReorderBuffer#(numeric type lm, numeric type ld, type req_t, type resp_t)} {TLM3Reorder::TLMReorder#(TExp#(ld), TMax#(8, TAdd#(lm, ld)), req_t, resp_t)} {position {TLM3Reorder.bsv 27 9}}
Enum TLM3Defines::TLMFamily {members {DEFAULT APB AHB AXI AXI4}} {width 3} {position {TLM3Defines.bsv 29 45}}
Alias TLM3Defines::TLMRequestStd {TLM3Defines::TLMRequest#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 31 36}}
Alias TLM3Defines::TLMResponseStd {TLM3Defines::TLMResponse#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 32 36}}
Enum TLM3Defines::TLMCommand {members {READ WRITE UNKNOWN}} {width 2} {position {TLM3Defines.bsv 34 53}}
Enum TLM3Defines::TLMMode {members {REGULAR DEBUG CONTROL UNKNOWN}} {width 2} {position {TLM3Defines.bsv 35 53}}
Enum TLM3Defines::TLMBurstMode {members {INCR WRAP CNST UNKNOWN}} {width 2} {position {TLM3Defines.bsv 36 53}}
Enum TLM3Defines::TLMStatus {members {SUCCESS ERROR EXOKAY UNKNOWN}} {width 2} {position {TLM3Defines.bsv 44 48}}
Enum TLM3Defines::TLMErrorCode {members {NONE SPLIT_CONTINUE RETRY SPLIT RW_ONLY UNMAPPED SLVERR DECERR}} {width 3} {position {TLM3Defines.bsv 54 17}}
Enum TLM3Defines::TLMLock {members {NORMAL EXCLUSIVE LOCKED RESERVED}} {width 2} {position {TLM3Defines.bsv 61 52}}
Alias TLM3Defines::TLMBurstLong UInt#(15) {position {TLM3Defines.bsv 64 19}}
Alias TLM3Defines::TLMQos Bit#(4) {position {TLM3Defines.bsv 65 18}}
Alias {TLM3Defines::TLMId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {TLM3Defines.bsv 67 42}}
Alias {TLM3Defines::TLMAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {TLM3Defines.bsv 68 42}}
Alias {TLM3Defines::TLMData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {TLM3Defines.bsv 69 42}}
Alias {TLM3Defines::TLMByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {TLM3Defines.bsv 70 42}}
Alias {TLM3Defines::TLMBLength#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} UInt#(length_size) {position {TLM3Defines.bsv 71 42}}
Alias {TLM3Defines::TLMUser#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(user_size) {position {TLM3Defines.bsv 72 42}}
Alias {TLM3Defines::TLMUserPort#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(user_size) {position {TLM3Defines.bsv 74 42}}
Enum TLM3Defines::TLMBSize {members {BITS8 BITS16 BITS32 BITS64 BITS128 BITS256 BITS512 BITS1024}} {width 3} {position {TLM3Defines.bsv 76 84}}
Enum TLM3Defines::TLMCache {members {NO_CACHE CACHE}} {width 1} {position {TLM3Defines.bsv 78 38}}
Enum TLM3Defines::TLMModify {members {NO_MODIFY MODIFY}} {width 1} {position {TLM3Defines.bsv 80 38}}
Enum TLM3Defines::TLMBuffer {members {NO_BUFFER BUFFER}} {width 1} {position {TLM3Defines.bsv 81 38}}
Enum TLM3Defines::TLMAllocate {members {NO_ALLOCATE ALLOCATE}} {width 1} {position {TLM3Defines.bsv 82 38}}
Enum TLM3Defines::TLMPrivilege {members {NORMAL PRIVILEGED}} {width 1} {position {TLM3Defines.bsv 84 35}}
Enum TLM3Defines::TLMSecurity {members {SECURE NON_SECURE}} {width 1} {position {TLM3Defines.bsv 85 35}}
Enum TLM3Defines::TLMAccess {members {DATA INST}} {width 1} {position {TLM3Defines.bsv 86 28}}
Enum TLM3Defines::TLMMark {members {LAST NOT_LAST OPEN}} {width 2} {position {TLM3Defines.bsv 87 38}}
Alias TLM3Defines::TLMRegion Bit#(4) {position {TLM3Defines.bsv 89 17}}
Struct {TLM3Defines::RequestDescriptor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMMode mode {width 2}} {Bit#(addr_size) addr} {Bit#(user_size) user_addr} {Bit#(4) region {width 4}} {Bit#(data_size) data} {UInt#(length_size) b_length} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {Bit#(4) prty {width 4}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(id_size) transaction_id} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMMark mark {width 2}} {Bool cntrl_flow {width 1}}}} {position {TLM3Defines.bsv 116 19}}
Struct {TLM3Defines::RequestData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 123 19}}
TaggedUnion {TLM3Defines::TLMRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {{TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size)} Data}}} {position {TLM3Defines.bsv 128 25}}
Struct {TLM3Defines::TLMResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {Bit#(data_size) data} {TLM3Defines::TLMStatus status {width 2}} {Bit#(user_size) user} {Bit#(4) prty {width 4}} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 138 19}}
Typeclass {TLM3Defines::TLMRequestTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMRequest} {{function a f(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMRequest}}} {instances {{TLM3Defines::TLMRequestTC#(AhbDefines::AhbXtorRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(BRAM::BRAMRequest#(Bit#(addr_size), Bit#(data_size)), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(BRAM::BRAMRequestBE#(Bit#(addr_size), Bit#(data_size), TDiv#(data_size, 8)), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 206 11}}
Typeclass {TLM3Defines::TLMResponseTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMResponse} {{function a f(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMResponse}}} {instances {{TLM3Defines::TLMResponseTC#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(Bit#(data_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 212 11}}
Interface {TLM3Defines::TLMSendIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(req) tx {}} {interface GetPut::Put#(resp) rx {}}}} {position {TLM3Defines.bsv 790 11}}
Interface {TLM3Defines::TLMRecvIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(resp) tx {}} {interface GetPut::Put#(req) rx {}}}} {position {TLM3Defines.bsv 795 11}}
Interface {TLM3Defines::TLMReadWriteSendIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 800 11}}
Interface {TLM3Defines::TLMReadWriteRecvIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMRecvIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 805 11}}
Interface {TLM3Defines::TLMTransformIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} in {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} out {}}}} {position {TLM3Defines.bsv 810 11}}
Typeclass {TLM3Defines::AddrMatch#(type addr_t, type ifc_t)} {members {{{function ifc_t f(function Bool x1(addr_t x1), ifc_t x2)} addAddrMatch}}} {position {TLM3Defines.bsv 844 11}}
TaggedUnion {TLM3Defines::TLMBEKind#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{void Calculate {width 0}} {{Bit#(TDiv#(data_size, 8))} Specify}}} {position {TLM3Defines.bsv 1045 25}}
Interface {TLM3Defines::SFIFO#(type a, type b)} polymorphic {members {{method {Action enq a {{(* ports = ["value"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {TLM3Defines.bsv 1087 11}}
Interface TLM3Defines::TCounter {members {{method {Action incr {} {{(* ports = [] *)}}}} {method {Action decr {} {{(* ports = [] *)}}}} {method {Bool isEq Integer {{(* ports = ["n"] *)}}}} {method {Action setNext {a Array#(Reg#(a))} {{(* ports = ["value", "as"] *)}}}} {method {Action set {a Array#(Reg#(a))} {{(* ports = ["value", "as"] *)}}}} {method {a getNext Array#(Reg#(a)) {{(* ports = ["as"] *)}}}} {method {a get Array#(Reg#(a)) {{(* ports = ["as"] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {TLM3Defines.bsv 1163 11}}
Typeclass {TLM3FlowControl::FlowPayload#(type a)} {members {{{function Bool f(a x1)} lastOne} {{function Bool f(a x1)} canStall}}} {instances {{TLM3FlowControl::FlowPayload#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size))} {TLM3FlowControl::FlowPayload#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size))}}} {position {TLM3FlowControl.bsv 17 11}}
Interface {TLM3FlowControl::TLMFlow#(type a)} polymorphic {members {{interface GetPut::Get#(a) tx {}} {interface GetPut::Put#(a) rx {}}}} {position {TLM3FlowControl.bsv 58 11}}
Enum TLM3Reduce::MD {members {Rd Wr RdOrWr}} {width 2} {position {TLM3Reduce.bsv 284 31}}

Interface {TokenBuffer::TokenBuffer#(numeric type m, numeric type ln, type a)} polymorphic {members {{method {Action store {{CB::TokenRange#(a, ln)}} {{(* ports = ["value"] *)}}}} {method {Action request {{CB::TokenRR#(a, ln)}} {{(* ports = ["value"] *)}}}} {method {ActionValue#(Bit#(ln)) get {} {{(* ports = [] *)}}}}}} {position {TokenBuffer.bsv 18 11}}

Typeclass {AxiExtend::Extendable#(type ifc_t, type ifc_ext_t)} {members {{{function a#(ifc_ext_t) f(UInt#(32) x1, ifc_t x2)   provisos (IsModule#(a, b))} extendIds}}} {instances {{AxiExtend::Extendable#(AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdFabricMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdFabricSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrFabricMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrFabricSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))}}} {position {AxiExtend.bsv 18 11}}
Interface {AhbToAhbBridge::AhbToAhbBridge#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} slave {}} {interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} master {}}}} {position {AhbToAhbBridge.bsv 29 11}}

Interface {AhbSlave::AhbSlaveIFC#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {}} {interface {GetPut::Put#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} response {}} {interface {GetPut::Put#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} response_noready {}} {interface {ReadOnly#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size))} request {}} {interface ReadOnly#(Bit#(4)) hmaster {}} {interface ReadOnly#(Bool) readyin {}}}} {position {AhbSlave.bsv 30 11}}
Interface {AhbSlave::MFIFO#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["value"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bit#(0) first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {AhbSlave.bsv 550 11}}
Interface {AhbSlave::MFIFO2#(type a, type b)} polymorphic {members {{method {Action enq {a b} {{(* ports = ["v_a", "v_b"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {b first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {AhbSlave.bsv 639 11}}
Interface {AhbPC::AhbPC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action haddr Bit#(addr_size) {{(* ports = ["HADDR"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hwdata Bit#(data_size) {{(* ports = ["HWDATA"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hwrite AhbDefines::AhbWrite {{(* ports = ["HWRITE"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action htrans AhbDefines::AhbTransfer {{(* ports = ["HTRANS"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action hburst AhbDefines::AhbBurst {{(* ports = ["HBURST"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Action hsize TLM3Defines::TLMBSize {{(* ports = ["HSIZE"] *)} {(* result = "unused5" *)} {(* prefix = "" *)}}}} {method {Action hprot AhbDefines::AhbProt {{(* ports = ["HPROT"] *)} {(* result = "unused6" *)} {(* prefix = "" *)}}}} {method {Action hrdata Bit#(data_size) {{(* ports = ["HRDATA"] *)} {(* result = "unused7" *)} {(* prefix = "" *)}}}} {method {Action hready Bool {{(* ports = ["HREADY"] *)} {(* result = "unused8" *)} {(* prefix = "" *)}}}} {method {Action hreadyOUT Bool {{(* ports = ["HREADYOUT"] *)} {(* result = "unused9" *)} {(* prefix = "" *)}}}} {method {Action hresp AhbDefines::AhbResp {{(* ports = ["HRESP"] *)} {(* result = "unused10" *)} {(* prefix = "" *)}}}} {method {Action hCLKEN Bool {{(* ports = ["HCLKEN"] *)} {(* result = "unused11" *)} {(* prefix = "" *)}}}} {method {Action hgrantx Bool {{(* ports = ["HGRANTx"] *)} {(* result = "unused12" *)} {(* prefix = "" *)}}}} {method {Action hSELx Bool {{(* ports = ["HSELx"] *)} {(* result = "unused13" *)} {(* prefix = "" *)}}}} {method {Action hlockx Bool {{(* ports = ["HLOCKx"] *)} {(* result = "unused14" *)} {(* prefix = "" *)}}}} {method {Action hMASTLOCK Bool {{(* ports = ["HMASTLOCK"] *)} {(* result = "unused15" *)} {(* prefix = "" *)}}}}}} {position {AhbPC.bsv 212 11}}
Enum AhbPC::FVPropType {members {PROVE ASSUME COVER IGNORE}} {width 2} {position {AhbPC.bsv 258 45}}
Struct AhbPC::AhbPCPrms {members {{Bool enable_master {width 1}} {Bool enable_slave {width 1}} {Bool ignore_align {width 1}} {AhbPC::AhbPropTypes master {width 14}} {AhbPC::AhbPropTypes slave {width 14}}}} {position {AhbPC.bsv 265 19}}
Struct AhbPC::AhbPropTypes {members {{AhbPC::FVPropType err {width 2}} {AhbPC::FVPropType rec {width 2}} {AhbPC::FVPropType add {width 2}} {AhbPC::FVPropType cfg {width 2}} {AhbPC::FVPropType inf {width 2}} {AhbPC::FVPropType alt {width 2}} {AhbPC::FVPropType aux {width 2}}}} {width 14} {position {AhbPC.bsv 274 19}}
Interface Arbiter::ArbiterClient_IFC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Action lock {} {{(* ports = [] *)}}}} {method {Bool grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 11 11 {Library Arbiter}}}
Interface Arbiter::ArbiterRequest_IFC {members {{method {Bool request {} {{(* ports = [] *)}}}} {method {Bool lock {} {{(* ports = [] *)}}}} {method {Action grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 17 11 {Library Arbiter}}}
Interface {Arbiter::Arbiter_IFC#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {Bit#(TLog#(count)) grant_id {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 23 11 {Library Arbiter}}}
Typeclass {Arbiter::Arbitable#(type a)} {members {{{function b#(Arbiter::ArbiterRequest_IFC) f(a x1)   provisos (IsModule#(b, c))} mkArbiterRequest}}} {instances {Arbiter::Arbitable#(AhbDefines::AhbMasterArbiter) {Arbiter::Arbitable#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size))} Arbiter::Arbitable#(BusDefines::BusSend#(a))}} {position {%/Libraries/Arbiter.bsv 340 11 {Library Arbiter}}}
Interface AhbArbiterSupport::AhbMonitor {members {{method {Bool update {} {{(* ports = [] *)}}}} {method {Action hready_in Bool {{(* ports = ["value"] *)}}}} {method {Action hresp_in AhbDefines::AhbResp {{(* ports = ["value"] *)}}}}}} {position {AhbArbiterSupport.bsv 165 11}}
Interface Arbiter::ArbiterClient_IFC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Action lock {} {{(* ports = [] *)}}}} {method {Bool grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 11 11 {Library Arbiter}}}
Interface Arbiter::ArbiterRequest_IFC {members {{method {Bool request {} {{(* ports = [] *)}}}} {method {Bool lock {} {{(* ports = [] *)}}}} {method {Action grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 17 11 {Library Arbiter}}}
Interface {Arbiter::Arbiter_IFC#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {Bit#(TLog#(count)) grant_id {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 23 11 {Library Arbiter}}}
Typeclass {Arbiter::Arbitable#(type a)} {members {{{function b#(Arbiter::ArbiterRequest_IFC) f(a x1)   provisos (IsModule#(b, c))} mkArbiterRequest}}} {instances {Arbiter::Arbitable#(AhbDefines::AhbMasterArbiter) {Arbiter::Arbitable#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size))} Arbiter::Arbitable#(BusDefines::BusSend#(a))}} {position {%/Libraries/Arbiter.bsv 340 11 {Library Arbiter}}}
Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Alias {AhbDefines::LUInt#(numeric type m)} {UInt#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 29 35}}
Alias {AhbDefines::AhbAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {AhbDefines.bsv 31 42}}
Alias {AhbDefines::AhbData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {AhbDefines.bsv 32 42}}
Alias {AhbDefines::AhbLength#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} UInt#(length_size) {position {AhbDefines.bsv 33 42}}
Enum AhbDefines::AhbWrite {members {READ WRITE}} {width 1} {position {AhbDefines.bsv 35 30}}
Enum AhbDefines::AhbResp {members {OKAY ERROR RETRY SPLIT}} {width 2} {position {AhbDefines.bsv 36 44}}
Enum AhbDefines::AhbTransfer {members {IDLE BUSY NONSEQ SEQ}} {width 2} {position {AhbDefines.bsv 37 42}}
Alias AhbDefines::AhbSize TLM3Defines::TLMBSize {position {AhbDefines.bsv 39 18}}
Enum AhbDefines::AhbBurst {members {SINGLE INCR WRAP4 INCR4 WRAP8 INCR8 WRAP16 INCR16}} {width 3} {position {AhbDefines.bsv 40 75}}
Struct AhbDefines::AhbProt {members {{TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMAccess access {width 1}}}} {width 4} {position {AhbDefines.bsv 48 19}}
Alias AhbDefines::AhbSplit Bit#(4) {position {AhbDefines.bsv 50 19}}
Alias AhbDefines::AhbSplitOneHot OInt::OInt#(16) {position {AhbDefines.bsv 51 19}}
Struct {AhbDefines::AhbCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbWrite command {width 1}} {TLM3Defines::TLMBSize size {width 3}} {AhbDefines::AhbBurst burst {width 3}} {AhbDefines::AhbTransfer transfer {width 2}} {AhbDefines::AhbProt prot {width 4}} {Bit#(addr_size) addr}}} {position {AhbDefines.bsv 60 19}}
Struct {AhbDefines::AhbRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)} ctrl} {Bit#(data_size) data}}} {position {AhbDefines.bsv 65 19}}
Struct {AhbDefines::AhbResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbResp status {width 2}} {Bit#(data_size) data} {Maybe#(AhbDefines::AhbWrite) command {width 2}}}} {position {AhbDefines.bsv 71 19}}
Struct {AhbDefines::AhbMastCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbWrite command {width 1}} {TLM3Defines::TLMBSize size {width 3}} {AhbDefines::AhbBurst burst {width 3}} {AhbDefines::AhbTransfer transfer {width 2}} {AhbDefines::AhbProt prot {width 4}} {Bit#(addr_size) addr} {Bit#(4) mast {width 4}}}} {position {AhbDefines.bsv 82 19}}
Interface {AhbDefines::AhbMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) haddr {} {{(* ports = [] *)} {(* result = "HADDR" *)}}}} {method {Bit#(data_size) hwdata {} {{(* ports = [] *)} {(* result = "HWDATA" *)}}}} {method {AhbDefines::AhbWrite hwrite {} {{(* ports = [] *)} {(* result = "HWRITE" *)}}}} {method {AhbDefines::AhbTransfer htrans {} {{(* ports = [] *)} {(* result = "HTRANS" *)}}}} {method {AhbDefines::AhbBurst hburst {} {{(* ports = [] *)} {(* result = "HBURST" *)}}}} {method {TLM3Defines::TLMBSize hsize {} {{(* ports = [] *)} {(* result = "HSIZE" *)}}}} {method {AhbDefines::AhbProt hprot {} {{(* ports = [] *)} {(* result = "HPROT" *)}}}} {method {Action hrdata Bit#(data_size) {{(* ports = ["HRDATA"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hready Bool {{(* ports = ["HREADY"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hresp AhbDefines::AhbResp {{(* ports = ["HRESP"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 112 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action haddr Bit#(addr_size) {{(* ports = ["HADDR"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hwdata Bit#(data_size) {{(* ports = ["HWDATA"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hwrite AhbDefines::AhbWrite {{(* ports = ["HWRITE"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action htrans AhbDefines::AhbTransfer {{(* ports = ["HTRANS"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action hburst AhbDefines::AhbBurst {{(* ports = ["HBURST"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Action hsize TLM3Defines::TLMBSize {{(* ports = ["HSIZE"] *)} {(* result = "unused5" *)} {(* prefix = "" *)}}}} {method {Action hprot AhbDefines::AhbProt {{(* ports = ["HPROT"] *)} {(* result = "unused6" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) hrdata {} {{(* ports = [] *)} {(* result = "HRDATA" *)}}}} {method {Bool hready {} {{(* ports = [] *)} {(* result = "HREADY" *)}}}} {method {AhbDefines::AhbResp hresp {} {{(* ports = [] *)} {(* result = "HRESP" *)}}}}}} {position {AhbDefines.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action haddr Bit#(addr_size) {{(* ports = ["HADDR"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hwdata Bit#(data_size) {{(* ports = ["HWDATA"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hwrite AhbDefines::AhbWrite {{(* ports = ["HWRITE"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action htrans AhbDefines::AhbTransfer {{(* ports = ["HTRANS"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action hburst AhbDefines::AhbBurst {{(* ports = ["HBURST"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Action hsize TLM3Defines::TLMBSize {{(* ports = ["HSIZE"] *)} {(* result = "unused5" *)} {(* prefix = "" *)}}}} {method {Action hprot AhbDefines::AhbProt {{(* ports = ["HPROT"] *)} {(* result = "unused6" *)} {(* prefix = "" *)}}}} {method {Action hreadyin Bool {{(* ports = ["HREADY"] *)} {(* result = "unused7" *)} {(* prefix = "" *)}}}} {method {Action hmast Bit#(4) {{(* ports = ["HMASTER"] *)} {(* result = "unused8" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) hrdata {} {{(* ports = [] *)} {(* result = "HRDATA" *)}}}} {method {Bool hready {} {{(* ports = [] *)} {(* result = "HREADYOUT" *)}}}} {method {AhbDefines::AhbResp hresp {} {{(* ports = [] *)} {(* result = "HRESP" *)}}}} {method {Bit#(4) hsplit {} {{(* ports = [] *)} {(* result = "HSPLIT" *)}}}}}} {position {AhbDefines.bsv 171 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) haddr {} {{(* ports = [] *)} {(* result = "HADDR" *)}}}} {method {Bit#(data_size) hwdata {} {{(* ports = [] *)} {(* result = "HWDATA" *)}}}} {method {AhbDefines::AhbWrite hwrite {} {{(* ports = [] *)} {(* result = "HWRITE" *)}}}} {method {AhbDefines::AhbTransfer htrans {} {{(* ports = [] *)} {(* result = "HTRANS" *)}}}} {method {AhbDefines::AhbBurst hburst {} {{(* ports = [] *)} {(* result = "HBURST" *)}}}} {method {TLM3Defines::TLMBSize hsize {} {{(* ports = [] *)} {(* result = "HSIZE" *)}}}} {method {AhbDefines::AhbProt hprot {} {{(* ports = [] *)} {(* result = "HPROT" *)}}}} {method {Bool hreadyin {} {{(* ports = [] *)} {(* result = "HREADY" *)}}}} {method {Bit#(4) hmast {} {{(* ports = [] *)} {(* result = "HMAST" *)}}}} {method {Action hrdata Bit#(data_size) {{(* ports = ["HRDATA"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hready Bool {{(* ports = ["HREADYOUT"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hresp AhbDefines::AhbResp {{(* ports = ["HRESP"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action hsplit Bit#(4) {{(* ports = ["HSPLIT"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 206 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbSlaveSelector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action select Bool {{(* ports = ["HSEL"] *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 244 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface AhbDefines::AhbSlaveSelectorDual {members {{method {Bool select {} {{(* ports = [] *)} {(* result = "HSEL" *)}}}}}} {position {AhbDefines.bsv 250 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface AhbDefines::AhbMasterArbiter {members {{method {Bool hbusreq {} {{(* ports = [] *)} {(* result = "HBUSREQ" *)}}}} {method {Bool hlock {} {{(* ports = [] *)} {(* result = "HLOCK" *)}}}} {method {Action hgrant Bool {{(* ports = ["HGRANT"] *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 256 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface AhbDefines::AhbMasterArbiterDual {members {{method {Action hbusreq Bool {{(* ports = ["HBUSREQ"] *)} {(* result = "unused7" *)} {(* prefix = "" *)}}}} {method {Action hlock Bool {{(* ports = ["HLOCK"] *)} {(* result = "unused8" *)} {(* prefix = "" *)}}}} {method {Bool hgrant {} {{(* ports = [] *)} {(* result = "HGRANT" *)}}}}}} {position {AhbDefines.bsv 266 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbXtorMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface AhbDefines::AhbMasterArbiter arbiter {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 279 11}}
Interface {AhbDefines::AhbXtorSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface {AhbDefines::AhbSlaveSelector#(id_size, addr_size, data_size, length_size, user_size)} selector {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 286 11}}
Interface {AhbDefines::AhbXtorSlaveWM#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface {AhbDefines::AhbSlaveSelector#(id_size, addr_size, data_size, length_size, user_size)} selector {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {AhbDefines.bsv 320 11}}
Interface {AhbDefines::AhbXtorMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbMasterDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface AhbDefines::AhbMasterArbiterDual arbiter {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 332 11}}
Interface {AhbDefines::AhbXtorSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface AhbDefines::AhbSlaveSelectorDual selector {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 339 11}}
Interface {AhbDefines::AhbXtorMasterConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} master {}} {interface {AhbDefines::AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {AhbDefines.bsv 373 11}}
Interface {AhbDefines::AhbXtorSlaveConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} slave {}} {interface {AhbDefines::AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {AhbDefines.bsv 378 11}}
Interface {AhbDefines::AhbBus#(numeric type m, numeric type s, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {{Vector::Vector#(m, AhbDefines::AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size))} masters {} {}}} {method {{Vector::Vector#(s, AhbDefines::AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))} slaves {} {}}}}} {position {AhbDefines.bsv 383 11}}
Interface {AhbDefines::AhbMasterXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 392 11}}
Interface {AhbDefines::AhbSlaveXActorWM#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 398 11}}
Interface {AhbDefines::AhbSlaveXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 404 11}}
Interface {AhbDefines::AhbArbiter#(numeric type count, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {{Maybe#(Bit#(TLog#(TAdd#(count, 1))))} hmaster {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {interface AhbDefines::AhbResponseHandler handler {}}}} {position {AhbDefines.bsv 851 11}}
Interface AhbDefines::AhbResponseHandler {members {{method {Action hready_in Bool {{(* ports = ["value"] *)}}}} {method {Action hresp_in AhbDefines::AhbResp {{(* ports = ["value"] *)}}}} {method {Bool hready {} {{(* ports = [] *)}}}} {method {AhbDefines::AhbResp hresp {} {{(* ports = [] *)}}}}}} {position {AhbDefines.bsv 858 11}}
Interface {AhbDefines::AhbSlaveMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {AhbDefines::AhbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {AhbDefines.bsv 899 11}}
Interface {AhbDefines::AhbMasterMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {AhbDefines::AhbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {AhbDefines.bsv 904 11}}
Interface {AhbDefines::AhbInfo#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bool update {} {{(* ports = [] *)}}}}}} {position {AhbDefines.bsv 910 11}} {attributes {{(* always_ready  *)}}}
Typeclass {ApbDefines::Convert#(type a, type b)} {members {{{function b f(a x1)} convert}}} {instances {{ApbDefines::Convert#(ApbDefines::ApbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size))} {ApbDefines::Convert#(ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {position {ApbDefines.bsv 546 11}}
Struct {AhbDefines::AhbTbCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbWrite command {width 1}} {TLM3Defines::TLMBSize size {width 3}} {AhbDefines::AhbBurst burst {width 3}} {AhbDefines::AhbTransfer transfer {width 2}} {UInt#(length_size) length} {AhbDefines::AhbProt prot {width 4}} {Bit#(addr_size) addr}}} {position {AhbDefines.bsv 978 19}}
Struct {AhbDefines::AhbTbRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size)} ctrl} {Bit#(data_size) data}}} {position {AhbDefines.bsv 1003 19}}
TaggedUnion {AhbDefines::AhbXtorRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{AhbDefines::AhbTbRequest#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {Bit#(data_size) Data}}} {position {AhbDefines.bsv 1014 25}}
Alias {AhbDefines::AhbXtorResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size)} {position {AhbDefines.bsv 1030 32}}
Interface AhbArbiterSupport::AhbMonitor {members {{method {Bool update {} {{(* ports = [] *)}}}} {method {Action hready_in Bool {{(* ports = ["value"] *)}}}} {method {Action hresp_in AhbDefines::AhbResp {{(* ports = ["value"] *)}}}}}} {position {AhbArbiterSupport.bsv 165 11}}
Interface {AhbMaster::GetPut#(type p, type g)} polymorphic {members {{method {ActionValue#(g) getput p {{(* ports = ["value"] *)}}}}}} {position {AhbMaster.bsv 31 11}}
Interface {AhbMaster::AhbMasterIFC#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {}} {interface ReadOnly#(AhbDefines::AhbResp) resp_current {}} {interface {AhbMaster::GetPut#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size), AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} obj {}}}} {position {AhbMaster.bsv 35 11}}
Enum AhbMaster::EBTMode {members {RUN REDO_EBT REDO_RETRY WIND_DOWN}} {width 2} {position {AhbMaster.bsv 42 53}}
Interface {AhbPC::AhbPC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action haddr Bit#(addr_size) {{(* ports = ["HADDR"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hwdata Bit#(data_size) {{(* ports = ["HWDATA"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hwrite AhbDefines::AhbWrite {{(* ports = ["HWRITE"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action htrans AhbDefines::AhbTransfer {{(* ports = ["HTRANS"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action hburst AhbDefines::AhbBurst {{(* ports = ["HBURST"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Action hsize TLM3Defines::TLMBSize {{(* ports = ["HSIZE"] *)} {(* result = "unused5" *)} {(* prefix = "" *)}}}} {method {Action hprot AhbDefines::AhbProt {{(* ports = ["HPROT"] *)} {(* result = "unused6" *)} {(* prefix = "" *)}}}} {method {Action hrdata Bit#(data_size) {{(* ports = ["HRDATA"] *)} {(* result = "unused7" *)} {(* prefix = "" *)}}}} {method {Action hready Bool {{(* ports = ["HREADY"] *)} {(* result = "unused8" *)} {(* prefix = "" *)}}}} {method {Action hreadyOUT Bool {{(* ports = ["HREADYOUT"] *)} {(* result = "unused9" *)} {(* prefix = "" *)}}}} {method {Action hresp AhbDefines::AhbResp {{(* ports = ["HRESP"] *)} {(* result = "unused10" *)} {(* prefix = "" *)}}}} {method {Action hCLKEN Bool {{(* ports = ["HCLKEN"] *)} {(* result = "unused11" *)} {(* prefix = "" *)}}}} {method {Action hgrantx Bool {{(* ports = ["HGRANTx"] *)} {(* result = "unused12" *)} {(* prefix = "" *)}}}} {method {Action hSELx Bool {{(* ports = ["HSELx"] *)} {(* result = "unused13" *)} {(* prefix = "" *)}}}} {method {Action hlockx Bool {{(* ports = ["HLOCKx"] *)} {(* result = "unused14" *)} {(* prefix = "" *)}}}} {method {Action hMASTLOCK Bool {{(* ports = ["HMASTLOCK"] *)} {(* result = "unused15" *)} {(* prefix = "" *)}}}}}} {position {AhbPC.bsv 212 11}}
Enum AhbPC::FVPropType {members {PROVE ASSUME COVER IGNORE}} {width 2} {position {AhbPC.bsv 258 45}}
Struct AhbPC::AhbPCPrms {members {{Bool enable_master {width 1}} {Bool enable_slave {width 1}} {Bool ignore_align {width 1}} {AhbPC::AhbPropTypes master {width 14}} {AhbPC::AhbPropTypes slave {width 14}}}} {position {AhbPC.bsv 265 19}}
Struct AhbPC::AhbPropTypes {members {{AhbPC::FVPropType err {width 2}} {AhbPC::FVPropType rec {width 2}} {AhbPC::FVPropType add {width 2}} {AhbPC::FVPropType cfg {width 2}} {AhbPC::FVPropType inf {width 2}} {AhbPC::FVPropType alt {width 2}} {AhbPC::FVPropType aux {width 2}}}} {width 14} {position {AhbPC.bsv 274 19}}
Interface {AhbSlave::AhbSlaveIFC#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {}} {interface {GetPut::Put#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} response {}} {interface {GetPut::Put#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} response_noready {}} {interface {ReadOnly#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size))} request {}} {interface ReadOnly#(Bit#(4)) hmaster {}} {interface ReadOnly#(Bool) readyin {}}}} {position {AhbSlave.bsv 30 11}}
Interface {AhbSlave::MFIFO#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["value"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bit#(0) first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {AhbSlave.bsv 550 11}}
Interface {AhbSlave::MFIFO2#(type a, type b)} polymorphic {members {{method {Action enq {a b} {{(* ports = ["v_a", "v_b"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {b first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {AhbSlave.bsv 639 11}}
Interface {AhbToAhbBridge::AhbToAhbBridge#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} slave {}} {interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} master {}}}} {position {AhbToAhbBridge.bsv 29 11}}
Interface {AhbMaster::GetPut#(type p, type g)} polymorphic {members {{method {ActionValue#(g) getput p {{(* ports = ["value"] *)}}}}}} {position {AhbMaster.bsv 31 11}}
Interface {AhbMaster::AhbMasterIFC#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {}} {interface ReadOnly#(AhbDefines::AhbResp) resp_current {}} {interface {AhbMaster::GetPut#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size), AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} obj {}}}} {position {AhbMaster.bsv 35 11}}
Enum AhbMaster::EBTMode {members {RUN REDO_EBT REDO_RETRY WIND_DOWN}} {width 2} {position {AhbMaster.bsv 42 53}}
Interface AhbArbiterSupport::AhbMonitor {members {{method {Bool update {} {{(* ports = [] *)}}}} {method {Action hready_in Bool {{(* ports = ["value"] *)}}}} {method {Action hresp_in AhbDefines::AhbResp {{(* ports = ["value"] *)}}}}}} {position {AhbArbiterSupport.bsv 165 11}}
Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Alias {AhbDefines::LUInt#(numeric type m)} {UInt#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 29 35}}
Alias {AhbDefines::AhbAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {AhbDefines.bsv 31 42}}
Alias {AhbDefines::AhbData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {AhbDefines.bsv 32 42}}
Alias {AhbDefines::AhbLength#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} UInt#(length_size) {position {AhbDefines.bsv 33 42}}
Enum AhbDefines::AhbWrite {members {READ WRITE}} {width 1} {position {AhbDefines.bsv 35 30}}
Enum AhbDefines::AhbResp {members {OKAY ERROR RETRY SPLIT}} {width 2} {position {AhbDefines.bsv 36 44}}
Enum AhbDefines::AhbTransfer {members {IDLE BUSY NONSEQ SEQ}} {width 2} {position {AhbDefines.bsv 37 42}}
Alias AhbDefines::AhbSize TLM3Defines::TLMBSize {position {AhbDefines.bsv 39 18}}
Enum AhbDefines::AhbBurst {members {SINGLE INCR WRAP4 INCR4 WRAP8 INCR8 WRAP16 INCR16}} {width 3} {position {AhbDefines.bsv 40 75}}
Struct AhbDefines::AhbProt {members {{TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMAccess access {width 1}}}} {width 4} {position {AhbDefines.bsv 48 19}}
Alias AhbDefines::AhbSplit Bit#(4) {position {AhbDefines.bsv 50 19}}
Alias AhbDefines::AhbSplitOneHot OInt::OInt#(16) {position {AhbDefines.bsv 51 19}}
Struct {AhbDefines::AhbCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbWrite command {width 1}} {TLM3Defines::TLMBSize size {width 3}} {AhbDefines::AhbBurst burst {width 3}} {AhbDefines::AhbTransfer transfer {width 2}} {AhbDefines::AhbProt prot {width 4}} {Bit#(addr_size) addr}}} {position {AhbDefines.bsv 60 19}}
Struct {AhbDefines::AhbRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)} ctrl} {Bit#(data_size) data}}} {position {AhbDefines.bsv 65 19}}
Struct {AhbDefines::AhbResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbResp status {width 2}} {Bit#(data_size) data} {Maybe#(AhbDefines::AhbWrite) command {width 2}}}} {position {AhbDefines.bsv 71 19}}
Struct {AhbDefines::AhbMastCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbWrite command {width 1}} {TLM3Defines::TLMBSize size {width 3}} {AhbDefines::AhbBurst burst {width 3}} {AhbDefines::AhbTransfer transfer {width 2}} {AhbDefines::AhbProt prot {width 4}} {Bit#(addr_size) addr} {Bit#(4) mast {width 4}}}} {position {AhbDefines.bsv 82 19}}
Interface {AhbDefines::AhbMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) haddr {} {{(* ports = [] *)} {(* result = "HADDR" *)}}}} {method {Bit#(data_size) hwdata {} {{(* ports = [] *)} {(* result = "HWDATA" *)}}}} {method {AhbDefines::AhbWrite hwrite {} {{(* ports = [] *)} {(* result = "HWRITE" *)}}}} {method {AhbDefines::AhbTransfer htrans {} {{(* ports = [] *)} {(* result = "HTRANS" *)}}}} {method {AhbDefines::AhbBurst hburst {} {{(* ports = [] *)} {(* result = "HBURST" *)}}}} {method {TLM3Defines::TLMBSize hsize {} {{(* ports = [] *)} {(* result = "HSIZE" *)}}}} {method {AhbDefines::AhbProt hprot {} {{(* ports = [] *)} {(* result = "HPROT" *)}}}} {method {Action hrdata Bit#(data_size) {{(* ports = ["HRDATA"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hready Bool {{(* ports = ["HREADY"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hresp AhbDefines::AhbResp {{(* ports = ["HRESP"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 112 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action haddr Bit#(addr_size) {{(* ports = ["HADDR"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hwdata Bit#(data_size) {{(* ports = ["HWDATA"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hwrite AhbDefines::AhbWrite {{(* ports = ["HWRITE"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action htrans AhbDefines::AhbTransfer {{(* ports = ["HTRANS"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action hburst AhbDefines::AhbBurst {{(* ports = ["HBURST"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Action hsize TLM3Defines::TLMBSize {{(* ports = ["HSIZE"] *)} {(* result = "unused5" *)} {(* prefix = "" *)}}}} {method {Action hprot AhbDefines::AhbProt {{(* ports = ["HPROT"] *)} {(* result = "unused6" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) hrdata {} {{(* ports = [] *)} {(* result = "HRDATA" *)}}}} {method {Bool hready {} {{(* ports = [] *)} {(* result = "HREADY" *)}}}} {method {AhbDefines::AhbResp hresp {} {{(* ports = [] *)} {(* result = "HRESP" *)}}}}}} {position {AhbDefines.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action haddr Bit#(addr_size) {{(* ports = ["HADDR"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hwdata Bit#(data_size) {{(* ports = ["HWDATA"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hwrite AhbDefines::AhbWrite {{(* ports = ["HWRITE"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action htrans AhbDefines::AhbTransfer {{(* ports = ["HTRANS"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action hburst AhbDefines::AhbBurst {{(* ports = ["HBURST"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Action hsize TLM3Defines::TLMBSize {{(* ports = ["HSIZE"] *)} {(* result = "unused5" *)} {(* prefix = "" *)}}}} {method {Action hprot AhbDefines::AhbProt {{(* ports = ["HPROT"] *)} {(* result = "unused6" *)} {(* prefix = "" *)}}}} {method {Action hreadyin Bool {{(* ports = ["HREADY"] *)} {(* result = "unused7" *)} {(* prefix = "" *)}}}} {method {Action hmast Bit#(4) {{(* ports = ["HMASTER"] *)} {(* result = "unused8" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) hrdata {} {{(* ports = [] *)} {(* result = "HRDATA" *)}}}} {method {Bool hready {} {{(* ports = [] *)} {(* result = "HREADYOUT" *)}}}} {method {AhbDefines::AhbResp hresp {} {{(* ports = [] *)} {(* result = "HRESP" *)}}}} {method {Bit#(4) hsplit {} {{(* ports = [] *)} {(* result = "HSPLIT" *)}}}}}} {position {AhbDefines.bsv 171 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) haddr {} {{(* ports = [] *)} {(* result = "HADDR" *)}}}} {method {Bit#(data_size) hwdata {} {{(* ports = [] *)} {(* result = "HWDATA" *)}}}} {method {AhbDefines::AhbWrite hwrite {} {{(* ports = [] *)} {(* result = "HWRITE" *)}}}} {method {AhbDefines::AhbTransfer htrans {} {{(* ports = [] *)} {(* result = "HTRANS" *)}}}} {method {AhbDefines::AhbBurst hburst {} {{(* ports = [] *)} {(* result = "HBURST" *)}}}} {method {TLM3Defines::TLMBSize hsize {} {{(* ports = [] *)} {(* result = "HSIZE" *)}}}} {method {AhbDefines::AhbProt hprot {} {{(* ports = [] *)} {(* result = "HPROT" *)}}}} {method {Bool hreadyin {} {{(* ports = [] *)} {(* result = "HREADY" *)}}}} {method {Bit#(4) hmast {} {{(* ports = [] *)} {(* result = "HMAST" *)}}}} {method {Action hrdata Bit#(data_size) {{(* ports = ["HRDATA"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hready Bool {{(* ports = ["HREADYOUT"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hresp AhbDefines::AhbResp {{(* ports = ["HRESP"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action hsplit Bit#(4) {{(* ports = ["HSPLIT"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 206 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbSlaveSelector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action select Bool {{(* ports = ["HSEL"] *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 244 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface AhbDefines::AhbSlaveSelectorDual {members {{method {Bool select {} {{(* ports = [] *)} {(* result = "HSEL" *)}}}}}} {position {AhbDefines.bsv 250 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface AhbDefines::AhbMasterArbiter {members {{method {Bool hbusreq {} {{(* ports = [] *)} {(* result = "HBUSREQ" *)}}}} {method {Bool hlock {} {{(* ports = [] *)} {(* result = "HLOCK" *)}}}} {method {Action hgrant Bool {{(* ports = ["HGRANT"] *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 256 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface AhbDefines::AhbMasterArbiterDual {members {{method {Action hbusreq Bool {{(* ports = ["HBUSREQ"] *)} {(* result = "unused7" *)} {(* prefix = "" *)}}}} {method {Action hlock Bool {{(* ports = ["HLOCK"] *)} {(* result = "unused8" *)} {(* prefix = "" *)}}}} {method {Bool hgrant {} {{(* ports = [] *)} {(* result = "HGRANT" *)}}}}}} {position {AhbDefines.bsv 266 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbXtorMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface AhbDefines::AhbMasterArbiter arbiter {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 279 11}}
Interface {AhbDefines::AhbXtorSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface {AhbDefines::AhbSlaveSelector#(id_size, addr_size, data_size, length_size, user_size)} selector {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 286 11}}
Interface {AhbDefines::AhbXtorSlaveWM#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface {AhbDefines::AhbSlaveSelector#(id_size, addr_size, data_size, length_size, user_size)} selector {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {AhbDefines.bsv 320 11}}
Interface {AhbDefines::AhbXtorMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbMasterDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface AhbDefines::AhbMasterArbiterDual arbiter {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 332 11}}
Interface {AhbDefines::AhbXtorSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface AhbDefines::AhbSlaveSelectorDual selector {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 339 11}}
Interface {AhbDefines::AhbXtorMasterConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} master {}} {interface {AhbDefines::AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {AhbDefines.bsv 373 11}}
Interface {AhbDefines::AhbXtorSlaveConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} slave {}} {interface {AhbDefines::AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {AhbDefines.bsv 378 11}}
Interface {AhbDefines::AhbBus#(numeric type m, numeric type s, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {{Vector::Vector#(m, AhbDefines::AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size))} masters {} {}}} {method {{Vector::Vector#(s, AhbDefines::AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))} slaves {} {}}}}} {position {AhbDefines.bsv 383 11}}
Interface {AhbDefines::AhbMasterXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 392 11}}
Interface {AhbDefines::AhbSlaveXActorWM#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 398 11}}
Interface {AhbDefines::AhbSlaveXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 404 11}}
Interface {AhbDefines::AhbArbiter#(numeric type count, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {{Maybe#(Bit#(TLog#(TAdd#(count, 1))))} hmaster {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {interface AhbDefines::AhbResponseHandler handler {}}}} {position {AhbDefines.bsv 851 11}}
Interface AhbDefines::AhbResponseHandler {members {{method {Action hready_in Bool {{(* ports = ["value"] *)}}}} {method {Action hresp_in AhbDefines::AhbResp {{(* ports = ["value"] *)}}}} {method {Bool hready {} {{(* ports = [] *)}}}} {method {AhbDefines::AhbResp hresp {} {{(* ports = [] *)}}}}}} {position {AhbDefines.bsv 858 11}}
Interface {AhbDefines::AhbSlaveMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {AhbDefines::AhbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {AhbDefines.bsv 899 11}}
Interface {AhbDefines::AhbMasterMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {AhbDefines::AhbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {AhbDefines.bsv 904 11}}
Interface {AhbDefines::AhbInfo#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bool update {} {{(* ports = [] *)}}}}}} {position {AhbDefines.bsv 910 11}} {attributes {{(* always_ready  *)}}}
Typeclass {ApbDefines::Convert#(type a, type b)} {members {{{function b f(a x1)} convert}}} {instances {{ApbDefines::Convert#(ApbDefines::ApbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size))} {ApbDefines::Convert#(ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {position {ApbDefines.bsv 546 11}}
Struct {AhbDefines::AhbTbCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbWrite command {width 1}} {TLM3Defines::TLMBSize size {width 3}} {AhbDefines::AhbBurst burst {width 3}} {AhbDefines::AhbTransfer transfer {width 2}} {UInt#(length_size) length} {AhbDefines::AhbProt prot {width 4}} {Bit#(addr_size) addr}}} {position {AhbDefines.bsv 978 19}}
Struct {AhbDefines::AhbTbRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size)} ctrl} {Bit#(data_size) data}}} {position {AhbDefines.bsv 1003 19}}
TaggedUnion {AhbDefines::AhbXtorRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{AhbDefines::AhbTbRequest#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {Bit#(data_size) Data}}} {position {AhbDefines.bsv 1014 25}}
Alias {AhbDefines::AhbXtorResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size)} {position {AhbDefines.bsv 1030 32}}
Alias Axi4Defines::Axi4Len UInt#(8) {position {Axi4Defines.bsv 25 42}}
Alias Axi4Defines::Axi4Qos Bit#(4) {position {Axi4Defines.bsv 26 42}}
Alias Axi4Defines::Axi4Region Bit#(4) {position {Axi4Defines.bsv 27 42}}
Struct Axi4Defines::Axi4Cache {members {{TLM3Defines::TLMAllocate allocate {width 1}} {TLM3Defines::TLMAllocate other_allocate {width 1}} {TLM3Defines::TLMModify modify {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}}}} {width 4} {position {Axi4Defines.bsv 34 19}}
Enum Axi4Defines::Axi4Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {Axi4Defines.bsv 36 35}}
Struct {Axi4Defines::Axi4AddrCmd#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {UInt#(8) len {width 8}} {TLM3Defines::TLMBSize size {width 3}} {AxiDefines::AxiBurst burst {width 2}} {Axi4Defines::Axi4Lock lock {width 1}} {Axi4Defines::Axi4Cache cache {width 4}} {AxiDefines::AxiProt prot {width 3}} {Bit#(4) qos {width 4}} {Bit#(addr_size) addr} {Bit#(4) region {width 4}} {Bit#(user_size) user_addr}}} {position {Axi4Defines.bsv 50 19}}
Struct {Axi4Defines::Axi4WrData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{Bit#(TDiv#(data_size, 8))} strb} {Bool last {width 1}}}} {position {Axi4Defines.bsv 73 19}}
Struct {Axi4Defines::Axi4RdResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {Bit#(data_size) data} {AxiDefines::AxiResp resp {width 2}} {Bit#(user_size) user} {Bool last {width 1}}}} {position {Axi4Defines.bsv 90 19}}
Struct {Axi4Defines::Axi4WrResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {AxiDefines::AxiResp resp {width 2}} {Bit#(user_size) user}}} {position {Axi4Defines.bsv 106 19}}
Interface {Axi4Defines::Axi4WrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) awID {} {{(* ports = [] *)} {(* result = "AWID" *)}}}} {method {Bit#(addr_size) awADDR {} {{(* ports = [] *)} {(* result = "AWADDR" *)}}}} {method {Bit#(user_size) awUSER {} {{(* ports = [] *)} {(* result = "AWUSER" *)}}}} {method {UInt#(8) awLEN {} {{(* ports = [] *)} {(* result = "AWLEN" *)}}}} {method {TLM3Defines::TLMBSize awSIZE {} {{(* ports = [] *)} {(* result = "AWSIZE" *)}}}} {method {AxiDefines::AxiBurst awBURST {} {{(* ports = [] *)} {(* result = "AWBURST" *)}}}} {method {Axi4Defines::Axi4Lock awLOCK {} {{(* ports = [] *)} {(* result = "AWLOCK" *)}}}} {method {Axi4Defines::Axi4Cache awCACHE {} {{(* ports = [] *)} {(* result = "AWCACHE" *)}}}} {method {AxiDefines::AxiProt awPROT {} {{(* ports = [] *)} {(* result = "AWPROT" *)}}}} {method {Bit#(4) awQOS {} {{(* ports = [] *)} {(* result = "AWQOS" *)}}}} {method {Bool awVALID {} {{(* ports = [] *)} {(* result = "AWVALID" *)}}}} {method {Action awREADY Bool {{(* ports = ["AWREADY"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) wDATA {} {{(* ports = [] *)} {(* result = "WDATA" *)}}}} {method {Bit#(user_size) wUSER {} {{(* ports = [] *)} {(* result = "WUSER" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} wSTRB {} {{(* ports = [] *)} {(* result = "WSTRB" *)}}}} {method {Bool wLAST {} {{(* ports = [] *)} {(* result = "WLAST" *)}}}} {method {Bool wVALID {} {{(* ports = [] *)} {(* result = "WVALID" *)}}}} {method {Action wREADY Bool {{(* ports = ["WREADY"] *)} {(* result = "unusedwm1" *)} {(* prefix = "" *)}}}} {method {Bool bREADY {} {{(* ports = [] *)} {(* result = "BREADY" *)}}}} {method {Action bID Bit#(id_size) {{(* ports = ["BID"] *)} {(* result = "unusedwm2" *)} {(* prefix = "" *)}}}} {method {Action bRESP AxiDefines::AxiResp {{(* ports = ["BRESP"] *)} {(* result = "unusedwm3" *)} {(* prefix = "" *)}}}} {method {Action bUSER Bit#(user_size) {{(* ports = ["BUSER"] *)} {(* result = "unusedwm4" *)} {(* prefix = "" *)}}}} {method {Action bVALID Bool {{(* ports = ["BVALID"] *)} {(* result = "unusedwm5" *)} {(* prefix = "" *)}}}}}} {position {Axi4Defines.bsv 187 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4RdMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) arID {} {{(* ports = [] *)} {(* result = "ARID" *)}}}} {method {Bit#(addr_size) arADDR {} {{(* ports = [] *)} {(* result = "ARADDR" *)}}}} {method {Bit#(user_size) arUSER {} {{(* ports = [] *)} {(* result = "ARUSER" *)}}}} {method {UInt#(8) arLEN {} {{(* ports = [] *)} {(* result = "ARLEN" *)}}}} {method {TLM3Defines::TLMBSize arSIZE {} {{(* ports = [] *)} {(* result = "ARSIZE" *)}}}} {method {AxiDefines::AxiBurst arBURST {} {{(* ports = [] *)} {(* result = "ARBURST" *)}}}} {method {Axi4Defines::Axi4Lock arLOCK {} {{(* ports = [] *)} {(* result = "ARLOCK" *)}}}} {method {Axi4Defines::Axi4Cache arCACHE {} {{(* ports = [] *)} {(* result = "ARCACHE" *)}}}} {method {AxiDefines::AxiProt arPROT {} {{(* ports = [] *)} {(* result = "ARPROT" *)}}}} {method {Bit#(4) arQOS {} {{(* ports = [] *)} {(* result = "ARQOS" *)}}}} {method {Bool arVALID {} {{(* ports = [] *)} {(* result = "ARVALID" *)}}}} {method {Action arREADY Bool {{(* ports = ["ARREADY"] *)} {(* result = "unusedrm0" *)} {(* prefix = "" *)}}}} {method {Bool rREADY {} {{(* ports = [] *)} {(* result = "RREADY" *)}}}} {method {Action rID Bit#(id_size) {{(* ports = ["RID"] *)} {(* result = "unusedrm1" *)} {(* prefix = "" *)}}}} {method {Action rDATA Bit#(data_size) {{(* ports = ["RDATA"] *)} {(* result = "unusedrm2" *)} {(* prefix = "" *)}}}} {method {Action rRESP AxiDefines::AxiResp {{(* ports = ["RRESP"] *)} {(* result = "unusedrm3" *)} {(* prefix = "" *)}}}} {method {Action rUSER Bit#(user_size) {{(* ports = ["RUSER"] *)} {(* result = "unusedrm4" *)} {(* prefix = "" *)}}}} {method {Action rLAST Bool {{(* ports = ["RLAST"] *)} {(* result = "unusedrm5" *)} {(* prefix = "" *)}}}} {method {Action rVALID Bool {{(* ports = ["RVALID"] *)} {(* result = "unusedrm6" *)} {(* prefix = "" *)}}}}}} {position {Axi4Defines.bsv 250 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4WrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action awID Bit#(id_size) {{(* ports = ["AWID"] *)} {(* result = "unusedws0" *)} {(* prefix = "" *)}}}} {method {Action awADDR Bit#(addr_size) {{(* ports = ["AWADDR"] *)} {(* result = "unusedws1" *)} {(* prefix = "" *)}}}} {method {Action awREGION Bit#(4) {{(* ports = ["AWREGION"] *)} {(* result = "unusedws1A" *)} {(* prefix = "" *)}}}} {method {Action awUSER Bit#(user_size) {{(* ports = ["AWUSER"] *)} {(* result = "unusedws2" *)} {(* prefix = "" *)}}}} {method {Action awLEN UInt#(8) {{(* ports = ["AWLEN"] *)} {(* result = "unusedws3" *)} {(* prefix = "" *)}}}} {method {Action awSIZE TLM3Defines::TLMBSize {{(* ports = ["AWSIZE"] *)} {(* result = "unusedws4" *)} {(* prefix = "" *)}}}} {method {Action awBURST AxiDefines::AxiBurst {{(* ports = ["AWBURST"] *)} {(* result = "unusedws5" *)} {(* prefix = "" *)}}}} {method {Action awLOCK Axi4Defines::Axi4Lock {{(* ports = ["AWLOCK"] *)} {(* result = "unusedws6" *)} {(* prefix = "" *)}}}} {method {Action awCACHE Axi4Defines::Axi4Cache {{(* ports = ["AWCACHE"] *)} {(* result = "unusedws7" *)} {(* prefix = "" *)}}}} {method {Action awPROT AxiDefines::AxiProt {{(* ports = ["AWPROT"] *)} {(* result = "unusedws8" *)} {(* prefix = "" *)}}}} {method {Action awQOS Bit#(4) {{(* ports = ["AWQOS"] *)} {(* result = "unusedws9" *)} {(* prefix = "" *)}}}} {method {Action awVALID Bool {{(* ports = ["AWVALID"] *)} {(* result = "unusedws10" *)} {(* prefix = "" *)}}}} {method {Bool awREADY {} {{(* ports = [] *)} {(* result = "AWREADY" *)}}}} {method {Action wDATA Bit#(data_size) {{(* ports = ["WDATA"] *)} {(* result = "unusedws11" *)} {(* prefix = "" *)}}}} {method {Action wUSER Bit#(user_size) {{(* ports = ["WUSER"] *)} {(* result = "unusedws12" *)} {(* prefix = "" *)}}}} {method {Action wSTRB {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["WSTRB"] *)} {(* result = "unusedws13" *)} {(* prefix = "" *)}}}} {method {Action wLAST Bool {{(* ports = ["WLAST"] *)} {(* result = "unusedws14" *)} {(* prefix = "" *)}}}} {method {Action wVALID Bool {{(* ports = ["WVALID"] *)} {(* result = "unusedws15" *)} {(* prefix = "" *)}}}} {method {Bool wREADY {} {{(* ports = [] *)} {(* result = "WREADY" *)}}}} {method {Action bREADY Bool {{(* ports = ["BREADY"] *)} {(* result = "unusedws16" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) bID {} {{(* ports = [] *)} {(* result = "BID" *)}}}} {method {AxiDefines::AxiResp bRESP {} {{(* ports = [] *)} {(* result = "BRESP" *)}}}} {method {Bit#(user_size) bUSER {} {{(* ports = [] *)} {(* result = "BUSER" *)}}}} {method {Bool bVALID {} {{(* ports = [] *)} {(* result = "BVALID" *)}}}}}} {position {Axi4Defines.bsv 302 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4RdSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action arID Bit#(id_size) {{(* ports = ["ARID"] *)} {(* result = "unusedrs0" *)} {(* prefix = "" *)}}}} {method {Action arADDR Bit#(addr_size) {{(* ports = ["ARADDR"] *)} {(* result = "unusedrs1" *)} {(* prefix = "" *)}}}} {method {Action arREGION Bit#(4) {{(* ports = ["ARREGION"] *)} {(* result = "unusedws1A" *)} {(* prefix = "" *)}}}} {method {Action arUSER Bit#(user_size) {{(* ports = ["ARUSER"] *)} {(* result = "unusedws2" *)} {(* prefix = "" *)}}}} {method {Action arLEN UInt#(8) {{(* ports = ["ARLEN"] *)} {(* result = "unusedrs3" *)} {(* prefix = "" *)}}}} {method {Action arSIZE TLM3Defines::TLMBSize {{(* ports = ["ARSIZE"] *)} {(* result = "unusedrs4" *)} {(* prefix = "" *)}}}} {method {Action arBURST AxiDefines::AxiBurst {{(* ports = ["ARBURST"] *)} {(* result = "unusedrs5" *)} {(* prefix = "" *)}}}} {method {Action arLOCK Axi4Defines::Axi4Lock {{(* ports = ["ARLOCK"] *)} {(* result = "unusedrs6" *)} {(* prefix = "" *)}}}} {method {Action arCACHE Axi4Defines::Axi4Cache {{(* ports = ["ARCACHE"] *)} {(* result = "unusedrs7" *)} {(* prefix = "" *)}}}} {method {Action arPROT AxiDefines::AxiProt {{(* ports = ["ARPROT"] *)} {(* result = "unusedrs8" *)} {(* prefix = "" *)}}}} {method {Action arQOS Bit#(4) {{(* ports = ["ARQOS"] *)} {(* result = "unusedws9" *)} {(* prefix = "" *)}}}} {method {Action arVALID Bool {{(* ports = ["ARVALID"] *)} {(* result = "unusedrs10" *)} {(* prefix = "" *)}}}} {method {Bool arREADY {} {{(* ports = [] *)} {(* result = "ARREADY" *)}}}} {method {Action rREADY Bool {{(* ports = ["RREADY"] *)} {(* result = "unusedrs11" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) rID {} {{(* ports = [] *)} {(* result = "RID" *)}}}} {method {Bit#(data_size) rDATA {} {{(* ports = [] *)} {(* result = "RDATA" *)}}}} {method {AxiDefines::AxiResp rRESP {} {{(* ports = [] *)} {(* result = "RRESP" *)}}}} {method {Bit#(user_size) rUSER {} {{(* ports = [] *)} {(* result = "RUSER" *)}}}} {method {Bool rLAST {} {{(* ports = [] *)} {(* result = "RLAST" *)}}}} {method {Bool rVALID {} {{(* ports = [] *)} {(* result = "RVALID" *)}}}}}} {position {Axi4Defines.bsv 367 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4RdBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 423 11}}
Interface {Axi4Defines::Axi4WrBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusRecv#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 428 11}}
Interface {Axi4Defines::Axi4RdBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 434 11}}
Interface {Axi4Defines::Axi4WrBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusSend#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 439 11}}
Interface {Axi4Defines::Axi4RdFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 449 11}}
Interface {Axi4Defines::Axi4RdFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4Defines.bsv 454 11}}
Interface {Axi4Defines::Axi4WrFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 460 11}}
Interface {Axi4Defines::Axi4WrFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4Defines.bsv 465 11}}
Interface {Axi4Defines::Axi4RdMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 471 11}}
Interface {Axi4Defines::Axi4WrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 477 11}}
Interface {Axi4Defines::Axi4RdSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 483 11}}
Interface {Axi4Defines::Axi4WrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 489 11}}
Interface {Axi4Defines::Axi4RdWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 499 11}}
Interface {Axi4Defines::Axi4RdWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 507 11}}
Interface {Axi4Defines::Axi4RdWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 515 11}}
Interface {Axi4Defines::Axi4RdWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 522 11}}
Typeclass {Axi4Defines::ToAxi4#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(b) f(a x1)   provisos (IsModule#(c, d))} toAxi4}}} {instances {{Axi4Defines::ToAxi4#(AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4Defines.bsv 774 11}}
Struct {Axi4LDefines::Axi4LAddrCmd#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AxiDefines::AxiProt prot {width 3}} {Bit#(addr_size) addr}}} {position {Axi4LDefines.bsv 24 19}}
Struct {Axi4LDefines::Axi4LWrData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {{Bit#(TDiv#(data_size, 8))} strb}}} {position {Axi4LDefines.bsv 37 19}}
Struct {Axi4LDefines::Axi4LRdResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {AxiDefines::AxiResp resp {width 2}}}} {position {Axi4LDefines.bsv 48 19}}
Interface {Axi4LDefines::Axi4LWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) awADDR {} {{(* ports = [] *)} {(* result = "AWADDR" *)}}}} {method {AxiDefines::AxiProt awPROT {} {{(* ports = [] *)} {(* result = "AWPROT" *)}}}} {method {Bool awVALID {} {{(* ports = [] *)} {(* result = "AWVALID" *)}}}} {method {Action awREADY Bool {{(* ports = ["AWREADY"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) wDATA {} {{(* ports = [] *)} {(* result = "WDATA" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} wSTRB {} {{(* ports = [] *)} {(* result = "WSTRB" *)}}}} {method {Bool wVALID {} {{(* ports = [] *)} {(* result = "WVALID" *)}}}} {method {Action wREADY Bool {{(* ports = ["WREADY"] *)} {(* result = "unusedwm1" *)} {(* prefix = "" *)}}}} {method {Bool bREADY {} {{(* ports = [] *)} {(* result = "BREADY" *)}}}} {method {Action bRESP AxiDefines::AxiResp {{(* ports = ["BRESP"] *)} {(* result = "unusedwm3" *)} {(* prefix = "" *)}}}} {method {Action bVALID Bool {{(* ports = ["BVALID"] *)} {(* result = "unusedwm2" *)} {(* prefix = "" *)}}}}}} {position {Axi4LDefines.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LRdMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) arADDR {} {{(* ports = [] *)} {(* result = "ARADDR" *)}}}} {method {AxiDefines::AxiProt arPROT {} {{(* ports = [] *)} {(* result = "ARPROT" *)}}}} {method {Bool arVALID {} {{(* ports = [] *)} {(* result = "ARVALID" *)}}}} {method {Action arREADY Bool {{(* ports = ["ARREADY"] *)} {(* result = "unusedrm0" *)} {(* prefix = "" *)}}}} {method {Bool rREADY {} {{(* ports = [] *)} {(* result = "RREADY" *)}}}} {method {Action rDATA Bit#(data_size) {{(* ports = ["RDATA"] *)} {(* result = "unusedrm2" *)} {(* prefix = "" *)}}}} {method {Action rRESP AxiDefines::AxiResp {{(* ports = ["RRESP"] *)} {(* result = "unusedrm3" *)} {(* prefix = "" *)}}}} {method {Action rVALID Bool {{(* ports = ["RVALID"] *)} {(* result = "unusedrm6" *)} {(* prefix = "" *)}}}}}} {position {Axi4LDefines.bsv 105 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action awADDR Bit#(addr_size) {{(* ports = ["AWADDR"] *)} {(* result = "unusedws1" *)} {(* prefix = "" *)}}}} {method {Action awPROT AxiDefines::AxiProt {{(* ports = ["AWPROT"] *)} {(* result = "unusedws8" *)} {(* prefix = "" *)}}}} {method {Action awVALID Bool {{(* ports = ["AWVALID"] *)} {(* result = "unusedws10" *)} {(* prefix = "" *)}}}} {method {Bool awREADY {} {{(* ports = [] *)} {(* result = "AWREADY" *)}}}} {method {Action wDATA Bit#(data_size) {{(* ports = ["WDATA"] *)} {(* result = "unusedws11" *)} {(* prefix = "" *)}}}} {method {Action wSTRB {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["WSTRB"] *)} {(* result = "unusedws13" *)} {(* prefix = "" *)}}}} {method {Action wVALID Bool {{(* ports = ["WVALID"] *)} {(* result = "unusedws15" *)} {(* prefix = "" *)}}}} {method {Bool wREADY {} {{(* ports = [] *)} {(* result = "WREADY" *)}}}} {method {Action bREADY Bool {{(* ports = ["BREADY"] *)} {(* result = "unusedws16" *)} {(* prefix = "" *)}}}} {method {AxiDefines::AxiResp bRESP {} {{(* ports = [] *)} {(* result = "BRESP" *)}}}} {method {Bool bVALID {} {{(* ports = [] *)} {(* result = "BVALID" *)}}}}}} {position {Axi4LDefines.bsv 135 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LRdSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action arADDR Bit#(addr_size) {{(* ports = ["ARADDR"] *)} {(* result = "unusedrs1" *)} {(* prefix = "" *)}}}} {method {Action arPROT AxiDefines::AxiProt {{(* ports = ["ARPROT"] *)} {(* result = "unusedrs8" *)} {(* prefix = "" *)}}}} {method {Action arVALID Bool {{(* ports = ["ARVALID"] *)} {(* result = "unusedrs10" *)} {(* prefix = "" *)}}}} {method {Bool arREADY {} {{(* ports = [] *)} {(* result = "ARREADY" *)}}}} {method {Action rREADY Bool {{(* ports = ["RREADY"] *)} {(* result = "unusedrs11" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) rDATA {} {{(* ports = [] *)} {(* result = "RDATA" *)}}}} {method {AxiDefines::AxiResp rRESP {} {{(* ports = [] *)} {(* result = "RRESP" *)}}}} {method {Bool rVALID {} {{(* ports = [] *)} {(* result = "RVALID" *)}}}}}} {position {Axi4LDefines.bsv 174 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LRdBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4LDefines.bsv 206 11}}
Interface {Axi4LDefines::Axi4LWrBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface BusDefines::BusRecv#(AxiDefines::AxiResp) resp {}}}} {position {Axi4LDefines.bsv 211 11}}
Interface {Axi4LDefines::Axi4LRdBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4LDefines.bsv 217 11}}
Interface {Axi4LDefines::Axi4LWrBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface BusDefines::BusSend#(AxiDefines::AxiResp) resp {}}}} {position {Axi4LDefines.bsv 222 11}}
Interface {Axi4LDefines::Axi4LRdFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 232 11}}
Interface {Axi4LDefines::Axi4LRdFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4LDefines.bsv 237 11}}
Interface {Axi4LDefines::Axi4LWrFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 243 11}}
Interface {Axi4LDefines::Axi4LWrFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4LDefines.bsv 248 11}}
Interface {Axi4LDefines::Axi4LRdMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 254 11}}
Interface {Axi4LDefines::Axi4LWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 260 11}}
Interface {Axi4LDefines::Axi4LRdSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 266 11}}
Interface {Axi4LDefines::Axi4LWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 272 11}}
Interface {Axi4LDefines::Axi4LRdWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 282 11}}
Interface {Axi4LDefines::Axi4LRdWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 290 11}}
Interface {Axi4LDefines::Axi4LRdWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 298 11}}
Interface {Axi4LDefines::Axi4LRdWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 305 11}}
Typeclass {Axi4LDefines::ToAxi4L#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(b) f(a x1)   provisos (IsModule#(c, d))} toAxi4L}}} {position {Axi4LDefines.bsv 407 11}}
Interface {Axi4LPC::Axi4LPC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action aw_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action aw_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action aw_valid Bool {{(* ports = ["value"] *)}}}} {method {Action aw_ready Bool {{(* ports = ["value"] *)}}}} {method {Action w_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action w_strb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["value"] *)}}}} {method {Action w_valid Bool {{(* ports = ["value"] *)}}}} {method {Action w_ready Bool {{(* ports = ["value"] *)}}}} {method {Action b_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action b_valid Bool {{(* ports = ["value"] *)}}}} {method {Action b_ready Bool {{(* ports = ["value"] *)}}}} {method {Action ar_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action ar_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action ar_valid Bool {{(* ports = ["value"] *)}}}} {method {Action ar_ready Bool {{(* ports = ["value"] *)}}}} {method {Action r_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action r_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action r_valid Bool {{(* ports = ["value"] *)}}}} {method {Action r_ready Bool {{(* ports = ["value"] *)}}}}}} {position {Axi4LPC.bsv 384 11}}
Struct Axi4LPC::Axi4LPCParams {members {{Int#(32) maxwaits {width 32}}}} {width 32} {position {Axi4LPC.bsv 416 19}}
Interface {Axi4PC::Axi4PC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action aw_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action aw_len UInt#(8) {{(* ports = ["aw_len"] *)}}}} {method {Action aw_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action aw_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action aw_lock Axi4Defines::Axi4Lock {{(* ports = ["value"] *)}}}} {method {Action aw_cache Axi4Defines::Axi4Cache {{(* ports = ["value"] *)}}}} {method {Action aw_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action aw_qos Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action aw_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action aw_region Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action aw_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action aw_valid Bool {{(* ports = ["value"] *)}}}} {method {Action aw_ready Bool {{(* ports = ["value"] *)}}}} {method {Action w_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action w_strb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["value"] *)}}}} {method {Action w_last Bool {{(* ports = ["value"] *)}}}} {method {Action w_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action w_valid Bool {{(* ports = ["value"] *)}}}} {method {Action w_ready Bool {{(* ports = ["value"] *)}}}} {method {Action b_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action b_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action b_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action b_valid Bool {{(* ports = ["value"] *)}}}} {method {Action b_ready Bool {{(* ports = ["value"] *)}}}} {method {Action ar_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action ar_len UInt#(8) {{(* ports = ["value"] *)}}}} {method {Action ar_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action ar_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action ar_lock Axi4Defines::Axi4Lock {{(* ports = ["value"] *)}}}} {method {Action ar_cache Axi4Defines::Axi4Cache {{(* ports = ["value"] *)}}}} {method {Action ar_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action ar_qos Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action ar_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action ar_region Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action ar_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action ar_valid Bool {{(* ports = ["value"] *)}}}} {method {Action ar_ready Bool {{(* ports = ["value"] *)}}}} {method {Action r_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action r_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action r_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action r_last Bool {{(* ports = ["value"] *)}}}} {method {Action r_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action r_valid Bool {{(* ports = ["value"] *)}}}} {method {Action r_ready Bool {{(* ports = ["value"] *)}}}} {method {Action c_active Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysreq Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysack Bool {{(* ports = ["value"] *)}}}}}} {position {Axi4PC.bsv 653 11}}
Struct Axi4PC::Axi4PCParams {members {{UInt#(32) exmon_width {width 32}} {UInt#(32) maxwaits {width 32}}}} {width 64} {position {Axi4PC.bsv 717 19}}
Struct {Axi4LDefines::Axi4LAddrCmd#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AxiDefines::AxiProt prot {width 3}} {Bit#(addr_size) addr}}} {position {Axi4LDefines.bsv 24 19}}
Struct {Axi4LDefines::Axi4LWrData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {{Bit#(TDiv#(data_size, 8))} strb}}} {position {Axi4LDefines.bsv 37 19}}
Struct {Axi4LDefines::Axi4LRdResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {AxiDefines::AxiResp resp {width 2}}}} {position {Axi4LDefines.bsv 48 19}}
Interface {Axi4LDefines::Axi4LWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) awADDR {} {{(* ports = [] *)} {(* result = "AWADDR" *)}}}} {method {AxiDefines::AxiProt awPROT {} {{(* ports = [] *)} {(* result = "AWPROT" *)}}}} {method {Bool awVALID {} {{(* ports = [] *)} {(* result = "AWVALID" *)}}}} {method {Action awREADY Bool {{(* ports = ["AWREADY"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) wDATA {} {{(* ports = [] *)} {(* result = "WDATA" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} wSTRB {} {{(* ports = [] *)} {(* result = "WSTRB" *)}}}} {method {Bool wVALID {} {{(* ports = [] *)} {(* result = "WVALID" *)}}}} {method {Action wREADY Bool {{(* ports = ["WREADY"] *)} {(* result = "unusedwm1" *)} {(* prefix = "" *)}}}} {method {Bool bREADY {} {{(* ports = [] *)} {(* result = "BREADY" *)}}}} {method {Action bRESP AxiDefines::AxiResp {{(* ports = ["BRESP"] *)} {(* result = "unusedwm3" *)} {(* prefix = "" *)}}}} {method {Action bVALID Bool {{(* ports = ["BVALID"] *)} {(* result = "unusedwm2" *)} {(* prefix = "" *)}}}}}} {position {Axi4LDefines.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LRdMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) arADDR {} {{(* ports = [] *)} {(* result = "ARADDR" *)}}}} {method {AxiDefines::AxiProt arPROT {} {{(* ports = [] *)} {(* result = "ARPROT" *)}}}} {method {Bool arVALID {} {{(* ports = [] *)} {(* result = "ARVALID" *)}}}} {method {Action arREADY Bool {{(* ports = ["ARREADY"] *)} {(* result = "unusedrm0" *)} {(* prefix = "" *)}}}} {method {Bool rREADY {} {{(* ports = [] *)} {(* result = "RREADY" *)}}}} {method {Action rDATA Bit#(data_size) {{(* ports = ["RDATA"] *)} {(* result = "unusedrm2" *)} {(* prefix = "" *)}}}} {method {Action rRESP AxiDefines::AxiResp {{(* ports = ["RRESP"] *)} {(* result = "unusedrm3" *)} {(* prefix = "" *)}}}} {method {Action rVALID Bool {{(* ports = ["RVALID"] *)} {(* result = "unusedrm6" *)} {(* prefix = "" *)}}}}}} {position {Axi4LDefines.bsv 105 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action awADDR Bit#(addr_size) {{(* ports = ["AWADDR"] *)} {(* result = "unusedws1" *)} {(* prefix = "" *)}}}} {method {Action awPROT AxiDefines::AxiProt {{(* ports = ["AWPROT"] *)} {(* result = "unusedws8" *)} {(* prefix = "" *)}}}} {method {Action awVALID Bool {{(* ports = ["AWVALID"] *)} {(* result = "unusedws10" *)} {(* prefix = "" *)}}}} {method {Bool awREADY {} {{(* ports = [] *)} {(* result = "AWREADY" *)}}}} {method {Action wDATA Bit#(data_size) {{(* ports = ["WDATA"] *)} {(* result = "unusedws11" *)} {(* prefix = "" *)}}}} {method {Action wSTRB {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["WSTRB"] *)} {(* result = "unusedws13" *)} {(* prefix = "" *)}}}} {method {Action wVALID Bool {{(* ports = ["WVALID"] *)} {(* result = "unusedws15" *)} {(* prefix = "" *)}}}} {method {Bool wREADY {} {{(* ports = [] *)} {(* result = "WREADY" *)}}}} {method {Action bREADY Bool {{(* ports = ["BREADY"] *)} {(* result = "unusedws16" *)} {(* prefix = "" *)}}}} {method {AxiDefines::AxiResp bRESP {} {{(* ports = [] *)} {(* result = "BRESP" *)}}}} {method {Bool bVALID {} {{(* ports = [] *)} {(* result = "BVALID" *)}}}}}} {position {Axi4LDefines.bsv 135 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LRdSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action arADDR Bit#(addr_size) {{(* ports = ["ARADDR"] *)} {(* result = "unusedrs1" *)} {(* prefix = "" *)}}}} {method {Action arPROT AxiDefines::AxiProt {{(* ports = ["ARPROT"] *)} {(* result = "unusedrs8" *)} {(* prefix = "" *)}}}} {method {Action arVALID Bool {{(* ports = ["ARVALID"] *)} {(* result = "unusedrs10" *)} {(* prefix = "" *)}}}} {method {Bool arREADY {} {{(* ports = [] *)} {(* result = "ARREADY" *)}}}} {method {Action rREADY Bool {{(* ports = ["RREADY"] *)} {(* result = "unusedrs11" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) rDATA {} {{(* ports = [] *)} {(* result = "RDATA" *)}}}} {method {AxiDefines::AxiResp rRESP {} {{(* ports = [] *)} {(* result = "RRESP" *)}}}} {method {Bool rVALID {} {{(* ports = [] *)} {(* result = "RVALID" *)}}}}}} {position {Axi4LDefines.bsv 174 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LRdBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4LDefines.bsv 206 11}}
Interface {Axi4LDefines::Axi4LWrBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface BusDefines::BusRecv#(AxiDefines::AxiResp) resp {}}}} {position {Axi4LDefines.bsv 211 11}}
Interface {Axi4LDefines::Axi4LRdBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4LDefines.bsv 217 11}}
Interface {Axi4LDefines::Axi4LWrBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface BusDefines::BusSend#(AxiDefines::AxiResp) resp {}}}} {position {Axi4LDefines.bsv 222 11}}
Interface {Axi4LDefines::Axi4LRdFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 232 11}}
Interface {Axi4LDefines::Axi4LRdFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4LDefines.bsv 237 11}}
Interface {Axi4LDefines::Axi4LWrFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 243 11}}
Interface {Axi4LDefines::Axi4LWrFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4LDefines.bsv 248 11}}
Interface {Axi4LDefines::Axi4LRdMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 254 11}}
Interface {Axi4LDefines::Axi4LWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 260 11}}
Interface {Axi4LDefines::Axi4LRdSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 266 11}}
Interface {Axi4LDefines::Axi4LWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 272 11}}
Interface {Axi4LDefines::Axi4LRdWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 282 11}}
Interface {Axi4LDefines::Axi4LRdWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 290 11}}
Interface {Axi4LDefines::Axi4LRdWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 298 11}}
Interface {Axi4LDefines::Axi4LRdWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 305 11}}
Typeclass {Axi4LDefines::ToAxi4L#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(b) f(a x1)   provisos (IsModule#(c, d))} toAxi4L}}} {position {Axi4LDefines.bsv 407 11}}


Interface {Axi4PC::Axi4PC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action aw_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action aw_len UInt#(8) {{(* ports = ["aw_len"] *)}}}} {method {Action aw_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action aw_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action aw_lock Axi4Defines::Axi4Lock {{(* ports = ["value"] *)}}}} {method {Action aw_cache Axi4Defines::Axi4Cache {{(* ports = ["value"] *)}}}} {method {Action aw_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action aw_qos Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action aw_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action aw_region Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action aw_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action aw_valid Bool {{(* ports = ["value"] *)}}}} {method {Action aw_ready Bool {{(* ports = ["value"] *)}}}} {method {Action w_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action w_strb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["value"] *)}}}} {method {Action w_last Bool {{(* ports = ["value"] *)}}}} {method {Action w_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action w_valid Bool {{(* ports = ["value"] *)}}}} {method {Action w_ready Bool {{(* ports = ["value"] *)}}}} {method {Action b_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action b_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action b_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action b_valid Bool {{(* ports = ["value"] *)}}}} {method {Action b_ready Bool {{(* ports = ["value"] *)}}}} {method {Action ar_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action ar_len UInt#(8) {{(* ports = ["value"] *)}}}} {method {Action ar_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action ar_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action ar_lock Axi4Defines::Axi4Lock {{(* ports = ["value"] *)}}}} {method {Action ar_cache Axi4Defines::Axi4Cache {{(* ports = ["value"] *)}}}} {method {Action ar_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action ar_qos Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action ar_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action ar_region Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action ar_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action ar_valid Bool {{(* ports = ["value"] *)}}}} {method {Action ar_ready Bool {{(* ports = ["value"] *)}}}} {method {Action r_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action r_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action r_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action r_last Bool {{(* ports = ["value"] *)}}}} {method {Action r_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action r_valid Bool {{(* ports = ["value"] *)}}}} {method {Action r_ready Bool {{(* ports = ["value"] *)}}}} {method {Action c_active Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysreq Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysack Bool {{(* ports = ["value"] *)}}}}}} {position {Axi4PC.bsv 653 11}}
Struct Axi4PC::Axi4PCParams {members {{UInt#(32) exmon_width {width 32}} {UInt#(32) maxwaits {width 32}}}} {width 64} {position {Axi4PC.bsv 717 19}}

Alias Axi4Defines::Axi4Len UInt#(8) {position {Axi4Defines.bsv 25 42}}
Alias Axi4Defines::Axi4Qos Bit#(4) {position {Axi4Defines.bsv 26 42}}
Alias Axi4Defines::Axi4Region Bit#(4) {position {Axi4Defines.bsv 27 42}}
Struct Axi4Defines::Axi4Cache {members {{TLM3Defines::TLMAllocate allocate {width 1}} {TLM3Defines::TLMAllocate other_allocate {width 1}} {TLM3Defines::TLMModify modify {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}}}} {width 4} {position {Axi4Defines.bsv 34 19}}
Enum Axi4Defines::Axi4Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {Axi4Defines.bsv 36 35}}
Struct {Axi4Defines::Axi4AddrCmd#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {UInt#(8) len {width 8}} {TLM3Defines::TLMBSize size {width 3}} {AxiDefines::AxiBurst burst {width 2}} {Axi4Defines::Axi4Lock lock {width 1}} {Axi4Defines::Axi4Cache cache {width 4}} {AxiDefines::AxiProt prot {width 3}} {Bit#(4) qos {width 4}} {Bit#(addr_size) addr} {Bit#(4) region {width 4}} {Bit#(user_size) user_addr}}} {position {Axi4Defines.bsv 50 19}}
Struct {Axi4Defines::Axi4WrData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{Bit#(TDiv#(data_size, 8))} strb} {Bool last {width 1}}}} {position {Axi4Defines.bsv 73 19}}
Struct {Axi4Defines::Axi4RdResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {Bit#(data_size) data} {AxiDefines::AxiResp resp {width 2}} {Bit#(user_size) user} {Bool last {width 1}}}} {position {Axi4Defines.bsv 90 19}}
Struct {Axi4Defines::Axi4WrResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {AxiDefines::AxiResp resp {width 2}} {Bit#(user_size) user}}} {position {Axi4Defines.bsv 106 19}}
Interface {Axi4Defines::Axi4WrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) awID {} {{(* ports = [] *)} {(* result = "AWID" *)}}}} {method {Bit#(addr_size) awADDR {} {{(* ports = [] *)} {(* result = "AWADDR" *)}}}} {method {Bit#(user_size) awUSER {} {{(* ports = [] *)} {(* result = "AWUSER" *)}}}} {method {UInt#(8) awLEN {} {{(* ports = [] *)} {(* result = "AWLEN" *)}}}} {method {TLM3Defines::TLMBSize awSIZE {} {{(* ports = [] *)} {(* result = "AWSIZE" *)}}}} {method {AxiDefines::AxiBurst awBURST {} {{(* ports = [] *)} {(* result = "AWBURST" *)}}}} {method {Axi4Defines::Axi4Lock awLOCK {} {{(* ports = [] *)} {(* result = "AWLOCK" *)}}}} {method {Axi4Defines::Axi4Cache awCACHE {} {{(* ports = [] *)} {(* result = "AWCACHE" *)}}}} {method {AxiDefines::AxiProt awPROT {} {{(* ports = [] *)} {(* result = "AWPROT" *)}}}} {method {Bit#(4) awQOS {} {{(* ports = [] *)} {(* result = "AWQOS" *)}}}} {method {Bool awVALID {} {{(* ports = [] *)} {(* result = "AWVALID" *)}}}} {method {Action awREADY Bool {{(* ports = ["AWREADY"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) wDATA {} {{(* ports = [] *)} {(* result = "WDATA" *)}}}} {method {Bit#(user_size) wUSER {} {{(* ports = [] *)} {(* result = "WUSER" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} wSTRB {} {{(* ports = [] *)} {(* result = "WSTRB" *)}}}} {method {Bool wLAST {} {{(* ports = [] *)} {(* result = "WLAST" *)}}}} {method {Bool wVALID {} {{(* ports = [] *)} {(* result = "WVALID" *)}}}} {method {Action wREADY Bool {{(* ports = ["WREADY"] *)} {(* result = "unusedwm1" *)} {(* prefix = "" *)}}}} {method {Bool bREADY {} {{(* ports = [] *)} {(* result = "BREADY" *)}}}} {method {Action bID Bit#(id_size) {{(* ports = ["BID"] *)} {(* result = "unusedwm2" *)} {(* prefix = "" *)}}}} {method {Action bRESP AxiDefines::AxiResp {{(* ports = ["BRESP"] *)} {(* result = "unusedwm3" *)} {(* prefix = "" *)}}}} {method {Action bUSER Bit#(user_size) {{(* ports = ["BUSER"] *)} {(* result = "unusedwm4" *)} {(* prefix = "" *)}}}} {method {Action bVALID Bool {{(* ports = ["BVALID"] *)} {(* result = "unusedwm5" *)} {(* prefix = "" *)}}}}}} {position {Axi4Defines.bsv 187 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4RdMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) arID {} {{(* ports = [] *)} {(* result = "ARID" *)}}}} {method {Bit#(addr_size) arADDR {} {{(* ports = [] *)} {(* result = "ARADDR" *)}}}} {method {Bit#(user_size) arUSER {} {{(* ports = [] *)} {(* result = "ARUSER" *)}}}} {method {UInt#(8) arLEN {} {{(* ports = [] *)} {(* result = "ARLEN" *)}}}} {method {TLM3Defines::TLMBSize arSIZE {} {{(* ports = [] *)} {(* result = "ARSIZE" *)}}}} {method {AxiDefines::AxiBurst arBURST {} {{(* ports = [] *)} {(* result = "ARBURST" *)}}}} {method {Axi4Defines::Axi4Lock arLOCK {} {{(* ports = [] *)} {(* result = "ARLOCK" *)}}}} {method {Axi4Defines::Axi4Cache arCACHE {} {{(* ports = [] *)} {(* result = "ARCACHE" *)}}}} {method {AxiDefines::AxiProt arPROT {} {{(* ports = [] *)} {(* result = "ARPROT" *)}}}} {method {Bit#(4) arQOS {} {{(* ports = [] *)} {(* result = "ARQOS" *)}}}} {method {Bool arVALID {} {{(* ports = [] *)} {(* result = "ARVALID" *)}}}} {method {Action arREADY Bool {{(* ports = ["ARREADY"] *)} {(* result = "unusedrm0" *)} {(* prefix = "" *)}}}} {method {Bool rREADY {} {{(* ports = [] *)} {(* result = "RREADY" *)}}}} {method {Action rID Bit#(id_size) {{(* ports = ["RID"] *)} {(* result = "unusedrm1" *)} {(* prefix = "" *)}}}} {method {Action rDATA Bit#(data_size) {{(* ports = ["RDATA"] *)} {(* result = "unusedrm2" *)} {(* prefix = "" *)}}}} {method {Action rRESP AxiDefines::AxiResp {{(* ports = ["RRESP"] *)} {(* result = "unusedrm3" *)} {(* prefix = "" *)}}}} {method {Action rUSER Bit#(user_size) {{(* ports = ["RUSER"] *)} {(* result = "unusedrm4" *)} {(* prefix = "" *)}}}} {method {Action rLAST Bool {{(* ports = ["RLAST"] *)} {(* result = "unusedrm5" *)} {(* prefix = "" *)}}}} {method {Action rVALID Bool {{(* ports = ["RVALID"] *)} {(* result = "unusedrm6" *)} {(* prefix = "" *)}}}}}} {position {Axi4Defines.bsv 250 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4WrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action awID Bit#(id_size) {{(* ports = ["AWID"] *)} {(* result = "unusedws0" *)} {(* prefix = "" *)}}}} {method {Action awADDR Bit#(addr_size) {{(* ports = ["AWADDR"] *)} {(* result = "unusedws1" *)} {(* prefix = "" *)}}}} {method {Action awREGION Bit#(4) {{(* ports = ["AWREGION"] *)} {(* result = "unusedws1A" *)} {(* prefix = "" *)}}}} {method {Action awUSER Bit#(user_size) {{(* ports = ["AWUSER"] *)} {(* result = "unusedws2" *)} {(* prefix = "" *)}}}} {method {Action awLEN UInt#(8) {{(* ports = ["AWLEN"] *)} {(* result = "unusedws3" *)} {(* prefix = "" *)}}}} {method {Action awSIZE TLM3Defines::TLMBSize {{(* ports = ["AWSIZE"] *)} {(* result = "unusedws4" *)} {(* prefix = "" *)}}}} {method {Action awBURST AxiDefines::AxiBurst {{(* ports = ["AWBURST"] *)} {(* result = "unusedws5" *)} {(* prefix = "" *)}}}} {method {Action awLOCK Axi4Defines::Axi4Lock {{(* ports = ["AWLOCK"] *)} {(* result = "unusedws6" *)} {(* prefix = "" *)}}}} {method {Action awCACHE Axi4Defines::Axi4Cache {{(* ports = ["AWCACHE"] *)} {(* result = "unusedws7" *)} {(* prefix = "" *)}}}} {method {Action awPROT AxiDefines::AxiProt {{(* ports = ["AWPROT"] *)} {(* result = "unusedws8" *)} {(* prefix = "" *)}}}} {method {Action awQOS Bit#(4) {{(* ports = ["AWQOS"] *)} {(* result = "unusedws9" *)} {(* prefix = "" *)}}}} {method {Action awVALID Bool {{(* ports = ["AWVALID"] *)} {(* result = "unusedws10" *)} {(* prefix = "" *)}}}} {method {Bool awREADY {} {{(* ports = [] *)} {(* result = "AWREADY" *)}}}} {method {Action wDATA Bit#(data_size) {{(* ports = ["WDATA"] *)} {(* result = "unusedws11" *)} {(* prefix = "" *)}}}} {method {Action wUSER Bit#(user_size) {{(* ports = ["WUSER"] *)} {(* result = "unusedws12" *)} {(* prefix = "" *)}}}} {method {Action wSTRB {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["WSTRB"] *)} {(* result = "unusedws13" *)} {(* prefix = "" *)}}}} {method {Action wLAST Bool {{(* ports = ["WLAST"] *)} {(* result = "unusedws14" *)} {(* prefix = "" *)}}}} {method {Action wVALID Bool {{(* ports = ["WVALID"] *)} {(* result = "unusedws15" *)} {(* prefix = "" *)}}}} {method {Bool wREADY {} {{(* ports = [] *)} {(* result = "WREADY" *)}}}} {method {Action bREADY Bool {{(* ports = ["BREADY"] *)} {(* result = "unusedws16" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) bID {} {{(* ports = [] *)} {(* result = "BID" *)}}}} {method {AxiDefines::AxiResp bRESP {} {{(* ports = [] *)} {(* result = "BRESP" *)}}}} {method {Bit#(user_size) bUSER {} {{(* ports = [] *)} {(* result = "BUSER" *)}}}} {method {Bool bVALID {} {{(* ports = [] *)} {(* result = "BVALID" *)}}}}}} {position {Axi4Defines.bsv 302 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4RdSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action arID Bit#(id_size) {{(* ports = ["ARID"] *)} {(* result = "unusedrs0" *)} {(* prefix = "" *)}}}} {method {Action arADDR Bit#(addr_size) {{(* ports = ["ARADDR"] *)} {(* result = "unusedrs1" *)} {(* prefix = "" *)}}}} {method {Action arREGION Bit#(4) {{(* ports = ["ARREGION"] *)} {(* result = "unusedws1A" *)} {(* prefix = "" *)}}}} {method {Action arUSER Bit#(user_size) {{(* ports = ["ARUSER"] *)} {(* result = "unusedws2" *)} {(* prefix = "" *)}}}} {method {Action arLEN UInt#(8) {{(* ports = ["ARLEN"] *)} {(* result = "unusedrs3" *)} {(* prefix = "" *)}}}} {method {Action arSIZE TLM3Defines::TLMBSize {{(* ports = ["ARSIZE"] *)} {(* result = "unusedrs4" *)} {(* prefix = "" *)}}}} {method {Action arBURST AxiDefines::AxiBurst {{(* ports = ["ARBURST"] *)} {(* result = "unusedrs5" *)} {(* prefix = "" *)}}}} {method {Action arLOCK Axi4Defines::Axi4Lock {{(* ports = ["ARLOCK"] *)} {(* result = "unusedrs6" *)} {(* prefix = "" *)}}}} {method {Action arCACHE Axi4Defines::Axi4Cache {{(* ports = ["ARCACHE"] *)} {(* result = "unusedrs7" *)} {(* prefix = "" *)}}}} {method {Action arPROT AxiDefines::AxiProt {{(* ports = ["ARPROT"] *)} {(* result = "unusedrs8" *)} {(* prefix = "" *)}}}} {method {Action arQOS Bit#(4) {{(* ports = ["ARQOS"] *)} {(* result = "unusedws9" *)} {(* prefix = "" *)}}}} {method {Action arVALID Bool {{(* ports = ["ARVALID"] *)} {(* result = "unusedrs10" *)} {(* prefix = "" *)}}}} {method {Bool arREADY {} {{(* ports = [] *)} {(* result = "ARREADY" *)}}}} {method {Action rREADY Bool {{(* ports = ["RREADY"] *)} {(* result = "unusedrs11" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) rID {} {{(* ports = [] *)} {(* result = "RID" *)}}}} {method {Bit#(data_size) rDATA {} {{(* ports = [] *)} {(* result = "RDATA" *)}}}} {method {AxiDefines::AxiResp rRESP {} {{(* ports = [] *)} {(* result = "RRESP" *)}}}} {method {Bit#(user_size) rUSER {} {{(* ports = [] *)} {(* result = "RUSER" *)}}}} {method {Bool rLAST {} {{(* ports = [] *)} {(* result = "RLAST" *)}}}} {method {Bool rVALID {} {{(* ports = [] *)} {(* result = "RVALID" *)}}}}}} {position {Axi4Defines.bsv 367 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4RdBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 423 11}}
Interface {Axi4Defines::Axi4WrBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusRecv#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 428 11}}
Interface {Axi4Defines::Axi4RdBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 434 11}}
Interface {Axi4Defines::Axi4WrBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusSend#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 439 11}}
Interface {Axi4Defines::Axi4RdFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 449 11}}
Interface {Axi4Defines::Axi4RdFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4Defines.bsv 454 11}}
Interface {Axi4Defines::Axi4WrFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 460 11}}
Interface {Axi4Defines::Axi4WrFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4Defines.bsv 465 11}}
Interface {Axi4Defines::Axi4RdMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 471 11}}
Interface {Axi4Defines::Axi4WrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 477 11}}
Interface {Axi4Defines::Axi4RdSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 483 11}}
Interface {Axi4Defines::Axi4WrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 489 11}}
Interface {Axi4Defines::Axi4RdWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 499 11}}
Interface {Axi4Defines::Axi4RdWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 507 11}}
Interface {Axi4Defines::Axi4RdWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 515 11}}
Interface {Axi4Defines::Axi4RdWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 522 11}}
Typeclass {Axi4Defines::ToAxi4#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(b) f(a x1)   provisos (IsModule#(c, d))} toAxi4}}} {instances {{Axi4Defines::ToAxi4#(AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4Defines.bsv 774 11}}

Interface {Axi4LPC::Axi4LPC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action aw_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action aw_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action aw_valid Bool {{(* ports = ["value"] *)}}}} {method {Action aw_ready Bool {{(* ports = ["value"] *)}}}} {method {Action w_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action w_strb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["value"] *)}}}} {method {Action w_valid Bool {{(* ports = ["value"] *)}}}} {method {Action w_ready Bool {{(* ports = ["value"] *)}}}} {method {Action b_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action b_valid Bool {{(* ports = ["value"] *)}}}} {method {Action b_ready Bool {{(* ports = ["value"] *)}}}} {method {Action ar_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action ar_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action ar_valid Bool {{(* ports = ["value"] *)}}}} {method {Action ar_ready Bool {{(* ports = ["value"] *)}}}} {method {Action r_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action r_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action r_valid Bool {{(* ports = ["value"] *)}}}} {method {Action r_ready Bool {{(* ports = ["value"] *)}}}}}} {position {Axi4LPC.bsv 384 11}}
Struct Axi4LPC::Axi4LPCParams {members {{Int#(32) maxwaits {width 32}}}} {width 32} {position {Axi4LPC.bsv 416 19}}

Alias {ApbDefines::ApbAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {ApbDefines.bsv 32 46}}
Alias {ApbDefines::ApbData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {ApbDefines.bsv 33 46}}
Alias {ApbDefines::ApbByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {ApbDefines.bsv 34 46}}
Enum ApbDefines::ApbWrite {members {READ WRITE}} {width 1} {position {ApbDefines.bsv 36 30}}
Struct ApbDefines::ApbProt {members {{TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMPrivilege privilege {width 1}}}} {width 3} {position {ApbDefines.bsv 42 19}}
Struct {ApbDefines::ApbCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{ApbDefines::ApbWrite command {width 1}} {Bit#(addr_size) addr} {ApbDefines::ApbProt prot {width 3}}}} {position {ApbDefines.bsv 48 3}}
Struct {ApbDefines::ApbRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size)} ctrl} {{Bit#(TDiv#(data_size, 8))} strb} {Bit#(data_size) data}}} {position {ApbDefines.bsv 62 3}}
Struct {ApbDefines::ApbResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bool error {width 1}} {Bit#(data_size) data}}} {position {ApbDefines.bsv 75 3}}
Interface {ApbDefines::ApbMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) paddr {} {{(* ports = [] *)} {(* result = "PADDR" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbProt pprot {} {{(* ports = [] *)} {(* result = "PPROT" *)} {(* prefix = "" *)}}}} {method {Bool penable {} {{(* ports = [] *)} {(* result = "PENABLE" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbWrite pwrite {} {{(* ports = [] *)} {(* result = "PWRITE" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) pwdata {} {{(* ports = [] *)} {(* result = "PWDATA" *)} {(* prefix = "" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} pstrb {} {{(* ports = [] *)} {(* result = "PSTRB" *)} {(* prefix = "" *)}}}} {method {Bool psel {} {{(* ports = [] *)} {(* result = "PSEL" *)} {(* prefix = "" *)}}}} {method {Action pready Bool {{(* ports = ["PREADY"] *)} {(* prefix = "" *)}}}} {method {Action prdata Bit#(data_size) {{(* ports = ["PRDATA"] *)} {(* prefix = "" *)}}}} {method {Action pslverr Bool {{(* ports = ["PSLVERR"] *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 88 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action paddr Bit#(addr_size) {{(* ports = ["PADDR"] *)} {(* prefix = "" *)}}}} {method {Action pprot ApbDefines::ApbProt {{(* ports = ["PPROT"] *)} {(* prefix = "" *)}}}} {method {Action penable Bool {{(* ports = ["PENABLE"] *)} {(* prefix = "" *)}}}} {method {Action pwrite ApbDefines::ApbWrite {{(* ports = ["PWRITE"] *)} {(* prefix = "" *)}}}} {method {Action pwdata Bit#(data_size) {{(* ports = ["PWDATA"] *)} {(* prefix = "" *)}}}} {method {Action pstrb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["PSTRB"] *)} {(* prefix = "" *)}}}} {method {Action psel Bool {{(* ports = ["PSEL"] *)} {(* prefix = "" *)}}}} {method {Bool pready {} {{(* ports = [] *)} {(* result = "PREADY" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) prdata {} {{(* ports = [] *)} {(* result = "PRDATA" *)} {(* prefix = "" *)}}}} {method {Bool pslverr {} {{(* ports = [] *)} {(* result = "PSLVERR" *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 122 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bool pready {} {{(* ports = [] *)} {(* result = "PREADY" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) prdata {} {{(* ports = [] *)} {(* result = "PRDATA" *)} {(* prefix = "" *)}}}} {method {Bool pslverr {} {{(* ports = [] *)} {(* result = "PSLVERR" *)} {(* prefix = "" *)}}}} {method {Action paddr Bit#(addr_size) {{(* ports = ["PADDR"] *)} {(* prefix = "" *)}}}} {method {Action pprot ApbDefines::ApbProt {{(* ports = ["PPROT"] *)} {(* prefix = "" *)}}}} {method {Action penable Bool {{(* ports = ["PENABLE"] *)} {(* prefix = "" *)}}}} {method {Action pwrite ApbDefines::ApbWrite {{(* ports = ["PWRITE"] *)} {(* prefix = "" *)}}}} {method {Action pwdata Bit#(data_size) {{(* ports = ["PWDATA"] *)} {(* prefix = "" *)}}}} {method {Action pstrb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["PSTRB"] *)} {(* prefix = "" *)}}}} {method {Action psel Bool {{(* ports = ["PSEL"] *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 152 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action pready Bool {{(* ports = ["PREADY"] *)} {(* prefix = "" *)}}}} {method {Action prdata Bit#(data_size) {{(* ports = ["PRDATA"] *)} {(* prefix = "" *)}}}} {method {Action pslverr Bool {{(* ports = ["PSLVERR"] *)} {(* prefix = "" *)}}}} {method {Bit#(addr_size) paddr {} {{(* ports = [] *)} {(* result = "PADDR" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbProt pprot {} {{(* ports = [] *)} {(* result = "PPROT" *)} {(* prefix = "" *)}}}} {method {Bool penable {} {{(* ports = [] *)} {(* result = "PENABLE" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbWrite pwrite {} {{(* ports = [] *)} {(* result = "PWRITE" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) pwdata {} {{(* ports = [] *)} {(* result = "PWDATA" *)} {(* prefix = "" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} pstrb {} {{(* ports = [] *)} {(* result = "PSTRB" *)} {(* prefix = "" *)}}}} {method {Bool psel {} {{(* ports = [] *)} {(* result = "PSEL" *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 182 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbXtorMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 219 11}}
Interface {ApbDefines::ApbXtorSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 224 11}}
Interface {ApbDefines::ApbXtorSlaveWM#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["x"] *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 229 11}}
Interface {ApbDefines::ApbXtorMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbMasterDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 239 11}}
Interface {ApbDefines::ApbXtorSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 244 11}}
Interface {ApbDefines::ApbXtorMasterConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} master {}} {interface {ApbDefines::ApbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {ApbDefines.bsv 249 11}}
Interface {ApbDefines::ApbXtorSlaveConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} slave {}} {interface {ApbDefines::ApbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {ApbDefines.bsv 254 11}}
Interface {ApbDefines::ApbBus#(numeric type s, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)} master {}} {method {{Vector::Vector#(s, ApbDefines::ApbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))} slaves {} {}}}}} {position {ApbDefines.bsv 259 11}}
Interface {ApbDefines::ApbMasterXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 267 11}}
Interface {ApbDefines::ApbSlaveXActorWM#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 273 11}}
Interface {ApbDefines::ApbSlaveXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 279 11}}
Interface {ApbDefines::ApbSlaveMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {ApbDefines::ApbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {ApbDefines.bsv 514 11}}
Interface {ApbDefines::ApbMasterMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {ApbDefines::ApbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {ApbDefines.bsv 519 11}}
Interface {ApbDefines::ApbInfo#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bool update {} {{(* ports = [] *)}}}}}} {position {ApbDefines.bsv 525 11}} {attributes {{(* always_ready  *)}}}
Typeclass {ApbDefines::Convert#(type a, type b)} {members {{{function b f(a x1)} convert}}} {instances {{ApbDefines::Convert#(ApbDefines::ApbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size))} {ApbDefines::Convert#(ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {position {ApbDefines.bsv 546 11}}
Enum ApbSlave::ApbState {members {IDLE SETUP ACCESS}} {width 2} {position {ApbSlave.bsv 38 3}}
Interface {ApbSlave::ApbSlaveIFC#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {}} {interface {GetPut::Put#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size))} response {}} {interface {ReadOnly#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size))} request {}} {interface ReadOnly#(Bool) penable {}} {interface ReadOnly#(Bool) psel {}}}} {position {ApbSlave.bsv 43 11}}

Enum ApbSlave::ApbState {members {IDLE SETUP ACCESS}} {width 2} {position {ApbSlave.bsv 38 3}}
Interface {ApbSlave::ApbSlaveIFC#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {}} {interface {GetPut::Put#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size))} response {}} {interface {ReadOnly#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size))} request {}} {interface ReadOnly#(Bool) penable {}} {interface ReadOnly#(Bool) psel {}}}} {position {ApbSlave.bsv 43 11}}
Alias {ApbDefines::ApbAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {ApbDefines.bsv 32 46}}
Alias {ApbDefines::ApbData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {ApbDefines.bsv 33 46}}
Alias {ApbDefines::ApbByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {ApbDefines.bsv 34 46}}
Enum ApbDefines::ApbWrite {members {READ WRITE}} {width 1} {position {ApbDefines.bsv 36 30}}
Struct ApbDefines::ApbProt {members {{TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMPrivilege privilege {width 1}}}} {width 3} {position {ApbDefines.bsv 42 19}}
Struct {ApbDefines::ApbCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{ApbDefines::ApbWrite command {width 1}} {Bit#(addr_size) addr} {ApbDefines::ApbProt prot {width 3}}}} {position {ApbDefines.bsv 48 3}}
Struct {ApbDefines::ApbRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size)} ctrl} {{Bit#(TDiv#(data_size, 8))} strb} {Bit#(data_size) data}}} {position {ApbDefines.bsv 62 3}}
Struct {ApbDefines::ApbResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bool error {width 1}} {Bit#(data_size) data}}} {position {ApbDefines.bsv 75 3}}
Interface {ApbDefines::ApbMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) paddr {} {{(* ports = [] *)} {(* result = "PADDR" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbProt pprot {} {{(* ports = [] *)} {(* result = "PPROT" *)} {(* prefix = "" *)}}}} {method {Bool penable {} {{(* ports = [] *)} {(* result = "PENABLE" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbWrite pwrite {} {{(* ports = [] *)} {(* result = "PWRITE" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) pwdata {} {{(* ports = [] *)} {(* result = "PWDATA" *)} {(* prefix = "" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} pstrb {} {{(* ports = [] *)} {(* result = "PSTRB" *)} {(* prefix = "" *)}}}} {method {Bool psel {} {{(* ports = [] *)} {(* result = "PSEL" *)} {(* prefix = "" *)}}}} {method {Action pready Bool {{(* ports = ["PREADY"] *)} {(* prefix = "" *)}}}} {method {Action prdata Bit#(data_size) {{(* ports = ["PRDATA"] *)} {(* prefix = "" *)}}}} {method {Action pslverr Bool {{(* ports = ["PSLVERR"] *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 88 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action paddr Bit#(addr_size) {{(* ports = ["PADDR"] *)} {(* prefix = "" *)}}}} {method {Action pprot ApbDefines::ApbProt {{(* ports = ["PPROT"] *)} {(* prefix = "" *)}}}} {method {Action penable Bool {{(* ports = ["PENABLE"] *)} {(* prefix = "" *)}}}} {method {Action pwrite ApbDefines::ApbWrite {{(* ports = ["PWRITE"] *)} {(* prefix = "" *)}}}} {method {Action pwdata Bit#(data_size) {{(* ports = ["PWDATA"] *)} {(* prefix = "" *)}}}} {method {Action pstrb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["PSTRB"] *)} {(* prefix = "" *)}}}} {method {Action psel Bool {{(* ports = ["PSEL"] *)} {(* prefix = "" *)}}}} {method {Bool pready {} {{(* ports = [] *)} {(* result = "PREADY" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) prdata {} {{(* ports = [] *)} {(* result = "PRDATA" *)} {(* prefix = "" *)}}}} {method {Bool pslverr {} {{(* ports = [] *)} {(* result = "PSLVERR" *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 122 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bool pready {} {{(* ports = [] *)} {(* result = "PREADY" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) prdata {} {{(* ports = [] *)} {(* result = "PRDATA" *)} {(* prefix = "" *)}}}} {method {Bool pslverr {} {{(* ports = [] *)} {(* result = "PSLVERR" *)} {(* prefix = "" *)}}}} {method {Action paddr Bit#(addr_size) {{(* ports = ["PADDR"] *)} {(* prefix = "" *)}}}} {method {Action pprot ApbDefines::ApbProt {{(* ports = ["PPROT"] *)} {(* prefix = "" *)}}}} {method {Action penable Bool {{(* ports = ["PENABLE"] *)} {(* prefix = "" *)}}}} {method {Action pwrite ApbDefines::ApbWrite {{(* ports = ["PWRITE"] *)} {(* prefix = "" *)}}}} {method {Action pwdata Bit#(data_size) {{(* ports = ["PWDATA"] *)} {(* prefix = "" *)}}}} {method {Action pstrb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["PSTRB"] *)} {(* prefix = "" *)}}}} {method {Action psel Bool {{(* ports = ["PSEL"] *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 152 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action pready Bool {{(* ports = ["PREADY"] *)} {(* prefix = "" *)}}}} {method {Action prdata Bit#(data_size) {{(* ports = ["PRDATA"] *)} {(* prefix = "" *)}}}} {method {Action pslverr Bool {{(* ports = ["PSLVERR"] *)} {(* prefix = "" *)}}}} {method {Bit#(addr_size) paddr {} {{(* ports = [] *)} {(* result = "PADDR" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbProt pprot {} {{(* ports = [] *)} {(* result = "PPROT" *)} {(* prefix = "" *)}}}} {method {Bool penable {} {{(* ports = [] *)} {(* result = "PENABLE" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbWrite pwrite {} {{(* ports = [] *)} {(* result = "PWRITE" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) pwdata {} {{(* ports = [] *)} {(* result = "PWDATA" *)} {(* prefix = "" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} pstrb {} {{(* ports = [] *)} {(* result = "PSTRB" *)} {(* prefix = "" *)}}}} {method {Bool psel {} {{(* ports = [] *)} {(* result = "PSEL" *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 182 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbXtorMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 219 11}}
Interface {ApbDefines::ApbXtorSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 224 11}}
Interface {ApbDefines::ApbXtorSlaveWM#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["x"] *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 229 11}}
Interface {ApbDefines::ApbXtorMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbMasterDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 239 11}}
Interface {ApbDefines::ApbXtorSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 244 11}}
Interface {ApbDefines::ApbXtorMasterConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} master {}} {interface {ApbDefines::ApbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {ApbDefines.bsv 249 11}}
Interface {ApbDefines::ApbXtorSlaveConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} slave {}} {interface {ApbDefines::ApbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {ApbDefines.bsv 254 11}}
Interface {ApbDefines::ApbBus#(numeric type s, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)} master {}} {method {{Vector::Vector#(s, ApbDefines::ApbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))} slaves {} {}}}}} {position {ApbDefines.bsv 259 11}}
Interface {ApbDefines::ApbMasterXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 267 11}}
Interface {ApbDefines::ApbSlaveXActorWM#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 273 11}}
Interface {ApbDefines::ApbSlaveXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 279 11}}
Interface {ApbDefines::ApbSlaveMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {ApbDefines::ApbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {ApbDefines.bsv 514 11}}
Interface {ApbDefines::ApbMasterMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {ApbDefines::ApbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {ApbDefines.bsv 519 11}}
Interface {ApbDefines::ApbInfo#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bool update {} {{(* ports = [] *)}}}}}} {position {ApbDefines.bsv 525 11}} {attributes {{(* always_ready  *)}}}
Typeclass {ApbDefines::Convert#(type a, type b)} {members {{{function b f(a x1)} convert}}} {instances {{ApbDefines::Convert#(ApbDefines::ApbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size))} {ApbDefines::Convert#(ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {position {ApbDefines.bsv 546 11}}
Interface {COBS::COBSEncoder#(numeric type n)} polymorphic {members {{interface {GetPut::Put#(Tuple2#(UInt#(TLog#(TAdd#(1, n))), Vector::Vector#(n, Bit#(8))))} msg {}} {interface GetPut::Get#(Bit#(8)) byte {}}}} {position {COBS.bs 10 11}}
Interface {COBS::COBSDecoder#(numeric type n)} polymorphic {members {{interface {GetPut::Get#(Tuple2#(UInt#(TLog#(TAdd#(1, n))), Vector::Vector#(n, Bit#(8))))} msg {}} {interface GetPut::Put#(Bit#(8)) byte {}}}} {position {COBS.bs 69 11}}
Interface XilinxCells::DiffClock {members {{interface Clock p {}} {interface Clock n {}}}} {position {XilinxCells.bsv 911 11}}
Struct AlteraCells::AlteraClockGenParams {members {{String device_family} {Integer clkin_period_ps} {Integer clk0_div} {Integer clk0_duty_cycle} {String clk0_phase_shift} {Integer clk0_mul} {Integer clk1_div} {Integer clk1_duty_cycle} {String clk1_phase_shift} {Integer clk1_mul} {Integer clk2_div} {Integer clk2_duty_cycle} {String clk2_phase_shift} {Integer clk2_mul} {Integer clk3_div} {Integer clk3_duty_cycle} {String clk3_phase_shift} {Integer clk3_mul} {Integer clk4_div} {Integer clk4_duty_cycle} {String clk4_phase_shift} {Integer clk4_mul} {Integer clk5_div} {Integer clk5_duty_cycle} {String clk5_phase_shift} {Integer clk5_mul} {Integer clk6_div} {Integer clk6_duty_cycle} {String clk6_phase_shift} {Integer clk6_mul} {Integer clk7_div} {Integer clk7_duty_cycle} {String clk7_phase_shift} {Integer clk7_mul} {Integer clk8_div} {Integer clk8_duty_cycle} {String clk8_phase_shift} {Integer clk8_mul} {Integer clk9_div} {Integer clk9_duty_cycle} {String clk9_phase_shift} {Integer clk9_mul}}} {position {AlteraCells.bsv 93 3}}
Interface AlteraCells::AlteraClockGen {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {interface Clock clkout7 {}} {interface Clock clkout8 {}} {interface Clock clkout9 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {AlteraCells.bsv 142 11}}
Struct {XilinxCells::ODDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init} {String srtype}}} {position {XilinxCells.bsv 954 6}}
Interface {XilinxCells::ODDR#(type a)} polymorphic {members {{method {a q {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d1 a {{(* ports = ["i"] *)}}}} {method {Action d2 a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 966 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {XilinxCells::IDDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init_q1} {a init_q2} {String srtype}}} {position {XilinxCells.bsv 1093 6}}
Interface {XilinxCells::IDDR#(type a)} polymorphic {members {{method {a q1 {} {{(* ports = [] *)}}}} {method {a q2 {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 1115 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxCells::DiffClock {members {{interface Clock p {}} {interface Clock n {}}}} {position {XilinxCells.bsv 911 11}}
Struct AlteraCells::AlteraClockGenParams {members {{String device_family} {Integer clkin_period_ps} {Integer clk0_div} {Integer clk0_duty_cycle} {String clk0_phase_shift} {Integer clk0_mul} {Integer clk1_div} {Integer clk1_duty_cycle} {String clk1_phase_shift} {Integer clk1_mul} {Integer clk2_div} {Integer clk2_duty_cycle} {String clk2_phase_shift} {Integer clk2_mul} {Integer clk3_div} {Integer clk3_duty_cycle} {String clk3_phase_shift} {Integer clk3_mul} {Integer clk4_div} {Integer clk4_duty_cycle} {String clk4_phase_shift} {Integer clk4_mul} {Integer clk5_div} {Integer clk5_duty_cycle} {String clk5_phase_shift} {Integer clk5_mul} {Integer clk6_div} {Integer clk6_duty_cycle} {String clk6_phase_shift} {Integer clk6_mul} {Integer clk7_div} {Integer clk7_duty_cycle} {String clk7_phase_shift} {Integer clk7_mul} {Integer clk8_div} {Integer clk8_duty_cycle} {String clk8_phase_shift} {Integer clk8_mul} {Integer clk9_div} {Integer clk9_duty_cycle} {String clk9_phase_shift} {Integer clk9_mul}}} {position {AlteraCells.bsv 93 3}}
Interface AlteraCells::AlteraClockGen {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {interface Clock clkout7 {}} {interface Clock clkout8 {}} {interface Clock clkout9 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {AlteraCells.bsv 142 11}}
Struct {XilinxCells::ODDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init} {String srtype}}} {position {XilinxCells.bsv 954 6}}
Interface {XilinxCells::ODDR#(type a)} polymorphic {members {{method {a q {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d1 a {{(* ports = ["i"] *)}}}} {method {Action d2 a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 966 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {XilinxCells::IDDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init_q1} {a init_q2} {String srtype}}} {position {XilinxCells.bsv 1093 6}}
Interface {XilinxCells::IDDR#(type a)} polymorphic {members {{method {a q1 {} {{(* ports = [] *)}}}} {method {a q2 {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 1115 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct AlteraCells::LVDSTX {members {{String registered_input} {String multi_clock} {Integer inclock_period_ps} {String center_align_msb} {String intended_device_family} {Integer output_data_rate} {String inclock_data_alignment} {String outclock_alignment} {String common_rx_tx_pll} {String outclock_resource} {String use_external_pll} {String implement_in_les} {Integer preemphasis_setting} {Integer vod_setting} {Integer differential_drive} {Integer outclock_multiply_by} {Integer coreclock_divide_by} {Integer outclock_duty_cycle} {Integer inclock_phase_shift} {Integer outclock_phase_shift} {String use_no_phase_shift} {String pll_self_reset_on_loss_lock} {String refclk_frequency} {String data_rate} {String lpm_type} {String lpm_hint} {String clk_src_is_pll}}} {position {AlteraCells.bsv 524 3}}
Interface {AlteraCells::SERDES_TX#(type in, type out)} polymorphic {members {{interface Clock coreclk {}} {interface Clock outclk {}} {method {Action pins_in in {{(* ports = ["x"] *)}}}} {method {out pins_out {} {{(* ports = [] *)}}}} {method {Bool locked {} {{(* ports = [] *)}}}}}} {position {AlteraCells.bsv 559 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct AlteraCells::LVDSRX {members {{String registered_output} {Integer inclock_period_ps} {String cds_mode} {String intended_device_family} {Integer input_data_rate} {String inclock_data_alignment} {String registered_data_align_input} {String common_rx_tx_pll} {String enable_dpa_mode} {String enable_dpa_calibration} {String enable_dpa_pll_calibration} {String enable_dpa_fifo} {String use_dpll_rawperror} {String use_coreclock_input} {Integer dpll_lock_count} {Integer dpll_lock_window} {String outclock_resource} {String lose_lock_on_one_change} {String reset_fifo_at_first_lock} {String use_external_pll} {String implement_in_les} {String buffer_implementation} {String port_rx_data_align} {String port_rx_channel_data_align} {String pll_operation_mode} {String x_on_bitslip} {String use_no_phase_shift} {String rx_align_data_reg} {Integer inclock_phase_shift} {String enable_soft_cdr_mode} {Integer sim_dpa_output_clock_phase_shift} {String sim_dpa_is_negative_ppm_drift} {Integer sim_dpa_net_ppm_variation} {String enable_dpa_align_to_rising_edge_only} {String enable_dpa_initial_phase_selection} {Integer dpa_initial_phase_value} {String pll_self_reset_on_loss_lock} {String refclk_frequency} {String enable_clock_pin_mode} {String data_rate} {String lpm_hint} {String lpm_type}}} {position {AlteraCells.bsv 697 3}}
Interface {AlteraCells::SERDES_RX#(type in, type out)} polymorphic {members {{interface Clock outclk {}} {method {Action pins_in in {{(* ports = ["x"] *)}}}} {method {out pins_out {} {{(* ports = [] *)}}}} {method {Bool locked {} {{(* ports = [] *)}}}}}} {position {AlteraCells.bsv 747 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Alias ClkCtrlServer::ClkCtrlCycleStamp Bit#(64) {position {ClkCtrlServer.bsv 13 18}}
Alias ClkCtrlServer::EdgeCount Bit#(30) {position {ClkCtrlServer.bsv 23 18}}
TaggedUnion ClkCtrlServer::ClkCtrlReq {members {{Bit#(30) Edges {width 30}} {void Query {width 0}} {void Stop {width 0}} {void Resume {width 0}}}} {width 32} {position {ClkCtrlServer.bsv 30 3}}
Struct ClkCtrlServer::ClkCtrlResp {members {{Bit#(64) cycle {width 64}} {Bool running {width 1}} {Bool free_running {width 1}} {Bit#(30) edges {width 30}}}} {width 96} {position {ClkCtrlServer.bsv 37 3}}
Interface ClkCtrlServer::ClkCtrlServerCore {members {{interface GetPut::Put#(ClkCtrlServer::ClkCtrlReq) cmd {}} {interface GetPut::GetS#(ClkCtrlServer::ClkCtrlResp) status {}} {method {Action preedge Bool {{(* ports = ["val"] *)} {(* always_enabled  *)}}}} {method {Bool allow_edge {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {ClkCtrlServer.bsv 41 11}}
Interface ClkCtrlServer::ClkCtrlServerWithCClk {members {{interface GetPut::Put#(Bit#(32)) rx {}} {interface GetPut::Get#(Bit#(32)) tx {}} {method {Action preedge Bool {{(* ports = ["val"] *)} {(* always_enabled  *)}}}} {method {Bool allow_edge {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {ClkCtrlServer.bsv 51 11}}
Interface ClkCtrlServer::ClkCtrlServer {members {{interface GetPut::Put#(Bit#(32)) rx {}} {interface GetPut::Get#(Bit#(32)) tx {}} {interface Clock cclk {}} {interface Reset crst {}}}} {position {ClkCtrlServer.bsv 61 11}}
Alias PCIE::DWAddress Bit#(30) {position {PCIE.bsv 31 26}}
Alias PCIE::DWAddress64 Bit#(62) {position {PCIE.bsv 32 26}}
Alias CacheCore::Offset Bit#(3) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 98 28}}
Alias PCIE::BusNumber Bit#(8) {position {PCIE.bsv 34 26}}
Alias PCIE::DevNumber Bit#(5) {position {PCIE.bsv 35 26}}
Alias PCIE::FuncNumber Bit#(3) {position {PCIE.bsv 36 26}}
Alias PCIE::TLPLength Bit#(10) {position {PCIE.bsv 38 26}}
Alias PCIE::TLPFirstDWBE Bit#(4) {position {PCIE.bsv 39 26}}
Alias PCIE::TLPLastDWBE Bit#(4) {position {PCIE.bsv 40 26}}
Alias PCIE::TLPTag Bit#(8) {position {PCIE.bsv 41 26}}
Alias PCIE::TLPLowerAddr Bit#(7) {position {PCIE.bsv 42 26}}
Alias PCIE::TLPByteCount Bit#(12) {position {PCIE.bsv 43 26}}
Alias PCIE::TLPRegNum Bit#(10) {position {PCIE.bsv 44 26}}
Alias PCIE::DWCount Bit#(11) {position {PCIE.bsv 46 26}}
Alias PCIE::ByteCount Bit#(13) {position {PCIE.bsv 47 26}}
Struct {PCIE::TLPData#(numeric type bytes)} polymorphic {members {{Bool sof {width 1}} {Bool eof {width 1}} {Bit#(7) hit {width 7}} {Bit#(bytes) be} {{Bit#(TMul#(bytes, 8))} data}}} {position {PCIE.bsv 55 3}}
Enum PCIE::TLPAttrIDBasedOrdering {members {DEFAULT_ORDERING ID_BASED_ORDERING}} {width 1} {position {PCIE.bsv 71 6}}
Enum PCIE::TLPAttrRelaxedOrdering {members {STRICT_ORDERING RELAXED_ORDERING}} {width 1} {position {PCIE.bsv 76 6}}
Enum PCIE::TLPAttrNoSnoop {members {SNOOPING_REQD NO_SNOOPING_REQD}} {width 1} {position {PCIE.bsv 81 6}}
Enum PCIE::TLPPoison {members {NOT_POISONED POISONED}} {width 1} {position {PCIE.bsv 86 6}}
Enum PCIE::TLPDigest {members {NO_DIGEST_PRESENT DIGEST_PRESENT}} {width 1} {position {PCIE.bsv 91 6}}
Enum PCIE::TLPTrafficClass {members {TRAFFIC_CLASS_0 TRAFFIC_CLASS_1 TRAFFIC_CLASS_2 TRAFFIC_CLASS_3 TRAFFIC_CLASS_4 TRAFFIC_CLASS_5 TRAFFIC_CLASS_6 TRAFFIC_CLASS_7}} {width 3} {position {PCIE.bsv 102 6}}
Enum PCIE::TLPPacketType {members {MEMORY_READ_WRITE MEMORY_READ_LOCKED IO_REQUEST UNKNOWN_TYPE_3 CONFIG_0_READ_WRITE CONFIG_1_READ_WRITE UNKNOWN_TYPE_6 UNKNOWN_TYPE_7 UNKNOWN_TYPE_8 UNKNOWN_TYPE_9 COMPLETION COMPLETION_LOCKED UNKNOWN_TYPE_12 UNKNOWN_TYPE_13 UNKNOWN_TYPE_14 UNKNOWN_TYPE_15 MSG_ROUTED_TO_ROOT MSG_ROUTED_BY_ADDR MSG_ROUTED_BY_ID MSG_ROOT_BROADCAST MSG_LOCAL MSG_GATHER UNKNOWN_TYPE_22 UNKNOWN_TYPE_23 UNKNOWN_TYPE_24 UNKNOWN_TYPE_25 UNKNOWN_TYPE_26 UNKNOWN_TYPE_27 UNKNOWN_TYPE_28 UNKNOWN_TYPE_29 UNKNOWN_TYPE_30 UNKNOWN_TYPE_31}} {width 5} {position {PCIE.bsv 137 6}}
Enum PCIE::TLPPacketFormat {members {MEM_READ_3DW_NO_DATA MEM_READ_4DW_NO_DATA MEM_WRITE_3DW_DATA MEM_WRITE_4DW_DATA}} {width 2} {position {PCIE.bsv 144 6}}
Enum PCIE::TLPCompletionStatus {members {SUCCESSFUL_COMPLETION UNSUPPORTED_REQUEST CONFIG_REQ_RETRY_STATUS UNKNOWN_STATUS_3 COMPLETER_ABORT UNKNOWN_STATUS_5 UNKNOWN_STATUS_6 UNKNOWN_STATUS_7}} {width 3} {position {PCIE.bsv 155 6}}
Enum PCIE::TLPByteCountModified {members {BYTE_COUNT_ORIGINAL BYTE_COUNT_MODIFIED}} {width 1} {position {PCIE.bsv 160 6}}
Enum PCIE::TLPAddressType {members {DEFAULT_UNTRANSLATED TRANSLATION_REQUEST TRANSLATED RESERVED}} {width 2} {position {PCIE.bsv 167 6}}
Enum PCIE::MSIInterruptCode {members {ASSERT_INTA ASSERT_INTB ASSERT_INTC ASSERT_INTD DEASSERT_INTA DEASSERT_INTB DEASSERT_INTC DEASSERT_INTD}} {width 3} {position {PCIE.bsv 178 6}}
Enum PCIE::MSIPowerMgtCode {members {UNKNOWN_CODE_0 UNKNOWN_CODE_1 UNKNOWN_CODE_2 UNKNOWN_CODE_3 PM_ACTIVE_STATE_NAK UNKNOWN_CODE_5 UNKNOWN_CODE_6 UNKNOWN_CODE_7 PM_PME PM_TURN_OFF UNKNOWN_CODE_10 PME_TO_ACK UNKNOWN_CODE_12 UNKNOWN_CODE_13 UNKNOWN_CODE_14 UNKNOWN_CODE_15}} {width 4} {position {PCIE.bsv 197 6}}
Enum PCIE::MSIErrorCode {members {ERR_COR ERR_NONFATAL UNKNOWN_ERR_2 ERR_FATAL}} {width 2} {position {PCIE.bsv 204 6}}
Enum PCIE::MSIHotPlugCode {members {ATTN_INDICATOR_OFF ATTN_INDICATOR_ON UNKNOWN_CODE_2 ATTN_INDICATOR_BLINK POWER_INDICATOR_OFF POWER_INDICATOR_ON UNKNOWN_CODE_6 POWER_INDICATOR_BLINK ATTN_BUTTON_PRESSED UNKNOWN_CODE_9 UNKNOWN_CODE_10 UNKNOWN_CODE_11 UNKNOWN_CODE_12 UNKNOWN_CODE_13 UNKNOWN_CODE_14 UNKNOWN_CODE_15}} {width 4} {position {PCIE.bsv 223 6}}
TaggedUnion PCIE::TLPMessageCode {members {{void Unlock {width 0}} {PCIE::MSIPowerMgtCode PowerManagement {width 4}} {PCIE::MSIInterruptCode Interrupt {width 3}} {PCIE::MSIErrorCode Error {width 2}} {PCIE::MSIHotPlugCode HotPlug {width 4}} {void SlotPower {width 0}} {void VendorType0 {width 0}} {void VendorType1 {width 0}}}} {width 8} {position {PCIE.bsv 234 6}}
Struct PCIE::PciId {members {{Bit#(8) bus {width 8}} {Bit#(5) dev {width 5}} {Bit#(3) func {width 3}}}} {width 16} {position {PCIE.bsv 270 6}}
Enum PCIE::FlowControlInfoSelect {members {RECEIVE_BUFFER_AVAILABLE_SPACE RECEIVE_CREDITS_GRANTED RECEIVE_CREDITS_CONSUMED UNKNOWN_3 TRANSMIT_USER_CREDITS_AVAIALBE TRANSMIT_CREDIT_LIMIT TRANSMIT_CREDITS_CONSUMED UNKNOWN_7}} {width 3} {position {PCIE.bsv 290 6}}
Struct PCIE::PCIEParams {members {{Bool fast_train_sim_only {width 1}} {Real clock_period}}} {position {PCIE.bsv 295 6}}
Enum PCIE::BARAperture {members {APERTURE_128B APERTURE_256B APERTURE_512B APERTURE_1K APERTURE_2K APERTURE_4K APERTURE_8K APERTURE_16K APERTURE_32K APERTURE_64K APERTURE_128K APERTURE_256K APERTURE_512K APERTURE_1M APERTURE_2M APERTURE_4M APERTURE_8M APERTURE_16M APERTURE_32M APERTURE_64M APERTURE_128M APERTURE_256M APERTURE_512M APERTURE_1G APERTURE_2G APERTURE_4G APERTURE_8G APERTURE_16G APERTURE_32G APERTURE_64G APERTURE_128G APERTURE_256G APERTURE_512G APERTURE_1E APERTURE_2E}} {width 6} {position {PCIE.bsv 341 3}}
Enum PCIE::BARID {members {BAR0 BAR1 BAR2 BAR3 BAR4 BAR5 EXPANSION_ROM}} {width 3} {position {PCIE.bsv 351 6}}
Enum PCIE::TargetFunction {members {PF0 PF1 VF0 VF1 VF2 VF3 VF4 VF5 LAST}} {width 8} {position {PCIE.bsv 363 6}}
Enum PCIE::RequestType {members {MEMORY_READ MEMORY_WRITE IO_READ IO_WRITE MEMORY_FETCH_ADD MEMORY_UNCOND_SWAP MEMORY_COMP_SWAP LOCKED_READ TYPE0_CFG_READ TYPE1_CFG_READ TYPE0_CFG_WRITE TYPE1_CFG_WRITE NOT_VEND_ATS_MESSAGE VENDOR_MESSAGE ATS_MESSAGE RESERVED}} {width 4} {position {PCIE.bsv 382 6}}
Enum PCIE::ErrorCode {members {NORMAL_TERMINATION COMPLETION_POISONED TERMINATED_UR_CA_CRS NO_DATA_OR_HIGH_BYTECNT SAME_TAG START_ADDRESS INVALID_TAG FUNCTION_LEVEL_RESET TIMEOUT}} {width 4} {position {PCIE.bsv 394 3}}
Struct PCIE::TLPMemoryIO3DWHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {Bit#(4) lastbe {width 4}} {Bit#(4) firstbe {width 4}} {Bit#(30) addr {width 30}} {Reserved::ReservedZero#(2) r7 {width 2}} {Bit#(32) data {width 32}}}} {width 128} {position {PCIE.bsv 419 6}}
Struct PCIE::TLPMemory4DWHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {Bit#(4) lastbe {width 4}} {Bit#(4) firstbe {width 4}} {Bit#(62) addr {width 62}} {Reserved::ReservedZero#(2) r7 {width 2}}}} {width 128} {position {PCIE.bsv 465 6}}
Struct PCIE::TLPCompletionHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId cmplid {width 16}} {PCIE::TLPCompletionStatus cstatus {width 3}} {PCIE::TLPByteCountModified bcm {width 1}} {Bit#(12) bytecount {width 12}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {Reserved::ReservedZero#(1) r5 {width 1}} {Bit#(7) loweraddr {width 7}} {Bit#(32) data {width 32}}}} {width 128} {position {PCIE.bsv 514 6}}
Struct PCIE::TLPMSIHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {PCIE::TLPMessageCode msgcode {width 8}} {Bit#(62) address {width 62}}}} {width 126} {position {PCIE.bsv 560 6}}
Interface {PCIE::PCIE_EXP#(numeric type lanes)} polymorphic {members {{method {Action rxp Bit#(lanes) {{(* ports = ["i"] *)}}}} {method {Action rxn Bit#(lanes) {{(* ports = ["i"] *)}}}} {method {Bit#(lanes) txp {} {{(* ports = [] *)}}}} {method {Bit#(lanes) txn {} {{(* ports = [] *)}}}}}} {position {PCIE.bsv 655 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Typeclass {PCIE::ConnectableWithClocks#(type a, type b)} {members {{{function c#(Empty) f(a x1, b x2, Clock x3, Reset x4, Clock x5, Reset x6)   provisos (IsModule#(c, d))} mkConnectionWithClocks}}} {position {PCIE.bsv 765 11}}
Interface PTMClocks::OutputBit {members {{method {Bit#(1) out {} {{(* ports = [] *)}}}}}} {position {PTMClocks.bsv 12 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface PTMClocks::EnabledClock {members {{interface Clock clock_out {}}}} {position {PTMClocks.bsv 32 11}}
Interface {RS232::EdgeDetector#(type a)} polymorphic {members {{method {Bool rising {} {{(* ports = [] *)}}}} {method {Bool falling {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 106 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Enum TLM3Api::RecvState {members {RHeader0 RHeader1 RAddr RUser RData}} {width 3} {position {TLM3Api.bsv 551 56}}
Enum RS232::XmitState {members {Idle Start Wait Shift Stop Stop5 Stop2 Parity}} {width 3} {position {RS232.bsv 66 6}}
Enum RS232::Parity {members {NONE ODD EVEN}} {width 2} {position {RS232.bsv 72 6}}
Enum RS232::StopBits {members {STOP_1 STOP_1_5 STOP_2}} {width 2} {position {RS232.bsv 78 6}}
Interface RS232::RS232 {members {{method {Action sin Bit#(1) {{(* ports = ["SIN"] *)} {(* prefix = "" *)}}}} {method {Bit#(1) sout {} {{(* ports = [] *)} {(* result = "SOUT" *)} {(* prefix = "" *)}}}}}} {position {RS232.bsv 84 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface RS232::BaudGenerator {members {{method {Action clock_enable {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool baud_tick_16x {} {{(* ports = [] *)}}}} {method {Bool baud_tick_2x {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 93 11}}
Interface {RS232::InputFilter#(numeric type size, type a)} polymorphic {members {{method {Action clock_enable {} {{(* ports = [] *)}}}} {method {a _read {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 100 11}}
Interface {RS232::EdgeDetector#(type a)} polymorphic {members {{method {Bool rising {} {{(* ports = [] *)}}}} {method {Bool falling {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 106 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {RS232::Synchronizer#(type a)} polymorphic {members {{method {Action _write a {{(* ports = ["x"] *)}}}} {method {a _read {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 112 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {RS232::InputMovingFilter#(numeric type width, numeric type threshold, type a)} polymorphic {members {{method {Action sample {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {a _read {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 117 11}}
Interface {RS232::UART#(numeric type depth)} polymorphic {members {{interface RS232::RS232 rs232 {{(* prefix = "" *)}}} {interface GetPut::Get#(Bit#(8)) tx {}} {interface GetPut::Put#(Bit#(8)) rx {}}}} {position {RS232.bsv 123 11}}
Struct DDR3::DDR3_Configure {members {{Bool simulation {width 1}} {Integer reads_in_flight}}} {position {DDR3.bsv 42 3}}
Struct {DDR3::DDR3Request#(numeric type addrwidth, numeric type datawidth, numeric type bewidth)} polymorphic {members {{Bit#(bewidth) byteen} {Bit#(addrwidth) address} {Bit#(datawidth) data}}} {position {DDR3.bsv 55 3}}
Struct {DDR3::DDR3Response#(numeric type datawidth)} polymorphic {members {{Bit#(datawidth) data}}} {position {DDR3.bsv 59 3}}
Interface {DDR3::DDR3_Pins#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{method {Bit#(clkwidth) clk_p {} {{(* ports = [] *)} {(* result = "CLK_P" *)} {(* prefix = "" *)}}}} {method {Bit#(clkwidth) clk_n {} {{(* ports = [] *)} {(* result = "CLK_N" *)} {(* prefix = "" *)}}}} {method {Bit#(rowwidth) a {} {{(* ports = [] *)} {(* result = "A" *)} {(* prefix = "" *)}}}} {method {Bit#(bankwidth) ba {} {{(* ports = [] *)} {(* result = "BA" *)} {(* prefix = "" *)}}}} {method {Bit#(1) ras_n {} {{(* ports = [] *)} {(* result = "RAS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) cas_n {} {{(* ports = [] *)} {(* result = "CAS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) we_n {} {{(* ports = [] *)} {(* result = "WE_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) reset_n {} {{(* ports = [] *)} {(* result = "RESET_N" *)} {(* prefix = "" *)}}}} {method {Bit#(cswidth) cs_n {} {{(* ports = [] *)} {(* result = "CS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(odtwidth) odt {} {{(* ports = [] *)} {(* result = "ODT" *)} {(* prefix = "" *)}}}} {method {Bit#(ckewidth) cke {} {{(* ports = [] *)} {(* result = "CKE" *)} {(* prefix = "" *)}}}} {method {Bit#(bewidth) dm {} {{(* ports = [] *)} {(* result = "DM" *)} {(* prefix = "" *)}}}} {interface Inout#(Bit#(datawidth)) dq {{(* prefix = "DQ" *)}}} {interface Inout#(Bit#(bewidth)) dqs_p {{(* prefix = "DQS_P" *)}}} {interface Inout#(Bit#(bewidth)) dqs_n {{(* prefix = "DQS_N" *)}}}}} {position {DDR3.bsv 99 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface {DDR3::DDR3_User#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset_n {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action request {Bit#(ddr3addrsize) {Bit#(TMul#(ddr3besize, ddr3beats))} {Bit#(TMul#(ddr3datasize, ddr3beats))}} {{(* ports = ["addr", "mask", "data"] *)}}}} {method {{ActionValue#(Bit#(TMul#(ddr3datasize, ddr3beats)))} read_data {} {{(* ports = [] *)}}}}}} {position {DDR3.bsv 132 11}}
Interface {DDR3::DDR3_Controller#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR3::DDR3_Pins#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr3 {{(* prefix = "" *)}}} {interface {DDR3::DDR3_User#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR3.bsv 143 11}}
Interface {DDR3::VDDR3_User_Xilinx#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action app_addr Bit#(ddr3addrsize) {{(* ports = ["i"] *)}}}} {method {Action app_cmd Bit#(3) {{(* ports = ["i"] *)}}}} {method {Action app_en Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_data Bit#(ddr3datasize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_end Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_mask Bit#(ddr3besize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_wren Bool {{(* ports = ["i"] *)}}}} {method {Bit#(ddr3datasize) app_rd_data {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_end {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_valid {} {{(* ports = [] *)}}}} {method {Bool app_rdy {} {{(* ports = [] *)}}}} {method {Bool app_wdf_rdy {} {{(* ports = [] *)}}}}}} {position {DDR3.bsv 151 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {DDR3::VDDR3_Controller_Xilinx#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR3::DDR3_Pins#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr3 {{(* prefix = "" *)}}} {interface {DDR3::VDDR3_User_Xilinx#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR3.bsv 169 11}}
Struct Video::RGB888 {members {{Bit#(8) red {width 8}} {Bit#(8) green {width 8}} {Bit#(8) blue {width 8}}}} {width 24} {position {Video.bsv 33 3}}
Struct Video::CrYCb444 {members {{Bit#(8) cr {width 8}} {Bit#(8) y {width 8}} {Bit#(8) cb {width 8}}}} {width 24} {position {Video.bsv 39 3}}
Struct Video::CrYCbY422 {members {{Bit#(8) c {width 8}} {Bit#(8) y {width 8}}}} {width 16} {position {Video.bsv 44 3}}
Struct Video::SyncDescriptor {members {{Integer active} {Integer fporch} {Integer sync} {Integer bporch}}} {position {Video.bsv 51 3}}
Struct Video::VideoTiming {members {{Video::SyncDescriptor h} {Video::SyncDescriptor v}}} {position {Video.bsv 56 3}}
Struct {Video::PixelData#(type d)} polymorphic {members {{Bit#(1) vsync {width 1}} {Bit#(1) hsync {width 1}} {Bit#(1) dataen {width 1}} {d data}}} {position {Video.bsv 191 3}}
Alias Video::SyncData Video::PixelData#(Bit#(0)) {position {Video.bsv 193 29}}
Struct Video::CSAdderIn {members {{Bit#(25) a {width 25}} {Bit#(25) b {width 25}} {Bit#(25) c {width 25}} {Bit#(25) d {width 25}} {Video::PixelData#(Bit#(0)) sync {width 3}}}} {width 103} {position {Video.bsv 204 3}}
Interface Video::CSAdder {members {{interface GetPut::Put#(Video::CSAdderIn) in {}} {interface GetPut::Get#(Video::PixelData#(Bit#(8))) out {}}}} {position {Video.bsv 207 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct Video::CSMultIn {members {{Bit#(17) a {width 17}} {Bit#(8) b {width 8}} {Video::PixelData#(Bit#(0)) sync {width 3}}}} {width 28} {position {Video.bsv 301 3}}
Interface Video::CSMult {members {{interface GetPut::Put#(Video::CSMultIn) in {}} {interface GetPut::Get#(Video::PixelData#(Bit#(25))) out {}}}} {position {Video.bsv 304 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Video::CSMacc {members {{interface GetPut::Put#(Video::PixelData#(Bit#(24))) in {}} {interface GetPut::Get#(Video::PixelData#(Bit#(8))) out {}}}} {position {Video.bsv 440 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Video::RGB888toCrYCbY422 {members {{interface GetPut::Put#(Video::PixelData#(Video::RGB888)) rgb {}} {interface GetPut::Get#(Video::PixelData#(Video::CrYCbY422)) crycby {}}}} {position {Video.bsv 550 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Video::SyncGenerator {members {{method {Action tick {} {{(* ports = [] *)}}}} {method {Bool preedge {} {{(* ports = [] *)}}}} {method {Bool out_n {} {{(* ports = [] *)}}}} {method {Bool out {} {{(* ports = [] *)}}}} {method {Bool active {} {{(* ports = [] *)}}}}}} {position {Video.bsv 680 11}}
Struct DDR4::DDR4_Configure {members {{Bool simulation {width 1}} {Integer reads_in_flight}}} {position {DDR4.bsv 43 3}}
Struct {DDR4::DDR4Request#(numeric type addrwidth, numeric type datawidth, numeric type bewidth)} polymorphic {members {{Bit#(bewidth) byteen} {Bit#(addrwidth) address} {Bit#(datawidth) data}}} {position {DDR4.bsv 56 3}}
Struct {DDR4::DDR4Response#(numeric type datawidth)} polymorphic {members {{Bit#(datawidth) data}}} {position {DDR4.bsv 60 3}}
Interface {DDR4::DDR4_Pins#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{method {Bit#(1) act_n {} {{(* ports = [] *)} {(* result = "ACT_N" *)} {(* prefix = "" *)}}}} {method {Bit#(rowwidth) a {} {{(* ports = [] *)} {(* result = "A" *)} {(* prefix = "" *)}}}} {method {Bit#(bankwidth) ba {} {{(* ports = [] *)} {(* result = "BA" *)} {(* prefix = "" *)}}}} {method {Bit#(bankgroupwidth) bg {} {{(* ports = [] *)} {(* result = "BG" *)} {(* prefix = "" *)}}}} {method {Bit#(clkwidth) ck_c {} {{(* ports = [] *)} {(* result = "CK_C" *)} {(* prefix = "" *)}}}} {method {Bit#(clkwidth) ck_t {} {{(* ports = [] *)} {(* result = "CK_T" *)} {(* prefix = "" *)}}}} {method {Bit#(ckewidth) cke {} {{(* ports = [] *)} {(* result = "CKE" *)} {(* prefix = "" *)}}}} {method {Bit#(cswidth) cs_n {} {{(* ports = [] *)} {(* result = "CS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) odt {} {{(* ports = [] *)} {(* result = "ODT" *)} {(* prefix = "" *)}}}} {method {Bit#(1) reset_n {} {{(* ports = [] *)} {(* result = "RESET_N" *)} {(* prefix = "" *)}}}} {interface Inout#(Bit#(bewidth)) dm_dbi_n {{(* prefix = "DM_DBI_N" *)}}} {interface Inout#(Bit#(datawidth)) dq {{(* prefix = "DQ" *)}}} {interface Inout#(Bit#(bewidth)) dqs_c {{(* prefix = "DQS_C" *)}}} {interface Inout#(Bit#(bewidth)) dqs_t {{(* prefix = "DQS_T" *)}}}}} {position {DDR4.bsv 103 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface {DDR4::DDR4_User#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset_n {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action request {Bit#(ddr4addrsize) {Bit#(TMul#(ddr4besize, ddr4beats))} {Bit#(TMul#(ddr4datasize, ddr4beats))}} {{(* ports = ["addr", "mask", "data"] *)}}}} {method {{ActionValue#(Bit#(TMul#(ddr4datasize, ddr4beats)))} read_data {} {{(* ports = [] *)}}}}}} {position {DDR4.bsv 134 11}}
Interface {DDR4::DDR4_Controller#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR4::DDR4_Pins#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr4 {{(* prefix = "" *)}}} {interface {DDR4::DDR4_User#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR4.bsv 145 11}}
Interface {DDR4::VDDR4_User_Xilinx#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action app_addr Bit#(ddr4addrsize) {{(* ports = ["i"] *)}}}} {method {Action app_cmd Bit#(3) {{(* ports = ["i"] *)}}}} {method {Action app_en Bool {{(* ports = ["i"] *)}}}} {method {Action app_hi_pri Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_data Bit#(ddr4datasize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_end Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_mask Bit#(ddr4besize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_wren Bool {{(* ports = ["i"] *)}}}} {method {Bit#(ddr4datasize) app_rd_data {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_end {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_valid {} {{(* ports = [] *)}}}} {method {Bool app_rdy {} {{(* ports = [] *)}}}} {method {Bool app_wdf_rdy {} {{(* ports = [] *)}}}} {method {Bit#(512) dbg_bus {} {{(* ports = [] *)}}}}}} {position {DDR4.bsv 153 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {DDR4::VDDR4_Controller_Xilinx#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR4::DDR4_Pins#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr4 {{(* prefix = "" *)}}} {interface {DDR4::VDDR4_User_Xilinx#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR4.bsv 173 11}}
Struct I2C::I2CRequest {members {{Bool write {width 1}} {Bit#(7) slaveaddr {width 7}} {Bit#(8) address {width 8}} {Bit#(8) data {width 8}}}} {width 24} {position {I2C.bsv 48 3}}
Struct I2C::I2CResponse {members {{Bit#(8) data {width 8}}}} {width 8} {position {I2C.bsv 52 3}}
Enum XilinxClocks::State {members {Restart WaitLock WaitStart Address Read Modify Write WaitWriteReady}} {width 3} {position {XilinxClocks.bsv 41 3}}
Interface I2C::I2C_Pins {members {{interface Inout#(Bit#(1)) sda {{(* prefix = "SDA" *)}}} {interface Inout#(Bit#(1)) scl {{(* prefix = "SCL" *)}}}}} {position {I2C.bsv 68 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface I2C::I2C {members {{interface I2C::I2C_Pins i2c {{(* prefix = "" *)}}} {interface {ClientServer::Server#(I2C::I2CRequest, I2C::I2CResponse)} user {}}}} {position {I2C.bsv 75 11}}
Interface {I2C::I2CController#(numeric type n)} polymorphic {members {{interface I2C::I2C_Pins i2c {{(* prefix = "" *)}}} {method {{Vector::Vector#(n, ClientServer::Server#(I2C::I2CRequest, I2C::I2CResponse))} users {} {}}}}} {position {I2C.bsv 81 11}}
Interface PTMClocks::OutputBit {members {{method {Bit#(1) out {} {{(* ports = [] *)}}}}}} {position {PTMClocks.bsv 12 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface PTMClocks::EnabledClock {members {{interface Clock clock_out {}}}} {position {PTMClocks.bsv 32 11}}
Alias ClkCtrlServer::ClkCtrlCycleStamp Bit#(64) {position {ClkCtrlServer.bsv 13 18}}
Alias ClkCtrlServer::EdgeCount Bit#(30) {position {ClkCtrlServer.bsv 23 18}}
TaggedUnion ClkCtrlServer::ClkCtrlReq {members {{Bit#(30) Edges {width 30}} {void Query {width 0}} {void Stop {width 0}} {void Resume {width 0}}}} {width 32} {position {ClkCtrlServer.bsv 30 3}}
Struct ClkCtrlServer::ClkCtrlResp {members {{Bit#(64) cycle {width 64}} {Bool running {width 1}} {Bool free_running {width 1}} {Bit#(30) edges {width 30}}}} {width 96} {position {ClkCtrlServer.bsv 37 3}}
Interface ClkCtrlServer::ClkCtrlServerCore {members {{interface GetPut::Put#(ClkCtrlServer::ClkCtrlReq) cmd {}} {interface GetPut::GetS#(ClkCtrlServer::ClkCtrlResp) status {}} {method {Action preedge Bool {{(* ports = ["val"] *)} {(* always_enabled  *)}}}} {method {Bool allow_edge {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {ClkCtrlServer.bsv 41 11}}
Interface ClkCtrlServer::ClkCtrlServerWithCClk {members {{interface GetPut::Put#(Bit#(32)) rx {}} {interface GetPut::Get#(Bit#(32)) tx {}} {method {Action preedge Bool {{(* ports = ["val"] *)} {(* always_enabled  *)}}}} {method {Bool allow_edge {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {ClkCtrlServer.bsv 51 11}}
Interface ClkCtrlServer::ClkCtrlServer {members {{interface GetPut::Put#(Bit#(32)) rx {}} {interface GetPut::Get#(Bit#(32)) tx {}} {interface Clock cclk {}} {interface Reset crst {}}}} {position {ClkCtrlServer.bsv 61 11}}
Struct I2C::I2CRequest {members {{Bool write {width 1}} {Bit#(7) slaveaddr {width 7}} {Bit#(8) address {width 8}} {Bit#(8) data {width 8}}}} {width 24} {position {I2C.bsv 48 3}}
Struct I2C::I2CResponse {members {{Bit#(8) data {width 8}}}} {width 8} {position {I2C.bsv 52 3}}
Interface I2C::I2C_Pins {members {{interface Inout#(Bit#(1)) sda {{(* prefix = "SDA" *)}}} {interface Inout#(Bit#(1)) scl {{(* prefix = "SCL" *)}}}}} {position {I2C.bsv 68 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface I2C::I2C {members {{interface I2C::I2C_Pins i2c {{(* prefix = "" *)}}} {interface {ClientServer::Server#(I2C::I2CRequest, I2C::I2CResponse)} user {}}}} {position {I2C.bsv 75 11}}
Interface {I2C::I2CController#(numeric type n)} polymorphic {members {{interface I2C::I2C_Pins i2c {{(* prefix = "" *)}}} {method {{Vector::Vector#(n, ClientServer::Server#(I2C::I2CRequest, I2C::I2CResponse))} users {} {}}}}} {position {I2C.bsv 81 11}}
Enum RS232::Parity {members {NONE ODD EVEN}} {width 2} {position {RS232.bsv 72 6}}
Enum RS232::StopBits {members {STOP_1 STOP_1_5 STOP_2}} {width 2} {position {RS232.bsv 78 6}}
Interface RS232::RS232 {members {{method {Action sin Bit#(1) {{(* ports = ["SIN"] *)} {(* prefix = "" *)}}}} {method {Bit#(1) sout {} {{(* ports = [] *)} {(* result = "SOUT" *)} {(* prefix = "" *)}}}}}} {position {RS232.bsv 84 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface RS232::BaudGenerator {members {{method {Action clock_enable {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool baud_tick_16x {} {{(* ports = [] *)}}}} {method {Bool baud_tick_2x {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 93 11}}
Interface {RS232::InputFilter#(numeric type size, type a)} polymorphic {members {{method {Action clock_enable {} {{(* ports = [] *)}}}} {method {a _read {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 100 11}}
Interface {RS232::EdgeDetector#(type a)} polymorphic {members {{method {Bool rising {} {{(* ports = [] *)}}}} {method {Bool falling {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 106 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {RS232::Synchronizer#(type a)} polymorphic {members {{method {Action _write a {{(* ports = ["x"] *)}}}} {method {a _read {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 112 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {RS232::InputMovingFilter#(numeric type width, numeric type threshold, type a)} polymorphic {members {{method {Action sample {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {a _read {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 117 11}}
Interface {RS232::UART#(numeric type depth)} polymorphic {members {{interface RS232::RS232 rs232 {{(* prefix = "" *)}}} {interface GetPut::Get#(Bit#(8)) tx {}} {interface GetPut::Put#(Bit#(8)) rx {}}}} {position {RS232.bsv 123 11}}
Struct DDR3::DDR3_Configure {members {{Bool simulation {width 1}} {Integer reads_in_flight}}} {position {DDR3.bsv 42 3}}
Struct {DDR3::DDR3Request#(numeric type addrwidth, numeric type datawidth, numeric type bewidth)} polymorphic {members {{Bit#(bewidth) byteen} {Bit#(addrwidth) address} {Bit#(datawidth) data}}} {position {DDR3.bsv 55 3}}
Struct {DDR3::DDR3Response#(numeric type datawidth)} polymorphic {members {{Bit#(datawidth) data}}} {position {DDR3.bsv 59 3}}
Interface {DDR3::DDR3_Pins#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{method {Bit#(clkwidth) clk_p {} {{(* ports = [] *)} {(* result = "CLK_P" *)} {(* prefix = "" *)}}}} {method {Bit#(clkwidth) clk_n {} {{(* ports = [] *)} {(* result = "CLK_N" *)} {(* prefix = "" *)}}}} {method {Bit#(rowwidth) a {} {{(* ports = [] *)} {(* result = "A" *)} {(* prefix = "" *)}}}} {method {Bit#(bankwidth) ba {} {{(* ports = [] *)} {(* result = "BA" *)} {(* prefix = "" *)}}}} {method {Bit#(1) ras_n {} {{(* ports = [] *)} {(* result = "RAS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) cas_n {} {{(* ports = [] *)} {(* result = "CAS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) we_n {} {{(* ports = [] *)} {(* result = "WE_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) reset_n {} {{(* ports = [] *)} {(* result = "RESET_N" *)} {(* prefix = "" *)}}}} {method {Bit#(cswidth) cs_n {} {{(* ports = [] *)} {(* result = "CS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(odtwidth) odt {} {{(* ports = [] *)} {(* result = "ODT" *)} {(* prefix = "" *)}}}} {method {Bit#(ckewidth) cke {} {{(* ports = [] *)} {(* result = "CKE" *)} {(* prefix = "" *)}}}} {method {Bit#(bewidth) dm {} {{(* ports = [] *)} {(* result = "DM" *)} {(* prefix = "" *)}}}} {interface Inout#(Bit#(datawidth)) dq {{(* prefix = "DQ" *)}}} {interface Inout#(Bit#(bewidth)) dqs_p {{(* prefix = "DQS_P" *)}}} {interface Inout#(Bit#(bewidth)) dqs_n {{(* prefix = "DQS_N" *)}}}}} {position {DDR3.bsv 99 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface {DDR3::DDR3_User#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset_n {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action request {Bit#(ddr3addrsize) {Bit#(TMul#(ddr3besize, ddr3beats))} {Bit#(TMul#(ddr3datasize, ddr3beats))}} {{(* ports = ["addr", "mask", "data"] *)}}}} {method {{ActionValue#(Bit#(TMul#(ddr3datasize, ddr3beats)))} read_data {} {{(* ports = [] *)}}}}}} {position {DDR3.bsv 132 11}}
Interface {DDR3::DDR3_Controller#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR3::DDR3_Pins#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr3 {{(* prefix = "" *)}}} {interface {DDR3::DDR3_User#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR3.bsv 143 11}}
Interface {DDR3::VDDR3_User_Xilinx#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action app_addr Bit#(ddr3addrsize) {{(* ports = ["i"] *)}}}} {method {Action app_cmd Bit#(3) {{(* ports = ["i"] *)}}}} {method {Action app_en Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_data Bit#(ddr3datasize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_end Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_mask Bit#(ddr3besize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_wren Bool {{(* ports = ["i"] *)}}}} {method {Bit#(ddr3datasize) app_rd_data {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_end {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_valid {} {{(* ports = [] *)}}}} {method {Bool app_rdy {} {{(* ports = [] *)}}}} {method {Bool app_wdf_rdy {} {{(* ports = [] *)}}}}}} {position {DDR3.bsv 151 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {DDR3::VDDR3_Controller_Xilinx#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR3::DDR3_Pins#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr3 {{(* prefix = "" *)}}} {interface {DDR3::VDDR3_User_Xilinx#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR3.bsv 169 11}}
Struct DDR4::DDR4_Configure {members {{Bool simulation {width 1}} {Integer reads_in_flight}}} {position {DDR4.bsv 43 3}}
Struct {DDR4::DDR4Request#(numeric type addrwidth, numeric type datawidth, numeric type bewidth)} polymorphic {members {{Bit#(bewidth) byteen} {Bit#(addrwidth) address} {Bit#(datawidth) data}}} {position {DDR4.bsv 56 3}}
Struct {DDR4::DDR4Response#(numeric type datawidth)} polymorphic {members {{Bit#(datawidth) data}}} {position {DDR4.bsv 60 3}}
Interface {DDR4::DDR4_Pins#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{method {Bit#(1) act_n {} {{(* ports = [] *)} {(* result = "ACT_N" *)} {(* prefix = "" *)}}}} {method {Bit#(rowwidth) a {} {{(* ports = [] *)} {(* result = "A" *)} {(* prefix = "" *)}}}} {method {Bit#(bankwidth) ba {} {{(* ports = [] *)} {(* result = "BA" *)} {(* prefix = "" *)}}}} {method {Bit#(bankgroupwidth) bg {} {{(* ports = [] *)} {(* result = "BG" *)} {(* prefix = "" *)}}}} {method {Bit#(clkwidth) ck_c {} {{(* ports = [] *)} {(* result = "CK_C" *)} {(* prefix = "" *)}}}} {method {Bit#(clkwidth) ck_t {} {{(* ports = [] *)} {(* result = "CK_T" *)} {(* prefix = "" *)}}}} {method {Bit#(ckewidth) cke {} {{(* ports = [] *)} {(* result = "CKE" *)} {(* prefix = "" *)}}}} {method {Bit#(cswidth) cs_n {} {{(* ports = [] *)} {(* result = "CS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) odt {} {{(* ports = [] *)} {(* result = "ODT" *)} {(* prefix = "" *)}}}} {method {Bit#(1) reset_n {} {{(* ports = [] *)} {(* result = "RESET_N" *)} {(* prefix = "" *)}}}} {interface Inout#(Bit#(bewidth)) dm_dbi_n {{(* prefix = "DM_DBI_N" *)}}} {interface Inout#(Bit#(datawidth)) dq {{(* prefix = "DQ" *)}}} {interface Inout#(Bit#(bewidth)) dqs_c {{(* prefix = "DQS_C" *)}}} {interface Inout#(Bit#(bewidth)) dqs_t {{(* prefix = "DQS_T" *)}}}}} {position {DDR4.bsv 103 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface {DDR4::DDR4_User#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset_n {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action request {Bit#(ddr4addrsize) {Bit#(TMul#(ddr4besize, ddr4beats))} {Bit#(TMul#(ddr4datasize, ddr4beats))}} {{(* ports = ["addr", "mask", "data"] *)}}}} {method {{ActionValue#(Bit#(TMul#(ddr4datasize, ddr4beats)))} read_data {} {{(* ports = [] *)}}}}}} {position {DDR4.bsv 134 11}}
Interface {DDR4::DDR4_Controller#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR4::DDR4_Pins#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr4 {{(* prefix = "" *)}}} {interface {DDR4::DDR4_User#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR4.bsv 145 11}}
Interface {DDR4::VDDR4_User_Xilinx#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action app_addr Bit#(ddr4addrsize) {{(* ports = ["i"] *)}}}} {method {Action app_cmd Bit#(3) {{(* ports = ["i"] *)}}}} {method {Action app_en Bool {{(* ports = ["i"] *)}}}} {method {Action app_hi_pri Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_data Bit#(ddr4datasize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_end Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_mask Bit#(ddr4besize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_wren Bool {{(* ports = ["i"] *)}}}} {method {Bit#(ddr4datasize) app_rd_data {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_end {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_valid {} {{(* ports = [] *)}}}} {method {Bool app_rdy {} {{(* ports = [] *)}}}} {method {Bool app_wdf_rdy {} {{(* ports = [] *)}}}} {method {Bit#(512) dbg_bus {} {{(* ports = [] *)}}}}}} {position {DDR4.bsv 153 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {DDR4::VDDR4_Controller_Xilinx#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR4::DDR4_Pins#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr4 {{(* prefix = "" *)}}} {interface {DDR4::VDDR4_User_Xilinx#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR4.bsv 173 11}}
Alias PCIE::DWAddress Bit#(30) {position {PCIE.bsv 31 26}}
Alias PCIE::DWAddress64 Bit#(62) {position {PCIE.bsv 32 26}}
Alias CacheCore::Offset Bit#(3) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 98 28}}
Alias PCIE::BusNumber Bit#(8) {position {PCIE.bsv 34 26}}
Alias PCIE::DevNumber Bit#(5) {position {PCIE.bsv 35 26}}
Alias PCIE::FuncNumber Bit#(3) {position {PCIE.bsv 36 26}}
Alias PCIE::TLPLength Bit#(10) {position {PCIE.bsv 38 26}}
Alias PCIE::TLPFirstDWBE Bit#(4) {position {PCIE.bsv 39 26}}
Alias PCIE::TLPLastDWBE Bit#(4) {position {PCIE.bsv 40 26}}
Alias PCIE::TLPTag Bit#(8) {position {PCIE.bsv 41 26}}
Alias PCIE::TLPLowerAddr Bit#(7) {position {PCIE.bsv 42 26}}
Alias PCIE::TLPByteCount Bit#(12) {position {PCIE.bsv 43 26}}
Alias PCIE::TLPRegNum Bit#(10) {position {PCIE.bsv 44 26}}
Alias PCIE::DWCount Bit#(11) {position {PCIE.bsv 46 26}}
Alias PCIE::ByteCount Bit#(13) {position {PCIE.bsv 47 26}}
Struct {PCIE::TLPData#(numeric type bytes)} polymorphic {members {{Bool sof {width 1}} {Bool eof {width 1}} {Bit#(7) hit {width 7}} {Bit#(bytes) be} {{Bit#(TMul#(bytes, 8))} data}}} {position {PCIE.bsv 55 3}}
Enum PCIE::TLPAttrIDBasedOrdering {members {DEFAULT_ORDERING ID_BASED_ORDERING}} {width 1} {position {PCIE.bsv 71 6}}
Enum PCIE::TLPAttrRelaxedOrdering {members {STRICT_ORDERING RELAXED_ORDERING}} {width 1} {position {PCIE.bsv 76 6}}
Enum PCIE::TLPAttrNoSnoop {members {SNOOPING_REQD NO_SNOOPING_REQD}} {width 1} {position {PCIE.bsv 81 6}}
Enum PCIE::TLPPoison {members {NOT_POISONED POISONED}} {width 1} {position {PCIE.bsv 86 6}}
Enum PCIE::TLPDigest {members {NO_DIGEST_PRESENT DIGEST_PRESENT}} {width 1} {position {PCIE.bsv 91 6}}
Enum PCIE::TLPTrafficClass {members {TRAFFIC_CLASS_0 TRAFFIC_CLASS_1 TRAFFIC_CLASS_2 TRAFFIC_CLASS_3 TRAFFIC_CLASS_4 TRAFFIC_CLASS_5 TRAFFIC_CLASS_6 TRAFFIC_CLASS_7}} {width 3} {position {PCIE.bsv 102 6}}
Enum PCIE::TLPPacketType {members {MEMORY_READ_WRITE MEMORY_READ_LOCKED IO_REQUEST UNKNOWN_TYPE_3 CONFIG_0_READ_WRITE CONFIG_1_READ_WRITE UNKNOWN_TYPE_6 UNKNOWN_TYPE_7 UNKNOWN_TYPE_8 UNKNOWN_TYPE_9 COMPLETION COMPLETION_LOCKED UNKNOWN_TYPE_12 UNKNOWN_TYPE_13 UNKNOWN_TYPE_14 UNKNOWN_TYPE_15 MSG_ROUTED_TO_ROOT MSG_ROUTED_BY_ADDR MSG_ROUTED_BY_ID MSG_ROOT_BROADCAST MSG_LOCAL MSG_GATHER UNKNOWN_TYPE_22 UNKNOWN_TYPE_23 UNKNOWN_TYPE_24 UNKNOWN_TYPE_25 UNKNOWN_TYPE_26 UNKNOWN_TYPE_27 UNKNOWN_TYPE_28 UNKNOWN_TYPE_29 UNKNOWN_TYPE_30 UNKNOWN_TYPE_31}} {width 5} {position {PCIE.bsv 137 6}}
Enum PCIE::TLPPacketFormat {members {MEM_READ_3DW_NO_DATA MEM_READ_4DW_NO_DATA MEM_WRITE_3DW_DATA MEM_WRITE_4DW_DATA}} {width 2} {position {PCIE.bsv 144 6}}
Enum PCIE::TLPCompletionStatus {members {SUCCESSFUL_COMPLETION UNSUPPORTED_REQUEST CONFIG_REQ_RETRY_STATUS UNKNOWN_STATUS_3 COMPLETER_ABORT UNKNOWN_STATUS_5 UNKNOWN_STATUS_6 UNKNOWN_STATUS_7}} {width 3} {position {PCIE.bsv 155 6}}
Enum PCIE::TLPByteCountModified {members {BYTE_COUNT_ORIGINAL BYTE_COUNT_MODIFIED}} {width 1} {position {PCIE.bsv 160 6}}
Enum PCIE::TLPAddressType {members {DEFAULT_UNTRANSLATED TRANSLATION_REQUEST TRANSLATED RESERVED}} {width 2} {position {PCIE.bsv 167 6}}
Enum PCIE::MSIInterruptCode {members {ASSERT_INTA ASSERT_INTB ASSERT_INTC ASSERT_INTD DEASSERT_INTA DEASSERT_INTB DEASSERT_INTC DEASSERT_INTD}} {width 3} {position {PCIE.bsv 178 6}}
Enum PCIE::MSIPowerMgtCode {members {UNKNOWN_CODE_0 UNKNOWN_CODE_1 UNKNOWN_CODE_2 UNKNOWN_CODE_3 PM_ACTIVE_STATE_NAK UNKNOWN_CODE_5 UNKNOWN_CODE_6 UNKNOWN_CODE_7 PM_PME PM_TURN_OFF UNKNOWN_CODE_10 PME_TO_ACK UNKNOWN_CODE_12 UNKNOWN_CODE_13 UNKNOWN_CODE_14 UNKNOWN_CODE_15}} {width 4} {position {PCIE.bsv 197 6}}
Enum PCIE::MSIErrorCode {members {ERR_COR ERR_NONFATAL UNKNOWN_ERR_2 ERR_FATAL}} {width 2} {position {PCIE.bsv 204 6}}
Enum PCIE::MSIHotPlugCode {members {ATTN_INDICATOR_OFF ATTN_INDICATOR_ON UNKNOWN_CODE_2 ATTN_INDICATOR_BLINK POWER_INDICATOR_OFF POWER_INDICATOR_ON UNKNOWN_CODE_6 POWER_INDICATOR_BLINK ATTN_BUTTON_PRESSED UNKNOWN_CODE_9 UNKNOWN_CODE_10 UNKNOWN_CODE_11 UNKNOWN_CODE_12 UNKNOWN_CODE_13 UNKNOWN_CODE_14 UNKNOWN_CODE_15}} {width 4} {position {PCIE.bsv 223 6}}
TaggedUnion PCIE::TLPMessageCode {members {{void Unlock {width 0}} {PCIE::MSIPowerMgtCode PowerManagement {width 4}} {PCIE::MSIInterruptCode Interrupt {width 3}} {PCIE::MSIErrorCode Error {width 2}} {PCIE::MSIHotPlugCode HotPlug {width 4}} {void SlotPower {width 0}} {void VendorType0 {width 0}} {void VendorType1 {width 0}}}} {width 8} {position {PCIE.bsv 234 6}}
Struct PCIE::PciId {members {{Bit#(8) bus {width 8}} {Bit#(5) dev {width 5}} {Bit#(3) func {width 3}}}} {width 16} {position {PCIE.bsv 270 6}}
Enum PCIE::FlowControlInfoSelect {members {RECEIVE_BUFFER_AVAILABLE_SPACE RECEIVE_CREDITS_GRANTED RECEIVE_CREDITS_CONSUMED UNKNOWN_3 TRANSMIT_USER_CREDITS_AVAIALBE TRANSMIT_CREDIT_LIMIT TRANSMIT_CREDITS_CONSUMED UNKNOWN_7}} {width 3} {position {PCIE.bsv 290 6}}
Struct PCIE::PCIEParams {members {{Bool fast_train_sim_only {width 1}} {Real clock_period}}} {position {PCIE.bsv 295 6}}
Enum PCIE::BARAperture {members {APERTURE_128B APERTURE_256B APERTURE_512B APERTURE_1K APERTURE_2K APERTURE_4K APERTURE_8K APERTURE_16K APERTURE_32K APERTURE_64K APERTURE_128K APERTURE_256K APERTURE_512K APERTURE_1M APERTURE_2M APERTURE_4M APERTURE_8M APERTURE_16M APERTURE_32M APERTURE_64M APERTURE_128M APERTURE_256M APERTURE_512M APERTURE_1G APERTURE_2G APERTURE_4G APERTURE_8G APERTURE_16G APERTURE_32G APERTURE_64G APERTURE_128G APERTURE_256G APERTURE_512G APERTURE_1E APERTURE_2E}} {width 6} {position {PCIE.bsv 341 3}}
Enum PCIE::BARID {members {BAR0 BAR1 BAR2 BAR3 BAR4 BAR5 EXPANSION_ROM}} {width 3} {position {PCIE.bsv 351 6}}
Enum PCIE::TargetFunction {members {PF0 PF1 VF0 VF1 VF2 VF3 VF4 VF5 LAST}} {width 8} {position {PCIE.bsv 363 6}}
Enum PCIE::RequestType {members {MEMORY_READ MEMORY_WRITE IO_READ IO_WRITE MEMORY_FETCH_ADD MEMORY_UNCOND_SWAP MEMORY_COMP_SWAP LOCKED_READ TYPE0_CFG_READ TYPE1_CFG_READ TYPE0_CFG_WRITE TYPE1_CFG_WRITE NOT_VEND_ATS_MESSAGE VENDOR_MESSAGE ATS_MESSAGE RESERVED}} {width 4} {position {PCIE.bsv 382 6}}
Enum PCIE::ErrorCode {members {NORMAL_TERMINATION COMPLETION_POISONED TERMINATED_UR_CA_CRS NO_DATA_OR_HIGH_BYTECNT SAME_TAG START_ADDRESS INVALID_TAG FUNCTION_LEVEL_RESET TIMEOUT}} {width 4} {position {PCIE.bsv 394 3}}
Struct PCIE::TLPMemoryIO3DWHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {Bit#(4) lastbe {width 4}} {Bit#(4) firstbe {width 4}} {Bit#(30) addr {width 30}} {Reserved::ReservedZero#(2) r7 {width 2}} {Bit#(32) data {width 32}}}} {width 128} {position {PCIE.bsv 419 6}}
Struct PCIE::TLPMemory4DWHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {Bit#(4) lastbe {width 4}} {Bit#(4) firstbe {width 4}} {Bit#(62) addr {width 62}} {Reserved::ReservedZero#(2) r7 {width 2}}}} {width 128} {position {PCIE.bsv 465 6}}
Struct PCIE::TLPCompletionHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId cmplid {width 16}} {PCIE::TLPCompletionStatus cstatus {width 3}} {PCIE::TLPByteCountModified bcm {width 1}} {Bit#(12) bytecount {width 12}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {Reserved::ReservedZero#(1) r5 {width 1}} {Bit#(7) loweraddr {width 7}} {Bit#(32) data {width 32}}}} {width 128} {position {PCIE.bsv 514 6}}
Struct PCIE::TLPMSIHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {PCIE::TLPMessageCode msgcode {width 8}} {Bit#(62) address {width 62}}}} {width 126} {position {PCIE.bsv 560 6}}
Interface {PCIE::PCIE_EXP#(numeric type lanes)} polymorphic {members {{method {Action rxp Bit#(lanes) {{(* ports = ["i"] *)}}}} {method {Action rxn Bit#(lanes) {{(* ports = ["i"] *)}}}} {method {Bit#(lanes) txp {} {{(* ports = [] *)}}}} {method {Bit#(lanes) txn {} {{(* ports = [] *)}}}}}} {position {PCIE.bsv 655 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Typeclass {PCIE::ConnectableWithClocks#(type a, type b)} {members {{{function c#(Empty) f(a x1, b x2, Clock x3, Reset x4, Clock x5, Reset x6)   provisos (IsModule#(c, d))} mkConnectionWithClocks}}} {position {PCIE.bsv 765 11}}
Struct Video::RGB888 {members {{Bit#(8) red {width 8}} {Bit#(8) green {width 8}} {Bit#(8) blue {width 8}}}} {width 24} {position {Video.bsv 33 3}}
Struct Video::CrYCb444 {members {{Bit#(8) cr {width 8}} {Bit#(8) y {width 8}} {Bit#(8) cb {width 8}}}} {width 24} {position {Video.bsv 39 3}}
Struct Video::CrYCbY422 {members {{Bit#(8) c {width 8}} {Bit#(8) y {width 8}}}} {width 16} {position {Video.bsv 44 3}}
Struct Video::SyncDescriptor {members {{Integer active} {Integer fporch} {Integer sync} {Integer bporch}}} {position {Video.bsv 51 3}}
Struct Video::VideoTiming {members {{Video::SyncDescriptor h} {Video::SyncDescriptor v}}} {position {Video.bsv 56 3}}
Struct {Video::PixelData#(type d)} polymorphic {members {{Bit#(1) vsync {width 1}} {Bit#(1) hsync {width 1}} {Bit#(1) dataen {width 1}} {d data}}} {position {Video.bsv 191 3}}
Alias Video::SyncData Video::PixelData#(Bit#(0)) {position {Video.bsv 193 29}}
Struct Video::CSAdderIn {members {{Bit#(25) a {width 25}} {Bit#(25) b {width 25}} {Bit#(25) c {width 25}} {Bit#(25) d {width 25}} {Video::PixelData#(Bit#(0)) sync {width 3}}}} {width 103} {position {Video.bsv 204 3}}
Interface Video::CSAdder {members {{interface GetPut::Put#(Video::CSAdderIn) in {}} {interface GetPut::Get#(Video::PixelData#(Bit#(8))) out {}}}} {position {Video.bsv 207 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct Video::CSMultIn {members {{Bit#(17) a {width 17}} {Bit#(8) b {width 8}} {Video::PixelData#(Bit#(0)) sync {width 3}}}} {width 28} {position {Video.bsv 301 3}}
Interface Video::CSMult {members {{interface GetPut::Put#(Video::CSMultIn) in {}} {interface GetPut::Get#(Video::PixelData#(Bit#(25))) out {}}}} {position {Video.bsv 304 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Video::CSMacc {members {{interface GetPut::Put#(Video::PixelData#(Bit#(24))) in {}} {interface GetPut::Get#(Video::PixelData#(Bit#(8))) out {}}}} {position {Video.bsv 440 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Video::RGB888toCrYCbY422 {members {{interface GetPut::Put#(Video::PixelData#(Video::RGB888)) rgb {}} {interface GetPut::Get#(Video::PixelData#(Video::CrYCbY422)) crycby {}}}} {position {Video.bsv 550 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Video::SyncGenerator {members {{method {Action tick {} {{(* ports = [] *)}}}} {method {Bool preedge {} {{(* ports = [] *)}}}} {method {Bool out_n {} {{(* ports = [] *)}}}} {method {Bool out {} {{(* ports = [] *)}}}} {method {Bool active {} {{(* ports = [] *)}}}}}} {position {Video.bsv 680 11}}

Interface ML507_mig_33_wrapper::DDR2Wires {members {{interface Inout#(Bit#(64)) dq {}} {method {Bit#(13) a {} {{(* ports = [] *)}}}} {method {Bit#(2) ba {} {{(* ports = [] *)}}}} {method {Bit#(1) ras_n {} {{(* ports = [] *)}}}} {method {Bit#(1) cas_n {} {{(* ports = [] *)}}}} {method {Bit#(1) we_n {} {{(* ports = [] *)}}}} {method {Bit#(1) cs_n {} {{(* ports = [] *)}}}} {method {Bit#(1) odt {} {{(* ports = [] *)}}}} {method {Bit#(1) cke {} {{(* ports = [] *)}}}} {method {Bit#(8) dm {} {{(* ports = [] *)}}}} {interface Inout#(Bit#(8)) dqs {}} {interface Inout#(Bit#(8)) dqs_n {}} {method {Bit#(2) ck {} {{(* ports = [] *)}}}} {method {Bit#(2) ck_n {} {{(* ports = [] *)}}}}}} {position {ML507_mig_33_wrapper.bsv 7 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ML507_mig_33_wrapper::Mig33App {members {{method {Action af {Bit#(3) Bit#(31)} {{(* ports = ["cmd", "addr"] *)}}}} {method {Action wdf {Bit#(128) Bit#(16)} {{(* ports = ["data", "mask"] *)}}}} {method {Bit#(128) data {} {{(* ports = [] *)}}}}}} {position {ML507_mig_33_wrapper.bsv 25 11}}
Interface ML507_mig_33_wrapper::Mig33 {members {{interface Clock clk0_tb {}} {interface Reset rst0_tb {}} {interface ML507_mig_33_wrapper::DDR2Wires ddr2 {}} {interface ML507_mig_33_wrapper::Mig33App app {}}}} {position {ML507_mig_33_wrapper.bsv 43 11}}
Alias DDR2Types::DDR2Address Bit#(32) {position {DDR2Types.bsv 9 18}}
Alias DDR2Types::DDR2Data Bit#(64) {position {DDR2Types.bsv 10 18}}
Struct DDR2Types::DDR2ReqCmd {members {{Bool rnw {width 1}} {Bit#(32) addr {width 32}}}} {width 33} {position {DDR2Types.bsv 19 3}}
Struct DDR2Types::DDR2ReqData {members {{Bit#(8) be {width 8}} {Bit#(64) data {width 64}}}} {width 72} {position {DDR2Types.bsv 29 3}}
Interface DDR2Types::DDR2RequestClient {members {{interface GetPut::Get#(DDR2Types::DDR2ReqCmd) command {}} {interface GetPut::Get#(DDR2Types::DDR2ReqData) data {}}}} {position {DDR2Types.bsv 37 11}}
Interface DDR2Types::DDR2Client {members {{interface DDR2Types::DDR2RequestClient request {}} {interface GetPut::Put#(Bit#(64)) response {}}}} {position {DDR2Types.bsv 42 11}}
Interface DDR2Types::DDR2RequestServer {members {{interface GetPut::Put#(DDR2Types::DDR2ReqCmd) command {}} {interface GetPut::Put#(DDR2Types::DDR2ReqData) data {}}}} {position {DDR2Types.bsv 47 11}}
Interface DDR2Types::DDR2Server {members {{interface DDR2Types::DDR2RequestServer request {}} {interface GetPut::Get#(Bit#(64)) response {}}}} {position {DDR2Types.bsv 52 11}}
Interface DDR2Types::SimpleMemory {members {{method {Action request {Bool UInt#(31) Bit#(256) Bit#(32)} {{(* ports = ["write", "addr", "data", "be"] *)}}}} {interface GetPut::Get#(Bit#(256)) readData {}}}} {position {DDR2Types.bsv 105 11}}
Interface ML507_DDR2::DDR2 {members {{interface ML507_mig_33_wrapper::DDR2Wires wires {}} {interface DDR2Types::DDR2Server server {}}}} {position {ML507_DDR2.bsv 15 11}}
Alias ML507_DDR2::MaxPendingReads 8 {position {ML507_DDR2.bsv 20 11}}
Struct ML507_DDR2::DDR2LLReqCmd {members {{Bit#(3) cmd {width 3}} {Bit#(31) addr {width 31}}}} {width 34} {position {ML507_DDR2.bsv 25 3}}
Struct ML507_DDR2::DDR2LLReqData {members {{Bit#(128) data {width 128}} {Bit#(16) be {width 16}}}} {width 144} {position {ML507_DDR2.bsv 30 3}}
Struct ML507_DDR2::DDR2LLReq {members {{Maybe#(ML507_DDR2::DDR2LLReqCmd) cmd {width 35}} {Maybe#(ML507_DDR2::DDR2LLReqData) data {width 145}}}} {width 180} {position {ML507_DDR2.bsv 35 3}}
Interface {ML507_DDR2::Demarshaller#(type a)} polymorphic {members {{interface GetPut::Put#(a) single {}} {interface {GetPut::Get#(Tuple2#(a, a))} double {}}}} {position {ML507_DDR2.bsv 195 11}}
Interface {ML507_DDR2::Marshaller#(type a)} polymorphic {members {{interface {GetPut::Put#(Tuple2#(a, a))} double {}} {interface GetPut::Get#(a) single {}}}} {position {ML507_DDR2.bsv 224 11}}
Interface ML507_DDR2::DDR2 {members {{interface ML507_mig_33_wrapper::DDR2Wires wires {}} {interface DDR2Types::DDR2Server server {}}}} {position {ML507_DDR2.bsv 15 11}}
Alias ML507_DDR2::MaxPendingReads 8 {position {ML507_DDR2.bsv 20 11}}
Struct ML507_DDR2::DDR2LLReqCmd {members {{Bit#(3) cmd {width 3}} {Bit#(31) addr {width 31}}}} {width 34} {position {ML507_DDR2.bsv 25 3}}
Struct ML507_DDR2::DDR2LLReqData {members {{Bit#(128) data {width 128}} {Bit#(16) be {width 16}}}} {width 144} {position {ML507_DDR2.bsv 30 3}}
Struct ML507_DDR2::DDR2LLReq {members {{Maybe#(ML507_DDR2::DDR2LLReqCmd) cmd {width 35}} {Maybe#(ML507_DDR2::DDR2LLReqData) data {width 145}}}} {width 180} {position {ML507_DDR2.bsv 35 3}}
Interface {ML507_DDR2::Demarshaller#(type a)} polymorphic {members {{interface GetPut::Put#(a) single {}} {interface {GetPut::Get#(Tuple2#(a, a))} double {}}}} {position {ML507_DDR2.bsv 195 11}}
Interface {ML507_DDR2::Marshaller#(type a)} polymorphic {members {{interface {GetPut::Put#(Tuple2#(a, a))} double {}} {interface GetPut::Get#(a) single {}}}} {position {ML507_DDR2.bsv 224 11}}
Alias DDR2Types::DDR2Address Bit#(32) {position {DDR2Types.bsv 9 18}}
Alias DDR2Types::DDR2Data Bit#(64) {position {DDR2Types.bsv 10 18}}
Struct DDR2Types::DDR2ReqCmd {members {{Bool rnw {width 1}} {Bit#(32) addr {width 32}}}} {width 33} {position {DDR2Types.bsv 19 3}}
Struct DDR2Types::DDR2ReqData {members {{Bit#(8) be {width 8}} {Bit#(64) data {width 64}}}} {width 72} {position {DDR2Types.bsv 29 3}}
Interface DDR2Types::DDR2RequestClient {members {{interface GetPut::Get#(DDR2Types::DDR2ReqCmd) command {}} {interface GetPut::Get#(DDR2Types::DDR2ReqData) data {}}}} {position {DDR2Types.bsv 37 11}}
Interface DDR2Types::DDR2Client {members {{interface DDR2Types::DDR2RequestClient request {}} {interface GetPut::Put#(Bit#(64)) response {}}}} {position {DDR2Types.bsv 42 11}}
Interface DDR2Types::DDR2RequestServer {members {{interface GetPut::Put#(DDR2Types::DDR2ReqCmd) command {}} {interface GetPut::Put#(DDR2Types::DDR2ReqData) data {}}}} {position {DDR2Types.bsv 47 11}}
Interface DDR2Types::DDR2Server {members {{interface DDR2Types::DDR2RequestServer request {}} {interface GetPut::Get#(Bit#(64)) response {}}}} {position {DDR2Types.bsv 52 11}}
Interface DDR2Types::SimpleMemory {members {{method {Action request {Bool UInt#(31) Bit#(256) Bit#(32)} {{(* ports = ["write", "addr", "data", "be"] *)}}}} {interface GetPut::Get#(Bit#(256)) readData {}}}} {position {DDR2Types.bsv 105 11}}
Interface ML507_mig_33_wrapper::DDR2Wires {members {{interface Inout#(Bit#(64)) dq {}} {method {Bit#(13) a {} {{(* ports = [] *)}}}} {method {Bit#(2) ba {} {{(* ports = [] *)}}}} {method {Bit#(1) ras_n {} {{(* ports = [] *)}}}} {method {Bit#(1) cas_n {} {{(* ports = [] *)}}}} {method {Bit#(1) we_n {} {{(* ports = [] *)}}}} {method {Bit#(1) cs_n {} {{(* ports = [] *)}}}} {method {Bit#(1) odt {} {{(* ports = [] *)}}}} {method {Bit#(1) cke {} {{(* ports = [] *)}}}} {method {Bit#(8) dm {} {{(* ports = [] *)}}}} {interface Inout#(Bit#(8)) dqs {}} {interface Inout#(Bit#(8)) dqs_n {}} {method {Bit#(2) ck {} {{(* ports = [] *)}}}} {method {Bit#(2) ck_n {} {{(* ports = [] *)}}}}}} {position {ML507_mig_33_wrapper.bsv 7 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ML507_mig_33_wrapper::Mig33App {members {{method {Action af {Bit#(3) Bit#(31)} {{(* ports = ["cmd", "addr"] *)}}}} {method {Action wdf {Bit#(128) Bit#(16)} {{(* ports = ["data", "mask"] *)}}}} {method {Bit#(128) data {} {{(* ports = [] *)}}}}}} {position {ML507_mig_33_wrapper.bsv 25 11}}
Interface ML507_mig_33_wrapper::Mig33 {members {{interface Clock clk0_tb {}} {interface Reset rst0_tb {}} {interface ML507_mig_33_wrapper::DDR2Wires ddr2 {}} {interface ML507_mig_33_wrapper::Mig33App app {}}}} {position {ML507_mig_33_wrapper.bsv 43 11}}
Interface XilinxCells::ResetGenIfc {members {{interface Reset gen_rst {}}}} {position {XilinxCells.bsv 235 11}}
Struct XilinxCells::BUFRParams {members {{String bufr_divide} {String sim_device}}} {position {XilinxCells.bsv 260 3}}
Struct XilinxCells::IBUFGParams {members {{String capacitance} {String ibuf_delay_value} {String ibuf_low_pwr} {String iostandard}}} {position {XilinxCells.bsv 363 3}}
Struct XilinxCells::IBUFParams {members {{String capacitance} {String ibuf_delay_value} {String ibuf_low_pwr} {String ifd_delay_value} {String iostandard}}} {position {XilinxCells.bsv 439 3}}
Struct XilinxCells::IBUFDSParams {members {{String capacitance} {String diff_term} {String dqs_bias} {String ibuf_delay_value} {String ibuf_low_pwr} {String ifd_delay_value} {String iostandard}}} {position {XilinxCells.bsv 542 3}}
Struct XilinxCells::IBUFGDSParams {members {{String capacitance} {String diff_term} {String ibuf_delay_value} {String ibuf_low_pwr} {String iostandard}}} {position {XilinxCells.bsv 594 3}}
Struct XilinxCells::IBUFDS_GTXE1Params {members {{String clkcm_cfg} {String clkrcv_trst} {Bit#(10) refclkout_dly {width 10}}}} {position {XilinxCells.bsv 640 3}}
Interface XilinxCells::GTXE1ClockGenIfc {members {{interface Clock gen_clk {}} {interface Clock gen_clk_div2 {}}}} {position {XilinxCells.bsv 650 11}}
Struct XilinxCells::IBUFDS_GTE2Params {members {{String clkcm_cfg} {String clkrcv_trst} {Bit#(2) clkswing_cfg {width 2}}}} {position {XilinxCells.bsv 705 3}}
Interface XilinxCells::GTE2ClockGenIfc {members {{interface Clock gen_clk {}} {interface Clock gen_clk_div2 {}}}} {position {XilinxCells.bsv 715 11}}
Interface XilinxCells::GTE3ClockGenIfc {members {{interface Clock gen_clk {}} {interface Clock gen_clk_div2 {}}}} {position {XilinxCells.bsv 766 11}}
Struct XilinxCells::OBUFParams {members {{String capacitance} {Integer drive} {String iostandard} {String slew}}} {position {XilinxCells.bsv 847 3}}
Struct XilinxCells::OBUFDSParams {members {{String capacitance} {String iostandard} {String slew}}} {position {XilinxCells.bsv 901 3}}
Interface XilinxCells::DiffClock {members {{interface Clock p {}} {interface Clock n {}}}} {position {XilinxCells.bsv 911 11}}
Struct {XilinxCells::ODDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init} {String srtype}}} {position {XilinxCells.bsv 954 6}}
Interface {XilinxCells::ODDR#(type a)} polymorphic {members {{method {a q {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d1 a {{(* ports = ["i"] *)}}}} {method {Action d2 a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 966 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {XilinxCells::IDDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init_q1} {a init_q2} {String srtype}}} {position {XilinxCells.bsv 1093 6}}
Interface {XilinxCells::VIDDR#(type a)} polymorphic {members {{method {a q1 {} {{(* ports = [] *)}}}} {method {a q2 {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 1106 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {XilinxCells::IDDR#(type a)} polymorphic {members {{method {a q1 {} {{(* ports = [] *)}}}} {method {a q2 {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 1115 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxCells::IDELAYCTRL {members {{method {Bool rdy {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 1224 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct XilinxCells::IDELAYParams {members {{String iobdelay_type} {Integer iobdelay_value}}} {position {XilinxCells.bsv 1254 6}}
Interface {XilinxCells::VIDELAY#(type a)} polymorphic {members {{method {Action i a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action inc Bool {{(* ports = ["inc_not_dec"] *)} {(* always_ready  *)}}}} {method {a o {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1263 11}}
Interface {XilinxCells::IDELAY#(type a)} polymorphic {members {{method {Action i a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action inc Bool {{(* ports = ["inc_not_dec"] *)} {(* always_ready  *)}}}} {method {a o {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1272 11}}
Struct XilinxCells::IODELAYParams {members {{String delay_source} {String high_performance_mode} {String idelay_type} {Integer idelay_value} {Integer odelay_value} {Integer refclk_frequency} {String signal_pattern}}} {position {XilinxCells.bsv 1365 6}}
Struct XilinxCells::ClockIODELAYParams {members {{String delay_source} {String high_performance_mode} {String idelay_type} {Integer idelay_value} {Integer odelay_value} {Integer refclk_frequency} {String signal_pattern}}} {position {XilinxCells.bsv 1387 6}}
Interface {XilinxCells::VIODELAY#(type a)} polymorphic {members {{method {Action idatain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action odatain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {a dataout {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action datain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action t Bool {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action inc Bool {{(* ports = ["inc_not_dec"] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1401 11}}
Interface {XilinxCells::IODELAY#(type a)} polymorphic {members {{method {Action idatain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action odatain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {a dataout {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action datain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action t Bool {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action inc Bool {{(* ports = ["inc_not_dec"] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1416 11}}
Struct XilinxCells::PLLParams {members {{String bandwidth} {String clkfbout_deskew_adjust} {String clkout0_deskew_adjust} {String clkout1_deskew_adjust} {String clkout2_deskew_adjust} {String clkout3_deskew_adjust} {String clkout4_deskew_adjust} {String clkout5_deskew_adjust} {Integer clkfbout_mult} {Real clkfbout_phase} {Real clkin1_period} {Real clkin2_period} {Integer clkout0_divide} {Real clkout0_duty_cycle} {Real clkout0_phase} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {String compensation} {Integer divclk_divide} {String en_rel} {String pll_pmcd_mode} {Real ref_jitter} {String reset_on_loss_of_lock} {String rst_deassert_clk}}} {position {XilinxCells.bsv 1666 6}}
Interface XilinxCells::VPLL {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkoutdcm0 {}} {interface Clock clkoutdcm1 {}} {interface Clock clkoutdcm2 {}} {interface Clock clkoutdcm3 {}} {interface Clock clkoutdcm4 {}} {interface Clock clkoutdcm5 {}} {interface Clock clkfbout {}} {interface Clock clkfbdcm {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action clkin1sel Bool {{(* ports = ["select"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action fbin Bool {{(* ports = ["i"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1710 11}}
Interface XilinxCells::PLL {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkoutdcm0 {}} {interface Clock clkoutdcm1 {}} {interface Clock clkoutdcm2 {}} {interface Clock clkoutdcm3 {}} {interface Clock clkoutdcm4 {}} {interface Clock clkoutdcm5 {}} {interface Clock clkfbout {}} {interface Clock clkfbdcm {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action clkin1sel Bool {{(* ports = ["select"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action fbin Bool {{(* ports = ["i"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1733 11}}
Struct XilinxCells::ClockGeneratorParams {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Integer feedback_mul} {Integer feedback_div} {Integer clk0_div} {Real clk0_duty_cycle} {Real clk0_phase} {Bool clk0_buffer {width 1}} {Integer clk1_div} {Real clk1_duty_cycle} {Real clk1_phase} {Bool clk1_buffer {width 1}} {Integer clk2_div} {Real clk2_duty_cycle} {Real clk2_phase} {Bool clk2_buffer {width 1}} {Integer clk3_div} {Real clk3_duty_cycle} {Real clk3_phase} {Bool clk3_buffer {width 1}} {Integer clk4_div} {Real clk4_duty_cycle} {Real clk4_phase} {Bool clk4_buffer {width 1}} {Integer clk5_div} {Real clk5_duty_cycle} {Real clk5_phase} {Bool clk5_buffer {width 1}} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 1978 6}}
Interface XilinxCells::ClockGenerator {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2015 11}}
Interface XilinxCells::MMCME2 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2168 11}}
Interface XilinxCells::MMCME3 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2427 11}}
Interface XilinxCells::VMMCME3 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {interface Clock clkfbout {}} {interface Clock clkfbout_n {}} {interface XilinxCells::MMCM_DRP reconfig {}} {interface XilinxCells::MMCM_CDDC cddc {}} {interface XilinxCells::MMCM_PS phase_shift {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bool clkfb_stopped {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bool clkin_stopped {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action clkin1sel Bool {{(* ports = ["select"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action clkfbin Bit#(1) {{(* ports = ["clk"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2443 11}}
Struct XilinxCells::ClockGenerator6Params {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Real clkfbout_mult_f} {Real clkfbout_phase} {Integer divclk_divide} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Bool clkout4_buffer {width 1}} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Bool clkout5_buffer {width 1}} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Bool clkout6_buffer {width 1}} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 2767 3}}
Interface XilinxCells::ClockGenerator6 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2813 11}}
Struct XilinxCells::ClockGenerator7Params {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Real clkfbout_mult_f} {Real clkfbout_phase} {Integer divclk_divide} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Bool clkout4_buffer {width 1}} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Bool clkout5_buffer {width 1}} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Bool clkout6_buffer {width 1}} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 3042 3}}
Interface XilinxCells::ClockGenerator7 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3088 11}}
Struct XilinxCells::ClockGeneratorUParams {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Real clkfbout_mult_f} {Real clkfbout_phase} {Integer divclk_divide} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Bool clkout4_buffer {width 1}} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Bool clkout5_buffer {width 1}} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Bool clkout6_buffer {width 1}} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 3317 3}}
Interface XilinxCells::ClockGeneratorU {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3363 11}}
Struct XilinxCells::DCMParams {members {{Real clkdv_divide} {Integer clkfx_divide} {Integer clkfx_multiply} {String clkin_divide_by_2} {Real clkin_period} {String clkout_phase_shift} {String clk_feedback} {String dcm_autocalibration} {String dcm_performance_mode} {String deskew_adjust} {String dfs_frequency_mode} {String dll_frequency_mode} {String duty_cycle_correction} {Bit#(16) factory_jf {width 16}} {Integer phase_shift} {String sim_device} {String startup_wait}}} {position {XilinxCells.bsv 3570 6}}
Interface XilinxCells::VDCM {members {{interface Clock clkout0 {}} {interface Clock clkout180 {}} {interface Clock clkout270 {}} {interface Clock clkout2x180 {}} {interface Clock clkout2x {}} {interface Clock clkout90 {}} {interface Clock clkoutdv {}} {interface Clock clkoutfx180 {}} {interface Clock clkoutfx {}} {interface XilinxCells::VDCM_DRP recfg {}} {interface XilinxCells::VDCM_PS phase_shift {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)}}}} {method {Action fbin Bool {{(* ports = ["clkfb"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3594 11}}
Interface XilinxCells::VDCM_DRP {members {{method {Action request {Bool Bit#(7) Bit#(16)} {{(* ports = ["dwe", "daddr", "di"] *)} {(* always_ready  *)}}}} {method {Bit#(16) response {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3612 11}}
Interface XilinxCells::VDCM_PS {members {{method {Action incdec Bool {{(* ports = ["psincdec"] *)} {(* always_ready  *)}}}} {method {Bool done {} {{(* ports = [] *)} {(* always_enabled  *)}}}}}} {position {XilinxCells.bsv 3618 11}}
Interface XilinxCells::DCM {members {{interface Clock clkout0 {}} {interface Clock clkout180 {}} {interface Clock clkout270 {}} {interface Clock clkout2x180 {}} {interface Clock clkout2x {}} {interface Clock clkout90 {}} {interface Clock clkoutdv {}} {interface Clock clkoutfx180 {}} {interface Clock clkoutfx {}} {interface XilinxCells::DCM_DRP recfg {}} {interface XilinxCells::DCM_PS phase_shift {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)}}}} {method {Action fbin Bool {{(* ports = ["clkfb"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3625 11}}
Interface XilinxCells::DCM_DRP {members {{method {Action request {Bool Bit#(7) Bit#(16)} {{(* ports = ["dwe", "daddr", "di"] *)} {(* always_ready  *)}}}} {method {Bit#(16) response {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3643 11}}
Interface XilinxCells::DCM_PS {members {{method {Action incdec Bool {{(* ports = ["psincdec"] *)} {(* always_ready  *)}}}} {method {Bool done {} {{(* ports = [] *)} {(* always_enabled  *)}}}}}} {position {XilinxCells.bsv 3649 11}}
Struct XilinxCells::MMCMParams {members {{String bandwidth} {String clkfbout_use_fine_ps} {String clkout0_use_fine_ps} {String clkout1_use_fine_ps} {String clkout2_use_fine_ps} {String clkout3_use_fine_ps} {String clkout4_cascade} {String clkout4_use_fine_ps} {String clkout5_use_fine_ps} {String clkout6_use_fine_ps} {String clock_hold} {String compensation} {String startup_wait} {Real clkfbout_mult_f} {Real clkfbout_phase} {Real clkin1_period} {Real clkin2_period} {Integer divclk_divide} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Real ref_jitter1} {Real ref_jitter2} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 3877 3}}
Interface XilinxCells::MMCM_DRP {members {{method {Action request {Bool Bit#(7) Bit#(16)} {{(* ports = ["write", "addr", "datain"] *)}}}} {method {Bit#(16) response {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3926 11}}
Interface XilinxCells::MMCM_CDDC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Bool done {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3931 11}}
Interface XilinxCells::MMCM_PS {members {{method {Action incdec Bool {{(* ports = ["psincdec"] *)}}}} {method {Bool done {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3937 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxCells::MMCM {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {interface Clock clkfbout {}} {interface Clock clkfbout_n {}} {interface XilinxCells::MMCM_DRP reconfig {}} {interface XilinxCells::MMCM_PS phase_shift {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bool clkfb_stopped {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bool clkin_stopped {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action clkin1sel Bool {{(* ports = ["select"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action clkfbin Bit#(1) {{(* ports = ["clk"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3942 11}}
Struct XilinxCells::SRL16EParams {members {{Bit#(16) initValue {width 16}}}} {width 16} {position {XilinxCells.bsv 4188 3}}
Interface XilinxCells::VSRL16E {members {{method {Bit#(1) _read {} {{(* ports = [] *)}}}} {method {Action _write Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a0 Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a1 Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a2 Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a3 Bit#(1) {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 4197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxCells::SRL16E {members {{method {Bit#(1) _read {} {{(* ports = [] *)}}}} {method {Action _write Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a Bit#(4) {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 4207 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct XilinxCells::SRLC32EParams {members {{Bit#(32) initValue {width 32}}}} {width 32} {position {XilinxCells.bsv 4260 3}}
Interface XilinxCells::SRLC32E {members {{method {Bit#(1) _read {} {{(* ports = [] *)}}}} {method {Action _write Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a Bit#(5) {{(* ports = ["i"] *)}}}} {method {Bit#(1) cascade {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 4269 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ButtonController::Button {members {{method {Action button Bit#(1) {{(* ports = ["down"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {ButtonController.bsv 13 11}}
Interface ButtonController::ButtonController {members {{method {Bool pressed {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool released {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action setRepeatParams {UInt#(10) UInt#(10)} {{(* ports = ["delay", "interval"] *)} {(* always_ready  *)}}}} {method {Bool repeating {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface ButtonController::Button ifc {{(* prefix = "" *)}}}}} {position {ButtonController.bsv 19 11}}
Interface {DIPSwitch::DIP#(numeric type n)} polymorphic {members {{method {Action switch Bit#(n) {{(* ports = ["setting"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {DIPSwitch.bsv 14 11}}
Interface {DIPSwitch::DIPSwitch#(numeric type n)} polymorphic {members {{method {Bool changed {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(n) _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface DIPSwitch::DIP#(n) ifc {{(* prefix = "" *)}}}}} {position {DIPSwitch.bsv 20 11}}
Interface GPIOController::GPIO {members {{interface Inout#(Bit#(1)) gpio {}}}} {position {GPIOController.bsv 32 11}}
Interface GPIOController::GPIOController {members {{method {Action _write Bit#(1) {{(* ports = ["i"] *)} {(* always_ready  *)}}}} {method {Action drive_out Bool {{(* ports = ["i"] *)} {(* always_ready  *)}}}} {method {Bool read_drive_out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface GPIOController::GPIO ifc {{(* prefix = "" *)}}}}} {position {GPIOController.bsv 37 11}}
Alias LEDController::Time UInt#(16) {position {LEDController.bsv 24 19}}
Alias LEDController::Level UInt#(3) {position {LEDController.bsv 25 19}}
Alias LEDController::Lag UInt#(4) {position {LEDController.bsv 26 19}}
Interface {LEDController::LED#(numeric type n)} polymorphic {members {{method {Bit#(n) out {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {LEDController.bsv 37 11}}
Interface LEDController::LEDController {members {{method {Action setLag UInt#(4) {{(* ports = ["l"] *)} {(* always_ready  *)}}}} {method {Action setPeriod {UInt#(3) UInt#(16) UInt#(3) UInt#(16)} {{(* ports = ["lo_lvl", "lo_time", "hi_lvl", "hi_time"] *)} {(* always_ready  *)}}}} {method {Action setActivity UInt#(16) {{(* ports = ["on_time"] *)} {(* always_ready  *)}}}} {method {Action bump {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface LEDController::LED#(1) ifc {{(* prefix = "" *)}}}}} {position {LEDController.bsv 51 11}}
Interface LCDController::LCD {members {{method {Bit#(4) db {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) e {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) rs {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) rw {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {LCDController.bsv 19 11}}
Interface LCDController::LCDController {members {{method {Action setLine1 {{Vector::Vector#(16, Bit#(8))}} {{(* ports = ["text"] *)} {(* always_ready  *)}}}} {method {Action setLine2 {{Vector::Vector#(16, Bit#(8))}} {{(* ports = ["text"] *)} {(* always_ready  *)}}}} {interface LCDController::LCD ifc {{(* prefix = "" *)}}}}} {position {LCDController.bsv 31 11}}
Struct XilinxCells::BUFRParams {members {{String bufr_divide} {String sim_device}}} {position {XilinxCells.bsv 260 3}}
Struct XilinxCells::IBUFGParams {members {{String capacitance} {String ibuf_delay_value} {String ibuf_low_pwr} {String iostandard}}} {position {XilinxCells.bsv 363 3}}
Struct XilinxCells::IBUFParams {members {{String capacitance} {String ibuf_delay_value} {String ibuf_low_pwr} {String ifd_delay_value} {String iostandard}}} {position {XilinxCells.bsv 439 3}}
Struct XilinxCells::IBUFDSParams {members {{String capacitance} {String diff_term} {String dqs_bias} {String ibuf_delay_value} {String ibuf_low_pwr} {String ifd_delay_value} {String iostandard}}} {position {XilinxCells.bsv 542 3}}
Struct XilinxCells::IBUFGDSParams {members {{String capacitance} {String diff_term} {String ibuf_delay_value} {String ibuf_low_pwr} {String iostandard}}} {position {XilinxCells.bsv 594 3}}
Struct XilinxCells::IBUFDS_GTXE1Params {members {{String clkcm_cfg} {String clkrcv_trst} {Bit#(10) refclkout_dly {width 10}}}} {position {XilinxCells.bsv 640 3}}
Struct XilinxCells::IBUFDS_GTE2Params {members {{String clkcm_cfg} {String clkrcv_trst} {Bit#(2) clkswing_cfg {width 2}}}} {position {XilinxCells.bsv 705 3}}
Struct XilinxCells::OBUFParams {members {{String capacitance} {Integer drive} {String iostandard} {String slew}}} {position {XilinxCells.bsv 847 3}}
Struct XilinxCells::OBUFDSParams {members {{String capacitance} {String iostandard} {String slew}}} {position {XilinxCells.bsv 901 3}}
Interface XilinxCells::DiffClock {members {{interface Clock p {}} {interface Clock n {}}}} {position {XilinxCells.bsv 911 11}}
Struct {XilinxCells::ODDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init} {String srtype}}} {position {XilinxCells.bsv 954 6}}
Interface {XilinxCells::ODDR#(type a)} polymorphic {members {{method {a q {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d1 a {{(* ports = ["i"] *)}}}} {method {Action d2 a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 966 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {XilinxCells::IDDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init_q1} {a init_q2} {String srtype}}} {position {XilinxCells.bsv 1093 6}}
Interface {XilinxCells::IDDR#(type a)} polymorphic {members {{method {a q1 {} {{(* ports = [] *)}}}} {method {a q2 {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 1115 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxCells::IDELAYCTRL {members {{method {Bool rdy {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 1224 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct XilinxCells::IDELAYParams {members {{String iobdelay_type} {Integer iobdelay_value}}} {position {XilinxCells.bsv 1254 6}}
Interface {XilinxCells::IDELAY#(type a)} polymorphic {members {{method {Action i a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action inc Bool {{(* ports = ["inc_not_dec"] *)} {(* always_ready  *)}}}} {method {a o {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1272 11}}
Struct XilinxCells::IODELAYParams {members {{String delay_source} {String high_performance_mode} {String idelay_type} {Integer idelay_value} {Integer odelay_value} {Integer refclk_frequency} {String signal_pattern}}} {position {XilinxCells.bsv 1365 6}}
Struct XilinxCells::ClockIODELAYParams {members {{String delay_source} {String high_performance_mode} {String idelay_type} {Integer idelay_value} {Integer odelay_value} {Integer refclk_frequency} {String signal_pattern}}} {position {XilinxCells.bsv 1387 6}}
Interface {XilinxCells::IODELAY#(type a)} polymorphic {members {{method {Action idatain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action odatain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {a dataout {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action datain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action t Bool {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action inc Bool {{(* ports = ["inc_not_dec"] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1416 11}}
Struct XilinxCells::PLLParams {members {{String bandwidth} {String clkfbout_deskew_adjust} {String clkout0_deskew_adjust} {String clkout1_deskew_adjust} {String clkout2_deskew_adjust} {String clkout3_deskew_adjust} {String clkout4_deskew_adjust} {String clkout5_deskew_adjust} {Integer clkfbout_mult} {Real clkfbout_phase} {Real clkin1_period} {Real clkin2_period} {Integer clkout0_divide} {Real clkout0_duty_cycle} {Real clkout0_phase} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {String compensation} {Integer divclk_divide} {String en_rel} {String pll_pmcd_mode} {Real ref_jitter} {String reset_on_loss_of_lock} {String rst_deassert_clk}}} {position {XilinxCells.bsv 1666 6}}
Interface XilinxCells::PLL {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkoutdcm0 {}} {interface Clock clkoutdcm1 {}} {interface Clock clkoutdcm2 {}} {interface Clock clkoutdcm3 {}} {interface Clock clkoutdcm4 {}} {interface Clock clkoutdcm5 {}} {interface Clock clkfbout {}} {interface Clock clkfbdcm {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action clkin1sel Bool {{(* ports = ["select"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action fbin Bool {{(* ports = ["i"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1733 11}}
Struct XilinxCells::ClockGeneratorParams {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Integer feedback_mul} {Integer feedback_div} {Integer clk0_div} {Real clk0_duty_cycle} {Real clk0_phase} {Bool clk0_buffer {width 1}} {Integer clk1_div} {Real clk1_duty_cycle} {Real clk1_phase} {Bool clk1_buffer {width 1}} {Integer clk2_div} {Real clk2_duty_cycle} {Real clk2_phase} {Bool clk2_buffer {width 1}} {Integer clk3_div} {Real clk3_duty_cycle} {Real clk3_phase} {Bool clk3_buffer {width 1}} {Integer clk4_div} {Real clk4_duty_cycle} {Real clk4_phase} {Bool clk4_buffer {width 1}} {Integer clk5_div} {Real clk5_duty_cycle} {Real clk5_phase} {Bool clk5_buffer {width 1}} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 1978 6}}
Interface XilinxCells::ClockGenerator {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2015 11}}
Interface XilinxCells::MMCME2 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2168 11}}
Interface XilinxCells::MMCME3 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2427 11}}
Struct XilinxCells::ClockGenerator6Params {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Real clkfbout_mult_f} {Real clkfbout_phase} {Integer divclk_divide} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Bool clkout4_buffer {width 1}} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Bool clkout5_buffer {width 1}} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Bool clkout6_buffer {width 1}} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 2767 3}}
Interface XilinxCells::ClockGenerator6 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2813 11}}
Struct XilinxCells::ClockGenerator7Params {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Real clkfbout_mult_f} {Real clkfbout_phase} {Integer divclk_divide} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Bool clkout4_buffer {width 1}} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Bool clkout5_buffer {width 1}} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Bool clkout6_buffer {width 1}} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 3042 3}}
Interface XilinxCells::ClockGenerator7 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3088 11}}
Struct XilinxCells::ClockGeneratorUParams {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Real clkfbout_mult_f} {Real clkfbout_phase} {Integer divclk_divide} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Bool clkout4_buffer {width 1}} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Bool clkout5_buffer {width 1}} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Bool clkout6_buffer {width 1}} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 3317 3}}
Interface XilinxCells::ClockGeneratorU {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3363 11}}
Struct XilinxCells::DCMParams {members {{Real clkdv_divide} {Integer clkfx_divide} {Integer clkfx_multiply} {String clkin_divide_by_2} {Real clkin_period} {String clkout_phase_shift} {String clk_feedback} {String dcm_autocalibration} {String dcm_performance_mode} {String deskew_adjust} {String dfs_frequency_mode} {String dll_frequency_mode} {String duty_cycle_correction} {Bit#(16) factory_jf {width 16}} {Integer phase_shift} {String sim_device} {String startup_wait}}} {position {XilinxCells.bsv 3570 6}}
Interface XilinxCells::DCM {members {{interface Clock clkout0 {}} {interface Clock clkout180 {}} {interface Clock clkout270 {}} {interface Clock clkout2x180 {}} {interface Clock clkout2x {}} {interface Clock clkout90 {}} {interface Clock clkoutdv {}} {interface Clock clkoutfx180 {}} {interface Clock clkoutfx {}} {interface XilinxCells::DCM_DRP recfg {}} {interface XilinxCells::DCM_PS phase_shift {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)}}}} {method {Action fbin Bool {{(* ports = ["clkfb"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3625 11}}
Interface XilinxCells::DCM_DRP {members {{method {Action request {Bool Bit#(7) Bit#(16)} {{(* ports = ["dwe", "daddr", "di"] *)} {(* always_ready  *)}}}} {method {Bit#(16) response {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3643 11}}
Interface XilinxCells::DCM_PS {members {{method {Action incdec Bool {{(* ports = ["psincdec"] *)} {(* always_ready  *)}}}} {method {Bool done {} {{(* ports = [] *)} {(* always_enabled  *)}}}}}} {position {XilinxCells.bsv 3649 11}}
Struct XilinxCells::MMCMParams {members {{String bandwidth} {String clkfbout_use_fine_ps} {String clkout0_use_fine_ps} {String clkout1_use_fine_ps} {String clkout2_use_fine_ps} {String clkout3_use_fine_ps} {String clkout4_cascade} {String clkout4_use_fine_ps} {String clkout5_use_fine_ps} {String clkout6_use_fine_ps} {String clock_hold} {String compensation} {String startup_wait} {Real clkfbout_mult_f} {Real clkfbout_phase} {Real clkin1_period} {Real clkin2_period} {Integer divclk_divide} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Real ref_jitter1} {Real ref_jitter2} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 3877 3}}
Interface XilinxCells::MMCM_DRP {members {{method {Action request {Bool Bit#(7) Bit#(16)} {{(* ports = ["write", "addr", "datain"] *)}}}} {method {Bit#(16) response {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3926 11}}
Interface XilinxCells::MMCM_CDDC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Bool done {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3931 11}}
Interface XilinxCells::MMCM_PS {members {{method {Action incdec Bool {{(* ports = ["psincdec"] *)}}}} {method {Bool done {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3937 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxCells::MMCM {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {interface Clock clkfbout {}} {interface Clock clkfbout_n {}} {interface XilinxCells::MMCM_DRP reconfig {}} {interface XilinxCells::MMCM_PS phase_shift {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bool clkfb_stopped {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bool clkin_stopped {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action clkin1sel Bool {{(* ports = ["select"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action clkfbin Bit#(1) {{(* ports = ["clk"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3942 11}}
Struct XilinxCells::SRL16EParams {members {{Bit#(16) initValue {width 16}}}} {width 16} {position {XilinxCells.bsv 4188 3}}
Interface XilinxCells::SRL16E {members {{method {Bit#(1) _read {} {{(* ports = [] *)}}}} {method {Action _write Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a Bit#(4) {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 4207 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct XilinxCells::SRLC32EParams {members {{Bit#(32) initValue {width 32}}}} {width 32} {position {XilinxCells.bsv 4260 3}}
Interface XilinxCells::SRLC32E {members {{method {Bit#(1) _read {} {{(* ports = [] *)}}}} {method {Action _write Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a Bit#(5) {{(* ports = ["i"] *)}}}} {method {Bit#(1) cascade {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 4269 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface DVIController::DVI_Pins {members {{interface Reset rst_n {}} {interface Clock xclk_p {}} {interface Clock xclk_n {}} {method {Bool hsync_n {} {{(* ports = [] *)}}}} {method {Bool vsync_n {} {{(* ports = [] *)}}}} {method {Bool de {} {{(* ports = [] *)}}}} {method {Bit#(12) data {} {{(* ports = [] *)}}}} {interface Clock pclk_p {}} {interface Clock pclk_n {}}}} {position {DVIController.bsv 74 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface DVIController::DVI_User {members {{interface GetPut::Put#(Video::RGB888) pixel {}} {method {Bool hsync_n {} {{(* ports = [] *)}}}} {method {Bool vsync_n {} {{(* ports = [] *)}}}}}} {position {DVIController.bsv 86 11}}
Interface {DVIController::DVIController#(numeric type clockMHz)} polymorphic {members {{interface DVIController::DVI_User user {{(* prefix = "" *)}}} {interface DVIController::DVI_Pins dvi {{(* prefix = "" *)}}} {interface {ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)} i2c {}}}} {position {DVIController.bsv 92 11}}
Struct HDMIController::HDMIParams {members {{String xilinxBoard} {Video::VideoTiming timing} {Clock userClock} {Reset userReset}}} {position {HDMIController.bsv 66 3}}
Interface HDMIController::HDMI_Pins {members {{interface Clock clk {}} {method {Bit#(18) data {} {{(* ports = [] *)}}}} {method {Bit#(1) de {} {{(* ports = [] *)}}}} {method {Bit#(1) hsync {} {{(* ports = [] *)}}}} {method {Bit#(1) vsync {} {{(* ports = [] *)}}}} {method {Bit#(1) spdif {} {{(* ports = [] *)}}}} {method {Action interrupt Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action spdif_in Bit#(1) {{(* ports = ["i"] *)}}}}}} {position {HDMIController.bsv 81 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface HDMIController::HDMIController {members {{interface HDMIController::HDMI_Pins hdmi {{(* prefix = "" *)}}} {interface {ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)} i2c {}}}} {position {HDMIController.bsv 92 11}}
Interface ButtonController::Button {members {{method {Action button Bit#(1) {{(* ports = ["down"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {ButtonController.bsv 13 11}}
Interface ButtonController::ButtonController {members {{method {Bool pressed {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool released {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action setRepeatParams {UInt#(10) UInt#(10)} {{(* ports = ["delay", "interval"] *)} {(* always_ready  *)}}}} {method {Bool repeating {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface ButtonController::Button ifc {{(* prefix = "" *)}}}}} {position {ButtonController.bsv 19 11}}
Interface {DIPSwitch::DIP#(numeric type n)} polymorphic {members {{method {Action switch Bit#(n) {{(* ports = ["setting"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {DIPSwitch.bsv 14 11}}
Interface {DIPSwitch::DIPSwitch#(numeric type n)} polymorphic {members {{method {Bool changed {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(n) _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface DIPSwitch::DIP#(n) ifc {{(* prefix = "" *)}}}}} {position {DIPSwitch.bsv 20 11}}
Interface GPIOController::GPIO {members {{interface Inout#(Bit#(1)) gpio {}}}} {position {GPIOController.bsv 32 11}}
Interface GPIOController::GPIOController {members {{method {Action _write Bit#(1) {{(* ports = ["i"] *)} {(* always_ready  *)}}}} {method {Action drive_out Bool {{(* ports = ["i"] *)} {(* always_ready  *)}}}} {method {Bool read_drive_out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface GPIOController::GPIO ifc {{(* prefix = "" *)}}}}} {position {GPIOController.bsv 37 11}}
Alias LEDController::Time UInt#(16) {position {LEDController.bsv 24 19}}
Alias LEDController::Level UInt#(3) {position {LEDController.bsv 25 19}}
Alias LEDController::Lag UInt#(4) {position {LEDController.bsv 26 19}}
Interface {LEDController::LED#(numeric type n)} polymorphic {members {{method {Bit#(n) out {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {LEDController.bsv 37 11}}
Interface LEDController::LEDController {members {{method {Action setLag UInt#(4) {{(* ports = ["l"] *)} {(* always_ready  *)}}}} {method {Action setPeriod {UInt#(3) UInt#(16) UInt#(3) UInt#(16)} {{(* ports = ["lo_lvl", "lo_time", "hi_lvl", "hi_time"] *)} {(* always_ready  *)}}}} {method {Action setActivity UInt#(16) {{(* ports = ["on_time"] *)} {(* always_ready  *)}}}} {method {Action bump {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface LEDController::LED#(1) ifc {{(* prefix = "" *)}}}}} {position {LEDController.bsv 51 11}}
Interface LCDController::LCD {members {{method {Bit#(4) db {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) e {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) rs {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) rw {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {LCDController.bsv 19 11}}
Interface LCDController::LCDController {members {{method {Action setLine1 {{Vector::Vector#(16, Bit#(8))}} {{(* ports = ["text"] *)} {(* always_ready  *)}}}} {method {Action setLine2 {{Vector::Vector#(16, Bit#(8))}} {{(* ports = ["text"] *)} {(* always_ready  *)}}}} {interface LCDController::LCD ifc {{(* prefix = "" *)}}}}} {position {LCDController.bsv 31 11}}
Interface DVIController::DVI_Pins {members {{interface Reset rst_n {}} {interface Clock xclk_p {}} {interface Clock xclk_n {}} {method {Bool hsync_n {} {{(* ports = [] *)}}}} {method {Bool vsync_n {} {{(* ports = [] *)}}}} {method {Bool de {} {{(* ports = [] *)}}}} {method {Bit#(12) data {} {{(* ports = [] *)}}}} {interface Clock pclk_p {}} {interface Clock pclk_n {}}}} {position {DVIController.bsv 74 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface DVIController::DVI_User {members {{interface GetPut::Put#(Video::RGB888) pixel {}} {method {Bool hsync_n {} {{(* ports = [] *)}}}} {method {Bool vsync_n {} {{(* ports = [] *)}}}}}} {position {DVIController.bsv 86 11}}
Interface {DVIController::DVIController#(numeric type clockMHz)} polymorphic {members {{interface DVIController::DVI_User user {{(* prefix = "" *)}}} {interface DVIController::DVI_Pins dvi {{(* prefix = "" *)}}} {interface {ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)} i2c {}}}} {position {DVIController.bsv 92 11}}
Struct HDMIController::HDMIParams {members {{String xilinxBoard} {Video::VideoTiming timing} {Clock userClock} {Reset userReset}}} {position {HDMIController.bsv 66 3}}
Interface HDMIController::HDMI_Pins {members {{interface Clock clk {}} {method {Bit#(18) data {} {{(* ports = [] *)}}}} {method {Bit#(1) de {} {{(* ports = [] *)}}}} {method {Bit#(1) hsync {} {{(* ports = [] *)}}}} {method {Bit#(1) vsync {} {{(* ports = [] *)}}}} {method {Bit#(1) spdif {} {{(* ports = [] *)}}}} {method {Action interrupt Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action spdif_in Bit#(1) {{(* ports = ["i"] *)}}}}}} {position {HDMIController.bsv 81 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface HDMIController::HDMIController {members {{interface HDMIController::HDMI_Pins hdmi {{(* prefix = "" *)}}} {interface {ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)} i2c {}}}} {position {HDMIController.bsv 92 11}}
Interface {DIPSwitch::DIP#(numeric type n)} polymorphic {members {{method {Action switch Bit#(n) {{(* ports = ["setting"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {DIPSwitch.bsv 14 11}}
Interface {DIPSwitch::DIPSwitch#(numeric type n)} polymorphic {members {{method {Bool changed {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(n) _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface DIPSwitch::DIP#(n) ifc {{(* prefix = "" *)}}}}} {position {DIPSwitch.bsv 20 11}}
Alias LEDController::Time UInt#(16) {position {LEDController.bsv 24 19}}
Alias LEDController::Level UInt#(3) {position {LEDController.bsv 25 19}}
Alias LEDController::Lag UInt#(4) {position {LEDController.bsv 26 19}}
Interface {LEDController::LED#(numeric type n)} polymorphic {members {{method {Bit#(n) out {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {LEDController.bsv 37 11}}
Interface LEDController::LEDController {members {{method {Action setLag UInt#(4) {{(* ports = ["l"] *)} {(* always_ready  *)}}}} {method {Action setPeriod {UInt#(3) UInt#(16) UInt#(3) UInt#(16)} {{(* ports = ["lo_lvl", "lo_time", "hi_lvl", "hi_time"] *)} {(* always_ready  *)}}}} {method {Action setActivity UInt#(16) {{(* ports = ["on_time"] *)} {(* always_ready  *)}}}} {method {Action bump {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface LEDController::LED#(1) ifc {{(* prefix = "" *)}}}}} {position {LEDController.bsv 51 11}}
Interface GPIOController::GPIO {members {{interface Inout#(Bit#(1)) gpio {}}}} {position {GPIOController.bsv 32 11}}
Interface GPIOController::GPIOController {members {{method {Action _write Bit#(1) {{(* ports = ["i"] *)} {(* always_ready  *)}}}} {method {Action drive_out Bool {{(* ports = ["i"] *)} {(* always_ready  *)}}}} {method {Bool read_drive_out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface GPIOController::GPIO ifc {{(* prefix = "" *)}}}}} {position {GPIOController.bsv 37 11}}
Interface ButtonController::Button {members {{method {Action button Bit#(1) {{(* ports = ["down"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {ButtonController.bsv 13 11}}
Interface ButtonController::ButtonController {members {{method {Bool pressed {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool released {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action setRepeatParams {UInt#(10) UInt#(10)} {{(* ports = ["delay", "interval"] *)} {(* always_ready  *)}}}} {method {Bool repeating {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface ButtonController::Button ifc {{(* prefix = "" *)}}}}} {position {ButtonController.bsv 19 11}}
Interface DVIController::DVI_Pins {members {{interface Reset rst_n {}} {interface Clock xclk_p {}} {interface Clock xclk_n {}} {method {Bool hsync_n {} {{(* ports = [] *)}}}} {method {Bool vsync_n {} {{(* ports = [] *)}}}} {method {Bool de {} {{(* ports = [] *)}}}} {method {Bit#(12) data {} {{(* ports = [] *)}}}} {interface Clock pclk_p {}} {interface Clock pclk_n {}}}} {position {DVIController.bsv 74 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface DVIController::DVI_User {members {{interface GetPut::Put#(Video::RGB888) pixel {}} {method {Bool hsync_n {} {{(* ports = [] *)}}}} {method {Bool vsync_n {} {{(* ports = [] *)}}}}}} {position {DVIController.bsv 86 11}}
Interface {DVIController::DVIController#(numeric type clockMHz)} polymorphic {members {{interface DVIController::DVI_User user {{(* prefix = "" *)}}} {interface DVIController::DVI_Pins dvi {{(* prefix = "" *)}}} {interface {ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)} i2c {}}}} {position {DVIController.bsv 92 11}}
Interface LCDController::LCD {members {{method {Bit#(4) db {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) e {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) rs {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) rw {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {LCDController.bsv 19 11}}
Interface LCDController::LCDController {members {{method {Action setLine1 {{Vector::Vector#(16, Bit#(8))}} {{(* ports = ["text"] *)} {(* always_ready  *)}}}} {method {Action setLine2 {{Vector::Vector#(16, Bit#(8))}} {{(* ports = ["text"] *)} {(* always_ready  *)}}}} {interface LCDController::LCD ifc {{(* prefix = "" *)}}}}} {position {LCDController.bsv 31 11}}
Struct HDMIController::HDMIParams {members {{String xilinxBoard} {Video::VideoTiming timing} {Clock userClock} {Reset userReset}}} {position {HDMIController.bsv 66 3}}
Interface HDMIController::HDMI_Pins {members {{interface Clock clk {}} {method {Bit#(18) data {} {{(* ports = [] *)}}}} {method {Bit#(1) de {} {{(* ports = [] *)}}}} {method {Bit#(1) hsync {} {{(* ports = [] *)}}}} {method {Bit#(1) vsync {} {{(* ports = [] *)}}}} {method {Bit#(1) spdif {} {{(* ports = [] *)}}}} {method {Action interrupt Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action spdif_in Bit#(1) {{(* ports = ["i"] *)}}}}}} {position {HDMIController.bsv 81 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface HDMIController::HDMIController {members {{interface HDMIController::HDMI_Pins hdmi {{(* prefix = "" *)}}} {interface {ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)} i2c {}}}} {position {HDMIController.bsv 92 11}}
Enum XilinxClocks::State {members {Restart WaitLock WaitStart Address Read Modify Write WaitWriteReady}} {width 3} {position {XilinxClocks.bsv 41 3}}
Struct XilinxClocks::XilinxClockRequest {members {{Bool rnw {width 1}} {Bit#(5) addr {width 5}} {Bit#(16) data {width 16}}}} {width 22} {position {XilinxClocks.bsv 47 3}}
Enum XilinxClocks::XilinxEType {members {NONE E2 E3}} {width 2} {position {XilinxClocks.bsv 49 31}}
Struct XilinxClocks::XilinxClockParams {members {{XilinxClocks::XilinxEType e_type {width 2}} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Bool clkout4_buffer {width 1}} {Bool clkout5_buffer {width 1}} {Bool clkout6_buffer {width 1}} {String bandwidth} {String clkfbout_use_fine_ps} {String clkout0_use_fine_ps} {String clkout1_use_fine_ps} {String clkout2_use_fine_ps} {String clkout3_use_fine_ps} {String clkout4_cascade} {String clkout4_use_fine_ps} {String clkout5_use_fine_ps} {String clkout6_use_fine_ps} {String clock_hold} {String compensation} {String startup_wait} {Real clkfbout_mult_f} {Real clkfbout_phase} {Real clkin1_period} {Real clkin2_period} {Integer divclk_divide} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Real ref_jitter1} {Real ref_jitter2}}} {position {XilinxClocks.bsv 105 3}}
Alias XilinxClocks::XilinxClockCSR {ClientServer::Server#(XilinxClocks::XilinxClockRequest, Bit#(16))} {position {XilinxClocks.bsv 165 47}}
Alias XilinxClocks::XilinxClkClient {ClientServer::Client#(Bit#(32), Bit#(32))} {position {XilinxClocks.bsv 167 37}}
Alias XilinxClocks::XilinxClkServer {ClientServer::Server#(Bit#(32), Bit#(32))} {position {XilinxClocks.bsv 168 37}}
Interface XilinxClocks::VMMCM_ADV {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {interface Clock clkfbout {}} {interface Clock clkfbout_n {}} {method {Action clkfbin Bool {{(* ports = ["clk"] *)}}}} {method {Action rst Bool {{(* ports = ["i"] *)}}}} {method {Bool locked {} {{(* ports = [] *)}}}} {method {Action daddr Bit#(7) {{(* ports = ["i"] *)}}}} {method {Action dsel Bool {{(* ports = ["i"] *)}}}} {method {Action di Bit#(16) {{(* ports = ["i"] *)}}}} {method {Action dwe Bool {{(* ports = ["i"] *)}}}} {method {Bit#(16) dout {} {{(* ports = [] *)}}}} {method {Bool drdy {} {{(* ports = [] *)}}}}}} {position {XilinxClocks.bsv 174 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxClocks::XilinxClockController {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)}}}} {interface {ClientServer::Server#(XilinxClocks::XilinxClockRequest, Bit#(16))} csr {}}}} {position {XilinxClocks.bsv 199 11}}
Interface PTMClocks::OutputBit {members {{method {Bit#(1) out {} {{(* ports = [] *)}}}}}} {position {PTMClocks.bsv 12 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ClockHacks::UnpackedClock {members {{interface Clock clk {}} {method {Action in Bit#(1) {{(* ports = ["x"] *)}}}}}} {position {src_BSV/ClockHacks.bsv 41 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ClockHacks::UnpackedReset {members {{interface Reset rst {}} {method {Action in Bit#(1) {{(* ports = ["x"] *)}}}}}} {position {src_BSV/ClockHacks.bsv 61 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ClockHacks::BlockIfc {members {{interface Clock clk {}} {interface Reset rst {}}}} {position {src_BSV/ClockHacks.bsv 83 11}}
Interface Giraffe_IFC::JTAG_IFC {members {{method {Action tdi Bit#(1) {{(* ports = ["tdi"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action tms Bit#(1) {{(* ports = ["tms"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action tclk Bit#(1) {{(* ports = ["tclk"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Bit#(1) tdo {} {{(* ports = [] *)} {(* result = "tdo" *)}}}} {interface Clock tclk_out {}}}} {position {src_BSV/Giraffe_IFC.bsv 24 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Giraffe_IFC::DMI_Master_IFC {members {{method {Action req_ready Bit#(1) {{(* ports = ["req_ready"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Bit#(1) req_valid {} {{(* ports = [] *)} {(* result = "req_valid" *)}}}} {method {Bit#(7) req_addr {} {{(* ports = [] *)} {(* result = "req_addr" *)}}}} {method {Bit#(32) req_data {} {{(* ports = [] *)} {(* result = "req_data" *)}}}} {method {Bit#(2) req_op {} {{(* ports = [] *)} {(* result = "req_op" *)}}}} {method {Bit#(1) rsp_ready {} {{(* ports = [] *)} {(* result = "rsp_ready" *)}}}} {method {Action rsp_valid Bit#(1) {{(* ports = ["rsp_valid"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action rsp_data Bit#(32) {{(* ports = ["rsp_data"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action rsp_response Bit#(2) {{(* ports = ["rsp_response"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}}}} {position {src_BSV/Giraffe_IFC.bsv 41 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Giraffe_IFC::DMI_IFC {members {{method {Bit#(1) req_ready {} {{(* ports = [] *)} {(* result = "req_ready" *)}}}} {method {Action req_valid Bit#(1) {{(* ports = ["req_valid"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action req_addr Bit#(7) {{(* ports = ["req_addr"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action req_data Bit#(32) {{(* ports = ["req_data"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action req_op Bit#(2) {{(* ports = ["req_op"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action rsp_ready Bit#(1) {{(* ports = ["rsp_ready"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Bit#(1) rsp_valid {} {{(* ports = [] *)} {(* result = "rsp_valid" *)}}}} {method {Bit#(32) rsp_data {} {{(* ports = [] *)} {(* result = "rsp_data" *)}}}} {method {Bit#(2) rsp_response {} {{(* ports = [] *)} {(* result = "rsp_response" *)}}}}}} {position {src_BSV/Giraffe_IFC.bsv 71 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Core_IFC::Core_IFC#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 80 11}}
Interface Giraffe_IFC::Platform_IFC {members {{interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave0 {}} {interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave1 {}} {interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave2 {}} {interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave3 {}} {method {Bit#(1) interrupt0 {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bit#(1) interrupt1 {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bit#(1) interrupt2 {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {interface BusDefines::BusSend#(Bit#(8)) uart_out {}} {interface BusDefines::BusRecv#(Bit#(8)) uart_in {}}}} {position {src_BSV/Giraffe_IFC.bsv 147 11}}
Alias JtagTap::ABITS 6 {position {src_BSV/JtagTap.bsv 15 11}}
Alias JtagTap::IR_LENGTH 18 {position {src_BSV/JtagTap.bsv 20 12}}
Alias JtagTap::DR_LENGTH 40 {position {src_BSV/JtagTap.bsv 27 25}}
Enum JtagTap::JtagState {members {TEST_LOGIC_RESET RUN_TEST_IDLE SELECT_DR_SCAN CAPTURE_DR SHIFT_DR EXIT1_DR PAUSE_DR EXIT2_DR UPDATE_DR SELECT_IR_SCAN CAPTURE_IR SHIFT_IR EXIT1_IR PAUSE_IR EXIT2_IR UPDATE_IR}} {width 4} {position {src_BSV/JtagTap.bsv 79 6}}
Struct JtagTap::DTMCS {members {{Reserved::ReservedZero#(14) reserved {width 14}} {Bit#(1) dmihardreset {width 1}} {Bit#(1) dmireset {width 1}} {Reserved::ReservedZero#(1) reserved2 {width 1}} {Bit#(3) idle {width 3}} {Bit#(2) dmistat {width 2}} {Bit#(6) abits {width 6}} {Bit#(4) version {width 4}}}} {width 32} {position {src_BSV/JtagTap.bsv 90 6}}
Alias JtagTap::DMI_OP Bit#(2) {position {src_BSV/JtagTap.bsv 107 17}}
Struct JtagTap::DMI {members {{Bit#(6) address {width 6}} {Bit#(32) data {width 32}} {Bit#(2) op {width 2}}}} {width 40} {position {src_BSV/JtagTap.bsv 120 6}}
Interface JtagTap::JtagTap_IFC {members {{interface Giraffe_IFC::JTAG_IFC jtag {}} {interface Giraffe_IFC::DMI_Master_IFC dmi {}}}} {position {src_BSV/JtagTap.bsv 174 11}}
Interface P2_Core::P2_Core_IFC {members {{interface {AXI4_Types::AXI4_Master_Sig#(5, 64, 64, 0, 0, 0, 0, 0)} master0 {}} {interface {AXI4_Types::AXI4_Master_Sig#(6, 64, 64, 0, 0, 0, 0, 0)} master1 {}} {method {Action interrupt_reqs Bit#(0) {{(* ports = ["cpu_external_interrupt_req"] *)} {(* prefix = "" *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {interface Giraffe_IFC::JTAG_IFC jtag {}}}} {position {src_BSV/P2_Core.bsv 82 11}}
