Interface {Simplefifo::FIFOIfc#(type value_size)} polymorphic {members {{method {Action enq value_size {{(* ports = ["value"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {value_size first {} {{(* ports = [] *)}}}}}} {position {tutorial/Simplefifo.bsv 7 11}}
Interface {Simplefifo::FIFOIfcConnector#(type value_size)} polymorphic {members {{interface Simplefifo::FIFOIfc#(value_size) ff1 {}} {interface Simplefifo::FIFOIfc#(value_size) ff2 {}}}} {position {tutorial/Simplefifo.bsv 13 11}}
Alias ExampleAXI4::NMASTERS 2 {position {tutorial/ExampleAXI4.bsv 42 11}}
Alias ExampleAXI4::NSLAVES 2 {position {tutorial/ExampleAXI4.bsv 43 11}}
Alias ExampleAXI4::SlaveWidth 4096 {position {tutorial/ExampleAXI4.bsv 45 14}}
Alias ExampleAXI4::MID_sz 1 {position {tutorial/ExampleAXI4.bsv 47 25}}
Alias ExampleAXI4::SID_sz 2 {position {tutorial/ExampleAXI4.bsv 48 39}}
Alias ExampleAXI4::ADDR_sz 14 {position {tutorial/ExampleAXI4.bsv 49 53}}
Alias ExampleAXI4::DATA_sz 128 {position {tutorial/ExampleAXI4.bsv 50 13}}
Alias ExampleAXI4::AWUSER_sz 0 {position {tutorial/ExampleAXI4.bsv 51 13}}
Alias ExampleAXI4::WUSER_sz 0 {position {tutorial/ExampleAXI4.bsv 52 13}}
Alias ExampleAXI4::BUSER_sz 0 {position {tutorial/ExampleAXI4.bsv 53 13}}
Alias ExampleAXI4::ARUSER_sz 0 {position {tutorial/ExampleAXI4.bsv 54 13}}
Alias ExampleAXI4::RUSER_sz 0 {position {tutorial/ExampleAXI4.bsv 55 13}}
Struct {AddressFlit::AFlit#(numeric type d, numeric type o)} polymorphic {members {{Bit#(d) data} {Bit#(o) dest}}} {position {tutorial/AddressFlit.bsv 8 3}}
Interface {CRC::CRC#(numeric type n)} polymorphic {members {{method {Action add Bit#(8) {{(* ports = ["data"] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bit#(n) result {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(n)) complete {} {{(* ports = [] *)}}}}}} {position {%/Libraries/CRC.bsv 19 11 {Library CRC}}}

TaggedUnion {Reserved::Reserved#(numeric type n)} polymorphic {members {{Bit#(n) Reserved}}} {position {%/Libraries/Reserved.bs 16 5 {Library Reserved}}}
TaggedUnion {Reserved::ReservedZero#(numeric type n)} polymorphic {members {{Bit#(n) ReservedZero}}} {position {%/Libraries/Reserved.bs 17 5 {Library Reserved}}}
TaggedUnion {Reserved::ReservedOne#(numeric type n)} polymorphic {members {{Bit#(n) ReservedOne}}} {position {%/Libraries/Reserved.bs 18 5 {Library Reserved}}}
Struct BRAM::BRAM_Configure {members {{Integer memorySize} {Integer latency} {BRAM::LoadFormat loadFormat} {Integer outFIFODepth} {Bool allowWriteResponseBypass {width 1}}}} {position {%/Libraries/BRAM.bsv 47 6 {Library BRAM}}}
TaggedUnion BRAM::LoadFormat {members {{void None {width 0}} {String Hex} {String Binary}}} {position {%/Libraries/BRAM.bsv 53 6 {Library BRAM}}}
Struct {BRAM_Compat::BRAMRequest#(type addr, type data)} polymorphic {members {{Bool write {width 1}} {addr address} {data datain}}} {position {%/Libraries/BRAM_Compat.bsv 23 19 {Library BRAM_Compat}}}
Struct {BRAM_Compat::BRAMRequestBE#(type addr, type data, numeric type n)} polymorphic {members {{Bit#(n) writeen} {addr address} {data datain}}} {position {%/Libraries/BRAM_Compat.bsv 29 19 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMServer#(type addr, type data)} {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} {position {%/Libraries/BRAM_Compat.bsv 31 49 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMClient#(type addr, type data)} {ClientServer::Client#(BRAM_Compat::BRAMRequest#(addr, data), data)} {position {%/Libraries/BRAM_Compat.bsv 32 49 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMServerBE#(type addr, type data, numeric type n)} {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} {position {%/Libraries/BRAM_Compat.bsv 34 54 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMClientBE#(type addr, type data, numeric type n)} {ClientServer::Client#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} {position {%/Libraries/BRAM_Compat.bsv 35 54 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM1Port#(type addr, type data)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portA {}}}} {position {%/Libraries/BRAM_Compat.bsv 66 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM1PortBE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}}}} {position {%/Libraries/BRAM_Compat.bsv 94 11 {Library BRAM_Compat}}}
Alias {BRAM::BRAM1PortBE8#(type addr, type data)} {BRAM::BRAM1PortBE#(addr, data, TDiv#(SizeOf#(data), 8))} {position {%/Libraries/BRAM.bsv 134 59 {Library BRAM}}}
Interface {BRAM_Compat::BRAM2Port#(type addr, type data)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 61 11 {Library BRAM_Compat}}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {BRAM_Compat::BRAM2PortBE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 89 11 {Library BRAM_Compat}}}
Typeclass {BRAM::RequestToBRAM#(type bram_request_t, type bramifc_t)} {members {{{function Action f(bramifc_t x1, bram_request_t x2)} doRequest}}} {instances {{BRAM::RequestToBRAM#(BRAM::BRAMRequest#(addr, data), BRAMCore::BRAM_PORT#(addr, data))} {BRAM::RequestToBRAM#(BRAM::BRAMRequestBE#(addr, data, n), BRAMCore::BRAM_PORT_BE#(addr, data, n))}}} {position {%/Libraries/BRAM.bsv 429 11 {Library BRAM}}}
Typeclass {BRAM::RequestToResponse#(type bram_request_t)} {members {{{function Bool f(bram_request_t x1)} responseRequired} {{function Bool f(bram_request_t x1)} isWriteRequest}}} {instances {{BRAM::RequestToResponse#(BRAM::BRAMRequest#(addr, data))} {BRAM::RequestToResponse#(BRAM::BRAMRequestBE#(addr, data, n))}}} {position {%/Libraries/BRAM.bsv 432 11 {Library BRAM}}}
Typeclass {BRAM::BRAMToResponse#(type bramifc_t, type response_t)} {members {{{function ActionValue#(response_t) f(bramifc_t x1)} getResponse} {{function response_t f(bramifc_t x1)} readResponse}}} {instances {{BRAM::BRAMToResponse#(BRAMCore::BRAM_PORT#(addr, data), data)} {BRAM::BRAMToResponse#(BRAMCore::BRAM_PORT_BE#(addr, data, n), data)}}} {position {%/Libraries/BRAM.bsv 436 11 {Library BRAM}}}
Interface {BRAM::ServerWithClear#(type req, type resp)} polymorphic {members {{interface {ClientServer::Server#(req, resp)} server {}} {method {Action clear {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/BRAM.bsv 443 11 {Library BRAM}}}
Interface BRAM::SizedReg {members {{method {Action _write Integer {{(* ports = ["i"] *)}}}} {method {Action addA Integer {{(* ports = ["i"] *)}}}} {method {Action addB Integer {{(* ports = ["d"] *)}}}} {method {Bool isLessThan Integer {{(* ports = ["i"] *)}}}} {method {Bool isGreaterThan Integer {{(* ports = ["i"] *)}}}} {method {Bool isEqualTo Integer {{(* ports = ["i"] *)}}}}}} {position {%/Libraries/BRAM.bsv 880 11 {Library BRAM}}}
Interface {GetPut::Get#(type a)} polymorphic {members {{method {ActionValue#(a) get {} {}}}}} {position {%/Libraries/GetPut.bs 88 10 {Library GetPut}}}
Interface {GetPut::GetS#(type a)} polymorphic {members {{method {a first {} {}}} {method {Action deq {} {}}}}} {position {%/Libraries/GetPut.bs 91 10 {Library GetPut}}}
Interface {GetPut::Put#(type a)} polymorphic {members {{method {Action put a {{(* prefix = "" *)} {(* result = "UNUSED" *)} {(* ports = ["put"] *)}}}}}} {position {%/Libraries/GetPut.bs 115 10 {Library GetPut}}}
Interface {GetPut::PutS#(type a)} polymorphic {members {{method {Action offer a {}}} {method {Bool accepted {} {}}}}} {position {%/Libraries/GetPut.bs 118 10 {Library GetPut}}}
Interface {AhbMaster::GetPut#(type p, type g)} polymorphic {members {{method {ActionValue#(g) getput p {{(* ports = ["value"] *)}}}}}} {position {AhbMaster.bsv 31 11}}
Typeclass {GetPut::ToGet#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Get#(b) f(a x1)} toGet}}} {instances {{GetPut::ToGet#(ActionValue#(a), a)} {GetPut::ToGet#(AlignedFIFOs::AlignedFIFO#(t), t)} {GetPut::ToGet#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToGet#(CommitIfc::SendCommit#(a), a)} {GetPut::ToGet#(FIFO::FIFO#(a), a)} {GetPut::ToGet#(FIFOF::FIFOF#(a), a)} {GetPut::ToGet#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(GenCMsg::Rx#(d, s, a), a)} {GetPut::ToGet#(GetPut::Get#(a), a)} {GetPut::ToGet#(MasterSlaveCHERI::CheckedGet#(data_t), data_t)} {GetPut::ToGet#(NullCrossingFIFOF::CrossingFIFOF#(t), t)} {GetPut::ToGet#(PAClib::PipeOut#(a), a)} {GetPut::ToGet#(RWire#(a), a)} {GetPut::ToGet#(ReadOnly#(a), a)} {GetPut::ToGet#(Reg#(a), a)} {GetPut::ToGet#(Semi_FIFOF::FIFOF_O#(t), t)} {GetPut::ToGet#(Simplefifo::FIFOIfc#(value_size), value_size)} {GetPut::ToGet#(SourceSink::Source#(t), t)} {GetPut::ToGet#(a, a)}}} {position {%/Libraries/GetPut.bs 417 6 {Library GetPut}}}
Typeclass {GetPut::ToPut#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Put#(b) f(a x1)} toPut}}} {instances {{GetPut::ToPut#(AlignedFIFOs::AlignedFIFO#(t), t)} {GetPut::ToPut#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToPut#(CommitIfc::RecvCommit#(a), a)} {GetPut::ToPut#(FIFO::FIFO#(a), a)} {GetPut::ToPut#(FIFOF::FIFOF#(a), a)} {GetPut::ToPut#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(GenCMsg::Tx#(d, s, a), a)} {GetPut::ToPut#(GetPut::Put#(a), a)} {GetPut::ToPut#(MasterSlaveCHERI::CheckedPut#(data_t), data_t)} {GetPut::ToPut#(NullCrossingFIFOF::CrossingFIFOF#(t), t)} {GetPut::ToPut#(RWire#(a), a)} {GetPut::ToPut#(Reg#(a), a)} {GetPut::ToPut#(Semi_FIFOF::FIFOF_I#(t), t)} {GetPut::ToPut#(Simplefifo::FIFOIfc#(value_size), value_size)} {GetPut::ToPut#(SourceSink::Sink#(t), t)} {GetPut::ToPut#(function Action f(a x1), a)}}} {position {%/Libraries/GetPut.bs 420 6 {Library GetPut}}}
Interface {ClientServer::Client#(type a, type b)} polymorphic {members {{interface GetPut::Get#(a) request {}} {interface GetPut::Put#(b) response {}}}} {position {%/Libraries/ClientServer.bs 34 10 {Library ClientServer}}}
Interface {ClientServer::Server#(type a, type b)} polymorphic {members {{interface GetPut::Put#(a) request {}} {interface GetPut::Get#(b) response {}}}} {position {%/Libraries/ClientServer.bs 45 10 {Library ClientServer}}}
Alias {ClientServer::ClientServer#(type a, type b)} {Tuple2#(ClientServer::Client#(a, b), ClientServer::Server#(a, b))} {position {%/Libraries/ClientServer.bs 100 5 {Library ClientServer}}}
TaggedUnion {ModuleContextCore::ModuleContext#(type c, type i)} polymorphic {members {{{module f#(c x1)(Tuple2#(c, i))} M}}} {position {%/Libraries/ModuleContextCore.bs 4 5 {Library ModuleContextCore}}}

Struct {Complex::Complex#(type any_t)} polymorphic {members {{any_t rel} {any_t img}}} {position {%/Libraries/Complex.bsv 22 11 {Library Complex}}}




Interface {FoldFIFOF::FoldFIFO#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Bool notFull {} {}}} {method {Bool notEmpty {} {}}} {method {Action clear {} {}}} {method {b foldr {{function b f(a x1, b x2)} b} {}}}}} {position {%/Libraries/FoldFIFOF.bs 12 10 {Library FoldFIFOF}}}

Typeclass {DummyDriver::DummyDriver#(type i)} {members {{{a#(i)   provisos (IsModule#(a, b))} mkStub}}} {instances {DummyDriver::DummyDriver#(DVIController::DVI_Pins) DummyDriver::DummyDriver#(DVIController::DVI_User) DummyDriver::DummyDriver#(GPIOController::GPIO) DummyDriver::DummyDriver#(LCDController::LCD) DummyDriver::DummyDriver#(LEDController::LED#(n)) {DummyDriver::DummyDriver#(Memory::MemoryClient#(a, d))} {DummyDriver::DummyDriver#(Vector::Vector#(n, i))   provisos (DummyDriver::DummyDriver#(i))}}} {position {%/Libraries/DummyDriver.bsv 21 11 {Library DummyDriver}}}
Interface {SPSRAM::VSyncSRAM#(numeric type adrs, numeric type dtas)} polymorphic {members {{method {PrimAction exec {Bit#(adrs) Bit#(dtas) Bit#(1) Bit#(1)} {}}} {method {Bit#(dtas) rdata {} {}}}}} {position {%/Libraries/SPSRAM.bs 67 10 {Library SPSRAM}}}
Interface {BRAMFIFO::IBRAMFIFOF#(numeric type log2depth, type t)} polymorphic {members {{interface FIFOF::FIFOF#(t) fifo {}}}} {position {%/Libraries/BRAMFIFO.bsv 32 11 {Library BRAMFIFO}}}
Interface {BRAMFIFO::ISyncBRAMFIFOFIfc#(numeric type log2depth, type t)} polymorphic {members {{interface Clocks::SyncFIFOIfc#(t) fifo {}}}} {position {%/Libraries/BRAMFIFO.bsv 36 11 {Library BRAMFIFO}}}
Interface {AlignedFIFOs::Store#(type i, type a, numeric type n)} polymorphic {members {{method {Action write {i a} {{(* ports = ["idx", "value"] *)}}}} {method {Action prefetch i {{(* ports = ["idx"] *)}}}} {method {a read i {{(* ports = ["idx"] *)}}}}}} {position {%/Libraries/AlignedFIFOs.bsv 44 11 {Library AlignedFIFOs}}}
Interface {AlignedFIFOs::RawReg#(numeric type n)} polymorphic {members {{method {Action write Bit#(n) {{(* ports = ["x"] *)}}}} {method {Bit#(n) read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/AlignedFIFOs.bsv 54 11 {Library AlignedFIFOs}}} {attributes {{(* always_ready  *)}}}
Interface {AlignedFIFOs::AlignedFIFO#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["x"] *)}}}} {method {a first {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/AlignedFIFOs.bsv 232 11 {Library AlignedFIFOs}}}
Interface {Pull::Pull#(type a)} polymorphic {members {{method {ActionValue#(a) pull {} {}}}}} {position {%/Libraries/Pull.bs 21 10 {Library Pull}}}
Interface {Counter::Counter#(numeric type n)} polymorphic {members {{method {Action inc Bit#(n) {}}} {method {Action dec Bit#(n) {}}} {method {Action up {} {}}} {method {Action down {} {}}} {method {Bit#(n) value {} {}}} {method {Action setC Bit#(n) {}}} {method {Action setF Bit#(n) {}}} {method {Action clear {} {}}}}} {position {%/Libraries/Counter.bs 5 10 {Library Counter}}}
Interface {Counter::VCounter#(numeric type n)} polymorphic {members {{method {PrimAction addA Bit#(n) {}}} {method {PrimAction addB Bit#(n) {}}} {method {Bit#(n) value {} {}}} {method {PrimAction setC Bit#(n) {}}} {method {PrimAction setF Bit#(n) {}}}}} {position {%/Libraries/Counter.bs 15 10 {Library Counter}}}
Interface {SRAM::ShiftReg#(numeric type n, type a)} polymorphic {members {{method {a output {} {}}} {method {Action shift a {}}}}} {position {%/Libraries/SRAM.bs 135 11 {Library SRAM}}}
Interface StmtFSMUtil::MEState {members {{method {Action set Integer {{(* ports = ["value"] *)}}}} {method {Action set_delayed Integer {{(* ports = ["value"] *)}}}} {method {Action reset {} {{(* ports = [] *)}}}} {method {Action reset_delayed {} {{(* ports = [] *)}}}} {method {Bool is Integer {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/StmtFSMUtil.bsv 7 11 {Library StmtFSMUtil}}}
Interface {StmtFSMUtil::MEStateInternal#(type a)} polymorphic {members {{method {Action set Integer {{(* ports = ["value"] *)}}}} {method {Action set_delayed Integer {{(* ports = ["value"] *)}}}} {method {Action reset {} {{(* ports = [] *)}}}} {method {Action reset_delayed {} {{(* ports = [] *)}}}} {method {Bool is Integer {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/StmtFSMUtil.bsv 15 11 {Library StmtFSMUtil}}}
Alias {SyncSRAM::SyncSRAMS#(numeric type lat, numeric type adrs, numeric type dtas)} {ClientServer::Server#(SyncSRAM::SyncSRAMrequest#(lat, adrs, dtas), Bit#(dtas))} {position {%/Libraries/SyncSRAM.bs 21 5 {Library SyncSRAM}}}
Alias {SyncSRAM::SyncSRAMC#(numeric type lat, numeric type adrs, numeric type dtas)} {ClientServer::Client#(SyncSRAM::SyncSRAMrequest#(lat, adrs, dtas), Bit#(dtas))} {position {%/Libraries/SyncSRAM.bs 30 5 {Library SyncSRAM}}}
Interface {SyncSRAM::SyncSRAMrequest#(numeric type lat, numeric type adrs, numeric type dtas)} polymorphic {members {{method {Bit#(adrs) addr {} {}}} {method {Bit#(dtas) wdata {} {}}} {method {Bit#(1) we {} {}}} {method {Bit#(1) ena {} {}}}}} {position {%/Libraries/SyncSRAM.bs 43 11 {Library SyncSRAM}}}
Alias SquareRoot::SqrtT UInt#(64) {position {%/Libraries/SquareRoot.bsv 256 19 {Library SquareRoot}}}
Alias SquareRoot::SqrtTFx {FixedPoint::FixedPoint#(32, 32)} {position {%/Libraries/SquareRoot.bsv 257 28 {Library SquareRoot}}}

Interface {CommitIfc::SendCommit#(type a)} polymorphic {members {{method {a dataout {} {{(* ports = [] *)}}}} {method {Action ack {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/CommitIfc.bsv 15 11 {Library CommitIfc}}}
Interface {CommitIfc::RecvCommit#(type a)} polymorphic {members {{method {Action datain a {{(* ports = ["din"] *)} {(* always_ready  *)}}}} {method {Bool accept {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/CommitIfc.bsv 21 11 {Library CommitIfc}}}
Typeclass {CommitIfc::ToSendCommit#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(CommitIfc::SendCommit#(b)) f(a x1)   provisos (IsModule#(c, d))} mkSendCommit}}} {instances {{CommitIfc::ToSendCommit#(Clocks::SyncFIFOIfc#(a), a)} {CommitIfc::ToSendCommit#(FIFO::FIFO#(a), a)} {CommitIfc::ToSendCommit#(FIFOF::FIFOF#(a), a)} {CommitIfc::ToSendCommit#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {CommitIfc::ToSendCommit#(GetPut::Get#(a), a)   provisos (Bits#(a, sa))} {CommitIfc::ToSendCommit#(RWire#(a), a)}}} {position {%/Libraries/CommitIfc.bsv 147 11 {Library CommitIfc}}}
Typeclass {CommitIfc::ToRecvCommit#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(CommitIfc::RecvCommit#(b)) f(a x1)   provisos (IsModule#(c, d))} mkRecvCommit}}} {instances {{CommitIfc::ToRecvCommit#(Clocks::SyncFIFOIfc#(a), a)   provisos (Bits#(a, sa))} {CommitIfc::ToRecvCommit#(FIFOF::FIFOF#(a), a)   provisos (Bits#(a, sa))} {CommitIfc::ToRecvCommit#(FIFOLevel::FIFOLevelIfc#(a, n), a)   provisos (Bits#(a, sa))} {CommitIfc::ToRecvCommit#(GetPut::Put#(a), a)   provisos (Bits#(a, sa))} {CommitIfc::ToRecvCommit#(RWire#(a), a)}}} {position {%/Libraries/CommitIfc.bsv 152 11 {Library CommitIfc}}}
Interface {CommitIfc::ClientCommit#(type req, type resp)} polymorphic {members {{interface CommitIfc::SendCommit#(req) request {}} {interface CommitIfc::RecvCommit#(resp) response {}}}} {position {%/Libraries/CommitIfc.bsv 354 11 {Library CommitIfc}}}
Interface {CommitIfc::ServerCommit#(type req, type resp)} polymorphic {members {{interface CommitIfc::RecvCommit#(req) request {}} {interface CommitIfc::SendCommit#(resp) response {}}}} {position {%/Libraries/CommitIfc.bsv 359 11 {Library CommitIfc}}}
TaggedUnion {ListN::ListN#(numeric type n, type a)} polymorphic {members {{List#(a) L}}} {position {%/Libraries/ListN.bs 56 6 {Library ListN}}}
Interface {CBus::CBus#(numeric type sa, numeric type sd)} polymorphic {members {{method {Action write {Bit#(sa) Bit#(sd)} {{(* ports = ["addr", "data"] *)}}}} {method {ActionValue#(Bit#(sd)) read Bit#(sa) {{(* ports = ["addr"] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/CBus.bsv 16 11 {Library CBus}}}
Interface {CBus::IWithCBus#(type cbus_IFC, type device_IFC)} polymorphic {members {{method {cbus_IFC cbus_ifc {} {}}} {method {device_IFC device_ifc {} {}}}}} {position {%/Libraries/CBus.bsv 23 11 {Library CBus}}}
Alias {CBus::CBusItem#(numeric type sa, numeric type sd)} {CBus::CBus#(sa, sd)} {position {%/Libraries/CBus.bsv 33 23 {Library CBus}}}
Alias {CBus::ModWithCBus#(numeric type sa, numeric type sd, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(sa, sd)), HList::HNil), i)} {position {%/Libraries/CBus.bsv 36 46 {Library CBus}}}
Struct {CBus::CRAddr#(numeric type sa, numeric type sd)} polymorphic {members {{Bit#(sa) a} {Bit#(TLog#(sd)) o}}} {position {%/Libraries/CBus.bsv 41 6 {Library CBus}}}
Typeclass {CBus::ExtendNP#(type a, numeric type m, numeric type n)} {members {{{function a#(m) f(a#(n) x1)} extendNP} {{function a#(m) f(a#(n) x1)} zeroExtendNP} {{function a#(m) f(a#(n) x1)} signExtendNP} {{function a#(m) f(a#(n) x1)} truncateNP} {{function a#(m) f(a#(n) x1)} truncateLSBNP}}} {instances {{CBus::ExtendNP#(Bit, m, n)} {CBus::ExtendNP#(Int, m, n)} {CBus::ExtendNP#(UInt, m, n)}}} {position {%/Libraries/CBus.bsv 454 11 {Library CBus}}}


Alias {ConfigReg::ConfigReg#(type a)} Reg#(a) {position {%/Libraries/ConfigReg.bs 26 5 {Library ConfigReg}}}
Interface {RevertingVirtualReg::VReg#(numeric type n)} polymorphic {members {{method {PrimAction write Bit#(n) {}}} {method {Bit#(n) read {} {}}}}} {position {%/Libraries/RevertingVirtualReg.bs 3 10 {Library RevertingVirtualReg}}}
Interface {BGetPut::BGetS#(numeric type sa)} polymorphic {members {{method {Bit#(sa) gvalue {} {}}} {method {Bool gpresent {} {}}} {method {Action gcredit Bool {}}}}} {position {%/Libraries/BGetPut.bs 36 10 {Library BGetPut}}}
Interface {BGetPut::BPutS#(numeric type sa)} polymorphic {members {{method {Action pvalue Bit#(sa) {}}} {method {Action ppresent Bool {}}} {method {Bool pcredit {} {}}}}} {position {%/Libraries/BGetPut.bs 48 10 {Library BGetPut}}}
Alias {BGetPut::BGet#(type a)} BGetPut::BGetS#(SizeOf#(a)) {position {%/Libraries/BGetPut.bs 60 5 {Library BGetPut}}}
Alias {BGetPut::BPut#(type a)} BGetPut::BPutS#(SizeOf#(a)) {position {%/Libraries/BGetPut.bs 61 5 {Library BGetPut}}}
Alias {BGetPut::BGetPut#(type a)} {Tuple2#(BGetPut::BGetS#(SizeOf#(a)), GetPut::Put#(a))} {position {%/Libraries/BGetPut.bs 63 5 {Library BGetPut}}}
Alias {BGetPut::GetBPut#(type a)} {Tuple2#(GetPut::Get#(a), BGetPut::BPutS#(SizeOf#(a)))} {position {%/Libraries/BGetPut.bs 64 5 {Library BGetPut}}}
Interface {BGetPut::BClientS#(numeric type sa, numeric type sb)} polymorphic {members {{interface BGetPut::BGetS#(sa) request {}} {interface BGetPut::BPutS#(sb) response {}}}} {position {%/Libraries/BGetPut.bs 182 10 {Library BGetPut}}}
Interface {BGetPut::BServerS#(numeric type sa, numeric type sb)} polymorphic {members {{interface BGetPut::BPutS#(sa) request {}} {interface BGetPut::BGetS#(sb) response {}}}} {position {%/Libraries/BGetPut.bs 186 10 {Library BGetPut}}}
Alias {BGetPut::BClient#(type a, type b)} {BGetPut::BClientS#(SizeOf#(a), SizeOf#(b))} {position {%/Libraries/BGetPut.bs 208 5 {Library BGetPut}}}
Alias {BGetPut::BServer#(type a, type b)} {BGetPut::BServerS#(SizeOf#(a), SizeOf#(b))} {position {%/Libraries/BGetPut.bs 209 5 {Library BGetPut}}}
Alias {BGetPut::BClientServer#(type a, type b)} {Tuple2#(BGetPut::BClientS#(SizeOf#(a), SizeOf#(b)), ClientServer::Server#(a, b))} {position {%/Libraries/BGetPut.bs 210 5 {Library BGetPut}}}
Alias {BGetPut::ClientBServer#(type a, type b)} {Tuple2#(ClientServer::Client#(a, b), BGetPut::BServerS#(SizeOf#(a), SizeOf#(b)))} {position {%/Libraries/BGetPut.bs 211 5 {Library BGetPut}}}
Struct {ZBusUtil::ZBit#(type t)} polymorphic {members {{t word}}} {position {%/Libraries/ZBusUtil.bsv 34 19 {Library ZBusUtil}}}
Interface {ZBusUtil::ConvertToZ#(type i)} polymorphic {members {{method {ZBusUtil::ZBit#(i) convert {i Bool} {{(* ports = ["x1", "x2"] *)}}}}}} {position {%/Libraries/ZBusUtil.bsv 52 11 {Library ZBusUtil}}}
Interface {ZBusUtil::ConvertFromZ#(type i)} polymorphic {members {{method {i convert ZBusUtil::ZBit#(i) {{(* ports = ["x1"] *)}}}}}} {position {%/Libraries/ZBusUtil.bsv 91 11 {Library ZBusUtil}}}
Interface {ZBusUtil::ResolveZ#(type i)} polymorphic {members {{method {ZBusUtil::ZBit#(i) resolve {ZBusUtil::ZBit#(i) ZBusUtil::ZBit#(i)} {{(* ports = ["x1", "x2"] *)}}}}}} {position {%/Libraries/ZBusUtil.bsv 130 11 {Library ZBusUtil}}}
Interface {ZBus::ZBusInternalIFC#(type t)} polymorphic {members {{method {ZBusUtil::ZBit#(t) zout {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ZBus.bsv 84 11 {Library ZBus}}}
Interface {ZBus::ZBusBusIFC#(type t)} polymorphic {members {{method {Action fromBusSample {ZBusUtil::ZBit#(t) Bool} {{(* ports = ["value", "isJust"] *)}}}} {method {ZBusUtil::ZBit#(t) toBusValue {} {{(* ports = [] *)}}}} {method {Bool toBusCtl {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ZBus.bsv 158 11 {Library ZBus}}}
Enum ZBus::BState {members {HiZN HiZ Nothing}} {width 2} {position {%/Libraries/ZBus.bsv 227 35 {Library ZBus}}}
Interface {ZBus::ZBusClientIFC#(type t)} polymorphic {members {{method {Action drive t {{(* ports = ["value"] *)}}}} {method {t get {} {{(* ports = [] *)}}}} {method {Bool fromBusValid {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ZBus.bsv 317 11 {Library ZBus}}}
Interface {ZBus::ZBusDualIFC#(type t)} polymorphic {members {{interface ZBus::ZBusBusIFC#(t) busIFC {}} {interface ZBus::ZBusClientIFC#(t) clientIFC {}}}} {position {%/Libraries/ZBus.bsv 323 11 {Library ZBus}}}
Interface {ProbeWire::ProbeWire#(type a)} polymorphic {members {{method {a id a {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/ProbeWire.bsv 28 11 {Library ProbeWire}}}

Interface {SPSRAM::VSyncSRAM#(numeric type adrs, numeric type dtas)} polymorphic {members {{method {PrimAction exec {Bit#(adrs) Bit#(dtas) Bit#(1) Bit#(1)} {}}} {method {Bit#(dtas) rdata {} {}}}}} {position {%/Libraries/SPSRAM.bs 67 10 {Library SPSRAM}}}
Interface Clocks::ClockGenIfc {members {{interface Clock gen_clk {}}}} {position {%/Libraries/Clocks.bsv 23 11 {Library Clocks}}}
Interface {Clocks::MakeClockIfc#(type one_bit_type)} polymorphic {members {{method {Action setClockValue one_bit_type {{(* ports = ["value"] *)}}}} {method {one_bit_type getClockValue {} {{(* ports = [] *)}}}} {method {Action setGateCond Bool {{(* ports = ["gate"] *)}}}} {method {Bool getGateCond {} {{(* ports = [] *)}}}} {interface Clock new_clk {}}}} {position {%/Libraries/Clocks.bsv 102 11 {Library Clocks}}}
Interface {Clocks::MakeUngatedClockIfc#(type one_bit_type)} polymorphic {members {{method {Action setClockValue one_bit_type {{(* ports = ["value"] *)}}}} {method {one_bit_type getClockValue {} {{(* ports = [] *)}}}} {method {Action setGateCond Bool {{(* ports = ["gate"] *)}}}} {method {Bool getGateCond {} {{(* ports = [] *)}}}} {method {Bool unused {} {{(* ports = [] *)}}}} {interface Clock new_clk {}}}} {position {%/Libraries/Clocks.bsv 111 11 {Library Clocks}}}
Interface Clocks::GatedClockIfc {members {{method {Action setGateCond Bool {{(* ports = ["gate"] *)}}}} {method {Bool getGateCond {} {{(* ports = [] *)}}}} {interface Clock new_clk {}}}} {position {%/Libraries/Clocks.bsv 263 11 {Library Clocks}}}
Interface Clocks::MuxClkIfc {members {{method {Action select Bool {{(* ports = ["ab"] *)}}}} {interface Clock clock_out {}}}} {position {%/Libraries/Clocks.bsv 346 11 {Library Clocks}}}
Interface Clocks::SelectClkIfc {members {{method {Action select Bool {{(* ports = ["ab"] *)}}}} {interface Clock clock_out {}} {interface Reset reset_out {}}}} {position {%/Libraries/Clocks.bsv 406 11 {Library Clocks}}}
Alias Clocks::ClkNextRdy Bool {position {%/Libraries/Clocks.bsv 495 14 {Library Clocks}}}
Interface Clocks::ClockDividerIfc {members {{interface Clock fastClock {}} {interface Clock slowClock {}} {method {Bool clockReady {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 498 11 {Library Clocks}}}
Interface Clocks::ClockDivider_internal {members {{interface Clock slowClock {}} {method {Bool clockReady {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 583 11 {Library Clocks}}}
Interface {Clocks::SyncBitIfc#(type one_bit_type)} polymorphic {members {{method {Action send one_bit_type {{(* ports = ["bitData"] *)}}}} {method {one_bit_type read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 683 11 {Library Clocks}}}
Interface Clocks::SyncPulseIfc {members {{method {Action send {} {{(* ports = [] *)}}}} {method {Bool pulse {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 997 11 {Library Clocks}}}
Interface {Clocks::RegI#(type a_type)} polymorphic {members {{method {Action write a_type {{(* ports = ["x1"] *)}}}} {method {a_type read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 1162 11 {Library Clocks}}}
Interface {Clocks::SyncFIFOIfc#(type a_type)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 1276 11 {Library Clocks}}}
Interface Clocks::SyncFIFO0Ifc {members {{method {Action enq {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 1285 11 {Library Clocks}}}
Interface {Clocks::DualPortRamIfc#(type addr_t, type data_t)} polymorphic {members {{method {Action write {addr_t data_t} {{(* ports = ["wr_addr", "din"] *)}}}} {method {data_t read addr_t {{(* ports = ["rd_addr"] *)}}}}}} {position {%/Libraries/Clocks.bsv 1597 11 {Library Clocks}}}
Interface {Clocks::CrossingReg#(type a)} polymorphic {members {{method {Action _write a {{(* ports = ["datain"] *)}}}} {method {a _read {} {{(* ports = [] *)}}}} {method {a crossed {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 1753 11 {Library Clocks}}}
Interface {Clocks::FIFOF_MC#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["x1"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool i_notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool i_notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 2017 11 {Library Clocks}}}
Interface Clocks::MakeResetIfc {members {{method {Action assertReset {} {{(* ports = [] *)}}}} {method {Bool isAsserted {} {{(* ports = [] *)}}}} {interface Reset new_rst {}}}} {position {%/Libraries/Clocks.bsv 2269 11 {Library Clocks}}}
Interface XilinxCells::ResetGenIfc {members {{interface Reset gen_rst {}}}} {position {XilinxCells.bsv 235 11}}
Interface Clocks::MuxRstIfc {members {{method {Action select Bool {{(* ports = ["ab"] *)}}}} {interface Reset reset_out {}}}} {position {%/Libraries/Clocks.bsv 2538 11 {Library Clocks}}}
Interface Clocks::JoinRstIfc {members {{interface Reset reset_out {}}}} {position {%/Libraries/Clocks.bsv 2563 11 {Library Clocks}}}
Typeclass {Clocks::ClockConv#(type a)} {members {{{function b#(a) f(Integer x1, a x2)   provisos (IsModule#(b, c))} mkConverter}}} {instances {{Clocks::ClockConv#(ActionValue#(a))   provisos (Bits#(a, sa))} {Clocks::ClockConv#(ClientServer::Client#(a, b))   provisos (Bits#(b, sb), Bits#(a, sa))} {Clocks::ClockConv#(ClientServer::Server#(a, b))   provisos (Bits#(b, sb), Bits#(a, sa))} {Clocks::ClockConv#(GetPut::Get#(a))   provisos (Bits#(a, sa))} {Clocks::ClockConv#(GetPut::Put#(a))   provisos (Bits#(a, sa))} {Clocks::ClockConv#(function Action f(a x1))   provisos (Bits#(a, sa))}}} {position {%/Libraries/Clocks.bsv 2626 11 {Library Clocks}}}
Alias {TRAM::TRAM#(type tag, type adr, type dta)} {ClientServer::Server#(TRAM::TRAMreq#(tag, adr, dta), Tuple2#(tag, dta))} {position {%/Libraries/TRAM.bs 18 5 {Library TRAM}}}
Alias {TRAM::TRAMclient#(type tag, type adr, type dta)} {ClientServer::Client#(TRAM::TRAMreq#(tag, adr, dta), Tuple2#(tag, dta))} {position {%/Libraries/TRAM.bs 26 5 {Library TRAM}}}
TaggedUnion {TRAM::TRAMreq#(type tg, type adr, type dta)} polymorphic {members {{{Tuple2#(tg, adr)} Read} {{Tuple2#(adr, dta)} Write}}} {position {%/Libraries/TRAM.bs 45 5 {Library TRAM}}}
Alias {TRAM::TRAMresp#(type tg, type dta)} {Tuple2#(tg, dta)} {position {%/Libraries/TRAM.bs 57 5 {Library TRAM}}}
Interface {PAClib::PipeOut#(type t)} polymorphic {members {{method {t first {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PAClib.bsv 44 11 {Library PAClib}}}
Alias {PAClib::Pipe#(type ta, type tb)} {module f#(PAClib::PipeOut#(ta) x1)(PAClib::PipeOut#(tb))} {position {%/Libraries/PAClib.bsv 55 9 {Library PAClib}}}
Typeclass {PAClib::VectorTreeReduce#(numeric type n, type a)} {members {{{module f#(module x1#(PAClib::PipeOut#(Tuple2#(a, a)) x1)(PAClib::PipeOut#(a)), Bit#(32) x2, PAClib::PipeOut#(Vector::Vector#(n, a)) x3)(PAClib::PipeOut#(a))} mkTreeReducePipe} {{module f#(function a x1(a x1, a x2), function a x2(a x1), Bit#(32) x3, PAClib::PipeOut#(Vector::Vector#(n, a)) x4)(PAClib::PipeOut#(a))} mkTreeReduceFn}}} {instances {{PAClib::VectorTreeReduce#(1, a)   provisos (Bits#(a, sa))} {PAClib::VectorTreeReduce#(2, a)   provisos (Bits#(a, sa))} {PAClib::VectorTreeReduce#(n, a)   provisos (PAClib::VectorTreeReduce#(n2, a), Div#(n, 2, n2), Bits#(a, sa))}}} {position {%/Libraries/PAClib.bsv 1582 11 {Library PAClib}}}
Alias LBus::LBUS_ADDR_SIZE 24 {position {%/Libraries/LBus.bsv 19 12 {Library LBus}}}
Alias LBus::LBUS_DATA_SIZE 32 {position {%/Libraries/LBus.bsv 20 12 {Library LBus}}}
Alias LBus::LBusContext {LBus::LBusContextP#(24, 32)} {position {%/Libraries/LBus.bsv 22 58 {Library LBus}}}
Alias LBus::LBusContextIfc {LBus::ILbLeaf#(24, 32)} {position {%/Libraries/LBus.bsv 23 58 {Library LBus}}}
Alias LBus::SA 24 {position {%/Libraries/LBus.bsv 29 24 {Library LBus}}}
Alias LBus::SD 32 {position {%/Libraries/LBus.bsv 30 24 {Library LBus}}}
Interface {LBus::LBSReg#(numeric type sa, numeric type sd)} polymorphic {members {{method {{LBus::LbAddr#(sa, sd)} lbsAddr {} {{(* ports = [] *)}}}} {method {Action lbsSet Bit#(sd) {{(* ports = ["x1"] *)}}}} {method {ActionValue#(Bit#(sd)) lbsGet {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 38 11 {Library LBus}}}
Interface {LBus::IntFlag#(numeric type sa, numeric type sd)} polymorphic {members {{method {Bit#(1) flag {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 48 11 {Library LBus}}}
TaggedUnion {LBus::LBSItem#(numeric type sa, numeric type sd)} polymorphic {members {{{LBus::LBSReg#(sa, sd)} Rg} {{LBus::IntFlag#(sa, sd)} Flg}}} {position {%/Libraries/LBus.bsv 55 3 {Library LBus}}}
TaggedUnion {LBus::LbAddr#(numeric type sa, numeric type sd)} polymorphic {members {{Bit#(sa) LbAddr}}} {position {%/Libraries/LBus.bsv 62 3 {Library LBus}}}
Struct {LBus::LBusContextP#(numeric type sa, numeric type sd)} polymorphic {members {{{List#(LBus::LBSItem#(sa, sd))} items} {{List#(LBus::ILbLeaf#(sa, sd))} leaves}}} {position {%/Libraries/LBus.bsv 86 19 {Library LBus}}}
Alias {LBus::LBusContextIfcP#(numeric type sa, numeric type sd)} {LBus::ILbLeaf#(sa, sd)} {position {%/Libraries/LBus.bsv 88 26 {Library LBus}}}
Interface {LBus::IWithLBus#(type busIfc, type deviceIfc)} polymorphic {members {{method {busIfc bus {} {}}} {method {deviceIfc device {} {}}}}} {position {%/Libraries/LBus.bsv 90 11 {Library LBus}}}
Alias {LBus::LBReg#(numeric type sa, numeric type sd, type i)} {LBus::IWithLBus#(LBus::LBSReg#(sa, sd), i)} {position {%/Libraries/LBus.bsv 95 40 {Library LBus}}}
Enum LBus::ResetType {members {SYNC ASYNC NONE}} {width 2} {position {%/Libraries/LBus.bsv 123 36 {Library LBus}}}
Interface {LBus::Accum#(numeric type n)} polymorphic {members {{method {Action add Bit#(n) {{(* ports = ["x1"] *)}}}} {method {Bit#(n) value {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 349 11 {Library LBus}}}
Interface LBus::Interrupt {members {{method {Action set {} {{(* ports = [] *)}}}} {method {Bool _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 397 11 {Library LBus}}}
Interface {LBus::RegHandler#(type a, type b)} polymorphic {members {{method {a getRequest {} {{(* ports = [] *)}}}} {method {Action storeResponse b {{(* ports = ["x1"] *)}}}}}} {position {%/Libraries/LBus.bsv 485 11 {Library LBus}}}
Enum LBus::LbRWop {members {LbRead LbWrite}} {width 1} {position {%/Libraries/LBus.bsv 565 32 {Library LBus}}}
Interface {LBus::ILBus#(numeric type sa, numeric type sd)} polymorphic {members {{method {Action req {Bool LBus::LbRWop Bit#(sa) Bit#(sd)} {{(* ports = ["valid", "op", "addr", "dat"] *)}}}} {method {Bit#(sd) rdDat {} {{(* ports = [] *)}}}} {method {Bit#(1) ack {} {{(* ports = [] *)}}}} {method {Bit#(1) inrpt {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 568 11 {Library LBus}}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {LBus::LbReq#(numeric type sa, numeric type sd)} polymorphic {members {{LBus::LbRWop wr {width 1}} {Bit#(sa) adr} {Bit#(sd) dat}}} {position {%/Libraries/LBus.bsv 579 19 {Library LBus}}}
Interface {LBus::ILbLeaf#(numeric type sa, numeric type sd)} polymorphic {members {{interface {GetPut::Put#(Maybe#(LBus::LbReq#(sa, sd)))} req {}} {interface GetPut::Get#(Maybe#(Bit#(sd))) ack {}} {interface GetPut::Get#(Bit#(1)) inrpt {{(* always_ready  *)}}}}} {position {%/Libraries/LBus.bsv 581 11 {Library LBus}}}
Interface {LBus::ILbNode#(numeric type sa, numeric type sd)} polymorphic {members {{interface {GetPut::Get#(Maybe#(LBus::LbReq#(sa, sd)))} req {}} {interface GetPut::Put#(Maybe#(Bit#(sd))) ack {}} {interface GetPut::Put#(Bit#(1)) inrpt {}}}} {position {%/Libraries/LBus.bsv 588 11 {Library LBus}}}
Interface {LBus::DutWithLBusIfc#(type i)} polymorphic {members {{method {i dutIfc {} {}}} {interface {LBus::ILbLeaf#(24, 32)} lbus {}}}} {position {%/Libraries/LBus.bsv 845 11 {Library LBus}}}
Typeclass {LBus::LBusAddable#(type m1, type m2)} {dependencies {{m1 determines m2} {m2 determines m1}}} {members {{{function m1#(LBus::DutWithLBusIfc#(a)) f(m2#(a) x1)} runWithLBus}}} {instances {{LBus::LBusAddable#(Module, ModuleContextCore::ModuleContext#(LBus::LBusContext))} {LBus::LBusAddable#(ModuleContextCore::ModuleContext#(c1), ModuleContextCore::ModuleContext#(HList::HCons#(LBus::LBusContext, c1)))}}} {position {%/Libraries/LBus.bsv 850 11 {Library LBus}}}
Enum LBus::LbState {members {Idle Req1 Req2 Req3}} {width 2} {position {%/Libraries/LBus.bsv 886 27 {Library LBus}}}
Interface {LBus::Fan#(type intype, type outtype)} polymorphic {members {{method {intype fanin {} {}}} {method {outtype fanout {} {}}}}} {position {%/Libraries/LBus.bsv 888 11 {Library LBus}}}
Interface {LBus::ILBusDriver#(numeric type sa, numeric type sd)} polymorphic {members {{method {Bool valid {} {{(* ports = [] *)}}}} {method {LBus::LbRWop op {} {{(* ports = [] *)}}}} {method {Bit#(sa) addr {} {{(* ports = [] *)}}}} {method {Bit#(sd) dat {} {{(* ports = [] *)}}}} {method {Action rdDat Bit#(sd) {{(* ports = ["x"] *)}}}} {method {Action ack Bit#(1) {{(* ports = ["x"] *)}}}} {method {Action inrpt Bit#(1) {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/LBus.bsv 1034 11 {Library LBus}}}
Interface {LBus::ILBusHandler#(numeric type sa, numeric type sd)} polymorphic {members {{interface {LBus::ILBusDriver#(sa, sd)} driver {}} {interface {ClientServer::Server#(RAM::RAMreq#(Bit#(sa), Bit#(sd)), Bit#(sd))} lbserver {}} {method {Bool interrupting {} {{(* ports = [] *)}}}} {method {Action resetInterrupt {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 1062 11 {Library LBus}}}
Enum LBus::HandlerState {members {Idle Writing Reading}} {width 2} {position {%/Libraries/LBus.bsv 1070 30 {Library LBus}}}
Alias Wallace::Bit1 Bit#(1) {position {%/Libraries/Wallace.bs 22 5 {Library Wallace}}}
Alias Wallace::BitBag List#(Bit#(1)) {position {%/Libraries/Wallace.bs 23 5 {Library Wallace}}}

Interface {RegTwo::RegTwo#(type a)} polymorphic {members {{method {Action setA a {}}} {method {Action setB a {}}} {method {a get {} {}}}}} {position {%/Libraries/RegTwo.bs 7 10 {Library RegTwo}}}
Interface {RegTwo::VRegTwo#(numeric type n)} polymorphic {members {{method {PrimAction setA Bit#(n) {}}} {method {PrimAction setB Bit#(n) {}}} {method {Bit#(n) get {} {}}}}} {position {%/Libraries/RegTwo.bs 12 10 {Library RegTwo}}}
Alias {ModuleCollect::ModuleCollect#(type a, type b)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(a), HList::HNil), b)} {position {%/Libraries/ModuleCollect.bsv 14 45 {Library ModuleCollect}}}
Interface {ModuleCollect::IWithCollection#(type a, type i)} polymorphic {members {{method {i device {} {{(* ports = [] *)}}}} {method {List#(a) collection {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ModuleCollect.bsv 36 11 {Library ModuleCollect}}}
Enum OVLAssertions::OVLSeverityLevel {members {OVL_FATAL OVL_ERROR OVL_WARNING OVL_INFO DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 17 33}}
Enum OVLAssertions::OVLPropertyType {members {OVL_ASSERT OVL_ASSUME OVL_IGNORE DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 22 33}}
Enum OVLAssertions::OVLCoverageLevel {members {OVL_COVER_NONE OVL_COVER_ALL OVL_COVER_SANITY OVL_COVER_BASIC OVL_COVER_CORNER OVL_COVER_STATISTIC DEFAULT ILLEGAL}} {width 32} {position {%/Libraries/OVLAssertions.bsv 30 33}}
Enum OVLAssertions::OVLActionOnNewStart {members {OVL_IGNORE_NEW_START OVL_RESET_ON_NEW_START OVL_ERROR_ON_NEW_START DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 39 33}}
Enum OVLAssertions::OVLEdgeType {members {OVL_NOEDGE OVL_POSEDGE OVL_NEGEDGE OVL_ANYEDGE DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 45 33}}
Enum OVLAssertions::OVLNecessaryCondition {members {OVL_TRIGGER_ON_MOST_PIPE OVL_TRIGGER_ON_FIRST_PIPE OVL_TRIGGER_ON_FIRST_NOPIPE DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 50 33}}
Enum OVLAssertions::OVLInactive {members {OVL_ALL_ZEROS OVL_ALL_ONES OVL_ONE_COLD DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 55 33}}
Struct {OVLAssertions::OVLDefaults#(type a)} polymorphic {members {{OVLAssertions::OVLSeverityLevel severity_level {width 3}} {OVLAssertions::OVLPropertyType property_type {width 3}} {String msg} {OVLAssertions::OVLCoverageLevel coverage_level {width 32}} {OVLAssertions::OVLActionOnNewStart action_on_new_start {width 3}} {OVLAssertions::OVLEdgeType edge_type {width 3}} {OVLAssertions::OVLNecessaryCondition necessary_condition {width 3}} {OVLAssertions::OVLInactive inactive {width 3}} {Int#(32) num_cks {width 32}} {Int#(32) min_cks {width 32}} {Int#(32) max_cks {width 32}} {Int#(32) min_ack_cycle {width 32}} {Int#(32) max_ack_cycle {width 32}} {Int#(32) max_ack_length {width 32}} {Int#(32) req_drop {width 32}} {Int#(32) deassert_count {width 32}} {Int#(32) depth {width 32}} {a value} {a min} {a max} {Bool check_overlapping {width 1}} {Bool check_missing_start {width 1}} {Bool simultaneous_push_pop {width 1}}}} {position {%/Libraries/OVLAssertions.bsv 81 19}}
Struct {OVLAssertions::OVLDefaultsTemplate#(type a)} polymorphic {members {{Maybe#(OVLAssertions::OVLSeverityLevel) severity_level {width 4}} {Maybe#(OVLAssertions::OVLPropertyType) property_type {width 4}} {Maybe#(String) msg} {Maybe#(OVLAssertions::OVLCoverageLevel) coverage_level {width 33}} {Maybe#(OVLAssertions::OVLActionOnNewStart) action_on_new_start {width 4}} {Maybe#(OVLAssertions::OVLEdgeType) edge_type {width 4}} {Maybe#(OVLAssertions::OVLNecessaryCondition) necessary_condition {width 4}} {Maybe#(OVLAssertions::OVLInactive) inactive {width 4}} {Maybe#(Int#(32)) num_cks {width 33}} {Maybe#(Int#(32)) min_cks {width 33}} {Maybe#(Int#(32)) max_cks {width 33}} {Maybe#(Int#(32)) min_ack_cycle {width 33}} {Maybe#(Int#(32)) max_ack_cycle {width 33}} {Maybe#(Int#(32)) max_ack_length {width 33}} {Maybe#(Int#(32)) req_drop {width 33}} {Maybe#(Int#(32)) deassert_count {width 33}} {Maybe#(Int#(32)) depth {width 33}} {Maybe#(a) value} {Maybe#(a) min} {Maybe#(a) max} {Maybe#(Bool) check_overlapping {width 2}} {Maybe#(Bool) check_missing_start {width 2}} {Maybe#(Bool) simultaneous_push_pop {width 2}}}} {position {%/Libraries/OVLAssertions.bsv 107 19}}
Interface {OVLAssertions::AssertTest_IFC#(type a)} polymorphic {members {{method {Action test a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 648 11}}
Interface {OVLAssertions::VAssertTest_IFC#(numeric type n)} polymorphic {members {{method {Action test Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 654 11}}
Interface {OVLAssertions::AssertSampleTest_IFC#(type a)} polymorphic {members {{method {Action sample Bool {{(* ports = ["value"] *)}}}} {method {Action test a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 660 11}}
Interface {OVLAssertions::VAssertSampleTest_IFC#(numeric type n)} polymorphic {members {{method {Action sample Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action test Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 667 11}}
Interface {OVLAssertions::AssertStartTest_IFC#(type a)} polymorphic {members {{method {Action start Bool {{(* ports = ["value"] *)}}}} {method {Action test a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 674 11}}
Interface {OVLAssertions::VAssertStartTest_IFC#(numeric type n)} polymorphic {members {{method {Action start Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action test Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 681 11}}
Interface {OVLAssertions::AssertStartStopTest_IFC#(type a)} polymorphic {members {{method {Action start Bool {{(* ports = ["value"] *)}}}} {method {Action stop Bool {{(* ports = ["value"] *)}}}} {method {Action test a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 688 11}}
Interface {OVLAssertions::VAssertStartStopTest_IFC#(numeric type n)} polymorphic {members {{method {Action start Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action stop Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action test Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 696 11}}
Interface {OVLAssertions::AssertTransitionTest_IFC#(type a)} polymorphic {members {{method {Action test a {{(* ports = ["value"] *)}}}} {method {Action start a {{(* ports = ["value"] *)}}}} {method {Action next a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2491 11}}
Interface {OVLAssertions::VAssertTransitionTest_IFC#(numeric type n)} polymorphic {members {{method {Action test Bit#(n) {{(* ports = ["value"] *)}}}} {method {Action start Bit#(n) {{(* ports = ["value"] *)}}}} {method {Action next Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2497 11}}
Interface {OVLAssertions::AssertQuiescentTest_IFC#(type a)} polymorphic {members {{method {Action sample Bool {{(* ports = ["value"] *)}}}} {method {Action state a {{(* ports = ["value"] *)}}}} {method {Action check a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2640 11}}
Interface {OVLAssertions::VAssertQuiescentTest_IFC#(numeric type n)} polymorphic {members {{method {Action sample Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action state Bit#(n) {{(* ports = ["value"] *)}}}} {method {Action check Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2646 11}}
Interface {OVLAssertions::AssertFifoTest_IFC#(type a, type b)} polymorphic {members {{method {Action push a {{(* ports = ["value"] *)}}}} {method {Action pop b {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2782 11}}
Interface {OVLAssertions::VAssertFifoTest_IFC#(numeric type n, numeric type m)} polymorphic {members {{method {Action push Bit#(n) {{(* ports = ["value"] *)}}}} {method {Action pop Bit#(m) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2787 11}}
Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Alias {AhbDefines::LUInt#(numeric type m)} {UInt#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 29 35}}


Struct {Gray::Gray#(numeric type n)} polymorphic {members {{Bit#(n) code}}} {position {%/Libraries/Gray.bsv 15 19 {Library Gray}}}
TaggedUnion {UnitAppendList::UAList#(type a)} polymorphic {members {{void NoItems {width 0}} {a One} {{Tuple2#(UnitAppendList::UAList#(a), UnitAppendList::UAList#(a))} Append}}} {position {%/Libraries/UnitAppendList.bsv 7 3 {Library UnitAppendList}}}

Interface {BypassReg::WReg#(type a)} polymorphic {members {{method {Action bypass a {{(* ports = ["x"] *)}}}} {method {a _read {} {{(* ports = [] *)}}}} {method {Action _write a {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/BypassReg.bsv 12 11 {Library BypassReg}}}
Interface {UniqueWrappers::Wrapper#(type a, type b)} polymorphic {members {{method {ActionValue#(b) func a {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/UniqueWrappers.bsv 40 11 {Library UniqueWrappers}}}
Interface {UniqueWrappers::Wrapper2#(type a1, type a2, type b)} polymorphic {members {{method {ActionValue#(b) func {a1 a2} {{(* ports = ["x", "y"] *)}}}}}} {position {%/Libraries/UniqueWrappers.bsv 73 11 {Library UniqueWrappers}}}
Interface {UniqueWrappers::Wrapper3#(type a1, type a2, type a3, type b)} polymorphic {members {{method {ActionValue#(b) func {a1 a2 a3} {{(* ports = ["x", "y", "z"] *)}}}}}} {position {%/Libraries/UniqueWrappers.bsv 92 11 {Library UniqueWrappers}}}
Interface {FIFOLevel::FIFOLevelIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["x1"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool isLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool isGreaterThan Integer {{(* ports = ["c1"] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 42 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOLevelIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {Bool sIsLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool sIsGreaterThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool dIsLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool dIsGreaterThan Integer {{(* ports = ["c1"] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 220 11 {Library FIFOLevel}}}
Interface {FIFOLevel::FIFOCountIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} count {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 557 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOCountIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} sCount {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} dCount {} {{(* ports = [] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 701 11 {Library FIFOLevel}}}
Struct {BRAM_Compat::BRAMRequest#(type addr, type data)} polymorphic {members {{Bool write {width 1}} {addr address} {data datain}}} {position {%/Libraries/BRAM_Compat.bsv 23 19 {Library BRAM_Compat}}}
Struct {BRAM_Compat::BRAMRequestBE#(type addr, type data, numeric type n)} polymorphic {members {{Bit#(n) writeen} {addr address} {data datain}}} {position {%/Libraries/BRAM_Compat.bsv 29 19 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMServer#(type addr, type data)} {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} {position {%/Libraries/BRAM_Compat.bsv 31 49 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMClient#(type addr, type data)} {ClientServer::Client#(BRAM_Compat::BRAMRequest#(addr, data), data)} {position {%/Libraries/BRAM_Compat.bsv 32 49 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMServerBE#(type addr, type data, numeric type n)} {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} {position {%/Libraries/BRAM_Compat.bsv 34 54 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMClientBE#(type addr, type data, numeric type n)} {ClientServer::Client#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} {position {%/Libraries/BRAM_Compat.bsv 35 54 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM_PORT#(type addr, type data)} polymorphic {members {{method {Action put {Bool addr data} {{(* ports = ["write", "address", "datain"] *)}}}} {method {data read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/BRAM_Compat.bsv 46 11 {Library BRAM_Compat}}} {attributes {{(* always_ready  *)}}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {BRAM_Compat::BRAM_DUAL_PORT#(type addr, type data)} polymorphic {members {{interface {BRAM_Compat::BRAM_PORT#(addr, data)} a {}} {interface {BRAM_Compat::BRAM_PORT#(addr, data)} b {}}}} {position {%/Libraries/BRAM_Compat.bsv 56 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM2Port#(type addr, type data)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 61 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM1Port#(type addr, type data)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portA {}}}} {position {%/Libraries/BRAM_Compat.bsv 66 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM_PORT_BE#(type addr, type data, numeric type n)} polymorphic {members {{method {Action put {Bit#(n) addr data} {{(* ports = ["writeen", "address", "datain"] *)}}}} {method {data read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/BRAM_Compat.bsv 74 11 {Library BRAM_Compat}}} {attributes {{(* always_ready  *)}}}
Interface {BRAM_Compat::BRAM_DUAL_PORT_BE#(type addr, type data, numeric type n)} polymorphic {members {{interface {BRAM_Compat::BRAM_PORT_BE#(addr, data, n)} a {}} {interface {BRAM_Compat::BRAM_PORT_BE#(addr, data, n)} b {}}}} {position {%/Libraries/BRAM_Compat.bsv 79 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM_BE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 84 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM2PortBE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 89 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM1PortBE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}}}} {position {%/Libraries/BRAM_Compat.bsv 94 11 {Library BRAM_Compat}}}
Interface {FIFOLevel::FIFOLevelIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["x1"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool isLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool isGreaterThan Integer {{(* ports = ["c1"] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 42 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOLevelIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {Bool sIsLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool sIsGreaterThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool dIsLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool dIsGreaterThan Integer {{(* ports = ["c1"] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 220 11 {Library FIFOLevel}}}
Interface {FIFOLevel::FIFOLevel_INT#(type a_type, numeric type cntSize)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {UInt#(cntSize) count {} {{(* ports = [] *)}}}} {method {Bool i_notFull {} {{(* ports = [] *)}}}} {method {Bool i_notEmpty {} {{(* ports = [] *)}}}} {method {UInt#(cntSize) i_count {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 326 11 {Library FIFOLevel}}}
Interface {FIFOLevel::FIFOCountIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} count {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 557 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOCountIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} sCount {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} dCount {} {{(* ports = [] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 701 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOCount_INT#(type a_type, numeric type cntSize)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {UInt#(cntSize) sCount {} {{(* ports = [] *)}}}} {method {UInt#(cntSize) dCount {} {{(* ports = [] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 841 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOCount0_INT#(numeric type cntSize)} polymorphic {members {{method {Action enq {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {UInt#(cntSize) sCount {} {{(* ports = [] *)}}}} {method {UInt#(cntSize) dCount {} {{(* ports = [] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 854 11 {Library FIFOLevel}}}
Vector {Vector::Vector#(numeric type vsize, type element_type)} polymorphic {length n} {elem a}
TaggedUnion {Vector::Ascii#(numeric type n)} polymorphic {members {{{Vector::Vector#(n, Bit#(8))} Ascii}}} {position {%/Libraries/Vector.bs 1337 5 {Library Vector}}}
Typeclass {Monad#(type m)} {members {{{function m#(b) f(m#(a) x1, function m#(b) x2(a x1))} bind} {{function m#(a) f(a x1)} return}}} {instances {Monad#(ActionValue) Monad#(List) Monad#(Maybe) Monad#(Module) Monad#(ModuleContextCore::ModuleContext#(c)) Monad#(State::State#(s)) Monad#(StmtFSM::StmtM#(a))}} {position {%/Libraries/Prelude.bs 316 6 {Library Prelude}}}
Typeclass {MonadFix#(type m)} {superclasses Monad#(m)} {members {{{function m#(a) f(function m#(a) x1(a x1))} mfix}}} {instances {MonadFix#(ActionValue) MonadFix#(Module) MonadFix#(ModuleContextCore::ModuleContext#(c))}} {position {%/Libraries/Prelude.bs 329 19 {Library Prelude}}}
Typeclass {Bits#(type a, numeric type n)} {dependencies {{a determines n}}} coherent {members {{{function Bit#(n) f(a x1)} pack} {{function a f(Bit#(n) x1)} unpack}}} {instances {{Bits#(AXI4Lite_Types::AXI4Lite_ARFlit#(_v101, _v107), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(3, _v107, _v100))} {Bits#(AXI4Lite_Types::AXI4Lite_AWFlit#(_v101, _v107), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(3, _v107, _v100))} {Bits#(AXI4Lite_Types::AXI4Lite_BFlit#(_v104), _v100)   provisos (Add#(2, _v104, _v100))} {Bits#(AXI4Lite_Types::AXI4Lite_RFlit#(_v101, _v107), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(2, _v107, _v100))} {Bits#(AXI4Lite_Types::AXI4Lite_WFlit#(_v101, _v107), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(TDiv#(_v101, 8), _v107, _v100))} {Bits#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), _v100)   provisos (Add#(_v101, _v104, _v100), Add#(data_, TAdd#(TDiv#(data_, 8), wuser_), _v104), Add#(addr_, TAdd#(3, awuser_), _v101))} {Bits#(AXI4Stream_Types::AXI4Stream_Flit#(_v113, _v101, _v116, _v119), _v115)   provisos (Add#(_v101, _v112, _v115), Add#(TDiv#(_v101, 8), _v106, _v109), Add#(1, _v103, _v106), Add#(_v113, _v100, _v103), Add#(_v116, _v119, _v100), Add#(TDiv#(_v101, 8), _v109, _v112))} {Bits#(AXI4_Common_Types::AXI4_Burst, 2)} {Bits#(AXI4_Common_Types::AXI4_Lock, 1)} {Bits#(AXI4_Common_Types::AXI4_Prot_0, 1)} {Bits#(AXI4_Common_Types::AXI4_Prot_1, 1)} {Bits#(AXI4_Common_Types::AXI4_Prot_2, 1)} {Bits#(AXI4_Common_Types::AXI4_Resp, 2)} {Bits#(AXI4_Common_Types::AXI4_Size, 3)} {Bits#(AXI4_Types::AXI4_ARFlit#(_v101, _v104, _v131), _v127)   provisos (Add#(_v101, _v124, _v127), Add#(_v104, _v121, _v124), Add#(8, _v118, _v121), Add#(3, _v115, _v118), Add#(2, _v112, _v115), Add#(1, _v109, _v112), Add#(3, _v103, _v106), Add#(4, _v131, _v100), Add#(4, _v106, _v109), Add#(4, _v100, _v103))} {Bits#(AXI4_Types::AXI4_AWFlit#(_v101, _v104, _v131), _v127)   provisos (Add#(_v101, _v124, _v127), Add#(_v104, _v121, _v124), Add#(8, _v118, _v121), Add#(3, _v115, _v118), Add#(2, _v112, _v115), Add#(1, _v109, _v112), Add#(3, _v103, _v106), Add#(4, _v131, _v100), Add#(4, _v106, _v109), Add#(4, _v100, _v103))} {Bits#(AXI4_Types::AXI4_BFlit#(_v101, _v107), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(2, _v107, _v100))} {Bits#(AXI4_Types::AXI4_Events, 7)} {Bits#(AXI4_Types::AXI4_RFlit#(_v101, _v104, _v113), _v109)   provisos (Add#(_v101, _v106, _v109), Add#(_v104, _v103, _v106), Add#(2, _v100, _v103), Add#(1, _v113, _v100))} {Bits#(AXI4_Types::AXI4_WFlit#(_v101, _v110), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(TDiv#(_v101, 8), _v100, _v103), Add#(1, _v110, _v100))} {Bits#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), _v100)   provisos (Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(data_, TAdd#(TDiv#(data_, 8), TAdd#(1, wuser_)), _v104), Add#(TAdd#(id_, TAdd#(addr_, TAdd#(8, TAdd#(3, TAdd#(2, TAdd#(1, TAdd#(4, TAdd#(3, TAdd#(4, TAdd#(4, awuser_)))))))))), TAdd#(data_, TAdd#(TDiv#(data_, 8), TAdd#(1, wuser_))), _v101))} {Bits#(AXI4_Utils::ReadSplitOption, 2)} {Bits#(AXI4_Utils::SerialiserState, 2)} {Bits#(AXI_Helpers::ReqFlit#(id_, addr_, data_, tag_), _v100)   provisos (Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(id_, TAdd#(addr_, 29), _v104), Add#(TAdd#(id_, TAdd#(addr_, 29)), TAdd#(data_, TAdd#(TDiv#(data_, 8), TAdd#(1, tag_))), _v101))} {Bits#(AXI_Helpers::RspFlit#(id_, data_, tag_), _v100)   provisos (Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(id_, TAdd#(data_, TAdd#(2, TAdd#(1, tag_))), _v104), Add#(id_, 2, _v101))} {Bits#(AXI_Helpers::WriteReqFlit#(id_, addr_, data_, tag_), _v100)   provisos (Add#(_v101, _v104, _v100), Add#(data_, TAdd#(TDiv#(data_, 8), TAdd#(1, tag_)), _v104), Add#(id_, TAdd#(addr_, 29), _v101))} {Bits#(AddressFlit::AFlit#(_v101, _v104), _v100)   provisos (Add#(_v101, _v104, _v100))} {Bits#(AhbDefines::AhbBurst, 3)} {Bits#(AhbDefines::AhbCtrl#(id_size, _v116, data_size, length_size, user_size), _v112)   provisos (Add#(1, _v109, _v112), Add#(3, _v106, _v109), Add#(3, _v103, _v106), Add#(2, _v100, _v103), Add#(4, _v116, _v100))} {Bits#(AhbDefines::AhbMastCtrl#(id_size, _v116, data_size, length_size, user_size), _v115)   provisos (Add#(1, _v112, _v115), Add#(3, _v109, _v112), Add#(3, _v106, _v109), Add#(2, _v103, _v106), Add#(4, _v100, _v103), Add#(_v116, 4, _v100))} {Bits#(AhbDefines::AhbProt, 4)} {Bits#(AhbDefines::AhbRequest#(id_size, addr_size, _v104, length_size, user_size), _v100)   provisos (Add#(_v101, _v104, _v100), Add#(1, TAdd#(3, TAdd#(3, TAdd#(2, TAdd#(4, addr_size)))), _v101))} {Bits#(AhbDefines::AhbResp, 2)} {Bits#(AhbDefines::AhbResponse#(id_size, addr_size, _v104, length_size, user_size), _v103)   provisos (Add#(2, _v100, _v103), Add#(_v104, 2, _v100))} {Bits#(AhbDefines::AhbTbCtrl#(id_size, _v119, data_size, _v113, user_size), _v115)   provisos (Add#(1, _v112, _v115), Add#(3, _v109, _v112), Add#(3, _v106, _v109), Add#(2, _v103, _v106), Add#(_v113, _v100, _v103), Add#(4, _v119, _v100))} {Bits#(AhbDefines::AhbTbRequest#(id_size, addr_size, _v104, length_size, user_size), _v100)   provisos (Add#(_v101, _v104, _v100), Add#(1, TAdd#(3, TAdd#(3, TAdd#(2, TAdd#(length_size, TAdd#(4, addr_size))))), _v101))} {Bits#(AhbDefines::AhbTransfer, 2)} {Bits#(AhbDefines::AhbWrite, 1)} {Bits#(AhbDefines::AhbXtorRequest#(id_size, addr_size, _v104, length_size, user_size), _v100)   provisos (Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(TAdd#(1, TAdd#(3, TAdd#(3, TAdd#(2, TAdd#(length_size, TAdd#(4, addr_size)))))), _v104, _v101))} {Bits#(AhbMaster::EBTMode, 2)} {Bits#(AhbPC::AhbPropTypes, 14)} {Bits#(AhbPC::FVPropType, 2)} {Bits#(AlteraCells::AlteraClockGenParams, _v220)   provisos (Add#(_v221, _v224, _v100), Bits#(String, _v221), Add#(_v221, _v109, _v112), Add#(_v221, _v121, _v124), Add#(_v221, _v133, _v136), Add#(_v221, _v145, _v148), Add#(_v221, _v157, _v160), Add#(_v221, _v169, _v172), Add#(_v221, _v181, _v184), Add#(_v221, _v193, _v196), Add#(_v221, _v205, _v208), Add#(_v221, _v217, _v220), Bits#(Integer, _v224), Add#(_v224, _v100, _v103), Add#(_v224, _v103, _v106), Add#(_v224, _v106, _v109), Add#(_v224, _v112, _v115), Add#(_v224, _v115, _v118), Add#(_v224, _v118, _v121), Add#(_v224, _v124, _v127), Add#(_v224, _v127, _v130), Add#(_v224, _v130, _v133), Add#(_v224, _v136, _v139), Add#(_v224, _v139, _v142), Add#(_v224, _v142, _v145), Add#(_v224, _v148, _v151), Add#(_v224, _v151, _v154), Add#(_v224, _v154, _v157), Add#(_v224, _v160, _v163), Add#(_v224, _v163, _v166), Add#(_v224, _v166, _v169), Add#(_v224, _v172, _v175), Add#(_v224, _v175, _v178), Add#(_v224, _v178, _v181), Add#(_v224, _v184, _v187), Add#(_v224, _v187, _v190), Add#(_v224, _v190, _v193), Add#(_v224, _v196, _v199), Add#(_v224, _v199, _v202), Add#(_v224, _v202, _v205), Add#(_v224, _v208, _v211), Add#(_v224, _v211, _v214), Add#(_v224, _v214, _v217))} {Bits#(AlteraCells::IDDRParams, _v109)   provisos (Bits#(String, _v113), Add#(_v113, _v113, _v100), Add#(_v113, _v100, _v103), Add#(_v113, _v103, _v106), Add#(_v113, _v106, _v109))} {Bits#(AlteraCells::LVDSRX, _v220)   provisos (Add#(_v206, _v112, _v115), Bits#(String, _v224), Add#(_v224, _v224, _v100), Add#(_v224, _v100, _v103), Add#(_v224, _v103, _v106), Add#(_v224, _v106, _v109), Add#(_v224, _v109, _v112), Add#(_v224, _v115, _v118), Add#(_v224, _v118, _v121), Add#(_v224, _v124, _v127), Add#(_v224, _v130, _v133), Add#(_v224, _v136, _v139), Add#(_v224, _v139, _v142), Add#(_v224, _v142, _v145), Add#(_v224, _v145, _v148), Add#(_v224, _v148, _v151), Add#(_v224, _v151, _v154), Add#(_v224, _v154, _v157), Add#(_v224, _v157, _v160), Add#(_v224, _v160, _v163), Add#(_v224, _v163, _v166), Add#(_v224, _v166, _v169), Add#(_v224, _v169, _v172), Add#(_v224, _v178, _v181), Add#(_v224, _v181, _v184), Add#(_v224, _v184, _v187), Add#(_v224, _v187, _v190), Add#(_v224, _v190, _v193), Add#(_v224, _v193, _v196), Add#(_v224, _v196, _v199), Add#(_v224, _v199, _v202), Add#(_v224, _v202, _v205), Add#(_v224, _v208, _v211), Add#(_v224, _v211, _v214), Add#(_v224, _v217, _v220), Bits#(Integer, _v206), Add#(_v206, _v121, _v124), Add#(_v206, _v127, _v130), Add#(_v206, _v133, _v136), Add#(_v206, _v172, _v175), Add#(_v206, _v175, _v178), Add#(_v206, _v205, _v208), Add#(_v206, _v214, _v217))} {Bits#(AlteraCells::LVDSTX, _v175)   provisos (Add#(_v158, _v115, _v118), Bits#(String, _v179), Add#(_v179, _v179, _v100), Add#(_v179, _v100, _v103), Add#(_v179, _v103, _v106), Add#(_v179, _v106, _v109), Add#(_v179, _v109, _v112), Add#(_v179, _v112, _v115), Add#(_v179, _v139, _v142), Add#(_v179, _v142, _v145), Add#(_v179, _v145, _v148), Add#(_v179, _v148, _v151), Add#(_v179, _v151, _v154), Add#(_v179, _v154, _v157), Add#(_v179, _v160, _v163), Add#(_v179, _v163, _v166), Add#(_v179, _v169, _v172), Add#(_v179, _v172, _v175), Bits#(Integer, _v158), Add#(_v158, _v118, _v121), Add#(_v158, _v121, _v124), Add#(_v158, _v124, _v127), Add#(_v158, _v127, _v130), Add#(_v158, _v130, _v133), Add#(_v158, _v133, _v136), Add#(_v158, _v136, _v139), Add#(_v158, _v157, _v160), Add#(_v158, _v166, _v169))} {Bits#(AlteraCells::ODDRParams, _v115)   provisos (Bits#(String, _v119), Add#(_v119, _v119, _v100), Add#(_v119, _v100, _v103), Add#(_v119, _v103, _v106), Add#(_v119, _v106, _v109), Add#(_v119, _v109, _v112), Add#(_v119, _v112, _v115))} {Bits#(ApbDefines::ApbCtrl#(id_size, _v104, data_size, length_size, user_size), _v103)   provisos (Add#(1, _v100, _v103), Add#(_v104, 3, _v100))} {Bits#(ApbDefines::ApbProt, 3)} {Bits#(ApbDefines::ApbRequest#(id_size, addr_size, _v107, length_size, user_size), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(TDiv#(_v107, 8), _v107, _v100), Add#(1, TAdd#(addr_size, 3), _v101))} {Bits#(ApbDefines::ApbResponse#(id_size, addr_size, _v104, length_size, user_size), _v100)   provisos (Add#(1, _v104, _v100))} {Bits#(ApbDefines::ApbWrite, 1)} {Bits#(ApbSlave::ApbState, 2)} {Bits#(Axi4Defines::Axi4AddrCmd#(_v101, _v125, data_size, length_size, _v131), _v127)   provisos (Add#(_v101, _v124, _v127), Add#(8, _v121, _v124), Add#(3, _v118, _v121), Add#(2, _v115, _v118), Add#(1, _v112, _v115), Add#(4, _v109, _v112), Add#(3, _v106, _v109), Add#(_v125, _v100, _v103), Add#(4, _v131, _v100), Add#(4, _v103, _v106))} {Bits#(Axi4Defines::Axi4Cache, 4)} {Bits#(Axi4Defines::Axi4Lock, 1)} {Bits#(Axi4Defines::Axi4RdResp#(_v101, addr_size, _v104, length_size, _v110), _v109)   provisos (Add#(_v101, _v106, _v109), Add#(_v104, _v103, _v106), Add#(2, _v100, _v103), Add#(_v110, 1, _v100))} {Bits#(Axi4Defines::Axi4WrData#(id_size, addr_size, _v101, length_size, _v104), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(_v104, _v100, _v103), Add#(TDiv#(_v101, 8), 1, _v100))} {Bits#(Axi4Defines::Axi4WrResp#(_v101, addr_size, data_size, length_size, _v107), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(2, _v107, _v100))} {Bits#(Axi4LDefines::Axi4LAddrCmd#(id_size, _v104, data_size, length_size, user_size), _v100)   provisos (Add#(3, _v104, _v100))} {Bits#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, _v101, length_size, user_size), _v100)   provisos (Add#(_v101, 2, _v100))} {Bits#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, _v101, length_size, user_size), _v100)   provisos (Add#(_v101, TDiv#(_v101, 8), _v100))} {Bits#(Axi4LPC::Axi4LPCParams, 32)} {Bits#(Axi4PC::Axi4PCParams, 64)} {Bits#(AxiDefines::AxiAddrCmd#(_v101, _v122, data_size, length_size, user_size), _v118)   provisos (Add#(_v101, _v115, _v118), Add#(4, _v112, _v115), Add#(3, _v109, _v112), Add#(2, _v106, _v109), Add#(2, _v103, _v106), Add#(4, _v100, _v103), Add#(3, _v122, _v100))} {Bits#(AxiDefines::AxiBurst, 2)} {Bits#(AxiDefines::AxiCache, 4)} {Bits#(AxiDefines::AxiProt, 3)} {Bits#(AxiDefines::AxiRdResp#(_v101, addr_size, _v104, length_size, user_size), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(_v104, 3, _v103))} {Bits#(AxiDefines::AxiResp, 2)} {Bits#(AxiDefines::AxiWrData#(_v101, addr_size, _v104, length_size, user_size), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(_v104, _v100, _v103), Add#(TDiv#(_v104, 8), 1, _v100))} {Bits#(AxiDefines::AxiWrResp#(_v101, addr_size, data_size, length_size, user_size), _v100)   provisos (Add#(_v101, 2, _v100))} {Bits#(AxiPC::AxiPCParams, 64)} {Bits#(BRAM::BRAMRequest#(addr, data), _v106)   provisos (Add#(1, _v100, _v103), Add#(_v107, _v110, _v100), Bits#(data, _v110), Bits#(addr, _v107), Add#(1, _v103, _v106))} {Bits#(BRAM::BRAMRequestBE#(addr, data, _v101), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(1, _v100, _v103), Add#(_v107, _v110, _v100), Bits#(data, _v110), Bits#(addr, _v107))} {Bits#(BRAM::LoadFormat, _v100)   provisos (Add#(2, _v106, _v100), Add#(_v108, _v107, _v106), Bits#(String, _v107), Max#(_v107, _v107, _v106))} {Bits#(BRAM_Compat::BRAMRequest#(addr, data), _v103)   provisos (Add#(1, _v100, _v103), Add#(_v104, _v107, _v100), Bits#(data, _v107), Bits#(addr, _v104))} {Bits#(BRAM_Compat::BRAMRequestBE#(addr, data, _v101), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(_v104, _v107, _v100), Bits#(data, _v107), Bits#(addr, _v104))} {Bits#(Bag::Entry#(keyType, datType), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(datType, _v104), Bits#(keyType, _v101))} {Bits#(Bit#(k), k)} {Bits#(Bool, 1)} {Bits#(Branch_Predictor::BTB_Entry, 118)} {Bits#(BusSwitch::BusSwitchPath#(_v110, addr_size, data_size, length_size, user_size), _v106)   provisos (Add#(_v110, _v110, _v100), Add#(_v110, _v100, _v103), Add#(_v110, _v103, _v106))} {Bits#(CB::TokenRR#(a, ln), _v100)   provisos (Add#(_v106, TAdd#(ln, ln), _v104), Bits#(a, _v106), Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(_v106, ln, _v101))} {Bits#(CB::TokenRange#(a, _v107), _v103)   provisos (Add#(_v101, _v100, _v103), Bits#(a, _v101), Add#(_v107, _v107, _v100))} {Bits#(CB::TokenRequest#(a, _v104), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(a, _v101))} {Bits#(CBus::CRAddr#(_v101, sd), _v100)   provisos (Add#(_v101, TLog#(sd), _v100))} {Bits#(CHERICC_Fat::Bounds, 34)} {Bits#(CHERICC_Fat::BoundsEmbeddedExp, 27)} {Bits#(CHERICC_Fat::BoundsExp0, 27)} {Bits#(CHERICC_Fat::CapFat, 151)} {Bits#(CHERICC_Fat::CapPipe, 161)} {Bits#(CHERICC_Fat::CapabilityInMemory, 129)} {Bits#(CHERICC_Fat::Format, 1)} {Bits#(CHERICC_Fat::HPerms, 12)} {Bits#(CHERICC_Fat::MetaInfo, 10)} {Bits#(CHERICC_Fat::Perms, 16)} {Bits#(CHERICC_Fat::VnD#(t), _v100)   provisos (Add#(1, _v104, _v100), Bits#(t, _v104))} {Bits#(CHERICap::Exact#(t), _v100)   provisos (Add#(1, _v104, _v100), Bits#(t, _v104))} {Bits#(CHERICap::HardPerms, 12)} {Bits#(CHERICap::Kind#(_v112), _v100)   provisos (Add#(3, _v112, _v100))} {Bits#(CHERICap::SetBoundsReturn#(t, _v110), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(1, _v100, _v103), Bits#(t, _v101), Add#(_v110, _v110, _v100))} {Bits#(CPU::CPU_State, 4)} {Bits#(CPU_Globals::Bypass, 168)} {Bits#(CPU_Globals::Bypass_State, 2)} {Bits#(CPU_Globals::CF_Info, 195)} {Bits#(CPU_Globals::CF_Op, 2)} {Bits#(CPU_Globals::Control, 4)} {Bits#(CPU_Globals::Data_Stage1_to_Stage2, 1285)} {Bits#(CPU_Globals::Data_Stage2_to_Stage3, 487)} {Bits#(CPU_Globals::Data_StageD_to_Stage1, 433)} {Bits#(CPU_Globals::Data_StageF_to_StageD, 239)} {Bits#(CPU_Globals::FBypass, 71)} {Bits#(CPU_Globals::Op_Stage2, 3)} {Bits#(CPU_Globals::Output_Stage1, 2018)} {Bits#(CPU_Globals::Output_Stage2, 1040)} {Bits#(CPU_Globals::Output_Stage2_Perf, 5)} {Bits#(CPU_Globals::Output_Stage3, 241)} {Bits#(CPU_Globals::Output_StageD, 435)} {Bits#(CPU_Globals::Output_StageF, 241)} {Bits#(CPU_Globals::Pipeline_Val#(capType), _v101)   provisos (Bits#(capType, _v101))} {Bits#(CPU_Globals::Stage_OStatus, 2)} {Bits#(CPU_Globals::Trap_Info_Pipe, 306)} {Bits#(CSR_RegFile_MSU::AccessPerms, 2)} {Bits#(CSR_RegFile_MSU::CSR_Write_Result, 129)} {Bits#(CSR_RegFile_MSU::RF_State, 1)} {Bits#(CacheCorderer::ReqRec, 52)} {Bits#(CacheCorderer::TransRecord, 13)} {Bits#(CacheCore::AddrTagWay#(ways, keyBits, tagBits), _v109)   provisos (Add#(_v101, _v106, _v109), Add#(_v104, _v103, _v106), Add#(TLog#(ways), 7, _v103), Add#(tagBits, 14, _v104), Add#(tagBits, TAdd#(keyBits, 5), _v101))} {Bits#(CacheCore::CacheAddress#(_v104, _v101), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(_v104, 5, _v103))} {Bits#(CacheCore::CacheCommit, 6)} {Bits#(CacheCore::CacheState, 1)} {Bits#(CacheCore::ControlToken#(ways, keyBits, tagBits), _v127)   provisos (Add#(2, _v124, _v127), Add#(141, _v121, _v124), Add#(_v107, _v118, _v121), Add#(3, _v115, _v118), Add#(_v113, _v112, _v115), Add#(TLog#(ways), _v109, _v112), Add#(1, _v103, _v106), Add#(_v125, _v100, _v103), Add#(_v128, 2, _v100), Add#(tagBits, 14, _v128), Add#(tagBits, TAdd#(keyBits, TAdd#(TLog#(ways), 1)), _v125), Add#(keyBits, 2, _v113), Add#(tagBits, TAdd#(keyBits, 5), _v107), Add#(1, _v106, _v109))} {Bits#(CacheCore::DataKey#(ways, _v101), _v100)   provisos (Add#(_v101, 2, _v100))} {Bits#(CacheCore::EventsCacheCore, 7)} {Bits#(CacheCore::InvalidateToken#(ways, _v104, _v101), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(_v104, _v100, _v103), Add#(TLog#(ways), 1, _v100))} {Bits#(CacheCore::LookupCommand, 2)} {Bits#(CacheCore::OrderBehaviour, 1)} {Bits#(CacheCore::ReqIdWithSC, 8)} {Bits#(CacheCore::RequestRecord#(ways, _v101, tagBits), _v121)   provisos (Add#(_v101, _v118, _v121), Add#(6, _v109, _v112), Add#(_v116, _v103, _v106), Add#(TLog#(ways), 2, _v103), Add#(tagBits, 14, _v116), Add#(6, _v115, _v118), Add#(1, _v112, _v115), Add#(1, _v106, _v109))} {Bits#(CacheCore::ResponseBehaviour, 1)} {Bits#(CacheCore::ResponseToken, 233)} {Bits#(CacheCore::TagLine#(_v101), _v109)   provisos (Add#(_v101, 14, _v109))} {Bits#(CacheCore::TagUpdate#(ways, _v104, tagBits), _v106)   provisos (Add#(1, _v103, _v106), Add#(_v104, _v100, _v103), Add#(_v107, TLog#(ways), _v100), Add#(tagBits, 14, _v107))} {Bits#(CacheCore::WriteMissBehaviour, 1)} {Bits#(ClkCtrlServer::ClkCtrlReq, 32)} {Bits#(ClkCtrlServer::ClkCtrlResp, 96)} {Bits#(Complex::Complex#(any_t), _v100)   provisos (Bits#(any_t, _v104), Add#(_v104, _v104, _v100))} {Bits#(DDR2Types::DDR2ReqCmd, 33)} {Bits#(DDR2Types::DDR2ReqData, 72)} {Bits#(DDR3::DDR3Request#(_v104, _v107, _v101), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(_v104, _v107, _v100))} {Bits#(DDR3::DDR3Response#(_v101), _v101)} {Bits#(DDR4::DDR4Request#(_v104, _v107, _v101), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(_v104, _v107, _v100))} {Bits#(DDR4::DDR4Response#(_v101), _v101)} {Bits#(DM_CPU_Req_Rsp::DM_CPU_Req#(_v104, _v107), _v103)   provisos (Add#(1, _v100, _v103), Add#(_v104, _v107, _v100))} {Bits#(DM_CPU_Req_Rsp::DM_CPU_Rsp#(_v104), _v100)   provisos (Add#(1, _v104, _v100))} {Bits#(DM_Common::DCSR_Cause, 3)} {Bits#(DM_Common::DM_abstractcs_cmderr, 3)} {Bits#(DM_Common::DM_command_access_reg_size, 3)} {Bits#(DM_Common::DM_command_cmdtype, 1)} {Bits#(DM_Common::DM_sbaccess, 3)} {Bits#(DM_Common::DM_sberror, 3)} {Bits#(DM_System_Bus::SB_State, 2)} {Bits#(EX_ALU_functions::ALU_Inputs, 1426)} {Bits#(EX_ALU_functions::ALU_Outputs, 1597)} {Bits#(EX_ALU_functions::Output_Select, 3)} {Bits#(Either#(a, b), _v100)   provisos (Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Bits#(b, _v104), Bits#(a, _v101))} {Bits#(FBox_Core::FBoxResult, 69)} {Bits#(FBox_Core::FBoxState, 2)} {Bits#(FPR_RegFile::RF_State, 2)} {Bits#(FPU::FloatU, 65)} {Bits#(File, 32)} {Bits#(FixedPoint::FixedPoint#(i, f), b)   provisos (Add#(i, f, b))} {Bits#(FixedPoint::RoundMode, 3)} {Bits#(FloatingPoint::CommonState#(e, m), _v103)   provisos (Add#(_v101, 8, _v103), Add#(1, TAdd#(1, TAdd#(e, m)), _v101))} {Bits#(FloatingPoint::Disorder, 2)} {Bits#(FloatingPoint::Exception, 5)} {Bits#(FloatingPoint::FloatingPoint#(_v104, _v107), _v103)   provisos (Add#(1, _v100, _v103), Add#(_v104, _v107, _v100))} {Bits#(FloatingPoint::RoundMode, 3)} {Bits#(GPR_RegFile::RF_State, 2)} {Bits#(Gray::Gray#(_v101), _v101)} {Bits#(I2C::I2CRequest, 24)} {Bits#(I2C::I2CResponse, 8)} {Bits#(I2C::State, 1)} {Bits#(ISA_Decls::Access_RWX, 2)} {Bits#(ISA_Decls::Decoded_Instr, 162)} {Bits#(ISA_Decls::Fence_Ordering, 8)} {Bits#(ISA_Decls::FpuOp, 4)} {Bits#(ISA_Decls::ISize, 1)} {Bits#(ISA_Decls::MCause, 7)} {Bits#(ISA_Decls::MCounteren, 32)} {Bits#(ISA_Decls::MCountinhibit, 32)} {Bits#(ISA_Decls::MISA, 28)} {Bits#(ISA_Decls::MTVEC_Mode, 1)} {Bits#(ISA_Decls::MTVec, 63)} {Bits#(ISA_Decls::Mem_Data_Size, 2)} {Bits#(ISA_Decls::RV_Version, 1)} {Bits#(ISA_Decls::Trap_Info_CSR, 281)} {Bits#(ISA_Decls::XCCSR, 11)} {Bits#(Int#(n), n)} {Bits#(IntMulDiv::DivState, 3)} {Bits#(IntMulDiv::MulState, 2)} {Bits#(JtagTap::DMI, 40)} {Bits#(JtagTap::DTMCS, 32)} {Bits#(JtagTap::JtagState, 4)} {Bits#(LBus::HandlerState, 2)} {Bits#(LBus::LbAddr#(_v101, sd), _v101)} {Bits#(LBus::LbRWop, 1)} {Bits#(LBus::LbReq#(_v104, _v107), _v103)   provisos (Add#(1, _v100, _v103), Add#(_v104, _v107, _v100))} {Bits#(LBus::LbState, 2)} {Bits#(LBus::ResetType, 2)} {Bits#(ListN::ListN#(n, a), nsa)   provisos (Mul#(n, sa, nsa), Bits#(a, sa))} {Bits#(ML507_DDR2::DDR2LLReq, 180)} {Bits#(ML507_DDR2::DDR2LLReqCmd, 34)} {Bits#(ML507_DDR2::DDR2LLReqData, 144)} {Bits#(MMU_Cache::CTagState, 1)} {Bits#(MMU_Cache::Fabric_Write_Fields, 213)} {Bits#(MMU_Cache::Module_State, 5)} {Bits#(MMU_Cache::Requestor, 1)} {Bits#(MMU_Cache::State_and_CTag, 53)} {Bits#(MMU_Cache_Common::CacheOp, 2)} {Bits#(MMU_Cache_Common::L1_to_L2_Req, 69)} {Bits#(MMU_Cache_Common::L1_to_L2_Rsp, 583)} {Bits#(MMU_Cache_Common::L2_to_L1_Req, 66)} {Bits#(MMU_Cache_Common::L2_to_L1_Rsp, 583)} {Bits#(MMU_Cache_Common::MMU_Cache_Req, 273)} {Bits#(MMU_Cache_Common::Meta_State, 2)} {Bits#(MMU_Cache_Common::Single_Req, 197)} {Bits#(MMU_Cache_Common::Single_Rsp, 130)} {Bits#(MMU_Cache_Common::VM_Xlate_Outcome, 2)} {Bits#(MMU_Cache_Common::VM_Xlate_Result, 204)} {Bits#(Map::MapKeyIndex#(ky, ix), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(ix, _v104), Bits#(ky, _v101))} {Bits#(Map::MapKeyIndexValue#(ky, ix, vl), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(_v104, _v107, _v100), Bits#(vl, _v107), Bits#(ix, _v104), Bits#(ky, _v101))} {Bits#(Map::MapKeyValue#(ky, vl), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(vl, _v104), Bits#(ky, _v101))} {Bits#(Maybe#(a), _v100)   provisos (Add#(1, _v103, _v100), Bits#(a, _v103))} {Bits#(MemTypes::BitPO#(_v101), _v101)} {Bits#(MemTypes::MemReq#(addr_t, data_t), _v100)   provisos (Add#(TDiv#(_v106, 8), _v106, _v107), Bits#(data_t, _v106), Add#(_v108, _v107, _v104), Bits#(addr_t, _v108), Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(_v108, TMax#(1, TLog#(TAdd#(1, TLog#(TDiv#(_v106, 8))))), _v101))} {Bits#(MemTypes::MemReq_$ReadReq#(addr_t, data_t), _v100)   provisos (Add#(_v101, TMax#(1, TLog#(TAdd#(1, TLog#(TDiv#(_v102, 8))))), _v100), Bits#(data_t, _v102), Bits#(addr_t, _v101))} {Bits#(MemTypes::MemReq_$WriteReq#(addr_t, data_t), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(TDiv#(_v107, 8), _v107, _v100), Bits#(addr_t, _v101), Bits#(data_t, _v107))} {Bits#(MemTypes::MemRsp#(data_t), _v100)   provisos (Add#(2, _v106, _v100), Bits#(data_t, _v106))} {Bits#(MemTypesCHERI::BytesPerFlit, 3)} {Bits#(MemTypesCHERI::CacheInst, 4)} {Bits#(MemTypesCHERI::CacheOperation, 8)} {Bits#(MemTypesCHERI::CheriCapAddress, 40)} {Bits#(MemTypesCHERI::Data#(_v104), _v100)   provisos (Add#(1, _v104, _v100))} {Bits#(MemTypesCHERI::DataMinusCapTags#(_v101), _v101)} {Bits#(MemTypesCHERI::Error, 2)} {Bits#(MemTypesCHERI::MemoryRequest#(addr_t, masterid_t, transactionid_t, data_width), _v109)   provisos (Add#(_v101, _v106, _v109), Add#(_v104, _v103, _v106), Add#(_v107, _v100, _v103), Add#(1, _v113, _v100), Add#(2, TMax#(9, TMax#(TAdd#(1, TAdd#(1, TAdd#(1, TAdd#(TDiv#(data_width, 8), TAdd#(8, TAdd#(TAdd#(1, data_width), 8)))))), 8)), _v113), Bits#(transactionid_t, _v107), Bits#(masterid_t, _v104), Bits#(addr_t, _v101))} {Bits#(MemTypesCHERI::MemoryRequest_$operation#(addr_t, masterid_t, transactionid_t, data_width), _v100)   provisos (Add#(2, _v106, _v100), Max#(9, _v103, _v106), Max#(_v104, 8, _v103), Add#(_v108, 8, _v106), Add#(_v105, _v104, _v106), Add#(_v102, 9, _v106), Add#(1, TAdd#(1, TAdd#(1, TAdd#(TDiv#(data_width, 8), TAdd#(8, TAdd#(TAdd#(1, data_width), 8))))), _v104))} {Bits#(MemTypesCHERI::MemoryRequest_$operation_$Read#(addr_t, masterid_t, transactionid_t, data_width), 9)} {Bits#(MemTypesCHERI::MemoryRequest_$operation_$Write#(addr_t, masterid_t, transactionid_t, data_width), _v115)   provisos (Add#(1, _v106, _v109), Add#(TDiv#(data_width, 8), _v103, _v106), Add#(_v116, 8, _v100), Add#(1, data_width, _v116), Add#(1, _v109, _v112), Add#(1, _v112, _v115), Add#(8, _v100, _v103))} {Bits#(MemTypesCHERI::MemoryResponse#(masterid_t, transactionid_t, data_width), _v109)   provisos (Add#(_v101, _v106, _v109), Add#(_v104, _v103, _v106), Add#(2, _v100, _v103), Add#(4, _v113, _v100), Add#(1, data_width, _v113), Bits#(transactionid_t, _v104), Bits#(masterid_t, _v101))} {Bits#(MemTypesCHERI::MemoryResponse_$operation#(masterid_t, transactionid_t, data_width), 4)} {Bits#(MemTypesCHERI::MemoryResponse_$operation_$Read#(masterid_t, transactionid_t, data_width), 2)} {Bits#(MemTypesCHERI::PhyBitAddress#(width, bytePerLine), _v100)   provisos (Add#(_v101, 3, _v100), Add#(TSub#(width, TLog#(bytePerLine)), TLog#(bytePerLine), _v101))} {Bits#(MemTypesCHERI::PhyByteAddress#(width, bytePerLine), _v100)   provisos (Add#(TSub#(width, TLog#(bytePerLine)), TLog#(bytePerLine), _v100))} {Bits#(MemTypesCHERI::ReqId, 6)} {Bits#(MemTypesCHERI::WhichCache, 3)} {Bits#(Memory::MemoryRequest#(_v107, _v110), _v106)   provisos (Add#(1, _v103, _v106), Add#(TDiv#(_v110, 8), _v100, _v103), Add#(_v107, _v110, _v100))} {Bits#(Memory::MemoryResponse#(_v101), _v101)} {Bits#(MultiLevelTagLookup::CheriTagRequest, 49)} {Bits#(MultiLevelTagLookup::CheriTagRequest_$operation, 9)} {Bits#(MultiLevelTagLookup::CheriTagResponse, 5)} {Bits#(MultiLevelTagLookup::CheriTagResponse_$tags, 5)} {Bits#(MultiLevelTagLookup::CheriTagWrite, 8)} {Bits#(MultiLevelTagLookup::State, 3)} {Bits#(MultiLevelTagLookup::TableEntry, 5)} {Bits#(Near_Mem_Caches::State, 2)} {Bits#(Near_Mem_IFC::EventsCache, 14)} {Bits#(Near_Mem_IO_AXI4::Module_State, 1)} {Bits#(NumberTypes::BuffIndex#(_v101, ln), _v101)} {Bits#(NumberTypes::WrapNumber#(_v101), _v101)} {Bits#(OInt::OInt#(_v101), _v101)} {Bits#(OVLAssertions::OVLActionOnNewStart, 3)} {Bits#(OVLAssertions::OVLCoverageLevel, 32)} {Bits#(OVLAssertions::OVLEdgeType, 3)} {Bits#(OVLAssertions::OVLInactive, 3)} {Bits#(OVLAssertions::OVLNecessaryCondition, 3)} {Bits#(OVLAssertions::OVLPropertyType, 3)} {Bits#(OVLAssertions::OVLSeverityLevel, 3)} {Bits#(Ordering, 2)} {Bits#(PCIE::BARAperture, 6)} {Bits#(PCIE::BARID, 3)} {Bits#(PCIE::ErrorCode, 4)} {Bits#(PCIE::FlowControlInfoSelect, 3)} {Bits#(PCIE::MSIErrorCode, 2)} {Bits#(PCIE::MSIHotPlugCode, 4)} {Bits#(PCIE::MSIInterruptCode, 3)} {Bits#(PCIE::MSIPowerMgtCode, 4)} {Bits#(PCIE::PCIEParams, _v100)   provisos (Add#(1, _v104, _v100), Bits#(Real, _v104))} {Bits#(PCIE::PciId, 16)} {Bits#(PCIE::RequestType, 4)} {Bits#(PCIE::TLPAddressType, 2)} {Bits#(PCIE::TLPAttrIDBasedOrdering, 1)} {Bits#(PCIE::TLPAttrNoSnoop, 1)} {Bits#(PCIE::TLPAttrRelaxedOrdering, 1)} {Bits#(PCIE::TLPByteCountModified, 1)} {Bits#(PCIE::TLPCompletionHeader, 128)} {Bits#(PCIE::TLPCompletionStatus, 3)} {Bits#(PCIE::TLPData#(_v110), _v109)   provisos (Add#(1, _v103, _v106), Add#(7, _v100, _v103), Add#(_v110, TMul#(_v110, 8), _v100), Add#(1, _v106, _v109))} {Bits#(PCIE::TLPDigest, 1)} {Bits#(PCIE::TLPMSIHeader, 126)} {Bits#(PCIE::TLPMemory4DWHeader, 128)} {Bits#(PCIE::TLPMemoryIO3DWHeader, 128)} {Bits#(PCIE::TLPMessageCode, 8)} {Bits#(PCIE::TLPPacketFormat, 2)} {Bits#(PCIE::TLPPacketType, 5)} {Bits#(PCIE::TLPPoison, 1)} {Bits#(PCIE::TLPTrafficClass, 3)} {Bits#(PCIE::TargetFunction, 8)} {Bits#(RAM::RAMreq#(adr, dta), sz)   provisos (Add#(sz1, 1, sz), Add#(sa, sd, sz1), Bits#(dta, sd), Bits#(adr, sa))} {Bits#(RISCV_MBox::State, 2)} {Bits#(RS232::Parity, 2)} {Bits#(RS232::RecvState, 3)} {Bits#(RS232::StopBits, 2)} {Bits#(RS232::XmitState, 3)} {Bits#(Reserved::Reserved#(n), n)} {Bits#(Reserved::ReservedOne#(n), n)} {Bits#(Reserved::ReservedZero#(n), n)} {Bits#(Routable::Range#(_v104), _v100)   provisos (Add#(_v104, _v104, _v100))} {Bits#(Routable::WithMetaInfo#(t, m_t), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(m_t, _v104), Bits#(t, _v101))} {Bits#(Routable::WithRouteInfo#(t, r_t), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(r_t, _v104), Bits#(t, _v101))} {Bits#(SVA::AssertRes, 1)} {Bits#(SVA::PropRes, 2)} {Bits#(SVA::SeqRes, 2)} {Bits#(SaturationMode, 2)} {Bits#(StatCounters::AXI4_Master_Events, 448)} {Bits#(StatCounters::AXI4_Slave_Events, 448)} {Bits#(StatCounters::EventsCore, 1984)} {Bits#(StatCounters::EventsL1D, 896)} {Bits#(StatCounters::EventsL1I, 448)} {Bits#(StatCounters::EventsLL, 576)} {Bits#(StatCounters::EventsTGC, 448)} {Bits#(StatCounters::EventsTransExe, 192)} {Bits#(StatCounters::HPMEvents, 5448)} {Bits#(SvaParam, 33)} {Bits#(TLB::TLBE, 144)} {Bits#(TLB::TLB_Lookup_Result, 131)} {Bits#(TLM2Defines::RequestData#(_v104, addr_size, _v101, uint_size, cstm_type), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(_v104, _v107, _v100), Bits#(cstm_type, _v107))} {Bits#(TLM2Defines::RequestDescriptor#(_v137, _v107, _v110, _v125, cstm_type), _v136)   provisos (Add#(2, _v133, _v136), Add#(2, _v130, _v133), Add#(_v107, _v127, _v130), Add#(_v110, _v124, _v127), Add#(TDiv#(_v110, 8), _v118, _v121), Add#(2, _v115, _v118), Add#(TLog#(TDiv#(_v110, 8)), _v112, _v115), Add#(_v125, _v109, _v112), Add#(1, _v106, _v109), Add#(_v137, _v140, _v100), Bits#(cstm_type, _v140), Add#(_v137, _v100, _v103), Add#(_v137, _v103, _v106), Add#(_v125, _v121, _v124))} {Bits#(TLM2Defines::TLMBurstMode, 2)} {Bits#(TLM2Defines::TLMCommand, 2)} {Bits#(TLM2Defines::TLMMode, 2)} {Bits#(TLM2Defines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type), _v100)   provisos (Add#(data_size, _v106, _v104), Add#(id_size, _v107, _v106), Bits#(cstm_type, _v107), Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(2, _v108, _v101), Add#(2, _v109, _v108), Add#(addr_size, _v110, _v109), Add#(data_size, _v111, _v110), Add#(uint_size, _v112, _v111), Add#(TDiv#(data_size, 8), _v113, _v112), Add#(2, _v114, _v113), Add#(TLog#(TDiv#(data_size, 8)), _v115, _v114), Add#(uint_size, _v116, _v115), Add#(1, _v117, _v116), Add#(id_size, _v118, _v117), Add#(id_size, _v106, _v118))} {Bits#(TLM2Defines::TLMResponse#(_v119, addr_size, _v104, _v110, cstm_type), _v118)   provisos (Add#(2, _v115, _v118), Add#(_v104, _v112, _v115), Add#(2, _v109, _v112), Add#(_v110, _v106, _v109), Add#(_v119, _v122, _v100), Bits#(cstm_type, _v122), Add#(_v119, _v100, _v103), Add#(_v119, _v103, _v106))} {Bits#(TLM2Defines::TLMStatus, 2)} {Bits#(TLM3Api::RecvState, 3)} {Bits#(TLM3Api::SendState, 3)} {Bits#(TLM3Api::TLMRequestHeader, 51)} {Bits#(TLM3Api::TLMRequestParams, 36)} {Bits#(TLM3Api::TLMResponseHeader, 32)} {Bits#(TLM3Api::TLMResponseParams, 17)} {Bits#(TLM3Defines::RequestData#(_v110, addr_size, _v101, length_size, _v104), _v109)   provisos (Add#(_v101, _v106, _v109), Add#(_v104, _v103, _v106), Add#(_v107, _v100, _v103), Add#(_v110, 1, _v100), Add#(1, TDiv#(_v101, 8), _v107))} {Bits#(TLM3Defines::RequestDescriptor#(_v140, _v107, _v116, _v119, _v122), _v163)   provisos (Add#(2, _v160, _v163), Add#(2, _v157, _v160), Add#(_v107, _v154, _v157), Add#(_v116, _v145, _v148), Add#(_v119, _v142, _v145), Add#(_v122, _v139, _v142), Add#(_v125, _v136, _v139), Add#(2, _v133, _v136), Add#(3, _v130, _v133), Add#(4, _v127, _v130), Add#(2, _v124, _v127), Add#(_v140, 10, _v124), Add#(4, _v148, _v151), Add#(_v122, _v151, _v154), Add#(1, TDiv#(_v116, 8), _v125))} {Bits#(TLM3Defines::TLMAccess, 1)} {Bits#(TLM3Defines::TLMAllocate, 1)} {Bits#(TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size), _v100)   provisos (Add#(1, TDiv#(data_size, 8), _v100))} {Bits#(TLM3Defines::TLMBSize, 3)} {Bits#(TLM3Defines::TLMBuffer, 1)} {Bits#(TLM3Defines::TLMBurstMode, 2)} {Bits#(TLM3Defines::TLMCache, 1)} {Bits#(TLM3Defines::TLMCommand, 2)} {Bits#(TLM3Defines::TLMErrorCode, 3)} {Bits#(TLM3Defines::TLMFamily, 3)} {Bits#(TLM3Defines::TLMLock, 2)} {Bits#(TLM3Defines::TLMMark, 2)} {Bits#(TLM3Defines::TLMMode, 2)} {Bits#(TLM3Defines::TLMModify, 1)} {Bits#(TLM3Defines::TLMPrivilege, 1)} {Bits#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size), _v100)   provisos (Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))), _v104), Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), _v101))} {Bits#(TLM3Defines::TLMResponse#(_v116, addr_size, _v104, length_size, _v110), _v115)   provisos (Add#(2, _v112, _v115), Add#(_v104, _v109, _v112), Add#(2, _v106, _v109), Add#(_v110, _v103, _v106), Add#(4, _v100, _v103), Add#(_v116, 1, _v100))} {Bits#(TLM3Defines::TLMSecurity, 1)} {Bits#(TLM3Defines::TLMStatus, 2)} {Bits#(TLM3Reduce::MD, 2)} {Bits#(TLM3Stream::TLMTransfer#(_v110, _v104, _v101, length_size, _v107), _v115)   provisos (Add#(_v101, _v112, _v115), Add#(_v104, _v109, _v112), Add#(_v107, _v106, _v109), Add#(_v110, _v103, _v106), Add#(TDiv#(_v101, 8), 1, _v100), Add#(TDiv#(_v101, 8), _v100, _v103))} {Bits#(TLMDefines::RequestData#(_v104, addr_size, _v101, uint_size, cstm_type), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(_v104, _v107, _v100), Bits#(cstm_type, _v107))} {Bits#(TLMDefines::RequestDescriptor#(_v137, _v107, _v110, _v125, cstm_type), _v136)   provisos (Add#(2, _v133, _v136), Add#(2, _v130, _v133), Add#(_v107, _v127, _v130), Add#(_v110, _v124, _v127), Add#(TDiv#(_v110, 8), _v118, _v121), Add#(2, _v115, _v118), Add#(TLog#(TDiv#(_v110, 8)), _v112, _v115), Add#(_v125, _v109, _v112), Add#(1, _v106, _v109), Add#(_v137, _v140, _v100), Bits#(cstm_type, _v140), Add#(_v137, _v100, _v103), Add#(_v137, _v103, _v106), Add#(_v125, _v121, _v124))} {Bits#(TLMDefines::TLMBurstMode, 2)} {Bits#(TLMDefines::TLMCommand, 2)} {Bits#(TLMDefines::TLMMode, 2)} {Bits#(TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type), _v100)   provisos (Add#(data_size, _v106, _v104), Add#(id_size, _v107, _v106), Bits#(cstm_type, _v107), Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(2, _v108, _v101), Add#(2, _v109, _v108), Add#(addr_size, _v110, _v109), Add#(data_size, _v111, _v110), Add#(uint_size, _v112, _v111), Add#(TDiv#(data_size, 8), _v113, _v112), Add#(2, _v114, _v113), Add#(TLog#(TDiv#(data_size, 8)), _v115, _v114), Add#(uint_size, _v116, _v115), Add#(1, _v117, _v116), Add#(id_size, _v118, _v117), Add#(id_size, _v106, _v118))} {Bits#(TLMDefines::TLMResponse#(_v119, addr_size, _v104, _v110, cstm_type), _v118)   provisos (Add#(2, _v115, _v118), Add#(_v104, _v112, _v115), Add#(2, _v109, _v112), Add#(_v110, _v106, _v109), Add#(_v119, _v122, _v100), Bits#(cstm_type, _v122), Add#(_v119, _v100, _v103), Add#(_v119, _v103, _v106))} {Bits#(TLMDefines::TLMStatus, 2)} {Bits#(TRAM::TRAMreq#(tg, adr, dta), _v100)   provisos (Add#(_v106, _v107, _v104), Bits#(adr, _v106), Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Bits#(dta, _v107), Bits#(tg, _v108), Add#(_v108, _v106, _v101))} {Bits#(TV_Info::Info_CPU_to_Verifier, 608)} {Bits#(TV_Info::Trace_Data, 427)} {Bits#(TV_Info::Trace_Op, 5)} {Bits#(TagController::AddrFrame, 9)} {Bits#(TagController::MemReqType, 1)} {Bits#(TagController::TagReqId, 14)} {Bits#(Tuple2#(a, b), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(b, _v104), Bits#(a, _v101))} {Bits#(UInt#(n), n)} {Bits#(UIntRange::UIntRange#(lo, hi), TLog#(TAdd#(hi, 1)))} {Bits#(Vector::Ascii#(n), _v101)   provisos (Mul#(n, 8, _v101))} {Bits#(Vector::Vector#(n, a), nsa)   provisos (Mul#(n, sa, nsa), Bits#(a, sa))} {Bits#(Video::CSAdderIn, 103)} {Bits#(Video::CSMultIn, 28)} {Bits#(Video::CrYCb444, 24)} {Bits#(Video::CrYCbY422, 16)} {Bits#(Video::PixelData#(d), _v106)   provisos (Add#(1, _v110, _v100), Bits#(d, _v110), Add#(1, _v103, _v106), Add#(1, _v100, _v103))} {Bits#(Video::RGB888, 24)} {Bits#(VnD::VnD#(a), _v100)   provisos (Add#(1, _v104, _v100), Bits#(a, _v104))} {Bits#(XilinxCells::BUFRParams, _v100)   provisos (Bits#(String, _v104), Add#(_v104, _v104, _v100))} {Bits#(XilinxCells::ClockGenerator6Params, _v211)   provisos (Add#(_v206, _v103, _v106), Add#(_v212, 1, _v100), Bits#(Real, _v212), Add#(_v212, _v100, _v103), Add#(_v212, _v109, _v112), Add#(_v212, _v112, _v115), Add#(_v212, _v121, _v124), Add#(_v212, _v124, _v127), Add#(_v212, _v133, _v136), Add#(_v212, _v136, _v139), Add#(_v212, _v148, _v151), Add#(_v212, _v151, _v154), Add#(_v212, _v163, _v166), Add#(_v212, _v166, _v169), Add#(_v212, _v178, _v181), Add#(_v212, _v181, _v184), Add#(_v212, _v184, _v187), Add#(_v212, _v196, _v199), Add#(_v212, _v199, _v202), Add#(_v212, _v205, _v208), Add#(_v206, _v202, _v205), Add#(_v206, _v193, _v196), Add#(_v206, _v169, _v172), Add#(_v206, _v154, _v157), Add#(_v206, _v139, _v142), Add#(_v206, _v127, _v130), Add#(_v206, _v115, _v118), Bits#(Integer, _v206), Add#(1, _v208, _v211), Add#(1, _v190, _v193), Add#(1, _v187, _v190), Add#(1, _v175, _v178), Add#(1, _v172, _v175), Add#(1, _v160, _v163), Add#(1, _v157, _v160), Add#(1, _v145, _v148), Add#(1, _v142, _v145), Add#(1, _v130, _v133), Add#(1, _v118, _v121), Add#(1, _v106, _v109))} {Bits#(XilinxCells::ClockGenerator7Params, _v211)   provisos (Add#(_v206, _v103, _v106), Add#(_v212, 1, _v100), Bits#(Real, _v212), Add#(_v212, _v100, _v103), Add#(_v212, _v109, _v112), Add#(_v212, _v112, _v115), Add#(_v212, _v121, _v124), Add#(_v212, _v124, _v127), Add#(_v212, _v133, _v136), Add#(_v212, _v136, _v139), Add#(_v212, _v148, _v151), Add#(_v212, _v151, _v154), Add#(_v212, _v163, _v166), Add#(_v212, _v166, _v169), Add#(_v212, _v178, _v181), Add#(_v212, _v181, _v184), Add#(_v212, _v184, _v187), Add#(_v212, _v196, _v199), Add#(_v212, _v199, _v202), Add#(_v212, _v205, _v208), Add#(_v206, _v202, _v205), Add#(_v206, _v193, _v196), Add#(_v206, _v169, _v172), Add#(_v206, _v154, _v157), Add#(_v206, _v139, _v142), Add#(_v206, _v127, _v130), Add#(_v206, _v115, _v118), Bits#(Integer, _v206), Add#(1, _v208, _v211), Add#(1, _v190, _v193), Add#(1, _v187, _v190), Add#(1, _v175, _v178), Add#(1, _v172, _v175), Add#(1, _v160, _v163), Add#(1, _v157, _v160), Add#(1, _v145, _v148), Add#(1, _v142, _v145), Add#(1, _v130, _v133), Add#(1, _v118, _v121), Add#(1, _v106, _v109))} {Bits#(XilinxCells::ClockGeneratorParams, _v184)   provisos (Add#(_v176, _v106, _v109), Add#(_v182, 2, _v103), Bits#(Real, _v182), Add#(_v182, _v103, _v106), Add#(_v182, _v112, _v115), Add#(_v182, _v115, _v118), Add#(_v182, _v124, _v127), Add#(_v182, _v127, _v130), Add#(_v182, _v136, _v139), Add#(_v182, _v139, _v142), Add#(_v182, _v148, _v151), Add#(_v182, _v151, _v154), Add#(_v182, _v160, _v163), Add#(_v182, _v163, _v166), Add#(_v182, _v178, _v181), Add#(_v176, _v175, _v178), Add#(_v176, _v172, _v175), Add#(_v176, _v169, _v172), Add#(_v176, _v166, _v169), Add#(_v176, _v154, _v157), Add#(_v176, _v142, _v145), Add#(_v176, _v130, _v133), Add#(_v176, _v118, _v121), Bits#(Integer, _v176), Add#(1, _v181, _v184), Add#(1, _v157, _v160), Add#(1, _v145, _v148), Add#(1, _v133, _v136), Add#(1, _v121, _v124), Add#(1, _v109, _v112))} {Bits#(XilinxCells::ClockGeneratorUParams, _v211)   provisos (Add#(_v206, _v103, _v106), Add#(_v212, 1, _v100), Bits#(Real, _v212), Add#(_v212, _v100, _v103), Add#(_v212, _v109, _v112), Add#(_v212, _v112, _v115), Add#(_v212, _v121, _v124), Add#(_v212, _v124, _v127), Add#(_v212, _v133, _v136), Add#(_v212, _v136, _v139), Add#(_v212, _v148, _v151), Add#(_v212, _v151, _v154), Add#(_v212, _v163, _v166), Add#(_v212, _v166, _v169), Add#(_v212, _v178, _v181), Add#(_v212, _v181, _v184), Add#(_v212, _v184, _v187), Add#(_v212, _v196, _v199), Add#(_v212, _v199, _v202), Add#(_v212, _v205, _v208), Add#(_v206, _v202, _v205), Add#(_v206, _v193, _v196), Add#(_v206, _v169, _v172), Add#(_v206, _v154, _v157), Add#(_v206, _v139, _v142), Add#(_v206, _v127, _v130), Add#(_v206, _v115, _v118), Bits#(Integer, _v206), Add#(1, _v208, _v211), Add#(1, _v190, _v193), Add#(1, _v187, _v190), Add#(1, _v175, _v178), Add#(1, _v172, _v175), Add#(1, _v160, _v163), Add#(1, _v157, _v160), Add#(1, _v145, _v148), Add#(1, _v142, _v145), Add#(1, _v130, _v133), Add#(1, _v118, _v121), Add#(1, _v106, _v109))} {Bits#(XilinxCells::ClockIODELAYParams, _v115)   provisos (Add#(_v116, _v119, _v100), Bits#(String, _v119), Add#(_v119, _v106, _v109), Add#(_v119, _v109, _v112), Add#(_v119, _v112, _v115), Bits#(Integer, _v116), Add#(_v116, _v100, _v103), Add#(_v116, _v103, _v106))} {Bits#(XilinxCells::DCMParams, _v145)   provisos (Add#(_v113, _v130, _v133), Add#(16, _v103, _v106), Add#(_v143, _v100, _v103), Bits#(Real, _v113), Add#(_v113, _v142, _v145), Bits#(String, _v149), Add#(_v149, _v149, _v100), Add#(_v149, _v106, _v109), Add#(_v149, _v109, _v112), Add#(_v149, _v112, _v115), Add#(_v149, _v115, _v118), Add#(_v149, _v118, _v121), Add#(_v149, _v121, _v124), Add#(_v149, _v124, _v127), Add#(_v149, _v127, _v130), Add#(_v149, _v133, _v136), Bits#(Integer, _v143), Add#(_v143, _v136, _v139), Add#(_v143, _v139, _v142))} {Bits#(XilinxCells::IBUFDSParams, _v115)   provisos (Bits#(String, _v119), Add#(_v119, _v119, _v100), Add#(_v119, _v100, _v103), Add#(_v119, _v103, _v106), Add#(_v119, _v106, _v109), Add#(_v119, _v109, _v112), Add#(_v119, _v112, _v115))} {Bits#(XilinxCells::IBUFDS_GTE2Params, _v103)   provisos (Add#(_v104, 2, _v100), Bits#(String, _v104), Add#(_v104, _v100, _v103))} {Bits#(XilinxCells::IBUFDS_GTXE1Params, _v103)   provisos (Add#(_v104, 10, _v100), Bits#(String, _v104), Add#(_v104, _v100, _v103))} {Bits#(XilinxCells::IBUFGDSParams, _v109)   provisos (Bits#(String, _v113), Add#(_v113, _v113, _v100), Add#(_v113, _v100, _v103), Add#(_v113, _v103, _v106), Add#(_v113, _v106, _v109))} {Bits#(XilinxCells::IBUFGParams, _v106)   provisos (Bits#(String, _v110), Add#(_v110, _v110, _v100), Add#(_v110, _v100, _v103), Add#(_v110, _v103, _v106))} {Bits#(XilinxCells::IBUFParams, _v109)   provisos (Bits#(String, _v113), Add#(_v113, _v113, _v100), Add#(_v113, _v100, _v103), Add#(_v113, _v103, _v106), Add#(_v113, _v106, _v109))} {Bits#(XilinxCells::IDDRParams#(a), _v106)   provisos (Add#(_v107, _v110, _v100), Bits#(String, _v110), Add#(_v110, _v103, _v106), Bits#(a, _v107), Add#(_v107, _v100, _v103))} {Bits#(XilinxCells::IODELAYParams, _v115)   provisos (Add#(_v116, _v119, _v100), Bits#(String, _v119), Add#(_v119, _v106, _v109), Add#(_v119, _v109, _v112), Add#(_v119, _v112, _v115), Bits#(Integer, _v116), Add#(_v116, _v100, _v103), Add#(_v116, _v103, _v106))} {Bits#(XilinxCells::MMCMParams, _v220)   provisos (Add#(_v137, _v181, _v184), Add#(_v209, _v109, _v112), Add#(_v221, 1, _v100), Bits#(Real, _v221), Add#(_v221, _v100, _v103), Add#(_v221, _v103, _v106), Add#(_v221, _v106, _v109), Add#(_v221, _v112, _v115), Add#(_v221, _v115, _v118), Add#(_v221, _v121, _v124), Add#(_v221, _v124, _v127), Add#(_v221, _v130, _v133), Add#(_v221, _v133, _v136), Add#(_v221, _v139, _v142), Add#(_v221, _v142, _v145), Add#(_v221, _v148, _v151), Add#(_v221, _v151, _v154), Add#(_v221, _v157, _v160), Add#(_v221, _v160, _v163), Add#(_v221, _v163, _v166), Add#(_v221, _v169, _v172), Add#(_v221, _v172, _v175), Add#(_v221, _v175, _v178), Add#(_v221, _v178, _v181), Bits#(String, _v137), Add#(_v137, _v184, _v187), Add#(_v137, _v187, _v190), Add#(_v137, _v190, _v193), Add#(_v137, _v193, _v196), Add#(_v137, _v196, _v199), Add#(_v137, _v199, _v202), Add#(_v137, _v202, _v205), Add#(_v137, _v205, _v208), Add#(_v137, _v208, _v211), Add#(_v137, _v211, _v214), Add#(_v137, _v214, _v217), Add#(_v137, _v217, _v220), Bits#(Integer, _v209), Add#(_v209, _v118, _v121), Add#(_v209, _v127, _v130), Add#(_v209, _v136, _v139), Add#(_v209, _v145, _v148), Add#(_v209, _v154, _v157), Add#(_v209, _v166, _v169))} {Bits#(XilinxCells::OBUFDSParams, _v103)   provisos (Bits#(String, _v107), Add#(_v107, _v107, _v100), Add#(_v107, _v100, _v103))} {Bits#(XilinxCells::ODDRParams#(a), _v103)   provisos (Add#(_v104, _v107, _v100), Bits#(a, _v104), Bits#(String, _v107), Add#(_v107, _v100, _v103))} {Bits#(XilinxCells::PLLParams, _v205)   provisos (Add#(_v194, _v109, _v112), Add#(_v203, _v100, _v103), Bits#(Real, _v203), Add#(_v203, _v115, _v118), Add#(_v203, _v118, _v121), Add#(_v203, _v124, _v127), Add#(_v203, _v127, _v130), Add#(_v203, _v133, _v136), Add#(_v203, _v136, _v139), Add#(_v203, _v142, _v145), Add#(_v203, _v145, _v148), Add#(_v203, _v151, _v154), Add#(_v203, _v154, _v157), Add#(_v203, _v160, _v163), Add#(_v203, _v163, _v166), Add#(_v203, _v169, _v172), Add#(_v203, _v172, _v175), Add#(_v203, _v175, _v178), Bits#(String, _v209), Add#(_v209, _v209, _v100), Add#(_v209, _v103, _v106), Add#(_v209, _v106, _v109), Add#(_v209, _v112, _v115), Add#(_v209, _v181, _v184), Add#(_v209, _v184, _v187), Add#(_v209, _v187, _v190), Add#(_v209, _v190, _v193), Add#(_v209, _v193, _v196), Add#(_v209, _v196, _v199), Add#(_v209, _v199, _v202), Add#(_v209, _v202, _v205), Bits#(Integer, _v194), Add#(_v194, _v121, _v124), Add#(_v194, _v130, _v133), Add#(_v194, _v139, _v142), Add#(_v194, _v148, _v151), Add#(_v194, _v157, _v160), Add#(_v194, _v166, _v169), Add#(_v194, _v178, _v181))} {Bits#(XilinxCells::SRL16EParams, 16)} {Bits#(XilinxCells::SRLC32EParams, 32)} {Bits#(XilinxClocks::State, 3)} {Bits#(XilinxClocks::XilinxClockParams, _v253)   provisos (Add#(2, _v250, _v253), Add#(1, _v217, _v220), Add#(_v173, _v178, _v181), Add#(_v245, _v106, _v109), Bits#(Real, _v257), Add#(_v257, _v257, _v100), Add#(_v257, _v100, _v103), Add#(_v257, _v103, _v106), Add#(_v257, _v109, _v112), Add#(_v257, _v112, _v115), Add#(_v257, _v118, _v121), Add#(_v257, _v121, _v124), Add#(_v257, _v127, _v130), Add#(_v257, _v130, _v133), Add#(_v257, _v136, _v139), Add#(_v257, _v139, _v142), Add#(_v257, _v145, _v148), Add#(_v257, _v148, _v151), Add#(_v257, _v154, _v157), Add#(_v257, _v157, _v160), Add#(_v257, _v160, _v163), Add#(_v257, _v166, _v169), Add#(_v257, _v169, _v172), Add#(_v257, _v172, _v175), Add#(_v257, _v175, _v178), Bits#(String, _v173), Add#(_v173, _v181, _v184), Add#(_v173, _v184, _v187), Add#(_v173, _v187, _v190), Add#(_v173, _v190, _v193), Add#(_v173, _v193, _v196), Add#(_v173, _v196, _v199), Add#(_v173, _v199, _v202), Add#(_v173, _v202, _v205), Add#(_v173, _v205, _v208), Add#(_v173, _v208, _v211), Add#(_v173, _v211, _v214), Add#(_v173, _v214, _v217), Add#(_v245, _v163, _v166), Add#(_v245, _v151, _v154), Add#(_v245, _v142, _v145), Add#(_v245, _v133, _v136), Add#(_v245, _v124, _v127), Add#(_v245, _v115, _v118), Bits#(Integer, _v245), Add#(1, _v247, _v250), Add#(1, _v244, _v247), Add#(1, _v241, _v244), Add#(1, _v238, _v241), Add#(1, _v235, _v238), Add#(1, _v232, _v235), Add#(1, _v229, _v232), Add#(1, _v226, _v229), Add#(1, _v223, _v226), Add#(1, _v220, _v223))} {Bits#(XilinxClocks::XilinxClockRequest, 22)} {Bits#(XilinxClocks::XilinxEType, 2)} {Bits#(ZBus::BState, 2)} {Bits#(ZBusUtil::ZBit#(t), _v101)   provisos (Bits#(t, _v101))} {Bits#(void, 0)}}} {position {%/Libraries/Prelude.bs 349 15 {Library Prelude}}}
Typeclass {Eq#(type a)} {members {{{function Bool f(a x1, a x2)} ==} {{function Bool f(a x1, a x2)} /=}}} {instances {Eq#(AXI4_Common_Types::AXI4_Burst) Eq#(AXI4_Common_Types::AXI4_Lock) Eq#(AXI4_Common_Types::AXI4_Prot_0) Eq#(AXI4_Common_Types::AXI4_Prot_1) Eq#(AXI4_Common_Types::AXI4_Prot_2) Eq#(AXI4_Common_Types::AXI4_Resp) Eq#(AXI4_Common_Types::AXI4_Size) Eq#(AXI4_Utils::ReadSplitOption) Eq#(AXI4_Utils::SerialiserState) Eq#(AhbDefines::AhbBurst) {Eq#(AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(AhbDefines::AhbMastCtrl#(id_size, addr_size, data_size, length_size, user_size))} Eq#(AhbDefines::AhbProt) {Eq#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size))} Eq#(AhbDefines::AhbResp) {Eq#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(AhbDefines::AhbTbRequest#(id_size, addr_size, data_size, length_size, user_size))} Eq#(AhbDefines::AhbTransfer) Eq#(AhbDefines::AhbWrite) {Eq#(AhbDefines::AhbXtorRequest#(id_size, addr_size, data_size, length_size, user_size))} Eq#(AhbMaster::EBTMode) Eq#(AhbPC::AhbPCPrms) Eq#(AhbPC::AhbPropTypes) Eq#(AhbPC::FVPropType) Eq#(AlteraCells::AlteraClockGenParams) Eq#(AlteraCells::IDDRParams) Eq#(AlteraCells::LVDSRX) Eq#(AlteraCells::LVDSTX) Eq#(AlteraCells::ODDRParams) {Eq#(ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size))} Eq#(ApbDefines::ApbProt) {Eq#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size))} Eq#(ApbDefines::ApbWrite) Eq#(ApbSlave::ApbState) {Eq#(Array#(a))   provisos (Eq#(a))} {Eq#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} Eq#(Axi4Defines::Axi4Cache) Eq#(Axi4Defines::Axi4Lock) {Eq#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} Eq#(Axi4LPC::Axi4LPCParams) Eq#(Axi4PC::Axi4PCParams) {Eq#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} Eq#(AxiDefines::AxiBurst) Eq#(AxiDefines::AxiCache) Eq#(AxiDefines::AxiProt) {Eq#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))} Eq#(AxiDefines::AxiResp) {Eq#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))} Eq#(AxiPC::AxiPCParams) {Eq#(BRAM::BRAMRequest#(addr, data))   provisos (Eq#(data), Eq#(addr))} {Eq#(BRAM::BRAMRequestBE#(addr, data, n))   provisos (Eq#(data), Eq#(addr))} Eq#(BRAM::LoadFormat) {Eq#(BRAM_Compat::BRAMRequest#(addr, data))   provisos (Eq#(data), Eq#(addr))} {Eq#(BRAM_Compat::BRAMRequestBE#(addr, data, n))   provisos (Eq#(data), Eq#(addr))} {Eq#(Bag::Entry#(keyType, datType))   provisos (Eq#(datType), Eq#(keyType))} Eq#(Bit#(n)) Eq#(Bool) Eq#(BufferMode) {Eq#(BusSwitch::BusSwitchPath#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(CB::TokenRR#(a, ln))   provisos (Eq#(a))} {Eq#(CB::TokenRange#(a, ln))   provisos (Eq#(a))} {Eq#(CB::TokenRequest#(a, ln))   provisos (Eq#(a))} {Eq#(CBus::CRAddr#(sa, sd))} Eq#(CHERICC_Fat::Bounds) Eq#(CHERICC_Fat::BoundsEmbeddedExp) Eq#(CHERICC_Fat::BoundsExp0) Eq#(CHERICC_Fat::CapPipe) Eq#(CHERICC_Fat::CapReg) Eq#(CHERICC_Fat::CapabilityInMemory) Eq#(CHERICC_Fat::Format) Eq#(CHERICC_Fat::HPerms) Eq#(CHERICC_Fat::MetaInfo) Eq#(CHERICC_Fat::Perms) Eq#(CHERICap::HardPerms) Eq#(CHERICap::Kind#(ot)) {Eq#(CHERICap::SetBoundsReturn#(t, n))   provisos (Eq#(t))} Eq#(CPU::CPU_State) Eq#(CPU_Globals::Bypass_State) Eq#(CPU_Globals::CF_Op) Eq#(CPU_Globals::Control) Eq#(CPU_Globals::Op_Stage2) Eq#(CPU_Globals::Stage_OStatus) Eq#(CSR_RegFile_MSU::RF_State) Eq#(CacheCorderer::ReqRec) Eq#(CacheCorderer::TransRecord) {Eq#(CacheCore::CacheAddress#(keyBits, tagBits))} Eq#(CacheCore::CacheCommit) Eq#(CacheCore::CacheState) {Eq#(CacheCore::DataKey#(ways, keyBits))} Eq#(CacheCore::LookupCommand) Eq#(CacheCore::OrderBehaviour) Eq#(CacheCore::ReqIdWithSC) {Eq#(CacheCore::RequestRecord#(ways, keyBits, tagBits))} Eq#(CacheCore::ResponseBehaviour) Eq#(CacheCore::TagLine#(tagBits)) {Eq#(CacheCore::TagUpdate#(ways, keyBits, tagBits))} Eq#(CacheCore::WriteMissBehaviour) Eq#(Char) Eq#(ClkCtrlServer::ClkCtrlReq) Eq#(ClkCtrlServer::ClkCtrlResp) Eq#(Clock) {Eq#(Complex::Complex#(any_t))   provisos (Eq#(any_t))} Eq#(DDR2Types::DDR2ReqCmd) Eq#(DDR2Types::DDR2ReqData) {Eq#(DDR3::DDR3Request#(addrwidth, datawidth, bewidth))} Eq#(DDR3::DDR3Response#(datawidth)) {Eq#(DDR4::DDR4Request#(addrwidth, datawidth, bewidth))} Eq#(DDR4::DDR4Response#(datawidth)) {Eq#(DM_CPU_Req_Rsp::DM_CPU_Req#(a, d))} Eq#(DM_CPU_Req_Rsp::DM_CPU_Rsp#(d)) Eq#(DM_Common::DCSR_Cause) Eq#(DM_Common::DM_abstractcs_cmderr) Eq#(DM_Common::DM_command_access_reg_size) Eq#(DM_Common::DM_command_cmdtype) Eq#(DM_Common::DM_sbaccess) Eq#(DM_Common::DM_sberror) Eq#(DM_System_Bus::SB_State) Eq#(EX_ALU_functions::Output_Select) {Eq#(Either#(a, b))   provisos (Eq#(b), Eq#(a))} Eq#(FBox_Core::FBoxResult) Eq#(FBox_Core::FBoxState) Eq#(FPR_RegFile::RF_State) Eq#(FPU::FloatU) Eq#(File) {Eq#(FixedPoint::FixedPoint#(isize, fsize))} Eq#(FixedPoint::RoundMode) {Eq#(FloatingPoint::CommonState#(e, m))} Eq#(FloatingPoint::Disorder) Eq#(FloatingPoint::Exception) {Eq#(FloatingPoint::FloatingPoint#(e, m))} Eq#(FloatingPoint::RoundMode) Eq#(GPR_RegFile::RF_State) Eq#(Gray::Gray#(n)) {Eq#(HList::HCons#(e, l))   provisos (Eq#(l), Eq#(e))} Eq#(HList::HNil) Eq#(I2C::I2CRequest) Eq#(I2C::I2CResponse) Eq#(I2C::State) Eq#(IOMode) Eq#(ISA_Decls::Access_RWX) Eq#(ISA_Decls::FpuOp) Eq#(ISA_Decls::ISize) Eq#(ISA_Decls::MTVEC_Mode) Eq#(ISA_Decls::Mem_Data_Size) Eq#(ISA_Decls::RV_Version) Eq#(Int#(n)) Eq#(IntMulDiv::DivState) Eq#(IntMulDiv::MulState) Eq#(Integer) Eq#(JtagTap::DMI) Eq#(JtagTap::DTMCS) Eq#(JtagTap::JtagState) Eq#(LBus::HandlerState) {Eq#(LBus::LbAddr#(sa, sd))} Eq#(LBus::LbRWop) {Eq#(LBus::LbReq#(sa, sd))} Eq#(LBus::LbState) Eq#(LBus::ResetType) {Eq#(List#(a))   provisos (Eq#(a))} {Eq#(ListN::ListN#(n, a))   provisos (Eq#(a))} {Eq#(List_$Cons#(a))   provisos (Eq#(a))} Eq#(MIMO::MIMOConfiguration) Eq#(ML507_DDR2::DDR2LLReq) Eq#(ML507_DDR2::DDR2LLReqCmd) Eq#(ML507_DDR2::DDR2LLReqData) Eq#(MMU_Cache::CTagState) Eq#(MMU_Cache::Fabric_Write_Fields) Eq#(MMU_Cache::Module_State) Eq#(MMU_Cache::Requestor) Eq#(MMU_Cache_Common::CacheOp) Eq#(MMU_Cache_Common::Meta_State) Eq#(MMU_Cache_Common::VM_Xlate_Outcome) {Eq#(Map::MapKeyIndex#(ky, ix))   provisos (Eq#(ix), Eq#(ky))} {Eq#(Map::MapKeyIndexValue#(ky, ix, vl))   provisos (Eq#(vl), Eq#(ix), Eq#(ky))} {Eq#(Map::MapKeyValue#(ky, vl))   provisos (Eq#(vl), Eq#(ky))} {Eq#(Maybe#(a))   provisos (Eq#(a))} Eq#(MemTypesCHERI::BytesPerFlit) Eq#(MemTypesCHERI::CacheInst) Eq#(MemTypesCHERI::CacheOperation) Eq#(MemTypesCHERI::CheriCapAddress) Eq#(MemTypesCHERI::Data#(width)) Eq#(MemTypesCHERI::DataMinusCapTags#(width)) Eq#(MemTypesCHERI::Error) {Eq#(MemTypesCHERI::MemoryRequest#(addr_t, masterid_t, transactionid_t, data_width))   provisos (Eq#(transactionid_t), Eq#(masterid_t), Eq#(addr_t))} {Eq#(MemTypesCHERI::MemoryRequest_$operation#(addr_t, masterid_t, transactionid_t, data_width))} {Eq#(MemTypesCHERI::MemoryRequest_$operation_$Read#(addr_t, masterid_t, transactionid_t, data_width))} {Eq#(MemTypesCHERI::MemoryRequest_$operation_$Write#(addr_t, masterid_t, transactionid_t, data_width))} {Eq#(MemTypesCHERI::PhyBitAddress#(width, bytePerLine))} {Eq#(MemTypesCHERI::PhyByteAddress#(width, bytePerLine))} Eq#(MemTypesCHERI::ReqId) Eq#(MemTypesCHERI::WhichCache) {Eq#(Memory::MemoryRequest#(a, d))} Eq#(Memory::MemoryResponse#(d)) Eq#(MultiLevelTagLookup::CheriTagRequest) {Eq#(MultiLevelTagLookup::CheriTagRequest_$operation)} Eq#(MultiLevelTagLookup::CheriTagResponse) {Eq#(MultiLevelTagLookup::CheriTagResponse_$tags)} Eq#(MultiLevelTagLookup::CheriTagWrite) Eq#(MultiLevelTagLookup::State) Eq#(Near_Mem_Caches::State) Eq#(Near_Mem_IO_AXI4::Module_State) {Eq#(NumberTypes::BuffIndex#(sz, ln))} Eq#(NumberTypes::WrapNumber#(sz)) Eq#(OInt::OInt#(n)) Eq#(OVLAssertions::OVLActionOnNewStart) Eq#(OVLAssertions::OVLCoverageLevel) Eq#(OVLAssertions::OVLEdgeType) Eq#(OVLAssertions::OVLInactive) Eq#(OVLAssertions::OVLNecessaryCondition) Eq#(OVLAssertions::OVLPropertyType) Eq#(OVLAssertions::OVLSeverityLevel) Eq#(Ordering) Eq#(PCIE::BARAperture) Eq#(PCIE::BARID) Eq#(PCIE::ErrorCode) Eq#(PCIE::FlowControlInfoSelect) Eq#(PCIE::MSIErrorCode) Eq#(PCIE::MSIHotPlugCode) Eq#(PCIE::MSIInterruptCode) Eq#(PCIE::MSIPowerMgtCode) Eq#(PCIE::PCIEParams) Eq#(PCIE::PciId) Eq#(PCIE::RequestType) Eq#(PCIE::TLPAddressType) Eq#(PCIE::TLPAttrIDBasedOrdering) Eq#(PCIE::TLPAttrNoSnoop) Eq#(PCIE::TLPAttrRelaxedOrdering) Eq#(PCIE::TLPByteCountModified) Eq#(PCIE::TLPCompletionHeader) Eq#(PCIE::TLPCompletionStatus) Eq#(PCIE::TLPData#(bytes)) Eq#(PCIE::TLPDigest) Eq#(PCIE::TLPMSIHeader) Eq#(PCIE::TLPMemory4DWHeader) Eq#(PCIE::TLPMemoryIO3DWHeader) Eq#(PCIE::TLPMessageCode) Eq#(PCIE::TLPPacketFormat) Eq#(PCIE::TLPPacketType) Eq#(PCIE::TLPPoison) Eq#(PCIE::TLPTrafficClass) Eq#(PCIE::TargetFunction) Eq#(Printf::RealFormat) {Eq#(RAM::RAMreq#(adr, dta))   provisos (Eq#(adr), Eq#(dta))} Eq#(RISCV_MBox::State) Eq#(RS232::Parity) Eq#(RS232::RecvState) Eq#(RS232::StopBits) Eq#(RS232::XmitState) Eq#(Real) Eq#(Reserved::Reserved#(n)) Eq#(Reserved::ReservedOne#(n)) Eq#(Reserved::ReservedZero#(n)) Eq#(Reset) Eq#(SVA::AssertRes) Eq#(SVA::PropRes) Eq#(SVA::SeqRes) Eq#(SaturationMode) Eq#(StmtFSM::ActionType) Eq#(StmtFSM::Freedom) Eq#(StmtFSM::TSDType) Eq#(StmtFSM::TwoStateDescriptor) {Eq#(StmtFSM::TwoStateDescriptor_$TSD)} Eq#(String) {Eq#(TLM2Defines::RequestData#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Eq#(cstm_type))} {Eq#(TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Eq#(cstm_type))} Eq#(TLM2Defines::TLMBurstMode) Eq#(TLM2Defines::TLMCommand) Eq#(TLM2Defines::TLMMode) {Eq#(TLM2Defines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Eq#(cstm_type))} {Eq#(TLM2Defines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Eq#(cstm_type))} Eq#(TLM2Defines::TLMStatus) Eq#(TLM3Api::RecvState) Eq#(TLM3Api::SendState) Eq#(TLM3Api::TLMRequestHeader) Eq#(TLM3Api::TLMRequestParams) Eq#(TLM3Api::TLMResponseHeader) Eq#(TLM3Api::TLMResponseParams) {Eq#(TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size))} Eq#(TLM3Defines::TLMAccess) Eq#(TLM3Defines::TLMAllocate) {Eq#(TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size))} Eq#(TLM3Defines::TLMBSize) Eq#(TLM3Defines::TLMBuffer) Eq#(TLM3Defines::TLMBurstMode) Eq#(TLM3Defines::TLMCache) Eq#(TLM3Defines::TLMCommand) Eq#(TLM3Defines::TLMErrorCode) Eq#(TLM3Defines::TLMFamily) Eq#(TLM3Defines::TLMLock) Eq#(TLM3Defines::TLMMark) Eq#(TLM3Defines::TLMMode) Eq#(TLM3Defines::TLMModify) Eq#(TLM3Defines::TLMPrivilege) {Eq#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size))} Eq#(TLM3Defines::TLMSecurity) Eq#(TLM3Defines::TLMStatus) Eq#(TLM3Reduce::MD) {Eq#(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size))} {Eq#(TLMDefines::RequestData#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Eq#(cstm_type))} {Eq#(TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Eq#(cstm_type))} Eq#(TLMDefines::TLMBurstMode) Eq#(TLMDefines::TLMCommand) Eq#(TLMDefines::TLMMode) {Eq#(TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Eq#(cstm_type))} {Eq#(TLMDefines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Eq#(cstm_type))} Eq#(TLMDefines::TLMStatus) {Eq#(TRAM::TRAMreq#(tg, adr, dta))   provisos (Eq#(adr), Eq#(dta), Eq#(tg))} Eq#(TV_Info::Trace_Op) Eq#(TagController::AddrFrame) Eq#(TagController::MemReqType) Eq#(TagController::TagReqId) {Eq#(Tuple2#(a, b))   provisos (Eq#(b), Eq#(a))} Eq#(Type) Eq#(UInt#(n)) {Eq#(UIntRange::UIntRange#(lo, hi))} Eq#(Vector::Ascii#(n)) {Eq#(Vector::Vector#(n, a))   provisos (Eq#(a))} Eq#(Video::CSAdderIn) Eq#(Video::CSMultIn) Eq#(Video::CrYCb444) Eq#(Video::CrYCbY422) {Eq#(Video::PixelData#(d))   provisos (Eq#(d))} Eq#(Video::RGB888) {Eq#(VnD::VnD#(a))   provisos (Eq#(a))} Eq#(XilinxCells::BUFRParams) Eq#(XilinxCells::ClockGenerator6Params) Eq#(XilinxCells::ClockGenerator7Params) Eq#(XilinxCells::ClockGeneratorParams) Eq#(XilinxCells::ClockGeneratorUParams) Eq#(XilinxCells::ClockIODELAYParams) Eq#(XilinxCells::DCMParams) Eq#(XilinxCells::IBUFDSParams) Eq#(XilinxCells::IBUFDS_GTE2Params) Eq#(XilinxCells::IBUFDS_GTXE1Params) Eq#(XilinxCells::IBUFGDSParams) Eq#(XilinxCells::IBUFGParams) Eq#(XilinxCells::IBUFParams) {Eq#(XilinxCells::IDDRParams#(a))   provisos (Eq#(a))} Eq#(XilinxCells::IODELAYParams) Eq#(XilinxCells::MMCMParams) Eq#(XilinxCells::OBUFDSParams) {Eq#(XilinxCells::ODDRParams#(a))   provisos (Eq#(a))} Eq#(XilinxCells::PLLParams) Eq#(XilinxCells::SRL16EParams) Eq#(XilinxCells::SRLC32EParams) Eq#(XilinxClocks::State) Eq#(XilinxClocks::XilinxClockParams) Eq#(XilinxClocks::XilinxClockRequest) Eq#(XilinxClocks::XilinxEType) Eq#(ZBus::BState) {Eq#(ZBusUtil::ZBit#(t))   provisos (Eq#(t))} {Eq#(function b f(a x1))   provisos (Eq#(b), Bounded#(a), Bits#(a, sa))} Eq#(void)}} {position {%/Libraries/Prelude.bs 363 6 {Library Prelude}}}
Typeclass {Literal#(type a)} {members {{{function a f(Integer x1)} fromInteger} {{function Bool f(a x1, Integer x2)} inLiteralRange}}} {instances {Literal#(AXI4_Common_Types::AXI4_Size) Literal#(Bit#(n)) {Literal#(CBus::CRAddr#(t, d))} {Literal#(Complex::Complex#(any_type))   provisos (Literal#(any_type))} {Literal#(FixedPoint::FixedPoint#(i, f))   provisos (Add#(i, f, b))} {Literal#(FloatingPoint::FloatingPoint#(e, m))} Literal#(Fmt) {Literal#(Gray::Gray#(n))   provisos (Add#(1, msb, n))} Literal#(Int#(n)) Literal#(Integer) {Literal#(LBus::LbAddr#(sa, sd))} Literal#(MemTypes::BitPO#(n)) {Literal#(NumberTypes::BuffIndex#(n, m))} Literal#(NumberTypes::WrapNumber#(sz)) Literal#(OInt::OInt#(n)) Literal#(Real) Literal#(String) Literal#(UInt#(n)) {Literal#(UIntRange::UIntRange#(lo, hi))}}} {position {%/Libraries/Prelude.bs 382 6 {Library Prelude}}}
Typeclass {RealLiteral#(type a)} {members {{{function a f(Real x1)} fromReal}}} {instances {{RealLiteral#(FixedPoint::FixedPoint#(i, f))} {RealLiteral#(FloatingPoint::FloatingPoint#(e, m))} RealLiteral#(Real)}} {position {%/Libraries/Prelude.bs 386 6 {Library Prelude}}}
Typeclass {SizedLiteral#(type a, numeric type n)} {dependencies {{a determines n}}} {members {{{function a f(Bit#(n) x1)} fromSizedInteger}}} {instances {{SizedLiteral#(Bit#(n), n)} {SizedLiteral#(Int#(n), n)} {SizedLiteral#(UInt#(n), n)}}} {position {%/Libraries/Prelude.bs 389 6 {Library Prelude}}}
Typeclass {StringLiteral#(type a)} {members {{{function a f(String x1)} fromString}}} {instances {StringLiteral#(Char) StringLiteral#(String)}} {position {%/Libraries/Prelude.bs 394 6 {Library Prelude}}}
Enum Ordering {members {LT EQ GT}} {width 2} {position {%/Libraries/Prelude.bs 398 5 {Library Prelude}}}
Typeclass {Ord#(type a)} {members {{{function Bool f(a x1, a x2)} <} {{function Bool f(a x1, a x2)} <=} {{function Bool f(a x1, a x2)} >} {{function Bool f(a x1, a x2)} >=} {{function Ordering f(a x1, a x2)} compare} {{function a f(a x1, a x2)} min} {{function a f(a x1, a x2)} max}}} {instances {Ord#(AXI4_Common_Types::AXI4_Size) Ord#(Bit#(n)) Ord#(Char) {Ord#(FixedPoint::FixedPoint#(i, f))   provisos (Add#(i, f, b))} {Ord#(FloatingPoint::FloatingPoint#(e, m))} Ord#(Int#(n)) Ord#(Integer) Ord#(MMU_Cache_Common::Meta_State) {Ord#(MemTypesCHERI::PhyByteAddress#(a, b))} Ord#(NumberTypes::WrapNumber#(n)) {Ord#(OInt::OInt#(n))   provisos (Log#(n, k))} Ord#(Real) Ord#(Reserved::Reserved#(n)) Ord#(Reserved::ReservedOne#(n)) Ord#(Reserved::ReservedZero#(n)) {Ord#(Tuple2#(a, b))   provisos (Eq#(a), Ord#(b), Ord#(a))} Ord#(UInt#(n)) {Ord#(UIntRange::UIntRange#(lo, hi))}}} {position {%/Libraries/Prelude.bs 421 6 {Library Prelude}}}
Typeclass {Bounded#(type a)} {members {{a minBound} {a maxBound}}} {instances {Bounded#(AhbDefines::AhbBurst) {Bounded#(AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size))} {Bounded#(AhbDefines::AhbMastCtrl#(id_size, addr_size, data_size, length_size, user_size))} Bounded#(AhbDefines::AhbProt) {Bounded#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size))} Bounded#(AhbDefines::AhbResp) {Bounded#(AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size))} Bounded#(AhbDefines::AhbTransfer) Bounded#(AhbDefines::AhbWrite) {Bounded#(AhbDefines::AhbXtorRequest#(id_size, addr_size, data_size, length_size, user_size))   provisos (Bounded#(AhbDefines::AhbTbRequest#(id_size, addr_size, data_size, length_size, user_size)))} Bounded#(AhbMaster::EBTMode) Bounded#(AhbPC::FVPropType) Bounded#(ApbDefines::ApbProt) Bounded#(ApbDefines::ApbWrite) Bounded#(Axi4Defines::Axi4Cache) Bounded#(Axi4Defines::Axi4Lock) Bounded#(Axi4LPC::Axi4LPCParams) Bounded#(Axi4PC::Axi4PCParams) Bounded#(AxiDefines::AxiBurst) Bounded#(AxiDefines::AxiCache) Bounded#(AxiDefines::AxiProt) Bounded#(AxiDefines::AxiResp) Bounded#(AxiPC::AxiPCParams) {Bounded#(Bag::Entry#(keyType, datType))   provisos (Bounded#(datType), Bounded#(keyType))} Bounded#(Bit#(n)) Bounded#(Bool) {Bounded#(CB::TokenRR#(a, ln))   provisos (Bounded#(a))} {Bounded#(CB::TokenRange#(a, ln))   provisos (Bounded#(a))} {Bounded#(CB::TokenRequest#(a, ln))   provisos (Bounded#(a))} {Bounded#(CacheCore::CacheAddress#(keyBits, tagBits))} Bounded#(CacheCore::CacheCommit) {Bounded#(CacheCore::DataKey#(ways, keyBits))} Bounded#(CacheCore::TagLine#(tagBits)) {Bounded#(FixedPoint::FixedPoint#(i, f))   provisos (Add#(i, f, b))} Bounded#(FloatingPoint::Disorder) {Bounded#(FloatingPoint::FloatingPoint#(e, m))} {Bounded#(Gray::Gray#(n))   provisos (Add#(1, msb, n))} Bounded#(Int#(n)) Bounded#(MemTypesCHERI::BytesPerFlit) Bounded#(MemTypesCHERI::CheriCapAddress) {Bounded#(MemTypesCHERI::PhyBitAddress#(width, bytePerLine))} {Bounded#(MemTypesCHERI::PhyByteAddress#(width, bytePerLine))} Bounded#(NumberTypes::WrapNumber#(sz)) Bounded#(OInt::OInt#(n)) Bounded#(Ordering) Bounded#(Reserved::Reserved#(n)) Bounded#(Reserved::ReservedOne#(n)) Bounded#(Reserved::ReservedZero#(n)) {Bounded#(TLM2Defines::RequestData#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Bounded#(cstm_type))} {Bounded#(TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Bounded#(cstm_type))} Bounded#(TLM2Defines::TLMBurstMode) Bounded#(TLM2Defines::TLMCommand) Bounded#(TLM2Defines::TLMMode) {Bounded#(TLM2Defines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Bounded#(cstm_type))} {Bounded#(TLM2Defines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Bounded#(cstm_type))} Bounded#(TLM2Defines::TLMStatus) Bounded#(TLM3Api::RecvState) Bounded#(TLM3Api::SendState) Bounded#(TLM3Api::TLMRequestHeader) Bounded#(TLM3Api::TLMRequestParams) Bounded#(TLM3Api::TLMResponseHeader) Bounded#(TLM3Api::TLMResponseParams) {Bounded#(TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size))} {Bounded#(TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size))} Bounded#(TLM3Defines::TLMAccess) Bounded#(TLM3Defines::TLMAllocate) {Bounded#(TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size))} Bounded#(TLM3Defines::TLMBSize) Bounded#(TLM3Defines::TLMBuffer) Bounded#(TLM3Defines::TLMBurstMode) Bounded#(TLM3Defines::TLMCache) Bounded#(TLM3Defines::TLMCommand) Bounded#(TLM3Defines::TLMErrorCode) Bounded#(TLM3Defines::TLMFamily) Bounded#(TLM3Defines::TLMLock) Bounded#(TLM3Defines::TLMMark) Bounded#(TLM3Defines::TLMMode) Bounded#(TLM3Defines::TLMModify) Bounded#(TLM3Defines::TLMPrivilege) {Bounded#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size))} {Bounded#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size))} Bounded#(TLM3Defines::TLMSecurity) Bounded#(TLM3Defines::TLMStatus) Bounded#(TLM3Reduce::MD) {Bounded#(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size))} {Bounded#(TLMDefines::RequestData#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Bounded#(cstm_type))} {Bounded#(TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Bounded#(cstm_type))} Bounded#(TLMDefines::TLMBurstMode) Bounded#(TLMDefines::TLMCommand) Bounded#(TLMDefines::TLMMode) {Bounded#(TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Bounded#(cstm_type))} {Bounded#(TLMDefines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Bounded#(cstm_type))} Bounded#(TLMDefines::TLMStatus) {Bounded#(Tuple2#(a, b))   provisos (Bounded#(b), Bounded#(a))} Bounded#(UInt#(n)) {Bounded#(UIntRange::UIntRange#(lo, hi))} Bounded#(Vector::Ascii#(n)) {Bounded#(Vector::Vector#(n, a))   provisos (Bits#(a, sa), Bounded#(a))} {Bounded#(VnD::VnD#(a))   provisos (Bounded#(a))} Bounded#(void)}} {position {%/Libraries/Prelude.bs 454 6 {Library Prelude}}}
Typeclass {Bitwise#(type a)} {members {{{function a f(a x1, a x2)} &} {{function a f(a x1, a x2)} |} {{function a f(a x1, a x2)} ^} {{function a f(a x1, a x2)} ~^} {{function a f(a x1, a x2)} ^~} {{function a f(a x1)} invert} {{function a f(a x1, b x2)   provisos (PrimShiftIndex#(b, c))} <<} {{function a f(a x1, b x2)   provisos (PrimShiftIndex#(b, c))} >>} {{function Bit#(1) f(a x1)} msb} {{function Bit#(1) f(a x1)} lsb}}} {instances {Bitwise#(AXI4_Common_Types::AXI4_Size) Bitwise#(Bit#(n)) Bitwise#(CHERICap::HardPerms) Bitwise#(File) {Bitwise#(FixedPoint::FixedPoint#(i, f))   provisos (Add#(i, f, b))} Bitwise#(FloatingPoint::Exception) Bitwise#(Int#(n)) Bitwise#(UInt#(n))}} {position {%/Libraries/Prelude.bs 482 6 {Library Prelude}}}
Typeclass {BitReduction#(type a, numeric type n)} {members {{{function a#(1) f(a#(n) x1)} reduceAnd} {{function a#(1) f(a#(n) x1)} reduceOr} {{function a#(1) f(a#(n) x1)} reduceXor} {{function a#(1) f(a#(n) x1)} reduceNand} {{function a#(1) f(a#(n) x1)} reduceNor} {{function a#(1) f(a#(n) x1)} reduceXnor}}} {instances {{BitReduction#(Bit, n)} {BitReduction#(Int, n)} {BitReduction#(UInt, n)}}} {position {%/Libraries/Prelude.bs 494 7 {Library Prelude}}}
Typeclass {BitExtend#(numeric type a, numeric type b, type c)} {members {{{function c#(b) f(c#(a) x1)} zeroExtend} {{function c#(b) f(c#(a) x1)} signExtend} {{function c#(b) f(c#(a) x1)} extend} {{function c#(a) f(c#(b) x1)} truncate}}} {instances {{BitExtend#(n, m, Bit)   provisos (Add#(k, n, m))} {BitExtend#(n, m, Int)   provisos (Add#(k, n, m))} {BitExtend#(n, m, UInt)   provisos (Add#(k, n, m))}}} {position {%/Libraries/Prelude.bs 503 7 {Library Prelude}}}
Typeclass {Arith#(type a)} {superclasses Literal#(a)} {members {{{function a f(a x1, a x2)} +} {{function a f(a x1, a x2)} -} {{function a f(a x1)} negate} {{function a f(a x1, a x2)} *} {{function a f(a x1, a x2)} /} {{function a f(a x1, a x2)} %} {{function a f(a x1)} abs} {{function a f(a x1)} signum} {{function a f(a x1, a x2)} **} {{function a f(a x1)} exp_e} {{function a f(a x1)} log} {{function a f(a x1, a x2)} logb} {{function a f(a x1)} log2} {{function a f(a x1)} log10}}} {instances {Arith#(AXI4_Common_Types::AXI4_Size) Arith#(Bit#(n)) {Arith#(CBus::CRAddr#(t, d))} {Arith#(Complex::Complex#(any_type))   provisos (Arith#(any_type))} {Arith#(FixedPoint::FixedPoint#(i, f))   provisos (Add#(TAdd#(i, i), TAdd#(f, f), TAdd#(b, b)), Add#(i, f, b))} {Arith#(FloatingPoint::FloatingPoint#(e, m))   provisos (Add#(f__, TLog#(TAdd#(1, TAdd#(m, 5))), TAdd#(e, 1)), Add#(e__, TLog#(TAdd#(1, TAdd#(m, 1))), TAdd#(TAdd#(e, 1), 1)), Add#(d__, TLog#(TAdd#(1, TAdd#(TAdd#(m, 5), 1))), TAdd#(e, 1)), Add#(c__, TLog#(TAdd#(1, TAdd#(m, 2))), TAdd#(e, 1)), Add#(b__, TLog#(TAdd#(1, TAdd#(m, 4))), TAdd#(e, 1)), Add#(a__, TLog#(TAdd#(1, TAdd#(TAdd#(m, 1), TAdd#(m, 1)))), TAdd#(e, 1)))} Arith#(Fmt) Arith#(Int#(n)) Arith#(Integer) {Arith#(NumberTypes::BuffIndex#(n, m))   provisos (Add#(log, _, n), Log#(m, log), Add#(1, n, n1))} Arith#(NumberTypes::WrapNumber#(sz)) Arith#(Real) Arith#(String) Arith#(UInt#(n))}} {position {%/Libraries/Prelude.bs 528 21 {Library Prelude}}}
Typeclass {IsModule#(type m, type c)} {superclasses MonadFix#(m)} {dependencies {{m determines c}}} {members {{{function m#(a) f(Module#(a) x1)} liftModule} {{function m#(b) f(module x1#(Module#(c#(a)) x1)(c#(b)), m#(a) x2)} liftModuleOp}}} {instances {{IsModule#(Module, Id__)} {IsModule#(ModuleContextCore::ModuleContext#(c), PrimPair#(c))}}} {position {%/Libraries/Prelude.bs 735 22 {Library Prelude}}}
Primary {Id__#(type a)} polymorphic
Primary SchedPragma
Enum ActionWorld {members ActionWorld} {position {%/Libraries/Prelude.bs 769 5 {Library Prelude}}}
Struct {AVStruct#(type a)} polymorphic {members {{a avValue} {PrimAction avAction} {ActionWorld avWorld}}} {position {%/Libraries/Prelude.bs 774 7 {Library Prelude}}}


Alias Action_ ActionValue_#(0) {position {%/Libraries/Prelude.bs 911 5 {Library Prelude}}}
Struct {ActionValue_#(numeric type n)} polymorphic {members {{Bit#(n) avValue_} {PrimAction avAction_}}} {position {%/Libraries/Prelude.bs 932 7 {Library Prelude}}}
Primary {Bit#(numeric type a)} polymorphic
Enum Bool {members {False True}} {width 1} {position {%/Libraries/Prelude.bs 1259 5 {Library Prelude}}}
Interface Empty {members {}} {position {%/Libraries/Prelude.bs 1296 10 {Library Prelude}}}
Primary Integer
Primary Real
TaggedUnion {Maybe#(type a)} polymorphic {members {{void Invalid {width 0}} {a Valid}}} {position {%/Libraries/Prelude.bs 1465 5 {Library Prelude}}}
Alias {Perhaps#(type a)} Maybe#(a) {position {%/Libraries/Prelude.bs 1467 5 {Library Prelude}}}
Primary {Int#(numeric type n)} polymorphic
Primary {UInt#(numeric type n)} polymorphic
Alias Nat Bit#(32) {position {%/Libraries/Prelude.bs 1773 5 {Library Prelude}}}
TaggedUnion {Either#(type a, type b)} polymorphic {members {{a Left} {b Right}}} {position {%/Libraries/Prelude.bs 1787 5 {Library Prelude}}}
Interface {Reg#(type a)} polymorphic {members {{method {Action _write a {}}} {method {a _read {} {}}}}} {position {%/Libraries/Prelude.bs 1836 10 {Library Prelude}}}
Interface {RevertingVirtualReg::VReg#(numeric type n)} polymorphic {members {{method {PrimAction write Bit#(n) {}}} {method {Bit#(n) read {} {}}}}} {position {%/Libraries/RevertingVirtualReg.bs 3 10 {Library RevertingVirtualReg}}}
Primary Rules
Primary String
Primary Char
Primary Fmt
Primary {Module#(type a)} polymorphic
Primary Name__
Primary Attributes__
Primary Position__
Primary Type
Primary Clock
Primary Power
Primary Reset
Primary {Inout#(type a)} polymorphic
Primary {Inout_#(numeric type a)} polymorphic
Primary {SizeOf#(type a)} polymorphic
Primary {TAdd#(numeric type a, numeric type b)} polymorphic
Primary {TSub#(numeric type a, numeric type b)} polymorphic
Primary {TMul#(numeric type a, numeric type b)} polymorphic
Primary {TDiv#(numeric type a, numeric type b)} polymorphic
Primary {TLog#(numeric type a)} polymorphic
Primary {TExp#(numeric type a)} polymorphic
Primary {TMax#(numeric type a, numeric type b)} polymorphic
Primary {TMin#(numeric type a, numeric type b)} polymorphic
Enum StringProxy {members StringProxy} {position {%/Libraries/Prelude.bs 2880 6 {Library Prelude}}}
Primary Pred__
TaggedUnion SvaParam {members {{Bool SvaBool {width 1}} {UInt#(32) SvaNumber {width 32}}}} {width 33} {position {%/Libraries/Prelude.bs 3119 5 {Library Prelude}}}
Primary File {width 32}
Struct {Tuple2#(type a, type b)} polymorphic {members {{a tpl_1} {b tpl_2}}} {position {%/Libraries/Prelude.bs 3297 5 {Library Prelude}}}
Struct {Tuple3#(type a, type b, type c)} polymorphic {members {{a tpl_1} {b tpl_2} {c tpl_3}}} {position {%/Libraries/Prelude.bs 3298 5 {Library Prelude}}}
Struct {Tuple4#(type a, type b, type c, type d)} polymorphic {members {{a tpl_1} {b tpl_2} {c tpl_3} {d tpl_4}}} {position {%/Libraries/Prelude.bs 3299 5 {Library Prelude}}}
Struct {Tuple5#(type a, type b, type c, type d, type e)} polymorphic {members {{a tpl_1} {b tpl_2} {c tpl_3} {d tpl_4} {e tpl_5}}} {position {%/Libraries/Prelude.bs 3300 5 {Library Prelude}}}
Struct {Tuple6#(type a, type b, type c, type d, type e, type f)} polymorphic {members {{a tpl_1} {b tpl_2} {c tpl_3} {d tpl_4} {e tpl_5} {f tpl_6}}} {position {%/Libraries/Prelude.bs 3301 5 {Library Prelude}}}
Struct {Tuple7#(type a, type b, type c, type d, type e, type f, type g)} polymorphic {members {{a tpl_1} {b tpl_2} {c tpl_3} {d tpl_4} {e tpl_5} {f tpl_6} {g tpl_7}}} {position {%/Libraries/Prelude.bs 3302 5 {Library Prelude}}}
Struct {Tuple8#(type a, type b, type c, type d, type e, type f, type g, type h)} polymorphic {members {{a tpl_1} {b tpl_2} {c tpl_3} {d tpl_4} {e tpl_5} {f tpl_6} {g tpl_7} {h tpl_8}}} {position {%/Libraries/Prelude.bs 3303 5 {Library Prelude}}}
Typeclass {Has_tpl_1#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_1}}} {instances {{Has_tpl_1#(Tuple2#(a, b), a)} {Has_tpl_1#(Tuple3#(a, b, c), a)} {Has_tpl_1#(Tuple4#(a, b, c, d), a)} {Has_tpl_1#(Tuple5#(a, b, c, d, e), a)} {Has_tpl_1#(Tuple6#(a, b, c, d, e, f), a)} {Has_tpl_1#(Tuple7#(a, b, c, d, e, f, g), a)} {Has_tpl_1#(Tuple8#(a, b, c, d, e, f, g, h), a)}}} {position {%/Libraries/Prelude.bs 3306 17 {Library Prelude}}}
Typeclass {Has_tpl_2#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_2}}} {instances {{Has_tpl_2#(Tuple2#(a, b), b)} {Has_tpl_2#(Tuple3#(a, b, c), b)} {Has_tpl_2#(Tuple4#(a, b, c, d), b)} {Has_tpl_2#(Tuple5#(a, b, c, d, e), b)} {Has_tpl_2#(Tuple6#(a, b, c, d, e, f), b)} {Has_tpl_2#(Tuple7#(a, b, c, d, e, f, g), b)} {Has_tpl_2#(Tuple8#(a, b, c, d, e, f, g, h), b)}}} {position {%/Libraries/Prelude.bs 3307 17 {Library Prelude}}}
Typeclass {Has_tpl_3#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_3}}} {instances {{Has_tpl_3#(Tuple3#(a, b, c), c)} {Has_tpl_3#(Tuple4#(a, b, c, d), c)} {Has_tpl_3#(Tuple5#(a, b, c, d, e), c)} {Has_tpl_3#(Tuple6#(a, b, c, d, e, f), c)} {Has_tpl_3#(Tuple7#(a, b, c, d, e, f, g), c)} {Has_tpl_3#(Tuple8#(a, b, c, d, e, f, g, h), c)}}} {position {%/Libraries/Prelude.bs 3308 17 {Library Prelude}}}
Typeclass {Has_tpl_4#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_4}}} {instances {{Has_tpl_4#(Tuple4#(a, b, c, d), d)} {Has_tpl_4#(Tuple5#(a, b, c, d, e), d)} {Has_tpl_4#(Tuple6#(a, b, c, d, e, f), d)} {Has_tpl_4#(Tuple7#(a, b, c, d, e, f, g), d)} {Has_tpl_4#(Tuple8#(a, b, c, d, e, f, g, h), d)}}} {position {%/Libraries/Prelude.bs 3309 17 {Library Prelude}}}
Typeclass {Has_tpl_5#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_5}}} {instances {{Has_tpl_5#(Tuple5#(a, b, c, d, e), e)} {Has_tpl_5#(Tuple6#(a, b, c, d, e, f), e)} {Has_tpl_5#(Tuple7#(a, b, c, d, e, f, g), e)} {Has_tpl_5#(Tuple8#(a, b, c, d, e, f, g, h), e)}}} {position {%/Libraries/Prelude.bs 3310 17 {Library Prelude}}}
Typeclass {Has_tpl_6#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_6}}} {instances {{Has_tpl_6#(Tuple6#(a, b, c, d, e, f), f)} {Has_tpl_6#(Tuple7#(a, b, c, d, e, f, g), f)} {Has_tpl_6#(Tuple8#(a, b, c, d, e, f, g, h), f)}}} {position {%/Libraries/Prelude.bs 3311 17 {Library Prelude}}}
Typeclass {Has_tpl_7#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_7}}} {instances {{Has_tpl_7#(Tuple7#(a, b, c, d, e, f, g), g)} {Has_tpl_7#(Tuple8#(a, b, c, d, e, f, g, h), g)}}} {position {%/Libraries/Prelude.bs 3312 17 {Library Prelude}}}
Typeclass {Has_tpl_8#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_8}}} {instances {{Has_tpl_8#(Tuple8#(a, b, c, d, e, f, g, h), h)}}} {position {%/Libraries/Prelude.bs 3313 17 {Library Prelude}}}
List {List#(type element_type)} polymorphic {elem a}
can't read "Cons": no such variable
Primary {Array#(type a)} polymorphic
Primary Handle
Enum IOMode {members {ReadMode WriteMode AppendMode}} {position {%/Libraries/Prelude.bs 4042 5 {Library Prelude}}}
TaggedUnion BufferMode {members {{void NoBuffering {width 0}} {void LineBuffering {width 0}} {Maybe#(Integer) BlockBuffering}}} {position {%/Libraries/Prelude.bs 4085 5 {Library Prelude}}}
Typeclass {FShow#(type t)} {members {{{function Fmt f(t x1)} fshow}}} {instances {{FShow#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {FShow#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} FShow#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {FShow#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {FShow#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {FShow#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_))} {FShow#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} FShow#(AXI4_Common_Types::AXI4_Burst) FShow#(AXI4_Common_Types::AXI4_Lock) FShow#(AXI4_Common_Types::AXI4_Prot_0) FShow#(AXI4_Common_Types::AXI4_Prot_1) FShow#(AXI4_Common_Types::AXI4_Prot_2) FShow#(AXI4_Common_Types::AXI4_Resp) FShow#(AXI4_Common_Types::AXI4_Size) {FShow#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {FShow#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {FShow#(AXI4_Types::AXI4_BFlit#(id_, user_))} FShow#(AXI4_Types::AXI4_Events) {FShow#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {FShow#(AXI4_Types::AXI4_WFlit#(data_, user_))} {FShow#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))} FShow#(AXI4_Utils::ReadSplitOption) FShow#(AXI4_Utils::SerialiserState) {FShow#(AXI_Helpers::ReqFlit#(id_, addr_, data_, tag_))} {FShow#(AXI_Helpers::RspFlit#(id_, data_, tag_))} {FShow#(AXI_Helpers::WriteReqFlit#(id_, addr_, data_, tag_))} {FShow#(AddressFlit::AFlit#(a, b))} FShow#(AhbDefines::AhbBurst) {FShow#(AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size))} {FShow#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size))} FShow#(AhbDefines::AhbResp) {FShow#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} {FShow#(AhbDefines::AhbTbRequest#(id_size, addr_size, data_size, length_size, user_size))   provisos (FShow#(AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size)))} FShow#(AhbDefines::AhbTransfer) FShow#(AhbDefines::AhbWrite) {FShow#(AhbDefines::AhbXtorRequest#(id_size, addr_size, data_size, length_size, user_size))   provisos (FShow#(AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size)))} {FShow#(ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size))} FShow#(ApbDefines::ApbProt) {FShow#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size))} {FShow#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size))} FShow#(ApbDefines::ApbWrite) {FShow#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} FShow#(AxiDefines::AxiBurst) {FShow#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))} FShow#(AxiDefines::AxiResp) {FShow#(Bag::Entry#(keyType, datType))   provisos (FShow#(datType), FShow#(keyType))} FShow#(Bit#(n)) FShow#(Bool) FShow#(Branch_Predictor::BTB_Entry) {FShow#(CB::TokenRR#(a, ln))   provisos (Bits#(a, sa))} {FShow#(CB::TokenRange#(a, ln))   provisos (Bits#(a, sa))} {FShow#(CB::TokenRequest#(a, ln))   provisos (Bits#(a, sa))} FShow#(CHERICC_Fat::Bounds) FShow#(CHERICC_Fat::BoundsEmbeddedExp) FShow#(CHERICC_Fat::BoundsExp0) FShow#(CHERICC_Fat::CapFat) FShow#(CHERICC_Fat::CapPipe) FShow#(CHERICC_Fat::CapabilityInMemory) FShow#(CHERICC_Fat::Format) FShow#(CHERICC_Fat::HPerms) FShow#(CHERICC_Fat::MetaInfo) FShow#(CHERICC_Fat::Perms) FShow#(CHERICap::HardPerms) FShow#(CHERICap::Kind#(ot)) {FShow#(CHERICap::SetBoundsReturn#(t, n))   provisos (FShow#(t))} FShow#(CPU::CPU_State) FShow#(CPU_Globals::Bypass) FShow#(CPU_Globals::Bypass_State) FShow#(CPU_Globals::CF_Info) FShow#(CPU_Globals::CF_Op) FShow#(CPU_Globals::Control) FShow#(CPU_Globals::Data_Stage1_to_Stage2) FShow#(CPU_Globals::Data_Stage2_to_Stage3) FShow#(CPU_Globals::Data_StageD_to_Stage1) FShow#(CPU_Globals::Data_StageF_to_StageD) FShow#(CPU_Globals::FBypass) FShow#(CPU_Globals::Op_Stage2) FShow#(CPU_Globals::Output_Stage1) FShow#(CPU_Globals::Output_Stage2) FShow#(CPU_Globals::Output_Stage3) FShow#(CPU_Globals::Output_StageD) FShow#(CPU_Globals::Output_StageF) {FShow#(CPU_Globals::Pipeline_Val#(capType))   provisos (FShow#(capType))} FShow#(CPU_Globals::Stage_OStatus) FShow#(CPU_Globals::Trap_Info_Pipe) FShow#(CSR_RegFile_MSU::CSR_Write_Result) FShow#(CSR_RegFile_MSU::RF_State) FShow#(CacheCorderer::ReqRec) FShow#(CacheCorderer::TransRecord) {FShow#(CacheCore::AddrTagWay#(ways, keyBits, tagBits))} {FShow#(CacheCore::CacheAddress#(keyBits, tagBits))} FShow#(CacheCore::CacheCommit) FShow#(CacheCore::CacheState) {FShow#(CacheCore::ControlToken#(ways, keyBits, tagBits))} {FShow#(CacheCore::DataKey#(ways, keyBits))} FShow#(CacheCore::EventsCacheCore) {FShow#(CacheCore::InvalidateToken#(ways, keyBits, tagBits))} FShow#(CacheCore::LookupCommand) FShow#(CacheCore::OrderBehaviour) FShow#(CacheCore::ReqIdWithSC) {FShow#(CacheCore::RequestRecord#(ways, keyBits, tagBits))} FShow#(CacheCore::ResponseBehaviour) FShow#(CacheCore::ResponseToken) FShow#(CacheCore::TagLine#(tagBits)) {FShow#(CacheCore::TagUpdate#(ways, keyBits, tagBits))} FShow#(CacheCore::WriteMissBehaviour) FShow#(Char) FShow#(ClkCtrlServer::ClkCtrlReq) FShow#(ClkCtrlServer::ClkCtrlResp) {FShow#(Complex::Complex#(t))   provisos (FShow#(t))} FShow#(ConArg) {FShow#(Conc#(a))   provisos (FShow#(a))} {FShow#(ConcPoly#(a))   provisos (FShow#(a))} {FShow#(ConcPrim#(a))   provisos (FShow#(a))} {FShow#(DM_CPU_Req_Rsp::DM_CPU_Req#(a, d))} FShow#(DM_CPU_Req_Rsp::DM_CPU_Rsp#(d)) FShow#(DM_Common::DCSR_Cause) FShow#(DM_Common::DM_abstractcs_cmderr) FShow#(DM_Common::DM_command_access_reg_size) FShow#(DM_Common::DM_command_cmdtype) FShow#(DM_Common::DM_sbaccess) FShow#(DM_Common::DM_sberror) FShow#(DM_System_Bus::SB_State) FShow#(EX_ALU_functions::ALU_Inputs) FShow#(EX_ALU_functions::ALU_Outputs) FShow#(EX_ALU_functions::Output_Select) {FShow#(Either#(a, b))   provisos (FShow#(b), FShow#(a))} FShow#(FBox_Core::FBoxResult) FShow#(FBox_Core::FBoxState) {FShow#(FIFOF::FIFOF#(a))   provisos (FShow#(a))} {FShow#(FIFOF_::FIFOF_#(a))   provisos (FShow#(a))} FShow#(FPR_RegFile::RF_State) {FShow#(FixedPoint::FixedPoint#(i, f))} FShow#(FloatingPoint::Exception) {FShow#(FloatingPoint::FloatingPoint#(e, m))} FShow#(FloatingPoint::RoundMode) FShow#(Fmt) FShow#(GPR_RegFile::RF_State) FShow#(ISA_Decls::Access_RWX) FShow#(ISA_Decls::Decoded_Instr) FShow#(ISA_Decls::Fence_Ordering) FShow#(ISA_Decls::FpuOp) FShow#(ISA_Decls::ISize) FShow#(ISA_Decls::MCause) FShow#(ISA_Decls::MCounteren) FShow#(ISA_Decls::MCountinhibit) FShow#(ISA_Decls::MISA) FShow#(ISA_Decls::MTVEC_Mode) FShow#(ISA_Decls::MTVec) FShow#(ISA_Decls::Mem_Data_Size) FShow#(ISA_Decls::Trap_Info_CSR) FShow#(Int#(n)) FShow#(IntMulDiv::DivState) FShow#(IntMulDiv::MulState) FShow#(Integer) FShow#(JtagTap::DMI) FShow#(JtagTap::DTMCS) FShow#(JtagTap::JtagState) {FShow#(List#(a))   provisos (FShow#(a))} FShow#(MMU_Cache::CTagState) FShow#(MMU_Cache::Fabric_Write_Fields) FShow#(MMU_Cache::Module_State) FShow#(MMU_Cache::Requestor) FShow#(MMU_Cache::State_and_CTag) FShow#(MMU_Cache_Common::CacheOp) FShow#(MMU_Cache_Common::L1_to_L2_Req) FShow#(MMU_Cache_Common::L1_to_L2_Rsp) FShow#(MMU_Cache_Common::L2_to_L1_Req) FShow#(MMU_Cache_Common::L2_to_L1_Rsp) FShow#(MMU_Cache_Common::MMU_Cache_Req) FShow#(MMU_Cache_Common::Meta_State) FShow#(MMU_Cache_Common::Single_Req) FShow#(MMU_Cache_Common::Single_Rsp) FShow#(MMU_Cache_Common::VM_Xlate_Outcome) FShow#(MMU_Cache_Common::VM_Xlate_Result) {FShow#(Map::MapKeyIndex#(ky, ix))   provisos (FShow#(ix), FShow#(ky))} {FShow#(Map::MapKeyIndexValue#(ky, ix, vl))   provisos (FShow#(vl), FShow#(ix), FShow#(ky))} {FShow#(Map::MapKeyValue#(ky, vl))   provisos (FShow#(vl), FShow#(ky))} {FShow#(Maybe#(a))   provisos (FShow#(a))} FShow#(MemTypes::BitPO#(n)) {FShow#(MemTypes::MemReq#(addr_t, data_t))   provisos (FShow#(addr_t), Bits#(data_t, _v100), FShow#(data_t))} {FShow#(MemTypes::MemReq_$ReadReq#(addr_t, data_t))   provisos (Bits#(data_t, _v100), FShow#(addr_t))} {FShow#(MemTypes::MemReq_$WriteReq#(addr_t, data_t))   provisos (FShow#(data_t), Bits#(data_t, _v100), FShow#(addr_t))} {FShow#(MemTypes::MemRsp#(data_t))   provisos (FShow#(data_t))} FShow#(MemTypesCHERI::BytesPerFlit) FShow#(MemTypesCHERI::CacheInst) FShow#(MemTypesCHERI::CacheOperation) FShow#(MemTypesCHERI::CheriCapAddress) FShow#(MemTypesCHERI::Data#(width)) FShow#(MemTypesCHERI::DataMinusCapTags#(width)) FShow#(MemTypesCHERI::Error) {FShow#(MemTypesCHERI::MemoryRequest#(a, b, c, d))   provisos (Bits#(c, c_), Bits#(b, b_), Bits#(a, a_), FShow#(a))} {FShow#(MemTypesCHERI::MemoryResponse#(a, b, c))   provisos (Bits#(b, b_), Bits#(a, a_))} {FShow#(MemTypesCHERI::PhyBitAddress#(width, bytePerLine))} {FShow#(MemTypesCHERI::PhyByteAddress#(width, bytePerLine))} FShow#(MemTypesCHERI::ReqId) FShow#(MemTypesCHERI::WhichCache) {FShow#(Memory::MemoryRequest#(a, d))} FShow#(Memory::MemoryResponse#(d)) {FShow#(Meta#(m, r))   provisos (FShow#(r))} {FShow#(MetaConsAnon#(name, idx, nfields))} {FShow#(MetaConsNamed#(name, idx, nfields))} {FShow#(MetaData#(name, pkg, tyargs, ncons))} {FShow#(MetaField#(name, idx))} FShow#(MultiLevelTagLookup::CheriTagRequest) {FShow#(MultiLevelTagLookup::CheriTagRequest_$operation)} FShow#(MultiLevelTagLookup::CheriTagResponse) {FShow#(MultiLevelTagLookup::CheriTagResponse_$tags)} FShow#(MultiLevelTagLookup::CheriTagWrite) FShow#(MultiLevelTagLookup::State) FShow#(MultiLevelTagLookup::TableLvl) FShow#(Near_Mem_Caches::State) FShow#(Near_Mem_IFC::EventsCache) FShow#(Near_Mem_IO_AXI4::Module_State) FShow#(NumArg#(i)) FShow#(RISCV_MBox::State) FShow#(Reserved::Reserved#(n)) FShow#(Reserved::ReservedOne#(n)) FShow#(Reserved::ReservedZero#(n)) {FShow#(Routable::WithMetaInfo#(t, m_t))   provisos (FShow#(m_t), FShow#(t))} {FShow#(Routable::WithRouteInfo#(t, r_t))   provisos (FShow#(r_t), FShow#(t))} FShow#(StarArg#(i)) FShow#(StatCounters::AXI4_Master_Events) FShow#(StatCounters::AXI4_Slave_Events) FShow#(StatCounters::EventsCore) FShow#(StatCounters::EventsL1D) FShow#(StatCounters::EventsL1I) FShow#(StatCounters::EventsLL) FShow#(StatCounters::EventsTGC) FShow#(StatCounters::EventsTransExe) FShow#(StatCounters::HPMEvents) FShow#(StrArg#(i)) FShow#(String) FShow#(TLB::TLBE) FShow#(TLB::TLB_Lookup_Result) {FShow#(TLM2Defines::RequestData#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Add#(ignore0, uint_size, 32))} {FShow#(TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type))} FShow#(TLM2Defines::TLMBurstMode) FShow#(TLM2Defines::TLMCommand) FShow#(TLM2Defines::TLMMode) {FShow#(TLM2Defines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Add#(_v100, uint_size, 32))} {FShow#(TLM2Defines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type))} FShow#(TLM2Defines::TLMStatus) FShow#(TLM3Api::TLMRequestHeader) FShow#(TLM3Api::TLMResponseHeader) {FShow#(TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size))} {FShow#(TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size))} FShow#(TLM3Defines::TLMAccess) FShow#(TLM3Defines::TLMAllocate) FShow#(TLM3Defines::TLMBSize) FShow#(TLM3Defines::TLMBuffer) FShow#(TLM3Defines::TLMBurstMode) FShow#(TLM3Defines::TLMCache) FShow#(TLM3Defines::TLMCommand) FShow#(TLM3Defines::TLMErrorCode) FShow#(TLM3Defines::TLMLock) FShow#(TLM3Defines::TLMMark) FShow#(TLM3Defines::TLMMode) FShow#(TLM3Defines::TLMModify) FShow#(TLM3Defines::TLMPrivilege) {FShow#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size))} {FShow#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size))} FShow#(TLM3Defines::TLMSecurity) FShow#(TLM3Defines::TLMStatus) {FShow#(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size))} {FShow#(TLMDefines::RequestData#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Add#(ignore0, uint_size, 32))} {FShow#(TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type))} FShow#(TLMDefines::TLMBurstMode) FShow#(TLMDefines::TLMCommand) FShow#(TLMDefines::TLMMode) {FShow#(TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Add#(_v100, uint_size, 32))} {FShow#(TLMDefines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type))} FShow#(TLMDefines::TLMStatus) FShow#(TV_Info::Info_CPU_to_Verifier) FShow#(TV_Info::Trace_Data) FShow#(TV_Info::Trace_Op) FShow#(TagController::AddrFrame) FShow#(TagController::MemReqType) FShow#(TagController::TagReqId) {FShow#(Tuple2#(a, b))   provisos (FShow#(b), FShow#(a))} {FShow#(Tuple3#(a, b, c))   provisos (FShow#(c), FShow#(b), FShow#(a))} {FShow#(Tuple4#(a, b, c, d))   provisos (FShow#(d), FShow#(c), FShow#(b), FShow#(a))} {FShow#(Tuple5#(a, b, c, d, e))   provisos (FShow#(e), FShow#(d), FShow#(c), FShow#(b), FShow#(a))} {FShow#(Tuple6#(a, b, c, d, e, f))   provisos (FShow#(f), FShow#(e), FShow#(d), FShow#(c), FShow#(b), FShow#(a))} {FShow#(Tuple7#(a, b, c, d, e, f, g))   provisos (FShow#(g), FShow#(f), FShow#(e), FShow#(d), FShow#(c), FShow#(b), FShow#(a))} {FShow#(Tuple8#(a, b, c, d, e, f, g, h))   provisos (FShow#(h), FShow#(g), FShow#(f), FShow#(e), FShow#(d), FShow#(c), FShow#(b), FShow#(a))} FShow#(UInt#(n)) FShow#(Vector::Ascii#(n)) {FShow#(Vector::Vector#(n, a))   provisos (FShow#(a))} {FShow#(VnD::VnD#(a))   provisos (FShow#(a))} FShow#(void)}} {position {%/Libraries/Prelude.bs 4165 6 {Library Prelude}}}
Typeclass {DefaultValue#(type a)} coherent {members {{a defaultValue}}} {instances {{DefaultValue#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {DefaultValue#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} DefaultValue#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {DefaultValue#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {DefaultValue#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {DefaultValue#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {DefaultValue#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {DefaultValue#(AXI4_Types::AXI4_BFlit#(id_, user_))} DefaultValue#(AXI4_Types::AXI4_Events) {DefaultValue#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {DefaultValue#(AXI4_Types::AXI4_WFlit#(data_, user_))} {DefaultValue#(AXI_Helpers::ReqFlit#(id_, addr_, data_, tag_))} {DefaultValue#(AXI_Helpers::RspFlit#(id_, data_, tag_))} DefaultValue#(AhbPC::AhbPCPrms) DefaultValue#(AlteraCells::AlteraClockGenParams) DefaultValue#(AlteraCells::IDDRParams) DefaultValue#(AlteraCells::LVDSRX) DefaultValue#(AlteraCells::LVDSTX) DefaultValue#(AlteraCells::ODDRParams) {DefaultValue#(ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} DefaultValue#(Axi4LPC::Axi4LPCParams) DefaultValue#(Axi4PC::Axi4PCParams) {DefaultValue#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))} DefaultValue#(AxiPC::AxiPCParams) {DefaultValue#(BRAM::BRAMRequest#(addr, data))   provisos (DefaultValue#(data), DefaultValue#(addr))} {DefaultValue#(BRAM::BRAMRequestBE#(addr, data, n))   provisos (DefaultValue#(data), DefaultValue#(addr))} DefaultValue#(BRAM::BRAM_Configure) DefaultValue#(Bool) DefaultValue#(CHERICC_Fat::Bounds) DefaultValue#(CHERICC_Fat::CapFat) DefaultValue#(CommitIfc::RecvCommit#(a)) {DefaultValue#(CommitIfc::SendCommit#(a))   provisos (DefaultValue#(a))} DefaultValue#(DDR3::DDR3_Configure) DefaultValue#(DDR4::DDR4_Configure) DefaultValue#(FloatingPoint::Exception) {DefaultValue#(FloatingPoint::FloatingPoint#(e, m))} DefaultValue#(FloatingPoint::RoundMode) DefaultValue#(HDMIController::HDMIParams) DefaultValue#(JtagTap::DMI) DefaultValue#(JtagTap::DTMCS) DefaultValue#(MIMO::MIMOConfiguration) DefaultValue#(Maybe#(a)) DefaultValue#(MemTypesCHERI::CacheOperation) {DefaultValue#(MemTypesCHERI::MemoryRequest#(a, b, c, d))   provisos (Bits#(c, c_), Bits#(b, b_), Bits#(a, a_))} {DefaultValue#(MemTypesCHERI::MemoryResponse#(a, b, c))   provisos (Bits#(b, b_), Bits#(a, a_))} {DefaultValue#(Memory::MemoryRequest#(a, d))} DefaultValue#(Memory::MemoryResponse#(d)) DefaultValue#(PCIE::PCIEParams) DefaultValue#(PCIE::PciId) DefaultValue#(PCIE::TLPCompletionHeader) DefaultValue#(PCIE::TLPData#(n)) DefaultValue#(PCIE::TLPMSIHeader) DefaultValue#(PCIE::TLPMemory4DWHeader) DefaultValue#(PCIE::TLPMemoryIO3DWHeader) {DefaultValue#(TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (DefaultValue#(cstm_type))} {DefaultValue#(TLM2Defines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (DefaultValue#(cstm_type))} {DefaultValue#(TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size))} {DefaultValue#(Tuple2#(a, b))   provisos (DefaultValue#(b), DefaultValue#(a))} DefaultValue#(UnitAppendList::UAList#(a)) {DefaultValue#(Vector::Vector#(n, t))   provisos (DefaultValue#(t))} DefaultValue#(XilinxCells::BUFRParams) DefaultValue#(XilinxCells::ClockGenerator6Params) DefaultValue#(XilinxCells::ClockGenerator7Params) DefaultValue#(XilinxCells::ClockGeneratorParams) DefaultValue#(XilinxCells::ClockGeneratorUParams) DefaultValue#(XilinxCells::ClockIODELAYParams) DefaultValue#(XilinxCells::DCMParams) DefaultValue#(XilinxCells::IBUFDSParams) DefaultValue#(XilinxCells::IBUFDS_GTE2Params) DefaultValue#(XilinxCells::IBUFDS_GTXE1Params) DefaultValue#(XilinxCells::IBUFGDSParams) DefaultValue#(XilinxCells::IBUFGParams) DefaultValue#(XilinxCells::IBUFParams) {DefaultValue#(XilinxCells::IDDRParams#(a))   provisos (DefaultValue#(a))} DefaultValue#(XilinxCells::IDELAYParams) DefaultValue#(XilinxCells::IODELAYParams) DefaultValue#(XilinxCells::MMCMParams) DefaultValue#(XilinxCells::OBUFDSParams) DefaultValue#(XilinxCells::OBUFParams) {DefaultValue#(XilinxCells::ODDRParams#(a))   provisos (DefaultValue#(a))} DefaultValue#(XilinxCells::PLLParams) DefaultValue#(XilinxCells::SRL16EParams) DefaultValue#(XilinxCells::SRLC32EParams) DefaultValue#(XilinxClocks::XilinxClockParams) {DefaultValue#(t)   provisos (Literal#(t))} DefaultValue#(void)}} {position {%/Libraries/Prelude.bs 4268 15 {Library Prelude}}}
Typeclass {Generic#(type a, type r)} {dependencies {{a determines r}}} {members {{{function r f(a x1)} from} {{function a f(r x1)} to}}} {instances {{Generic#(AHBArbiterSupport::AHBArbiter#(count), Meta#(MetaData#("AHBArbiter", "AHBArbiterSupport", NumArg#(count), 1), Meta#(MetaConsNamed#("AHBArbiter", 0, 3), Tuple3#(Meta#(MetaField#("clients", 0), Conc#(Vector::Vector#(count, Arbiter::ArbiterClient_IFC))), Meta#(MetaField#("hmaster", 1), Conc#(Maybe#(AHBArbiterSupport::LBit#(count)))), Meta#(MetaField#("update", 2), Conc#(Action))))))} {Generic#(AVStruct#(a), Meta#(MetaData#("AVStruct", "Prelude", StarArg#(a), 1), Meta#(MetaConsNamed#("AVStruct", 0, 3), Tuple3#(Meta#(MetaField#("avValue", 0), Conc#(a)), Meta#(MetaField#("avAction", 1), Conc#(PrimAction)), Meta#(MetaField#("avWorld", 2), Conc#(ActionWorld))))))} {Generic#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_), Meta#(MetaData#("AXI4Lite_ARFlit", "AXI4Lite_Types", Tuple2#(NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_ARFlit", 0, 3), Tuple3#(Meta#(MetaField#("araddr", 0), Conc#(Bit#(addr_))), Meta#(MetaField#("arprot", 1), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("aruser", 2), Conc#(Bit#(user_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_), Meta#(MetaData#("AXI4Lite_AR_Master_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_AR_Master_Sig", 0, 5), Tuple5#(Meta#(MetaField#("araddr", 0), Conc#(Bit#(addr_))), Meta#(MetaField#("arprot", 1), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("aruser", 2), Conc#(Bit#(user_))), Meta#(MetaField#("arvalid", 3), Conc#(Bool)), Meta#(MetaField#("arready", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_), Meta#(MetaData#("AXI4Lite_AR_Slave_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_AR_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("arflit", 0), Conc#(function Action f(Bool x1, Bit#(addr_) x2, AXI4_Common_Types::AXI4_Prot x3, Bit#(user_) x4))), Meta#(MetaField#("arready", 1), Conc#(Bool))))))} {Generic#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_), Meta#(MetaData#("AXI4Lite_AWFlit", "AXI4Lite_Types", Tuple2#(NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_AWFlit", 0, 3), Tuple3#(Meta#(MetaField#("awaddr", 0), Conc#(Bit#(addr_))), Meta#(MetaField#("awprot", 1), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("awuser", 2), Conc#(Bit#(user_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_), Meta#(MetaData#("AXI4Lite_AW_Master_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_AW_Master_Sig", 0, 5), Tuple5#(Meta#(MetaField#("awaddr", 0), Conc#(Bit#(addr_))), Meta#(MetaField#("awprot", 1), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("awuser", 2), Conc#(Bit#(user_))), Meta#(MetaField#("awvalid", 3), Conc#(Bool)), Meta#(MetaField#("awready", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_), Meta#(MetaData#("AXI4Lite_AW_Slave_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_AW_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("awflit", 0), Conc#(function Action f(Bool x1, Bit#(addr_) x2, AXI4_Common_Types::AXI4_Prot x3, Bit#(user_) x4))), Meta#(MetaField#("awready", 1), Conc#(Bool))))))} {Generic#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), Meta#(MetaData#("AXI4Lite_BFlit", "AXI4Lite_Types", NumArg#(user_), 1), Meta#(MetaConsNamed#("AXI4Lite_BFlit", 0, 2), Tuple2#(Meta#(MetaField#("bresp", 0), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("buser", 1), Conc#(Bit#(user_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_), Meta#(MetaData#("AXI4Lite_B_Master_Sig", "AXI4Lite_Types", NumArg#(user_), 1), Meta#(MetaConsNamed#("AXI4Lite_B_Master_Sig", 0, 2), Tuple2#(Meta#(MetaField#("bflit", 0), Conc#(function Action f(Bool x1, AXI4_Common_Types::AXI4_Resp x2, Bit#(user_) x3))), Meta#(MetaField#("bready", 1), Conc#(Bool))))))} {Generic#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_), Meta#(MetaData#("AXI4Lite_B_Slave_Sig", "AXI4Lite_Types", NumArg#(user_), 1), Meta#(MetaConsNamed#("AXI4Lite_B_Slave_Sig", 0, 4), Tuple4#(Meta#(MetaField#("bresp", 0), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("buser", 1), Conc#(Bit#(user_))), Meta#(MetaField#("bvalid", 2), Conc#(Bool)), Meta#(MetaField#("bready", 3), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Master", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Master", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)))), Meta#(MetaField#("w", 1), Conc#(SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)))), Meta#(MetaField#("b", 2), Conc#(SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)))), Meta#(MetaField#("ar", 3), Conc#(SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_)))), Meta#(MetaField#("r", 4), Conc#(SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Master_Sig", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Master_Sig", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_))), Meta#(MetaField#("w", 1), Conc#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_))), Meta#(MetaField#("b", 2), Conc#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_))), Meta#(MetaField#("ar", 3), Conc#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_))), Meta#(MetaField#("r", 4), Conc#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Master_Xactor#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Master_Xactor", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Master_Xactor", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("slave", 1), Conc#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))), Meta#(MetaField#("masterSig", 2), Conc#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_), Meta#(MetaData#("AXI4Lite_RFlit", "AXI4Lite_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_RFlit", 0, 3), Tuple3#(Meta#(MetaField#("rdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("rresp", 1), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("ruser", 2), Conc#(Bit#(user_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_), Meta#(MetaData#("AXI4Lite_R_Master_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_R_Master_Sig", 0, 2), Tuple2#(Meta#(MetaField#("rflit", 0), Conc#(function Action f(Bool x1, Bit#(data_) x2, AXI4_Common_Types::AXI4_Resp x3, Bit#(user_) x4))), Meta#(MetaField#("rready", 1), Conc#(Bool))))))} {Generic#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_), Meta#(MetaData#("AXI4Lite_R_Slave_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_R_Slave_Sig", 0, 5), Tuple5#(Meta#(MetaField#("rdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("rresp", 1), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("ruser", 2), Conc#(Bit#(user_))), Meta#(MetaField#("rvalid", 3), Conc#(Bool)), Meta#(MetaField#("rready", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Shim#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Shim", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Shim", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("master", 1), Conc#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))), Meta#(MetaField#("slave", 2), Conc#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Shim_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Shim_Sig", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Shim_Sig", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("master", 1), Conc#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))), Meta#(MetaField#("slave", 2), Conc#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Slave", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Slave", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)))), Meta#(MetaField#("w", 1), Conc#(SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)))), Meta#(MetaField#("b", 2), Conc#(SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)))), Meta#(MetaField#("ar", 3), Conc#(SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_)))), Meta#(MetaField#("r", 4), Conc#(SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Slave_Sig", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Slave_Sig", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_))), Meta#(MetaField#("w", 1), Conc#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_))), Meta#(MetaField#("b", 2), Conc#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_))), Meta#(MetaField#("ar", 3), Conc#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_))), Meta#(MetaField#("r", 4), Conc#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Slave_Xactor#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Slave_Xactor", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Slave_Xactor", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("master", 1), Conc#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))), Meta#(MetaField#("slaveSig", 2), Conc#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_), Meta#(MetaData#("AXI4Lite_WFlit", "AXI4Lite_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_WFlit", 0, 3), Tuple3#(Meta#(MetaField#("wdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("wstrb", 1), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("wuser", 2), Conc#(Bit#(user_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_), Meta#(MetaData#("AXI4Lite_W_Master_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_W_Master_Sig", 0, 5), Tuple5#(Meta#(MetaField#("wdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("wstrb", 1), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("wuser", 2), Conc#(Bit#(user_))), Meta#(MetaField#("wvalid", 3), Conc#(Bool)), Meta#(MetaField#("wready", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_), Meta#(MetaData#("AXI4Lite_W_Slave_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_W_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("wflit", 0), Conc#(function Action f(Bool x1, Bit#(data_) x2, Bit#(TDiv#(data_, 8)) x3, Bit#(user_) x4))), Meta#(MetaField#("wready", 1), Conc#(Bool))))))} {Generic#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), Meta#(MetaData#("AXI4Lite_WriteFlit", "AXI4Lite_Types", Tuple4#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_WriteFlit", 0, 2), Tuple2#(Meta#(MetaField#("aw", 0), Conc#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))), Meta#(MetaField#("w", 1), Conc#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)))))))} {Generic#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), Meta#(MetaData#("AXI4Stream_Flit", "AXI4Stream_Types", Tuple4#(NumArg#(id_), NumArg#(data_), NumArg#(dest_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Stream_Flit", 0, 7), Tuple7#(Meta#(MetaField#("tdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("tstrb", 1), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("tkeep", 2), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("tlast", 3), Conc#(Bool)), Meta#(MetaField#("tid", 4), Conc#(Bit#(id_))), Meta#(MetaField#("tdest", 5), Conc#(Bit#(dest_))), Meta#(MetaField#("tuser", 6), Conc#(Bit#(user_)))))))} {Generic#(AXI4Stream_Types::AXI4Stream_Master_Sig#(id_, data_, dest_, user_), Meta#(MetaData#("AXI4Stream_Master_Sig", "AXI4Stream_Types", Tuple4#(NumArg#(id_), NumArg#(data_), NumArg#(dest_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Stream_Master_Sig", 0, 9), Tuple9#(Meta#(MetaField#("tdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("tstrb", 1), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("tkeep", 2), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("tlast", 3), Conc#(Bool)), Meta#(MetaField#("tid", 4), Conc#(Bit#(id_))), Meta#(MetaField#("tdest", 5), Conc#(Bit#(dest_))), Meta#(MetaField#("tuser", 6), Conc#(Bit#(user_))), Meta#(MetaField#("tvalid", 7), Conc#(Bool)), Meta#(MetaField#("tready", 8), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4Stream_Types::AXI4Stream_Shim#(id_, data_, dest_, user_), Meta#(MetaData#("AXI4Stream_Shim", "AXI4Stream_Types", Tuple4#(NumArg#(id_), NumArg#(data_), NumArg#(dest_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Stream_Shim", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("master", 1), Conc#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))), Meta#(MetaField#("slave", 2), Conc#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_)))))))} {Generic#(AXI4Stream_Types::AXI4Stream_Slave_Sig#(id_, data_, dest_, user_), Meta#(MetaData#("AXI4Stream_Slave_Sig", "AXI4Stream_Types", Tuple4#(NumArg#(id_), NumArg#(data_), NumArg#(dest_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Stream_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("tflit", 0), Conc#(function Action f(Bool x1, Bit#(data_) x2, Bit#(TDiv#(data_, 8)) x3, Bit#(TDiv#(data_, 8)) x4, Bool x5, Bit#(id_) x6, Bit#(dest_) x7, Bit#(user_) x8))), Meta#(MetaField#("tready", 1), Conc#(Bool))))))} {Generic#(AXI4_Common_Types::AXI4_Burst, Meta#(MetaData#("AXI4_Burst", "AXI4_Common_Types", void, 4), Either#(Meta#(MetaConsAnon#("FIXED", 0, 0), void), Either#(Meta#(MetaConsAnon#("INCR", 1, 0), void), Either#(Meta#(MetaConsAnon#("WRAP", 2, 0), void), Meta#(MetaConsAnon#("Res", 3, 0), void))))))} {Generic#(AXI4_Common_Types::AXI4_Lock, Meta#(MetaData#("AXI4_Lock", "AXI4_Common_Types", void, 2), Either#(Meta#(MetaConsAnon#("NORMAL", 0, 0), void), Meta#(MetaConsAnon#("EXCLUSIVE", 1, 0), void))))} {Generic#(AXI4_Common_Types::AXI4_Prot_0, Meta#(MetaData#("AXI4_Prot_0", "AXI4_Common_Types", void, 2), Either#(Meta#(MetaConsAnon#("UNPRIV", 0, 0), void), Meta#(MetaConsAnon#("PRIV", 1, 0), void))))} {Generic#(AXI4_Common_Types::AXI4_Prot_1, Meta#(MetaData#("AXI4_Prot_1", "AXI4_Common_Types", void, 2), Either#(Meta#(MetaConsAnon#("SECURE", 0, 0), void), Meta#(MetaConsAnon#("NONSECURE", 1, 0), void))))} {Generic#(AXI4_Common_Types::AXI4_Prot_2, Meta#(MetaData#("AXI4_Prot_2", "AXI4_Common_Types", void, 2), Either#(Meta#(MetaConsAnon#("DATA", 0, 0), void), Meta#(MetaConsAnon#("INST", 1, 0), void))))} {Generic#(AXI4_Common_Types::AXI4_Resp, Meta#(MetaData#("AXI4_Resp", "AXI4_Common_Types", void, 4), Either#(Meta#(MetaConsAnon#("OKAY", 0, 0), void), Either#(Meta#(MetaConsAnon#("EXOKAY", 1, 0), void), Either#(Meta#(MetaConsAnon#("SLVERR", 2, 0), void), Meta#(MetaConsAnon#("DECERR", 3, 0), void))))))} {Generic#(AXI4_Common_Types::AXI4_Size, Meta#(MetaData#("AXI4_Size", "AXI4_Common_Types", void, 1), Meta#(MetaConsNamed#("AXI4_Size", 0, 1), Meta#(MetaField#("val", 0), Conc#(Bit#(3))))))} {Generic#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_), Meta#(MetaData#("AXI4_ARFlit", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_ARFlit", 0, 11), Tuple11#(Meta#(MetaField#("arid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("araddr", 1), Conc#(Bit#(addr_))), Meta#(MetaField#("arlen", 2), Conc#(AXI4_Common_Types::AXI4_Len)), Meta#(MetaField#("arsize", 3), Conc#(AXI4_Common_Types::AXI4_Size)), Meta#(MetaField#("arburst", 4), Conc#(AXI4_Common_Types::AXI4_Burst)), Meta#(MetaField#("arlock", 5), Conc#(AXI4_Common_Types::AXI4_Lock)), Meta#(MetaField#("arcache", 6), Conc#(AXI4_Common_Types::AXI4_Cache)), Meta#(MetaField#("arprot", 7), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("arqos", 8), Conc#(AXI4_Common_Types::AXI4_QoS)), Meta#(MetaField#("arregion", 9), Conc#(AXI4_Common_Types::AXI4_Region)), Meta#(MetaField#("aruser", 10), Conc#(Bit#(user_)))))))} {Generic#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_), Meta#(MetaData#("AXI4_AR_Master_Sig", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_AR_Master_Sig", 0, 13), Tuple13#(Meta#(MetaField#("arid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("araddr", 1), Conc#(Bit#(addr_))), Meta#(MetaField#("arlen", 2), Conc#(AXI4_Common_Types::AXI4_Len)), Meta#(MetaField#("arsize", 3), Conc#(AXI4_Common_Types::AXI4_Size)), Meta#(MetaField#("arburst", 4), Conc#(AXI4_Common_Types::AXI4_Burst)), Meta#(MetaField#("arlock", 5), Conc#(AXI4_Common_Types::AXI4_Lock)), Meta#(MetaField#("arcache", 6), Conc#(AXI4_Common_Types::AXI4_Cache)), Meta#(MetaField#("arprot", 7), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("arqos", 8), Conc#(AXI4_Common_Types::AXI4_QoS)), Meta#(MetaField#("arregion", 9), Conc#(AXI4_Common_Types::AXI4_Region)), Meta#(MetaField#("aruser", 10), Conc#(Bit#(user_))), Meta#(MetaField#("arvalid", 11), Conc#(Bool)), Meta#(MetaField#("arready", 12), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_), Meta#(MetaData#("AXI4_AR_Slave_Sig", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_AR_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("arflit", 0), Conc#(function Action f(Bool x1, Bit#(id_) x2, Bit#(addr_) x3, AXI4_Common_Types::AXI4_Len x4, AXI4_Common_Types::AXI4_Size x5, AXI4_Common_Types::AXI4_Burst x6, AXI4_Common_Types::AXI4_Lock x7, AXI4_Common_Types::AXI4_Cache x8, AXI4_Common_Types::AXI4_Prot x9, AXI4_Common_Types::AXI4_QoS x10, AXI4_Common_Types::AXI4_Region x11, Bit#(user_) x12))), Meta#(MetaField#("arready", 1), Conc#(Bool))))))} {Generic#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_), Meta#(MetaData#("AXI4_AWFlit", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_AWFlit", 0, 11), Tuple11#(Meta#(MetaField#("awid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("awaddr", 1), Conc#(Bit#(addr_))), Meta#(MetaField#("awlen", 2), Conc#(AXI4_Common_Types::AXI4_Len)), Meta#(MetaField#("awsize", 3), Conc#(AXI4_Common_Types::AXI4_Size)), Meta#(MetaField#("awburst", 4), Conc#(AXI4_Common_Types::AXI4_Burst)), Meta#(MetaField#("awlock", 5), Conc#(AXI4_Common_Types::AXI4_Lock)), Meta#(MetaField#("awcache", 6), Conc#(AXI4_Common_Types::AXI4_Cache)), Meta#(MetaField#("awprot", 7), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("awqos", 8), Conc#(AXI4_Common_Types::AXI4_QoS)), Meta#(MetaField#("awregion", 9), Conc#(AXI4_Common_Types::AXI4_Region)), Meta#(MetaField#("awuser", 10), Conc#(Bit#(user_)))))))} {Generic#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_), Meta#(MetaData#("AXI4_AW_Master_Sig", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_AW_Master_Sig", 0, 13), Tuple13#(Meta#(MetaField#("awid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("awaddr", 1), Conc#(Bit#(addr_))), Meta#(MetaField#("awlen", 2), Conc#(AXI4_Common_Types::AXI4_Len)), Meta#(MetaField#("awsize", 3), Conc#(AXI4_Common_Types::AXI4_Size)), Meta#(MetaField#("awburst", 4), Conc#(AXI4_Common_Types::AXI4_Burst)), Meta#(MetaField#("awlock", 5), Conc#(AXI4_Common_Types::AXI4_Lock)), Meta#(MetaField#("awcache", 6), Conc#(AXI4_Common_Types::AXI4_Cache)), Meta#(MetaField#("awprot", 7), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("awqos", 8), Conc#(AXI4_Common_Types::AXI4_QoS)), Meta#(MetaField#("awregion", 9), Conc#(AXI4_Common_Types::AXI4_Region)), Meta#(MetaField#("awuser", 10), Conc#(Bit#(user_))), Meta#(MetaField#("awvalid", 11), Conc#(Bool)), Meta#(MetaField#("awready", 12), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_), Meta#(MetaData#("AXI4_AW_Slave_Sig", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_AW_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("awflit", 0), Conc#(function Action f(Bool x1, Bit#(id_) x2, Bit#(addr_) x3, AXI4_Common_Types::AXI4_Len x4, AXI4_Common_Types::AXI4_Size x5, AXI4_Common_Types::AXI4_Burst x6, AXI4_Common_Types::AXI4_Lock x7, AXI4_Common_Types::AXI4_Cache x8, AXI4_Common_Types::AXI4_Prot x9, AXI4_Common_Types::AXI4_QoS x10, AXI4_Common_Types::AXI4_Region x11, Bit#(user_) x12))), Meta#(MetaField#("awready", 1), Conc#(Bool))))))} {Generic#(AXI4_Types::AXI4_BFlit#(id_, user_), Meta#(MetaData#("AXI4_BFlit", "AXI4_Types", Tuple2#(NumArg#(id_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_BFlit", 0, 3), Tuple3#(Meta#(MetaField#("bid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("bresp", 1), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("buser", 2), Conc#(Bit#(user_)))))))} {Generic#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_), Meta#(MetaData#("AXI4_B_Master_Sig", "AXI4_Types", Tuple2#(NumArg#(id_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_B_Master_Sig", 0, 2), Tuple2#(Meta#(MetaField#("bflit", 0), Conc#(function Action f(Bool x1, Bit#(id_) x2, AXI4_Common_Types::AXI4_Resp x3, Bit#(user_) x4))), Meta#(MetaField#("bready", 1), Conc#(Bool))))))} {Generic#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_), Meta#(MetaData#("AXI4_B_Slave_Sig", "AXI4_Types", Tuple2#(NumArg#(id_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_B_Slave_Sig", 0, 5), Tuple5#(Meta#(MetaField#("bid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("bresp", 1), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("buser", 2), Conc#(Bit#(user_))), Meta#(MetaField#("bvalid", 3), Conc#(Bool)), Meta#(MetaField#("bready", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4_Types::AXI4_Events, Meta#(MetaData#("AXI4_Events", "AXI4_Types", void, 1), Meta#(MetaConsNamed#("AXI4_Events", 0, 7), Tuple7#(Meta#(MetaField#("evt_AW_FLIT", 0), Conc#(Bool)), Meta#(MetaField#("evt_W_FLIT", 1), Conc#(Bool)), Meta#(MetaField#("evt_W_FLIT_FINAL", 2), Conc#(Bool)), Meta#(MetaField#("evt_B_FLIT", 3), Conc#(Bool)), Meta#(MetaField#("evt_AR_FLIT", 4), Conc#(Bool)), Meta#(MetaField#("evt_R_FLIT", 5), Conc#(Bool)), Meta#(MetaField#("evt_R_FLIT_FINAL", 6), Conc#(Bool))))))} {Generic#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4_Master", "AXI4_Types", Tuple8#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4_Master", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_)))), Meta#(MetaField#("w", 1), Conc#(SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_)))), Meta#(MetaField#("b", 2), Conc#(SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_)))), Meta#(MetaField#("ar", 3), Conc#(SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_)))), Meta#(MetaField#("r", 4), Conc#(SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))))))))} {Generic#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4_Master_Sig", "AXI4_Types", Tuple8#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4_Master_Sig", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_))), Meta#(MetaField#("w", 1), Conc#(AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_))), Meta#(MetaField#("b", 2), Conc#(AXI4_Types::AXI4_B_Master_Sig#(id_, buser_))), Meta#(MetaField#("ar", 3), Conc#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_))), Meta#(MetaField#("r", 4), Conc#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)))))))} {Generic#(AXI4_Types::AXI4_RFlit#(id_, data_, user_), Meta#(MetaData#("AXI4_RFlit", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_RFlit", 0, 5), Tuple5#(Meta#(MetaField#("rid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("rdata", 1), Conc#(Bit#(data_))), Meta#(MetaField#("rresp", 2), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("rlast", 3), Conc#(Bool)), Meta#(MetaField#("ruser", 4), Conc#(Bit#(user_)))))))} {Generic#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_), Meta#(MetaData#("AXI4_R_Master_Sig", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_R_Master_Sig", 0, 2), Tuple2#(Meta#(MetaField#("rflit", 0), Conc#(function Action f(Bool x1, Bit#(id_) x2, Bit#(data_) x3, AXI4_Common_Types::AXI4_Resp x4, Bool x5, Bit#(user_) x6))), Meta#(MetaField#("rready", 1), Conc#(Bool))))))} {Generic#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_), Meta#(MetaData#("AXI4_R_Slave_Sig", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_R_Slave_Sig", 0, 7), Tuple7#(Meta#(MetaField#("rid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("rdata", 1), Conc#(Bit#(data_))), Meta#(MetaField#("rresp", 2), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("rlast", 3), Conc#(Bool)), Meta#(MetaField#("ruser", 4), Conc#(Bit#(user_))), Meta#(MetaField#("rvalid", 5), Conc#(Bool)), Meta#(MetaField#("rready", 6), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4_Types::AXI4_Shim#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4_Shim", "AXI4_Types", Tuple8#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4_Shim", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("master", 1), Conc#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))), Meta#(MetaField#("slave", 2), Conc#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)))))))} {Generic#(AXI4_Types::AXI4_Shim_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4_Shim_Sig", "AXI4_Types", Tuple8#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4_Shim_Sig", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("master", 1), Conc#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))), Meta#(MetaField#("slave", 2), Conc#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)))))))} {Generic#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4_Slave", "AXI4_Types", Tuple8#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4_Slave", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_)))), Meta#(MetaField#("w", 1), Conc#(SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_)))), Meta#(MetaField#("b", 2), Conc#(SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_)))), Meta#(MetaField#("ar", 3), Conc#(SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_)))), Meta#(MetaField#("r", 4), Conc#(SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))))))))} {Generic#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4_Slave_Sig", "AXI4_Types", Tuple8#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4_Slave_Sig", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_))), Meta#(MetaField#("w", 1), Conc#(AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_))), Meta#(MetaField#("b", 2), Conc#(AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_))), Meta#(MetaField#("ar", 3), Conc#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_))), Meta#(MetaField#("r", 4), Conc#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)))))))} {Generic#(AXI4_Types::AXI4_WFlit#(data_, user_), Meta#(MetaData#("AXI4_WFlit", "AXI4_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_WFlit", 0, 4), Tuple4#(Meta#(MetaField#("wdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("wstrb", 1), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("wlast", 2), Conc#(Bool)), Meta#(MetaField#("wuser", 3), Conc#(Bit#(user_)))))))} {Generic#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_), Meta#(MetaData#("AXI4_W_Master_Sig", "AXI4_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_W_Master_Sig", 0, 6), Tuple6#(Meta#(MetaField#("wdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("wstrb", 1), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("wlast", 2), Conc#(Bool)), Meta#(MetaField#("wuser", 3), Conc#(Bit#(user_))), Meta#(MetaField#("wvalid", 4), Conc#(Bool)), Meta#(MetaField#("wready", 5), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_), Meta#(MetaData#("AXI4_W_Slave_Sig", "AXI4_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_W_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("wflit", 0), Conc#(function Action f(Bool x1, Bit#(data_) x2, Bit#(TDiv#(data_, 8)) x3, Bool x4, Bit#(user_) x5))), Meta#(MetaField#("wready", 1), Conc#(Bool))))))} {Generic#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), Meta#(MetaData#("AXI4_WriteFlit", "AXI4_Types", Tuple5#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_)), 2), Either#(Meta#(MetaConsAnon#("FirstFlit", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))))), Meta#(MetaConsAnon#("OtherFlit", 1, 1), Meta#(MetaField#("_1", 0), Conc#(AXI4_Types::AXI4_WFlit#(data_, wuser_)))))))} {Generic#(AXI4_Utils::ReadSplitOption, Meta#(MetaData#("ReadSplitOption", "AXI4_Utils", void, 3), Either#(Meta#(MetaConsAnon#("COMBINE", 0, 0), void), Either#(Meta#(MetaConsAnon#("PAD_FIRST", 1, 0), void), Meta#(MetaConsAnon#("PAD_LAST", 2, 0), void)))))} {Generic#(AXI4_Utils::SerialiserState, Meta#(MetaData#("SerialiserState", "AXI4_Utils", void, 3), Either#(Meta#(MetaConsAnon#("IDLE", 0, 0), void), Either#(Meta#(MetaConsAnon#("BURST_WRITE", 1, 0), void), Meta#(MetaConsAnon#("WAITING", 2, 0), void)))))} {Generic#(AXI_Helpers::ReqFlit#(id_, addr_, data_, tag_), Meta#(MetaData#("ReqFlit", "AXI_Helpers", Tuple4#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(tag_)), 2), Either#(Meta#(MetaConsAnon#("Write", 0, 1), Meta#(MetaField#("_1", 0), Conc#(AXI_Helpers::WriteReqFlit#(id_, addr_, data_, tag_)))), Meta#(MetaConsAnon#("Read", 1, 1), Meta#(MetaField#("_1", 0), Conc#(AXI4_Types::AXI4_ARFlit#(id_, addr_, 0)))))))} {Generic#(AXI_Helpers::RspFlit#(id_, data_, tag_), Meta#(MetaData#("RspFlit", "AXI_Helpers", Tuple3#(NumArg#(id_), NumArg#(data_), NumArg#(tag_)), 2), Either#(Meta#(MetaConsAnon#("Write", 0, 1), Meta#(MetaField#("_1", 0), Conc#(AXI4_Types::AXI4_BFlit#(id_, 0)))), Meta#(MetaConsAnon#("Read", 1, 1), Meta#(MetaField#("_1", 0), Conc#(AXI4_Types::AXI4_RFlit#(id_, data_, tag_)))))))} {Generic#(AXI_Helpers::WriteReqFlit#(id_, addr_, data_, tag_), Meta#(MetaData#("WriteReqFlit", "AXI_Helpers", Tuple4#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(tag_)), 1), Meta#(MetaConsNamed#("WriteReqFlit", 0, 2), Tuple2#(Meta#(MetaField#("aw", 0), Conc#(AXI4_Types::AXI4_AWFlit#(id_, addr_, 0))), Meta#(MetaField#("w", 1), Conc#(AXI4_Types::AXI4_WFlit#(data_, tag_)))))))} {Generic#(ActionSeq::ActionSeq, Meta#(MetaData#("ActionSeq", "ActionSeq", void, 1), Meta#(MetaConsNamed#("ActionSeq", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(Action)), Meta#(MetaField#("done", 1), Conc#(Bool)), Meta#(MetaField#("checkDone", 2), Conc#(Action))))))} {Generic#(ActionSeq::ActionSeqN#(n), Meta#(MetaData#("ActionSeqN", "ActionSeq", NumArg#(n), 1), Meta#(MetaConsNamed#("ActionSeqN", 0, 1), Meta#(MetaField#("_actionSeq", 0), Conc#(ActionSeq::ActionSeq)))))} {Generic#(ActionValue#(a), Meta#(MetaData#("ActionValue", "Prelude", StarArg#(a), 1), Meta#(MetaConsAnon#("ActionValue", 0, 1), Meta#(MetaField#("_1", 0), Conc#(function AVStruct#(a) f(ActionWorld x1))))))} {Generic#(ActionValue_#(n), Meta#(MetaData#("ActionValue_", "Prelude", NumArg#(n), 1), Meta#(MetaConsNamed#("ActionValue_", 0, 2), Tuple2#(Meta#(MetaField#("avValue_", 0), Conc#(Bit#(n))), Meta#(MetaField#("avAction_", 1), Conc#(PrimAction))))))} {Generic#(ActionWorld, Meta#(MetaData#("ActionWorld", "Prelude", void, 1), Meta#(MetaConsAnon#("ActionWorld", 0, 0), void)))} {Generic#(AddressFlit::AFlit#(d, o), Meta#(MetaData#("AFlit", "AddressFlit", Tuple2#(NumArg#(d), NumArg#(o)), 1), Meta#(MetaConsNamed#("AFlit", 0, 2), Tuple2#(Meta#(MetaField#("data", 0), Conc#(Bit#(d))), Meta#(MetaField#("dest", 1), Conc#(Bit#(o)))))))} {Generic#(AhbArbiterSupport::AhbMonitor, Meta#(MetaData#("AhbMonitor", "AhbArbiterSupport", void, 1), Meta#(MetaConsNamed#("AhbMonitor", 0, 3), Tuple3#(Meta#(MetaField#("update", 0), Conc#(Bool)), Meta#(MetaField#("hready_in", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hresp_in", 2), Conc#(function Action f(AhbDefines::AhbResp x1)))))))} {Generic#(AhbDefines::AhbArbiter#(count, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbArbiter", "AhbDefines", Tuple6#(NumArg#(count), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbArbiter", 0, 3), Tuple3#(Meta#(MetaField#("clients", 0), Conc#(Vector::Vector#(count, Arbiter::ArbiterClient_IFC))), Meta#(MetaField#("hmaster", 1), Conc#(Maybe#(AhbDefines::LBit#(count)))), Meta#(MetaField#("handler", 2), Conc#(AhbDefines::AhbResponseHandler))))))} {Generic#(AhbDefines::AhbBurst, Meta#(MetaData#("AhbBurst", "AhbDefines", void, 8), Either#(Meta#(MetaConsAnon#("SINGLE", 0, 0), void), Either#(Meta#(MetaConsAnon#("INCR", 1, 0), void), Either#(Meta#(MetaConsAnon#("WRAP4", 2, 0), void), Either#(Meta#(MetaConsAnon#("INCR4", 3, 0), void), Either#(Meta#(MetaConsAnon#("WRAP8", 4, 0), void), Either#(Meta#(MetaConsAnon#("INCR8", 5, 0), void), Either#(Meta#(MetaConsAnon#("WRAP16", 6, 0), void), Meta#(MetaConsAnon#("INCR16", 7, 0), void))))))))))} {Generic#(AhbDefines::AhbBus#(m, s, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbBus", "AhbDefines", Tuple7#(NumArg#(m), NumArg#(s), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbBus", 0, 2), Tuple2#(Meta#(MetaField#("masters", 0), Conc#(Vector::Vector#(m, AhbDefines::AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("slaves", 1), Conc#(Vector::Vector#(s, AhbDefines::AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbCtrl", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbCtrl", 0, 6), Tuple6#(Meta#(MetaField#("command", 0), Conc#(AhbDefines::AhbWrite)), Meta#(MetaField#("size", 1), Conc#(AhbDefines::AhbSize)), Meta#(MetaField#("burst", 2), Conc#(AhbDefines::AhbBurst)), Meta#(MetaField#("transfer", 3), Conc#(AhbDefines::AhbTransfer)), Meta#(MetaField#("prot", 4), Conc#(AhbDefines::AhbProt)), Meta#(MetaField#("addr", 5), Conc#(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbInfo#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbInfo", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbInfo", 0, 1), Meta#(MetaField#("update", 0), Conc#(Bool)))))} {Generic#(AhbDefines::AhbMastCtrl#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbMastCtrl", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbMastCtrl", 0, 7), Tuple7#(Meta#(MetaField#("command", 0), Conc#(AhbDefines::AhbWrite)), Meta#(MetaField#("size", 1), Conc#(AhbDefines::AhbSize)), Meta#(MetaField#("burst", 2), Conc#(AhbDefines::AhbBurst)), Meta#(MetaField#("transfer", 3), Conc#(AhbDefines::AhbTransfer)), Meta#(MetaField#("prot", 4), Conc#(AhbDefines::AhbProt)), Meta#(MetaField#("addr", 5), Conc#(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("mast", 6), Conc#(AhbDefines::AhbSplit))))))} {Generic#(AhbDefines::AhbMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbMaster", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbMaster", 0, 10), Tuple10#(Meta#(MetaField#("haddr", 0), Conc#(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("hwdata", 1), Conc#(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("hwrite", 2), Conc#(AhbDefines::AhbWrite)), Meta#(MetaField#("htrans", 3), Conc#(AhbDefines::AhbTransfer)), Meta#(MetaField#("hburst", 4), Conc#(AhbDefines::AhbBurst)), Meta#(MetaField#("hsize", 5), Conc#(AhbDefines::AhbSize)), Meta#(MetaField#("hprot", 6), Conc#(AhbDefines::AhbProt)), Meta#(MetaField#("hrdata", 7), Conc#(function Action f(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("hready", 8), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hresp", 9), Conc#(function Action f(AhbDefines::AhbResp x1)))))))} {Generic#(AhbDefines::AhbMasterArbiter, Meta#(MetaData#("AhbMasterArbiter", "AhbDefines", void, 1), Meta#(MetaConsNamed#("AhbMasterArbiter", 0, 3), Tuple3#(Meta#(MetaField#("hbusreq", 0), Conc#(Bool)), Meta#(MetaField#("hlock", 1), Conc#(Bool)), Meta#(MetaField#("hgrant", 2), Conc#(function Action f(Bool x1)))))))} {Generic#(AhbDefines::AhbMasterArbiterDual, Meta#(MetaData#("AhbMasterArbiterDual", "AhbDefines", void, 1), Meta#(MetaConsNamed#("AhbMasterArbiterDual", 0, 3), Tuple3#(Meta#(MetaField#("hbusreq", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hlock", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hgrant", 2), Conc#(Bool))))))} {Generic#(AhbDefines::AhbMasterDual#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbMasterDual", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbMasterDual", 0, 10), Tuple10#(Meta#(MetaField#("haddr", 0), Conc#(function Action f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("hwdata", 1), Conc#(function Action f(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("hwrite", 2), Conc#(function Action f(AhbDefines::AhbWrite x1))), Meta#(MetaField#("htrans", 3), Conc#(function Action f(AhbDefines::AhbTransfer x1))), Meta#(MetaField#("hburst", 4), Conc#(function Action f(AhbDefines::AhbBurst x1))), Meta#(MetaField#("hsize", 5), Conc#(function Action f(AhbDefines::AhbSize x1))), Meta#(MetaField#("hprot", 6), Conc#(function Action f(AhbDefines::AhbProt x1))), Meta#(MetaField#("hrdata", 7), Conc#(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("hready", 8), Conc#(Bool)), Meta#(MetaField#("hresp", 9), Conc#(AhbDefines::AhbResp))))))} {Generic#(AhbDefines::AhbMasterMonitor#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbMasterMonitor", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbMasterMonitor", 0, 2), Tuple2#(Meta#(MetaField#("fabric", 0), Conc#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("info", 1), Conc#(AhbDefines::AhbInfo#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbMasterXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbMasterXActor", "AhbDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbMasterXActor", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbProt, Meta#(MetaData#("AhbProt", "AhbDefines", void, 1), Meta#(MetaConsNamed#("AhbProt", 0, 4), Tuple4#(Meta#(MetaField#("cache", 0), Conc#(TLM3Defines::TLMCache)), Meta#(MetaField#("buffer", 1), Conc#(TLM3Defines::TLMBuffer)), Meta#(MetaField#("privilege", 2), Conc#(TLM3Defines::TLMPrivilege)), Meta#(MetaField#("access", 3), Conc#(TLM3Defines::TLMAccess))))))} {Generic#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbRequest", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbRequest", 0, 2), Tuple2#(Meta#(MetaField#("ctrl", 0), Conc#(AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("data", 1), Conc#(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbResp, Meta#(MetaData#("AhbResp", "AhbDefines", void, 4), Either#(Meta#(MetaConsAnon#("OKAY", 0, 0), void), Either#(Meta#(MetaConsAnon#("ERROR", 1, 0), void), Either#(Meta#(MetaConsAnon#("RETRY", 2, 0), void), Meta#(MetaConsAnon#("SPLIT", 3, 0), void))))))} {Generic#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbResponse", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbResponse", 0, 3), Tuple3#(Meta#(MetaField#("status", 0), Conc#(AhbDefines::AhbResp)), Meta#(MetaField#("data", 1), Conc#(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("command", 2), Conc#(Maybe#(AhbDefines::AhbWrite)))))))} {Generic#(AhbDefines::AhbResponseHandler, Meta#(MetaData#("AhbResponseHandler", "AhbDefines", void, 1), Meta#(MetaConsNamed#("AhbResponseHandler", 0, 4), Tuple4#(Meta#(MetaField#("hready_in", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hresp_in", 1), Conc#(function Action f(AhbDefines::AhbResp x1))), Meta#(MetaField#("hready", 2), Conc#(Bool)), Meta#(MetaField#("hresp", 3), Conc#(AhbDefines::AhbResp))))))} {Generic#(AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbSlave", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbSlave", 0, 13), Tuple13#(Meta#(MetaField#("haddr", 0), Conc#(function Action f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("hwdata", 1), Conc#(function Action f(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("hwrite", 2), Conc#(function Action f(AhbDefines::AhbWrite x1))), Meta#(MetaField#("htrans", 3), Conc#(function Action f(AhbDefines::AhbTransfer x1))), Meta#(MetaField#("hburst", 4), Conc#(function Action f(AhbDefines::AhbBurst x1))), Meta#(MetaField#("hsize", 5), Conc#(function Action f(AhbDefines::AhbSize x1))), Meta#(MetaField#("hprot", 6), Conc#(function Action f(AhbDefines::AhbProt x1))), Meta#(MetaField#("hreadyin", 7), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hmast", 8), Conc#(function Action f(AhbDefines::AhbSplit x1))), Meta#(MetaField#("hrdata", 9), Conc#(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("hready", 10), Conc#(Bool)), Meta#(MetaField#("hresp", 11), Conc#(AhbDefines::AhbResp)), Meta#(MetaField#("hsplit", 12), Conc#(AhbDefines::AhbSplit))))))} {Generic#(AhbDefines::AhbSlaveDual#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbSlaveDual", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbSlaveDual", 0, 13), Tuple13#(Meta#(MetaField#("haddr", 0), Conc#(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("hwdata", 1), Conc#(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("hwrite", 2), Conc#(AhbDefines::AhbWrite)), Meta#(MetaField#("htrans", 3), Conc#(AhbDefines::AhbTransfer)), Meta#(MetaField#("hburst", 4), Conc#(AhbDefines::AhbBurst)), Meta#(MetaField#("hsize", 5), Conc#(AhbDefines::AhbSize)), Meta#(MetaField#("hprot", 6), Conc#(AhbDefines::AhbProt)), Meta#(MetaField#("hreadyin", 7), Conc#(Bool)), Meta#(MetaField#("hmast", 8), Conc#(AhbDefines::AhbSplit)), Meta#(MetaField#("hrdata", 9), Conc#(function Action f(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("hready", 10), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hresp", 11), Conc#(function Action f(AhbDefines::AhbResp x1))), Meta#(MetaField#("hsplit", 12), Conc#(function Action f(AhbDefines::AhbSplit x1)))))))} {Generic#(AhbDefines::AhbSlaveMonitor#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbSlaveMonitor", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbSlaveMonitor", 0, 2), Tuple2#(Meta#(MetaField#("fabric", 0), Conc#(AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("info", 1), Conc#(AhbDefines::AhbInfo#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbSlaveSelector#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbSlaveSelector", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbSlaveSelector", 0, 1), Meta#(MetaField#("select", 0), Conc#(function Action f(Bool x1))))))} {Generic#(AhbDefines::AhbSlaveSelectorDual, Meta#(MetaData#("AhbSlaveSelectorDual", "AhbDefines", void, 1), Meta#(MetaConsNamed#("AhbSlaveSelectorDual", 0, 1), Meta#(MetaField#("select", 0), Conc#(Bool)))))} {Generic#(AhbDefines::AhbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbSlaveXActor", "AhbDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbSlaveXActor", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbSlaveXActorWM", "AhbDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbSlaveXActorWM", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbTbCtrl", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbTbCtrl", 0, 7), Tuple7#(Meta#(MetaField#("command", 0), Conc#(AhbDefines::AhbWrite)), Meta#(MetaField#("size", 1), Conc#(AhbDefines::AhbSize)), Meta#(MetaField#("burst", 2), Conc#(AhbDefines::AhbBurst)), Meta#(MetaField#("transfer", 3), Conc#(AhbDefines::AhbTransfer)), Meta#(MetaField#("length", 4), Conc#(AhbDefines::AhbLength#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("prot", 5), Conc#(AhbDefines::AhbProt)), Meta#(MetaField#("addr", 6), Conc#(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbTbRequest#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbTbRequest", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbTbRequest", 0, 2), Tuple2#(Meta#(MetaField#("ctrl", 0), Conc#(AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("data", 1), Conc#(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbTransfer, Meta#(MetaData#("AhbTransfer", "AhbDefines", void, 4), Either#(Meta#(MetaConsAnon#("IDLE", 0, 0), void), Either#(Meta#(MetaConsAnon#("BUSY", 1, 0), void), Either#(Meta#(MetaConsAnon#("NONSEQ", 2, 0), void), Meta#(MetaConsAnon#("SEQ", 3, 0), void))))))} {Generic#(AhbDefines::AhbWrite, Meta#(MetaData#("AhbWrite", "AhbDefines", void, 2), Either#(Meta#(MetaConsAnon#("READ", 0, 0), void), Meta#(MetaConsAnon#("WRITE", 1, 0), void))))} {Generic#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbXtorMaster", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbXtorMaster", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(AhbDefines::AhbMaster#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("arbiter", 1), Conc#(AhbDefines::AhbMasterArbiter))))))} {Generic#(AhbDefines::AhbXtorMasterConnector#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbXtorMasterConnector", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbXtorMasterConnector", 0, 2), Tuple2#(Meta#(MetaField#("master", 0), Conc#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("dual", 1), Conc#(AhbDefines::AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbXtorMasterDual", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbXtorMasterDual", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(AhbDefines::AhbMasterDual#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("arbiter", 1), Conc#(AhbDefines::AhbMasterArbiterDual))))))} {Generic#(AhbDefines::AhbXtorRequest#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbXtorRequest", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 2), Either#(Meta#(MetaConsAnon#("Descriptor", 0, 1), Meta#(MetaField#("_1", 0), Conc#(AhbDefines::AhbTbRequest#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaConsAnon#("Data", 1, 1), Meta#(MetaField#("_1", 0), Conc#(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbXtorSlave", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbXtorSlave", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("selector", 1), Conc#(AhbDefines::AhbSlaveSelector#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbXtorSlaveConnector#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbXtorSlaveConnector", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbXtorSlaveConnector", 0, 2), Tuple2#(Meta#(MetaField#("slave", 0), Conc#(AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("dual", 1), Conc#(AhbDefines::AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AhbDefines::AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbXtorSlaveDual", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbXtorSlaveDual", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(AhbDefines::AhbSlaveDual#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("selector", 1), Conc#(AhbDefines::AhbSlaveSelectorDual))))))} {Generic#(AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbXtorSlaveWM", "AhbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbXtorSlaveWM", 0, 3), Tuple3#(Meta#(MetaField#("bus", 0), Conc#(AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("selector", 1), Conc#(AhbDefines::AhbSlaveSelector#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("addrMatch", 2), Conc#(function Bool f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)))))))} {Generic#(AhbMaster::AhbMasterIFC#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbMasterIFC", "AhbMaster", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbMasterIFC", 0, 3), Tuple3#(Meta#(MetaField#("bus", 0), Conc#(AhbDefines::AhbMaster#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("resp_current", 1), Conc#(ReadOnly#(AhbDefines::AhbResp))), Meta#(MetaField#("obj", 2), Conc#(AhbMaster::GetPut#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size), AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(AhbMaster::EBTMode, Meta#(MetaData#("EBTMode", "AhbMaster", void, 4), Either#(Meta#(MetaConsAnon#("RUN", 0, 0), void), Either#(Meta#(MetaConsAnon#("REDO_EBT", 1, 0), void), Either#(Meta#(MetaConsAnon#("REDO_RETRY", 2, 0), void), Meta#(MetaConsAnon#("WIND_DOWN", 3, 0), void))))))} {Generic#(AhbMaster::GetPut#(p, g), Meta#(MetaData#("GetPut", "AhbMaster", Tuple2#(StarArg#(p), StarArg#(g)), 1), Meta#(MetaConsNamed#("GetPut", 0, 1), Meta#(MetaField#("getput", 0), Conc#(function ActionValue#(g) f(p x1))))))} {Generic#(AhbPC::AhbPCPrms, Meta#(MetaData#("AhbPCPrms", "AhbPC", void, 1), Meta#(MetaConsNamed#("AhbPCPrms", 0, 5), Tuple5#(Meta#(MetaField#("enable_master", 0), Conc#(Bool)), Meta#(MetaField#("enable_slave", 1), Conc#(Bool)), Meta#(MetaField#("ignore_align", 2), Conc#(Bool)), Meta#(MetaField#("master", 3), Conc#(AhbPC::AhbPropTypes)), Meta#(MetaField#("slave", 4), Conc#(AhbPC::AhbPropTypes))))))} {Generic#(AhbPC::AhbPC_Ifc#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbPC_Ifc", "AhbPC", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbPC_Ifc", 0, 16), Tuple16#(Meta#(MetaField#("haddr", 0), Conc#(function Action f(AhbDefines::AhbAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("hwdata", 1), Conc#(function Action f(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("hwrite", 2), Conc#(function Action f(AhbDefines::AhbWrite x1))), Meta#(MetaField#("htrans", 3), Conc#(function Action f(AhbDefines::AhbTransfer x1))), Meta#(MetaField#("hburst", 4), Conc#(function Action f(AhbDefines::AhbBurst x1))), Meta#(MetaField#("hsize", 5), Conc#(function Action f(AhbDefines::AhbSize x1))), Meta#(MetaField#("hprot", 6), Conc#(function Action f(AhbDefines::AhbProt x1))), Meta#(MetaField#("hrdata", 7), Conc#(function Action f(AhbDefines::AhbData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("hready", 8), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hreadyOUT", 9), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hresp", 10), Conc#(function Action f(AhbDefines::AhbResp x1))), Meta#(MetaField#("hCLKEN", 11), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hgrantx", 12), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hSELx", 13), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hlockx", 14), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hMASTLOCK", 15), Conc#(function Action f(Bool x1)))))))} {Generic#(AhbPC::AhbPropTypes, Meta#(MetaData#("AhbPropTypes", "AhbPC", void, 1), Meta#(MetaConsNamed#("AhbPropTypes", 0, 7), Tuple7#(Meta#(MetaField#("err", 0), Conc#(AhbPC::FVPropType)), Meta#(MetaField#("rec", 1), Conc#(AhbPC::FVPropType)), Meta#(MetaField#("add", 2), Conc#(AhbPC::FVPropType)), Meta#(MetaField#("cfg", 3), Conc#(AhbPC::FVPropType)), Meta#(MetaField#("inf", 4), Conc#(AhbPC::FVPropType)), Meta#(MetaField#("alt", 5), Conc#(AhbPC::FVPropType)), Meta#(MetaField#("aux", 6), Conc#(AhbPC::FVPropType))))))} {Generic#(AhbPC::FVPropType, Meta#(MetaData#("FVPropType", "AhbPC", void, 4), Either#(Meta#(MetaConsAnon#("PROVE", 0, 0), void), Either#(Meta#(MetaConsAnon#("ASSUME", 1, 0), void), Either#(Meta#(MetaConsAnon#("COVER", 2, 0), void), Meta#(MetaConsAnon#("IGNORE", 3, 0), void))))))} {Generic#(AhbPC::_AhbPC.AhbPC_Ifc292#(_n0, _n1, _n2), Meta#(MetaData#("_AhbPC.AhbPC_Ifc292", "AhbPC", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_AhbPC.AhbPC_Ifc292", 0, 16), Tuple16#(Meta#(MetaField#("haddr", 0), Conc#(function ActionValue_#(_n2) f(Bit#(_n1) x1))), Meta#(MetaField#("hwdata", 1), Conc#(function ActionValue_#(_n2) f(Bit#(_n0) x1))), Meta#(MetaField#("hwrite", 2), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1))), Meta#(MetaField#("htrans", 3), Conc#(function ActionValue_#(_n2) f(Bit#(2) x1))), Meta#(MetaField#("hburst", 4), Conc#(function ActionValue_#(_n2) f(Bit#(3) x1))), Meta#(MetaField#("hsize", 5), Conc#(function ActionValue_#(_n2) f(Bit#(3) x1))), Meta#(MetaField#("hprot", 6), Conc#(function ActionValue_#(_n2) f(Bit#(4) x1))), Meta#(MetaField#("hrdata", 7), Conc#(function ActionValue_#(_n2) f(Bit#(_n0) x1))), Meta#(MetaField#("hready", 8), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1))), Meta#(MetaField#("hreadyOUT", 9), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1))), Meta#(MetaField#("hresp", 10), Conc#(function ActionValue_#(_n2) f(Bit#(2) x1))), Meta#(MetaField#("hCLKEN", 11), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1))), Meta#(MetaField#("hgrantx", 12), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1))), Meta#(MetaField#("hSELx", 13), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1))), Meta#(MetaField#("hlockx", 14), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1))), Meta#(MetaField#("hMASTLOCK", 15), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1)))))))} {Generic#(AhbSlave::AhbSlaveIFC#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbSlaveIFC", "AhbSlave", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbSlaveIFC", 0, 6), Tuple6#(Meta#(MetaField#("bus", 0), Conc#(AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("response", 1), Conc#(GetPut::Put#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("response_noready", 2), Conc#(GetPut::Put#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("request", 3), Conc#(ReadOnly#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("hmaster", 4), Conc#(ReadOnly#(AhbDefines::AhbSplit))), Meta#(MetaField#("readyin", 5), Conc#(ReadOnly#(Bool)))))))} {Generic#(AhbSlave::MFIFO#(a), Meta#(MetaData#("MFIFO", "AhbSlave", StarArg#(a), 1), Meta#(MetaConsNamed#("MFIFO", 0, 4), Tuple4#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(Bit#(0))), Meta#(MetaField#("clear", 3), Conc#(Action))))))} {Generic#(AhbSlave::MFIFO2#(a, b), Meta#(MetaData#("MFIFO2", "AhbSlave", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("MFIFO2", 0, 4), Tuple4#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1, b x2))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(b)), Meta#(MetaField#("clear", 3), Conc#(Action))))))} {Generic#(AhbToAhbBridge::AhbToAhbBridge#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AhbToAhbBridge", "AhbToAhbBridge", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AhbToAhbBridge", 0, 2), Tuple2#(Meta#(MetaField#("slave", 0), Conc#(AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("master", 1), Conc#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AlignedFIFOs::AlignedFIFO#(a), Meta#(MetaData#("AlignedFIFO", "AlignedFIFOs", StarArg#(a), 1), Meta#(MetaConsNamed#("AlignedFIFO", 0, 9), Tuple9#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("first", 1), Conc#(a)), Meta#(MetaField#("deq", 2), Conc#(Action)), Meta#(MetaField#("dNotFull", 3), Conc#(Bool)), Meta#(MetaField#("dNotEmpty", 4), Conc#(Bool)), Meta#(MetaField#("sNotFull", 5), Conc#(Bool)), Meta#(MetaField#("sNotEmpty", 6), Conc#(Bool)), Meta#(MetaField#("dClear", 7), Conc#(Action)), Meta#(MetaField#("sClear", 8), Conc#(Action))))))} {Generic#(AlignedFIFOs::RawReg#(n), Meta#(MetaData#("RawReg", "AlignedFIFOs", NumArg#(n), 1), Meta#(MetaConsNamed#("RawReg", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(n)))))))} {Generic#(AlignedFIFOs::Store#(i, a, n), Meta#(MetaData#("Store", "AlignedFIFOs", Tuple3#(StarArg#(i), StarArg#(a), NumArg#(n)), 1), Meta#(MetaConsNamed#("Store", 0, 3), Tuple3#(Meta#(MetaField#("write", 0), Conc#(function Action f(i x1, a x2))), Meta#(MetaField#("prefetch", 1), Conc#(function Action f(i x1))), Meta#(MetaField#("read", 2), Conc#(function a f(i x1)))))))} {Generic#(AlignedFIFOs::_AlignedFIFOs.RawReg60#(_n0, _n1), Meta#(MetaData#("_AlignedFIFOs.RawReg60", "AlignedFIFOs", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_AlignedFIFOs.RawReg60", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(AlteraCells::AlteraClockGen, Meta#(MetaData#("AlteraClockGen", "AlteraCells", void, 1), Meta#(MetaConsNamed#("AlteraClockGen", 0, 11), Tuple11#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout1", 1), Conc#(Clock)), Meta#(MetaField#("clkout2", 2), Conc#(Clock)), Meta#(MetaField#("clkout3", 3), Conc#(Clock)), Meta#(MetaField#("clkout4", 4), Conc#(Clock)), Meta#(MetaField#("clkout5", 5), Conc#(Clock)), Meta#(MetaField#("clkout6", 6), Conc#(Clock)), Meta#(MetaField#("clkout7", 7), Conc#(Clock)), Meta#(MetaField#("clkout8", 8), Conc#(Clock)), Meta#(MetaField#("clkout9", 9), Conc#(Clock)), Meta#(MetaField#("locked", 10), Conc#(Bool))))))} {Generic#(AlteraCells::AlteraClockGenParams, Meta#(MetaData#("AlteraClockGenParams", "AlteraCells", void, 1), Meta#(MetaConsNamed#("AlteraClockGenParams", 0, 42), Tuple42#(Meta#(MetaField#("device_family", 0), Conc#(String)), Meta#(MetaField#("clkin_period_ps", 1), Conc#(Integer)), Meta#(MetaField#("clk0_div", 2), Conc#(Integer)), Meta#(MetaField#("clk0_duty_cycle", 3), Conc#(Integer)), Meta#(MetaField#("clk0_phase_shift", 4), Conc#(String)), Meta#(MetaField#("clk0_mul", 5), Conc#(Integer)), Meta#(MetaField#("clk1_div", 6), Conc#(Integer)), Meta#(MetaField#("clk1_duty_cycle", 7), Conc#(Integer)), Meta#(MetaField#("clk1_phase_shift", 8), Conc#(String)), Meta#(MetaField#("clk1_mul", 9), Conc#(Integer)), Meta#(MetaField#("clk2_div", 10), Conc#(Integer)), Meta#(MetaField#("clk2_duty_cycle", 11), Conc#(Integer)), Meta#(MetaField#("clk2_phase_shift", 12), Conc#(String)), Meta#(MetaField#("clk2_mul", 13), Conc#(Integer)), Meta#(MetaField#("clk3_div", 14), Conc#(Integer)), Meta#(MetaField#("clk3_duty_cycle", 15), Conc#(Integer)), Meta#(MetaField#("clk3_phase_shift", 16), Conc#(String)), Meta#(MetaField#("clk3_mul", 17), Conc#(Integer)), Meta#(MetaField#("clk4_div", 18), Conc#(Integer)), Meta#(MetaField#("clk4_duty_cycle", 19), Conc#(Integer)), Meta#(MetaField#("clk4_phase_shift", 20), Conc#(String)), Meta#(MetaField#("clk4_mul", 21), Conc#(Integer)), Meta#(MetaField#("clk5_div", 22), Conc#(Integer)), Meta#(MetaField#("clk5_duty_cycle", 23), Conc#(Integer)), Meta#(MetaField#("clk5_phase_shift", 24), Conc#(String)), Meta#(MetaField#("clk5_mul", 25), Conc#(Integer)), Meta#(MetaField#("clk6_div", 26), Conc#(Integer)), Meta#(MetaField#("clk6_duty_cycle", 27), Conc#(Integer)), Meta#(MetaField#("clk6_phase_shift", 28), Conc#(String)), Meta#(MetaField#("clk6_mul", 29), Conc#(Integer)), Meta#(MetaField#("clk7_div", 30), Conc#(Integer)), Meta#(MetaField#("clk7_duty_cycle", 31), Conc#(Integer)), Meta#(MetaField#("clk7_phase_shift", 32), Conc#(String)), Meta#(MetaField#("clk7_mul", 33), Conc#(Integer)), Meta#(MetaField#("clk8_div", 34), Conc#(Integer)), Meta#(MetaField#("clk8_duty_cycle", 35), Conc#(Integer)), Meta#(MetaField#("clk8_phase_shift", 36), Conc#(String)), Meta#(MetaField#("clk8_mul", 37), Conc#(Integer)), Meta#(MetaField#("clk9_div", 38), Conc#(Integer)), Meta#(MetaField#("clk9_duty_cycle", 39), Conc#(Integer)), Meta#(MetaField#("clk9_phase_shift", 40), Conc#(String)), Meta#(MetaField#("clk9_mul", 41), Conc#(Integer))))))} {Generic#(AlteraCells::DiffClock, Meta#(MetaData#("DiffClock", "AlteraCells", void, 1), Meta#(MetaConsNamed#("DiffClock", 0, 2), Tuple2#(Meta#(MetaField#("p", 0), Conc#(Clock)), Meta#(MetaField#("n", 1), Conc#(Clock))))))} {Generic#(AlteraCells::IDDR#(a), Meta#(MetaData#("IDDR", "AlteraCells", StarArg#(a), 1), Meta#(MetaConsNamed#("IDDR", 0, 3), Tuple3#(Meta#(MetaField#("q_hi", 0), Conc#(a)), Meta#(MetaField#("q_lo", 1), Conc#(a)), Meta#(MetaField#("data_in", 2), Conc#(function Action f(a x1)))))))} {Generic#(AlteraCells::IDDRParams, Meta#(MetaData#("IDDRParams", "AlteraCells", void, 1), Meta#(MetaConsNamed#("IDDRParams", 0, 5), Tuple5#(Meta#(MetaField#("intended_device_family", 0), Conc#(String)), Meta#(MetaField#("invert_input_clocks", 1), Conc#(String)), Meta#(MetaField#("lpm_hint", 2), Conc#(String)), Meta#(MetaField#("lpm_type", 3), Conc#(String)), Meta#(MetaField#("power_up_high", 4), Conc#(String))))))} {Generic#(AlteraCells::LVDSRX, Meta#(MetaData#("LVDSRX", "AlteraCells", void, 1), Meta#(MetaConsNamed#("LVDSRX", 0, 42), Tuple42#(Meta#(MetaField#("registered_output", 0), Conc#(String)), Meta#(MetaField#("inclock_period_ps", 1), Conc#(Integer)), Meta#(MetaField#("cds_mode", 2), Conc#(String)), Meta#(MetaField#("intended_device_family", 3), Conc#(String)), Meta#(MetaField#("input_data_rate", 4), Conc#(Integer)), Meta#(MetaField#("inclock_data_alignment", 5), Conc#(String)), Meta#(MetaField#("registered_data_align_input", 6), Conc#(String)), Meta#(MetaField#("common_rx_tx_pll", 7), Conc#(String)), Meta#(MetaField#("enable_dpa_mode", 8), Conc#(String)), Meta#(MetaField#("enable_dpa_calibration", 9), Conc#(String)), Meta#(MetaField#("enable_dpa_pll_calibration", 10), Conc#(String)), Meta#(MetaField#("enable_dpa_fifo", 11), Conc#(String)), Meta#(MetaField#("use_dpll_rawperror", 12), Conc#(String)), Meta#(MetaField#("use_coreclock_input", 13), Conc#(String)), Meta#(MetaField#("dpll_lock_count", 14), Conc#(Integer)), Meta#(MetaField#("dpll_lock_window", 15), Conc#(Integer)), Meta#(MetaField#("outclock_resource", 16), Conc#(String)), Meta#(MetaField#("lose_lock_on_one_change", 17), Conc#(String)), Meta#(MetaField#("reset_fifo_at_first_lock", 18), Conc#(String)), Meta#(MetaField#("use_external_pll", 19), Conc#(String)), Meta#(MetaField#("implement_in_les", 20), Conc#(String)), Meta#(MetaField#("buffer_implementation", 21), Conc#(String)), Meta#(MetaField#("port_rx_data_align", 22), Conc#(String)), Meta#(MetaField#("port_rx_channel_data_align", 23), Conc#(String)), Meta#(MetaField#("pll_operation_mode", 24), Conc#(String)), Meta#(MetaField#("x_on_bitslip", 25), Conc#(String)), Meta#(MetaField#("use_no_phase_shift", 26), Conc#(String)), Meta#(MetaField#("rx_align_data_reg", 27), Conc#(String)), Meta#(MetaField#("inclock_phase_shift", 28), Conc#(Integer)), Meta#(MetaField#("enable_soft_cdr_mode", 29), Conc#(String)), Meta#(MetaField#("sim_dpa_output_clock_phase_shift", 30), Conc#(Integer)), Meta#(MetaField#("sim_dpa_is_negative_ppm_drift", 31), Conc#(String)), Meta#(MetaField#("sim_dpa_net_ppm_variation", 32), Conc#(Integer)), Meta#(MetaField#("enable_dpa_align_to_rising_edge_only", 33), Conc#(String)), Meta#(MetaField#("enable_dpa_initial_phase_selection", 34), Conc#(String)), Meta#(MetaField#("dpa_initial_phase_value", 35), Conc#(Integer)), Meta#(MetaField#("pll_self_reset_on_loss_lock", 36), Conc#(String)), Meta#(MetaField#("refclk_frequency", 37), Conc#(String)), Meta#(MetaField#("enable_clock_pin_mode", 38), Conc#(String)), Meta#(MetaField#("data_rate", 39), Conc#(String)), Meta#(MetaField#("lpm_hint", 40), Conc#(String)), Meta#(MetaField#("lpm_type", 41), Conc#(String))))))} {Generic#(AlteraCells::LVDSTX, Meta#(MetaData#("LVDSTX", "AlteraCells", void, 1), Meta#(MetaConsNamed#("LVDSTX", 0, 27), Tuple27#(Meta#(MetaField#("registered_input", 0), Conc#(String)), Meta#(MetaField#("multi_clock", 1), Conc#(String)), Meta#(MetaField#("inclock_period_ps", 2), Conc#(Integer)), Meta#(MetaField#("center_align_msb", 3), Conc#(String)), Meta#(MetaField#("intended_device_family", 4), Conc#(String)), Meta#(MetaField#("output_data_rate", 5), Conc#(Integer)), Meta#(MetaField#("inclock_data_alignment", 6), Conc#(String)), Meta#(MetaField#("outclock_alignment", 7), Conc#(String)), Meta#(MetaField#("common_rx_tx_pll", 8), Conc#(String)), Meta#(MetaField#("outclock_resource", 9), Conc#(String)), Meta#(MetaField#("use_external_pll", 10), Conc#(String)), Meta#(MetaField#("implement_in_les", 11), Conc#(String)), Meta#(MetaField#("preemphasis_setting", 12), Conc#(Integer)), Meta#(MetaField#("vod_setting", 13), Conc#(Integer)), Meta#(MetaField#("differential_drive", 14), Conc#(Integer)), Meta#(MetaField#("outclock_multiply_by", 15), Conc#(Integer)), Meta#(MetaField#("coreclock_divide_by", 16), Conc#(Integer)), Meta#(MetaField#("outclock_duty_cycle", 17), Conc#(Integer)), Meta#(MetaField#("inclock_phase_shift", 18), Conc#(Integer)), Meta#(MetaField#("outclock_phase_shift", 19), Conc#(Integer)), Meta#(MetaField#("use_no_phase_shift", 20), Conc#(String)), Meta#(MetaField#("pll_self_reset_on_loss_lock", 21), Conc#(String)), Meta#(MetaField#("refclk_frequency", 22), Conc#(String)), Meta#(MetaField#("data_rate", 23), Conc#(String)), Meta#(MetaField#("lpm_type", 24), Conc#(String)), Meta#(MetaField#("lpm_hint", 25), Conc#(String)), Meta#(MetaField#("clk_src_is_pll", 26), Conc#(String))))))} {Generic#(AlteraCells::ODDR#(a), Meta#(MetaData#("ODDR", "AlteraCells", StarArg#(a), 1), Meta#(MetaConsNamed#("ODDR", 0, 3), Tuple3#(Meta#(MetaField#("q", 0), Conc#(a)), Meta#(MetaField#("data_hi", 1), Conc#(function Action f(a x1))), Meta#(MetaField#("data_lo", 2), Conc#(function Action f(a x1)))))))} {Generic#(AlteraCells::ODDRParams, Meta#(MetaData#("ODDRParams", "AlteraCells", void, 1), Meta#(MetaConsNamed#("ODDRParams", 0, 7), Tuple7#(Meta#(MetaField#("extend_oe_disable", 0), Conc#(String)), Meta#(MetaField#("intended_device_family", 1), Conc#(String)), Meta#(MetaField#("invert_output", 2), Conc#(String)), Meta#(MetaField#("lpm_hint", 3), Conc#(String)), Meta#(MetaField#("lpm_type", 4), Conc#(String)), Meta#(MetaField#("oe_reg", 5), Conc#(String)), Meta#(MetaField#("power_up_high", 6), Conc#(String))))))} {Generic#(AlteraCells::SERDES_RX#(in, out), Meta#(MetaData#("SERDES_RX", "AlteraCells", Tuple2#(StarArg#(in), StarArg#(out)), 1), Meta#(MetaConsNamed#("SERDES_RX", 0, 4), Tuple4#(Meta#(MetaField#("outclk", 0), Conc#(Clock)), Meta#(MetaField#("pins_in", 1), Conc#(function Action f(in x1))), Meta#(MetaField#("pins_out", 2), Conc#(out)), Meta#(MetaField#("locked", 3), Conc#(Bool))))))} {Generic#(AlteraCells::SERDES_TX#(in, out), Meta#(MetaData#("SERDES_TX", "AlteraCells", Tuple2#(StarArg#(in), StarArg#(out)), 1), Meta#(MetaConsNamed#("SERDES_TX", 0, 5), Tuple5#(Meta#(MetaField#("coreclk", 0), Conc#(Clock)), Meta#(MetaField#("outclk", 1), Conc#(Clock)), Meta#(MetaField#("pins_in", 2), Conc#(function Action f(in x1))), Meta#(MetaField#("pins_out", 3), Conc#(out)), Meta#(MetaField#("locked", 4), Conc#(Bool))))))} {Generic#(AlteraCells::_AlteraCells.AlteraClockGen158, Meta#(MetaData#("_AlteraCells.AlteraClockGen158", "AlteraCells", void, 1), Meta#(MetaConsNamed#("_AlteraCells.AlteraClockGen158", 0, 11), Tuple11#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout1", 1), Conc#(Clock)), Meta#(MetaField#("clkout2", 2), Conc#(Clock)), Meta#(MetaField#("clkout3", 3), Conc#(Clock)), Meta#(MetaField#("clkout4", 4), Conc#(Clock)), Meta#(MetaField#("clkout5", 5), Conc#(Clock)), Meta#(MetaField#("clkout6", 6), Conc#(Clock)), Meta#(MetaField#("clkout7", 7), Conc#(Clock)), Meta#(MetaField#("clkout8", 8), Conc#(Clock)), Meta#(MetaField#("clkout9", 9), Conc#(Clock)), Meta#(MetaField#("locked", 10), Conc#(Bit#(1)))))))} {Generic#(AlteraCells::_AlteraCells.DiffClock307, Meta#(MetaData#("_AlteraCells.DiffClock307", "AlteraCells", void, 1), Meta#(MetaConsNamed#("_AlteraCells.DiffClock307", 0, 2), Tuple2#(Meta#(MetaField#("p", 0), Conc#(Clock)), Meta#(MetaField#("n", 1), Conc#(Clock))))))} {Generic#(AlteraCells::_AlteraCells.IDDR459#(_n0, _n1), Meta#(MetaData#("_AlteraCells.IDDR459", "AlteraCells", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_AlteraCells.IDDR459", 0, 3), Tuple3#(Meta#(MetaField#("q_hi", 0), Conc#(Bit#(_n1))), Meta#(MetaField#("q_lo", 1), Conc#(Bit#(_n1))), Meta#(MetaField#("data_in", 2), Conc#(function ActionValue_#(_n0) f(Bit#(_n1) x1)))))))} {Generic#(AlteraCells::_AlteraCells.ODDR360#(_n0, _n1), Meta#(MetaData#("_AlteraCells.ODDR360", "AlteraCells", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_AlteraCells.ODDR360", 0, 3), Tuple3#(Meta#(MetaField#("q", 0), Conc#(Bit#(_n1))), Meta#(MetaField#("data_hi", 1), Conc#(function ActionValue_#(_n0) f(Bit#(_n1) x1))), Meta#(MetaField#("data_lo", 2), Conc#(function ActionValue_#(_n0) f(Bit#(_n1) x1)))))))} {Generic#(AlteraCells::_AlteraCells.SERDES_RX755#(_n0, _n1, _n2), Meta#(MetaData#("_AlteraCells.SERDES_RX755", "AlteraCells", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_AlteraCells.SERDES_RX755", 0, 4), Tuple4#(Meta#(MetaField#("outclk", 0), Conc#(Clock)), Meta#(MetaField#("pins_in", 1), Conc#(function ActionValue_#(_n2) f(Bit#(_n1) x1))), Meta#(MetaField#("pins_out", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("locked", 3), Conc#(Bit#(1)))))))} {Generic#(AlteraCells::_AlteraCells.SERDES_TX568#(_n0, _n1, _n2), Meta#(MetaData#("_AlteraCells.SERDES_TX568", "AlteraCells", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_AlteraCells.SERDES_TX568", 0, 5), Tuple5#(Meta#(MetaField#("coreclk", 0), Conc#(Clock)), Meta#(MetaField#("outclk", 1), Conc#(Clock)), Meta#(MetaField#("pins_in", 2), Conc#(function ActionValue_#(_n2) f(Bit#(_n1) x1))), Meta#(MetaField#("pins_out", 3), Conc#(Bit#(_n0))), Meta#(MetaField#("locked", 4), Conc#(Bit#(1)))))))} {Generic#(AlteraCells::_Clocks.ClockGenIfc281, Meta#(MetaData#("_Clocks.ClockGenIfc281", "AlteraCells", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc281", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(AlteraCells::_Clocks.ClockGenIfc400, Meta#(MetaData#("_Clocks.ClockGenIfc400", "AlteraCells", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc400", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(ApbDefines::ApbBus#(s, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbBus", "ApbDefines", Tuple6#(NumArg#(s), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbBus", 0, 2), Tuple2#(Meta#(MetaField#("master", 0), Conc#(ApbDefines::ApbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("slaves", 1), Conc#(Vector::Vector#(s, ApbDefines::ApbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbCtrl", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbCtrl", 0, 3), Tuple3#(Meta#(MetaField#("command", 0), Conc#(ApbDefines::ApbWrite)), Meta#(MetaField#("addr", 1), Conc#(ApbDefines::ApbAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("prot", 2), Conc#(ApbDefines::ApbProt))))))} {Generic#(ApbDefines::ApbInfo#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbInfo", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbInfo", 0, 1), Meta#(MetaField#("update", 0), Conc#(Bool)))))} {Generic#(ApbDefines::ApbMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbMaster", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbMaster", 0, 10), Tuple10#(Meta#(MetaField#("paddr", 0), Conc#(ApbDefines::ApbAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("pprot", 1), Conc#(ApbDefines::ApbProt)), Meta#(MetaField#("penable", 2), Conc#(Bool)), Meta#(MetaField#("pwrite", 3), Conc#(ApbDefines::ApbWrite)), Meta#(MetaField#("pwdata", 4), Conc#(ApbDefines::ApbData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("pstrb", 5), Conc#(ApbDefines::ApbByteEn#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("psel", 6), Conc#(Bool)), Meta#(MetaField#("pready", 7), Conc#(function Action f(Bool x1))), Meta#(MetaField#("prdata", 8), Conc#(function Action f(ApbDefines::ApbData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("pslverr", 9), Conc#(function Action f(Bool x1)))))))} {Generic#(ApbDefines::ApbMasterDual#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbMasterDual", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbMasterDual", 0, 10), Tuple10#(Meta#(MetaField#("paddr", 0), Conc#(function Action f(ApbDefines::ApbAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("pprot", 1), Conc#(function Action f(ApbDefines::ApbProt x1))), Meta#(MetaField#("penable", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("pwrite", 3), Conc#(function Action f(ApbDefines::ApbWrite x1))), Meta#(MetaField#("pwdata", 4), Conc#(function Action f(ApbDefines::ApbData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("pstrb", 5), Conc#(function Action f(ApbDefines::ApbByteEn#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("psel", 6), Conc#(function Action f(Bool x1))), Meta#(MetaField#("pready", 7), Conc#(Bool)), Meta#(MetaField#("prdata", 8), Conc#(ApbDefines::ApbData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("pslverr", 9), Conc#(Bool))))))} {Generic#(ApbDefines::ApbMasterMonitor#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbMasterMonitor", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbMasterMonitor", 0, 2), Tuple2#(Meta#(MetaField#("fabric", 0), Conc#(ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("info", 1), Conc#(ApbDefines::ApbInfo#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(ApbDefines::ApbMasterXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbMasterXActor", "ApbDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbMasterXActor", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(ApbDefines::ApbProt, Meta#(MetaData#("ApbProt", "ApbDefines", void, 1), Meta#(MetaConsNamed#("ApbProt", 0, 3), Tuple3#(Meta#(MetaField#("access", 0), Conc#(TLM3Defines::TLMAccess)), Meta#(MetaField#("security", 1), Conc#(TLM3Defines::TLMSecurity)), Meta#(MetaField#("privilege", 2), Conc#(TLM3Defines::TLMPrivilege))))))} {Generic#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbRequest", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbRequest", 0, 3), Tuple3#(Meta#(MetaField#("ctrl", 0), Conc#(ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("strb", 1), Conc#(ApbDefines::ApbByteEn#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("data", 2), Conc#(ApbDefines::ApbData#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbResponse", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbResponse", 0, 2), Tuple2#(Meta#(MetaField#("error", 0), Conc#(Bool)), Meta#(MetaField#("data", 1), Conc#(ApbDefines::ApbData#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbSlave", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbSlave", 0, 10), Tuple10#(Meta#(MetaField#("pready", 0), Conc#(Bool)), Meta#(MetaField#("prdata", 1), Conc#(ApbDefines::ApbData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("pslverr", 2), Conc#(Bool)), Meta#(MetaField#("paddr", 3), Conc#(function Action f(ApbDefines::ApbAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("pprot", 4), Conc#(function Action f(ApbDefines::ApbProt x1))), Meta#(MetaField#("penable", 5), Conc#(function Action f(Bool x1))), Meta#(MetaField#("pwrite", 6), Conc#(function Action f(ApbDefines::ApbWrite x1))), Meta#(MetaField#("pwdata", 7), Conc#(function Action f(ApbDefines::ApbData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("pstrb", 8), Conc#(function Action f(ApbDefines::ApbByteEn#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("psel", 9), Conc#(function Action f(Bool x1)))))))} {Generic#(ApbDefines::ApbSlaveDual#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbSlaveDual", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbSlaveDual", 0, 10), Tuple10#(Meta#(MetaField#("pready", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("prdata", 1), Conc#(function Action f(ApbDefines::ApbData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("pslverr", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("paddr", 3), Conc#(ApbDefines::ApbAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("pprot", 4), Conc#(ApbDefines::ApbProt)), Meta#(MetaField#("penable", 5), Conc#(Bool)), Meta#(MetaField#("pwrite", 6), Conc#(ApbDefines::ApbWrite)), Meta#(MetaField#("pwdata", 7), Conc#(ApbDefines::ApbData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("pstrb", 8), Conc#(ApbDefines::ApbByteEn#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("psel", 9), Conc#(Bool))))))} {Generic#(ApbDefines::ApbSlaveMonitor#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbSlaveMonitor", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbSlaveMonitor", 0, 2), Tuple2#(Meta#(MetaField#("fabric", 0), Conc#(ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("info", 1), Conc#(ApbDefines::ApbInfo#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(ApbDefines::ApbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbSlaveXActor", "ApbDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbSlaveXActor", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(ApbDefines::ApbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbSlaveXActorWM", "ApbDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbSlaveXActorWM", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(ApbDefines::ApbWrite, Meta#(MetaData#("ApbWrite", "ApbDefines", void, 2), Either#(Meta#(MetaConsAnon#("READ", 0, 0), void), Meta#(MetaConsAnon#("WRITE", 1, 0), void))))} {Generic#(ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbXtorMaster", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbXtorMaster", 0, 1), Meta#(MetaField#("bus", 0), Conc#(ApbDefines::ApbMaster#(id_size, addr_size, data_size, length_size, user_size))))))} {Generic#(ApbDefines::ApbXtorMasterConnector#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbXtorMasterConnector", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbXtorMasterConnector", 0, 2), Tuple2#(Meta#(MetaField#("master", 0), Conc#(ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("dual", 1), Conc#(ApbDefines::ApbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(ApbDefines::ApbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbXtorMasterDual", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbXtorMasterDual", 0, 1), Meta#(MetaField#("bus", 0), Conc#(ApbDefines::ApbMasterDual#(id_size, addr_size, data_size, length_size, user_size))))))} {Generic#(ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbXtorSlave", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbXtorSlave", 0, 1), Meta#(MetaField#("bus", 0), Conc#(ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size))))))} {Generic#(ApbDefines::ApbXtorSlaveConnector#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbXtorSlaveConnector", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbXtorSlaveConnector", 0, 2), Tuple2#(Meta#(MetaField#("slave", 0), Conc#(ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("dual", 1), Conc#(ApbDefines::ApbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(ApbDefines::ApbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbXtorSlaveDual", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbXtorSlaveDual", 0, 1), Meta#(MetaField#("bus", 0), Conc#(ApbDefines::ApbSlaveDual#(id_size, addr_size, data_size, length_size, user_size))))))} {Generic#(ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbXtorSlaveWM", "ApbDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbXtorSlaveWM", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("addrMatch", 1), Conc#(function Bool f(ApbDefines::ApbAddr#(id_size, addr_size, data_size, length_size, user_size) x1)))))))} {Generic#(ApbSlave::ApbSlaveIFC#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("ApbSlaveIFC", "ApbSlave", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("ApbSlaveIFC", 0, 5), Tuple5#(Meta#(MetaField#("bus", 0), Conc#(ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("response", 1), Conc#(GetPut::Put#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("request", 2), Conc#(ReadOnly#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("penable", 3), Conc#(ReadOnly#(Bool))), Meta#(MetaField#("psel", 4), Conc#(ReadOnly#(Bool)))))))} {Generic#(ApbSlave::ApbState, Meta#(MetaData#("ApbState", "ApbSlave", void, 3), Either#(Meta#(MetaConsAnon#("IDLE", 0, 0), void), Either#(Meta#(MetaConsAnon#("SETUP", 1, 0), void), Meta#(MetaConsAnon#("ACCESS", 2, 0), void)))))} {Generic#(Arbiter::ArbiterClient_IFC, Meta#(MetaData#("ArbiterClient_IFC", "Arbiter", void, 1), Meta#(MetaConsNamed#("ArbiterClient_IFC", 0, 3), Tuple3#(Meta#(MetaField#("request", 0), Conc#(Action)), Meta#(MetaField#("lock", 1), Conc#(Action)), Meta#(MetaField#("grant", 2), Conc#(Bool))))))} {Generic#(Arbiter::ArbiterRequest_IFC, Meta#(MetaData#("ArbiterRequest_IFC", "Arbiter", void, 1), Meta#(MetaConsNamed#("ArbiterRequest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("request", 0), Conc#(Bool)), Meta#(MetaField#("lock", 1), Conc#(Bool)), Meta#(MetaField#("grant", 2), Conc#(Action))))))} {Generic#(Arbiter::Arbiter_IFC#(count), Meta#(MetaData#("Arbiter_IFC", "Arbiter", NumArg#(count), 1), Meta#(MetaConsNamed#("Arbiter_IFC", 0, 2), Tuple2#(Meta#(MetaField#("clients", 0), Conc#(Vector::Vector#(count, Arbiter::ArbiterClient_IFC))), Meta#(MetaField#("grant_id", 1), Conc#(Bit#(TLog#(count))))))))} {Generic#(Arbitrate::Arbiter#(ports, request, response), Meta#(MetaData#("Arbiter", "Arbitrate", Tuple3#(NumArg#(ports), StarArg#(request), StarArg#(response)), 1), Meta#(MetaConsNamed#("Arbiter", 0, 2), Tuple2#(Meta#(MetaField#("users", 0), Conc#(Vector::Vector#(ports, ClientServer::Server#(request, response)))), Meta#(MetaField#("master", 1), Conc#(ClientServer::Client#(request, response)))))))} {Generic#(Arbitrate::Arbitrate#(size), Meta#(MetaData#("Arbitrate", "Arbitrate", NumArg#(size), 1), Meta#(MetaConsNamed#("Arbitrate", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(function Action f(Vector::Vector#(size, Bool) x1))), Meta#(MetaField#("grant", 1), Conc#(Vector::Vector#(size, Bool)))))))} {Generic#(Array#(_v100), ConcPrim#(Array#(_v100)))} {Generic#(Attributes__, ConcPrim#(Attributes__))} {Generic#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4AddrCmd", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4AddrCmd", 0, 11), Tuple11#(Meta#(MetaField#("id", 0), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("len", 1), Conc#(Axi4Defines::Axi4Len)), Meta#(MetaField#("size", 2), Conc#(AxiDefines::AxiSize)), Meta#(MetaField#("burst", 3), Conc#(AxiDefines::AxiBurst)), Meta#(MetaField#("lock", 4), Conc#(Axi4Defines::Axi4Lock)), Meta#(MetaField#("cache", 5), Conc#(Axi4Defines::Axi4Cache)), Meta#(MetaField#("prot", 6), Conc#(AxiDefines::AxiProt)), Meta#(MetaField#("qos", 7), Conc#(Axi4Defines::Axi4Qos)), Meta#(MetaField#("addr", 8), Conc#(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("region", 9), Conc#(Axi4Defines::Axi4Region)), Meta#(MetaField#("user_addr", 10), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4Defines::Axi4Cache, Meta#(MetaData#("Axi4Cache", "Axi4Defines", void, 1), Meta#(MetaConsNamed#("Axi4Cache", 0, 4), Tuple4#(Meta#(MetaField#("allocate", 0), Conc#(TLM3Defines::TLMAllocate)), Meta#(MetaField#("other_allocate", 1), Conc#(TLM3Defines::TLMAllocate)), Meta#(MetaField#("modify", 2), Conc#(TLM3Defines::TLMModify)), Meta#(MetaField#("buffer", 3), Conc#(TLM3Defines::TLMBuffer))))))} {Generic#(Axi4Defines::Axi4Lock, Meta#(MetaData#("Axi4Lock", "Axi4Defines", void, 2), Either#(Meta#(MetaConsAnon#("NORMAL", 0, 0), void), Meta#(MetaConsAnon#("EXCLUSIVE", 1, 0), void))))} {Generic#(Axi4Defines::Axi4RdBusMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdBusMaster", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdBusMaster", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("resp", 1), Conc#(BusDefines::BusRecv#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(Axi4Defines::Axi4RdBusSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdBusSlave", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdBusSlave", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("resp", 1), Conc#(BusDefines::BusSend#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdFabricMaster", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdFabricMaster", 0, 1), Meta#(MetaField#("bus", 0), Conc#(Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size))))))} {Generic#(Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdFabricSlave", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdFabricSlave", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("addrMatch", 1), Conc#(function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)))))))} {Generic#(Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdMaster", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdMaster", 0, 19), Tuple19#(Meta#(MetaField#("arID", 0), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("arADDR", 1), Conc#(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("arUSER", 2), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("arLEN", 3), Conc#(Axi4Defines::Axi4Len)), Meta#(MetaField#("arSIZE", 4), Conc#(AxiDefines::AxiSize)), Meta#(MetaField#("arBURST", 5), Conc#(AxiDefines::AxiBurst)), Meta#(MetaField#("arLOCK", 6), Conc#(Axi4Defines::Axi4Lock)), Meta#(MetaField#("arCACHE", 7), Conc#(Axi4Defines::Axi4Cache)), Meta#(MetaField#("arPROT", 8), Conc#(AxiDefines::AxiProt)), Meta#(MetaField#("arQOS", 9), Conc#(Axi4Defines::Axi4Qos)), Meta#(MetaField#("arVALID", 10), Conc#(Bool)), Meta#(MetaField#("arREADY", 11), Conc#(function Action f(Bool x1))), Meta#(MetaField#("rREADY", 12), Conc#(Bool)), Meta#(MetaField#("rID", 13), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("rDATA", 14), Conc#(function Action f(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("rRESP", 15), Conc#(function Action f(AxiDefines::AxiResp x1))), Meta#(MetaField#("rUSER", 16), Conc#(function Action f(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("rLAST", 17), Conc#(function Action f(Bool x1))), Meta#(MetaField#("rVALID", 18), Conc#(function Action f(Bool x1)))))))} {Generic#(Axi4Defines::Axi4RdMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdMasterXActorIFC", "Axi4Defines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdMasterXActorIFC", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdResp", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdResp", 0, 5), Tuple5#(Meta#(MetaField#("id", 0), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("data", 1), Conc#(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("resp", 2), Conc#(AxiDefines::AxiResp)), Meta#(MetaField#("user", 3), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("last", 4), Conc#(Bool))))))} {Generic#(Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdSlave", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdSlave", 0, 20), Tuple20#(Meta#(MetaField#("arID", 0), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("arADDR", 1), Conc#(function Action f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("arREGION", 2), Conc#(function Action f(Axi4Defines::Axi4Region x1))), Meta#(MetaField#("arUSER", 3), Conc#(function Action f(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("arLEN", 4), Conc#(function Action f(Axi4Defines::Axi4Len x1))), Meta#(MetaField#("arSIZE", 5), Conc#(function Action f(AxiDefines::AxiSize x1))), Meta#(MetaField#("arBURST", 6), Conc#(function Action f(AxiDefines::AxiBurst x1))), Meta#(MetaField#("arLOCK", 7), Conc#(function Action f(Axi4Defines::Axi4Lock x1))), Meta#(MetaField#("arCACHE", 8), Conc#(function Action f(Axi4Defines::Axi4Cache x1))), Meta#(MetaField#("arPROT", 9), Conc#(function Action f(AxiDefines::AxiProt x1))), Meta#(MetaField#("arQOS", 10), Conc#(function Action f(Axi4Defines::Axi4Qos x1))), Meta#(MetaField#("arVALID", 11), Conc#(function Action f(Bool x1))), Meta#(MetaField#("arREADY", 12), Conc#(Bool)), Meta#(MetaField#("rREADY", 13), Conc#(function Action f(Bool x1))), Meta#(MetaField#("rID", 14), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("rDATA", 15), Conc#(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("rRESP", 16), Conc#(AxiDefines::AxiResp)), Meta#(MetaField#("rUSER", 17), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("rLAST", 18), Conc#(Bool)), Meta#(MetaField#("rVALID", 19), Conc#(Bool))))))} {Generic#(Axi4Defines::Axi4RdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdSlaveXActorIFC", "Axi4Defines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdSlaveXActorIFC", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4Defines::Axi4RdWrMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdWrMaster", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdWrMaster", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("write", 1), Conc#(Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4Defines::Axi4RdWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdWrMasterXActorIFC", "Axi4Defines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdWrMasterXActorIFC", 0, 3), Tuple3#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("read", 1), Conc#(Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("write", 2), Conc#(Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4Defines::Axi4RdWrSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdWrSlave", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdWrSlave", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("write", 1), Conc#(Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4Defines::Axi4RdWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4RdWrSlaveXActorIFC", "Axi4Defines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4RdWrSlaveXActorIFC", 0, 3), Tuple3#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("read", 1), Conc#(Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("write", 2), Conc#(Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4Defines::Axi4WrBusMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4WrBusMaster", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4WrBusMaster", 0, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("data", 1), Conc#(BusDefines::BusSend#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("resp", 2), Conc#(BusDefines::BusRecv#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(Axi4Defines::Axi4WrBusSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4WrBusSlave", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4WrBusSlave", 0, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("data", 1), Conc#(BusDefines::BusRecv#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("resp", 2), Conc#(BusDefines::BusSend#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4WrData", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4WrData", 0, 4), Tuple4#(Meta#(MetaField#("data", 0), Conc#(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("user", 1), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("strb", 2), Conc#(AxiDefines::AxiByteEn#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("last", 3), Conc#(Bool))))))} {Generic#(Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4WrFabricMaster", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4WrFabricMaster", 0, 1), Meta#(MetaField#("bus", 0), Conc#(Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size))))))} {Generic#(Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4WrFabricSlave", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4WrFabricSlave", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("addrMatch", 1), Conc#(function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)))))))} {Generic#(Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4WrMaster", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4WrMaster", 0, 23), Tuple23#(Meta#(MetaField#("awID", 0), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("awADDR", 1), Conc#(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("awUSER", 2), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("awLEN", 3), Conc#(Axi4Defines::Axi4Len)), Meta#(MetaField#("awSIZE", 4), Conc#(AxiDefines::AxiSize)), Meta#(MetaField#("awBURST", 5), Conc#(AxiDefines::AxiBurst)), Meta#(MetaField#("awLOCK", 6), Conc#(Axi4Defines::Axi4Lock)), Meta#(MetaField#("awCACHE", 7), Conc#(Axi4Defines::Axi4Cache)), Meta#(MetaField#("awPROT", 8), Conc#(AxiDefines::AxiProt)), Meta#(MetaField#("awQOS", 9), Conc#(Axi4Defines::Axi4Qos)), Meta#(MetaField#("awVALID", 10), Conc#(Bool)), Meta#(MetaField#("awREADY", 11), Conc#(function Action f(Bool x1))), Meta#(MetaField#("wDATA", 12), Conc#(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("wUSER", 13), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("wSTRB", 14), Conc#(AxiDefines::AxiByteEn#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("wLAST", 15), Conc#(Bool)), Meta#(MetaField#("wVALID", 16), Conc#(Bool)), Meta#(MetaField#("wREADY", 17), Conc#(function Action f(Bool x1))), Meta#(MetaField#("bREADY", 18), Conc#(Bool)), Meta#(MetaField#("bID", 19), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("bRESP", 20), Conc#(function Action f(AxiDefines::AxiResp x1))), Meta#(MetaField#("bUSER", 21), Conc#(function Action f(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("bVALID", 22), Conc#(function Action f(Bool x1)))))))} {Generic#(Axi4Defines::Axi4WrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4WrMasterXActorIFC", "Axi4Defines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4WrMasterXActorIFC", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4WrResp", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4WrResp", 0, 3), Tuple3#(Meta#(MetaField#("id", 0), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("resp", 1), Conc#(AxiDefines::AxiResp)), Meta#(MetaField#("user", 2), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4WrSlave", "Axi4Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4WrSlave", 0, 24), Tuple24#(Meta#(MetaField#("awID", 0), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("awADDR", 1), Conc#(function Action f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("awREGION", 2), Conc#(function Action f(Axi4Defines::Axi4Region x1))), Meta#(MetaField#("awUSER", 3), Conc#(function Action f(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("awLEN", 4), Conc#(function Action f(Axi4Defines::Axi4Len x1))), Meta#(MetaField#("awSIZE", 5), Conc#(function Action f(AxiDefines::AxiSize x1))), Meta#(MetaField#("awBURST", 6), Conc#(function Action f(AxiDefines::AxiBurst x1))), Meta#(MetaField#("awLOCK", 7), Conc#(function Action f(Axi4Defines::Axi4Lock x1))), Meta#(MetaField#("awCACHE", 8), Conc#(function Action f(Axi4Defines::Axi4Cache x1))), Meta#(MetaField#("awPROT", 9), Conc#(function Action f(AxiDefines::AxiProt x1))), Meta#(MetaField#("awQOS", 10), Conc#(function Action f(Axi4Defines::Axi4Qos x1))), Meta#(MetaField#("awVALID", 11), Conc#(function Action f(Bool x1))), Meta#(MetaField#("awREADY", 12), Conc#(Bool)), Meta#(MetaField#("wDATA", 13), Conc#(function Action f(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("wUSER", 14), Conc#(function Action f(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("wSTRB", 15), Conc#(function Action f(AxiDefines::AxiByteEn#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("wLAST", 16), Conc#(function Action f(Bool x1))), Meta#(MetaField#("wVALID", 17), Conc#(function Action f(Bool x1))), Meta#(MetaField#("wREADY", 18), Conc#(Bool)), Meta#(MetaField#("bREADY", 19), Conc#(function Action f(Bool x1))), Meta#(MetaField#("bID", 20), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("bRESP", 21), Conc#(AxiDefines::AxiResp)), Meta#(MetaField#("bUSER", 22), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("bVALID", 23), Conc#(Bool))))))} {Generic#(Axi4Defines::Axi4WrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4WrSlaveXActorIFC", "Axi4Defines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4WrSlaveXActorIFC", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LAddrCmd", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LAddrCmd", 0, 2), Tuple2#(Meta#(MetaField#("prot", 0), Conc#(AxiDefines::AxiProt)), Meta#(MetaField#("addr", 1), Conc#(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4LDefines::Axi4LRdBusMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdBusMaster", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdBusMaster", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("resp", 1), Conc#(BusDefines::BusRecv#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(Axi4LDefines::Axi4LRdBusSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdBusSlave", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdBusSlave", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("resp", 1), Conc#(BusDefines::BusSend#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdFabricMaster", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdFabricMaster", 0, 1), Meta#(MetaField#("bus", 0), Conc#(Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size))))))} {Generic#(Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdFabricSlave", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdFabricSlave", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("addrMatch", 1), Conc#(function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)))))))} {Generic#(Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdMaster", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdMaster", 0, 8), Tuple8#(Meta#(MetaField#("arADDR", 0), Conc#(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("arPROT", 1), Conc#(AxiDefines::AxiProt)), Meta#(MetaField#("arVALID", 2), Conc#(Bool)), Meta#(MetaField#("arREADY", 3), Conc#(function Action f(Bool x1))), Meta#(MetaField#("rREADY", 4), Conc#(Bool)), Meta#(MetaField#("rDATA", 5), Conc#(function Action f(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("rRESP", 6), Conc#(function Action f(AxiDefines::AxiResp x1))), Meta#(MetaField#("rVALID", 7), Conc#(function Action f(Bool x1)))))))} {Generic#(Axi4LDefines::Axi4LRdMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdMasterXActorIFC", "Axi4LDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdMasterXActorIFC", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdResp", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdResp", 0, 2), Tuple2#(Meta#(MetaField#("data", 0), Conc#(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("resp", 1), Conc#(AxiDefines::AxiResp))))))} {Generic#(Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdSlave", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdSlave", 0, 8), Tuple8#(Meta#(MetaField#("arADDR", 0), Conc#(function Action f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("arPROT", 1), Conc#(function Action f(AxiDefines::AxiProt x1))), Meta#(MetaField#("arVALID", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("arREADY", 3), Conc#(Bool)), Meta#(MetaField#("rREADY", 4), Conc#(function Action f(Bool x1))), Meta#(MetaField#("rDATA", 5), Conc#(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("rRESP", 6), Conc#(AxiDefines::AxiResp)), Meta#(MetaField#("rVALID", 7), Conc#(Bool))))))} {Generic#(Axi4LDefines::Axi4LRdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdSlaveXActorIFC", "Axi4LDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdSlaveXActorIFC", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4LDefines::Axi4LRdWrMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdWrMaster", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdWrMaster", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("write", 1), Conc#(Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4LDefines::Axi4LRdWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdWrMasterXActorIFC", "Axi4LDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdWrMasterXActorIFC", 0, 3), Tuple3#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("read", 1), Conc#(Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("write", 2), Conc#(Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4LDefines::Axi4LRdWrSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdWrSlave", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdWrSlave", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("write", 1), Conc#(Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4LDefines::Axi4LRdWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LRdWrSlaveXActorIFC", "Axi4LDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LRdWrSlaveXActorIFC", 0, 3), Tuple3#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("read", 1), Conc#(Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("write", 2), Conc#(Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4LDefines::Axi4LWrBusMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LWrBusMaster", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LWrBusMaster", 0, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("data", 1), Conc#(BusDefines::BusSend#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("resp", 2), Conc#(BusDefines::BusRecv#(AxiDefines::AxiResp)))))))} {Generic#(Axi4LDefines::Axi4LWrBusSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LWrBusSlave", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LWrBusSlave", 0, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("data", 1), Conc#(BusDefines::BusRecv#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("resp", 2), Conc#(BusDefines::BusSend#(AxiDefines::AxiResp)))))))} {Generic#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LWrData", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LWrData", 0, 2), Tuple2#(Meta#(MetaField#("data", 0), Conc#(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("strb", 1), Conc#(AxiDefines::AxiByteEn#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LWrFabricMaster", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LWrFabricMaster", 0, 1), Meta#(MetaField#("bus", 0), Conc#(Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size))))))} {Generic#(Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LWrFabricSlave", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LWrFabricSlave", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("addrMatch", 1), Conc#(function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)))))))} {Generic#(Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LWrMaster", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LWrMaster", 0, 11), Tuple11#(Meta#(MetaField#("awADDR", 0), Conc#(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("awPROT", 1), Conc#(AxiDefines::AxiProt)), Meta#(MetaField#("awVALID", 2), Conc#(Bool)), Meta#(MetaField#("awREADY", 3), Conc#(function Action f(Bool x1))), Meta#(MetaField#("wDATA", 4), Conc#(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("wSTRB", 5), Conc#(AxiDefines::AxiByteEn#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("wVALID", 6), Conc#(Bool)), Meta#(MetaField#("wREADY", 7), Conc#(function Action f(Bool x1))), Meta#(MetaField#("bREADY", 8), Conc#(Bool)), Meta#(MetaField#("bRESP", 9), Conc#(function Action f(AxiDefines::AxiResp x1))), Meta#(MetaField#("bVALID", 10), Conc#(function Action f(Bool x1)))))))} {Generic#(Axi4LDefines::Axi4LWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LWrMasterXActorIFC", "Axi4LDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LWrMasterXActorIFC", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LWrSlave", "Axi4LDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LWrSlave", 0, 11), Tuple11#(Meta#(MetaField#("awADDR", 0), Conc#(function Action f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("awPROT", 1), Conc#(function Action f(AxiDefines::AxiProt x1))), Meta#(MetaField#("awVALID", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("awREADY", 3), Conc#(Bool)), Meta#(MetaField#("wDATA", 4), Conc#(function Action f(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("wSTRB", 5), Conc#(function Action f(AxiDefines::AxiByteEn#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("wVALID", 6), Conc#(function Action f(Bool x1))), Meta#(MetaField#("wREADY", 7), Conc#(Bool)), Meta#(MetaField#("bREADY", 8), Conc#(function Action f(Bool x1))), Meta#(MetaField#("bRESP", 9), Conc#(AxiDefines::AxiResp)), Meta#(MetaField#("bVALID", 10), Conc#(Bool))))))} {Generic#(Axi4LDefines::Axi4LWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LWrSlaveXActorIFC", "Axi4LDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LWrSlaveXActorIFC", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(Axi4LPC::Axi4LPCParams, Meta#(MetaData#("Axi4LPCParams", "Axi4LPC", void, 1), Meta#(MetaConsNamed#("Axi4LPCParams", 0, 1), Meta#(MetaField#("maxwaits", 0), Conc#(Int#(32))))))} {Generic#(Axi4LPC::Axi4LPC_Ifc#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4LPC_Ifc", "Axi4LPC", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4LPC_Ifc", 0, 19), Tuple19#(Meta#(MetaField#("aw_prot", 0), Conc#(function Action f(AxiDefines::AxiProt x1))), Meta#(MetaField#("aw_addr", 1), Conc#(function Action f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("aw_valid", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("aw_ready", 3), Conc#(function Action f(Bool x1))), Meta#(MetaField#("w_data", 4), Conc#(function Action f(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("w_strb", 5), Conc#(function Action f(AxiDefines::AxiByteEn#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("w_valid", 6), Conc#(function Action f(Bool x1))), Meta#(MetaField#("w_ready", 7), Conc#(function Action f(Bool x1))), Meta#(MetaField#("b_resp", 8), Conc#(function Action f(AxiDefines::AxiResp x1))), Meta#(MetaField#("b_valid", 9), Conc#(function Action f(Bool x1))), Meta#(MetaField#("b_ready", 10), Conc#(function Action f(Bool x1))), Meta#(MetaField#("ar_prot", 11), Conc#(function Action f(AxiDefines::AxiProt x1))), Meta#(MetaField#("ar_addr", 12), Conc#(function Action f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("ar_valid", 13), Conc#(function Action f(Bool x1))), Meta#(MetaField#("ar_ready", 14), Conc#(function Action f(Bool x1))), Meta#(MetaField#("r_data", 15), Conc#(function Action f(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("r_resp", 16), Conc#(function Action f(AxiDefines::AxiResp x1))), Meta#(MetaField#("r_valid", 17), Conc#(function Action f(Bool x1))), Meta#(MetaField#("r_ready", 18), Conc#(function Action f(Bool x1)))))))} {Generic#(Axi4LPC::_Axi4LPC.Axi4LPC_Ifc428#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_Axi4LPC.Axi4LPC_Ifc428", "Axi4LPC", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_Axi4LPC.Axi4LPC_Ifc428", 0, 19), Tuple19#(Meta#(MetaField#("aw_prot", 0), Conc#(function ActionValue_#(_n3) f(Bit#(3) x1))), Meta#(MetaField#("aw_addr", 1), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1))), Meta#(MetaField#("aw_valid", 2), Conc#(function ActionValue_#(_n3) f(Bit#(1) x1))), Meta#(MetaField#("aw_ready", 3), Conc#(function ActionValue_#(_n3) f(Bit#(1) x1))), Meta#(MetaField#("w_data", 4), Conc#(function ActionValue_#(_n3) f(Bit#(_n1) x1))), Meta#(MetaField#("w_strb", 5), Conc#(function ActionValue_#(_n3) f(Bit#(_n0) x1))), Meta#(MetaField#("w_valid", 6), Conc#(function ActionValue_#(_n3) f(Bit#(1) x1))), Meta#(MetaField#("w_ready", 7), Conc#(function ActionValue_#(_n3) f(Bit#(1) x1))), Meta#(MetaField#("b_resp", 8), Conc#(function ActionValue_#(_n3) f(Bit#(2) x1))), Meta#(MetaField#("b_valid", 9), Conc#(function ActionValue_#(_n3) f(Bit#(1) x1))), Meta#(MetaField#("b_ready", 10), Conc#(function ActionValue_#(_n3) f(Bit#(1) x1))), Meta#(MetaField#("ar_prot", 11), Conc#(function ActionValue_#(_n3) f(Bit#(3) x1))), Meta#(MetaField#("ar_addr", 12), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1))), Meta#(MetaField#("ar_valid", 13), Conc#(function ActionValue_#(_n3) f(Bit#(1) x1))), Meta#(MetaField#("ar_ready", 14), Conc#(function ActionValue_#(_n3) f(Bit#(1) x1))), Meta#(MetaField#("r_data", 15), Conc#(function ActionValue_#(_n3) f(Bit#(_n1) x1))), Meta#(MetaField#("r_resp", 16), Conc#(function ActionValue_#(_n3) f(Bit#(2) x1))), Meta#(MetaField#("r_valid", 17), Conc#(function ActionValue_#(_n3) f(Bit#(1) x1))), Meta#(MetaField#("r_ready", 18), Conc#(function ActionValue_#(_n3) f(Bit#(1) x1)))))))} {Generic#(Axi4PC::Axi4PCParams, Meta#(MetaData#("Axi4PCParams", "Axi4PC", void, 1), Meta#(MetaConsNamed#("Axi4PCParams", 0, 2), Tuple2#(Meta#(MetaField#("exmon_width", 0), Conc#(UInt#(32))), Meta#(MetaField#("maxwaits", 1), Conc#(UInt#(32)))))))} {Generic#(Axi4PC::Axi4PC_Ifc#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("Axi4PC_Ifc", "Axi4PC", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("Axi4PC_Ifc", 0, 47), Tuple47#(Meta#(MetaField#("aw_id", 0), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("aw_len", 1), Conc#(function Action f(Axi4Defines::Axi4Len x1))), Meta#(MetaField#("aw_size", 2), Conc#(function Action f(AxiDefines::AxiSize x1))), Meta#(MetaField#("aw_burst", 3), Conc#(function Action f(AxiDefines::AxiBurst x1))), Meta#(MetaField#("aw_lock", 4), Conc#(function Action f(Axi4Defines::Axi4Lock x1))), Meta#(MetaField#("aw_cache", 5), Conc#(function Action f(Axi4Defines::Axi4Cache x1))), Meta#(MetaField#("aw_prot", 6), Conc#(function Action f(AxiDefines::AxiProt x1))), Meta#(MetaField#("aw_qos", 7), Conc#(function Action f(Axi4Defines::Axi4Qos x1))), Meta#(MetaField#("aw_addr", 8), Conc#(function Action f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("aw_region", 9), Conc#(function Action f(Axi4Defines::Axi4Region x1))), Meta#(MetaField#("aw_user", 10), Conc#(function Action f(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("aw_valid", 11), Conc#(function Action f(Bool x1))), Meta#(MetaField#("aw_ready", 12), Conc#(function Action f(Bool x1))), Meta#(MetaField#("w_data", 13), Conc#(function Action f(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("w_strb", 14), Conc#(function Action f(AxiDefines::AxiByteEn#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("w_last", 15), Conc#(function Action f(Bool x1))), Meta#(MetaField#("w_user", 16), Conc#(function Action f(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("w_valid", 17), Conc#(function Action f(Bool x1))), Meta#(MetaField#("w_ready", 18), Conc#(function Action f(Bool x1))), Meta#(MetaField#("b_id", 19), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("b_resp", 20), Conc#(function Action f(AxiDefines::AxiResp x1))), Meta#(MetaField#("b_user", 21), Conc#(function Action f(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("b_valid", 22), Conc#(function Action f(Bool x1))), Meta#(MetaField#("b_ready", 23), Conc#(function Action f(Bool x1))), Meta#(MetaField#("ar_id", 24), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("ar_len", 25), Conc#(function Action f(Axi4Defines::Axi4Len x1))), Meta#(MetaField#("ar_size", 26), Conc#(function Action f(AxiDefines::AxiSize x1))), Meta#(MetaField#("ar_burst", 27), Conc#(function Action f(AxiDefines::AxiBurst x1))), Meta#(MetaField#("ar_lock", 28), Conc#(function Action f(Axi4Defines::Axi4Lock x1))), Meta#(MetaField#("ar_cache", 29), Conc#(function Action f(Axi4Defines::Axi4Cache x1))), Meta#(MetaField#("ar_prot", 30), Conc#(function Action f(AxiDefines::AxiProt x1))), Meta#(MetaField#("ar_qos", 31), Conc#(function Action f(Axi4Defines::Axi4Qos x1))), Meta#(MetaField#("ar_addr", 32), Conc#(function Action f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("ar_region", 33), Conc#(function Action f(Axi4Defines::Axi4Region x1))), Meta#(MetaField#("ar_user", 34), Conc#(function Action f(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("ar_valid", 35), Conc#(function Action f(Bool x1))), Meta#(MetaField#("ar_ready", 36), Conc#(function Action f(Bool x1))), Meta#(MetaField#("r_id", 37), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("r_data", 38), Conc#(function Action f(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("r_resp", 39), Conc#(function Action f(AxiDefines::AxiResp x1))), Meta#(MetaField#("r_last", 40), Conc#(function Action f(Bool x1))), Meta#(MetaField#("r_user", 41), Conc#(function Action f(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("r_valid", 42), Conc#(function Action f(Bool x1))), Meta#(MetaField#("r_ready", 43), Conc#(function Action f(Bool x1))), Meta#(MetaField#("c_active", 44), Conc#(function Action f(Bool x1))), Meta#(MetaField#("c_sysreq", 45), Conc#(function Action f(Bool x1))), Meta#(MetaField#("c_sysack", 46), Conc#(function Action f(Bool x1)))))))} {Generic#(Axi4PC::_Axi4PC.Axi4PC_Ifc730#(_n0, _n1, _n2, _n3, _n4, _n5), Meta#(MetaData#("_Axi4PC.Axi4PC_Ifc730", "Axi4PC", Tuple6#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3), NumArg#(_n4), NumArg#(_n5)), 1), Meta#(MetaConsNamed#("_Axi4PC.Axi4PC_Ifc730", 0, 47), Tuple47#(Meta#(MetaField#("aw_id", 0), Conc#(function ActionValue_#(_n5) f(Bit#(_n4) x1))), Meta#(MetaField#("aw_len", 1), Conc#(function ActionValue_#(_n5) f(Bit#(8) x1))), Meta#(MetaField#("aw_size", 2), Conc#(function ActionValue_#(_n5) f(Bit#(3) x1))), Meta#(MetaField#("aw_burst", 3), Conc#(function ActionValue_#(_n5) f(Bit#(2) x1))), Meta#(MetaField#("aw_lock", 4), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("aw_cache", 5), Conc#(function ActionValue_#(_n5) f(Bit#(4) x1))), Meta#(MetaField#("aw_prot", 6), Conc#(function ActionValue_#(_n5) f(Bit#(3) x1))), Meta#(MetaField#("aw_qos", 7), Conc#(function ActionValue_#(_n5) f(Bit#(4) x1))), Meta#(MetaField#("aw_addr", 8), Conc#(function ActionValue_#(_n5) f(Bit#(_n3) x1))), Meta#(MetaField#("aw_region", 9), Conc#(function ActionValue_#(_n5) f(Bit#(4) x1))), Meta#(MetaField#("aw_user", 10), Conc#(function ActionValue_#(_n5) f(Bit#(_n2) x1))), Meta#(MetaField#("aw_valid", 11), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("aw_ready", 12), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("w_data", 13), Conc#(function ActionValue_#(_n5) f(Bit#(_n1) x1))), Meta#(MetaField#("w_strb", 14), Conc#(function ActionValue_#(_n5) f(Bit#(_n0) x1))), Meta#(MetaField#("w_last", 15), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("w_user", 16), Conc#(function ActionValue_#(_n5) f(Bit#(_n2) x1))), Meta#(MetaField#("w_valid", 17), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("w_ready", 18), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("b_id", 19), Conc#(function ActionValue_#(_n5) f(Bit#(_n4) x1))), Meta#(MetaField#("b_resp", 20), Conc#(function ActionValue_#(_n5) f(Bit#(2) x1))), Meta#(MetaField#("b_user", 21), Conc#(function ActionValue_#(_n5) f(Bit#(_n2) x1))), Meta#(MetaField#("b_valid", 22), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("b_ready", 23), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("ar_id", 24), Conc#(function ActionValue_#(_n5) f(Bit#(_n4) x1))), Meta#(MetaField#("ar_len", 25), Conc#(function ActionValue_#(_n5) f(Bit#(8) x1))), Meta#(MetaField#("ar_size", 26), Conc#(function ActionValue_#(_n5) f(Bit#(3) x1))), Meta#(MetaField#("ar_burst", 27), Conc#(function ActionValue_#(_n5) f(Bit#(2) x1))), Meta#(MetaField#("ar_lock", 28), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("ar_cache", 29), Conc#(function ActionValue_#(_n5) f(Bit#(4) x1))), Meta#(MetaField#("ar_prot", 30), Conc#(function ActionValue_#(_n5) f(Bit#(3) x1))), Meta#(MetaField#("ar_qos", 31), Conc#(function ActionValue_#(_n5) f(Bit#(4) x1))), Meta#(MetaField#("ar_addr", 32), Conc#(function ActionValue_#(_n5) f(Bit#(_n3) x1))), Meta#(MetaField#("ar_region", 33), Conc#(function ActionValue_#(_n5) f(Bit#(4) x1))), Meta#(MetaField#("ar_user", 34), Conc#(function ActionValue_#(_n5) f(Bit#(_n2) x1))), Meta#(MetaField#("ar_valid", 35), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("ar_ready", 36), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("r_id", 37), Conc#(function ActionValue_#(_n5) f(Bit#(_n4) x1))), Meta#(MetaField#("r_data", 38), Conc#(function ActionValue_#(_n5) f(Bit#(_n1) x1))), Meta#(MetaField#("r_resp", 39), Conc#(function ActionValue_#(_n5) f(Bit#(2) x1))), Meta#(MetaField#("r_last", 40), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("r_user", 41), Conc#(function ActionValue_#(_n5) f(Bit#(_n2) x1))), Meta#(MetaField#("r_valid", 42), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("r_ready", 43), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("c_active", 44), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("c_sysreq", 45), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1))), Meta#(MetaField#("c_sysack", 46), Conc#(function ActionValue_#(_n5) f(Bit#(1) x1)))))))} {Generic#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiAddrCmd", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiAddrCmd", 0, 8), Tuple8#(Meta#(MetaField#("id", 0), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("len", 1), Conc#(AxiDefines::AxiLen)), Meta#(MetaField#("size", 2), Conc#(AxiDefines::AxiSize)), Meta#(MetaField#("burst", 3), Conc#(AxiDefines::AxiBurst)), Meta#(MetaField#("lock", 4), Conc#(AxiDefines::AxiLock)), Meta#(MetaField#("cache", 5), Conc#(AxiDefines::AxiCache)), Meta#(MetaField#("prot", 6), Conc#(AxiDefines::AxiProt)), Meta#(MetaField#("addr", 7), Conc#(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AxiDefines::AxiBurst, Meta#(MetaData#("AxiBurst", "AxiDefines", void, 3), Either#(Meta#(MetaConsAnon#("FIXED", 0, 0), void), Either#(Meta#(MetaConsAnon#("INCR", 1, 0), void), Meta#(MetaConsAnon#("WRAP", 2, 0), void)))))} {Generic#(AxiDefines::AxiCache, Meta#(MetaData#("AxiCache", "AxiDefines", void, 1), Meta#(MetaConsNamed#("AxiCache", 0, 4), Tuple4#(Meta#(MetaField#("write_allocate", 0), Conc#(TLM3Defines::TLMAllocate)), Meta#(MetaField#("read_allocate", 1), Conc#(TLM3Defines::TLMAllocate)), Meta#(MetaField#("cache", 2), Conc#(TLM3Defines::TLMCache)), Meta#(MetaField#("buffer", 3), Conc#(TLM3Defines::TLMBuffer))))))} {Generic#(AxiDefines::AxiLowPower, Meta#(MetaData#("AxiLowPower", "AxiDefines", void, 1), Meta#(MetaConsNamed#("AxiLowPower", 0, 3), Tuple3#(Meta#(MetaField#("cSYSREQ", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("cSYSACK", 1), Conc#(Bool)), Meta#(MetaField#("cACTIVE", 2), Conc#(Bool))))))} {Generic#(AxiDefines::AxiProt, Meta#(MetaData#("AxiProt", "AxiDefines", void, 1), Meta#(MetaConsNamed#("AxiProt", 0, 3), Tuple3#(Meta#(MetaField#("access", 0), Conc#(TLM3Defines::TLMAccess)), Meta#(MetaField#("security", 1), Conc#(TLM3Defines::TLMSecurity)), Meta#(MetaField#("privilege", 2), Conc#(TLM3Defines::TLMPrivilege))))))} {Generic#(AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdBusMaster", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdBusMaster", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("resp", 1), Conc#(BusDefines::BusRecv#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(AxiDefines::AxiRdBusSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdBusSlave", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdBusSlave", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("resp", 1), Conc#(BusDefines::BusSend#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdFabricMaster", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdFabricMaster", 0, 1), Meta#(MetaField#("bus", 0), Conc#(AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size))))))} {Generic#(AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdFabricSlave", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdFabricSlave", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("addrMatch", 1), Conc#(function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)))))))} {Generic#(AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdMaster", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdMaster", 0, 16), Tuple16#(Meta#(MetaField#("arID", 0), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("arADDR", 1), Conc#(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("arLEN", 2), Conc#(AxiDefines::AxiLen)), Meta#(MetaField#("arSIZE", 3), Conc#(AxiDefines::AxiSize)), Meta#(MetaField#("arBURST", 4), Conc#(AxiDefines::AxiBurst)), Meta#(MetaField#("arLOCK", 5), Conc#(AxiDefines::AxiLock)), Meta#(MetaField#("arCACHE", 6), Conc#(AxiDefines::AxiCache)), Meta#(MetaField#("arPROT", 7), Conc#(AxiDefines::AxiProt)), Meta#(MetaField#("arVALID", 8), Conc#(Bool)), Meta#(MetaField#("arREADY", 9), Conc#(function Action f(Bool x1))), Meta#(MetaField#("rREADY", 10), Conc#(Bool)), Meta#(MetaField#("rID", 11), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("rDATA", 12), Conc#(function Action f(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("rRESP", 13), Conc#(function Action f(AxiDefines::AxiResp x1))), Meta#(MetaField#("rLAST", 14), Conc#(function Action f(Bool x1))), Meta#(MetaField#("rVALID", 15), Conc#(function Action f(Bool x1)))))))} {Generic#(AxiDefines::AxiRdMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdMasterXActorIFC", "AxiDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdMasterXActorIFC", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdResp", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdResp", 0, 4), Tuple4#(Meta#(MetaField#("id", 0), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("data", 1), Conc#(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("resp", 2), Conc#(AxiDefines::AxiResp)), Meta#(MetaField#("last", 3), Conc#(Bool))))))} {Generic#(AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdSlave", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdSlave", 0, 16), Tuple16#(Meta#(MetaField#("arID", 0), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("arADDR", 1), Conc#(function Action f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("arLEN", 2), Conc#(function Action f(AxiDefines::AxiLen x1))), Meta#(MetaField#("arSIZE", 3), Conc#(function Action f(AxiDefines::AxiSize x1))), Meta#(MetaField#("arBURST", 4), Conc#(function Action f(AxiDefines::AxiBurst x1))), Meta#(MetaField#("arLOCK", 5), Conc#(function Action f(AxiDefines::AxiLock x1))), Meta#(MetaField#("arCACHE", 6), Conc#(function Action f(AxiDefines::AxiCache x1))), Meta#(MetaField#("arPROT", 7), Conc#(function Action f(AxiDefines::AxiProt x1))), Meta#(MetaField#("arVALID", 8), Conc#(function Action f(Bool x1))), Meta#(MetaField#("arREADY", 9), Conc#(Bool)), Meta#(MetaField#("rREADY", 10), Conc#(function Action f(Bool x1))), Meta#(MetaField#("rID", 11), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("rDATA", 12), Conc#(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("rRESP", 13), Conc#(AxiDefines::AxiResp)), Meta#(MetaField#("rLAST", 14), Conc#(Bool)), Meta#(MetaField#("rVALID", 15), Conc#(Bool))))))} {Generic#(AxiDefines::AxiRdSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdSlaveXActorIFC", "AxiDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdSlaveXActorIFC", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AxiDefines::AxiRdWrMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdWrMaster", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdWrMaster", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("write", 1), Conc#(AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AxiDefines::AxiRdWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdWrMasterXActorIFC", "AxiDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdWrMasterXActorIFC", 0, 3), Tuple3#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("read", 1), Conc#(AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("write", 2), Conc#(AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AxiDefines::AxiRdWrSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdWrSlave", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdWrSlave", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("write", 1), Conc#(AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AxiDefines::AxiRdWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiRdWrSlaveXActorIFC", "AxiDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiRdWrSlaveXActorIFC", 0, 3), Tuple3#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("read", 1), Conc#(AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("write", 2), Conc#(AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AxiDefines::AxiResp, Meta#(MetaData#("AxiResp", "AxiDefines", void, 4), Either#(Meta#(MetaConsAnon#("OKAY", 0, 0), void), Either#(Meta#(MetaConsAnon#("EXOKAY", 1, 0), void), Either#(Meta#(MetaConsAnon#("SLVERR", 2, 0), void), Meta#(MetaConsAnon#("DECERR", 3, 0), void))))))} {Generic#(AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiWrBusMaster", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiWrBusMaster", 0, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("data", 1), Conc#(BusDefines::BusSend#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("resp", 2), Conc#(BusDefines::BusRecv#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(AxiDefines::AxiWrBusSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiWrBusSlave", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiWrBusSlave", 0, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("data", 1), Conc#(BusDefines::BusRecv#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("resp", 2), Conc#(BusDefines::BusSend#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))))))))} {Generic#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiWrData", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiWrData", 0, 4), Tuple4#(Meta#(MetaField#("id", 0), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("data", 1), Conc#(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("strb", 2), Conc#(AxiDefines::AxiByteEn#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("last", 3), Conc#(Bool))))))} {Generic#(AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiWrFabricMaster", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiWrFabricMaster", 0, 1), Meta#(MetaField#("bus", 0), Conc#(AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size))))))} {Generic#(AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiWrFabricSlave", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiWrFabricSlave", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("addrMatch", 1), Conc#(function Bool f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1)))))))} {Generic#(AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiWrMaster", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiWrMaster", 0, 20), Tuple20#(Meta#(MetaField#("awID", 0), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("awADDR", 1), Conc#(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("awLEN", 2), Conc#(AxiDefines::AxiLen)), Meta#(MetaField#("awSIZE", 3), Conc#(AxiDefines::AxiSize)), Meta#(MetaField#("awBURST", 4), Conc#(AxiDefines::AxiBurst)), Meta#(MetaField#("awLOCK", 5), Conc#(AxiDefines::AxiLock)), Meta#(MetaField#("awCACHE", 6), Conc#(AxiDefines::AxiCache)), Meta#(MetaField#("awPROT", 7), Conc#(AxiDefines::AxiProt)), Meta#(MetaField#("awVALID", 8), Conc#(Bool)), Meta#(MetaField#("awREADY", 9), Conc#(function Action f(Bool x1))), Meta#(MetaField#("wID", 10), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("wDATA", 11), Conc#(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("wSTRB", 12), Conc#(AxiDefines::AxiByteEn#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("wLAST", 13), Conc#(Bool)), Meta#(MetaField#("wVALID", 14), Conc#(Bool)), Meta#(MetaField#("wREADY", 15), Conc#(function Action f(Bool x1))), Meta#(MetaField#("bREADY", 16), Conc#(Bool)), Meta#(MetaField#("bID", 17), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("bRESP", 18), Conc#(function Action f(AxiDefines::AxiResp x1))), Meta#(MetaField#("bVALID", 19), Conc#(function Action f(Bool x1)))))))} {Generic#(AxiDefines::AxiWrMasterXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiWrMasterXActorIFC", "AxiDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiWrMasterXActorIFC", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiWrResp", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiWrResp", 0, 2), Tuple2#(Meta#(MetaField#("id", 0), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("resp", 1), Conc#(AxiDefines::AxiResp))))))} {Generic#(AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiWrSlave", "AxiDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiWrSlave", 0, 20), Tuple20#(Meta#(MetaField#("awID", 0), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("awADDR", 1), Conc#(function Action f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("awLEN", 2), Conc#(function Action f(AxiDefines::AxiLen x1))), Meta#(MetaField#("awSIZE", 3), Conc#(function Action f(AxiDefines::AxiSize x1))), Meta#(MetaField#("awBURST", 4), Conc#(function Action f(AxiDefines::AxiBurst x1))), Meta#(MetaField#("awLOCK", 5), Conc#(function Action f(AxiDefines::AxiLock x1))), Meta#(MetaField#("awCACHE", 6), Conc#(function Action f(AxiDefines::AxiCache x1))), Meta#(MetaField#("awPROT", 7), Conc#(function Action f(AxiDefines::AxiProt x1))), Meta#(MetaField#("awVALID", 8), Conc#(function Action f(Bool x1))), Meta#(MetaField#("awREADY", 9), Conc#(Bool)), Meta#(MetaField#("wID", 10), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("wDATA", 11), Conc#(function Action f(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("wSTRB", 12), Conc#(function Action f(AxiDefines::AxiByteEn#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("wLAST", 13), Conc#(function Action f(Bool x1))), Meta#(MetaField#("wVALID", 14), Conc#(function Action f(Bool x1))), Meta#(MetaField#("wREADY", 15), Conc#(Bool)), Meta#(MetaField#("bREADY", 16), Conc#(function Action f(Bool x1))), Meta#(MetaField#("bID", 17), Conc#(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("bRESP", 18), Conc#(AxiDefines::AxiResp)), Meta#(MetaField#("bVALID", 19), Conc#(Bool))))))} {Generic#(AxiDefines::AxiWrSlaveXActorIFC#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiWrSlaveXActorIFC", "AxiDefines", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiWrSlaveXActorIFC", 0, 2), Tuple2#(Meta#(MetaField#("tlm", 0), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t))), Meta#(MetaField#("fabric", 1), Conc#(AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(AxiPC::AxiPCParams, Meta#(MetaData#("AxiPCParams", "AxiPC", void, 1), Meta#(MetaConsNamed#("AxiPCParams", 0, 2), Tuple2#(Meta#(MetaField#("exmon_width", 0), Conc#(UInt#(32))), Meta#(MetaField#("maxwaits", 1), Conc#(UInt#(32)))))))} {Generic#(AxiPC::AxiPC_Ifc#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("AxiPC_Ifc", "AxiPC", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("AxiPC_Ifc", 0, 39), Tuple39#(Meta#(MetaField#("aw_id", 0), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("aw_len", 1), Conc#(function Action f(AxiDefines::AxiLen x1))), Meta#(MetaField#("aw_size", 2), Conc#(function Action f(AxiDefines::AxiSize x1))), Meta#(MetaField#("aw_burst", 3), Conc#(function Action f(AxiDefines::AxiBurst x1))), Meta#(MetaField#("aw_lock", 4), Conc#(function Action f(AxiDefines::AxiLock x1))), Meta#(MetaField#("aw_cache", 5), Conc#(function Action f(AxiDefines::AxiCache x1))), Meta#(MetaField#("aw_prot", 6), Conc#(function Action f(AxiDefines::AxiProt x1))), Meta#(MetaField#("aw_addr", 7), Conc#(function Action f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("aw_valid", 8), Conc#(function Action f(Bool x1))), Meta#(MetaField#("aw_ready", 9), Conc#(function Action f(Bool x1))), Meta#(MetaField#("w_id", 10), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("w_data", 11), Conc#(function Action f(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("w_strb", 12), Conc#(function Action f(AxiDefines::AxiByteEn#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("w_last", 13), Conc#(function Action f(Bool x1))), Meta#(MetaField#("w_valid", 14), Conc#(function Action f(Bool x1))), Meta#(MetaField#("w_ready", 15), Conc#(function Action f(Bool x1))), Meta#(MetaField#("b_id", 16), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("b_resp", 17), Conc#(function Action f(AxiDefines::AxiResp x1))), Meta#(MetaField#("b_valid", 18), Conc#(function Action f(Bool x1))), Meta#(MetaField#("b_ready", 19), Conc#(function Action f(Bool x1))), Meta#(MetaField#("ar_id", 20), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("ar_len", 21), Conc#(function Action f(AxiDefines::AxiLen x1))), Meta#(MetaField#("ar_size", 22), Conc#(function Action f(AxiDefines::AxiSize x1))), Meta#(MetaField#("ar_burst", 23), Conc#(function Action f(AxiDefines::AxiBurst x1))), Meta#(MetaField#("ar_lock", 24), Conc#(function Action f(AxiDefines::AxiLock x1))), Meta#(MetaField#("ar_cache", 25), Conc#(function Action f(AxiDefines::AxiCache x1))), Meta#(MetaField#("ar_prot", 26), Conc#(function Action f(AxiDefines::AxiProt x1))), Meta#(MetaField#("ar_addr", 27), Conc#(function Action f(AxiDefines::AxiAddr#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("ar_valid", 28), Conc#(function Action f(Bool x1))), Meta#(MetaField#("ar_ready", 29), Conc#(function Action f(Bool x1))), Meta#(MetaField#("r_id", 30), Conc#(function Action f(AxiDefines::AxiId#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("r_data", 31), Conc#(function Action f(AxiDefines::AxiData#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("r_resp", 32), Conc#(function Action f(AxiDefines::AxiResp x1))), Meta#(MetaField#("r_last", 33), Conc#(function Action f(Bool x1))), Meta#(MetaField#("r_valid", 34), Conc#(function Action f(Bool x1))), Meta#(MetaField#("r_ready", 35), Conc#(function Action f(Bool x1))), Meta#(MetaField#("c_active", 36), Conc#(function Action f(Bool x1))), Meta#(MetaField#("c_sysreq", 37), Conc#(function Action f(Bool x1))), Meta#(MetaField#("c_sysack", 38), Conc#(function Action f(Bool x1)))))))} {Generic#(AxiPC::_AxiPC.AxiPC_Ifc642#(_n0, _n1, _n2, _n3, _n4), Meta#(MetaData#("_AxiPC.AxiPC_Ifc642", "AxiPC", Tuple5#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3), NumArg#(_n4)), 1), Meta#(MetaConsNamed#("_AxiPC.AxiPC_Ifc642", 0, 39), Tuple39#(Meta#(MetaField#("aw_id", 0), Conc#(function ActionValue_#(_n4) f(Bit#(_n3) x1))), Meta#(MetaField#("aw_len", 1), Conc#(function ActionValue_#(_n4) f(Bit#(4) x1))), Meta#(MetaField#("aw_size", 2), Conc#(function ActionValue_#(_n4) f(Bit#(3) x1))), Meta#(MetaField#("aw_burst", 3), Conc#(function ActionValue_#(_n4) f(Bit#(2) x1))), Meta#(MetaField#("aw_lock", 4), Conc#(function ActionValue_#(_n4) f(Bit#(2) x1))), Meta#(MetaField#("aw_cache", 5), Conc#(function ActionValue_#(_n4) f(Bit#(4) x1))), Meta#(MetaField#("aw_prot", 6), Conc#(function ActionValue_#(_n4) f(Bit#(3) x1))), Meta#(MetaField#("aw_addr", 7), Conc#(function ActionValue_#(_n4) f(Bit#(_n2) x1))), Meta#(MetaField#("aw_valid", 8), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("aw_ready", 9), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("w_id", 10), Conc#(function ActionValue_#(_n4) f(Bit#(_n3) x1))), Meta#(MetaField#("w_data", 11), Conc#(function ActionValue_#(_n4) f(Bit#(_n1) x1))), Meta#(MetaField#("w_strb", 12), Conc#(function ActionValue_#(_n4) f(Bit#(_n0) x1))), Meta#(MetaField#("w_last", 13), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("w_valid", 14), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("w_ready", 15), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("b_id", 16), Conc#(function ActionValue_#(_n4) f(Bit#(_n3) x1))), Meta#(MetaField#("b_resp", 17), Conc#(function ActionValue_#(_n4) f(Bit#(2) x1))), Meta#(MetaField#("b_valid", 18), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("b_ready", 19), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("ar_id", 20), Conc#(function ActionValue_#(_n4) f(Bit#(_n3) x1))), Meta#(MetaField#("ar_len", 21), Conc#(function ActionValue_#(_n4) f(Bit#(4) x1))), Meta#(MetaField#("ar_size", 22), Conc#(function ActionValue_#(_n4) f(Bit#(3) x1))), Meta#(MetaField#("ar_burst", 23), Conc#(function ActionValue_#(_n4) f(Bit#(2) x1))), Meta#(MetaField#("ar_lock", 24), Conc#(function ActionValue_#(_n4) f(Bit#(2) x1))), Meta#(MetaField#("ar_cache", 25), Conc#(function ActionValue_#(_n4) f(Bit#(4) x1))), Meta#(MetaField#("ar_prot", 26), Conc#(function ActionValue_#(_n4) f(Bit#(3) x1))), Meta#(MetaField#("ar_addr", 27), Conc#(function ActionValue_#(_n4) f(Bit#(_n2) x1))), Meta#(MetaField#("ar_valid", 28), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("ar_ready", 29), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("r_id", 30), Conc#(function ActionValue_#(_n4) f(Bit#(_n3) x1))), Meta#(MetaField#("r_data", 31), Conc#(function ActionValue_#(_n4) f(Bit#(_n1) x1))), Meta#(MetaField#("r_resp", 32), Conc#(function ActionValue_#(_n4) f(Bit#(2) x1))), Meta#(MetaField#("r_last", 33), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("r_valid", 34), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("r_ready", 35), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("c_active", 36), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("c_sysreq", 37), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1))), Meta#(MetaField#("c_sysack", 38), Conc#(function ActionValue_#(_n4) f(Bit#(1) x1)))))))} {Generic#(AxiSlave::SlaveSlice#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("SlaveSlice", "AxiSlave", Tuple7#(StarArg#(req_t), StarArg#(resp_t), NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("SlaveSlice", 0, 3), Tuple3#(Meta#(MetaField#("addr_f", 0), Conc#(GetPut::GetS#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("data_f", 1), Conc#(GetPut::GetS#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaField#("id", 2), Conc#(ReadOnly#(Maybe#(TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size)))))))))} {Generic#(BGetPut::BClientS#(sa, sb), Meta#(MetaData#("BClientS", "BGetPut", Tuple2#(NumArg#(sa), NumArg#(sb)), 1), Meta#(MetaConsNamed#("BClientS", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(BGetPut::BGetS#(sa))), Meta#(MetaField#("response", 1), Conc#(BGetPut::BPutS#(sb)))))))} {Generic#(BGetPut::BGetS#(sa), Meta#(MetaData#("BGetS", "BGetPut", NumArg#(sa), 1), Meta#(MetaConsNamed#("BGetS", 0, 3), Tuple3#(Meta#(MetaField#("gvalue", 0), Conc#(Bit#(sa))), Meta#(MetaField#("gpresent", 1), Conc#(Bool)), Meta#(MetaField#("gcredit", 2), Conc#(function Action f(Bool x1)))))))} {Generic#(BGetPut::BPutS#(sa), Meta#(MetaData#("BPutS", "BGetPut", NumArg#(sa), 1), Meta#(MetaConsNamed#("BPutS", 0, 3), Tuple3#(Meta#(MetaField#("pvalue", 0), Conc#(function Action f(Bit#(sa) x1))), Meta#(MetaField#("ppresent", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("pcredit", 2), Conc#(Bool))))))} {Generic#(BGetPut::BServerS#(sa, sb), Meta#(MetaData#("BServerS", "BGetPut", Tuple2#(NumArg#(sa), NumArg#(sb)), 1), Meta#(MetaConsNamed#("BServerS", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(BGetPut::BPutS#(sa))), Meta#(MetaField#("response", 1), Conc#(BGetPut::BGetS#(sb)))))))} {Generic#(BRAM::BRAM1Port#(addr, data), Meta#(MetaData#("BRAM1Port", "BRAM", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM1Port", 0, 2), Tuple2#(Meta#(MetaField#("portA", 0), Conc#(BRAM::BRAMServer#(addr, data))), Meta#(MetaField#("portAClear", 1), Conc#(Action))))))} {Generic#(BRAM::BRAM1PortBE#(addr, data, n), Meta#(MetaData#("BRAM1PortBE", "BRAM", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM1PortBE", 0, 2), Tuple2#(Meta#(MetaField#("portA", 0), Conc#(BRAM::BRAMServerBE#(addr, data, n))), Meta#(MetaField#("portAClear", 1), Conc#(Action))))))} {Generic#(BRAM::BRAM2Port#(addr, data), Meta#(MetaData#("BRAM2Port", "BRAM", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM2Port", 0, 4), Tuple4#(Meta#(MetaField#("portA", 0), Conc#(BRAM::BRAMServer#(addr, data))), Meta#(MetaField#("portB", 1), Conc#(BRAM::BRAMServer#(addr, data))), Meta#(MetaField#("portAClear", 2), Conc#(Action)), Meta#(MetaField#("portBClear", 3), Conc#(Action))))))} {Generic#(BRAM::BRAM2PortBE#(addr, data, n), Meta#(MetaData#("BRAM2PortBE", "BRAM", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM2PortBE", 0, 4), Tuple4#(Meta#(MetaField#("portA", 0), Conc#(BRAM::BRAMServerBE#(addr, data, n))), Meta#(MetaField#("portB", 1), Conc#(BRAM::BRAMServerBE#(addr, data, n))), Meta#(MetaField#("portAClear", 2), Conc#(Action)), Meta#(MetaField#("portBClear", 3), Conc#(Action))))))} {Generic#(BRAM::BRAMRequest#(addr, data), Meta#(MetaData#("BRAMRequest", "BRAM", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAMRequest", 0, 4), Tuple4#(Meta#(MetaField#("write", 0), Conc#(Bool)), Meta#(MetaField#("responseOnWrite", 1), Conc#(Bool)), Meta#(MetaField#("address", 2), Conc#(addr)), Meta#(MetaField#("datain", 3), Conc#(data))))))} {Generic#(BRAM::BRAMRequestBE#(addr, data, n), Meta#(MetaData#("BRAMRequestBE", "BRAM", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAMRequestBE", 0, 4), Tuple4#(Meta#(MetaField#("writeen", 0), Conc#(Bit#(n))), Meta#(MetaField#("responseOnWrite", 1), Conc#(Bool)), Meta#(MetaField#("address", 2), Conc#(addr)), Meta#(MetaField#("datain", 3), Conc#(data))))))} {Generic#(BRAM::BRAM_Configure, Meta#(MetaData#("BRAM_Configure", "BRAM", void, 1), Meta#(MetaConsNamed#("BRAM_Configure", 0, 5), Tuple5#(Meta#(MetaField#("memorySize", 0), Conc#(Integer)), Meta#(MetaField#("latency", 1), Conc#(Integer)), Meta#(MetaField#("loadFormat", 2), Conc#(BRAM::LoadFormat)), Meta#(MetaField#("outFIFODepth", 3), Conc#(Integer)), Meta#(MetaField#("allowWriteResponseBypass", 4), Conc#(Bool))))))} {Generic#(BRAM::LoadFormat, Meta#(MetaData#("LoadFormat", "BRAM", void, 3), Either#(Meta#(MetaConsAnon#("None", 0, 0), void), Either#(Meta#(MetaConsAnon#("Hex", 1, 1), Meta#(MetaField#("_1", 0), Conc#(String))), Meta#(MetaConsAnon#("Binary", 2, 1), Meta#(MetaField#("_1", 0), Conc#(String)))))))} {Generic#(BRAM::ServerWithClear#(req, resp), Meta#(MetaData#("ServerWithClear", "BRAM", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("ServerWithClear", 0, 2), Tuple2#(Meta#(MetaField#("server", 0), Conc#(ClientServer::Server#(req, resp))), Meta#(MetaField#("clear", 1), Conc#(Action))))))} {Generic#(BRAM::SizedReg, Meta#(MetaData#("SizedReg", "BRAM", void, 1), Meta#(MetaConsNamed#("SizedReg", 0, 6), Tuple6#(Meta#(MetaField#("_write", 0), Conc#(function Action f(Integer x1))), Meta#(MetaField#("addA", 1), Conc#(function Action f(Integer x1))), Meta#(MetaField#("addB", 2), Conc#(function Action f(Integer x1))), Meta#(MetaField#("isLessThan", 3), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("isGreaterThan", 4), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("isEqualTo", 5), Conc#(function Bool f(Integer x1)))))))} {Generic#(BRAMCore::BRAM_DUAL_PORT#(addr, data), Meta#(MetaData#("BRAM_DUAL_PORT", "BRAMCore", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM_DUAL_PORT", 0, 2), Tuple2#(Meta#(MetaField#("a", 0), Conc#(BRAMCore::BRAM_PORT#(addr, data))), Meta#(MetaField#("b", 1), Conc#(BRAMCore::BRAM_PORT#(addr, data)))))))} {Generic#(BRAMCore::BRAM_DUAL_PORT_BE#(addr, data, n), Meta#(MetaData#("BRAM_DUAL_PORT_BE", "BRAMCore", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM_DUAL_PORT_BE", 0, 2), Tuple2#(Meta#(MetaField#("a", 0), Conc#(BRAMCore::BRAM_PORT_BE#(addr, data, n))), Meta#(MetaField#("b", 1), Conc#(BRAMCore::BRAM_PORT_BE#(addr, data, n)))))))} {Generic#(BRAMCore::BRAM_PORT#(addr, data), Meta#(MetaData#("BRAM_PORT", "BRAMCore", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM_PORT", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function Action f(Bool x1, addr x2, data x3))), Meta#(MetaField#("read", 1), Conc#(data))))))} {Generic#(BRAMCore::BRAM_PORT_BE#(addr, data, n), Meta#(MetaData#("BRAM_PORT_BE", "BRAMCore", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM_PORT_BE", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function Action f(Bit#(n) x1, addr x2, data x3))), Meta#(MetaField#("read", 1), Conc#(data))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_DUAL_PORT401#(_n0, _n1, _n2), Meta#(MetaData#("_BRAMCore.BRAM_DUAL_PORT401", "BRAMCore", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_DUAL_PORT401", 0, 4), Tuple4#(Meta#(MetaField#("a_put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("a_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("b_put", 2), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("b_read", 3), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_DUAL_PORT527#(_n0, _n1, _n2), Meta#(MetaData#("_BRAMCore.BRAM_DUAL_PORT527", "BRAMCore", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_DUAL_PORT527", 0, 4), Tuple4#(Meta#(MetaField#("a_put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("a_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("b_put", 2), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("b_read", 3), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_DUAL_PORT_BE643#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_BRAMCore.BRAM_DUAL_PORT_BE643", "BRAMCore", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_DUAL_PORT_BE643", 0, 4), Tuple4#(Meta#(MetaField#("a_put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("a_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("b_put", 2), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("b_read", 3), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_DUAL_PORT_BE781#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_BRAMCore.BRAM_DUAL_PORT_BE781", "BRAMCore", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_DUAL_PORT_BE781", 0, 4), Tuple4#(Meta#(MetaField#("a_put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("a_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("b_put", 2), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("b_read", 3), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_PORT149#(_n0, _n1, _n2), Meta#(MetaData#("_BRAMCore.BRAM_PORT149", "BRAMCore", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_PORT149", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_PORT196#(_n0, _n1, _n2), Meta#(MetaData#("_BRAMCore.BRAM_PORT196", "BRAMCore", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_PORT196", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_PORT_BE261#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_BRAMCore.BRAM_PORT_BE261", "BRAMCore", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_PORT_BE261", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_PORT_BE319#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_BRAMCore.BRAM_PORT_BE319", "BRAMCore", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_PORT_BE319", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAMFIFO::IBRAMFIFOF#(log2depth, t), Meta#(MetaData#("IBRAMFIFOF", "BRAMFIFO", Tuple2#(NumArg#(log2depth), StarArg#(t)), 1), Meta#(MetaConsNamed#("IBRAMFIFOF", 0, 1), Meta#(MetaField#("fifo", 0), Conc#(FIFOF::FIFOF#(t))))))} {Generic#(BRAMFIFO::ISyncBRAMFIFOFIfc#(log2depth, t), Meta#(MetaData#("ISyncBRAMFIFOFIfc", "BRAMFIFO", Tuple2#(NumArg#(log2depth), StarArg#(t)), 1), Meta#(MetaConsNamed#("ISyncBRAMFIFOFIfc", 0, 1), Meta#(MetaField#("fifo", 0), Conc#(Clocks::SyncFIFOIfc#(t))))))} {Generic#(BRAM_Compat::BRAM#(addr, data), Meta#(MetaData#("BRAM", "BRAM_Compat", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM", 0, 2), Tuple2#(Meta#(MetaField#("portA", 0), Conc#(BRAM_Compat::BRAMServer#(addr, data))), Meta#(MetaField#("portB", 1), Conc#(BRAM_Compat::BRAMServer#(addr, data)))))))} {Generic#(BRAM_Compat::BRAM1Port#(addr, data), Meta#(MetaData#("BRAM1Port", "BRAM_Compat", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM1Port", 0, 1), Meta#(MetaField#("portA", 0), Conc#(BRAM_Compat::BRAMServer#(addr, data))))))} {Generic#(BRAM_Compat::BRAM1PortBE#(addr, data, n), Meta#(MetaData#("BRAM1PortBE", "BRAM_Compat", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM1PortBE", 0, 1), Meta#(MetaField#("portA", 0), Conc#(BRAM_Compat::BRAMServerBE#(addr, data, n))))))} {Generic#(BRAM_Compat::BRAM2Port#(addr, data), Meta#(MetaData#("BRAM2Port", "BRAM_Compat", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM2Port", 0, 2), Tuple2#(Meta#(MetaField#("portA", 0), Conc#(BRAM_Compat::BRAMServer#(addr, data))), Meta#(MetaField#("portB", 1), Conc#(BRAM_Compat::BRAMServer#(addr, data)))))))} {Generic#(BRAM_Compat::BRAM2PortBE#(addr, data, n), Meta#(MetaData#("BRAM2PortBE", "BRAM_Compat", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM2PortBE", 0, 2), Tuple2#(Meta#(MetaField#("portA", 0), Conc#(BRAM_Compat::BRAMServerBE#(addr, data, n))), Meta#(MetaField#("portB", 1), Conc#(BRAM_Compat::BRAMServerBE#(addr, data, n)))))))} {Generic#(BRAM_Compat::BRAMRequest#(addr, data), Meta#(MetaData#("BRAMRequest", "BRAM_Compat", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAMRequest", 0, 3), Tuple3#(Meta#(MetaField#("write", 0), Conc#(Bool)), Meta#(MetaField#("address", 1), Conc#(addr)), Meta#(MetaField#("datain", 2), Conc#(data))))))} {Generic#(BRAM_Compat::BRAMRequestBE#(addr, data, n), Meta#(MetaData#("BRAMRequestBE", "BRAM_Compat", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAMRequestBE", 0, 3), Tuple3#(Meta#(MetaField#("writeen", 0), Conc#(Bit#(n))), Meta#(MetaField#("address", 1), Conc#(addr)), Meta#(MetaField#("datain", 2), Conc#(data))))))} {Generic#(BRAM_Compat::BRAM_BE#(addr, data, n), Meta#(MetaData#("BRAM_BE", "BRAM_Compat", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM_BE", 0, 2), Tuple2#(Meta#(MetaField#("portA", 0), Conc#(BRAM_Compat::BRAMServerBE#(addr, data, n))), Meta#(MetaField#("portB", 1), Conc#(BRAM_Compat::BRAMServerBE#(addr, data, n)))))))} {Generic#(BRAM_Compat::BRAM_DUAL_PORT#(addr, data), Meta#(MetaData#("BRAM_DUAL_PORT", "BRAM_Compat", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM_DUAL_PORT", 0, 2), Tuple2#(Meta#(MetaField#("a", 0), Conc#(BRAM_Compat::BRAM_PORT#(addr, data))), Meta#(MetaField#("b", 1), Conc#(BRAM_Compat::BRAM_PORT#(addr, data)))))))} {Generic#(BRAM_Compat::BRAM_DUAL_PORT_BE#(addr, data, n), Meta#(MetaData#("BRAM_DUAL_PORT_BE", "BRAM_Compat", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM_DUAL_PORT_BE", 0, 2), Tuple2#(Meta#(MetaField#("a", 0), Conc#(BRAM_Compat::BRAM_PORT_BE#(addr, data, n))), Meta#(MetaField#("b", 1), Conc#(BRAM_Compat::BRAM_PORT_BE#(addr, data, n)))))))} {Generic#(BRAM_Compat::BRAM_PORT#(addr, data), Meta#(MetaData#("BRAM_PORT", "BRAM_Compat", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM_PORT", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function Action f(Bool x1, addr x2, data x3))), Meta#(MetaField#("read", 1), Conc#(data))))))} {Generic#(BRAM_Compat::BRAM_PORT_BE#(addr, data, n), Meta#(MetaData#("BRAM_PORT_BE", "BRAM_Compat", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM_PORT_BE", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function Action f(Bit#(n) x1, addr x2, data x3))), Meta#(MetaField#("read", 1), Conc#(data))))))} {Generic#(BRAM_Compat::_BRAM_Compat.BRAM_DUAL_PORT288#(_n0, _n1, _n2), Meta#(MetaData#("_BRAM_Compat.BRAM_DUAL_PORT288", "BRAM_Compat", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAM_Compat.BRAM_DUAL_PORT288", 0, 4), Tuple4#(Meta#(MetaField#("a_put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("a_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("b_put", 2), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("b_read", 3), Conc#(Bit#(_n0)))))))} {Generic#(BRAM_Compat::_BRAM_Compat.BRAM_DUAL_PORT324#(_n0, _n1, _n2), Meta#(MetaData#("_BRAM_Compat.BRAM_DUAL_PORT324", "BRAM_Compat", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAM_Compat.BRAM_DUAL_PORT324", 0, 4), Tuple4#(Meta#(MetaField#("a_put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("a_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("b_put", 2), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("b_read", 3), Conc#(Bit#(_n0)))))))} {Generic#(BRAM_Compat::_BRAM_Compat.BRAM_PORT881#(_n0, _n1, _n2), Meta#(MetaData#("_BRAM_Compat.BRAM_PORT881", "BRAM_Compat", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAM_Compat.BRAM_PORT881", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAM_Compat::_BRAM_Compat.BRAM_PORT903#(_n0, _n1, _n2), Meta#(MetaData#("_BRAM_Compat.BRAM_PORT903", "BRAM_Compat", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAM_Compat.BRAM_PORT903", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAM_Compat::_BRAM_Compat.BRAM_PORT_BE1147#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_BRAM_Compat.BRAM_PORT_BE1147", "BRAM_Compat", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_BRAM_Compat.BRAM_PORT_BE1147", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAM_Compat::_BRAM_Compat.BRAM_PORT_BE1178#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_BRAM_Compat.BRAM_PORT_BE1178", "BRAM_Compat", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_BRAM_Compat.BRAM_PORT_BE1178", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Bag::Bag#(numElems, keyType, datType), Meta#(MetaData#("Bag", "Bag", Tuple3#(NumArg#(numElems), StarArg#(keyType), StarArg#(datType)), 1), Meta#(MetaConsNamed#("Bag", 0, 11), Tuple11#(Meta#(MetaField#("isMember", 0), Conc#(function VnD::VnD#(datType) f(keyType x1))), Meta#(MetaField#("dataMatch", 1), Conc#(function Bool f(datType x1))), Meta#(MetaField#("insert", 2), Conc#(function Action f(keyType x1, datType x2))), Meta#(MetaField#("update", 3), Conc#(function Action f(keyType x1, datType x2))), Meta#(MetaField#("full", 4), Conc#(Bool)), Meta#(MetaField#("nextFull", 5), Conc#(Bool)), Meta#(MetaField#("empty", 6), Conc#(Bool)), Meta#(MetaField#("remove", 7), Conc#(function Action f(keyType x1))), Meta#(MetaField#("nextKey", 8), Conc#(VnD::VnD#(keyType))), Meta#(MetaField#("nextData", 9), Conc#(VnD::VnD#(datType))), Meta#(MetaField#("iterateNext", 10), Conc#(Action))))))} {Generic#(Bag::Entry#(keyType, datType), Meta#(MetaData#("Entry", "Bag", Tuple2#(StarArg#(keyType), StarArg#(datType)), 1), Meta#(MetaConsNamed#("Entry", 0, 2), Tuple2#(Meta#(MetaField#("key", 0), Conc#(keyType)), Meta#(MetaField#("dat", 1), Conc#(datType))))))} {Generic#(Bag::FFBag#(numElems, keyType, datType, depth), Meta#(MetaData#("FFBag", "Bag", Tuple4#(NumArg#(numElems), StarArg#(keyType), StarArg#(datType), NumArg#(depth)), 1), Meta#(MetaConsNamed#("FFBag", 0, 4), Tuple4#(Meta#(MetaField#("enq", 0), Conc#(function Action f(keyType x1, datType x2))), Meta#(MetaField#("first", 1), Conc#(function VnD::VnD#(datType) f(keyType x1))), Meta#(MetaField#("deq", 2), Conc#(function Action f(keyType x1))), Meta#(MetaField#("full", 3), Conc#(Bool))))))} {Generic#(Bit#(_v100), ConcPrim#(Bit#(_v100)))} {Generic#(Bool, Meta#(MetaData#("Bool", "Prelude", void, 2), Either#(Meta#(MetaConsAnon#("False", 0, 0), void), Meta#(MetaConsAnon#("True", 1, 0), void))))} {Generic#(Branch_Predictor::BTB_Entry, Meta#(MetaData#("BTB_Entry", "Branch_Predictor", void, 1), Meta#(MetaConsNamed#("BTB_Entry", 0, 3), Tuple3#(Meta#(MetaField#("valid", 0), Conc#(Bool)), Meta#(MetaField#("pc_tag", 1), Conc#(Branch_Predictor::BTB_Tag)), Meta#(MetaField#("predicted_pc", 2), Conc#(Branch_Predictor::Word_Addr))))))} {Generic#(Branch_Predictor::Branch_Predictor_IFC, Meta#(MetaData#("Branch_Predictor_IFC", "Branch_Predictor", void, 1), Meta#(MetaConsNamed#("Branch_Predictor_IFC", 0, 4), Tuple4#(Meta#(MetaField#("reset", 0), Conc#(Action)), Meta#(MetaField#("predict_req", 1), Conc#(function Action f(ISA_Decls::WordXL x1))), Meta#(MetaField#("predict_rsp", 2), Conc#(function ISA_Decls::WordXL f(Bool x1, ISA_Decls::Instr x2))), Meta#(MetaField#("bp_train", 3), Conc#(function Action f(ISA_Decls::WordXL x1, Bool x2, ISA_Decls::Instr x3, CPU_Globals::CF_Info x4)))))))} {Generic#(BufferMode, Meta#(MetaData#("BufferMode", "Prelude", void, 3), Either#(Meta#(MetaConsAnon#("NoBuffering", 0, 0), void), Either#(Meta#(MetaConsAnon#("LineBuffering", 1, 0), void), Meta#(MetaConsAnon#("BlockBuffering", 2, 1), Meta#(MetaField#("_1", 0), Conc#(Maybe#(Integer))))))))} {Generic#(BusDefines::BusReceiver#(a), Meta#(MetaData#("BusReceiver", "BusDefines", StarArg#(a), 1), Meta#(MetaConsNamed#("BusReceiver", 0, 2), Tuple2#(Meta#(MetaField#("in", 0), Conc#(BusDefines::BusRecv#(a))), Meta#(MetaField#("out", 1), Conc#(FIFO::FIFO#(a)))))))} {Generic#(BusDefines::BusRecv#(a), Meta#(MetaData#("BusRecv", "BusDefines", StarArg#(a), 1), Meta#(MetaConsNamed#("BusRecv", 0, 3), Tuple3#(Meta#(MetaField#("data", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("valid", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("ready", 2), Conc#(Bool))))))} {Generic#(BusDefines::BusSend#(a), Meta#(MetaData#("BusSend", "BusDefines", StarArg#(a), 1), Meta#(MetaConsNamed#("BusSend", 0, 3), Tuple3#(Meta#(MetaField#("data", 0), Conc#(a)), Meta#(MetaField#("valid", 1), Conc#(Bool)), Meta#(MetaField#("ready", 2), Conc#(function Action f(Bool x1)))))))} {Generic#(BusDefines::BusSender#(a), Meta#(MetaData#("BusSender", "BusDefines", StarArg#(a), 1), Meta#(MetaConsNamed#("BusSender", 0, 2), Tuple2#(Meta#(MetaField#("in", 0), Conc#(FIFO::FIFO#(a))), Meta#(MetaField#("out", 1), Conc#(BusDefines::BusSend#(a)))))))} {Generic#(BusSwitch::BusSwitch#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("BusSwitch", "BusSwitch", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("BusSwitch", 0, 3), Tuple3#(Meta#(MetaField#("set_path", 0), Conc#(function Action f(BusSwitch::BusSwitchPath#(id_size, addr_size, data_size, length_size, user_size) x1))), Meta#(MetaField#("done", 1), Conc#(Bool)), Meta#(MetaField#("ack", 2), Conc#(Action))))))} {Generic#(BusSwitch::BusSwitchPath#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("BusSwitchPath", "BusSwitch", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("BusSwitchPath", 0, 4), Tuple4#(Meta#(MetaField#("send_port", 0), Conc#(TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("recv_port", 1), Conc#(TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("send_id", 2), Conc#(TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("recv_id", 3), Conc#(TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(ButtonController::Button, Meta#(MetaData#("Button", "ButtonController", void, 1), Meta#(MetaConsNamed#("Button", 0, 1), Meta#(MetaField#("button", 0), Conc#(function Action f(Bit#(1) x1))))))} {Generic#(ButtonController::ButtonController, Meta#(MetaData#("ButtonController", "ButtonController", void, 1), Meta#(MetaConsNamed#("ButtonController", 0, 6), Tuple6#(Meta#(MetaField#("pressed", 0), Conc#(Bool)), Meta#(MetaField#("released", 1), Conc#(Bool)), Meta#(MetaField#("setRepeatParams", 2), Conc#(function Action f(UInt#(10) x1, UInt#(10) x2))), Meta#(MetaField#("repeating", 3), Conc#(Bool)), Meta#(MetaField#("_read", 4), Conc#(Bool)), Meta#(MetaField#("ifc", 5), Conc#(ButtonController::Button))))))} {Generic#(BypassReg::WReg#(a), Meta#(MetaData#("WReg", "BypassReg", StarArg#(a), 1), Meta#(MetaConsNamed#("WReg", 0, 3), Tuple3#(Meta#(MetaField#("bypass", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("_read", 1), Conc#(a)), Meta#(MetaField#("_write", 2), Conc#(function Action f(a x1)))))))} {Generic#(CB::CompletionBuffer#(ln, a, b), Meta#(MetaData#("CompletionBuffer", "CB", Tuple3#(NumArg#(ln), StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("CompletionBuffer", 0, 4), Tuple4#(Meta#(MetaField#("request", 0), Conc#(GetPut::Put#(CB::TokenRequest#(a, ln)))), Meta#(MetaField#("reserve", 1), Conc#(GetPut::Get#(CB::TokenRange#(a, ln)))), Meta#(MetaField#("complete", 2), Conc#(GetPut::Put#(Tuple2#(Bit#(ln), b)))), Meta#(MetaField#("drain", 3), Conc#(GetPut::Get#(b)))))))} {Generic#(CB::TokenRR#(a, ln), Meta#(MetaData#("TokenRR", "CB", Tuple2#(StarArg#(a), NumArg#(ln)), 2), Either#(Meta#(MetaConsAnon#("Request", 0, 1), Meta#(MetaField#("_1", 0), Conc#(CB::TokenRequest#(a, ln)))), Meta#(MetaConsAnon#("Range", 1, 1), Meta#(MetaField#("_1", 0), Conc#(CB::TokenRange#(a, ln)))))))} {Generic#(CB::TokenRange#(a, ln), Meta#(MetaData#("TokenRange", "CB", Tuple2#(StarArg#(a), NumArg#(ln)), 1), Meta#(MetaConsNamed#("TokenRange", 0, 3), Tuple3#(Meta#(MetaField#("label", 0), Conc#(a)), Meta#(MetaField#("token", 1), Conc#(Bit#(ln))), Meta#(MetaField#("size", 2), Conc#(Bit#(ln)))))))} {Generic#(CB::TokenRequest#(a, ln), Meta#(MetaData#("TokenRequest", "CB", Tuple2#(StarArg#(a), NumArg#(ln)), 1), Meta#(MetaConsNamed#("TokenRequest", 0, 2), Tuple2#(Meta#(MetaField#("label", 0), Conc#(a)), Meta#(MetaField#("size", 1), Conc#(Bit#(ln)))))))} {Generic#(CBus::CBus#(sa, sd), Meta#(MetaData#("CBus", "CBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("CBus", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function Action f(Bit#(sa) x1, Bit#(sd) x2))), Meta#(MetaField#("read", 1), Conc#(function ActionValue#(Bit#(sd)) f(Bit#(sa) x1)))))))} {Generic#(CBus::CRAddr#(sa, sd), Meta#(MetaData#("CRAddr", "CBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("CRAddr", 0, 2), Tuple2#(Meta#(MetaField#("a", 0), Conc#(Bit#(sa))), Meta#(MetaField#("o", 1), Conc#(Bit#(TLog#(sd))))))))} {Generic#(CBus::IWithCBus#(cbus_IFC, device_IFC), Meta#(MetaData#("IWithCBus", "CBus", Tuple2#(StarArg#(cbus_IFC), StarArg#(device_IFC)), 1), Meta#(MetaConsNamed#("IWithCBus", 0, 2), Tuple2#(Meta#(MetaField#("cbus_ifc", 0), Conc#(cbus_IFC)), Meta#(MetaField#("device_ifc", 1), Conc#(device_IFC))))))} {Generic#(CGetPut::CClientS#(n, a, sa, b, sb), Meta#(MetaData#("CClientS", "CGetPut", Tuple5#(NumArg#(n), StarArg#(a), NumArg#(sa), StarArg#(b), NumArg#(sb)), 1), Meta#(MetaConsNamed#("CClientS", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(CGetPut::CGetS#(n, a, sa))), Meta#(MetaField#("response", 1), Conc#(CGetPut::CPutS#(n, b, sb)))))))} {Generic#(CGetPut::CGetS#(n, a, sa), Meta#(MetaData#("CGetS", "CGetPut", Tuple3#(NumArg#(n), StarArg#(a), NumArg#(sa)), 1), Meta#(MetaConsNamed#("CGetS", 0, 3), Tuple3#(Meta#(MetaField#("gvalue", 0), Conc#(Bit#(sa))), Meta#(MetaField#("gpresent", 1), Conc#(Bool)), Meta#(MetaField#("gcredit", 2), Conc#(function Action f(Bool x1)))))))} {Generic#(CGetPut::CPutS#(n, a, sa), Meta#(MetaData#("CPutS", "CGetPut", Tuple3#(NumArg#(n), StarArg#(a), NumArg#(sa)), 1), Meta#(MetaConsNamed#("CPutS", 0, 3), Tuple3#(Meta#(MetaField#("pvalue", 0), Conc#(function Action f(Bit#(sa) x1))), Meta#(MetaField#("ppresent", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("pcredit", 2), Conc#(Bool))))))} {Generic#(CGetPut::CServerS#(n, a, sa, b, sb), Meta#(MetaData#("CServerS", "CGetPut", Tuple5#(NumArg#(n), StarArg#(a), NumArg#(sa), StarArg#(b), NumArg#(sb)), 1), Meta#(MetaConsNamed#("CServerS", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(CGetPut::CPutS#(n, a, sa))), Meta#(MetaField#("response", 1), Conc#(CGetPut::CGetS#(n, b, sb)))))))} {Generic#(CHERICC_Fat::Bounds, Meta#(MetaData#("Bounds", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("Bounds", 0, 3), Tuple3#(Meta#(MetaField#("exp", 0), Conc#(CHERICC_Fat::Exp)), Meta#(MetaField#("topBits", 1), Conc#(Bit#(CHERICC_Fat::MW))), Meta#(MetaField#("baseBits", 2), Conc#(Bit#(CHERICC_Fat::MW)))))))} {Generic#(CHERICC_Fat::BoundsEmbeddedExp, Meta#(MetaData#("BoundsEmbeddedExp", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("BoundsEmbeddedExp", 0, 5), Tuple5#(Meta#(MetaField#("embeddedExp", 0), Conc#(Bool)), Meta#(MetaField#("topUpperBits", 1), Conc#(Bit#(TSub#(CHERICC_Fat::MW, TAdd#(CHERICC_Fat::HalfExpW, 2))))), Meta#(MetaField#("expTopHalf", 2), Conc#(Bit#(CHERICC_Fat::HalfExpW))), Meta#(MetaField#("baseUpperBits", 3), Conc#(Bit#(TSub#(CHERICC_Fat::MW, CHERICC_Fat::HalfExpW)))), Meta#(MetaField#("expBotHalf", 4), Conc#(Bit#(CHERICC_Fat::HalfExpW)))))))} {Generic#(CHERICC_Fat::BoundsExp0, Meta#(MetaData#("BoundsExp0", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("BoundsExp0", 0, 3), Tuple3#(Meta#(MetaField#("embeddedExp", 0), Conc#(Bool)), Meta#(MetaField#("top", 1), Conc#(Bit#(TSub#(CHERICC_Fat::MW, 2)))), Meta#(MetaField#("base", 2), Conc#(Bit#(CHERICC_Fat::MW)))))))} {Generic#(CHERICC_Fat::CapFat, Meta#(MetaData#("CapFat", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("CapFat", 0, 9), Tuple9#(Meta#(MetaField#("isCapability", 0), Conc#(Bool)), Meta#(MetaField#("address", 1), Conc#(Bit#(CHERICC_Fat::CapAddrW))), Meta#(MetaField#("addrBits", 2), Conc#(Bit#(CHERICC_Fat::MW))), Meta#(MetaField#("perms", 3), Conc#(CHERICC_Fat::Perms)), Meta#(MetaField#("flags", 4), Conc#(Bit#(CHERICC_Fat::FlagsW))), Meta#(MetaField#("reserved", 5), Conc#(Bit#(CHERICC_Fat::ResW))), Meta#(MetaField#("otype", 6), Conc#(Bit#(CHERICC_Fat::OTypeW))), Meta#(MetaField#("format", 7), Conc#(CHERICC_Fat::Format)), Meta#(MetaField#("bounds", 8), Conc#(CHERICC_Fat::Bounds))))))} {Generic#(CHERICC_Fat::CapPipe, Meta#(MetaData#("CapPipe", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("CapPipe", 0, 2), Tuple2#(Meta#(MetaField#("capFat", 0), Conc#(CHERICC_Fat::CapFat)), Meta#(MetaField#("tempFields", 1), Conc#(CHERICC_Fat::TempFields))))))} {Generic#(CHERICC_Fat::CapabilityInMemory, Meta#(MetaData#("CapabilityInMemory", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("CapabilityInMemory", 0, 7), Tuple7#(Meta#(MetaField#("isCapability", 0), Conc#(Bool)), Meta#(MetaField#("perms", 1), Conc#(CHERICC_Fat::Perms)), Meta#(MetaField#("reserved", 2), Conc#(Bit#(CHERICC_Fat::ResW))), Meta#(MetaField#("flags", 3), Conc#(Bit#(CHERICC_Fat::FlagsW))), Meta#(MetaField#("otype", 4), Conc#(Bit#(CHERICC_Fat::OTypeW))), Meta#(MetaField#("bounds", 5), Conc#(CHERICC_Fat::CBounds)), Meta#(MetaField#("address", 6), Conc#(CHERICC_Fat::CapAddr))))))} {Generic#(CHERICC_Fat::Format, Meta#(MetaData#("Format", "CHERICC_Fat", void, 2), Either#(Meta#(MetaConsAnon#("Exp0", 0, 0), void), Meta#(MetaConsAnon#("EmbeddedExp", 1, 0), void))))} {Generic#(CHERICC_Fat::HPerms, Meta#(MetaData#("HPerms", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("HPerms", 0, 12), Tuple12#(Meta#(MetaField#("permit_set_CID", 0), Conc#(Bool)), Meta#(MetaField#("access_sys_regs", 1), Conc#(Bool)), Meta#(MetaField#("permit_unseal", 2), Conc#(Bool)), Meta#(MetaField#("permit_ccall", 3), Conc#(Bool)), Meta#(MetaField#("permit_seal", 4), Conc#(Bool)), Meta#(MetaField#("permit_store_ephemeral_cap", 5), Conc#(Bool)), Meta#(MetaField#("permit_store_cap", 6), Conc#(Bool)), Meta#(MetaField#("permit_load_cap", 7), Conc#(Bool)), Meta#(MetaField#("permit_store", 8), Conc#(Bool)), Meta#(MetaField#("permit_load", 9), Conc#(Bool)), Meta#(MetaField#("permit_execute", 10), Conc#(Bool)), Meta#(MetaField#("non_ephemeral", 11), Conc#(Bool))))))} {Generic#(CHERICC_Fat::MetaInfo, Meta#(MetaData#("MetaInfo", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("MetaInfo", 0, 6), Tuple6#(Meta#(MetaField#("repBoundTopBits", 0), Conc#(Bit#(3))), Meta#(MetaField#("topHi", 1), Conc#(Bool)), Meta#(MetaField#("baseHi", 2), Conc#(Bool)), Meta#(MetaField#("addrHi", 3), Conc#(Bool)), Meta#(MetaField#("topCorrection", 4), Conc#(Int#(2))), Meta#(MetaField#("baseCorrection", 5), Conc#(Int#(2)))))))} {Generic#(CHERICC_Fat::Perms, Meta#(MetaData#("Perms", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("Perms", 0, 2), Tuple2#(Meta#(MetaField#("soft", 0), Conc#(Bit#(CHERICC_Fat::UPermW))), Meta#(MetaField#("hard", 1), Conc#(CHERICC_Fat::HPerms))))))} {Generic#(CHERICC_Fat::VnD#(t), Meta#(MetaData#("VnD", "CHERICC_Fat", StarArg#(t), 1), Meta#(MetaConsNamed#("VnD", 0, 2), Tuple2#(Meta#(MetaField#("v", 0), Conc#(Bool)), Meta#(MetaField#("d", 1), Conc#(t))))))} {Generic#(CHERICap::Exact#(t), Meta#(MetaData#("Exact", "CHERICap", StarArg#(t), 1), Meta#(MetaConsNamed#("Exact", 0, 2), Tuple2#(Meta#(MetaField#("exact", 0), Conc#(Bool)), Meta#(MetaField#("value", 1), Conc#(t))))))} {Generic#(CHERICap::HardPerms, Meta#(MetaData#("HardPerms", "CHERICap", void, 1), Meta#(MetaConsNamed#("HardPerms", 0, 12), Tuple12#(Meta#(MetaField#("permitSetCID", 0), Conc#(Bool)), Meta#(MetaField#("accessSysRegs", 1), Conc#(Bool)), Meta#(MetaField#("permitUnseal", 2), Conc#(Bool)), Meta#(MetaField#("permitCCall", 3), Conc#(Bool)), Meta#(MetaField#("permitSeal", 4), Conc#(Bool)), Meta#(MetaField#("permitStoreLocalCap", 5), Conc#(Bool)), Meta#(MetaField#("permitStoreCap", 6), Conc#(Bool)), Meta#(MetaField#("permitLoadCap", 7), Conc#(Bool)), Meta#(MetaField#("permitStore", 8), Conc#(Bool)), Meta#(MetaField#("permitLoad", 9), Conc#(Bool)), Meta#(MetaField#("permitExecute", 10), Conc#(Bool)), Meta#(MetaField#("global", 11), Conc#(Bool))))))} {Generic#(CHERICap::Kind#(ot), Meta#(MetaData#("Kind", "CHERICap", NumArg#(ot), 5), Either#(Meta#(MetaConsAnon#("UNSEALED", 0, 0), void), Either#(Meta#(MetaConsAnon#("SENTRY", 1, 0), void), Either#(Meta#(MetaConsAnon#("RES0", 2, 0), void), Either#(Meta#(MetaConsAnon#("RES1", 3, 0), void), Meta#(MetaConsAnon#("SEALED_WITH_TYPE", 4, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(ot))))))))))} {Generic#(CHERICap::SetBoundsReturn#(t, n), Meta#(MetaData#("SetBoundsReturn", "CHERICap", Tuple2#(StarArg#(t), NumArg#(n)), 1), Meta#(MetaConsNamed#("SetBoundsReturn", 0, 4), Tuple4#(Meta#(MetaField#("cap", 0), Conc#(t)), Meta#(MetaField#("exact", 1), Conc#(Bool)), Meta#(MetaField#("length", 2), Conc#(Bit#(n))), Meta#(MetaField#("mask", 3), Conc#(Bit#(n)))))))} {Generic#(COBS::COBSDecoder#(n), Meta#(MetaData#("COBSDecoder", "COBS", NumArg#(n), 1), Meta#(MetaConsNamed#("COBSDecoder", 0, 2), Tuple2#(Meta#(MetaField#("msg", 0), Conc#(GetPut::Get#(Tuple2#(UInt#(TLog#(TAdd#(1, n))), Vector::Vector#(n, Bit#(8)))))), Meta#(MetaField#("byte", 1), Conc#(GetPut::Put#(Bit#(8))))))))} {Generic#(COBS::COBSEncoder#(n), Meta#(MetaData#("COBSEncoder", "COBS", NumArg#(n), 1), Meta#(MetaConsNamed#("COBSEncoder", 0, 2), Tuple2#(Meta#(MetaField#("msg", 0), Conc#(GetPut::Put#(Tuple2#(UInt#(TLog#(TAdd#(1, n))), Vector::Vector#(n, Bit#(8)))))), Meta#(MetaField#("byte", 1), Conc#(GetPut::Get#(Bit#(8))))))))} {Generic#(CPU::CPU_State, Meta#(MetaData#("CPU_State", "CPU", void, 15), Either#(Meta#(MetaConsAnon#("CPU_RESET1", 0, 0), void), Either#(Meta#(MetaConsAnon#("CPU_RESET2", 1, 0), void), Either#(Meta#(MetaConsAnon#("CPU_GDB_PAUSING", 2, 0), void), Either#(Meta#(MetaConsAnon#("CPU_DEBUG_MODE", 3, 0), void), Either#(Meta#(MetaConsAnon#("CPU_RUNNING", 4, 0), void), Either#(Meta#(MetaConsAnon#("CPU_TRAP", 5, 0), void), Either#(Meta#(MetaConsAnon#("CPU_START_TRAP_HANDLER", 6, 0), void), Either#(Meta#(MetaConsAnon#("CPU_CSRRW_2", 7, 0), void), Either#(Meta#(MetaConsAnon#("CPU_CSRR_S_or_C_2", 8, 0), void), Either#(Meta#(MetaConsAnon#("CPU_SCR_W_2", 9, 0), void), Either#(Meta#(MetaConsAnon#("CPU_CSRRX_RESTART", 10, 0), void), Either#(Meta#(MetaConsAnon#("CPU_FENCE_I", 11, 0), void), Either#(Meta#(MetaConsAnon#("CPU_FENCE", 12, 0), void), Either#(Meta#(MetaConsAnon#("CPU_SFENCE_VMA", 13, 0), void), Meta#(MetaConsAnon#("CPU_WFI_PAUSED", 14, 0), void)))))))))))))))))} {Generic#(CPU_Globals::Bypass, Meta#(MetaData#("Bypass", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Bypass", 0, 3), Tuple3#(Meta#(MetaField#("bypass_state", 0), Conc#(CPU_Globals::Bypass_State)), Meta#(MetaField#("rd", 1), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("rd_val", 2), Conc#(CHERICC_Fat::CapPipe))))))} {Generic#(CPU_Globals::Bypass_State, Meta#(MetaData#("Bypass_State", "CPU_Globals", void, 3), Either#(Meta#(MetaConsAnon#("BYPASS_RD_NONE", 0, 0), void), Either#(Meta#(MetaConsAnon#("BYPASS_RD", 1, 0), void), Meta#(MetaConsAnon#("BYPASS_RD_RDVAL", 2, 0), void)))))} {Generic#(CPU_Globals::CF_Info, Meta#(MetaData#("CF_Info", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("CF_Info", 0, 5), Tuple5#(Meta#(MetaField#("cf_op", 0), Conc#(CPU_Globals::CF_Op)), Meta#(MetaField#("from_PC", 1), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("taken", 2), Conc#(Bool)), Meta#(MetaField#("fallthru_PC", 3), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("taken_PC", 4), Conc#(ISA_Decls::WordXL))))))} {Generic#(CPU_Globals::CF_Op, Meta#(MetaData#("CF_Op", "CPU_Globals", void, 4), Either#(Meta#(MetaConsAnon#("CF_BR", 0, 0), void), Either#(Meta#(MetaConsAnon#("CF_JAL", 1, 0), void), Either#(Meta#(MetaConsAnon#("CF_JALR", 2, 0), void), Meta#(MetaConsAnon#("CF_None", 3, 0), void))))))} {Generic#(CPU_Globals::Control, Meta#(MetaData#("Control", "CPU_Globals", void, 15), Either#(Meta#(MetaConsAnon#("CONTROL_DISCARD", 0, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_STRAIGHT", 1, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_BRANCH", 2, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_CSRR_W", 3, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_CAPBRANCH", 4, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_SCR_W", 5, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_CSRR_S_or_C", 6, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_FENCE", 7, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_FENCE_I", 8, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_SFENCE_VMA", 9, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_MRET", 10, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_SRET", 11, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_URET", 12, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_WFI", 13, 0), void), Meta#(MetaConsAnon#("CONTROL_TRAP", 14, 0), void)))))))))))))))))} {Generic#(CPU_Globals::Data_Stage1_to_Stage2, Meta#(MetaData#("Data_Stage1_to_Stage2", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Data_Stage1_to_Stage2", 0, 29), Tuple29#(Meta#(MetaField#("priv", 0), Conc#(ISA_Decls::Priv_Mode)), Meta#(MetaField#("pcc", 1), Conc#(CPU_Globals::PCC_T)), Meta#(MetaField#("instr", 2), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("op_stage2", 3), Conc#(CPU_Globals::Op_Stage2)), Meta#(MetaField#("rd", 4), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("addr", 5), Conc#(ISA_Decls::Addr)), Meta#(MetaField#("val1", 6), Conc#(CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapPipe))), Meta#(MetaField#("val2", 7), Conc#(CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapPipe))), Meta#(MetaField#("val1_fast", 8), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("val2_fast", 9), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("check_authority", 10), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("check_authority_idx", 11), Conc#(Bit#(6))), Meta#(MetaField#("check_address_low", 12), Conc#(Bit#(ISA_Decls::XLEN))), Meta#(MetaField#("check_address_high", 13), Conc#(Bit#(TAdd#(ISA_Decls::XLEN, 1)))), Meta#(MetaField#("check_enable", 14), Conc#(Bool)), Meta#(MetaField#("check_inclusive", 15), Conc#(Bool)), Meta#(MetaField#("check_exact_enable", 16), Conc#(Bool)), Meta#(MetaField#("check_exact_success", 17), Conc#(Bool)), Meta#(MetaField#("set_offset_in_bounds", 18), Conc#(Bool)), Meta#(MetaField#("mem_allow_cap", 19), Conc#(Bool)), Meta#(MetaField#("mem_width_code", 20), Conc#(Bit#(3))), Meta#(MetaField#("mem_unsigned", 21), Conc#(Bool)), Meta#(MetaField#("fval1", 22), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("fval2", 23), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("fval3", 24), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("rd_in_fpr", 25), Conc#(Bool)), Meta#(MetaField#("rs_frm_fpr", 26), Conc#(Bool)), Meta#(MetaField#("val1_frm_gpr", 27), Conc#(Bool)), Meta#(MetaField#("rounding_mode", 28), Conc#(Bit#(3)))))))} {Generic#(CPU_Globals::Data_Stage2_to_Stage3, Meta#(MetaData#("Data_Stage2_to_Stage3", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Data_Stage2_to_Stage3", 0, 10), Tuple10#(Meta#(MetaField#("pcc", 0), Conc#(CPU_Globals::PCC_T)), Meta#(MetaField#("instr", 1), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("priv", 2), Conc#(ISA_Decls::Priv_Mode)), Meta#(MetaField#("rd_valid", 3), Conc#(Bool)), Meta#(MetaField#("rd", 4), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("rd_val", 5), Conc#(CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapReg))), Meta#(MetaField#("upd_flags", 6), Conc#(Bool)), Meta#(MetaField#("rd_in_fpr", 7), Conc#(Bool)), Meta#(MetaField#("fpr_flags", 8), Conc#(Bit#(5))), Meta#(MetaField#("frd_val", 9), Conc#(ISA_Decls::WordFL))))))} {Generic#(CPU_Globals::Data_StageD_to_Stage1, Meta#(MetaData#("Data_StageD_to_Stage1", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Data_StageD_to_Stage1", 0, 14), Tuple14#(Meta#(MetaField#("fetch_addr", 0), Conc#(ISA_Decls::Addr)), Meta#(MetaField#("is_cap_mode", 1), Conc#(Bool)), Meta#(MetaField#("refresh_pcc", 2), Conc#(Bool)), Meta#(MetaField#("priv", 3), Conc#(ISA_Decls::Priv_Mode)), Meta#(MetaField#("epoch", 4), Conc#(CPU_Globals::Epoch)), Meta#(MetaField#("is_i32_not_i16", 5), Conc#(Bool)), Meta#(MetaField#("exc", 6), Conc#(Bool)), Meta#(MetaField#("exc_code", 7), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("tval", 8), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("instr", 9), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("instr_or_instr_C", 10), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("pred_fetch_addr", 11), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("pred_is_cap_mode", 12), Conc#(Bool)), Meta#(MetaField#("decoded_instr", 13), Conc#(ISA_Decls::Decoded_Instr))))))} {Generic#(CPU_Globals::Data_StageF_to_StageD, Meta#(MetaData#("Data_StageF_to_StageD", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Data_StageF_to_StageD", 0, 12), Tuple12#(Meta#(MetaField#("fetch_addr", 0), Conc#(ISA_Decls::Addr)), Meta#(MetaField#("is_cap_mode", 1), Conc#(Bool)), Meta#(MetaField#("refresh_pcc", 2), Conc#(Bool)), Meta#(MetaField#("epoch", 3), Conc#(CPU_Globals::Epoch)), Meta#(MetaField#("priv", 4), Conc#(ISA_Decls::Priv_Mode)), Meta#(MetaField#("is_i32_not_i16", 5), Conc#(Bool)), Meta#(MetaField#("exc", 6), Conc#(Bool)), Meta#(MetaField#("exc_code", 7), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("tval", 8), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("instr", 9), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("pred_fetch_addr", 10), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("pred_is_cap_mode", 11), Conc#(Bool))))))} {Generic#(CPU_Globals::FBypass, Meta#(MetaData#("FBypass", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("FBypass", 0, 3), Tuple3#(Meta#(MetaField#("bypass_state", 0), Conc#(CPU_Globals::Bypass_State)), Meta#(MetaField#("rd", 1), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("rd_val", 2), Conc#(ISA_Decls::WordFL))))))} {Generic#(CPU_Globals::Op_Stage2, Meta#(MetaData#("Op_Stage2", "CPU_Globals", void, 7), Either#(Meta#(MetaConsAnon#("OP_Stage2_ALU", 0, 0), void), Either#(Meta#(MetaConsAnon#("OP_Stage2_LD", 1, 0), void), Either#(Meta#(MetaConsAnon#("OP_Stage2_ST", 2, 0), void), Either#(Meta#(MetaConsAnon#("OP_Stage2_M", 3, 0), void), Either#(Meta#(MetaConsAnon#("OP_Stage2_AMO", 4, 0), void), Either#(Meta#(MetaConsAnon#("OP_Stage2_FD", 5, 0), void), Meta#(MetaConsAnon#("OP_Stage2_TestSubset", 6, 0), void)))))))))} {Generic#(CPU_Globals::Output_Stage1, Meta#(MetaData#("Output_Stage1", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Output_Stage1", 0, 7), Tuple7#(Meta#(MetaField#("ostatus", 0), Conc#(CPU_Globals::Stage_OStatus)), Meta#(MetaField#("control", 1), Conc#(CPU_Globals::Control)), Meta#(MetaField#("trap_info", 2), Conc#(CPU_Globals::Trap_Info_Pipe)), Meta#(MetaField#("redirect", 3), Conc#(Bool)), Meta#(MetaField#("next_pcc", 4), Conc#(CPU_Globals::PCC_T)), Meta#(MetaField#("cf_info", 5), Conc#(CPU_Globals::CF_Info)), Meta#(MetaField#("data_to_stage2", 6), Conc#(CPU_Globals::Data_Stage1_to_Stage2))))))} {Generic#(CPU_Globals::Output_Stage2, Meta#(MetaData#("Output_Stage2", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Output_Stage2", 0, 7), Tuple7#(Meta#(MetaField#("ostatus", 0), Conc#(CPU_Globals::Stage_OStatus)), Meta#(MetaField#("trap_info", 1), Conc#(CPU_Globals::Trap_Info_Pipe)), Meta#(MetaField#("perf", 2), Conc#(CPU_Globals::Output_Stage2_Perf)), Meta#(MetaField#("check_success", 3), Conc#(Bool)), Meta#(MetaField#("bypass", 4), Conc#(CPU_Globals::Bypass)), Meta#(MetaField#("fbypass", 5), Conc#(CPU_Globals::FBypass)), Meta#(MetaField#("data_to_stage3", 6), Conc#(CPU_Globals::Data_Stage2_to_Stage3))))))} {Generic#(CPU_Globals::Output_Stage2_Perf, Meta#(MetaData#("Output_Stage2_Perf", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Output_Stage2_Perf", 0, 5), Tuple5#(Meta#(MetaField#("sc_success", 0), Conc#(Bool)), Meta#(MetaField#("ld_cap", 1), Conc#(Bool)), Meta#(MetaField#("ld_cap_tag_set", 2), Conc#(Bool)), Meta#(MetaField#("ld_wait", 3), Conc#(Bool)), Meta#(MetaField#("st_wait", 4), Conc#(Bool))))))} {Generic#(CPU_Globals::Output_Stage3, Meta#(MetaData#("Output_Stage3", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Output_Stage3", 0, 3), Tuple3#(Meta#(MetaField#("ostatus", 0), Conc#(CPU_Globals::Stage_OStatus)), Meta#(MetaField#("bypass", 1), Conc#(CPU_Globals::Bypass)), Meta#(MetaField#("fbypass", 2), Conc#(CPU_Globals::FBypass))))))} {Generic#(CPU_Globals::Output_StageD, Meta#(MetaData#("Output_StageD", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Output_StageD", 0, 2), Tuple2#(Meta#(MetaField#("ostatus", 0), Conc#(CPU_Globals::Stage_OStatus)), Meta#(MetaField#("data_to_stage1", 1), Conc#(CPU_Globals::Data_StageD_to_Stage1))))))} {Generic#(CPU_Globals::Output_StageF, Meta#(MetaData#("Output_StageF", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Output_StageF", 0, 2), Tuple2#(Meta#(MetaField#("ostatus", 0), Conc#(CPU_Globals::Stage_OStatus)), Meta#(MetaField#("data_to_stageD", 1), Conc#(CPU_Globals::Data_StageF_to_StageD))))))} {Generic#(CPU_Globals::Pipeline_Val#(capType), Meta#(MetaData#("Pipeline_Val", "CPU_Globals", StarArg#(capType), 1), Meta#(MetaConsNamed#("Pipeline_Val", 0, 1), Meta#(MetaField#("val", 0), Conc#(capType)))))} {Generic#(CPU_Globals::Stage_OStatus, Meta#(MetaData#("Stage_OStatus", "CPU_Globals", void, 4), Either#(Meta#(MetaConsAnon#("OSTATUS_EMPTY", 0, 0), void), Either#(Meta#(MetaConsAnon#("OSTATUS_BUSY", 1, 0), void), Either#(Meta#(MetaConsAnon#("OSTATUS_PIPE", 2, 0), void), Meta#(MetaConsAnon#("OSTATUS_NONPIPE", 3, 0), void))))))} {Generic#(CPU_Globals::Trap_Info_Pipe, Meta#(MetaData#("Trap_Info_Pipe", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Trap_Info_Pipe", 0, 5), Tuple5#(Meta#(MetaField#("epcc", 0), Conc#(CPU_Globals::PCC_T)), Meta#(MetaField#("cheri_exc_code", 1), Conc#(ISA_Decls::CHERI_Exc_Code)), Meta#(MetaField#("cheri_exc_reg", 2), Conc#(Bit#(6))), Meta#(MetaField#("exc_code", 3), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("tval", 4), Conc#(ISA_Decls::Addr))))))} {Generic#(CPU_IFC::CPU_IFC, Meta#(MetaData#("CPU_IFC", "CPU_IFC", void, 1), Meta#(MetaConsNamed#("CPU_IFC", 0, 18), Tuple18#(Meta#(MetaField#("hart0_server_reset", 0), Conc#(ClientServer::Server#(Bool, Bool))), Meta#(MetaField#("imem_master", 1), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User))), Meta#(MetaField#("mem_master", 2), Conc#(Fabric_Defs::Near_Mem_Fabric_IFC)), Meta#(MetaField#("dma_server", 3), Conc#(AXI4_Types::AXI4_Slave#(Near_Mem_IFC::Wd_Id_Dma, Near_Mem_IFC::Wd_Addr_Dma, Near_Mem_IFC::Wd_Data_Dma, Near_Mem_IFC::Wd_AW_User_Dma, Near_Mem_IFC::Wd_W_User_Dma, Near_Mem_IFC::Wd_B_User_Dma, Near_Mem_IFC::Wd_AR_User_Dma, Near_Mem_IFC::Wd_R_User_Dma))), Meta#(MetaField#("m_external_interrupt_req", 4), Conc#(function Action f(Bool x1))), Meta#(MetaField#("s_external_interrupt_req", 5), Conc#(function Action f(Bool x1))), Meta#(MetaField#("software_interrupt_req", 6), Conc#(function Action f(Bool x1))), Meta#(MetaField#("timer_interrupt_req", 7), Conc#(function Action f(Bool x1))), Meta#(MetaField#("nmi_req", 8), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hart0_server_run_halt", 9), Conc#(ClientServer::Server#(Bool, Bool))), Meta#(MetaField#("hart0_put_other_req", 10), Conc#(GetPut::Put#(Bit#(4)))), Meta#(MetaField#("hart0_gpr_mem_server", 11), Conc#(ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("hart0_fpr_mem_server", 12), Conc#(ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::FLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::FLEN)))), Meta#(MetaField#("hart0_csr_mem_server", 13), Conc#(ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("relay_external_events", 14), Conc#(function Action f(StatCounters::AXI4_Slave_Events x1, StatCounters::AXI4_Master_Events x2, StatCounters::EventsTGC x3))), Meta#(MetaField#("set_verbosity", 15), Conc#(function Action f(Bit#(4) x1, Bit#(64) x2))), Meta#(MetaField#("ma_ddr4_ready", 16), Conc#(Action)), Meta#(MetaField#("mv_status", 17), Conc#(Bit#(8)))))))} {Generic#(CPU_Stage1::CPU_Stage1_IFC, Meta#(MetaData#("CPU_Stage1_IFC", "CPU_Stage1", void, 1), Meta#(MetaConsNamed#("CPU_Stage1_IFC", 0, 5), Tuple5#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("out", 1), Conc#(CPU_Globals::Output_Stage1)), Meta#(MetaField#("deq", 2), Conc#(Action)), Meta#(MetaField#("enq", 3), Conc#(function Action f(CPU_Globals::Data_StageD_to_Stage1 x1))), Meta#(MetaField#("set_full", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(CPU_Stage2::CPU_Stage2_IFC, Meta#(MetaData#("CPU_Stage2_IFC", "CPU_Stage2", void, 1), Meta#(MetaConsNamed#("CPU_Stage2_IFC", 0, 5), Tuple5#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("out", 1), Conc#(CPU_Globals::Output_Stage2)), Meta#(MetaField#("deq", 2), Conc#(Action)), Meta#(MetaField#("enq", 3), Conc#(function Action f(CPU_Globals::Data_Stage1_to_Stage2 x1, Bool x2))), Meta#(MetaField#("set_full", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(CPU_Stage3::CPU_Stage3_IFC, Meta#(MetaData#("CPU_Stage3_IFC", "CPU_Stage3", void, 1), Meta#(MetaConsNamed#("CPU_Stage3_IFC", 0, 6), Tuple6#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("out", 1), Conc#(CPU_Globals::Output_Stage3)), Meta#(MetaField#("deq", 2), Conc#(Action)), Meta#(MetaField#("enq", 3), Conc#(function Action f(CPU_Globals::Data_Stage2_to_Stage3 x1))), Meta#(MetaField#("set_full", 4), Conc#(function Action f(Bool x1))), Meta#(MetaField#("show_state", 5), Conc#(Action))))))} {Generic#(CPU_StageD::CPU_StageD_IFC, Meta#(MetaData#("CPU_StageD_IFC", "CPU_StageD", void, 1), Meta#(MetaConsNamed#("CPU_StageD_IFC", 0, 5), Tuple5#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("out", 1), Conc#(CPU_Globals::Output_StageD)), Meta#(MetaField#("deq", 2), Conc#(Action)), Meta#(MetaField#("enq", 3), Conc#(function Action f(CPU_Globals::Data_StageF_to_StageD x1))), Meta#(MetaField#("set_full", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(CPU_StageF::CPU_StageF_IFC, Meta#(MetaData#("CPU_StageF_IFC", "CPU_StageF", void, 1), Meta#(MetaConsNamed#("CPU_StageF_IFC", 0, 6), Tuple6#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("out", 1), Conc#(CPU_Globals::Output_StageF)), Meta#(MetaField#("deq", 2), Conc#(Action)), Meta#(MetaField#("enq", 3), Conc#(function Action f(CPU_Globals::Epoch x1, ISA_Decls::WordXL x2, Bool x3, Bool x4, ISA_Decls::Priv_Mode x5, Bit#(1) x6, Bit#(1) x7, ISA_Decls::WordXL x8))), Meta#(MetaField#("bp_train", 4), Conc#(function Action f(ISA_Decls::WordXL x1, Bool x2, ISA_Decls::Instr x3, CPU_Globals::CF_Info x4))), Meta#(MetaField#("set_full", 5), Conc#(function Action f(Bool x1)))))))} {Generic#(CRC::CRC#(n), Meta#(MetaData#("CRC", "CRC", NumArg#(n), 1), Meta#(MetaConsNamed#("CRC", 0, 4), Tuple4#(Meta#(MetaField#("add", 0), Conc#(function Action f(Bit#(8) x1))), Meta#(MetaField#("clear", 1), Conc#(Action)), Meta#(MetaField#("result", 2), Conc#(Bit#(n))), Meta#(MetaField#("complete", 3), Conc#(ActionValue#(Bit#(n))))))))} {Generic#(CReg5#(t), Meta#(MetaData#("CReg5", "PreludeBSV", StarArg#(t), 1), Meta#(MetaConsNamed#("CReg5", 0, 5), Tuple5#(Meta#(MetaField#("port0", 0), Conc#(Reg#(t))), Meta#(MetaField#("port1", 1), Conc#(Reg#(t))), Meta#(MetaField#("port2", 2), Conc#(Reg#(t))), Meta#(MetaField#("port3", 3), Conc#(Reg#(t))), Meta#(MetaField#("port4", 4), Conc#(Reg#(t)))))))} {Generic#(CSR_MIE::CSR_MIE_IFC, Meta#(MetaData#("CSR_MIE_IFC", "CSR_MIE", void, 1), Meta#(MetaConsNamed#("CSR_MIE_IFC", 0, 5), Tuple5#(Meta#(MetaField#("reset", 0), Conc#(Action)), Meta#(MetaField#("mv_read", 1), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mav_write", 2), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mv_sie_read", 3), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mav_sie_write", 4), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2)))))))} {Generic#(CSR_MIP::CSR_MIP_IFC, Meta#(MetaData#("CSR_MIP_IFC", "CSR_MIP", void, 1), Meta#(MetaConsNamed#("CSR_MIP_IFC", 0, 9), Tuple9#(Meta#(MetaField#("reset", 0), Conc#(Action)), Meta#(MetaField#("mv_read", 1), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mav_write", 2), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mv_sip_read", 3), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mav_sip_write", 4), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("m_external_interrupt_req", 5), Conc#(function Action f(Bool x1))), Meta#(MetaField#("s_external_interrupt_req", 6), Conc#(function Action f(Bool x1))), Meta#(MetaField#("software_interrupt_req", 7), Conc#(function Action f(Bool x1))), Meta#(MetaField#("timer_interrupt_req", 8), Conc#(function Action f(Bool x1)))))))} {Generic#(CSR_MSTATUS::CSR_MSTATUS_IFC, Meta#(MetaData#("CSR_MSTATUS_IFC", "CSR_MSTATUS", void, 1), Meta#(MetaConsNamed#("CSR_MSTATUS_IFC", 0, 11), Tuple11#(Meta#(MetaField#("reset", 0), Conc#(function Action f(ISA_Decls::MISA x1))), Meta#(MetaField#("mv_read", 1), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mv_write", 2), Conc#(function ISA_Decls::WordXL f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("ma_write", 3), Conc#(function Action f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mav_write", 4), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mv_ustatus_read", 5), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("ma_ustatus_write", 6), Conc#(function Action f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mav_ustatus_write", 7), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mv_sstatus_read", 8), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("ma_sstatus_write", 9), Conc#(function Action f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mav_sstatus_write", 10), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2)))))))} {Generic#(CSR_RegFile_MSU::AccessPerms, Meta#(MetaData#("AccessPerms", "CSR_RegFile_MSU", void, 1), Meta#(MetaConsNamed#("AccessPerms", 0, 2), Tuple2#(Meta#(MetaField#("exists", 0), Conc#(Bool)), Meta#(MetaField#("requires_asr", 1), Conc#(Bool))))))} {Generic#(CSR_RegFile_MSU::CSR_RegFile_IFC, Meta#(MetaData#("CSR_RegFile_IFC", "CSR_RegFile_MSU", void, 1), Meta#(MetaConsNamed#("CSR_RegFile_IFC", 0, 44), Tuple44#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("read_csr", 1), Conc#(function Maybe#(ISA_Decls::Word) f(ISA_Decls::CSR_Addr x1))), Meta#(MetaField#("read_csr_port2", 2), Conc#(function Maybe#(ISA_Decls::Word) f(ISA_Decls::CSR_Addr x1))), Meta#(MetaField#("read_scr", 3), Conc#(function Maybe#(CHERICC_Fat::CapReg) f(ISA_Decls::SCR_Addr x1))), Meta#(MetaField#("mav_read_csr", 4), Conc#(function ActionValue#(Maybe#(ISA_Decls::Word)) f(ISA_Decls::CSR_Addr x1))), Meta#(MetaField#("mav_csr_write", 5), Conc#(function ActionValue#(CSR_RegFile_MSU::CSR_Write_Result) f(ISA_Decls::CSR_Addr x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mav_scr_write", 6), Conc#(function ActionValue#(CHERICC_Fat::CapReg) f(ISA_Decls::SCR_Addr x1, CHERICC_Fat::CapReg x2))), Meta#(MetaField#("read_frm", 7), Conc#(Bit#(3))), Meta#(MetaField#("read_fflags", 8), Conc#(Bit#(5))), Meta#(MetaField#("mv_update_fcsr_fflags", 9), Conc#(function Bit#(5) f(Bit#(5) x1))), Meta#(MetaField#("ma_update_fcsr_fflags", 10), Conc#(function Action f(Bit#(5) x1))), Meta#(MetaField#("mv_update_mstatus_fs", 11), Conc#(function ISA_Decls::WordXL f(Bit#(2) x1))), Meta#(MetaField#("ma_update_mstatus_fs", 12), Conc#(function Action f(Bit#(2) x1))), Meta#(MetaField#("read_misa", 13), Conc#(ISA_Decls::MISA)), Meta#(MetaField#("read_mstatus", 14), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("read_sstatus", 15), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("read_ustatus", 16), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("read_satp", 17), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("csr_trap_actions", 18), Conc#(function ActionValue#(ISA_Decls::Trap_Info_CSR) f(ISA_Decls::Priv_Mode x1, CHERICC_Fat::CapPipe x2, Bool x3, Bool x4, ISA_Decls::CHERI_Exc_Code x5, Bit#(6) x6, ISA_Decls::Exc_Code x7, ISA_Decls::Word x8))), Meta#(MetaField#("csr_ret_actions", 19), Conc#(function ActionValue#(Tuple3#(CHERICC_Fat::CapPipe, ISA_Decls::Priv_Mode, ISA_Decls::Word)) f(ISA_Decls::Priv_Mode x1))), Meta#(MetaField#("read_csr_minstret", 20), Conc#(Bit#(64))), Meta#(MetaField#("csr_minstret_incr", 21), Conc#(Action)), Meta#(MetaField#("read_csr_mcycle", 22), Conc#(Bit#(64))), Meta#(MetaField#("read_csr_mtime", 23), Conc#(Bit#(64))), Meta#(MetaField#("send_performance_events", 24), Conc#(function Action f(Vector::Vector#(StatCounters::No_Of_Evts, Bit#(ISA_Decls::Report_Width)) x1))), Meta#(MetaField#("access_permitted_1", 25), Conc#(function CSR_RegFile_MSU::AccessPerms f(ISA_Decls::Priv_Mode x1, ISA_Decls::CSR_Addr x2, Bool x3))), Meta#(MetaField#("access_permitted_2", 26), Conc#(function CSR_RegFile_MSU::AccessPerms f(ISA_Decls::Priv_Mode x1, ISA_Decls::CSR_Addr x2, Bool x3))), Meta#(MetaField#("access_permitted_scr", 27), Conc#(function CSR_RegFile_MSU::AccessPerms f(ISA_Decls::Priv_Mode x1, ISA_Decls::SCR_Addr x2, Bool x3))), Meta#(MetaField#("csr_counter_read_fault", 28), Conc#(function Bool f(ISA_Decls::Priv_Mode x1, ISA_Decls::CSR_Addr x2))), Meta#(MetaField#("csr_mip_read", 29), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("m_external_interrupt_req", 30), Conc#(function Action f(Bool x1))), Meta#(MetaField#("s_external_interrupt_req", 31), Conc#(function Action f(Bool x1))), Meta#(MetaField#("timer_interrupt_req", 32), Conc#(function Action f(Bool x1))), Meta#(MetaField#("software_interrupt_req", 33), Conc#(function Action f(Bool x1))), Meta#(MetaField#("interrupt_pending", 34), Conc#(function Maybe#(ISA_Decls::Exc_Code) f(ISA_Decls::Priv_Mode x1))), Meta#(MetaField#("wfi_resume", 35), Conc#(Bool)), Meta#(MetaField#("nmi_req", 36), Conc#(function Action f(Bool x1))), Meta#(MetaField#("nmi_pending", 37), Conc#(Bool)), Meta#(MetaField#("read_dpcc", 38), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("write_dpcc", 39), Conc#(function Action f(CHERICC_Fat::CapPipe x1))), Meta#(MetaField#("dcsr_break_enters_debug", 40), Conc#(function Bool f(ISA_Decls::Priv_Mode x1))), Meta#(MetaField#("read_dcsr_step", 41), Conc#(Bool)), Meta#(MetaField#("write_dcsr_cause_priv", 42), Conc#(function Action f(DM_Common::DCSR_Cause x1, ISA_Decls::Priv_Mode x2))), Meta#(MetaField#("debug", 43), Conc#(Action))))))} {Generic#(CSR_RegFile_MSU::CSR_Write_Result, Meta#(MetaData#("CSR_Write_Result", "CSR_RegFile_MSU", void, 1), Meta#(MetaConsNamed#("CSR_Write_Result", 0, 2), Tuple2#(Meta#(MetaField#("new_csr_value", 0), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("m_new_csr_value2", 1), Conc#(Maybe#(ISA_Decls::WordXL)))))))} {Generic#(CSR_RegFile_MSU::RF_State, Meta#(MetaData#("RF_State", "CSR_RegFile_MSU", void, 2), Either#(Meta#(MetaConsAnon#("RF_RESET_START", 0, 0), void), Meta#(MetaConsAnon#("RF_RUNNING", 1, 0), void))))} {Generic#(CacheCorderer::CacheCorderer#(inFlight), Meta#(MetaData#("CacheCorderer", "CacheCorderer", NumArg#(inFlight), 1), Meta#(MetaConsNamed#("CacheCorderer", 0, 20), Tuple20#(Meta#(MetaField#("reqsEmpty", 0), Conc#(Bool)), Meta#(MetaField#("reqsFull", 1), Conc#(Bool)), Meta#(MetaField#("lookupCheckId", 2), Conc#(function Bool f(MemTypesCHERI::ReqId x1))), Meta#(MetaField#("lookupIsOngoing", 3), Conc#(Bool)), Meta#(MetaField#("lookupFlit", 4), Conc#(function MemTypesCHERI::Bank f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Bank x2))), Meta#(MetaField#("lookupReport", 5), Conc#(function Action f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Bank x2, MemTypesCHERI::Bank x3, MemTypesCHERI::Bank x4))), Meta#(MetaField#("slaveReq", 6), Conc#(function Action f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Line x2, MemTypesCHERI::Bank x3, MemTypesCHERI::Bank x4))), Meta#(MetaField#("slaveReqServeReady", 7), Conc#(function Bool f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Line x2))), Meta#(MetaField#("slaveReqExecuteReady", 8), Conc#(function ActionValue#(Bool) f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Bank x2))), Meta#(MetaField#("slaveRspIsOngoing", 9), Conc#(Bool)), Meta#(MetaField#("slaveRspLast", 10), Conc#(function Bool f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Bank x2))), Meta#(MetaField#("slaveRsp", 11), Conc#(function Action f(MemTypesCHERI::ReqId x1, Bool x2))), Meta#(MetaField#("mastReqsEmpty", 12), Conc#(Bool)), Meta#(MetaField#("mastReqsFull", 13), Conc#(Bool)), Meta#(MetaField#("mastReqsSpaces", 14), Conc#(Bit#(5))), Meta#(MetaField#("mastNextId", 15), Conc#(MemTypesCHERI::CheriTransactionID)), Meta#(MetaField#("mastCheckId", 16), Conc#(function Bool f(MemTypesCHERI::ReqId x1))), Meta#(MetaField#("mastReq", 17), Conc#(function Action f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Bank x2, MemTypesCHERI::Bank x3, MemTypesCHERI::Line x4, Bool x5))), Meta#(MetaField#("mastRsp", 18), Conc#(function Action f(MemTypesCHERI::ReqId x1, Bool x2, Bool x3))), Meta#(MetaField#("nextMastRspFlit", 19), Conc#(function MemTypesCHERI::Bank f(MemTypesCHERI::ReqId x1, Bool x2)))))))} {Generic#(CacheCorderer::ReqRec, Meta#(MetaData#("ReqRec", "CacheCorderer", void, 1), Meta#(MetaConsNamed#("ReqRec", 0, 5), Tuple5#(Meta#(MetaField#("id", 0), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("line", 1), Conc#(MemTypesCHERI::Line)), Meta#(MetaField#("first", 2), Conc#(MemTypesCHERI::Bank)), Meta#(MetaField#("last", 3), Conc#(MemTypesCHERI::Bank)), Meta#(MetaField#("idBeforeMe", 4), Conc#(VnD::VnD#(MemTypesCHERI::ReqId)))))))} {Generic#(CacheCorderer::TransRecord, Meta#(MetaData#("TransRecord", "CacheCorderer", void, 1), Meta#(MetaConsNamed#("TransRecord", 0, 5), Tuple5#(Meta#(MetaField#("ongoing", 0), Conc#(Bool)), Meta#(MetaField#("id", 1), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("first", 2), Conc#(MemTypesCHERI::Bank)), Meta#(MetaField#("last", 3), Conc#(MemTypesCHERI::Bank)), Meta#(MetaField#("next", 4), Conc#(MemTypesCHERI::Bank))))))} {Generic#(CacheCore::AddrTagWay#(ways, keyBits, tagBits), Meta#(MetaData#("AddrTagWay", "CacheCore", Tuple3#(NumArg#(ways), NumArg#(keyBits), NumArg#(tagBits)), 1), Meta#(MetaConsNamed#("AddrTagWay", 0, 5), Tuple5#(Meta#(MetaField#("addr", 0), Conc#(CacheCore::CacheAddress#(keyBits, tagBits))), Meta#(MetaField#("tag", 1), Conc#(CacheCore::TagLine#(tagBits))), Meta#(MetaField#("way", 2), Conc#(CacheCore::Way#(ways))), Meta#(MetaField#("cached", 3), Conc#(Bool)), Meta#(MetaField#("reqId", 4), Conc#(MemTypesCHERI::ReqId))))))} {Generic#(CacheCore::CacheAddress#(keyBits, tagBits), Meta#(MetaData#("CacheAddress", "CacheCore", Tuple2#(NumArg#(keyBits), NumArg#(tagBits)), 1), Meta#(MetaConsNamed#("CacheAddress", 0, 4), Tuple4#(Meta#(MetaField#("tag", 0), Conc#(CacheCore::Tag#(tagBits))), Meta#(MetaField#("key", 1), Conc#(CacheCore::Key#(keyBits))), Meta#(MetaField#("bank", 2), Conc#(MemTypesCHERI::Bank)), Meta#(MetaField#("offset", 3), Conc#(CacheCore::Offset))))))} {Generic#(CacheCore::CacheCommit, Meta#(MetaData#("CacheCommit", "CacheCore", void, 1), Meta#(MetaConsNamed#("CacheCommit", 0, 2), Tuple2#(Meta#(MetaField#("id", 0), Conc#(MemTypesCHERI::CheriTransactionID)), Meta#(MetaField#("commit", 1), Conc#(Bool))))))} {Generic#(CacheCore::CacheCore#(ways, keyBits, inFlight), Meta#(MetaData#("CacheCore", "CacheCore", Tuple3#(NumArg#(ways), NumArg#(keyBits), NumArg#(inFlight)), 1), Meta#(MetaConsNamed#("CacheCore", 0, 7), Tuple7#(Meta#(MetaField#("canPut", 0), Conc#(Bool)), Meta#(MetaField#("put", 1), Conc#(function Action f(MemTypesCHERI::CheriMemRequest x1))), Meta#(MetaField#("response", 2), Conc#(MasterSlaveCHERI::CheckedGet#(MemTypesCHERI::CheriMemResponse))), Meta#(MetaField#("nextWillCommit", 3), Conc#(function Action f(Bool x1))), Meta#(MetaField#("invalidate", 4), Conc#(function Action f(MemTypesCHERI::CheriPhyAddr x1))), Meta#(MetaField#("invalidateDone", 5), Conc#(ActionValue#(Bool))), Meta#(MetaField#("events", 6), Conc#(CacheCore::EventsCacheCore))))))} {Generic#(CacheCore::CacheState, Meta#(MetaData#("CacheState", "CacheCore", void, 2), Either#(Meta#(MetaConsAnon#("Init", 0, 0), void), Meta#(MetaConsAnon#("Serving", 1, 0), void))))} {Generic#(CacheCore::ControlToken#(ways, keyBits, tagBits), Meta#(MetaData#("ControlToken", "CacheCore", Tuple3#(NumArg#(ways), NumArg#(keyBits), NumArg#(tagBits)), 1), Meta#(MetaConsNamed#("ControlToken", 0, 11), Tuple11#(Meta#(MetaField#("command", 0), Conc#(CacheCore::LookupCommand)), Meta#(MetaField#("req", 1), Conc#(MemTypesCHERI::CheriMemRequest)), Meta#(MetaField#("addr", 2), Conc#(CacheCore::CacheAddress#(keyBits, tagBits))), Meta#(MetaField#("readWidth", 3), Conc#(MemTypesCHERI::BytesPerFlit)), Meta#(MetaField#("dataKey", 4), Conc#(CacheCore::DataKey#(ways, keyBits))), Meta#(MetaField#("way", 5), Conc#(CacheCore::Way#(ways))), Meta#(MetaField#("last", 6), Conc#(Bool)), Meta#(MetaField#("fresh", 7), Conc#(Bool)), Meta#(MetaField#("invalidate", 8), Conc#(CacheCore::InvalidateToken#(ways, keyBits, tagBits))), Meta#(MetaField#("writebackTag", 9), Conc#(CacheCore::TagLine#(tagBits))), Meta#(MetaField#("rspError", 10), Conc#(MemTypesCHERI::Error))))))} {Generic#(CacheCore::DataKey#(ways, keyBits), Meta#(MetaData#("DataKey", "CacheCore", Tuple2#(NumArg#(ways), NumArg#(keyBits)), 1), Meta#(MetaConsNamed#("DataKey", 0, 2), Tuple2#(Meta#(MetaField#("key", 0), Conc#(CacheCore::Key#(keyBits))), Meta#(MetaField#("bank", 1), Conc#(MemTypesCHERI::Bank))))))} {Generic#(CacheCore::EventsCacheCore, Meta#(MetaData#("EventsCacheCore", "CacheCore", void, 1), Meta#(MetaConsNamed#("EventsCacheCore", 0, 7), Tuple7#(Meta#(MetaField#("evt_WRITE", 0), Conc#(Bool)), Meta#(MetaField#("evt_WRITE_MISS", 1), Conc#(Bool)), Meta#(MetaField#("evt_READ", 2), Conc#(Bool)), Meta#(MetaField#("evt_READ_MISS", 3), Conc#(Bool)), Meta#(MetaField#("evt_EVICT", 4), Conc#(Bool)), Meta#(MetaField#("evt_SET_TAG_WRITE", 5), Conc#(Bool)), Meta#(MetaField#("evt_SET_TAG_READ", 6), Conc#(Bool))))))} {Generic#(CacheCore::InvalidateToken#(ways, keyBits, tagBits), Meta#(MetaData#("InvalidateToken", "CacheCore", Tuple3#(NumArg#(ways), NumArg#(keyBits), NumArg#(tagBits)), 1), Meta#(MetaConsNamed#("InvalidateToken", 0, 4), Tuple4#(Meta#(MetaField#("tag", 0), Conc#(CacheCore::Tag#(tagBits))), Meta#(MetaField#("key", 1), Conc#(CacheCore::Key#(keyBits))), Meta#(MetaField#("way", 2), Conc#(CacheCore::Way#(ways))), Meta#(MetaField#("valid", 3), Conc#(Bool))))))} {Generic#(CacheCore::LookupCommand, Meta#(MetaData#("LookupCommand", "CacheCore", void, 3), Either#(Meta#(MetaConsAnon#("Serve", 0, 0), void), Either#(Meta#(MetaConsAnon#("Writeback", 1, 0), void), Meta#(MetaConsAnon#("MemResponse", 2, 0), void)))))} {Generic#(CacheCore::OrderBehaviour, Meta#(MetaData#("OrderBehaviour", "CacheCore", void, 2), Either#(Meta#(MetaConsAnon#("InOrder", 0, 0), void), Meta#(MetaConsAnon#("OutOfOrder", 1, 0), void))))} {Generic#(CacheCore::ReqIdWithSC, Meta#(MetaData#("ReqIdWithSC", "CacheCore", void, 1), Meta#(MetaConsNamed#("ReqIdWithSC", 0, 3), Tuple3#(Meta#(MetaField#("inId", 0), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("isSC", 1), Conc#(Bool)), Meta#(MetaField#("scResult", 2), Conc#(Bool))))))} {Generic#(CacheCore::RequestRecord#(ways, keyBits, tagBits), Meta#(MetaData#("RequestRecord", "CacheCore", Tuple3#(NumArg#(ways), NumArg#(keyBits), NumArg#(tagBits)), 1), Meta#(MetaConsNamed#("RequestRecord", 0, 9), Tuple9#(Meta#(MetaField#("key", 0), Conc#(CacheCore::Key#(keyBits))), Meta#(MetaField#("inId", 1), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("inDone", 2), Conc#(Bool)), Meta#(MetaField#("outId", 3), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("cached", 4), Conc#(Bool)), Meta#(MetaField#("oldTag", 5), Conc#(CacheCore::TagLine#(tagBits))), Meta#(MetaField#("oldWay", 6), Conc#(CacheCore::Way#(ways))), Meta#(MetaField#("oldDirty", 7), Conc#(Bool)), Meta#(MetaField#("write", 8), Conc#(Bool))))))} {Generic#(CacheCore::ResponseBehaviour, Meta#(MetaData#("ResponseBehaviour", "CacheCore", void, 2), Either#(Meta#(MetaConsAnon#("OnlyReadResponses", 0, 0), void), Meta#(MetaConsAnon#("RespondAll", 1, 0), void))))} {Generic#(CacheCore::ResponseToken, Meta#(MetaData#("ResponseToken", "CacheCore", void, 1), Meta#(MetaConsNamed#("ResponseToken", 0, 7), Tuple7#(Meta#(MetaField#("resp", 0), Conc#(MemTypesCHERI::CheriMemResponse)), Meta#(MetaField#("req", 1), Conc#(MemTypesCHERI::CheriMemRequest)), Meta#(MetaField#("rspId", 2), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("reportResponse", 3), Conc#(Bool)), Meta#(MetaField#("deqId", 4), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("deqReqCommits", 5), Conc#(Bool)), Meta#(MetaField#("enqRetryReq", 6), Conc#(Bool))))))} {Generic#(CacheCore::TagLine#(tagBits), Meta#(MetaData#("TagLine", "CacheCore", NumArg#(tagBits), 1), Meta#(MetaConsNamed#("TagLine", 0, 5), Tuple5#(Meta#(MetaField#("tag", 0), Conc#(CacheCore::Tag#(tagBits))), Meta#(MetaField#("dirty", 1), Conc#(Bool)), Meta#(MetaField#("valid", 2), Conc#(Vector::Vector#(MemTypesCHERI::CheriBurstSize, Bool))), Meta#(MetaField#("pendMem", 3), Conc#(Bool)), Meta#(MetaField#("capTags", 4), Conc#(CacheCore::LineCapTags))))))} {Generic#(CacheCore::TagUpdate#(ways, keyBits, tagBits), Meta#(MetaData#("TagUpdate", "CacheCore", Tuple3#(NumArg#(ways), NumArg#(keyBits), NumArg#(tagBits)), 1), Meta#(MetaConsNamed#("TagUpdate", 0, 4), Tuple4#(Meta#(MetaField#("doWrite", 0), Conc#(Bool)), Meta#(MetaField#("key", 1), Conc#(CacheCore::Key#(keyBits))), Meta#(MetaField#("newTag", 2), Conc#(CacheCore::TagLine#(tagBits))), Meta#(MetaField#("way", 3), Conc#(CacheCore::Way#(ways)))))))} {Generic#(CacheCore::WriteMissBehaviour, Meta#(MetaData#("WriteMissBehaviour", "CacheCore", void, 2), Either#(Meta#(MetaConsAnon#("WriteThrough", 0, 0), void), Meta#(MetaConsAnon#("WriteAllocate", 1, 0), void))))} {Generic#(Char, ConcPrim#(Char))} {Generic#(ClientServer::Client#(a, b), Meta#(MetaData#("Client", "ClientServer", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("Client", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(GetPut::Get#(a))), Meta#(MetaField#("response", 1), Conc#(GetPut::Put#(b)))))))} {Generic#(ClientServer::Server#(a, b), Meta#(MetaData#("Server", "ClientServer", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("Server", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(GetPut::Put#(a))), Meta#(MetaField#("response", 1), Conc#(GetPut::Get#(b)))))))} {Generic#(ClkCtrlServer::ClkCtrlReq, Meta#(MetaData#("ClkCtrlReq", "ClkCtrlServer", void, 4), Either#(Meta#(MetaConsAnon#("Edges", 0, 1), Meta#(MetaField#("_1", 0), Conc#(ClkCtrlServer::EdgeCount))), Either#(Meta#(MetaConsAnon#("Query", 1, 0), void), Either#(Meta#(MetaConsAnon#("Stop", 2, 0), void), Meta#(MetaConsAnon#("Resume", 3, 0), void))))))} {Generic#(ClkCtrlServer::ClkCtrlResp, Meta#(MetaData#("ClkCtrlResp", "ClkCtrlServer", void, 1), Meta#(MetaConsNamed#("ClkCtrlResp", 0, 4), Tuple4#(Meta#(MetaField#("cycle", 0), Conc#(ClkCtrlServer::ClkCtrlCycleStamp)), Meta#(MetaField#("running", 1), Conc#(Bool)), Meta#(MetaField#("free_running", 2), Conc#(Bool)), Meta#(MetaField#("edges", 3), Conc#(ClkCtrlServer::EdgeCount))))))} {Generic#(ClkCtrlServer::ClkCtrlServer, Meta#(MetaData#("ClkCtrlServer", "ClkCtrlServer", void, 1), Meta#(MetaConsNamed#("ClkCtrlServer", 0, 4), Tuple4#(Meta#(MetaField#("rx", 0), Conc#(GetPut::Put#(Bit#(32)))), Meta#(MetaField#("tx", 1), Conc#(GetPut::Get#(Bit#(32)))), Meta#(MetaField#("cclk", 2), Conc#(Clock)), Meta#(MetaField#("crst", 3), Conc#(Reset))))))} {Generic#(ClkCtrlServer::ClkCtrlServerCore, Meta#(MetaData#("ClkCtrlServerCore", "ClkCtrlServer", void, 1), Meta#(MetaConsNamed#("ClkCtrlServerCore", 0, 4), Tuple4#(Meta#(MetaField#("cmd", 0), Conc#(GetPut::Put#(ClkCtrlServer::ClkCtrlReq))), Meta#(MetaField#("status", 1), Conc#(GetPut::GetS#(ClkCtrlServer::ClkCtrlResp))), Meta#(MetaField#("preedge", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("allow_edge", 3), Conc#(Bool))))))} {Generic#(ClkCtrlServer::ClkCtrlServerWithCClk, Meta#(MetaData#("ClkCtrlServerWithCClk", "ClkCtrlServer", void, 1), Meta#(MetaConsNamed#("ClkCtrlServerWithCClk", 0, 4), Tuple4#(Meta#(MetaField#("rx", 0), Conc#(GetPut::Put#(Bit#(32)))), Meta#(MetaField#("tx", 1), Conc#(GetPut::Get#(Bit#(32)))), Meta#(MetaField#("preedge", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("allow_edge", 3), Conc#(Bool))))))} {Generic#(Clock, ConcPrim#(Clock))} {Generic#(ClockHacks::BlockIfc, Meta#(MetaData#("BlockIfc", "ClockHacks", void, 1), Meta#(MetaConsNamed#("BlockIfc", 0, 2), Tuple2#(Meta#(MetaField#("clk", 0), Conc#(Clock)), Meta#(MetaField#("rst", 1), Conc#(Reset))))))} {Generic#(ClockHacks::OutputBit, Meta#(MetaData#("OutputBit", "ClockHacks", void, 1), Meta#(MetaConsNamed#("OutputBit", 0, 1), Meta#(MetaField#("out", 0), Conc#(Bit#(1))))))} {Generic#(ClockHacks::UnpackedClock, Meta#(MetaData#("UnpackedClock", "ClockHacks", void, 1), Meta#(MetaConsNamed#("UnpackedClock", 0, 2), Tuple2#(Meta#(MetaField#("clk", 0), Conc#(Clock)), Meta#(MetaField#("in", 1), Conc#(function Action f(Bit#(1) x1)))))))} {Generic#(ClockHacks::UnpackedReset, Meta#(MetaData#("UnpackedReset", "ClockHacks", void, 1), Meta#(MetaConsNamed#("UnpackedReset", 0, 2), Tuple2#(Meta#(MetaField#("rst", 0), Conc#(Reset)), Meta#(MetaField#("in", 1), Conc#(function Action f(Bit#(1) x1)))))))} {Generic#(ClockHacks::_ClockHacks.OutputBit13, Meta#(MetaData#("_ClockHacks.OutputBit13", "ClockHacks", void, 1), Meta#(MetaConsNamed#("_ClockHacks.OutputBit13", 0, 1), Meta#(MetaField#("out", 0), Conc#(Bit#(1))))))} {Generic#(ClockHacks::_ClockHacks.OutputBit27, Meta#(MetaData#("_ClockHacks.OutputBit27", "ClockHacks", void, 1), Meta#(MetaConsNamed#("_ClockHacks.OutputBit27", 0, 1), Meta#(MetaField#("out", 0), Conc#(Bit#(1))))))} {Generic#(ClockHacks::_ClockHacks.UnpackedClock47#(_n0), Meta#(MetaData#("_ClockHacks.UnpackedClock47", "ClockHacks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_ClockHacks.UnpackedClock47", 0, 2), Tuple2#(Meta#(MetaField#("clk", 0), Conc#(Clock)), Meta#(MetaField#("in", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(ClockHacks::_ClockHacks.UnpackedReset67#(_n0), Meta#(MetaData#("_ClockHacks.UnpackedReset67", "ClockHacks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_ClockHacks.UnpackedReset67", 0, 2), Tuple2#(Meta#(MetaField#("rst", 0), Conc#(Reset)), Meta#(MetaField#("in", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(Clocks::ClockDividerIfc, Meta#(MetaData#("ClockDividerIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("ClockDividerIfc", 0, 3), Tuple3#(Meta#(MetaField#("fastClock", 0), Conc#(Clock)), Meta#(MetaField#("slowClock", 1), Conc#(Clock)), Meta#(MetaField#("clockReady", 2), Conc#(Clocks::ClkNextRdy))))))} {Generic#(Clocks::ClockDivider_internal, Meta#(MetaData#("ClockDivider_internal", "Clocks", void, 1), Meta#(MetaConsNamed#("ClockDivider_internal", 0, 2), Tuple2#(Meta#(MetaField#("slowClock", 0), Conc#(Clock)), Meta#(MetaField#("clockReady", 1), Conc#(Clocks::ClkNextRdy))))))} {Generic#(Clocks::ClockGenIfc, Meta#(MetaData#("ClockGenIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("ClockGenIfc", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(Clocks::CrossingReg#(a), Meta#(MetaData#("CrossingReg", "Clocks", StarArg#(a), 1), Meta#(MetaConsNamed#("CrossingReg", 0, 3), Tuple3#(Meta#(MetaField#("_write", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("_read", 1), Conc#(a)), Meta#(MetaField#("crossed", 2), Conc#(a))))))} {Generic#(Clocks::DualPortRamIfc#(addr_t, data_t), Meta#(MetaData#("DualPortRamIfc", "Clocks", Tuple2#(StarArg#(addr_t), StarArg#(data_t)), 1), Meta#(MetaConsNamed#("DualPortRamIfc", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function Action f(addr_t x1, data_t x2))), Meta#(MetaField#("read", 1), Conc#(function data_t f(addr_t x1)))))))} {Generic#(Clocks::FIFOF_MC#(a), Meta#(MetaData#("FIFOF_MC", "Clocks", StarArg#(a), 1), Meta#(MetaConsNamed#("FIFOF_MC", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("i_notFull", 4), Conc#(Bool)), Meta#(MetaField#("notEmpty", 5), Conc#(Bool)), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bool))))))} {Generic#(Clocks::GatedClockIfc, Meta#(MetaData#("GatedClockIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("GatedClockIfc", 0, 3), Tuple3#(Meta#(MetaField#("setGateCond", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("getGateCond", 1), Conc#(Bool)), Meta#(MetaField#("new_clk", 2), Conc#(Clock))))))} {Generic#(Clocks::JoinRstIfc, Meta#(MetaData#("JoinRstIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("JoinRstIfc", 0, 1), Meta#(MetaField#("reset_out", 0), Conc#(Reset)))))} {Generic#(Clocks::MakeClockIfc#(one_bit_type), Meta#(MetaData#("MakeClockIfc", "Clocks", StarArg#(one_bit_type), 1), Meta#(MetaConsNamed#("MakeClockIfc", 0, 5), Tuple5#(Meta#(MetaField#("setClockValue", 0), Conc#(function Action f(one_bit_type x1))), Meta#(MetaField#("getClockValue", 1), Conc#(one_bit_type)), Meta#(MetaField#("setGateCond", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("getGateCond", 3), Conc#(Bool)), Meta#(MetaField#("new_clk", 4), Conc#(Clock))))))} {Generic#(Clocks::MakeResetIfc, Meta#(MetaData#("MakeResetIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("MakeResetIfc", 0, 3), Tuple3#(Meta#(MetaField#("assertReset", 0), Conc#(Action)), Meta#(MetaField#("isAsserted", 1), Conc#(Bool)), Meta#(MetaField#("new_rst", 2), Conc#(Reset))))))} {Generic#(Clocks::MakeUngatedClockIfc#(one_bit_type), Meta#(MetaData#("MakeUngatedClockIfc", "Clocks", StarArg#(one_bit_type), 1), Meta#(MetaConsNamed#("MakeUngatedClockIfc", 0, 6), Tuple6#(Meta#(MetaField#("setClockValue", 0), Conc#(function Action f(one_bit_type x1))), Meta#(MetaField#("getClockValue", 1), Conc#(one_bit_type)), Meta#(MetaField#("setGateCond", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("getGateCond", 3), Conc#(Bool)), Meta#(MetaField#("unused", 4), Conc#(Bool)), Meta#(MetaField#("new_clk", 5), Conc#(Clock))))))} {Generic#(Clocks::MuxClkIfc, Meta#(MetaData#("MuxClkIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("MuxClkIfc", 0, 2), Tuple2#(Meta#(MetaField#("select", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("clock_out", 1), Conc#(Clock))))))} {Generic#(Clocks::MuxRstIfc, Meta#(MetaData#("MuxRstIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("MuxRstIfc", 0, 2), Tuple2#(Meta#(MetaField#("select", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("reset_out", 1), Conc#(Reset))))))} {Generic#(Clocks::RegI#(a_type), Meta#(MetaData#("RegI", "Clocks", StarArg#(a_type), 1), Meta#(MetaConsNamed#("RegI", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("read", 1), Conc#(a_type))))))} {Generic#(Clocks::ResetGenIfc, Meta#(MetaData#("ResetGenIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("ResetGenIfc", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(Clocks::SelectClkIfc, Meta#(MetaData#("SelectClkIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("SelectClkIfc", 0, 3), Tuple3#(Meta#(MetaField#("select", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("clock_out", 1), Conc#(Clock)), Meta#(MetaField#("reset_out", 2), Conc#(Reset))))))} {Generic#(Clocks::SyncBitIfc#(one_bit_type), Meta#(MetaData#("SyncBitIfc", "Clocks", StarArg#(one_bit_type), 1), Meta#(MetaConsNamed#("SyncBitIfc", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(function Action f(one_bit_type x1))), Meta#(MetaField#("read", 1), Conc#(one_bit_type))))))} {Generic#(Clocks::SyncFIFO0Ifc, Meta#(MetaData#("SyncFIFO0Ifc", "Clocks", void, 1), Meta#(MetaConsNamed#("SyncFIFO0Ifc", 0, 4), Tuple4#(Meta#(MetaField#("enq", 0), Conc#(Action)), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("notFull", 2), Conc#(Bool)), Meta#(MetaField#("notEmpty", 3), Conc#(Bool))))))} {Generic#(Clocks::SyncFIFOIfc#(a_type), Meta#(MetaData#("SyncFIFOIfc", "Clocks", StarArg#(a_type), 1), Meta#(MetaConsNamed#("SyncFIFOIfc", 0, 5), Tuple5#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("notEmpty", 4), Conc#(Bool))))))} {Generic#(Clocks::SyncPulseIfc, Meta#(MetaData#("SyncPulseIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("SyncPulseIfc", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(Action)), Meta#(MetaField#("pulse", 1), Conc#(Bool))))))} {Generic#(Clocks::_Clocks.ClockDivider_internal589, Meta#(MetaData#("_Clocks.ClockDivider_internal589", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockDivider_internal589", 0, 2), Tuple2#(Meta#(MetaField#("slowClock", 0), Conc#(Clock)), Meta#(MetaField#("clockReady", 1), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.ClockDivider_internal606, Meta#(MetaData#("_Clocks.ClockDivider_internal606", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockDivider_internal606", 0, 2), Tuple2#(Meta#(MetaField#("slowClock", 0), Conc#(Clock)), Meta#(MetaField#("clockReady", 1), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.ClockDivider_internal618, Meta#(MetaData#("_Clocks.ClockDivider_internal618", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockDivider_internal618", 0, 2), Tuple2#(Meta#(MetaField#("slowClock", 0), Conc#(Clock)), Meta#(MetaField#("clockReady", 1), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.ClockDivider_internal647, Meta#(MetaData#("_Clocks.ClockDivider_internal647", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockDivider_internal647", 0, 2), Tuple2#(Meta#(MetaField#("slowClock", 0), Conc#(Clock)), Meta#(MetaField#("clockReady", 1), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.ClockGenIfc323, Meta#(MetaData#("_Clocks.ClockGenIfc323", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc323", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(Clocks::_Clocks.ClockGenIfc43, Meta#(MetaData#("_Clocks.ClockGenIfc43", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc43", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(Clocks::_Clocks.ClockGenIfc83, Meta#(MetaData#("_Clocks.ClockGenIfc83", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc83", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(Clocks::_Clocks.CrossingReg1804#(_n0, _n1), Meta#(MetaData#("_Clocks.CrossingReg1804", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.CrossingReg1804", 0, 3), Tuple3#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("crossed", 2), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.CrossingReg1827#(_n0, _n1), Meta#(MetaData#("_Clocks.CrossingReg1827", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.CrossingReg1827", 0, 3), Tuple3#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("crossed", 2), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.CrossingReg1850#(_n0, _n1), Meta#(MetaData#("_Clocks.CrossingReg1850", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.CrossingReg1850", 0, 3), Tuple3#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("crossed", 2), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.DualPortRamIfc1604#(_n0, _n1, _n2), Meta#(MetaData#("_Clocks.DualPortRamIfc1604", "Clocks", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_Clocks.DualPortRamIfc1604", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function ActionValue_#(_n2) f(Bit#(_n1) x1, Bit#(_n0) x2))), Meta#(MetaField#("read", 1), Conc#(function Bit#(_n0) f(Bit#(_n1) x1)))))))} {Generic#(Clocks::_Clocks.FIFOF_MC2030#(_n0, _n1), Meta#(MetaData#("_Clocks.FIFOF_MC2030", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.FIFOF_MC2030", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.FIFOF_MC2103#(_n0, _n1), Meta#(MetaData#("_Clocks.FIFOF_MC2103", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.FIFOF_MC2103", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.GatedClockIfc283#(_n0), Meta#(MetaData#("_Clocks.GatedClockIfc283", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.GatedClockIfc283", 0, 3), Tuple3#(Meta#(MetaField#("setGateCond", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("getGateCond", 1), Conc#(Bit#(1))), Meta#(MetaField#("new_clk", 2), Conc#(Clock))))))} {Generic#(Clocks::_Clocks.JoinRstIfc2568, Meta#(MetaData#("_Clocks.JoinRstIfc2568", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.JoinRstIfc2568", 0, 1), Meta#(MetaField#("reset_out", 0), Conc#(Reset)))))} {Generic#(Clocks::_Clocks.MakeClockIfc160#(_n0), Meta#(MetaData#("_Clocks.MakeClockIfc160", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MakeClockIfc160", 0, 5), Tuple5#(Meta#(MetaField#("setClockValue", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("getClockValue", 1), Conc#(Bit#(1))), Meta#(MetaField#("setGateCond", 2), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("getGateCond", 3), Conc#(Bit#(1))), Meta#(MetaField#("new_clk", 4), Conc#(Clock))))))} {Generic#(Clocks::_Clocks.MakeResetIfc2276#(_n0), Meta#(MetaData#("_Clocks.MakeResetIfc2276", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MakeResetIfc2276", 0, 3), Tuple3#(Meta#(MetaField#("assertReset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("isAsserted", 1), Conc#(Bit#(1))), Meta#(MetaField#("new_rst", 2), Conc#(Reset))))))} {Generic#(Clocks::_Clocks.MakeResetIfc2297#(_n0), Meta#(MetaData#("_Clocks.MakeResetIfc2297", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MakeResetIfc2297", 0, 3), Tuple3#(Meta#(MetaField#("assertReset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("isAsserted", 1), Conc#(Bit#(1))), Meta#(MetaField#("new_rst", 2), Conc#(Reset))))))} {Generic#(Clocks::_Clocks.MakeResetIfc2318#(_n0), Meta#(MetaData#("_Clocks.MakeResetIfc2318", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MakeResetIfc2318", 0, 3), Tuple3#(Meta#(MetaField#("assertReset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("isAsserted", 1), Conc#(Bit#(1))), Meta#(MetaField#("new_rst", 2), Conc#(Reset))))))} {Generic#(Clocks::_Clocks.MakeUngatedClockIfc220#(_n0), Meta#(MetaData#("_Clocks.MakeUngatedClockIfc220", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MakeUngatedClockIfc220", 0, 6), Tuple6#(Meta#(MetaField#("setClockValue", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("getClockValue", 1), Conc#(Bit#(1))), Meta#(MetaField#("setGateCond", 2), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("getGateCond", 3), Conc#(Bit#(1))), Meta#(MetaField#("unused", 4), Conc#(Bit#(1))), Meta#(MetaField#("new_clk", 5), Conc#(Clock))))))} {Generic#(Clocks::_Clocks.MuxClkIfc363#(_n0), Meta#(MetaData#("_Clocks.MuxClkIfc363", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MuxClkIfc363", 0, 2), Tuple2#(Meta#(MetaField#("select", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clock_out", 1), Conc#(Clock))))))} {Generic#(Clocks::_Clocks.MuxClkIfc380#(_n0), Meta#(MetaData#("_Clocks.MuxClkIfc380", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MuxClkIfc380", 0, 2), Tuple2#(Meta#(MetaField#("select", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clock_out", 1), Conc#(Clock))))))} {Generic#(Clocks::_Clocks.MuxRstIfc2545#(_n0), Meta#(MetaData#("_Clocks.MuxRstIfc2545", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MuxRstIfc2545", 0, 2), Tuple2#(Meta#(MetaField#("select", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("reset_out", 1), Conc#(Reset))))))} {Generic#(Clocks::_Clocks.RegI1170#(_n0, _n1), Meta#(MetaData#("_Clocks.RegI1170", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.RegI1170", 0, 3), Tuple3#(Meta#(MetaField#("write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("RDY_write", 1), Conc#(Bit#(1))), Meta#(MetaField#("read", 2), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.ResetGenIfc2341, Meta#(MetaData#("_Clocks.ResetGenIfc2341", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ResetGenIfc2341", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(Clocks::_Clocks.ResetGenIfc2355, Meta#(MetaData#("_Clocks.ResetGenIfc2355", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ResetGenIfc2355", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(Clocks::_Clocks.ResetGenIfc2369, Meta#(MetaData#("_Clocks.ResetGenIfc2369", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ResetGenIfc2369", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(Clocks::_Clocks.ResetGenIfc2382, Meta#(MetaData#("_Clocks.ResetGenIfc2382", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ResetGenIfc2382", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(Clocks::_Clocks.ResetGenIfc2612, Meta#(MetaData#("_Clocks.ResetGenIfc2612", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ResetGenIfc2612", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(Clocks::_Clocks.SelectClkIfc421#(_n0), Meta#(MetaData#("_Clocks.SelectClkIfc421", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.SelectClkIfc421", 0, 3), Tuple3#(Meta#(MetaField#("select", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clock_out", 1), Conc#(Clock)), Meta#(MetaField#("reset_out", 2), Conc#(Reset))))))} {Generic#(Clocks::_Clocks.SelectClkIfc448#(_n0), Meta#(MetaData#("_Clocks.SelectClkIfc448", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.SelectClkIfc448", 0, 3), Tuple3#(Meta#(MetaField#("select", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clock_out", 1), Conc#(Clock)), Meta#(MetaField#("reset_out", 2), Conc#(Reset))))))} {Generic#(Clocks::_Clocks.SyncBitIfc725#(_n0, _n1), Meta#(MetaData#("_Clocks.SyncBitIfc725", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.SyncBitIfc725", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.SyncBitIfc791#(_n0, _n1), Meta#(MetaData#("_Clocks.SyncBitIfc791", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.SyncBitIfc791", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.SyncBitIfc857#(_n0, _n1), Meta#(MetaData#("_Clocks.SyncBitIfc857", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.SyncBitIfc857", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.SyncBitIfc923#(_n0, _n1), Meta#(MetaData#("_Clocks.SyncBitIfc923", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.SyncBitIfc923", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.SyncFIFO0Ifc1376#(_n0), Meta#(MetaData#("_Clocks.SyncFIFO0Ifc1376", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.SyncFIFO0Ifc1376", 0, 6), Tuple6#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("RDY_enq", 1), Conc#(Bit#(1))), Meta#(MetaField#("deq", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("RDY_deq", 3), Conc#(Bit#(1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.SyncFIFO0Ifc1417#(_n0), Meta#(MetaData#("_Clocks.SyncFIFO0Ifc1417", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.SyncFIFO0Ifc1417", 0, 6), Tuple6#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("RDY_enq", 1), Conc#(Bit#(1))), Meta#(MetaField#("deq", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("RDY_deq", 3), Conc#(Bit#(1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.SyncFIFOIfc1293#(_n0, _n1), Meta#(MetaData#("_Clocks.SyncFIFOIfc1293", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.SyncFIFOIfc1293", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("RDY_enq", 1), Conc#(Bit#(1))), Meta#(MetaField#("deq", 2), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("RDY_deq", 3), Conc#(Bit#(1))), Meta#(MetaField#("first", 4), Conc#(Bit#(_n0))), Meta#(MetaField#("RDY_first", 5), Conc#(Bit#(1))), Meta#(MetaField#("notFull", 6), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.SyncFIFOIfc1340#(_n0, _n1), Meta#(MetaData#("_Clocks.SyncFIFOIfc1340", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.SyncFIFOIfc1340", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("RDY_enq", 1), Conc#(Bit#(1))), Meta#(MetaField#("deq", 2), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("RDY_deq", 3), Conc#(Bit#(1))), Meta#(MetaField#("first", 4), Conc#(Bit#(_n0))), Meta#(MetaField#("RDY_first", 5), Conc#(Bit#(1))), Meta#(MetaField#("notFull", 6), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.SyncPulseIfc1003#(_n0), Meta#(MetaData#("_Clocks.SyncPulseIfc1003", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.SyncPulseIfc1003", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("pulse", 1), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.SyncPulseIfc1071#(_n0), Meta#(MetaData#("_Clocks.SyncPulseIfc1071", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.SyncPulseIfc1071", 0, 3), Tuple3#(Meta#(MetaField#("send", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("RDY_send", 1), Conc#(Bit#(1))), Meta#(MetaField#("pulse", 2), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Prelude.Reg1927#(_n0, _n1), Meta#(MetaData#("_Prelude.Reg1927", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Prelude.Reg1927", 0, 2), Tuple2#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_PreludeBSV.ReadOnly1629#(_n0), Meta#(MetaData#("_PreludeBSV.ReadOnly1629", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.ReadOnly1629", 0, 1), Meta#(MetaField#("_read", 0), Conc#(Bit#(_n0))))))} {Generic#(Clocks::_PreludeBSV.ReadOnly2598, Meta#(MetaData#("_PreludeBSV.ReadOnly2598", "Clocks", void, 1), Meta#(MetaConsNamed#("_PreludeBSV.ReadOnly2598", 0, 1), Meta#(MetaField#("_read", 0), Conc#(Bit#(1))))))} {Generic#(Clocks::_PreludeBSV.VWire1654#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VWire1654", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VWire1654", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0)))))))} {Generic#(Cntrs::Count#(t), Meta#(MetaData#("Count", "Cntrs", StarArg#(t), 1), Meta#(MetaConsNamed#("Count", 0, 5), Tuple5#(Meta#(MetaField#("incr", 0), Conc#(function Action f(t x1))), Meta#(MetaField#("decr", 1), Conc#(function Action f(t x1))), Meta#(MetaField#("update", 2), Conc#(function Action f(t x1))), Meta#(MetaField#("_write", 3), Conc#(function Action f(t x1))), Meta#(MetaField#("_read", 4), Conc#(t))))))} {Generic#(Cntrs::UCount, Meta#(MetaData#("UCount", "Cntrs", void, 1), Meta#(MetaConsNamed#("UCount", 0, 7), Tuple7#(Meta#(MetaField#("update", 0), Conc#(function Action f(Integer x1))), Meta#(MetaField#("_write", 1), Conc#(function Action f(Integer x1))), Meta#(MetaField#("incr", 2), Conc#(function Action f(Integer x1))), Meta#(MetaField#("decr", 3), Conc#(function Action f(Integer x1))), Meta#(MetaField#("isEqual", 4), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("isLessThan", 5), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("isGreaterThan", 6), Conc#(function Bool f(Integer x1)))))))} {Generic#(Cntrs::VCount#(t), Meta#(MetaData#("VCount", "Cntrs", StarArg#(t), 1), Meta#(MetaConsNamed#("VCount", 0, 5), Tuple5#(Meta#(MetaField#("incrA", 0), Conc#(function Action f(t x1))), Meta#(MetaField#("incrB", 1), Conc#(function Action f(t x1))), Meta#(MetaField#("update", 2), Conc#(function Action f(t x1))), Meta#(MetaField#("_write", 3), Conc#(function Action f(t x1))), Meta#(MetaField#("_read", 4), Conc#(t))))))} {Generic#(Cntrs::_Cntrs.VCount63#(_n0, _n1), Meta#(MetaData#("_Cntrs.VCount63", "Cntrs", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Cntrs.VCount63", 0, 5), Tuple5#(Meta#(MetaField#("incrA", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("incrB", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("update", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_write", 3), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 4), Conc#(Bit#(_n0)))))))} {Generic#(CommitIfc::ClientCommit#(req, resp), Meta#(MetaData#("ClientCommit", "CommitIfc", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("ClientCommit", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(CommitIfc::SendCommit#(req))), Meta#(MetaField#("response", 1), Conc#(CommitIfc::RecvCommit#(resp)))))))} {Generic#(CommitIfc::RecvCommit#(a), Meta#(MetaData#("RecvCommit", "CommitIfc", StarArg#(a), 1), Meta#(MetaConsNamed#("RecvCommit", 0, 2), Tuple2#(Meta#(MetaField#("datain", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("accept", 1), Conc#(Bool))))))} {Generic#(CommitIfc::SendCommit#(a), Meta#(MetaData#("SendCommit", "CommitIfc", StarArg#(a), 1), Meta#(MetaConsNamed#("SendCommit", 0, 2), Tuple2#(Meta#(MetaField#("dataout", 0), Conc#(a)), Meta#(MetaField#("ack", 1), Conc#(Action))))))} {Generic#(CommitIfc::ServerCommit#(req, resp), Meta#(MetaData#("ServerCommit", "CommitIfc", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("ServerCommit", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(CommitIfc::RecvCommit#(req))), Meta#(MetaField#("response", 1), Conc#(CommitIfc::SendCommit#(resp)))))))} {Generic#(CompletionBuffer::CompletionBuffer#(n, a), Meta#(MetaData#("CompletionBuffer", "CompletionBuffer", Tuple2#(NumArg#(n), StarArg#(a)), 1), Meta#(MetaConsNamed#("CompletionBuffer", 0, 3), Tuple3#(Meta#(MetaField#("reserve", 0), Conc#(GetPut::Get#(CompletionBuffer::CBToken#(n)))), Meta#(MetaField#("complete", 1), Conc#(GetPut::Put#(Tuple2#(CompletionBuffer::CBToken#(n), a)))), Meta#(MetaField#("drain", 2), Conc#(GetPut::Get#(a)))))))} {Generic#(Complex::Complex#(any_t), Meta#(MetaData#("Complex", "Complex", StarArg#(any_t), 1), Meta#(MetaConsNamed#("Complex", 0, 2), Tuple2#(Meta#(MetaField#("rel", 0), Conc#(any_t)), Meta#(MetaField#("img", 1), Conc#(any_t))))))} {Generic#(ConArg, Meta#(MetaData#("ConArg", "Prelude", void, 1), Meta#(MetaConsAnon#("ConArg", 0, 0), void)))} {Generic#(Conc#(a), Meta#(MetaData#("Conc", "Prelude", StarArg#(a), 1), Meta#(MetaConsAnon#("Conc", 0, 1), Meta#(MetaField#("_1", 0), Conc#(a)))))} {Generic#(ConcPoly#(a), Meta#(MetaData#("ConcPoly", "Prelude", StarArg#(a), 1), Meta#(MetaConsAnon#("ConcPoly", 0, 1), Meta#(MetaField#("_1", 0), Conc#(a)))))} {Generic#(ConcPrim#(a), Meta#(MetaData#("ConcPrim", "Prelude", StarArg#(a), 1), Meta#(MetaConsAnon#("ConcPrim", 0, 1), Meta#(MetaField#("_1", 0), Conc#(a)))))} {Generic#(ConfigReg::VReg#(n), Meta#(MetaData#("VReg", "ConfigReg", NumArg#(n), 1), Meta#(MetaConsNamed#("VReg", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(n)))))))} {Generic#(Core_IFC::Core_IFC#(t_n_interrupt_sources), Meta#(MetaData#("Core_IFC", "Core_IFC", NumArg#(t_n_interrupt_sources), 1), Meta#(MetaConsNamed#("Core_IFC", 0, 11), Tuple11#(Meta#(MetaField#("cpu_reset_server", 0), Conc#(ClientServer::Server#(Bool, Bool))), Meta#(MetaField#("cpu_imem_master", 1), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, 0, 0, 0, 0, 0))), Meta#(MetaField#("core_mem_master", 2), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId_ext, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, Fabric_Defs::Wd_AW_User_ext, Fabric_Defs::Wd_W_User_ext, Fabric_Defs::Wd_B_User_ext, Fabric_Defs::Wd_AR_User_ext, Fabric_Defs::Wd_R_User_ext))), Meta#(MetaField#("dma_server", 3), Conc#(AXI4_Types::AXI4_Slave#(Near_Mem_IFC::Wd_Id_Dma, Near_Mem_IFC::Wd_Addr_Dma, Near_Mem_IFC::Wd_Data_Dma, Near_Mem_IFC::Wd_AW_User_Dma, Near_Mem_IFC::Wd_W_User_Dma, Near_Mem_IFC::Wd_B_User_Dma, Near_Mem_IFC::Wd_AR_User_Dma, Near_Mem_IFC::Wd_R_User_Dma))), Meta#(MetaField#("core_external_interrupt_sources", 4), Conc#(Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC))), Meta#(MetaField#("nmi_req", 5), Conc#(function Action f(Bool x1))), Meta#(MetaField#("dm_dmi", 6), Conc#(DM_Common::DMI)), Meta#(MetaField#("ndm_reset_client", 7), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("set_verbosity", 8), Conc#(function Action f(Bit#(4) x1, Bit#(64) x2))), Meta#(MetaField#("ma_ddr4_ready", 9), Conc#(Action)), Meta#(MetaField#("mv_status", 10), Conc#(Bit#(8)))))))} {Generic#(Core_IFC::Core_IFC_Synth#(t_n_interrupt_sources), Meta#(MetaData#("Core_IFC_Synth", "Core_IFC", NumArg#(t_n_interrupt_sources), 1), Meta#(MetaConsNamed#("Core_IFC_Synth", 0, 11), Tuple11#(Meta#(MetaField#("cpu_reset_server", 0), Conc#(ClientServer::Server#(Bool, Bool))), Meta#(MetaField#("cpu_imem_master", 1), Conc#(AXI4_Types::AXI4_Master_Sig#(Fabric_Defs::Wd_MId, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, 0, 0, 0, 0, 0))), Meta#(MetaField#("core_mem_master", 2), Conc#(AXI4_Types::AXI4_Master_Sig#(Fabric_Defs::Wd_MId_ext, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, Fabric_Defs::Wd_AW_User_ext, Fabric_Defs::Wd_W_User_ext, Fabric_Defs::Wd_B_User_ext, Fabric_Defs::Wd_AR_User_ext, Fabric_Defs::Wd_R_User_ext))), Meta#(MetaField#("dma_server", 3), Conc#(AXI4_Types::AXI4_Slave_Sig#(Near_Mem_IFC::Wd_Id_Dma, Near_Mem_IFC::Wd_Addr_Dma, Near_Mem_IFC::Wd_Data_Dma, Near_Mem_IFC::Wd_AW_User_Dma, Near_Mem_IFC::Wd_W_User_Dma, Near_Mem_IFC::Wd_B_User_Dma, Near_Mem_IFC::Wd_AR_User_Dma, Near_Mem_IFC::Wd_R_User_Dma))), Meta#(MetaField#("core_external_interrupt_sources", 4), Conc#(Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC))), Meta#(MetaField#("nmi_req", 5), Conc#(function Action f(Bool x1))), Meta#(MetaField#("dm_dmi", 6), Conc#(DM_Common::DMI)), Meta#(MetaField#("ndm_reset_client", 7), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("set_verbosity", 8), Conc#(function Action f(Bit#(4) x1, Bit#(64) x2))), Meta#(MetaField#("ma_ddr4_ready", 9), Conc#(Action)), Meta#(MetaField#("mv_status", 10), Conc#(Bit#(8)))))))} {Generic#(Counter::Counter#(n), Meta#(MetaData#("Counter", "Counter", NumArg#(n), 1), Meta#(MetaConsNamed#("Counter", 0, 8), Tuple8#(Meta#(MetaField#("inc", 0), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("dec", 1), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("up", 2), Conc#(Action)), Meta#(MetaField#("down", 3), Conc#(Action)), Meta#(MetaField#("value", 4), Conc#(Bit#(n))), Meta#(MetaField#("setC", 5), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("setF", 6), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("clear", 7), Conc#(Action))))))} {Generic#(Counter::VCounter#(n), Meta#(MetaData#("VCounter", "Counter", NumArg#(n), 1), Meta#(MetaConsNamed#("VCounter", 0, 5), Tuple5#(Meta#(MetaField#("addA", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("addB", 1), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("value", 2), Conc#(Bit#(n))), Meta#(MetaField#("setC", 3), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("setF", 4), Conc#(function PrimAction f(Bit#(n) x1)))))))} {Generic#(CreditCounter::CreditCounter_IFC#(w), Meta#(MetaData#("CreditCounter_IFC", "CreditCounter", NumArg#(w), 1), Meta#(MetaConsNamed#("CreditCounter_IFC", 0, 4), Tuple4#(Meta#(MetaField#("value", 0), Conc#(UInt#(w))), Meta#(MetaField#("incr", 1), Conc#(Action)), Meta#(MetaField#("decr", 2), Conc#(Action)), Meta#(MetaField#("clear", 3), Conc#(Action))))))} {Generic#(DDR2Types::DDR2Client, Meta#(MetaData#("DDR2Client", "DDR2Types", void, 1), Meta#(MetaConsNamed#("DDR2Client", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(DDR2Types::DDR2RequestClient)), Meta#(MetaField#("response", 1), Conc#(GetPut::Put#(DDR2Types::DDR2Data)))))))} {Generic#(DDR2Types::DDR2ReqCmd, Meta#(MetaData#("DDR2ReqCmd", "DDR2Types", void, 1), Meta#(MetaConsNamed#("DDR2ReqCmd", 0, 2), Tuple2#(Meta#(MetaField#("rnw", 0), Conc#(Bool)), Meta#(MetaField#("addr", 1), Conc#(DDR2Types::DDR2Address))))))} {Generic#(DDR2Types::DDR2ReqData, Meta#(MetaData#("DDR2ReqData", "DDR2Types", void, 1), Meta#(MetaConsNamed#("DDR2ReqData", 0, 2), Tuple2#(Meta#(MetaField#("be", 0), Conc#(Bit#(8))), Meta#(MetaField#("data", 1), Conc#(DDR2Types::DDR2Data))))))} {Generic#(DDR2Types::DDR2RequestClient, Meta#(MetaData#("DDR2RequestClient", "DDR2Types", void, 1), Meta#(MetaConsNamed#("DDR2RequestClient", 0, 2), Tuple2#(Meta#(MetaField#("command", 0), Conc#(GetPut::Get#(DDR2Types::DDR2ReqCmd))), Meta#(MetaField#("data", 1), Conc#(GetPut::Get#(DDR2Types::DDR2ReqData)))))))} {Generic#(DDR2Types::DDR2RequestServer, Meta#(MetaData#("DDR2RequestServer", "DDR2Types", void, 1), Meta#(MetaConsNamed#("DDR2RequestServer", 0, 2), Tuple2#(Meta#(MetaField#("command", 0), Conc#(GetPut::Put#(DDR2Types::DDR2ReqCmd))), Meta#(MetaField#("data", 1), Conc#(GetPut::Put#(DDR2Types::DDR2ReqData)))))))} {Generic#(DDR2Types::DDR2Server, Meta#(MetaData#("DDR2Server", "DDR2Types", void, 1), Meta#(MetaConsNamed#("DDR2Server", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(DDR2Types::DDR2RequestServer)), Meta#(MetaField#("response", 1), Conc#(GetPut::Get#(DDR2Types::DDR2Data)))))))} {Generic#(DDR2Types::SimpleMemory, Meta#(MetaData#("SimpleMemory", "DDR2Types", void, 1), Meta#(MetaConsNamed#("SimpleMemory", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(function Action f(Bool x1, UInt#(31) x2, Bit#(256) x3, Bit#(32) x4))), Meta#(MetaField#("readData", 1), Conc#(GetPut::Get#(Bit#(256))))))))} {Generic#(DDR3::DDR3Request#(addrwidth, datawidth, bewidth), Meta#(MetaData#("DDR3Request", "DDR3", Tuple3#(NumArg#(addrwidth), NumArg#(datawidth), NumArg#(bewidth)), 1), Meta#(MetaConsNamed#("DDR3Request", 0, 3), Tuple3#(Meta#(MetaField#("byteen", 0), Conc#(Bit#(bewidth))), Meta#(MetaField#("address", 1), Conc#(Bit#(addrwidth))), Meta#(MetaField#("data", 2), Conc#(Bit#(datawidth)))))))} {Generic#(DDR3::DDR3Response#(datawidth), Meta#(MetaData#("DDR3Response", "DDR3", NumArg#(datawidth), 1), Meta#(MetaConsNamed#("DDR3Response", 0, 1), Meta#(MetaField#("data", 0), Conc#(Bit#(datawidth))))))} {Generic#(DDR3::DDR3_Configure, Meta#(MetaData#("DDR3_Configure", "DDR3", void, 1), Meta#(MetaConsNamed#("DDR3_Configure", 0, 2), Tuple2#(Meta#(MetaField#("simulation", 0), Conc#(Bool)), Meta#(MetaField#("reads_in_flight", 1), Conc#(Integer))))))} {Generic#(DDR3::DDR3_Controller#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth), Meta#(MetaData#("DDR3_Controller", "DDR3", Tuple14#(NumArg#(ddr3addrsize), NumArg#(ddr3datasize), NumArg#(ddr3besize), NumArg#(ddr3beats), NumArg#(datawidth), NumArg#(bewidth), NumArg#(rowwidth), NumArg#(colwidth), NumArg#(bankwidth), NumArg#(rankwidth), NumArg#(clkwidth), NumArg#(cswidth), NumArg#(ckewidth), NumArg#(odtwidth)), 1), Meta#(MetaConsNamed#("DDR3_Controller", 0, 2), Tuple2#(Meta#(MetaField#("ddr3", 0), Conc#(DDR3::DDR3_Pins#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth))), Meta#(MetaField#("user", 1), Conc#(DDR3::DDR3_User#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)))))))} {Generic#(DDR3::DDR3_Pins#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth), Meta#(MetaData#("DDR3_Pins", "DDR3", Tuple14#(NumArg#(ddr3addrsize), NumArg#(ddr3datasize), NumArg#(ddr3besize), NumArg#(ddr3beats), NumArg#(datawidth), NumArg#(bewidth), NumArg#(rowwidth), NumArg#(colwidth), NumArg#(bankwidth), NumArg#(rankwidth), NumArg#(clkwidth), NumArg#(cswidth), NumArg#(ckewidth), NumArg#(odtwidth)), 1), Meta#(MetaConsNamed#("DDR3_Pins", 0, 15), Tuple15#(Meta#(MetaField#("clk_p", 0), Conc#(Bit#(clkwidth))), Meta#(MetaField#("clk_n", 1), Conc#(Bit#(clkwidth))), Meta#(MetaField#("a", 2), Conc#(Bit#(rowwidth))), Meta#(MetaField#("ba", 3), Conc#(Bit#(bankwidth))), Meta#(MetaField#("ras_n", 4), Conc#(Bit#(1))), Meta#(MetaField#("cas_n", 5), Conc#(Bit#(1))), Meta#(MetaField#("we_n", 6), Conc#(Bit#(1))), Meta#(MetaField#("reset_n", 7), Conc#(Bit#(1))), Meta#(MetaField#("cs_n", 8), Conc#(Bit#(cswidth))), Meta#(MetaField#("odt", 9), Conc#(Bit#(odtwidth))), Meta#(MetaField#("cke", 10), Conc#(Bit#(ckewidth))), Meta#(MetaField#("dm", 11), Conc#(Bit#(bewidth))), Meta#(MetaField#("dq", 12), Conc#(Inout#(Bit#(datawidth)))), Meta#(MetaField#("dqs_p", 13), Conc#(Inout#(Bit#(bewidth)))), Meta#(MetaField#("dqs_n", 14), Conc#(Inout#(Bit#(bewidth))))))))} {Generic#(DDR3::DDR3_User#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth), Meta#(MetaData#("DDR3_User", "DDR3", Tuple14#(NumArg#(ddr3addrsize), NumArg#(ddr3datasize), NumArg#(ddr3besize), NumArg#(ddr3beats), NumArg#(datawidth), NumArg#(bewidth), NumArg#(rowwidth), NumArg#(colwidth), NumArg#(bankwidth), NumArg#(rankwidth), NumArg#(clkwidth), NumArg#(cswidth), NumArg#(ckewidth), NumArg#(odtwidth)), 1), Meta#(MetaConsNamed#("DDR3_User", 0, 5), Tuple5#(Meta#(MetaField#("clock", 0), Conc#(Clock)), Meta#(MetaField#("reset_n", 1), Conc#(Reset)), Meta#(MetaField#("init_done", 2), Conc#(Bool)), Meta#(MetaField#("request", 3), Conc#(function Action f(Bit#(ddr3addrsize) x1, Bit#(TMul#(ddr3besize, ddr3beats)) x2, Bit#(TMul#(ddr3datasize, ddr3beats)) x3))), Meta#(MetaField#("read_data", 4), Conc#(ActionValue#(Bit#(TMul#(ddr3datasize, ddr3beats)))))))))} {Generic#(DDR3::VDDR3_Controller_Xilinx#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth), Meta#(MetaData#("VDDR3_Controller_Xilinx", "DDR3", Tuple14#(NumArg#(ddr3addrsize), NumArg#(ddr3datasize), NumArg#(ddr3besize), NumArg#(ddr3beats), NumArg#(datawidth), NumArg#(bewidth), NumArg#(rowwidth), NumArg#(colwidth), NumArg#(bankwidth), NumArg#(rankwidth), NumArg#(clkwidth), NumArg#(cswidth), NumArg#(ckewidth), NumArg#(odtwidth)), 1), Meta#(MetaConsNamed#("VDDR3_Controller_Xilinx", 0, 2), Tuple2#(Meta#(MetaField#("ddr3", 0), Conc#(DDR3::DDR3_Pins#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth))), Meta#(MetaField#("user", 1), Conc#(DDR3::VDDR3_User_Xilinx#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)))))))} {Generic#(DDR3::VDDR3_User_Xilinx#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth), Meta#(MetaData#("VDDR3_User_Xilinx", "DDR3", Tuple14#(NumArg#(ddr3addrsize), NumArg#(ddr3datasize), NumArg#(ddr3besize), NumArg#(ddr3beats), NumArg#(datawidth), NumArg#(bewidth), NumArg#(rowwidth), NumArg#(colwidth), NumArg#(bankwidth), NumArg#(rankwidth), NumArg#(clkwidth), NumArg#(cswidth), NumArg#(ckewidth), NumArg#(odtwidth)), 1), Meta#(MetaConsNamed#("VDDR3_User_Xilinx", 0, 15), Tuple15#(Meta#(MetaField#("clock", 0), Conc#(Clock)), Meta#(MetaField#("reset", 1), Conc#(Reset)), Meta#(MetaField#("init_done", 2), Conc#(Bool)), Meta#(MetaField#("app_addr", 3), Conc#(function Action f(Bit#(ddr3addrsize) x1))), Meta#(MetaField#("app_cmd", 4), Conc#(function Action f(Bit#(3) x1))), Meta#(MetaField#("app_en", 5), Conc#(function Action f(Bool x1))), Meta#(MetaField#("app_wdf_data", 6), Conc#(function Action f(Bit#(ddr3datasize) x1))), Meta#(MetaField#("app_wdf_end", 7), Conc#(function Action f(Bool x1))), Meta#(MetaField#("app_wdf_mask", 8), Conc#(function Action f(Bit#(ddr3besize) x1))), Meta#(MetaField#("app_wdf_wren", 9), Conc#(function Action f(Bool x1))), Meta#(MetaField#("app_rd_data", 10), Conc#(Bit#(ddr3datasize))), Meta#(MetaField#("app_rd_data_end", 11), Conc#(Bool)), Meta#(MetaField#("app_rd_data_valid", 12), Conc#(Bool)), Meta#(MetaField#("app_rdy", 13), Conc#(Bool)), Meta#(MetaField#("app_wdf_rdy", 14), Conc#(Bool))))))} {Generic#(DDR4::DDR4Request#(addrwidth, datawidth, bewidth), Meta#(MetaData#("DDR4Request", "DDR4", Tuple3#(NumArg#(addrwidth), NumArg#(datawidth), NumArg#(bewidth)), 1), Meta#(MetaConsNamed#("DDR4Request", 0, 3), Tuple3#(Meta#(MetaField#("byteen", 0), Conc#(Bit#(bewidth))), Meta#(MetaField#("address", 1), Conc#(Bit#(addrwidth))), Meta#(MetaField#("data", 2), Conc#(Bit#(datawidth)))))))} {Generic#(DDR4::DDR4Response#(datawidth), Meta#(MetaData#("DDR4Response", "DDR4", NumArg#(datawidth), 1), Meta#(MetaConsNamed#("DDR4Response", 0, 1), Meta#(MetaField#("data", 0), Conc#(Bit#(datawidth))))))} {Generic#(DDR4::DDR4_Configure, Meta#(MetaData#("DDR4_Configure", "DDR4", void, 1), Meta#(MetaConsNamed#("DDR4_Configure", 0, 2), Tuple2#(Meta#(MetaField#("simulation", 0), Conc#(Bool)), Meta#(MetaField#("reads_in_flight", 1), Conc#(Integer))))))} {Generic#(DDR4::DDR4_Controller#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth), Meta#(MetaData#("DDR4_Controller", "DDR4", Tuple15#(NumArg#(ddr4addrsize), NumArg#(ddr4datasize), NumArg#(ddr4besize), NumArg#(ddr4beats), NumArg#(datawidth), NumArg#(bewidth), NumArg#(rowwidth), NumArg#(colwidth), NumArg#(bankwidth), NumArg#(bankgroupwidth), NumArg#(rankwidth), NumArg#(clkwidth), NumArg#(cswidth), NumArg#(ckewidth), NumArg#(odtwidth)), 1), Meta#(MetaConsNamed#("DDR4_Controller", 0, 2), Tuple2#(Meta#(MetaField#("ddr4", 0), Conc#(DDR4::DDR4_Pins#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth))), Meta#(MetaField#("user", 1), Conc#(DDR4::DDR4_User#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)))))))} {Generic#(DDR4::DDR4_Pins#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth), Meta#(MetaData#("DDR4_Pins", "DDR4", Tuple15#(NumArg#(ddr4addrsize), NumArg#(ddr4datasize), NumArg#(ddr4besize), NumArg#(ddr4beats), NumArg#(datawidth), NumArg#(bewidth), NumArg#(rowwidth), NumArg#(colwidth), NumArg#(bankwidth), NumArg#(bankgroupwidth), NumArg#(rankwidth), NumArg#(clkwidth), NumArg#(cswidth), NumArg#(ckewidth), NumArg#(odtwidth)), 1), Meta#(MetaConsNamed#("DDR4_Pins", 0, 14), Tuple14#(Meta#(MetaField#("act_n", 0), Conc#(Bit#(1))), Meta#(MetaField#("a", 1), Conc#(Bit#(rowwidth))), Meta#(MetaField#("ba", 2), Conc#(Bit#(bankwidth))), Meta#(MetaField#("bg", 3), Conc#(Bit#(bankgroupwidth))), Meta#(MetaField#("ck_c", 4), Conc#(Bit#(clkwidth))), Meta#(MetaField#("ck_t", 5), Conc#(Bit#(clkwidth))), Meta#(MetaField#("cke", 6), Conc#(Bit#(ckewidth))), Meta#(MetaField#("cs_n", 7), Conc#(Bit#(cswidth))), Meta#(MetaField#("odt", 8), Conc#(Bit#(1))), Meta#(MetaField#("reset_n", 9), Conc#(Bit#(1))), Meta#(MetaField#("dm_dbi_n", 10), Conc#(Inout#(Bit#(bewidth)))), Meta#(MetaField#("dq", 11), Conc#(Inout#(Bit#(datawidth)))), Meta#(MetaField#("dqs_c", 12), Conc#(Inout#(Bit#(bewidth)))), Meta#(MetaField#("dqs_t", 13), Conc#(Inout#(Bit#(bewidth))))))))} {Generic#(DDR4::DDR4_User#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth), Meta#(MetaData#("DDR4_User", "DDR4", Tuple15#(NumArg#(ddr4addrsize), NumArg#(ddr4datasize), NumArg#(ddr4besize), NumArg#(ddr4beats), NumArg#(datawidth), NumArg#(bewidth), NumArg#(rowwidth), NumArg#(colwidth), NumArg#(bankwidth), NumArg#(bankgroupwidth), NumArg#(rankwidth), NumArg#(clkwidth), NumArg#(cswidth), NumArg#(ckewidth), NumArg#(odtwidth)), 1), Meta#(MetaConsNamed#("DDR4_User", 0, 5), Tuple5#(Meta#(MetaField#("clock", 0), Conc#(Clock)), Meta#(MetaField#("reset_n", 1), Conc#(Reset)), Meta#(MetaField#("init_done", 2), Conc#(Bool)), Meta#(MetaField#("request", 3), Conc#(function Action f(Bit#(ddr4addrsize) x1, Bit#(TMul#(ddr4besize, ddr4beats)) x2, Bit#(TMul#(ddr4datasize, ddr4beats)) x3))), Meta#(MetaField#("read_data", 4), Conc#(ActionValue#(Bit#(TMul#(ddr4datasize, ddr4beats)))))))))} {Generic#(DDR4::VDDR4_Controller_Xilinx#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth), Meta#(MetaData#("VDDR4_Controller_Xilinx", "DDR4", Tuple15#(NumArg#(ddr4addrsize), NumArg#(ddr4datasize), NumArg#(ddr4besize), NumArg#(ddr4beats), NumArg#(datawidth), NumArg#(bewidth), NumArg#(rowwidth), NumArg#(colwidth), NumArg#(bankwidth), NumArg#(bankgroupwidth), NumArg#(rankwidth), NumArg#(clkwidth), NumArg#(cswidth), NumArg#(ckewidth), NumArg#(odtwidth)), 1), Meta#(MetaConsNamed#("VDDR4_Controller_Xilinx", 0, 2), Tuple2#(Meta#(MetaField#("ddr4", 0), Conc#(DDR4::DDR4_Pins#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth))), Meta#(MetaField#("user", 1), Conc#(DDR4::VDDR4_User_Xilinx#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)))))))} {Generic#(DDR4::VDDR4_User_Xilinx#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth), Meta#(MetaData#("VDDR4_User_Xilinx", "DDR4", Tuple15#(NumArg#(ddr4addrsize), NumArg#(ddr4datasize), NumArg#(ddr4besize), NumArg#(ddr4beats), NumArg#(datawidth), NumArg#(bewidth), NumArg#(rowwidth), NumArg#(colwidth), NumArg#(bankwidth), NumArg#(bankgroupwidth), NumArg#(rankwidth), NumArg#(clkwidth), NumArg#(cswidth), NumArg#(ckewidth), NumArg#(odtwidth)), 1), Meta#(MetaConsNamed#("VDDR4_User_Xilinx", 0, 17), Tuple17#(Meta#(MetaField#("clock", 0), Conc#(Clock)), Meta#(MetaField#("reset", 1), Conc#(Reset)), Meta#(MetaField#("init_done", 2), Conc#(Bool)), Meta#(MetaField#("app_addr", 3), Conc#(function Action f(Bit#(ddr4addrsize) x1))), Meta#(MetaField#("app_cmd", 4), Conc#(function Action f(Bit#(3) x1))), Meta#(MetaField#("app_en", 5), Conc#(function Action f(Bool x1))), Meta#(MetaField#("app_hi_pri", 6), Conc#(function Action f(Bool x1))), Meta#(MetaField#("app_wdf_data", 7), Conc#(function Action f(Bit#(ddr4datasize) x1))), Meta#(MetaField#("app_wdf_end", 8), Conc#(function Action f(Bool x1))), Meta#(MetaField#("app_wdf_mask", 9), Conc#(function Action f(Bit#(ddr4besize) x1))), Meta#(MetaField#("app_wdf_wren", 10), Conc#(function Action f(Bool x1))), Meta#(MetaField#("app_rd_data", 11), Conc#(Bit#(ddr4datasize))), Meta#(MetaField#("app_rd_data_end", 12), Conc#(Bool)), Meta#(MetaField#("app_rd_data_valid", 13), Conc#(Bool)), Meta#(MetaField#("app_rdy", 14), Conc#(Bool)), Meta#(MetaField#("app_wdf_rdy", 15), Conc#(Bool)), Meta#(MetaField#("dbg_bus", 16), Conc#(Bit#(512)))))))} {Generic#(DIPSwitch::DIP#(n), Meta#(MetaData#("DIP", "DIPSwitch", NumArg#(n), 1), Meta#(MetaConsNamed#("DIP", 0, 1), Meta#(MetaField#("switch", 0), Conc#(function Action f(Bit#(n) x1))))))} {Generic#(DIPSwitch::DIPSwitch#(n), Meta#(MetaData#("DIPSwitch", "DIPSwitch", NumArg#(n), 1), Meta#(MetaConsNamed#("DIPSwitch", 0, 3), Tuple3#(Meta#(MetaField#("changed", 0), Conc#(Bool)), Meta#(MetaField#("_read", 1), Conc#(Bit#(n))), Meta#(MetaField#("ifc", 2), Conc#(DIPSwitch::DIP#(n)))))))} {Generic#(DM_Abstract_Commands::DM_Abstract_Commands_IFC, Meta#(MetaData#("DM_Abstract_Commands_IFC", "DM_Abstract_Commands", void, 1), Meta#(MetaConsNamed#("DM_Abstract_Commands_IFC", 0, 6), Tuple6#(Meta#(MetaField#("reset", 0), Conc#(Action)), Meta#(MetaField#("av_read", 1), Conc#(function ActionValue#(DM_Common::DM_Word) f(DM_Common::DM_Addr x1))), Meta#(MetaField#("write", 2), Conc#(function Action f(DM_Common::DM_Addr x1, DM_Common::DM_Word x2))), Meta#(MetaField#("hart0_gpr_mem_client", 3), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("hart0_fpr_mem_client", 4), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::FLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::FLEN)))), Meta#(MetaField#("hart0_csr_mem_client", 5), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN))))))))} {Generic#(DM_CPU_Req_Rsp::DM_CPU_Req#(a, d), Meta#(MetaData#("DM_CPU_Req", "DM_CPU_Req_Rsp", Tuple2#(NumArg#(a), NumArg#(d)), 1), Meta#(MetaConsNamed#("DM_CPU_Req", 0, 3), Tuple3#(Meta#(MetaField#("write", 0), Conc#(Bool)), Meta#(MetaField#("address", 1), Conc#(Bit#(a))), Meta#(MetaField#("data", 2), Conc#(Bit#(d)))))))} {Generic#(DM_CPU_Req_Rsp::DM_CPU_Rsp#(d), Meta#(MetaData#("DM_CPU_Rsp", "DM_CPU_Req_Rsp", NumArg#(d), 1), Meta#(MetaConsNamed#("DM_CPU_Rsp", 0, 2), Tuple2#(Meta#(MetaField#("ok", 0), Conc#(Bool)), Meta#(MetaField#("data", 1), Conc#(Bit#(d)))))))} {Generic#(DM_Common::DCSR_Cause, Meta#(MetaData#("DCSR_Cause", "DM_Common", void, 8), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_RESERVED0", 0, 0), void), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_EBREAK", 1, 0), void), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_TRIGGER", 2, 0), void), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_HALTREQ", 3, 0), void), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_STEP", 4, 0), void), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_RESERVED5", 5, 0), void), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_RESERVED6", 6, 0), void), Meta#(MetaConsAnon#("DCSR_CAUSE_RESERVED7", 7, 0), void))))))))))} {Generic#(DM_Common::DMI, Meta#(MetaData#("DMI", "DM_Common", void, 1), Meta#(MetaConsNamed#("DMI", 0, 3), Tuple3#(Meta#(MetaField#("read_addr", 0), Conc#(function Action f(DM_Common::DM_Addr x1))), Meta#(MetaField#("read_data", 1), Conc#(ActionValue#(DM_Common::DM_Word))), Meta#(MetaField#("write", 2), Conc#(function Action f(DM_Common::DM_Addr x1, DM_Common::DM_Word x2)))))))} {Generic#(DM_Common::DM_abstractcs_cmderr, Meta#(MetaData#("DM_abstractcs_cmderr", "DM_Common", void, 8), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_NONE", 0, 0), void), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_BUSY", 1, 0), void), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_NOT_SUPPORTED", 2, 0), void), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_EXCEPTION", 3, 0), void), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_HALT_RESUME", 4, 0), void), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_UNDEF5", 5, 0), void), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_UNDEF6", 6, 0), void), Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_OTHER", 7, 0), void))))))))))} {Generic#(DM_Common::DM_command_access_reg_size, Meta#(MetaData#("DM_command_access_reg_size", "DM_Common", void, 8), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_UNDEF0", 0, 0), void), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_UNDEF1", 1, 0), void), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_LOWER32", 2, 0), void), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_LOWER64", 3, 0), void), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_LOWER128", 4, 0), void), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_UNDEF5", 5, 0), void), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_UNDEF6", 6, 0), void), Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_UNDEF7", 7, 0), void))))))))))} {Generic#(DM_Common::DM_command_cmdtype, Meta#(MetaData#("DM_command_cmdtype", "DM_Common", void, 2), Either#(Meta#(MetaConsAnon#("DM_COMMAND_CMDTYPE_ACCESS_REG", 0, 0), void), Meta#(MetaConsAnon#("DM_COMMAND_CMDTYPE_QUICK_ACCESS", 1, 0), void))))} {Generic#(DM_Common::DM_sbaccess, Meta#(MetaData#("DM_sbaccess", "DM_Common", void, 5), Either#(Meta#(MetaConsAnon#("DM_SBACCESS_8_BIT", 0, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBACCESS_16_BIT", 1, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBACCESS_32_BIT", 2, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBACCESS_64_BIT", 3, 0), void), Meta#(MetaConsAnon#("DM_SBACCESS_128_BIT", 4, 0), void)))))))} {Generic#(DM_Common::DM_sberror, Meta#(MetaData#("DM_sberror", "DM_Common", void, 8), Either#(Meta#(MetaConsAnon#("DM_SBERROR_NONE", 0, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBERROR_TIMEOUT", 1, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBERROR_BADADDR", 2, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBERROR_OTHER", 3, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBERROR_BUSY_STALE", 4, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBERROR_UNDEF5", 5, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBERROR_UNDEF6", 6, 0), void), Meta#(MetaConsAnon#("DM_SBERROR_UNDEF7_W1C", 7, 0), void))))))))))} {Generic#(DM_Run_Control::DM_Run_Control_IFC, Meta#(MetaData#("DM_Run_Control_IFC", "DM_Run_Control", void, 1), Meta#(MetaConsNamed#("DM_Run_Control_IFC", 0, 8), Tuple8#(Meta#(MetaField#("dmactive", 0), Conc#(Bool)), Meta#(MetaField#("reset", 1), Conc#(Action)), Meta#(MetaField#("av_read", 2), Conc#(function ActionValue#(DM_Common::DM_Word) f(DM_Common::DM_Addr x1))), Meta#(MetaField#("write", 3), Conc#(function Action f(DM_Common::DM_Addr x1, DM_Common::DM_Word x2))), Meta#(MetaField#("hart0_reset_client", 4), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("hart0_client_run_halt", 5), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("hart0_get_other_req", 6), Conc#(GetPut::Get#(Bit#(4)))), Meta#(MetaField#("ndm_reset_client", 7), Conc#(ClientServer::Client#(Bool, Bool)))))))} {Generic#(DM_System_Bus::DM_System_Bus_IFC, Meta#(MetaData#("DM_System_Bus_IFC", "DM_System_Bus", void, 1), Meta#(MetaConsNamed#("DM_System_Bus_IFC", 0, 4), Tuple4#(Meta#(MetaField#("reset", 0), Conc#(Action)), Meta#(MetaField#("av_read", 1), Conc#(function ActionValue#(DM_Common::DM_Word) f(DM_Common::DM_Addr x1))), Meta#(MetaField#("write", 2), Conc#(function Action f(DM_Common::DM_Addr x1, DM_Common::DM_Word x2))), Meta#(MetaField#("master", 3), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId_2x3, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data_Periph, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User)))))))} {Generic#(DM_System_Bus::SB_State, Meta#(MetaData#("SB_State", "DM_System_Bus", void, 3), Either#(Meta#(MetaConsAnon#("SB_NOTBUSY", 0, 0), void), Either#(Meta#(MetaConsAnon#("SB_READ_FINISH", 1, 0), void), Meta#(MetaConsAnon#("SB_WRITE_FINISH", 2, 0), void)))))} {Generic#(DPSRAM::VSyncSRAM#(adrs, dtas), Meta#(MetaData#("VSyncSRAM", "DPSRAM", Tuple2#(NumArg#(adrs), NumArg#(dtas)), 1), Meta#(MetaConsNamed#("VSyncSRAM", 0, 4), Tuple4#(Meta#(MetaField#("execA", 0), Conc#(function PrimAction f(Bit#(adrs) x1, Bit#(dtas) x2, Bit#(1) x3, Bit#(1) x4))), Meta#(MetaField#("rdataA", 1), Conc#(Bit#(dtas))), Meta#(MetaField#("execB", 2), Conc#(function PrimAction f(Bit#(adrs) x1, Bit#(dtas) x2, Bit#(1) x3, Bit#(1) x4))), Meta#(MetaField#("rdataB", 3), Conc#(Bit#(dtas)))))))} {Generic#(DVIController::DVIController#(clockMHz), Meta#(MetaData#("DVIController", "DVIController", NumArg#(clockMHz), 1), Meta#(MetaConsNamed#("DVIController", 0, 3), Tuple3#(Meta#(MetaField#("user", 0), Conc#(DVIController::DVI_User)), Meta#(MetaField#("dvi", 1), Conc#(DVIController::DVI_Pins)), Meta#(MetaField#("i2c", 2), Conc#(ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)))))))} {Generic#(DVIController::DVI_Pins, Meta#(MetaData#("DVI_Pins", "DVIController", void, 1), Meta#(MetaConsNamed#("DVI_Pins", 0, 9), Tuple9#(Meta#(MetaField#("rst_n", 0), Conc#(Reset)), Meta#(MetaField#("xclk_p", 1), Conc#(Clock)), Meta#(MetaField#("xclk_n", 2), Conc#(Clock)), Meta#(MetaField#("hsync_n", 3), Conc#(Bool)), Meta#(MetaField#("vsync_n", 4), Conc#(Bool)), Meta#(MetaField#("de", 5), Conc#(Bool)), Meta#(MetaField#("data", 6), Conc#(Bit#(12))), Meta#(MetaField#("pclk_p", 7), Conc#(Clock)), Meta#(MetaField#("pclk_n", 8), Conc#(Clock))))))} {Generic#(DVIController::DVI_User, Meta#(MetaData#("DVI_User", "DVIController", void, 1), Meta#(MetaConsNamed#("DVI_User", 0, 3), Tuple3#(Meta#(MetaField#("pixel", 0), Conc#(GetPut::Put#(Video::RGB888))), Meta#(MetaField#("hsync_n", 1), Conc#(Bool)), Meta#(MetaField#("vsync_n", 2), Conc#(Bool))))))} {Generic#(Debug::Debug#(a, b), Meta#(MetaData#("Debug", "Debug", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("Debug", 0, 2), Tuple2#(Meta#(MetaField#("inf", 0), Conc#(a)), Meta#(MetaField#("debugging", 1), Conc#(b))))))} {Generic#(Debug::Display#(a), Meta#(MetaData#("Display", "Debug", StarArg#(a), 1), Meta#(MetaConsNamed#("Display", 0, 1), Meta#(MetaField#("debug_display", 0), Conc#(function Action f(a x1))))))} {Generic#(Debug_Module::Debug_Module_IFC, Meta#(MetaData#("Debug_Module_IFC", "Debug_Module", void, 1), Meta#(MetaConsNamed#("Debug_Module_IFC", 0, 9), Tuple9#(Meta#(MetaField#("dmi", 0), Conc#(DM_Common::DMI)), Meta#(MetaField#("hart0_reset_client", 1), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("hart0_client_run_halt", 2), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("hart0_get_other_req", 3), Conc#(GetPut::Get#(Bit#(4)))), Meta#(MetaField#("hart0_gpr_mem_client", 4), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("hart0_fpr_mem_client", 5), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::FLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::FLEN)))), Meta#(MetaField#("hart0_csr_mem_client", 6), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("ndm_reset_client", 7), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("master", 8), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId_2x3, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data_Periph, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User)))))))} {Generic#(EX_ALU_functions::ALU_Inputs, Meta#(MetaData#("ALU_Inputs", "EX_ALU_functions", void, 1), Meta#(MetaConsNamed#("ALU_Inputs", 0, 20), Tuple20#(Meta#(MetaField#("cur_priv", 0), Conc#(ISA_Decls::Priv_Mode)), Meta#(MetaField#("pcc", 1), Conc#(CPU_Globals::PCC_T)), Meta#(MetaField#("ddc", 2), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("rs1_idx", 3), Conc#(Bit#(5))), Meta#(MetaField#("rs2_idx", 4), Conc#(Bit#(5))), Meta#(MetaField#("pc", 5), Conc#(ISA_Decls::Addr)), Meta#(MetaField#("is_i32_not_i16", 6), Conc#(Bool)), Meta#(MetaField#("instr", 7), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("instr_or_instr_C", 8), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("decoded_instr", 9), Conc#(ISA_Decls::Decoded_Instr)), Meta#(MetaField#("rs1_val", 10), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("rs2_val", 11), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mstatus", 12), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("frm", 13), Conc#(Bit#(3))), Meta#(MetaField#("frs1_val", 14), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("frs2_val", 15), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("frs3_val", 16), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("cap_rs1_val", 17), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("cap_rs2_val", 18), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("misa", 19), Conc#(ISA_Decls::MISA))))))} {Generic#(EX_ALU_functions::ALU_Outputs, Meta#(MetaData#("ALU_Outputs", "EX_ALU_functions", void, 1), Meta#(MetaConsNamed#("ALU_Outputs", 0, 36), Tuple36#(Meta#(MetaField#("control", 0), Conc#(CPU_Globals::Control)), Meta#(MetaField#("exc_code", 1), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("cheri_exc_code", 2), Conc#(ISA_Decls::CHERI_Exc_Code)), Meta#(MetaField#("cheri_exc_reg", 3), Conc#(Bit#(6))), Meta#(MetaField#("op_stage2", 4), Conc#(CPU_Globals::Op_Stage2)), Meta#(MetaField#("rd", 5), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("addr", 6), Conc#(ISA_Decls::Addr)), Meta#(MetaField#("val1", 7), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("val2", 8), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("val1_fast", 9), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("val2_fast", 10), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("fval1", 11), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("fval2", 12), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("fval3", 13), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("rd_in_fpr", 14), Conc#(Bool)), Meta#(MetaField#("rs_frm_fpr", 15), Conc#(Bool)), Meta#(MetaField#("val1_frm_gpr", 16), Conc#(Bool)), Meta#(MetaField#("rm", 17), Conc#(Bit#(3))), Meta#(MetaField#("mem_width_code", 18), Conc#(Bit#(3))), Meta#(MetaField#("mem_unsigned", 19), Conc#(Bool)), Meta#(MetaField#("mem_allow_cap", 20), Conc#(Bool)), Meta#(MetaField#("pcc", 21), Conc#(CPU_Globals::PCC_T)), Meta#(MetaField#("cap_val1", 22), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("cap_val2", 23), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("val1_cap_not_int", 24), Conc#(Bool)), Meta#(MetaField#("val2_cap_not_int", 25), Conc#(Bool)), Meta#(MetaField#("check_enable", 26), Conc#(Bool)), Meta#(MetaField#("check_authority", 27), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("check_authority_idx", 28), Conc#(Bit#(6))), Meta#(MetaField#("check_address_low", 29), Conc#(Bit#(ISA_Decls::XLEN))), Meta#(MetaField#("check_address_high", 30), Conc#(Bit#(TAdd#(ISA_Decls::XLEN, 1)))), Meta#(MetaField#("check_inclusive", 31), Conc#(Bool)), Meta#(MetaField#("check_exact_enable", 32), Conc#(Bool)), Meta#(MetaField#("check_exact_success", 33), Conc#(Bool)), Meta#(MetaField#("set_offset_in_bounds", 34), Conc#(Bool)), Meta#(MetaField#("cf_info", 35), Conc#(CPU_Globals::CF_Info))))))} {Generic#(EX_ALU_functions::Output_Select, Meta#(MetaData#("Output_Select", "EX_ALU_functions", void, 5), Either#(Meta#(MetaConsAnon#("LITERAL", 0, 0), void), Either#(Meta#(MetaConsAnon#("MODIFY_OFFSET", 1, 0), void), Either#(Meta#(MetaConsAnon#("SET_BOUNDS", 2, 0), void), Either#(Meta#(MetaConsAnon#("SET_ADDR", 3, 0), void), Meta#(MetaConsAnon#("GET_PRECISION", 4, 0), void)))))))} {Generic#(EdgeDetect::RequestDetect, Meta#(MetaData#("RequestDetect", "EdgeDetect", void, 1), Meta#(MetaConsNamed#("RequestDetect", 0, 4), Tuple4#(Meta#(MetaField#("send", 0), Conc#(Action)), Meta#(MetaField#("pulse", 1), Conc#(Bool)), Meta#(MetaField#("pending", 2), Conc#(Bool)), Meta#(MetaField#("ack", 3), Conc#(Action))))))} {Generic#(Either#(a, b), Meta#(MetaData#("Either", "Prelude", Tuple2#(StarArg#(a), StarArg#(b)), 2), Either#(Meta#(MetaConsAnon#("Left", 0, 1), Meta#(MetaField#("_1", 0), Conc#(a))), Meta#(MetaConsAnon#("Right", 1, 1), Meta#(MetaField#("_1", 0), Conc#(b))))))} {Generic#(Empty, Meta#(MetaData#("Empty", "Prelude", void, 1), Meta#(MetaConsNamed#("Empty", 0, 0), void)))} {Generic#(FBox_Core::FBoxResult, Meta#(MetaData#("FBoxResult", "FBox_Core", void, 1), Meta#(MetaConsNamed#("FBoxResult", 0, 2), Tuple2#(Meta#(MetaField#("value", 0), Conc#(Bit#(64))), Meta#(MetaField#("flags", 1), Conc#(Bit#(5)))))))} {Generic#(FBox_Core::FBoxState, Meta#(MetaData#("FBoxState", "FBox_Core", void, 4), Either#(Meta#(MetaConsAnon#("FBOX_RST", 0, 0), void), Either#(Meta#(MetaConsAnon#("FBOX_REQ", 1, 0), void), Either#(Meta#(MetaConsAnon#("FBOX_BUSY", 2, 0), void), Meta#(MetaConsAnon#("FBOX_RSP", 3, 0), void))))))} {Generic#(FBox_Core::FBox_Core_IFC, Meta#(MetaData#("FBox_Core_IFC", "FBox_Core", void, 1), Meta#(MetaConsNamed#("FBox_Core_IFC", 0, 4), Tuple4#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("req", 1), Conc#(function Action f(ISA_Decls::Opcode x1, Bit#(7) x2, Bit#(3) x3, ISA_Decls::RegName x4, Bit#(64) x5, Bit#(64) x6, Bit#(64) x7, Bool x8))), Meta#(MetaField#("valid", 2), Conc#(Bool)), Meta#(MetaField#("word", 3), Conc#(Tuple2#(Bit#(64), Bit#(5))))))))} {Generic#(FBox_Top::FBox_Top_IFC, Meta#(MetaData#("FBox_Top_IFC", "FBox_Top", void, 1), Meta#(MetaConsNamed#("FBox_Top_IFC", 0, 4), Tuple4#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("req", 1), Conc#(function Action f(ISA_Decls::Opcode x1, Bit#(7) x2, Bit#(3) x3, ISA_Decls::RegName x4, Bit#(64) x5, Bit#(64) x6, Bit#(64) x7, Bool x8))), Meta#(MetaField#("valid", 2), Conc#(Bool)), Meta#(MetaField#("word", 3), Conc#(Tuple2#(Bit#(64), Bit#(5))))))))} {Generic#(FF::FF#(data, depth), Meta#(MetaData#("FF", "FF", Tuple2#(StarArg#(data), NumArg#(depth)), 1), Meta#(MetaConsNamed#("FF", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(function Action f(data x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(data)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("notEmpty", 4), Conc#(Bool)), Meta#(MetaField#("clear", 5), Conc#(Action)), Meta#(MetaField#("remaining", 6), Conc#(Bit#(TAdd#(TLog#(depth), 1))))))))} {Generic#(FF::FFNext#(data, depth), Meta#(MetaData#("FFNext", "FF", Tuple2#(StarArg#(data), NumArg#(depth)), 1), Meta#(MetaConsNamed#("FFNext", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function Action f(data x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(data)), Meta#(MetaField#("next", 3), Conc#(data)), Meta#(MetaField#("notFull", 4), Conc#(Bool)), Meta#(MetaField#("notEmpty", 5), Conc#(Bool)), Meta#(MetaField#("nextNotEmpty", 6), Conc#(Bool)), Meta#(MetaField#("remaining", 7), Conc#(Bit#(TAdd#(TLog#(depth), 1))))))))} {Generic#(FIFO::FIFO#(a), Meta#(MetaData#("FIFO", "FIFO", StarArg#(a), 1), Meta#(MetaConsNamed#("FIFO", 0, 4), Tuple4#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("clear", 3), Conc#(Action))))))} {Generic#(FIFOF::FIFOF#(a), Meta#(MetaData#("FIFOF", "FIFOF", StarArg#(a), 1), Meta#(MetaConsNamed#("FIFOF", 0, 6), Tuple6#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("notEmpty", 4), Conc#(Bool)), Meta#(MetaField#("clear", 5), Conc#(Action))))))} {Generic#(FIFOF_::FIFOF_#(a), Meta#(MetaData#("FIFOF_", "FIFOF_", StarArg#(a), 1), Meta#(MetaConsNamed#("FIFOF_", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("clear", 3), Conc#(Action)), Meta#(MetaField#("notFull", 4), Conc#(Bool)), Meta#(MetaField#("i_notFull", 5), Conc#(Bool)), Meta#(MetaField#("notEmpty", 6), Conc#(Bool)), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bool))))))} {Generic#(FIFOF_::VFIFOF0_, Meta#(MetaData#("VFIFOF0_", "FIFOF_", void, 1), Meta#(MetaConsNamed#("VFIFOF0_", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(Action)), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("clear", 2), Conc#(Action)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("i_notFull", 4), Conc#(Bool)), Meta#(MetaField#("notEmpty", 5), Conc#(Bool)), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bool))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_143#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_143", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_143", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_236#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_236", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_236", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_346#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_346", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_346", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_380#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_380", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_380", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_482#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_482", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_482", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_573#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_573", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_573", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_60#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_60", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_60", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_607#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_607", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_607", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.VFIFOF0_171#(_n0), Meta#(MetaData#("_FIFOF_.VFIFOF0_171", "FIFOF_", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_FIFOF_.VFIFOF0_171", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("clear", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.VFIFOF0_266#(_n0), Meta#(MetaData#("_FIFOF_.VFIFOF0_266", "FIFOF_", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_FIFOF_.VFIFOF0_266", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("clear", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.VFIFOF0_424#(_n0), Meta#(MetaData#("_FIFOF_.VFIFOF0_424", "FIFOF_", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_FIFOF_.VFIFOF0_424", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("clear", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.VFIFOF0_514#(_n0), Meta#(MetaData#("_FIFOF_.VFIFOF0_514", "FIFOF_", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_FIFOF_.VFIFOF0_514", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("clear", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.VFIFOF0_641#(_n0), Meta#(MetaData#("_FIFOF_.VFIFOF0_641", "FIFOF_", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_FIFOF_.VFIFOF0_641", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("clear", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.VFIFOF0_88#(_n0), Meta#(MetaData#("_FIFOF_.VFIFOF0_88", "FIFOF_", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_FIFOF_.VFIFOF0_88", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("clear", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(FIFOLevel::FIFOCountIfc#(a_type, fifoDepth), Meta#(MetaData#("FIFOCountIfc", "FIFOLevel", Tuple2#(StarArg#(a_type), NumArg#(fifoDepth)), 1), Meta#(MetaConsNamed#("FIFOCountIfc", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("notEmpty", 4), Conc#(Bool)), Meta#(MetaField#("count", 5), Conc#(UInt#(TLog#(TAdd#(fifoDepth, 1))))), Meta#(MetaField#("clear", 6), Conc#(Action))))))} {Generic#(FIFOLevel::FIFOLevelIfc#(a_type, fifoDepth), Meta#(MetaData#("FIFOLevelIfc", "FIFOLevel", Tuple2#(StarArg#(a_type), NumArg#(fifoDepth)), 1), Meta#(MetaConsNamed#("FIFOLevelIfc", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("clear", 3), Conc#(Action)), Meta#(MetaField#("notFull", 4), Conc#(Bool)), Meta#(MetaField#("notEmpty", 5), Conc#(Bool)), Meta#(MetaField#("isLessThan", 6), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("isGreaterThan", 7), Conc#(function Bool f(Integer x1)))))))} {Generic#(FIFOLevel::FIFOLevel_INT#(a_type, cntSize), Meta#(MetaData#("FIFOLevel_INT", "FIFOLevel", Tuple2#(StarArg#(a_type), NumArg#(cntSize)), 1), Meta#(MetaConsNamed#("FIFOLevel_INT", 0, 10), Tuple10#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("clear", 3), Conc#(Action)), Meta#(MetaField#("notFull", 4), Conc#(Bool)), Meta#(MetaField#("notEmpty", 5), Conc#(Bool)), Meta#(MetaField#("count", 6), Conc#(UInt#(cntSize))), Meta#(MetaField#("i_notFull", 7), Conc#(Bool)), Meta#(MetaField#("i_notEmpty", 8), Conc#(Bool)), Meta#(MetaField#("i_count", 9), Conc#(UInt#(cntSize)))))))} {Generic#(FIFOLevel::SyncFIFOCount0_INT#(cntSize), Meta#(MetaData#("SyncFIFOCount0_INT", "FIFOLevel", NumArg#(cntSize), 1), Meta#(MetaConsNamed#("SyncFIFOCount0_INT", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(Action)), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("sNotFull", 2), Conc#(Bool)), Meta#(MetaField#("dNotEmpty", 3), Conc#(Bool)), Meta#(MetaField#("sCount", 4), Conc#(UInt#(cntSize))), Meta#(MetaField#("dCount", 5), Conc#(UInt#(cntSize))), Meta#(MetaField#("sClear", 6), Conc#(Action)), Meta#(MetaField#("dClear", 7), Conc#(Action))))))} {Generic#(FIFOLevel::SyncFIFOCountIfc#(a_type, fifoDepth), Meta#(MetaData#("SyncFIFOCountIfc", "FIFOLevel", Tuple2#(StarArg#(a_type), NumArg#(fifoDepth)), 1), Meta#(MetaConsNamed#("SyncFIFOCountIfc", 0, 11), Tuple11#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("sNotFull", 3), Conc#(Bool)), Meta#(MetaField#("sNotEmpty", 4), Conc#(Bool)), Meta#(MetaField#("dNotFull", 5), Conc#(Bool)), Meta#(MetaField#("dNotEmpty", 6), Conc#(Bool)), Meta#(MetaField#("sCount", 7), Conc#(UInt#(TLog#(TAdd#(fifoDepth, 1))))), Meta#(MetaField#("dCount", 8), Conc#(UInt#(TLog#(TAdd#(fifoDepth, 1))))), Meta#(MetaField#("sClear", 9), Conc#(Action)), Meta#(MetaField#("dClear", 10), Conc#(Action))))))} {Generic#(FIFOLevel::SyncFIFOCount_INT#(a_type, cntSize), Meta#(MetaData#("SyncFIFOCount_INT", "FIFOLevel", Tuple2#(StarArg#(a_type), NumArg#(cntSize)), 1), Meta#(MetaConsNamed#("SyncFIFOCount_INT", 0, 9), Tuple9#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("sNotFull", 3), Conc#(Bool)), Meta#(MetaField#("dNotEmpty", 4), Conc#(Bool)), Meta#(MetaField#("sCount", 5), Conc#(UInt#(cntSize))), Meta#(MetaField#("dCount", 6), Conc#(UInt#(cntSize))), Meta#(MetaField#("sClear", 7), Conc#(Action)), Meta#(MetaField#("dClear", 8), Conc#(Action))))))} {Generic#(FIFOLevel::SyncFIFOLevelIfc#(a_type, fifoDepth), Meta#(MetaData#("SyncFIFOLevelIfc", "FIFOLevel", Tuple2#(StarArg#(a_type), NumArg#(fifoDepth)), 1), Meta#(MetaConsNamed#("SyncFIFOLevelIfc", 0, 13), Tuple13#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("sNotFull", 3), Conc#(Bool)), Meta#(MetaField#("sNotEmpty", 4), Conc#(Bool)), Meta#(MetaField#("dNotFull", 5), Conc#(Bool)), Meta#(MetaField#("dNotEmpty", 6), Conc#(Bool)), Meta#(MetaField#("sIsLessThan", 7), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("sIsGreaterThan", 8), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("dIsLessThan", 9), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("dIsGreaterThan", 10), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("sClear", 11), Conc#(Action)), Meta#(MetaField#("dClear", 12), Conc#(Action))))))} {Generic#(FIFOLevel::_FIFOLevel.SyncFIFOCount0_INT962#(_n0, _n1), Meta#(MetaData#("_FIFOLevel.SyncFIFOCount0_INT962", "FIFOLevel", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOLevel.SyncFIFOCount0_INT962", 0, 10), Tuple10#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("sNotFull", 2), Conc#(Bit#(1))), Meta#(MetaField#("dNotEmpty", 3), Conc#(Bit#(1))), Meta#(MetaField#("sCount", 4), Conc#(Bit#(_n0))), Meta#(MetaField#("dCount", 5), Conc#(Bit#(_n0))), Meta#(MetaField#("sClear", 6), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("RDY_sClear", 7), Conc#(Bit#(1))), Meta#(MetaField#("dClear", 8), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("RDY_dClear", 9), Conc#(Bit#(1)))))))} {Generic#(FIFOLevel::_FIFOLevel.SyncFIFOCount_INT880#(_n0, _n1, _n2), Meta#(MetaData#("_FIFOLevel.SyncFIFOCount_INT880", "FIFOLevel", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_FIFOLevel.SyncFIFOCount_INT880", 0, 11), Tuple11#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n2) f(Bit#(_n1) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n2))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n1))), Meta#(MetaField#("sNotFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("dNotEmpty", 4), Conc#(Bit#(1))), Meta#(MetaField#("sCount", 5), Conc#(Bit#(_n0))), Meta#(MetaField#("dCount", 6), Conc#(Bit#(_n0))), Meta#(MetaField#("sClear", 7), Conc#(ActionValue_#(_n2))), Meta#(MetaField#("RDY_sClear", 8), Conc#(Bit#(1))), Meta#(MetaField#("dClear", 9), Conc#(ActionValue_#(_n2))), Meta#(MetaField#("RDY_dClear", 10), Conc#(Bit#(1)))))))} {Generic#(FPR_RegFile::FPR_RegFile_IFC, Meta#(MetaData#("FPR_RegFile_IFC", "FPR_RegFile", void, 1), Meta#(MetaConsNamed#("FPR_RegFile_IFC", 0, 6), Tuple6#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("read_rs1", 1), Conc#(function ISA_Decls::WordFL f(ISA_Decls::RegName x1))), Meta#(MetaField#("read_rs1_port2", 2), Conc#(function ISA_Decls::WordFL f(ISA_Decls::RegName x1))), Meta#(MetaField#("read_rs2", 3), Conc#(function ISA_Decls::WordFL f(ISA_Decls::RegName x1))), Meta#(MetaField#("read_rs3", 4), Conc#(function ISA_Decls::WordFL f(ISA_Decls::RegName x1))), Meta#(MetaField#("write_rd", 5), Conc#(function Action f(ISA_Decls::RegName x1, ISA_Decls::WordFL x2)))))))} {Generic#(FPR_RegFile::RF_State, Meta#(MetaData#("RF_State", "FPR_RegFile", void, 3), Either#(Meta#(MetaConsAnon#("RF_RESET_START", 0, 0), void), Either#(Meta#(MetaConsAnon#("RF_RESETTING", 1, 0), void), Meta#(MetaConsAnon#("RF_RUNNING", 2, 0), void)))))} {Generic#(FPU::FPU_IFC, Meta#(MetaData#("FPU_IFC", "FPU", void, 1), Meta#(MetaConsNamed#("FPU_IFC", 0, 2), Tuple2#(Meta#(MetaField#("server_core", 0), Conc#(ClientServer::Server#(FPU::Fpu_Req, FPU::Fpu_Rsp))), Meta#(MetaField#("server_reset", 1), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token)))))))} {Generic#(FPU::FloatU, Meta#(MetaData#("FloatU", "FPU", void, 2), Either#(Meta#(MetaConsAnon#("D", 0, 1), Meta#(MetaField#("_1", 0), Conc#(FPU::FDouble))), Meta#(MetaConsAnon#("S", 1, 1), Meta#(MetaField#("_1", 0), Conc#(FPU::FSingle))))))} {Generic#(File, Meta#(MetaData#("File", "Prelude", void, 3), Either#(Meta#(MetaConsAnon#("InvalidFile", 0, 0), void), Either#(Meta#(MetaConsAnon#("MCD", 1, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(31)))), Meta#(MetaConsAnon#("FD", 2, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(31))))))))} {Generic#(FixedPoint::FixedPoint#(isize, fsize), Meta#(MetaData#("FixedPoint", "FixedPoint", Tuple2#(NumArg#(isize), NumArg#(fsize)), 1), Meta#(MetaConsNamed#("FixedPoint", 0, 2), Tuple2#(Meta#(MetaField#("i", 0), Conc#(Bit#(isize))), Meta#(MetaField#("f", 1), Conc#(Bit#(fsize)))))))} {Generic#(FixedPoint::RoundMode, Meta#(MetaData#("RoundMode", "FixedPoint", void, 7), Either#(Meta#(MetaConsAnon#("Rnd_Plus_Inf", 0, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Zero", 1, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Minus_Inf", 2, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Inf", 3, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Conv", 4, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Truncate", 5, 0), void), Meta#(MetaConsAnon#("Rnd_Truncate_Zero", 6, 0), void)))))))))} {Generic#(FloatingPoint::CommonState#(e, m), Meta#(MetaData#("CommonState", "FloatingPoint", Tuple2#(NumArg#(e), NumArg#(m)), 1), Meta#(MetaConsNamed#("CommonState", 0, 3), Tuple3#(Meta#(MetaField#("res", 0), Conc#(Maybe#(FloatingPoint::FloatingPoint#(e, m)))), Meta#(MetaField#("exc", 1), Conc#(FloatingPoint::Exception)), Meta#(MetaField#("rmode", 2), Conc#(FloatingPoint::RoundMode))))))} {Generic#(FloatingPoint::Disorder, Meta#(MetaData#("Disorder", "FloatingPoint", void, 4), Either#(Meta#(MetaConsAnon#("LT", 0, 0), void), Either#(Meta#(MetaConsAnon#("EQ", 1, 0), void), Either#(Meta#(MetaConsAnon#("GT", 2, 0), void), Meta#(MetaConsAnon#("UO", 3, 0), void))))))} {Generic#(FloatingPoint::Exception, Meta#(MetaData#("Exception", "FloatingPoint", void, 1), Meta#(MetaConsNamed#("Exception", 0, 5), Tuple5#(Meta#(MetaField#("invalid_op", 0), Conc#(Bool)), Meta#(MetaField#("divide_0", 1), Conc#(Bool)), Meta#(MetaField#("overflow", 2), Conc#(Bool)), Meta#(MetaField#("underflow", 3), Conc#(Bool)), Meta#(MetaField#("inexact", 4), Conc#(Bool))))))} {Generic#(FloatingPoint::FloatingPoint#(e, m), Meta#(MetaData#("FloatingPoint", "FloatingPoint", Tuple2#(NumArg#(e), NumArg#(m)), 1), Meta#(MetaConsNamed#("FloatingPoint", 0, 3), Tuple3#(Meta#(MetaField#("sign", 0), Conc#(Bool)), Meta#(MetaField#("exp", 1), Conc#(Bit#(e))), Meta#(MetaField#("sfd", 2), Conc#(Bit#(m)))))))} {Generic#(FloatingPoint::RoundMode, Meta#(MetaData#("RoundMode", "FloatingPoint", void, 5), Either#(Meta#(MetaConsAnon#("Rnd_Nearest_Even", 0, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Nearest_Away_Zero", 1, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Plus_Inf", 2, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Minus_Inf", 3, 0), void), Meta#(MetaConsAnon#("Rnd_Zero", 4, 0), void)))))))} {Generic#(Fmt, ConcPrim#(Fmt))} {Generic#(FoldFIFO::FoldFIFO#(a), Meta#(MetaData#("FoldFIFO", "FoldFIFO", StarArg#(a), 1), Meta#(MetaConsNamed#("FoldFIFO", 0, 5), Tuple5#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("clear", 3), Conc#(Action)), Meta#(MetaField#("foldr", 4), ConcPoly#(FoldFIFO::FoldFIFO_foldr#(a)))))))} {Generic#(FoldFIFOF::FoldFIFO#(a), Meta#(MetaData#("FoldFIFO", "FoldFIFOF", StarArg#(a), 1), Meta#(MetaConsNamed#("FoldFIFO", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("notEmpty", 4), Conc#(Bool)), Meta#(MetaField#("clear", 5), Conc#(Action)), Meta#(MetaField#("foldr", 6), ConcPoly#(FoldFIFOF::FoldFIFO_foldr#(a)))))))} {Generic#(GPIOController::GPIO, Meta#(MetaData#("GPIO", "GPIOController", void, 1), Meta#(MetaConsNamed#("GPIO", 0, 1), Meta#(MetaField#("gpio", 0), Conc#(Inout#(Bit#(1)))))))} {Generic#(GPIOController::GPIOController, Meta#(MetaData#("GPIOController", "GPIOController", void, 1), Meta#(MetaConsNamed#("GPIOController", 0, 5), Tuple5#(Meta#(MetaField#("_write", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("drive_out", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("read_drive_out", 2), Conc#(Bool)), Meta#(MetaField#("_read", 3), Conc#(Bit#(1))), Meta#(MetaField#("ifc", 4), Conc#(GPIOController::GPIO))))))} {Generic#(GPR_RegFile::GPR_RegFile_IFC, Meta#(MetaData#("GPR_RegFile_IFC", "GPR_RegFile", void, 1), Meta#(MetaConsNamed#("GPR_RegFile_IFC", 0, 5), Tuple5#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("read_rs1", 1), Conc#(function CHERICC_Fat::CapPipe f(ISA_Decls::RegName x1))), Meta#(MetaField#("read_rs1_port2", 2), Conc#(function CHERICC_Fat::CapPipe f(ISA_Decls::RegName x1))), Meta#(MetaField#("read_rs2", 3), Conc#(function CHERICC_Fat::CapPipe f(ISA_Decls::RegName x1))), Meta#(MetaField#("write_rd", 4), Conc#(function Action f(ISA_Decls::RegName x1, CHERICC_Fat::CapReg x2)))))))} {Generic#(GPR_RegFile::RF_State, Meta#(MetaData#("RF_State", "GPR_RegFile", void, 3), Either#(Meta#(MetaConsAnon#("RF_RESET_START", 0, 0), void), Either#(Meta#(MetaConsAnon#("RF_RESETTING", 1, 0), void), Meta#(MetaConsAnon#("RF_RUNNING", 2, 0), void)))))} {Generic#(Gearbox::Gearbox#(in, out, a), Meta#(MetaData#("Gearbox", "Gearbox", Tuple3#(NumArg#(in), NumArg#(out), StarArg#(a)), 1), Meta#(MetaConsNamed#("Gearbox", 0, 5), Tuple5#(Meta#(MetaField#("enq", 0), Conc#(function Action f(Vector::Vector#(in, a) x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(Vector::Vector#(out, a))), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("notEmpty", 4), Conc#(Bool))))))} {Generic#(GenCMsg::MsgManager#(fifos, rxBytes, txBytes), Meta#(MetaData#("MsgManager", "GenCMsg", Tuple3#(StarArg#(fifos), NumArg#(rxBytes), NumArg#(txBytes)), 1), Meta#(MetaConsNamed#("MsgManager", 0, 3), Tuple3#(Meta#(MetaField#("fifos", 0), Conc#(fifos)), Meta#(MetaField#("rxMsg", 1), Conc#(GetPut::Put#(Vector::Vector#(rxBytes, Bit#(8))))), Meta#(MetaField#("txMsg", 2), Conc#(GetPut::Get#(GenCMsg::SizedVector#(txBytes, Bit#(8)))))))))} {Generic#(GenCMsg::Rx#(destFIFOSize, srcFIFOSize, a), Meta#(MetaData#("Rx", "GenCMsg", Tuple3#(NumArg#(destFIFOSize), NumArg#(srcFIFOSize), StarArg#(a)), 1), Meta#(MetaConsNamed#("Rx", 0, 3), Tuple3#(Meta#(MetaField#("deq", 0), Conc#(Action)), Meta#(MetaField#("first", 1), Conc#(a)), Meta#(MetaField#("notEmpty", 2), Conc#(Bool))))))} {Generic#(GenCMsg::Tx#(destFIFOSize, srcFIFOSize, a), Meta#(MetaData#("Tx", "GenCMsg", Tuple3#(NumArg#(destFIFOSize), NumArg#(srcFIFOSize), StarArg#(a)), 1), Meta#(MetaConsNamed#("Tx", 0, 2), Tuple2#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("notFull", 1), Conc#(Bool))))))} {Generic#(GetPut::Get#(a), Meta#(MetaData#("Get", "GetPut", StarArg#(a), 1), Meta#(MetaConsNamed#("Get", 0, 1), Meta#(MetaField#("get", 0), Conc#(ActionValue#(a))))))} {Generic#(GetPut::GetS#(a), Meta#(MetaData#("GetS", "GetPut", StarArg#(a), 1), Meta#(MetaConsNamed#("GetS", 0, 2), Tuple2#(Meta#(MetaField#("first", 0), Conc#(a)), Meta#(MetaField#("deq", 1), Conc#(Action))))))} {Generic#(GetPut::Put#(a), Meta#(MetaData#("Put", "GetPut", StarArg#(a), 1), Meta#(MetaConsNamed#("Put", 0, 1), Meta#(MetaField#("put", 0), Conc#(function Action f(a x1))))))} {Generic#(GetPut::PutS#(a), Meta#(MetaData#("PutS", "GetPut", StarArg#(a), 1), Meta#(MetaConsNamed#("PutS", 0, 2), Tuple2#(Meta#(MetaField#("offer", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("accepted", 1), Conc#(Bool))))))} {Generic#(Giraffe_IFC::Core_IFC, Meta#(MetaData#("Core_IFC", "Giraffe_IFC", void, 1), Meta#(MetaConsNamed#("Core_IFC", 0, 8), Tuple8#(Meta#(MetaField#("master0", 0), Conc#(AXI4_Types::AXI4_Master_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("master1", 1), Conc#(AXI4_Types::AXI4_Master_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("master2", 2), Conc#(AXI4_Types::AXI4_Master_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("master3", 3), Conc#(AXI4_Types::AXI4_Master_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("interrupt0", 4), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("interrupt1", 5), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("interrupt2", 6), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("jtag", 7), Conc#(Giraffe_IFC::JTAG_IFC))))))} {Generic#(Giraffe_IFC::DMI_IFC, Meta#(MetaData#("DMI_IFC", "Giraffe_IFC", void, 1), Meta#(MetaConsNamed#("DMI_IFC", 0, 9), Tuple9#(Meta#(MetaField#("req_ready", 0), Conc#(Bit#(1))), Meta#(MetaField#("req_valid", 1), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("req_addr", 2), Conc#(function Action f(Bit#(7) x1))), Meta#(MetaField#("req_data", 3), Conc#(function Action f(Bit#(32) x1))), Meta#(MetaField#("req_op", 4), Conc#(function Action f(Bit#(2) x1))), Meta#(MetaField#("rsp_ready", 5), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("rsp_valid", 6), Conc#(Bit#(1))), Meta#(MetaField#("rsp_data", 7), Conc#(Bit#(32))), Meta#(MetaField#("rsp_response", 8), Conc#(Bit#(2)))))))} {Generic#(Giraffe_IFC::DMI_Master_IFC, Meta#(MetaData#("DMI_Master_IFC", "Giraffe_IFC", void, 1), Meta#(MetaConsNamed#("DMI_Master_IFC", 0, 9), Tuple9#(Meta#(MetaField#("req_ready", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("req_valid", 1), Conc#(Bit#(1))), Meta#(MetaField#("req_addr", 2), Conc#(Bit#(7))), Meta#(MetaField#("req_data", 3), Conc#(Bit#(32))), Meta#(MetaField#("req_op", 4), Conc#(Bit#(2))), Meta#(MetaField#("rsp_ready", 5), Conc#(Bit#(1))), Meta#(MetaField#("rsp_valid", 6), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("rsp_data", 7), Conc#(function Action f(Bit#(32) x1))), Meta#(MetaField#("rsp_response", 8), Conc#(function Action f(Bit#(2) x1)))))))} {Generic#(Giraffe_IFC::JTAG_IFC, Meta#(MetaData#("JTAG_IFC", "Giraffe_IFC", void, 1), Meta#(MetaConsNamed#("JTAG_IFC", 0, 5), Tuple5#(Meta#(MetaField#("tdi", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("tms", 1), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("tclk", 2), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("tdo", 3), Conc#(Bit#(1))), Meta#(MetaField#("tclk_out", 4), Conc#(Clock))))))} {Generic#(Giraffe_IFC::Platform_IFC, Meta#(MetaData#("Platform_IFC", "Giraffe_IFC", void, 1), Meta#(MetaConsNamed#("Platform_IFC", 0, 9), Tuple9#(Meta#(MetaField#("slave0", 0), Conc#(AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("slave1", 1), Conc#(AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("slave2", 2), Conc#(AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("slave3", 3), Conc#(AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("interrupt0", 4), Conc#(Bit#(1))), Meta#(MetaField#("interrupt1", 5), Conc#(Bit#(1))), Meta#(MetaField#("interrupt2", 6), Conc#(Bit#(1))), Meta#(MetaField#("uart_out", 7), Conc#(BusDefines::BusSend#(Bit#(8)))), Meta#(MetaField#("uart_in", 8), Conc#(BusDefines::BusRecv#(Bit#(8))))))))} {Generic#(Gray::Gray#(n), Meta#(MetaData#("Gray", "Gray", NumArg#(n), 1), Meta#(MetaConsNamed#("Gray", 0, 1), Meta#(MetaField#("code", 0), Conc#(Bit#(n))))))} {Generic#(GrayCounter::GrayCounter#(n), Meta#(MetaData#("GrayCounter", "GrayCounter", NumArg#(n), 1), Meta#(MetaConsNamed#("GrayCounter", 0, 8), Tuple8#(Meta#(MetaField#("incr", 0), Conc#(Action)), Meta#(MetaField#("decr", 1), Conc#(Action)), Meta#(MetaField#("sWriteBin", 2), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("sReadBin", 3), Conc#(Bit#(n))), Meta#(MetaField#("sWriteGray", 4), Conc#(function Action f(Gray::Gray#(n) x1))), Meta#(MetaField#("sReadGray", 5), Conc#(Gray::Gray#(n))), Meta#(MetaField#("dReadBin", 6), Conc#(Bit#(n))), Meta#(MetaField#("dReadGray", 7), Conc#(Gray::Gray#(n)))))))} {Generic#(HDMIController::HDMIController, Meta#(MetaData#("HDMIController", "HDMIController", void, 1), Meta#(MetaConsNamed#("HDMIController", 0, 2), Tuple2#(Meta#(MetaField#("hdmi", 0), Conc#(HDMIController::HDMI_Pins)), Meta#(MetaField#("i2c", 1), Conc#(ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)))))))} {Generic#(HDMIController::HDMIParams, Meta#(MetaData#("HDMIParams", "HDMIController", void, 1), Meta#(MetaConsNamed#("HDMIParams", 0, 4), Tuple4#(Meta#(MetaField#("xilinxBoard", 0), Conc#(String)), Meta#(MetaField#("timing", 1), Conc#(Video::VideoTiming)), Meta#(MetaField#("userClock", 2), Conc#(Clock)), Meta#(MetaField#("userReset", 3), Conc#(Reset))))))} {Generic#(HDMIController::HDMI_Pins, Meta#(MetaData#("HDMI_Pins", "HDMIController", void, 1), Meta#(MetaConsNamed#("HDMI_Pins", 0, 8), Tuple8#(Meta#(MetaField#("clk", 0), Conc#(Clock)), Meta#(MetaField#("data", 1), Conc#(Bit#(18))), Meta#(MetaField#("de", 2), Conc#(Bit#(1))), Meta#(MetaField#("hsync", 3), Conc#(Bit#(1))), Meta#(MetaField#("vsync", 4), Conc#(Bit#(1))), Meta#(MetaField#("spdif", 5), Conc#(Bit#(1))), Meta#(MetaField#("interrupt", 6), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("spdif_in", 7), Conc#(function Action f(Bit#(1) x1)))))))} {Generic#(HList::HCons#(e, l), Meta#(MetaData#("HCons", "HList", Tuple2#(StarArg#(e), StarArg#(l)), 1), Meta#(MetaConsNamed#("HCons", 0, 2), Tuple2#(Meta#(MetaField#("hd", 0), Conc#(e)), Meta#(MetaField#("tl", 1), Conc#(l))))))} {Generic#(HList::HNil, Meta#(MetaData#("HNil", "HList", void, 1), Meta#(MetaConsNamed#("HNil", 0, 0), void)))} {Generic#(Handle, ConcPrim#(Handle))} {Generic#(I2C::I2C, Meta#(MetaData#("I2C", "I2C", void, 1), Meta#(MetaConsNamed#("I2C", 0, 2), Tuple2#(Meta#(MetaField#("i2c", 0), Conc#(I2C::I2C_Pins)), Meta#(MetaField#("user", 1), Conc#(ClientServer::Server#(I2C::I2CRequest, I2C::I2CResponse)))))))} {Generic#(I2C::I2CController#(n), Meta#(MetaData#("I2CController", "I2C", NumArg#(n), 1), Meta#(MetaConsNamed#("I2CController", 0, 2), Tuple2#(Meta#(MetaField#("i2c", 0), Conc#(I2C::I2C_Pins)), Meta#(MetaField#("users", 1), Conc#(Vector::Vector#(n, ClientServer::Server#(I2C::I2CRequest, I2C::I2CResponse))))))))} {Generic#(I2C::I2CRequest, Meta#(MetaData#("I2CRequest", "I2C", void, 1), Meta#(MetaConsNamed#("I2CRequest", 0, 4), Tuple4#(Meta#(MetaField#("write", 0), Conc#(Bool)), Meta#(MetaField#("slaveaddr", 1), Conc#(Bit#(7))), Meta#(MetaField#("address", 2), Conc#(Bit#(8))), Meta#(MetaField#("data", 3), Conc#(Bit#(8)))))))} {Generic#(I2C::I2CResponse, Meta#(MetaData#("I2CResponse", "I2C", void, 1), Meta#(MetaConsNamed#("I2CResponse", 0, 1), Meta#(MetaField#("data", 0), Conc#(Bit#(8))))))} {Generic#(I2C::I2C_Pins, Meta#(MetaData#("I2C_Pins", "I2C", void, 1), Meta#(MetaConsNamed#("I2C_Pins", 0, 2), Tuple2#(Meta#(MetaField#("sda", 0), Conc#(Inout#(Bit#(1)))), Meta#(MetaField#("scl", 1), Conc#(Inout#(Bit#(1))))))))} {Generic#(I2C::State, Meta#(MetaData#("State", "I2C", void, 2), Either#(Meta#(MetaConsAnon#("Idle", 0, 0), void), Meta#(MetaConsAnon#("Running", 1, 0), void))))} {Generic#(IOMode, Meta#(MetaData#("IOMode", "Prelude", void, 3), Either#(Meta#(MetaConsAnon#("ReadMode", 0, 0), void), Either#(Meta#(MetaConsAnon#("WriteMode", 1, 0), void), Meta#(MetaConsAnon#("AppendMode", 2, 0), void)))))} {Generic#(ISA_Decls::Access_RWX, Meta#(MetaData#("Access_RWX", "ISA_Decls", void, 3), Either#(Meta#(MetaConsAnon#("Access_RWX_R", 0, 0), void), Either#(Meta#(MetaConsAnon#("Access_RWX_W", 1, 0), void), Meta#(MetaConsAnon#("Access_RWX_X", 2, 0), void)))))} {Generic#(ISA_Decls::Decoded_Instr, Meta#(MetaData#("Decoded_Instr", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("Decoded_Instr", 0, 20), Tuple20#(Meta#(MetaField#("opcode", 0), Conc#(ISA_Decls::Opcode)), Meta#(MetaField#("rd", 1), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("rs1", 2), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("rs2", 3), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("rs3", 4), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("csr", 5), Conc#(ISA_Decls::CSR_Addr)), Meta#(MetaField#("funct3", 6), Conc#(Bit#(3))), Meta#(MetaField#("funct5", 7), Conc#(Bit#(5))), Meta#(MetaField#("funct7", 8), Conc#(Bit#(7))), Meta#(MetaField#("funct10", 9), Conc#(Bit#(10))), Meta#(MetaField#("funct5rs2", 10), Conc#(Bit#(5))), Meta#(MetaField#("funct5rd", 11), Conc#(Bit#(5))), Meta#(MetaField#("imm12_I", 12), Conc#(Bit#(12))), Meta#(MetaField#("imm12_S", 13), Conc#(Bit#(12))), Meta#(MetaField#("imm13_SB", 14), Conc#(Bit#(13))), Meta#(MetaField#("imm20_U", 15), Conc#(Bit#(20))), Meta#(MetaField#("imm21_UJ", 16), Conc#(Bit#(21))), Meta#(MetaField#("pred", 17), Conc#(Bit#(4))), Meta#(MetaField#("succ", 18), Conc#(Bit#(4))), Meta#(MetaField#("aqrl", 19), Conc#(Bit#(2)))))))} {Generic#(ISA_Decls::Fence_Ordering, Meta#(MetaData#("Fence_Ordering", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("Fence_Ordering", 0, 8), Tuple8#(Meta#(MetaField#("pi", 0), Conc#(Bool)), Meta#(MetaField#("po", 1), Conc#(Bool)), Meta#(MetaField#("pr", 2), Conc#(Bool)), Meta#(MetaField#("pw", 3), Conc#(Bool)), Meta#(MetaField#("si", 4), Conc#(Bool)), Meta#(MetaField#("so", 5), Conc#(Bool)), Meta#(MetaField#("sr", 6), Conc#(Bool)), Meta#(MetaField#("sw", 7), Conc#(Bool))))))} {Generic#(ISA_Decls::FpuOp, Meta#(MetaData#("FpuOp", "ISA_Decls", void, 9), Either#(Meta#(MetaConsAnon#("FPAdd", 0, 0), void), Either#(Meta#(MetaConsAnon#("FPSub", 1, 0), void), Either#(Meta#(MetaConsAnon#("FPMul", 2, 0), void), Either#(Meta#(MetaConsAnon#("FPDiv", 3, 0), void), Either#(Meta#(MetaConsAnon#("FPSqrt", 4, 0), void), Either#(Meta#(MetaConsAnon#("FPMAdd", 5, 0), void), Either#(Meta#(MetaConsAnon#("FPMSub", 6, 0), void), Either#(Meta#(MetaConsAnon#("FPNMAdd", 7, 0), void), Meta#(MetaConsAnon#("FPNMSub", 8, 0), void)))))))))))} {Generic#(ISA_Decls::ISize, Meta#(MetaData#("ISize", "ISA_Decls", void, 2), Either#(Meta#(MetaConsAnon#("ISIZE16BIT", 0, 0), void), Meta#(MetaConsAnon#("ISIZE32BIT", 1, 0), void))))} {Generic#(ISA_Decls::MCause, Meta#(MetaData#("MCause", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("MCause", 0, 2), Tuple2#(Meta#(MetaField#("interrupt", 0), Conc#(Bit#(1))), Meta#(MetaField#("exc_code", 1), Conc#(ISA_Decls::Exc_Code))))))} {Generic#(ISA_Decls::MCounteren, Meta#(MetaData#("MCounteren", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("MCounteren", 0, 4), Tuple4#(Meta#(MetaField#("hpm", 0), Conc#(Bit#(29))), Meta#(MetaField#("ir", 1), Conc#(Bit#(1))), Meta#(MetaField#("tm", 2), Conc#(Bit#(1))), Meta#(MetaField#("cy", 3), Conc#(Bit#(1)))))))} {Generic#(ISA_Decls::MCountinhibit, Meta#(MetaData#("MCountinhibit", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("MCountinhibit", 0, 5), Tuple5#(Meta#(MetaField#("reserved", 0), Conc#(Reserved::ReservedZero#(TSub#(29, ISA_Decls::No_Of_Ctrs)))), Meta#(MetaField#("hpm", 1), Conc#(Bit#(ISA_Decls::No_Of_Ctrs))), Meta#(MetaField#("ir", 2), Conc#(Bit#(1))), Meta#(MetaField#("reserved2", 3), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("cy", 4), Conc#(Bit#(1)))))))} {Generic#(ISA_Decls::MISA, Meta#(MetaData#("MISA", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("MISA", 0, 27), Tuple27#(Meta#(MetaField#("mxl", 0), Conc#(Bit#(2))), Meta#(MetaField#("z", 1), Conc#(Bit#(1))), Meta#(MetaField#("y", 2), Conc#(Bit#(1))), Meta#(MetaField#("x", 3), Conc#(Bit#(1))), Meta#(MetaField#("w", 4), Conc#(Bit#(1))), Meta#(MetaField#("v", 5), Conc#(Bit#(1))), Meta#(MetaField#("u", 6), Conc#(Bit#(1))), Meta#(MetaField#("t", 7), Conc#(Bit#(1))), Meta#(MetaField#("s", 8), Conc#(Bit#(1))), Meta#(MetaField#("r", 9), Conc#(Bit#(1))), Meta#(MetaField#("q", 10), Conc#(Bit#(1))), Meta#(MetaField#("p", 11), Conc#(Bit#(1))), Meta#(MetaField#("o", 12), Conc#(Bit#(1))), Meta#(MetaField#("n", 13), Conc#(Bit#(1))), Meta#(MetaField#("m", 14), Conc#(Bit#(1))), Meta#(MetaField#("l", 15), Conc#(Bit#(1))), Meta#(MetaField#("k", 16), Conc#(Bit#(1))), Meta#(MetaField#("j", 17), Conc#(Bit#(1))), Meta#(MetaField#("i", 18), Conc#(Bit#(1))), Meta#(MetaField#("h", 19), Conc#(Bit#(1))), Meta#(MetaField#("g", 20), Conc#(Bit#(1))), Meta#(MetaField#("f", 21), Conc#(Bit#(1))), Meta#(MetaField#("e", 22), Conc#(Bit#(1))), Meta#(MetaField#("d", 23), Conc#(Bit#(1))), Meta#(MetaField#("c", 24), Conc#(Bit#(1))), Meta#(MetaField#("b", 25), Conc#(Bit#(1))), Meta#(MetaField#("a", 26), Conc#(Bit#(1)))))))} {Generic#(ISA_Decls::MTVEC_Mode, Meta#(MetaData#("MTVEC_Mode", "ISA_Decls", void, 2), Either#(Meta#(MetaConsAnon#("DIRECT", 0, 0), void), Meta#(MetaConsAnon#("VECTORED", 1, 0), void))))} {Generic#(ISA_Decls::MTVec, Meta#(MetaData#("MTVec", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("MTVec", 0, 2), Tuple2#(Meta#(MetaField#("base", 0), Conc#(Bit#(ISA_Decls::XLEN_MINUS_2))), Meta#(MetaField#("mode", 1), Conc#(ISA_Decls::MTVEC_Mode))))))} {Generic#(ISA_Decls::Mem_Data_Size, Meta#(MetaData#("Mem_Data_Size", "ISA_Decls", void, 4), Either#(Meta#(MetaConsAnon#("BITS8", 0, 0), void), Either#(Meta#(MetaConsAnon#("BITS16", 1, 0), void), Either#(Meta#(MetaConsAnon#("BITS32", 2, 0), void), Meta#(MetaConsAnon#("BITS64", 3, 0), void))))))} {Generic#(ISA_Decls::RV_Version, Meta#(MetaData#("RV_Version", "ISA_Decls", void, 2), Either#(Meta#(MetaConsAnon#("RV32", 0, 0), void), Meta#(MetaConsAnon#("RV64", 1, 0), void))))} {Generic#(ISA_Decls::Trap_Info_CSR, Meta#(MetaData#("Trap_Info_CSR", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("Trap_Info_CSR", 0, 4), Tuple4#(Meta#(MetaField#("pcc", 0), Conc#(CHERICC_Fat::CapReg)), Meta#(MetaField#("mstatus", 1), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mcause", 2), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("priv", 3), Conc#(ISA_Decls::Priv_Mode))))))} {Generic#(ISA_Decls::XCCSR, Meta#(MetaData#("XCCSR", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("XCCSR", 0, 2), Tuple2#(Meta#(MetaField#("cheri_exc_reg", 0), Conc#(Bit#(6))), Meta#(MetaField#("cheri_exc_code", 1), Conc#(ISA_Decls::CHERI_Exc_Code))))))} {Generic#(IVec::IVec0#(a), Meta#(MetaData#("IVec0", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec0", 0, 0), void)))} {Generic#(IVec::IVec1#(a), Meta#(MetaData#("IVec1", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec1", 0, 1), Meta#(MetaField#("_m00", 0), Conc#(a)))))} {Generic#(IVec::IVec10#(a), Meta#(MetaData#("IVec10", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec10", 0, 10), Tuple10#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a))))))} {Generic#(IVec::IVec11#(a), Meta#(MetaData#("IVec11", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec11", 0, 11), Tuple11#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a))))))} {Generic#(IVec::IVec12#(a), Meta#(MetaData#("IVec12", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec12", 0, 12), Tuple12#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a))))))} {Generic#(IVec::IVec13#(a), Meta#(MetaData#("IVec13", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec13", 0, 13), Tuple13#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a)), Meta#(MetaField#("_m12", 12), Conc#(a))))))} {Generic#(IVec::IVec14#(a), Meta#(MetaData#("IVec14", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec14", 0, 14), Tuple14#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a)), Meta#(MetaField#("_m12", 12), Conc#(a)), Meta#(MetaField#("_m13", 13), Conc#(a))))))} {Generic#(IVec::IVec15#(a), Meta#(MetaData#("IVec15", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec15", 0, 15), Tuple15#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a)), Meta#(MetaField#("_m12", 12), Conc#(a)), Meta#(MetaField#("_m13", 13), Conc#(a)), Meta#(MetaField#("_m14", 14), Conc#(a))))))} {Generic#(IVec::IVec16#(a), Meta#(MetaData#("IVec16", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec16", 0, 16), Tuple16#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a)), Meta#(MetaField#("_m12", 12), Conc#(a)), Meta#(MetaField#("_m13", 13), Conc#(a)), Meta#(MetaField#("_m14", 14), Conc#(a)), Meta#(MetaField#("_m15", 15), Conc#(a))))))} {Generic#(IVec::IVec2#(a), Meta#(MetaData#("IVec2", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec2", 0, 2), Tuple2#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a))))))} {Generic#(IVec::IVec3#(a), Meta#(MetaData#("IVec3", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec3", 0, 3), Tuple3#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a))))))} {Generic#(IVec::IVec32#(a), Meta#(MetaData#("IVec32", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec32", 0, 32), Tuple32#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a)), Meta#(MetaField#("_m12", 12), Conc#(a)), Meta#(MetaField#("_m13", 13), Conc#(a)), Meta#(MetaField#("_m14", 14), Conc#(a)), Meta#(MetaField#("_m15", 15), Conc#(a)), Meta#(MetaField#("_m16", 16), Conc#(a)), Meta#(MetaField#("_m17", 17), Conc#(a)), Meta#(MetaField#("_m18", 18), Conc#(a)), Meta#(MetaField#("_m19", 19), Conc#(a)), Meta#(MetaField#("_m20", 20), Conc#(a)), Meta#(MetaField#("_m21", 21), Conc#(a)), Meta#(MetaField#("_m22", 22), Conc#(a)), Meta#(MetaField#("_m23", 23), Conc#(a)), Meta#(MetaField#("_m24", 24), Conc#(a)), Meta#(MetaField#("_m25", 25), Conc#(a)), Meta#(MetaField#("_m26", 26), Conc#(a)), Meta#(MetaField#("_m27", 27), Conc#(a)), Meta#(MetaField#("_m28", 28), Conc#(a)), Meta#(MetaField#("_m29", 29), Conc#(a)), Meta#(MetaField#("_m30", 30), Conc#(a)), Meta#(MetaField#("_m31", 31), Conc#(a))))))} {Generic#(IVec::IVec33#(a), Meta#(MetaData#("IVec33", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec33", 0, 33), Tuple33#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a)), Meta#(MetaField#("_m12", 12), Conc#(a)), Meta#(MetaField#("_m13", 13), Conc#(a)), Meta#(MetaField#("_m14", 14), Conc#(a)), Meta#(MetaField#("_m15", 15), Conc#(a)), Meta#(MetaField#("_m16", 16), Conc#(a)), Meta#(MetaField#("_m17", 17), Conc#(a)), Meta#(MetaField#("_m18", 18), Conc#(a)), Meta#(MetaField#("_m19", 19), Conc#(a)), Meta#(MetaField#("_m20", 20), Conc#(a)), Meta#(MetaField#("_m21", 21), Conc#(a)), Meta#(MetaField#("_m22", 22), Conc#(a)), Meta#(MetaField#("_m23", 23), Conc#(a)), Meta#(MetaField#("_m24", 24), Conc#(a)), Meta#(MetaField#("_m25", 25), Conc#(a)), Meta#(MetaField#("_m26", 26), Conc#(a)), Meta#(MetaField#("_m27", 27), Conc#(a)), Meta#(MetaField#("_m28", 28), Conc#(a)), Meta#(MetaField#("_m29", 29), Conc#(a)), Meta#(MetaField#("_m30", 30), Conc#(a)), Meta#(MetaField#("_m31", 31), Conc#(a)), Meta#(MetaField#("_m32", 32), Conc#(a))))))} {Generic#(IVec::IVec4#(a), Meta#(MetaData#("IVec4", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec4", 0, 4), Tuple4#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a))))))} {Generic#(IVec::IVec5#(a), Meta#(MetaData#("IVec5", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec5", 0, 5), Tuple5#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a))))))} {Generic#(IVec::IVec6#(a), Meta#(MetaData#("IVec6", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec6", 0, 6), Tuple6#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a))))))} {Generic#(IVec::IVec7#(a), Meta#(MetaData#("IVec7", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec7", 0, 7), Tuple7#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a))))))} {Generic#(IVec::IVec8#(a), Meta#(MetaData#("IVec8", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec8", 0, 8), Tuple8#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a))))))} {Generic#(IVec::IVec9#(a), Meta#(MetaData#("IVec9", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec9", 0, 9), Tuple9#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a))))))} {Generic#(Inout#(_v100), ConcPrim#(Inout#(_v100)))} {Generic#(Inout::_Prelude.Empty29, Meta#(MetaData#("_Prelude.Empty29", "Inout", void, 1), Meta#(MetaConsNamed#("_Prelude.Empty29", 0, 0), void)))} {Generic#(Inout::_Prelude.Empty4, Meta#(MetaData#("_Prelude.Empty4", "Inout", void, 1), Meta#(MetaConsNamed#("_Prelude.Empty4", 0, 0), void)))} {Generic#(Inout_#(_v100), ConcPrim#(Inout_#(_v100)))} {Generic#(Int#(n), Meta#(MetaData#("Int", "Prelude", NumArg#(n), 1), Meta#(MetaConsAnon#("Int", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(n))))))} {Generic#(IntMulDiv::DivState, Meta#(MetaData#("DivState", "IntMulDiv", void, 5), Either#(Meta#(MetaConsAnon#("Div_RDY", 0, 0), void), Either#(Meta#(MetaConsAnon#("Div_START", 1, 0), void), Either#(Meta#(MetaConsAnon#("Div_LOOP1", 2, 0), void), Either#(Meta#(MetaConsAnon#("Div_LOOP2", 3, 0), void), Meta#(MetaConsAnon#("Div_DONE", 4, 0), void)))))))} {Generic#(IntMulDiv::IntDiv_IFC#(w), Meta#(MetaData#("IntDiv_IFC", "IntMulDiv", NumArg#(w), 1), Meta#(MetaConsNamed#("IntDiv_IFC", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(function Action f(Bool x1, Bool x2))), Meta#(MetaField#("result_valid", 1), Conc#(Bool)), Meta#(MetaField#("result_value", 2), Conc#(Tuple2#(Bit#(w), Bit#(w))))))))} {Generic#(IntMulDiv::IntMul_IFC#(w), Meta#(MetaData#("IntMul_IFC", "IntMulDiv", NumArg#(w), 1), Meta#(MetaConsNamed#("IntMul_IFC", 0, 3), Tuple3#(Meta#(MetaField#("put_args", 0), Conc#(function Action f(Bool x1, Bit#(w) x2, Bool x3, Bit#(w) x4))), Meta#(MetaField#("result_valid", 1), Conc#(Bool)), Meta#(MetaField#("result_value", 2), Conc#(Bit#(TAdd#(w, w))))))))} {Generic#(IntMulDiv::MulState, Meta#(MetaData#("MulState", "IntMulDiv", void, 3), Either#(Meta#(MetaConsAnon#("MUL_IDLE", 0, 0), void), Either#(Meta#(MetaConsAnon#("MUL_BUSY", 1, 0), void), Meta#(MetaConsAnon#("MUL_READY", 2, 0), void)))))} {Generic#(Integer, ConcPrim#(Integer))} {Generic#(JtagTap::DMI, Meta#(MetaData#("DMI", "JtagTap", void, 1), Meta#(MetaConsNamed#("DMI", 0, 3), Tuple3#(Meta#(MetaField#("address", 0), Conc#(Bit#(6))), Meta#(MetaField#("data", 1), Conc#(Bit#(32))), Meta#(MetaField#("op", 2), Conc#(JtagTap::DMI_OP))))))} {Generic#(JtagTap::DTMCS, Meta#(MetaData#("DTMCS", "JtagTap", void, 1), Meta#(MetaConsNamed#("DTMCS", 0, 8), Tuple8#(Meta#(MetaField#("reserved", 0), Conc#(Reserved::ReservedZero#(14))), Meta#(MetaField#("dmihardreset", 1), Conc#(Bit#(1))), Meta#(MetaField#("dmireset", 2), Conc#(Bit#(1))), Meta#(MetaField#("reserved2", 3), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("idle", 4), Conc#(Bit#(3))), Meta#(MetaField#("dmistat", 5), Conc#(Bit#(2))), Meta#(MetaField#("abits", 6), Conc#(Bit#(6))), Meta#(MetaField#("version", 7), Conc#(Bit#(4)))))))} {Generic#(JtagTap::JtagState, Meta#(MetaData#("JtagState", "JtagTap", void, 16), Either#(Meta#(MetaConsAnon#("TEST_LOGIC_RESET", 0, 0), void), Either#(Meta#(MetaConsAnon#("RUN_TEST_IDLE", 1, 0), void), Either#(Meta#(MetaConsAnon#("SELECT_DR_SCAN", 2, 0), void), Either#(Meta#(MetaConsAnon#("CAPTURE_DR", 3, 0), void), Either#(Meta#(MetaConsAnon#("SHIFT_DR", 4, 0), void), Either#(Meta#(MetaConsAnon#("EXIT1_DR", 5, 0), void), Either#(Meta#(MetaConsAnon#("PAUSE_DR", 6, 0), void), Either#(Meta#(MetaConsAnon#("EXIT2_DR", 7, 0), void), Either#(Meta#(MetaConsAnon#("UPDATE_DR", 8, 0), void), Either#(Meta#(MetaConsAnon#("SELECT_IR_SCAN", 9, 0), void), Either#(Meta#(MetaConsAnon#("CAPTURE_IR", 10, 0), void), Either#(Meta#(MetaConsAnon#("SHIFT_IR", 11, 0), void), Either#(Meta#(MetaConsAnon#("EXIT1_IR", 12, 0), void), Either#(Meta#(MetaConsAnon#("PAUSE_IR", 13, 0), void), Either#(Meta#(MetaConsAnon#("EXIT2_IR", 14, 0), void), Meta#(MetaConsAnon#("UPDATE_IR", 15, 0), void))))))))))))))))))} {Generic#(JtagTap::JtagTap_IFC, Meta#(MetaData#("JtagTap_IFC", "JtagTap", void, 1), Meta#(MetaConsNamed#("JtagTap_IFC", 0, 2), Tuple2#(Meta#(MetaField#("jtag", 0), Conc#(Giraffe_IFC::JTAG_IFC)), Meta#(MetaField#("dmi", 1), Conc#(Giraffe_IFC::DMI_Master_IFC))))))} {Generic#(LBus::Accum#(n), Meta#(MetaData#("Accum", "LBus", NumArg#(n), 1), Meta#(MetaConsNamed#("Accum", 0, 2), Tuple2#(Meta#(MetaField#("add", 0), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("value", 1), Conc#(Bit#(n)))))))} {Generic#(LBus::DutWithLBusIfc#(i), Meta#(MetaData#("DutWithLBusIfc", "LBus", StarArg#(i), 1), Meta#(MetaConsNamed#("DutWithLBusIfc", 0, 2), Tuple2#(Meta#(MetaField#("dutIfc", 0), Conc#(i)), Meta#(MetaField#("lbus", 1), Conc#(LBus::LBusContextIfc))))))} {Generic#(LBus::Fan#(intype, outtype), Meta#(MetaData#("Fan", "LBus", Tuple2#(StarArg#(intype), StarArg#(outtype)), 1), Meta#(MetaConsNamed#("Fan", 0, 2), Tuple2#(Meta#(MetaField#("fanin", 0), Conc#(intype)), Meta#(MetaField#("fanout", 1), Conc#(outtype))))))} {Generic#(LBus::HandlerState, Meta#(MetaData#("HandlerState", "LBus", void, 3), Either#(Meta#(MetaConsAnon#("Idle", 0, 0), void), Either#(Meta#(MetaConsAnon#("Writing", 1, 0), void), Meta#(MetaConsAnon#("Reading", 2, 0), void)))))} {Generic#(LBus::ILBus#(sa, sd), Meta#(MetaData#("ILBus", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("ILBus", 0, 4), Tuple4#(Meta#(MetaField#("req", 0), Conc#(function Action f(Bool x1, LBus::LbRWop x2, Bit#(sa) x3, Bit#(sd) x4))), Meta#(MetaField#("rdDat", 1), Conc#(Bit#(sd))), Meta#(MetaField#("ack", 2), Conc#(Bit#(1))), Meta#(MetaField#("inrpt", 3), Conc#(Bit#(1)))))))} {Generic#(LBus::ILBusDriver#(sa, sd), Meta#(MetaData#("ILBusDriver", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("ILBusDriver", 0, 7), Tuple7#(Meta#(MetaField#("valid", 0), Conc#(Bool)), Meta#(MetaField#("op", 1), Conc#(LBus::LbRWop)), Meta#(MetaField#("addr", 2), Conc#(Bit#(sa))), Meta#(MetaField#("dat", 3), Conc#(Bit#(sd))), Meta#(MetaField#("rdDat", 4), Conc#(function Action f(Bit#(sd) x1))), Meta#(MetaField#("ack", 5), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("inrpt", 6), Conc#(function Action f(Bit#(1) x1)))))))} {Generic#(LBus::ILBusHandler#(sa, sd), Meta#(MetaData#("ILBusHandler", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("ILBusHandler", 0, 4), Tuple4#(Meta#(MetaField#("driver", 0), Conc#(LBus::ILBusDriver#(sa, sd))), Meta#(MetaField#("lbserver", 1), Conc#(RAM::RAM#(Bit#(sa), Bit#(sd)))), Meta#(MetaField#("interrupting", 2), Conc#(Bool)), Meta#(MetaField#("resetInterrupt", 3), Conc#(Action))))))} {Generic#(LBus::ILbLeaf#(sa, sd), Meta#(MetaData#("ILbLeaf", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("ILbLeaf", 0, 3), Tuple3#(Meta#(MetaField#("req", 0), Conc#(GetPut::Put#(Maybe#(LBus::LbReq#(sa, sd))))), Meta#(MetaField#("ack", 1), Conc#(GetPut::Get#(Maybe#(Bit#(sd))))), Meta#(MetaField#("inrpt", 2), Conc#(GetPut::Get#(Bit#(1))))))))} {Generic#(LBus::ILbNode#(sa, sd), Meta#(MetaData#("ILbNode", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("ILbNode", 0, 3), Tuple3#(Meta#(MetaField#("req", 0), Conc#(GetPut::Get#(Maybe#(LBus::LbReq#(sa, sd))))), Meta#(MetaField#("ack", 1), Conc#(GetPut::Put#(Maybe#(Bit#(sd))))), Meta#(MetaField#("inrpt", 2), Conc#(GetPut::Put#(Bit#(1))))))))} {Generic#(LBus::IWithLBus#(busIfc, deviceIfc), Meta#(MetaData#("IWithLBus", "LBus", Tuple2#(StarArg#(busIfc), StarArg#(deviceIfc)), 1), Meta#(MetaConsNamed#("IWithLBus", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(busIfc)), Meta#(MetaField#("device", 1), Conc#(deviceIfc))))))} {Generic#(LBus::IntFlag#(sa, sd), Meta#(MetaData#("IntFlag", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("IntFlag", 0, 1), Meta#(MetaField#("flag", 0), Conc#(Bit#(1))))))} {Generic#(LBus::Interrupt, Meta#(MetaData#("Interrupt", "LBus", void, 1), Meta#(MetaConsNamed#("Interrupt", 0, 2), Tuple2#(Meta#(MetaField#("set", 0), Conc#(Action)), Meta#(MetaField#("_read", 1), Conc#(Bool))))))} {Generic#(LBus::LBSItem#(sa, sd), Meta#(MetaData#("LBSItem", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 2), Either#(Meta#(MetaConsAnon#("Rg", 0, 1), Meta#(MetaField#("_1", 0), Conc#(LBus::LBSReg#(sa, sd)))), Meta#(MetaConsAnon#("Flg", 1, 1), Meta#(MetaField#("_1", 0), Conc#(LBus::IntFlag#(sa, sd)))))))} {Generic#(LBus::LBSReg#(sa, sd), Meta#(MetaData#("LBSReg", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("LBSReg", 0, 3), Tuple3#(Meta#(MetaField#("lbsAddr", 0), Conc#(LBus::LbAddr#(sa, sd))), Meta#(MetaField#("lbsSet", 1), Conc#(function Action f(Bit#(sd) x1))), Meta#(MetaField#("lbsGet", 2), Conc#(ActionValue#(Bit#(sd))))))))} {Generic#(LBus::LBusContextP#(sa, sd), Meta#(MetaData#("LBusContextP", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("LBusContextP", 0, 2), Tuple2#(Meta#(MetaField#("items", 0), Conc#(List#(LBus::LBSItem#(sa, sd)))), Meta#(MetaField#("leaves", 1), Conc#(List#(LBus::ILbLeaf#(sa, sd))))))))} {Generic#(LBus::LbAddr#(sa, sd), Meta#(MetaData#("LbAddr", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsAnon#("LbAddr", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(sa))))))} {Generic#(LBus::LbRWop, Meta#(MetaData#("LbRWop", "LBus", void, 2), Either#(Meta#(MetaConsAnon#("LbRead", 0, 0), void), Meta#(MetaConsAnon#("LbWrite", 1, 0), void))))} {Generic#(LBus::LbReq#(sa, sd), Meta#(MetaData#("LbReq", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("LbReq", 0, 3), Tuple3#(Meta#(MetaField#("wr", 0), Conc#(LBus::LbRWop)), Meta#(MetaField#("adr", 1), Conc#(Bit#(sa))), Meta#(MetaField#("dat", 2), Conc#(Bit#(sd)))))))} {Generic#(LBus::LbState, Meta#(MetaData#("LbState", "LBus", void, 4), Either#(Meta#(MetaConsAnon#("Idle", 0, 0), void), Either#(Meta#(MetaConsAnon#("Req1", 1, 0), void), Either#(Meta#(MetaConsAnon#("Req2", 2, 0), void), Meta#(MetaConsAnon#("Req3", 3, 0), void))))))} {Generic#(LBus::RegHandler#(a, b), Meta#(MetaData#("RegHandler", "LBus", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("RegHandler", 0, 2), Tuple2#(Meta#(MetaField#("getRequest", 0), Conc#(a)), Meta#(MetaField#("storeResponse", 1), Conc#(function Action f(b x1)))))))} {Generic#(LBus::ResetType, Meta#(MetaData#("ResetType", "LBus", void, 3), Either#(Meta#(MetaConsAnon#("SYNC", 0, 0), void), Either#(Meta#(MetaConsAnon#("ASYNC", 1, 0), void), Meta#(MetaConsAnon#("NONE", 2, 0), void)))))} {Generic#(LCDController::LCD, Meta#(MetaData#("LCD", "LCDController", void, 1), Meta#(MetaConsNamed#("LCD", 0, 4), Tuple4#(Meta#(MetaField#("db", 0), Conc#(Bit#(4))), Meta#(MetaField#("e", 1), Conc#(Bit#(1))), Meta#(MetaField#("rs", 2), Conc#(Bit#(1))), Meta#(MetaField#("rw", 3), Conc#(Bit#(1)))))))} {Generic#(LCDController::LCDController, Meta#(MetaData#("LCDController", "LCDController", void, 1), Meta#(MetaConsNamed#("LCDController", 0, 3), Tuple3#(Meta#(MetaField#("setLine1", 0), Conc#(function Action f(Vector::Vector#(16, Bit#(8)) x1))), Meta#(MetaField#("setLine2", 1), Conc#(function Action f(Vector::Vector#(16, Bit#(8)) x1))), Meta#(MetaField#("ifc", 2), Conc#(LCDController::LCD))))))} {Generic#(LEDController::LED#(n), Meta#(MetaData#("LED", "LEDController", NumArg#(n), 1), Meta#(MetaConsNamed#("LED", 0, 1), Meta#(MetaField#("out", 0), Conc#(Bit#(n))))))} {Generic#(LEDController::LEDController, Meta#(MetaData#("LEDController", "LEDController", void, 1), Meta#(MetaConsNamed#("LEDController", 0, 5), Tuple5#(Meta#(MetaField#("setLag", 0), Conc#(function Action f(LEDController::Lag x1))), Meta#(MetaField#("setPeriod", 1), Conc#(function Action f(LEDController::Level x1, LEDController::Time x2, LEDController::Level x3, LEDController::Time x4))), Meta#(MetaField#("setActivity", 2), Conc#(function Action f(LEDController::Time x1))), Meta#(MetaField#("bump", 3), Conc#(Action)), Meta#(MetaField#("ifc", 4), Conc#(LEDController::LED#(1)))))))} {Generic#(LFSR::LFSR#(a), Meta#(MetaData#("LFSR", "LFSR", StarArg#(a), 1), Meta#(MetaConsNamed#("LFSR", 0, 3), Tuple3#(Meta#(MetaField#("seed", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("value", 1), Conc#(a)), Meta#(MetaField#("next", 2), Conc#(Action))))))} {Generic#(List#(a), Meta#(MetaData#("List", "Prelude", StarArg#(a), 2), Either#(Meta#(MetaConsAnon#("Nil", 0, 0), void), Meta#(MetaConsAnon#("Cons", 1, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(a)), Meta#(MetaField#("_2", 1), Conc#(List#(a))))))))} {Generic#(ListN::ListN#(n, a), Meta#(MetaData#("ListN", "ListN", Tuple2#(NumArg#(n), StarArg#(a)), 1), Vector::Vector#(n, Conc#(a))))} {Generic#(List_$Cons#(a), Meta#(MetaData#("List_$Cons", "Prelude", StarArg#(a), 1), Meta#(MetaConsNamed#("List_$Cons", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(a)), Meta#(MetaField#("_2", 1), Conc#(List#(a)))))))} {Generic#(MEM::MEM#(addr, data), Meta#(MetaData#("MEM", "MEM", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("MEM", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(MEM::ReadIfc#(addr, data))), Meta#(MetaField#("write", 1), Conc#(function Action f(addr x1, data x2)))))))} {Generic#(MEM::MEM2#(addr, data), Meta#(MetaData#("MEM2", "MEM", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("MEM2", 0, 3), Tuple3#(Meta#(MetaField#("read", 0), Conc#(MEM::ReadIfc#(addr, data))), Meta#(MetaField#("readB", 1), Conc#(MEM::ReadIfc#(addr, data))), Meta#(MetaField#("write", 2), Conc#(function Action f(addr x1, data x2)))))))} {Generic#(MEM::MemBEVerbose#(addr, data, data_bytes), Meta#(MetaData#("MemBEVerbose", "MEM", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(data_bytes)), 1), Meta#(MetaConsNamed#("MemBEVerbose", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(MEM::ReadIfc#(addr, data))), Meta#(MetaField#("write", 1), Conc#(function Action f(addr x1, data x2, Vector::Vector#(data_bytes, Bool) x3)))))))} {Generic#(MEM::ReadIfc#(addr, data), Meta#(MetaData#("ReadIfc", "MEM", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("ReadIfc", 0, 3), Tuple3#(Meta#(MetaField#("put", 0), Conc#(function Action f(addr x1))), Meta#(MetaField#("get", 1), Conc#(ActionValue#(data))), Meta#(MetaField#("peek", 2), Conc#(data))))))} {Generic#(MEM::_MEM.MEM304#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_MEM.MEM304", "MEM", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_MEM.MEM304", 0, 4), Tuple4#(Meta#(MetaField#("read_put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1))), Meta#(MetaField#("read_get", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("read_peek", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("write", 3), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n0) x2)))))))} {Generic#(MIMO::MIMO#(max_in, max_out, size, t), Meta#(MetaData#("MIMO", "MIMO", Tuple4#(NumArg#(max_in), NumArg#(max_out), NumArg#(size), StarArg#(t)), 1), Meta#(MetaConsNamed#("MIMO", 0, 9), Tuple9#(Meta#(MetaField#("enq", 0), Conc#(function Action f(MIMO::LUInt#(max_in) x1, Vector::Vector#(max_in, t) x2))), Meta#(MetaField#("first", 1), Conc#(Vector::Vector#(max_out, t))), Meta#(MetaField#("deq", 2), Conc#(function Action f(MIMO::LUInt#(max_out) x1))), Meta#(MetaField#("enqReady", 3), Conc#(Bool)), Meta#(MetaField#("enqReadyN", 4), Conc#(function Bool f(MIMO::LUInt#(max_in) x1))), Meta#(MetaField#("deqReady", 5), Conc#(Bool)), Meta#(MetaField#("deqReadyN", 6), Conc#(function Bool f(MIMO::LUInt#(max_out) x1))), Meta#(MetaField#("count", 7), Conc#(MIMO::LUInt#(size))), Meta#(MetaField#("clear", 8), Conc#(Action))))))} {Generic#(MIMO::MIMOConfiguration, Meta#(MetaData#("MIMOConfiguration", "MIMO", void, 1), Meta#(MetaConsNamed#("MIMOConfiguration", 0, 2), Tuple2#(Meta#(MetaField#("unguarded", 0), Conc#(Bool)), Meta#(MetaField#("bram_based", 1), Conc#(Bool))))))} {Generic#(ML507_DDR2::DDR2, Meta#(MetaData#("DDR2", "ML507_DDR2", void, 1), Meta#(MetaConsNamed#("DDR2", 0, 2), Tuple2#(Meta#(MetaField#("wires", 0), Conc#(ML507_mig_33_wrapper::DDR2Wires)), Meta#(MetaField#("server", 1), Conc#(DDR2Types::DDR2Server))))))} {Generic#(ML507_DDR2::DDR2LLReq, Meta#(MetaData#("DDR2LLReq", "ML507_DDR2", void, 1), Meta#(MetaConsNamed#("DDR2LLReq", 0, 2), Tuple2#(Meta#(MetaField#("cmd", 0), Conc#(Maybe#(ML507_DDR2::DDR2LLReqCmd))), Meta#(MetaField#("data", 1), Conc#(Maybe#(ML507_DDR2::DDR2LLReqData)))))))} {Generic#(ML507_DDR2::DDR2LLReqCmd, Meta#(MetaData#("DDR2LLReqCmd", "ML507_DDR2", void, 1), Meta#(MetaConsNamed#("DDR2LLReqCmd", 0, 2), Tuple2#(Meta#(MetaField#("cmd", 0), Conc#(Bit#(3))), Meta#(MetaField#("addr", 1), Conc#(Bit#(31)))))))} {Generic#(ML507_DDR2::DDR2LLReqData, Meta#(MetaData#("DDR2LLReqData", "ML507_DDR2", void, 1), Meta#(MetaConsNamed#("DDR2LLReqData", 0, 2), Tuple2#(Meta#(MetaField#("data", 0), Conc#(Bit#(128))), Meta#(MetaField#("be", 1), Conc#(Bit#(16)))))))} {Generic#(ML507_DDR2::Demarshaller#(a), Meta#(MetaData#("Demarshaller", "ML507_DDR2", StarArg#(a), 1), Meta#(MetaConsNamed#("Demarshaller", 0, 2), Tuple2#(Meta#(MetaField#("single", 0), Conc#(GetPut::Put#(a))), Meta#(MetaField#("double", 1), Conc#(GetPut::Get#(Tuple2#(a, a))))))))} {Generic#(ML507_DDR2::Marshaller#(a), Meta#(MetaData#("Marshaller", "ML507_DDR2", StarArg#(a), 1), Meta#(MetaConsNamed#("Marshaller", 0, 2), Tuple2#(Meta#(MetaField#("double", 0), Conc#(GetPut::Put#(Tuple2#(a, a)))), Meta#(MetaField#("single", 1), Conc#(GetPut::Get#(a)))))))} {Generic#(ML507_mig_33_wrapper::DDR2Wires, Meta#(MetaData#("DDR2Wires", "ML507_mig_33_wrapper", void, 1), Meta#(MetaConsNamed#("DDR2Wires", 0, 14), Tuple14#(Meta#(MetaField#("dq", 0), Conc#(Inout#(Bit#(64)))), Meta#(MetaField#("a", 1), Conc#(Bit#(13))), Meta#(MetaField#("ba", 2), Conc#(Bit#(2))), Meta#(MetaField#("ras_n", 3), Conc#(Bit#(1))), Meta#(MetaField#("cas_n", 4), Conc#(Bit#(1))), Meta#(MetaField#("we_n", 5), Conc#(Bit#(1))), Meta#(MetaField#("cs_n", 6), Conc#(Bit#(1))), Meta#(MetaField#("odt", 7), Conc#(Bit#(1))), Meta#(MetaField#("cke", 8), Conc#(Bit#(1))), Meta#(MetaField#("dm", 9), Conc#(Bit#(8))), Meta#(MetaField#("dqs", 10), Conc#(Inout#(Bit#(8)))), Meta#(MetaField#("dqs_n", 11), Conc#(Inout#(Bit#(8)))), Meta#(MetaField#("ck", 12), Conc#(Bit#(2))), Meta#(MetaField#("ck_n", 13), Conc#(Bit#(2)))))))} {Generic#(ML507_mig_33_wrapper::Mig33, Meta#(MetaData#("Mig33", "ML507_mig_33_wrapper", void, 1), Meta#(MetaConsNamed#("Mig33", 0, 4), Tuple4#(Meta#(MetaField#("clk0_tb", 0), Conc#(Clock)), Meta#(MetaField#("rst0_tb", 1), Conc#(Reset)), Meta#(MetaField#("ddr2", 2), Conc#(ML507_mig_33_wrapper::DDR2Wires)), Meta#(MetaField#("app", 3), Conc#(ML507_mig_33_wrapper::Mig33App))))))} {Generic#(ML507_mig_33_wrapper::Mig33App, Meta#(MetaData#("Mig33App", "ML507_mig_33_wrapper", void, 1), Meta#(MetaConsNamed#("Mig33App", 0, 3), Tuple3#(Meta#(MetaField#("af", 0), Conc#(function Action f(Bit#(3) x1, Bit#(31) x2))), Meta#(MetaField#("wdf", 1), Conc#(function Action f(Bit#(128) x1, Bit#(16) x2))), Meta#(MetaField#("data", 2), Conc#(Bit#(128)))))))} {Generic#(ML507_mig_33_wrapper::_ML507_mig_33_wrapper.Mig3351#(_n0), Meta#(MetaData#("_ML507_mig_33_wrapper.Mig3351", "ML507_mig_33_wrapper", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_ML507_mig_33_wrapper.Mig3351", 0, 22), Tuple22#(Meta#(MetaField#("clk0_tb", 0), Conc#(Clock)), Meta#(MetaField#("rst0_tb", 1), Conc#(Reset)), Meta#(MetaField#("ddr2_dq", 2), Conc#(Inout_#(64))), Meta#(MetaField#("ddr2_a", 3), Conc#(Bit#(13))), Meta#(MetaField#("ddr2_ba", 4), Conc#(Bit#(2))), Meta#(MetaField#("ddr2_ras_n", 5), Conc#(Bit#(1))), Meta#(MetaField#("ddr2_cas_n", 6), Conc#(Bit#(1))), Meta#(MetaField#("ddr2_we_n", 7), Conc#(Bit#(1))), Meta#(MetaField#("ddr2_cs_n", 8), Conc#(Bit#(1))), Meta#(MetaField#("ddr2_odt", 9), Conc#(Bit#(1))), Meta#(MetaField#("ddr2_cke", 10), Conc#(Bit#(1))), Meta#(MetaField#("ddr2_dm", 11), Conc#(Bit#(8))), Meta#(MetaField#("ddr2_dqs", 12), Conc#(Inout_#(8))), Meta#(MetaField#("ddr2_dqs_n", 13), Conc#(Inout_#(8))), Meta#(MetaField#("ddr2_ck", 14), Conc#(Bit#(2))), Meta#(MetaField#("ddr2_ck_n", 15), Conc#(Bit#(2))), Meta#(MetaField#("app_af", 16), Conc#(function ActionValue_#(_n0) f(Bit#(3) x1, Bit#(31) x2))), Meta#(MetaField#("RDY_app_af", 17), Conc#(Bit#(1))), Meta#(MetaField#("app_wdf", 18), Conc#(function ActionValue_#(_n0) f(Bit#(128) x1, Bit#(16) x2))), Meta#(MetaField#("RDY_app_wdf", 19), Conc#(Bit#(1))), Meta#(MetaField#("app_data", 20), Conc#(Bit#(128))), Meta#(MetaField#("RDY_app_data", 21), Conc#(Bit#(1)))))))} {Generic#(MMU_Cache::CTagState, Meta#(MetaData#("CTagState", "MMU_Cache", void, 2), Either#(Meta#(MetaConsAnon#("CTAG_EMPTY", 0, 0), void), Meta#(MetaConsAnon#("CTAG_CLEAN", 1, 0), void))))} {Generic#(MMU_Cache::Fabric_Write_Fields, Meta#(MetaData#("Fabric_Write_Fields", "MMU_Cache", void, 1), Meta#(MetaConsNamed#("Fabric_Write_Fields", 0, 8), Tuple8#(Meta#(MetaField#("fabric_addr", 0), Conc#(Fabric_Defs::Fabric_Addr)), Meta#(MetaField#("fabric_data", 1), Conc#(Fabric_Defs::Fabric_Data)), Meta#(MetaField#("fabric_user", 2), Conc#(Bit#(Fabric_Defs::Wd_W_User))), Meta#(MetaField#("fabric_strb", 3), Conc#(Fabric_Defs::Fabric_Strb)), Meta#(MetaField#("fabric_size", 4), Conc#(AXI4_Common_Types::AXI4_Size)), Meta#(MetaField#("fabric_2_data", 5), Conc#(Fabric_Defs::Fabric_Data)), Meta#(MetaField#("fabric_2_user", 6), Conc#(Bit#(Fabric_Defs::Wd_W_User))), Meta#(MetaField#("fabric_2_strb", 7), Conc#(Fabric_Defs::Fabric_Strb))))))} {Generic#(MMU_Cache::MMU_Cache_IFC#(mID), Meta#(MetaData#("MMU_Cache_IFC", "MMU_Cache", NumArg#(mID), 1), Meta#(MetaConsNamed#("MMU_Cache_IFC", 0, 16), Tuple16#(Meta#(MetaField#("set_verbosity", 0), Conc#(function Action f(Bit#(4) x1))), Meta#(MetaField#("server_reset", 1), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("req", 2), Conc#(function Action f(MMU_Cache_Common::CacheOp x1, Bit#(3) x2, Bool x3, Bit#(5) x4, ISA_Decls::Addr x5, Tuple2#(Bool, Bit#(ISA_Decls::XLEN_2)) x6, ISA_Decls::Priv_Mode x7, Bit#(1) x8, Bit#(1) x9, ISA_Decls::WordXL x10))), Meta#(MetaField#("commit", 3), Conc#(Action)), Meta#(MetaField#("valid", 4), Conc#(Bool)), Meta#(MetaField#("addr", 5), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("cword", 6), Conc#(Tuple2#(Bool, Cache_Decls_RV64_Sv39_8KB_2way::CWord))), Meta#(MetaField#("st_amo_val", 7), Conc#(Tuple2#(Bool, Cache_Decls_RV64_Sv39_8KB_2way::CWord))), Meta#(MetaField#("exc", 8), Conc#(Bool)), Meta#(MetaField#("exc_code", 9), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("server_flush", 10), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("tlb_flush", 11), Conc#(Action)), Meta#(MetaField#("mem_master", 12), Conc#(AXI4_Types::AXI4_Master#(mID, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User))), Meta#(MetaField#("events", 13), Conc#(Near_Mem_IFC::EventsCache)), Meta#(MetaField#("ma_ddr4_ready", 14), Conc#(Action)), Meta#(MetaField#("mv_status", 15), Conc#(Bit#(8)))))))} {Generic#(MMU_Cache::Module_State, Meta#(MetaData#("Module_State", "MMU_Cache", void, 17), Either#(Meta#(MetaConsAnon#("MODULE_PRERESET", 0, 0), void), Either#(Meta#(MetaConsAnon#("MODULE_RESETTING", 1, 0), void), Either#(Meta#(MetaConsAnon#("MODULE_READY", 2, 0), void), Either#(Meta#(MetaConsAnon#("MODULE_RUNNING", 3, 0), void), Either#(Meta#(MetaConsAnon#("MODULE_EXCEPTION_RSP", 4, 0), void), Either#(Meta#(MetaConsAnon#("PTW_START", 5, 0), void), Either#(Meta#(MetaConsAnon#("PTW_LEVEL_2", 6, 0), void), Either#(Meta#(MetaConsAnon#("PTW_LEVEL_1", 7, 0), void), Either#(Meta#(MetaConsAnon#("PTW_LEVEL_0", 8, 0), void), Either#(Meta#(MetaConsAnon#("CACHE_START_REFILL", 9, 0), void), Either#(Meta#(MetaConsAnon#("CACHE_REFILL", 10, 0), void), Either#(Meta#(MetaConsAnon#("CACHE_REREQ", 11, 0), void), Either#(Meta#(MetaConsAnon#("CACHE_ST_AMO_RSP", 12, 0), void), Either#(Meta#(MetaConsAnon#("IO_REQ", 13, 0), void), Either#(Meta#(MetaConsAnon#("IO_AWAITING_READ_RSP", 14, 0), void), Either#(Meta#(MetaConsAnon#("IO_READ_RSP", 15, 0), void), Meta#(MetaConsAnon#("IO_AWAITING_AMO_READ_RSP", 16, 0), void)))))))))))))))))))} {Generic#(MMU_Cache::Requestor, Meta#(MetaData#("Requestor", "MMU_Cache", void, 2), Either#(Meta#(MetaConsAnon#("REQUESTOR_RESET_IFC", 0, 0), void), Meta#(MetaConsAnon#("REQUESTOR_FLUSH_IFC", 1, 0), void))))} {Generic#(MMU_Cache::State_and_CTag, Meta#(MetaData#("State_and_CTag", "MMU_Cache", void, 1), Meta#(MetaConsNamed#("State_and_CTag", 0, 2), Tuple2#(Meta#(MetaField#("state", 0), Conc#(MMU_Cache::CTagState)), Meta#(MetaField#("ctag", 1), Conc#(Cache_Decls_RV64_Sv39_8KB_2way::CTag))))))} {Generic#(MMU_Cache_Common::CacheOp, Meta#(MetaData#("CacheOp", "MMU_Cache_Common", void, 3), Either#(Meta#(MetaConsAnon#("CACHE_LD", 0, 0), void), Either#(Meta#(MetaConsAnon#("CACHE_ST", 1, 0), void), Meta#(MetaConsAnon#("CACHE_AMO", 2, 0), void)))))} {Generic#(MMU_Cache_Common::L1_to_L2_Req, Meta#(MetaData#("L1_to_L2_Req", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("L1_to_L2_Req", 0, 4), Tuple4#(Meta#(MetaField#("addr", 0), Conc#(Bit#(64))), Meta#(MetaField#("from_state", 1), Conc#(MMU_Cache_Common::Meta_State)), Meta#(MetaField#("to_state", 2), Conc#(MMU_Cache_Common::Meta_State)), Meta#(MetaField#("can_up_to_E", 3), Conc#(Bool))))))} {Generic#(MMU_Cache_Common::L1_to_L2_Rsp, Meta#(MetaData#("L1_to_L2_Rsp", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("L1_to_L2_Rsp", 0, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(Bit#(64))), Meta#(MetaField#("to_state", 1), Conc#(MMU_Cache_Common::Meta_State)), Meta#(MetaField#("m_cline", 2), Conc#(Maybe#(Vector::Vector#(Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_CLine, MMU_Cache_Common::Cache_Entry))))))))} {Generic#(MMU_Cache_Common::L2_to_L1_Req, Meta#(MetaData#("L2_to_L1_Req", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("L2_to_L1_Req", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(Bit#(64))), Meta#(MetaField#("to_state", 1), Conc#(MMU_Cache_Common::Meta_State))))))} {Generic#(MMU_Cache_Common::L2_to_L1_Rsp, Meta#(MetaData#("L2_to_L1_Rsp", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("L2_to_L1_Rsp", 0, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(Bit#(64))), Meta#(MetaField#("to_state", 1), Conc#(MMU_Cache_Common::Meta_State)), Meta#(MetaField#("m_cline", 2), Conc#(Maybe#(Vector::Vector#(Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_CLine, MMU_Cache_Common::Cache_Entry))))))))} {Generic#(MMU_Cache_Common::MMU_Cache_Req, Meta#(MetaData#("MMU_Cache_Req", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("MMU_Cache_Req", 0, 11), Tuple11#(Meta#(MetaField#("op", 0), Conc#(MMU_Cache_Common::CacheOp)), Meta#(MetaField#("width_code", 1), Conc#(Bit#(3))), Meta#(MetaField#("is_unsigned", 2), Conc#(Bool)), Meta#(MetaField#("is_cap", 3), Conc#(Bool)), Meta#(MetaField#("va", 4), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("st_value", 5), Conc#(Tuple2#(Bool, Cache_Decls_RV64_Sv39_8KB_2way::CWord))), Meta#(MetaField#("amo_funct5", 6), Conc#(Bit#(5))), Meta#(MetaField#("priv", 7), Conc#(ISA_Decls::Priv_Mode)), Meta#(MetaField#("sstatus_SUM", 8), Conc#(Bit#(1))), Meta#(MetaField#("mstatus_MXR", 9), Conc#(Bit#(1))), Meta#(MetaField#("satp", 10), Conc#(ISA_Decls::WordXL))))))} {Generic#(MMU_Cache_Common::Meta_State, Meta#(MetaData#("Meta_State", "MMU_Cache_Common", void, 4), Either#(Meta#(MetaConsAnon#("META_INVALID", 0, 0), void), Either#(Meta#(MetaConsAnon#("META_SHARED", 1, 0), void), Either#(Meta#(MetaConsAnon#("META_EXCLUSIVE", 2, 0), void), Meta#(MetaConsAnon#("META_MODIFIED", 3, 0), void))))))} {Generic#(MMU_Cache_Common::Single_Req, Meta#(MetaData#("Single_Req", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("Single_Req", 0, 4), Tuple4#(Meta#(MetaField#("is_read", 0), Conc#(Bool)), Meta#(MetaField#("addr", 1), Conc#(Bit#(64))), Meta#(MetaField#("width_code", 2), Conc#(Bit#(3))), Meta#(MetaField#("data", 3), Conc#(MMU_Cache_Common::Cache_Entry))))))} {Generic#(MMU_Cache_Common::Single_Rsp, Meta#(MetaData#("Single_Rsp", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("Single_Rsp", 0, 2), Tuple2#(Meta#(MetaField#("ok", 0), Conc#(Bool)), Meta#(MetaField#("data", 1), Conc#(MMU_Cache_Common::Cache_Entry))))))} {Generic#(MMU_Cache_Common::VM_Xlate_Outcome, Meta#(MetaData#("VM_Xlate_Outcome", "MMU_Cache_Common", void, 3), Either#(Meta#(MetaConsAnon#("VM_XLATE_OK", 0, 0), void), Either#(Meta#(MetaConsAnon#("VM_XLATE_TLB_MISS", 1, 0), void), Meta#(MetaConsAnon#("VM_XLATE_EXCEPTION", 2, 0), void)))))} {Generic#(MMU_Cache_Common::VM_Xlate_Result, Meta#(MetaData#("VM_Xlate_Result", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("VM_Xlate_Result", 0, 8), Tuple8#(Meta#(MetaField#("outcome", 0), Conc#(MMU_Cache_Common::VM_Xlate_Outcome)), Meta#(MetaField#("allow_cap", 1), Conc#(Bool)), Meta#(MetaField#("pa", 2), Conc#(ISA_Decls::PA)), Meta#(MetaField#("exc_code", 3), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("pte_modified", 4), Conc#(Bool)), Meta#(MetaField#("pte", 5), Conc#(ISA_Decls::PTE)), Meta#(MetaField#("pte_level", 6), Conc#(Bit#(2))), Meta#(MetaField#("pte_pa", 7), Conc#(ISA_Decls::PA))))))} {Generic#(Map::Map#(ky, ix, vl, as), Meta#(MetaData#("Map", "Map", Tuple4#(StarArg#(ky), StarArg#(ix), StarArg#(vl), NumArg#(as)), 1), Meta#(MetaConsNamed#("Map", 0, 5), Tuple5#(Meta#(MetaField#("update", 0), Conc#(function Action f(Map::MapKeyIndex#(ky, ix) x1, vl x2))), Meta#(MetaField#("updateWithFunc", 1), Conc#(function Action f(Map::MapKeyIndex#(ky, ix) x1, vl x2, function vl x3(vl x1, vl x2), Bool x4))), Meta#(MetaField#("lookup", 2), Conc#(function Maybe#(vl) f(Map::MapKeyIndex#(ky, ix) x1))), Meta#(MetaField#("clear", 3), Conc#(Action)), Meta#(MetaField#("clearDone", 4), Conc#(Bool))))))} {Generic#(Map::MapKeyIndex#(ky, ix), Meta#(MetaData#("MapKeyIndex", "Map", Tuple2#(StarArg#(ky), StarArg#(ix)), 1), Meta#(MetaConsNamed#("MapKeyIndex", 0, 2), Tuple2#(Meta#(MetaField#("key", 0), Conc#(ky)), Meta#(MetaField#("index", 1), Conc#(ix))))))} {Generic#(Map::MapKeyIndexValue#(ky, ix, vl), Meta#(MetaData#("MapKeyIndexValue", "Map", Tuple3#(StarArg#(ky), StarArg#(ix), StarArg#(vl)), 1), Meta#(MetaConsNamed#("MapKeyIndexValue", 0, 3), Tuple3#(Meta#(MetaField#("key", 0), Conc#(ky)), Meta#(MetaField#("index", 1), Conc#(ix)), Meta#(MetaField#("value", 2), Conc#(vl))))))} {Generic#(Map::MapKeyValue#(ky, vl), Meta#(MetaData#("MapKeyValue", "Map", Tuple2#(StarArg#(ky), StarArg#(vl)), 1), Meta#(MetaConsNamed#("MapKeyValue", 0, 2), Tuple2#(Meta#(MetaField#("key", 0), Conc#(ky)), Meta#(MetaField#("value", 1), Conc#(vl))))))} {Generic#(Map::MapSplit#(ky, ix, vl, as), Meta#(MetaData#("MapSplit", "Map", Tuple4#(StarArg#(ky), StarArg#(ix), StarArg#(vl), NumArg#(as)), 1), Meta#(MetaConsNamed#("MapSplit", 0, 5), Tuple5#(Meta#(MetaField#("update", 0), Conc#(function Action f(Map::MapKeyIndex#(ky, ix) x1, vl x2))), Meta#(MetaField#("lookupStart", 1), Conc#(function Action f(Map::MapKeyIndex#(ky, ix) x1))), Meta#(MetaField#("lookupRead", 2), Conc#(Maybe#(vl))), Meta#(MetaField#("clear", 3), Conc#(Action)), Meta#(MetaField#("clearDone", 4), Conc#(Bool))))))} {Generic#(MasterSlave::Master#(req_t, rsp_t), Meta#(MetaData#("Master", "MasterSlave", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Master", 0, 2), Tuple2#(Meta#(MetaField#("req", 0), Conc#(SourceSink::Source#(req_t))), Meta#(MetaField#("rsp", 1), Conc#(SourceSink::Sink#(rsp_t)))))))} {Generic#(MasterSlave::Slave#(req_t, rsp_t), Meta#(MetaData#("Slave", "MasterSlave", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Slave", 0, 2), Tuple2#(Meta#(MetaField#("req", 0), Conc#(SourceSink::Sink#(req_t))), Meta#(MetaField#("rsp", 1), Conc#(SourceSink::Source#(rsp_t)))))))} {Generic#(MasterSlaveCHERI::CheckedGet#(t), Meta#(MetaData#("CheckedGet", "MasterSlaveCHERI", StarArg#(t), 1), Meta#(MetaConsNamed#("CheckedGet", 0, 3), Tuple3#(Meta#(MetaField#("canGet", 0), Conc#(Bool)), Meta#(MetaField#("peek", 1), Conc#(t)), Meta#(MetaField#("get", 2), Conc#(ActionValue#(t)))))))} {Generic#(MasterSlaveCHERI::CheckedPut#(t), Meta#(MetaData#("CheckedPut", "MasterSlaveCHERI", StarArg#(t), 1), Meta#(MetaConsNamed#("CheckedPut", 0, 2), Tuple2#(Meta#(MetaField#("canPut", 0), Conc#(Bool)), Meta#(MetaField#("put", 1), Conc#(function Action f(t x1)))))))} {Generic#(MasterSlaveCHERI::Forward#(req_t, rsp_t), Meta#(MetaData#("Forward", "MasterSlaveCHERI", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Forward", 0, 2), Tuple2#(Meta#(MetaField#("slave", 0), Conc#(MasterSlaveCHERI::Slave#(req_t, rsp_t))), Meta#(MetaField#("master", 1), Conc#(MasterSlaveCHERI::Master#(req_t, rsp_t)))))))} {Generic#(MasterSlaveCHERI::ForwardPutGet#(a), Meta#(MetaData#("ForwardPutGet", "MasterSlaveCHERI", StarArg#(a), 1), Meta#(MetaConsNamed#("ForwardPutGet", 0, 2), Tuple2#(Meta#(MetaField#("cput", 0), Conc#(MasterSlaveCHERI::CheckedPut#(a))), Meta#(MetaField#("cget", 1), Conc#(MasterSlaveCHERI::CheckedGet#(a)))))))} {Generic#(MasterSlaveCHERI::Master#(req_t, rsp_t), Meta#(MetaData#("Master", "MasterSlaveCHERI", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Master", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(MasterSlaveCHERI::CheckedGet#(req_t))), Meta#(MetaField#("response", 1), Conc#(MasterSlaveCHERI::CheckedPut#(rsp_t)))))))} {Generic#(MasterSlaveCHERI::Slave#(req_t, rsp_t), Meta#(MetaData#("Slave", "MasterSlaveCHERI", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Slave", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(MasterSlaveCHERI::CheckedPut#(req_t))), Meta#(MetaField#("response", 1), Conc#(MasterSlaveCHERI::CheckedGet#(rsp_t)))))))} {Generic#(Maybe#(a), Meta#(MetaData#("Maybe", "Prelude", StarArg#(a), 2), Either#(Meta#(MetaConsAnon#("Invalid", 0, 0), void), Meta#(MetaConsAnon#("Valid", 1, 1), Meta#(MetaField#("_1", 0), Conc#(a))))))} {Generic#(Mcp::IMcpUnitF#(b), Meta#(MetaData#("IMcpUnitF", "Mcp", StarArg#(b), 1), Meta#(MetaConsNamed#("IMcpUnitF", 0, 2), Tuple2#(Meta#(MetaField#("result", 0), Conc#(b)), Meta#(MetaField#("isValid", 1), Conc#(Bool))))))} {Generic#(Mcp::VReg#(n), Meta#(MetaData#("VReg", "Mcp", NumArg#(n), 1), Meta#(MetaConsNamed#("VReg", 0, 2), Tuple2#(Meta#(MetaField#("set", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("get", 1), Conc#(Bit#(n)))))))} {Generic#(MemBRAM::BRAM#(aw, dw), Meta#(MetaData#("BRAM", "MemBRAM", Tuple2#(NumArg#(aw), NumArg#(dw)), 1), Meta#(MetaConsNamed#("BRAM", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function Action f(Bit#(TDiv#(dw, 8)) x1, Bit#(aw) x2, Bit#(dw) x3))), Meta#(MetaField#("peek", 1), Conc#(Bit#(dw)))))))} {Generic#(MemBRAM::BRAM2#(a0w, d0w, a1w, d1w), Meta#(MetaData#("BRAM2", "MemBRAM", Tuple4#(NumArg#(a0w), NumArg#(d0w), NumArg#(a1w), NumArg#(d1w)), 1), Meta#(MetaConsNamed#("BRAM2", 0, 2), Tuple2#(Meta#(MetaField#("p0", 0), Conc#(MemBRAM::BRAM#(a0w, d0w))), Meta#(MetaField#("p1", 1), Conc#(MemBRAM::BRAM#(a1w, d1w)))))))} {Generic#(MemBRAM::_MemBRAM.BRAM287#(_n0, _n1, _n2, _n3, _n4, _n5, _n6), Meta#(MetaData#("_MemBRAM.BRAM287", "MemBRAM", Tuple7#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3), NumArg#(_n4), NumArg#(_n5), NumArg#(_n6)), 1), Meta#(MetaConsNamed#("_MemBRAM.BRAM287", 0, 4), Tuple4#(Meta#(MetaField#("p0_put", 0), Conc#(function ActionValue_#(_n6) f(Bit#(_n5) x1, Bit#(_n4) x2, Bit#(_n3) x3))), Meta#(MetaField#("p0_peek", 1), Conc#(Bit#(_n3))), Meta#(MetaField#("p1_put", 2), Conc#(function ActionValue_#(_n6) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("p1_peek", 3), Conc#(Bit#(_n0)))))))} {Generic#(MemBRAM::_MemBRAM.BRAM60#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_MemBRAM.BRAM60", "MemBRAM", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_MemBRAM.BRAM60", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("peek", 1), Conc#(Bit#(_n0)))))))} {Generic#(MemTypes::BitPO#(n), Meta#(MetaData#("BitPO", "MemTypes", NumArg#(n), 1), Meta#(MetaConsNamed#("BitPO", 0, 1), Meta#(MetaField#("val", 0), Conc#(Bit#(n))))))} {Generic#(MemTypes::MemReq#(addr_t, data_t), Meta#(MetaData#("MemReq", "MemTypes", Tuple2#(StarArg#(addr_t), StarArg#(data_t)), 2), Either#(Meta#(MetaConsNamed#("ReadReq", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(addr_t)), Meta#(MetaField#("numBytes", 1), Conc#(Bit#(TMax#(1, TLog#(TAdd#(1, TLog#(TDiv#(_v100, 8)))))))))), Meta#(MetaConsNamed#("WriteReq", 1, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(addr_t)), Meta#(MetaField#("byteEnable", 1), Conc#(Bit#(TDiv#(_v100, 8)))), Meta#(MetaField#("data", 2), Conc#(data_t)))))))   provisos (Bits#(data_t, _v100))} {Generic#(MemTypes::MemReq_$ReadReq#(addr_t, data_t), Meta#(MetaData#("MemReq_$ReadReq", "MemTypes", Tuple2#(StarArg#(addr_t), StarArg#(data_t)), 1), Meta#(MetaConsNamed#("MemReq_$ReadReq", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(addr_t)), Meta#(MetaField#("numBytes", 1), Conc#(Bit#(TMax#(1, TLog#(TAdd#(1, TLog#(TDiv#(_v100, 8))))))))))))   provisos (Bits#(data_t, _v100))} {Generic#(MemTypes::MemReq_$WriteReq#(addr_t, data_t), Meta#(MetaData#("MemReq_$WriteReq", "MemTypes", Tuple2#(StarArg#(addr_t), StarArg#(data_t)), 1), Meta#(MetaConsNamed#("MemReq_$WriteReq", 0, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(addr_t)), Meta#(MetaField#("byteEnable", 1), Conc#(Bit#(TDiv#(_v100, 8)))), Meta#(MetaField#("data", 2), Conc#(data_t))))))   provisos (Bits#(data_t, _v100))} {Generic#(MemTypes::MemRsp#(data_t), Meta#(MetaData#("MemRsp", "MemTypes", StarArg#(data_t), 3), Either#(Meta#(MetaConsAnon#("ReadRsp", 0, 1), Meta#(MetaField#("_1", 0), Conc#(data_t))), Either#(Meta#(MetaConsAnon#("WriteRsp", 1, 0), void), Meta#(MetaConsAnon#("ErrorRsp", 2, 0), void)))))} {Generic#(MemTypesCHERI::BytesPerFlit, Meta#(MetaData#("BytesPerFlit", "MemTypesCHERI", void, 8), Either#(Meta#(MetaConsAnon#("BYTE_1", 0, 0), void), Either#(Meta#(MetaConsAnon#("BYTE_2", 1, 0), void), Either#(Meta#(MetaConsAnon#("BYTE_4", 2, 0), void), Either#(Meta#(MetaConsAnon#("BYTE_8", 3, 0), void), Either#(Meta#(MetaConsAnon#("BYTE_16", 4, 0), void), Either#(Meta#(MetaConsAnon#("BYTE_32", 5, 0), void), Either#(Meta#(MetaConsAnon#("BYTE_64", 6, 0), void), Meta#(MetaConsAnon#("BYTE_128", 7, 0), void))))))))))} {Generic#(MemTypesCHERI::CacheInst, Meta#(MetaData#("CacheInst", "MemTypesCHERI", void, 9), Either#(Meta#(MetaConsAnon#("CacheInvalidate", 0, 0), void), Either#(Meta#(MetaConsAnon#("CacheInvalidateWriteback", 1, 0), void), Either#(Meta#(MetaConsAnon#("CacheWriteback", 2, 0), void), Either#(Meta#(MetaConsAnon#("CacheSync", 3, 0), void), Either#(Meta#(MetaConsAnon#("Read", 4, 0), void), Either#(Meta#(MetaConsAnon#("Write", 5, 0), void), Either#(Meta#(MetaConsAnon#("StoreConditional", 6, 0), void), Either#(Meta#(MetaConsAnon#("CacheLoadTag", 7, 0), void), Meta#(MetaConsAnon#("CacheNop", 8, 0), void)))))))))))} {Generic#(MemTypesCHERI::CacheOperation, Meta#(MetaData#("CacheOperation", "MemTypesCHERI", void, 1), Meta#(MetaConsNamed#("CacheOperation", 0, 3), Tuple3#(Meta#(MetaField#("inst", 0), Conc#(MemTypesCHERI::CacheInst)), Meta#(MetaField#("cache", 1), Conc#(MemTypesCHERI::WhichCache)), Meta#(MetaField#("indexed", 2), Conc#(Bool))))))} {Generic#(MemTypesCHERI::CheriCapAddress, Meta#(MetaData#("CheriCapAddress", "MemTypesCHERI", void, 1), Meta#(MetaConsNamed#("CheriCapAddress", 0, 2), Tuple2#(Meta#(MetaField#("capNumber", 0), Conc#(MemTypesCHERI::CapNumber)), Meta#(MetaField#("offset", 1), Conc#(Bit#(TLog#(MemTypesCHERI::CapBytes))))))))} {Generic#(MemTypesCHERI::Data#(width), Meta#(MetaData#("Data", "MemTypesCHERI", NumArg#(width), 1), Meta#(MetaConsNamed#("Data", 0, 2), Tuple2#(Meta#(MetaField#("cap", 0), Conc#(MemTypesCHERI::CapTags)), Meta#(MetaField#("data", 1), Conc#(Bit#(width)))))))} {Generic#(MemTypesCHERI::DataMinusCapTags#(width), Meta#(MetaData#("DataMinusCapTags", "MemTypesCHERI", NumArg#(width), 1), Meta#(MetaConsNamed#("DataMinusCapTags", 0, 1), Meta#(MetaField#("data", 0), Conc#(Bit#(width))))))} {Generic#(MemTypesCHERI::Error, Meta#(MetaData#("Error", "MemTypesCHERI", void, 3), Either#(Meta#(MetaConsAnon#("NoError", 0, 0), void), Either#(Meta#(MetaConsAnon#("BusError", 1, 0), void), Meta#(MetaConsAnon#("SlaveError", 2, 0), void)))))} {Generic#(MemTypesCHERI::MemoryRequest#(addr_t, masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryRequest", "MemTypesCHERI", Tuple4#(StarArg#(addr_t), StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 1), Meta#(MetaConsNamed#("MemoryRequest", 0, 5), Tuple5#(Meta#(MetaField#("addr", 0), Conc#(addr_t)), Meta#(MetaField#("masterID", 1), Conc#(masterid_t)), Meta#(MetaField#("transactionID", 2), Conc#(transactionid_t)), Meta#(MetaField#("cancelled", 3), Conc#(Bool)), Meta#(MetaField#("operation", 4), Conc#(MemTypesCHERI::MemoryRequest_$operation#(addr_t, masterid_t, transactionid_t, data_width)))))))} {Generic#(MemTypesCHERI::MemoryRequest_$operation#(addr_t, masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryRequest_$operation", "MemTypesCHERI", Tuple4#(StarArg#(addr_t), StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 3), Either#(Meta#(MetaConsNamed#("Read", 0, 5), Tuple5#(Meta#(MetaField#("uncached", 0), Conc#(Bool)), Meta#(MetaField#("linked", 1), Conc#(Bool)), Meta#(MetaField#("tagOnlyRead", 2), Conc#(Bool)), Meta#(MetaField#("noOfFlits", 3), Conc#(MemTypesCHERI::Flit)), Meta#(MetaField#("bytesPerFlit", 4), Conc#(MemTypesCHERI::BytesPerFlit)))), Either#(Meta#(MetaConsNamed#("Write", 1, 7), Tuple7#(Meta#(MetaField#("last", 0), Conc#(Bool)), Meta#(MetaField#("uncached", 1), Conc#(Bool)), Meta#(MetaField#("conditional", 2), Conc#(Bool)), Meta#(MetaField#("byteEnable", 3), Conc#(Vector::Vector#(TDiv#(data_width, 8), Bool))), Meta#(MetaField#("bitEnable", 4), Conc#(Bit#(8))), Meta#(MetaField#("data", 5), Conc#(MemTypesCHERI::Data#(data_width))), Meta#(MetaField#("length", 6), Conc#(Bit#(8))))), Meta#(MetaConsAnon#("CacheOp", 2, 1), Meta#(MetaField#("_1", 0), Conc#(MemTypesCHERI::CacheOperation)))))))} {Generic#(MemTypesCHERI::MemoryRequest_$operation_$Read#(addr_t, masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryRequest_$operation_$Read", "MemTypesCHERI", Tuple4#(StarArg#(addr_t), StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 1), Meta#(MetaConsNamed#("MemoryRequest_$operation_$Read", 0, 5), Tuple5#(Meta#(MetaField#("uncached", 0), Conc#(Bool)), Meta#(MetaField#("linked", 1), Conc#(Bool)), Meta#(MetaField#("tagOnlyRead", 2), Conc#(Bool)), Meta#(MetaField#("noOfFlits", 3), Conc#(MemTypesCHERI::Flit)), Meta#(MetaField#("bytesPerFlit", 4), Conc#(MemTypesCHERI::BytesPerFlit))))))} {Generic#(MemTypesCHERI::MemoryRequest_$operation_$Write#(addr_t, masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryRequest_$operation_$Write", "MemTypesCHERI", Tuple4#(StarArg#(addr_t), StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 1), Meta#(MetaConsNamed#("MemoryRequest_$operation_$Write", 0, 7), Tuple7#(Meta#(MetaField#("last", 0), Conc#(Bool)), Meta#(MetaField#("uncached", 1), Conc#(Bool)), Meta#(MetaField#("conditional", 2), Conc#(Bool)), Meta#(MetaField#("byteEnable", 3), Conc#(Vector::Vector#(TDiv#(data_width, 8), Bool))), Meta#(MetaField#("bitEnable", 4), Conc#(Bit#(8))), Meta#(MetaField#("data", 5), Conc#(MemTypesCHERI::Data#(data_width))), Meta#(MetaField#("length", 6), Conc#(Bit#(8)))))))} {Generic#(MemTypesCHERI::MemoryResponse#(masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryResponse", "MemTypesCHERI", Tuple3#(StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 1), Meta#(MetaConsNamed#("MemoryResponse", 0, 5), Tuple5#(Meta#(MetaField#("masterID", 0), Conc#(masterid_t)), Meta#(MetaField#("transactionID", 1), Conc#(transactionid_t)), Meta#(MetaField#("error", 2), Conc#(MemTypesCHERI::Error)), Meta#(MetaField#("operation", 3), Conc#(MemTypesCHERI::MemoryResponse_$operation#(masterid_t, transactionid_t, data_width))), Meta#(MetaField#("data", 4), Conc#(MemTypesCHERI::Data#(data_width)))))))} {Generic#(MemTypesCHERI::MemoryResponse_$operation#(masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryResponse_$operation", "MemTypesCHERI", Tuple3#(StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 3), Either#(Meta#(MetaConsNamed#("Read", 0, 2), Tuple2#(Meta#(MetaField#("last", 0), Conc#(Bool)), Meta#(MetaField#("tagOnlyRead", 1), Conc#(Bool)))), Either#(Meta#(MetaConsAnon#("Write", 1, 0), void), Meta#(MetaConsAnon#("SC", 2, 1), Meta#(MetaField#("_1", 0), Conc#(Bool)))))))} {Generic#(MemTypesCHERI::MemoryResponse_$operation_$Read#(masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryResponse_$operation_$Read", "MemTypesCHERI", Tuple3#(StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 1), Meta#(MetaConsNamed#("MemoryResponse_$operation_$Read", 0, 2), Tuple2#(Meta#(MetaField#("last", 0), Conc#(Bool)), Meta#(MetaField#("tagOnlyRead", 1), Conc#(Bool))))))} {Generic#(MemTypesCHERI::PhyBitAddress#(width, bytePerLine), Meta#(MetaData#("PhyBitAddress", "MemTypesCHERI", Tuple2#(NumArg#(width), NumArg#(bytePerLine)), 1), Meta#(MetaConsNamed#("PhyBitAddress", 0, 2), Tuple2#(Meta#(MetaField#("byteAddr", 0), Conc#(MemTypesCHERI::PhyByteAddress#(width, bytePerLine))), Meta#(MetaField#("bitOffset", 1), Conc#(Bit#(3)))))))} {Generic#(MemTypesCHERI::PhyByteAddress#(width, bytePerLine), Meta#(MetaData#("PhyByteAddress", "MemTypesCHERI", Tuple2#(NumArg#(width), NumArg#(bytePerLine)), 1), Meta#(MetaConsNamed#("PhyByteAddress", 0, 2), Tuple2#(Meta#(MetaField#("lineNumber", 0), Conc#(MemTypesCHERI::PhyLineNumber#(width, bytePerLine))), Meta#(MetaField#("byteOffset", 1), Conc#(MemTypesCHERI::PhyByteOffset#(bytePerLine)))))))} {Generic#(MemTypesCHERI::ReqId, Meta#(MetaData#("ReqId", "MemTypesCHERI", void, 1), Meta#(MetaConsNamed#("ReqId", 0, 2), Tuple2#(Meta#(MetaField#("masterID", 0), Conc#(MemTypesCHERI::CheriMasterID)), Meta#(MetaField#("transactionID", 1), Conc#(MemTypesCHERI::CheriTransactionID))))))} {Generic#(MemTypesCHERI::WhichCache, Meta#(MetaData#("WhichCache", "MemTypesCHERI", void, 5), Either#(Meta#(MetaConsAnon#("ICache", 0, 0), void), Either#(Meta#(MetaConsAnon#("DCache", 1, 0), void), Either#(Meta#(MetaConsAnon#("None", 2, 0), void), Either#(Meta#(MetaConsAnon#("L2", 3, 0), void), Meta#(MetaConsAnon#("TCache", 4, 0), void)))))))} {Generic#(Memory::MemoryRequest#(a, d), Meta#(MetaData#("MemoryRequest", "Memory", Tuple2#(NumArg#(a), NumArg#(d)), 1), Meta#(MetaConsNamed#("MemoryRequest", 0, 4), Tuple4#(Meta#(MetaField#("write", 0), Conc#(Bool)), Meta#(MetaField#("byteen", 1), Conc#(Bit#(TDiv#(d, 8)))), Meta#(MetaField#("address", 2), Conc#(Bit#(a))), Meta#(MetaField#("data", 3), Conc#(Bit#(d)))))))} {Generic#(Memory::MemoryResponse#(d), Meta#(MetaData#("MemoryResponse", "Memory", NumArg#(d), 1), Meta#(MetaConsNamed#("MemoryResponse", 0, 1), Meta#(MetaField#("data", 0), Conc#(Bit#(d))))))} {Generic#(Meta#(m, r), Meta#(MetaData#("Meta", "Prelude", Tuple2#(StarArg#(m), StarArg#(r)), 1), Meta#(MetaConsAnon#("Meta", 0, 1), Meta#(MetaField#("_1", 0), Conc#(r)))))} {Generic#(MetaConsAnon#(name, idx, nfields), Meta#(MetaData#("MetaConsAnon", "Prelude", Tuple3#(StrArg#(name), NumArg#(idx), NumArg#(nfields)), 1), Meta#(MetaConsAnon#("MetaConsAnon", 0, 0), void)))} {Generic#(MetaConsNamed#(name, idx, nfields), Meta#(MetaData#("MetaConsNamed", "Prelude", Tuple3#(StrArg#(name), NumArg#(idx), NumArg#(nfields)), 1), Meta#(MetaConsAnon#("MetaConsNamed", 0, 0), void)))} {Generic#(MetaData#(name, pkg, tyargs, ncons), Meta#(MetaData#("MetaData", "Prelude", Tuple4#(StrArg#(name), StrArg#(pkg), StarArg#(tyargs), NumArg#(ncons)), 1), Meta#(MetaConsAnon#("MetaData", 0, 0), void)))} {Generic#(MetaField#(name, idx), Meta#(MetaData#("MetaField", "Prelude", Tuple2#(StrArg#(name), NumArg#(idx)), 1), Meta#(MetaConsAnon#("MetaField", 0, 0), void)))} {Generic#(Module#(_v100), ConcPrim#(Module#(_v100)))} {Generic#(ModuleCollect::IWithCollection#(a, i), Meta#(MetaData#("IWithCollection", "ModuleCollect", Tuple2#(StarArg#(a), StarArg#(i)), 1), Meta#(MetaConsNamed#("IWithCollection", 0, 2), Tuple2#(Meta#(MetaField#("device", 0), Conc#(i)), Meta#(MetaField#("collection", 1), Conc#(List#(a)))))))} {Generic#(ModuleContext::ClockContextP#(n), Meta#(MetaData#("ClockContextP", "ModuleContext", NumArg#(n), 1), Meta#(MetaConsNamed#("ClockContextP", 0, 2), Tuple2#(Meta#(MetaField#("clks", 0), Conc#(Vector::Vector#(n, Clock))), Meta#(MetaField#("rsts", 1), Conc#(Vector::Vector#(n, Reset)))))))} {Generic#(ModuleContextCore::ModuleContext#(c, i), Meta#(MetaData#("ModuleContext", "ModuleContextCore", Tuple2#(StarArg#(c), StarArg#(i)), 1), Meta#(MetaConsAnon#("M", 0, 1), Meta#(MetaField#("_1", 0), Conc#(module f#(c x1)(Tuple2#(c, i)))))))} {Generic#(Monitored::Monitored#(originalIfc, events_t), Meta#(MetaData#("Monitored", "Monitored", Tuple2#(StarArg#(originalIfc), StarArg#(events_t)), 1), Meta#(MetaConsNamed#("Monitored", 0, 2), Tuple2#(Meta#(MetaField#("ifc", 0), Conc#(originalIfc)), Meta#(MetaField#("events", 1), Conc#(ReadOnly#(events_t)))))))} {Generic#(MultiLevelTagLookup::CheriTagRequest, Meta#(MetaData#("CheriTagRequest", "MultiLevelTagLookup", void, 1), Meta#(MetaConsNamed#("CheriTagRequest", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(MemTypesCHERI::CheriPhyAddr)), Meta#(MetaField#("operation", 1), Conc#(MultiLevelTagLookup::CheriTagRequest_$operation))))))} {Generic#(MultiLevelTagLookup::CheriTagRequest_$operation, Meta#(MetaData#("CheriTagRequest_$operation", "MultiLevelTagLookup", void, 2), Either#(Meta#(MetaConsAnon#("Read", 0, 0), void), Meta#(MetaConsAnon#("Write", 1, 1), Meta#(MetaField#("_1", 0), Conc#(MultiLevelTagLookup::CheriTagWrite))))))} {Generic#(MultiLevelTagLookup::CheriTagResponse, Meta#(MetaData#("CheriTagResponse", "MultiLevelTagLookup", void, 1), Meta#(MetaConsNamed#("CheriTagResponse", 0, 1), Meta#(MetaField#("tags", 0), Conc#(MultiLevelTagLookup::CheriTagResponse_$tags)))))} {Generic#(MultiLevelTagLookup::CheriTagResponse_$tags, Meta#(MetaData#("CheriTagResponse_$tags", "MultiLevelTagLookup", void, 2), Either#(Meta#(MetaConsAnon#("Uncovered", 0, 0), void), Meta#(MetaConsAnon#("Covered", 1, 1), Meta#(MetaField#("_1", 0), Conc#(MultiLevelTagLookup::LineTags))))))} {Generic#(MultiLevelTagLookup::CheriTagWrite, Meta#(MetaData#("CheriTagWrite", "MultiLevelTagLookup", void, 1), Meta#(MetaConsNamed#("CheriTagWrite", 0, 2), Tuple2#(Meta#(MetaField#("tags", 0), Conc#(MultiLevelTagLookup::LineTags)), Meta#(MetaField#("writeEnable", 1), Conc#(MultiLevelTagLookup::LineTags))))))} {Generic#(MultiLevelTagLookup::State, Meta#(MetaData#("State", "MultiLevelTagLookup", void, 6), Either#(Meta#(MetaConsAnon#("Init", 0, 0), void), Either#(Meta#(MetaConsAnon#("Idle", 1, 0), void), Either#(Meta#(MetaConsAnon#("ReadTag", 2, 0), void), Either#(Meta#(MetaConsAnon#("SetTag", 3, 0), void), Either#(Meta#(MetaConsAnon#("ClearTag", 4, 0), void), Meta#(MetaConsAnon#("FoldZeroes", 5, 0), void))))))))} {Generic#(MultiLevelTagLookup::TableEntry, Meta#(MetaData#("TableEntry", "MultiLevelTagLookup", void, 2), Either#(Meta#(MetaConsAnon#("Node", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bool))), Meta#(MetaConsAnon#("Leaf", 1, 1), Meta#(MetaField#("_1", 0), Conc#(MultiLevelTagLookup::LineTags))))))} {Generic#(MultiLevelTagLookup::TableLvl, Meta#(MetaData#("TableLvl", "MultiLevelTagLookup", void, 1), Meta#(MetaConsNamed#("TableLvl", 0, 5), Tuple5#(Meta#(MetaField#("startAddr", 0), Conc#(MemTypesCHERI::CheriPhyAddr)), Meta#(MetaField#("size", 1), Conc#(Integer)), Meta#(MetaField#("shiftAmnt", 2), Conc#(Integer)), Meta#(MetaField#("groupFactor", 3), Conc#(Integer)), Meta#(MetaField#("groupFactorLog", 4), Conc#(Integer))))))} {Generic#(MultiLevelTagLookup::TagLookupIfc, Meta#(MetaData#("TagLookupIfc", "MultiLevelTagLookup", void, 1), Meta#(MetaConsNamed#("TagLookupIfc", 0, 3), Tuple3#(Meta#(MetaField#("cache", 0), Conc#(MasterSlaveCHERI::Slave#(MultiLevelTagLookup::CheriTagRequest, MultiLevelTagLookup::CheriTagResponse))), Meta#(MetaField#("memory", 1), Conc#(MasterSlaveCHERI::Master#(MemTypesCHERI::CheriMemRequest, MemTypesCHERI::CheriMemResponse))), Meta#(MetaField#("events", 2), Conc#(CacheCore::EventsCacheCore))))))} {Generic#(Name__, ConcPrim#(Name__))} {Generic#(Near_Mem_Caches::State, Meta#(MetaData#("State", "Near_Mem_Caches", void, 3), Either#(Meta#(MetaConsAnon#("STATE_RESET", 0, 0), void), Either#(Meta#(MetaConsAnon#("STATE_RESETTING", 1, 0), void), Meta#(MetaConsAnon#("STATE_READY", 2, 0), void)))))} {Generic#(Near_Mem_IFC::DMem_IFC, Meta#(MetaData#("DMem_IFC", "Near_Mem_IFC", void, 1), Meta#(MetaConsNamed#("DMem_IFC", 0, 8), Tuple8#(Meta#(MetaField#("req", 0), Conc#(function Action f(MMU_Cache_Common::CacheOp x1, Bit#(3) x2, Bool x3, Bit#(5) x4, ISA_Decls::Addr x5, Tuple2#(Bool, Bit#(ISA_Decls::XLEN_2)) x6, ISA_Decls::Priv_Mode x7, Bit#(1) x8, Bit#(1) x9, ISA_Decls::WordXL x10))), Meta#(MetaField#("commit", 1), Conc#(Action)), Meta#(MetaField#("valid", 2), Conc#(Bool)), Meta#(MetaField#("word128", 3), Conc#(Tuple2#(Bool, Bit#(ISA_Decls::XLEN_2)))), Meta#(MetaField#("st_amo_val", 4), Conc#(Bit#(ISA_Decls::XLEN_2))), Meta#(MetaField#("exc", 5), Conc#(Bool)), Meta#(MetaField#("exc_code", 6), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("events", 7), Conc#(StatCounters::EventsL1D))))))} {Generic#(Near_Mem_IFC::EventsCache, Meta#(MetaData#("EventsCache", "Near_Mem_IFC", void, 1), Meta#(MetaConsNamed#("EventsCache", 0, 14), Tuple14#(Meta#(MetaField#("evt_LD", 0), Conc#(Bool)), Meta#(MetaField#("evt_LD_MISS", 1), Conc#(Bool)), Meta#(MetaField#("evt_LD_MISS_LAT", 2), Conc#(Bool)), Meta#(MetaField#("evt_ST", 3), Conc#(Bool)), Meta#(MetaField#("evt_ST_MISS", 4), Conc#(Bool)), Meta#(MetaField#("evt_ST_MISS_LAT", 5), Conc#(Bool)), Meta#(MetaField#("evt_AMO", 6), Conc#(Bool)), Meta#(MetaField#("evt_AMO_MISS", 7), Conc#(Bool)), Meta#(MetaField#("evt_AMO_MISS_LAT", 8), Conc#(Bool)), Meta#(MetaField#("evt_TLB", 9), Conc#(Bool)), Meta#(MetaField#("evt_TLB_MISS", 10), Conc#(Bool)), Meta#(MetaField#("evt_TLB_MISS_LAT", 11), Conc#(Bool)), Meta#(MetaField#("evt_TLB_FLUSH", 12), Conc#(Bool)), Meta#(MetaField#("evt_EVICT", 13), Conc#(Bool))))))} {Generic#(Near_Mem_IFC::IMem_IFC, Meta#(MetaData#("IMem_IFC", "Near_Mem_IFC", void, 1), Meta#(MetaConsNamed#("IMem_IFC", 0, 10), Tuple10#(Meta#(MetaField#("req", 0), Conc#(function Action f(Bit#(3) x1, ISA_Decls::WordXL x2, ISA_Decls::Priv_Mode x3, Bit#(1) x4, Bit#(1) x5, ISA_Decls::WordXL x6))), Meta#(MetaField#("commit", 1), Conc#(Action)), Meta#(MetaField#("valid", 2), Conc#(Bool)), Meta#(MetaField#("is_i32_not_i16", 3), Conc#(Bool)), Meta#(MetaField#("pc", 4), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("instr", 5), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("exc", 6), Conc#(Bool)), Meta#(MetaField#("exc_code", 7), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("tval", 8), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("events", 9), Conc#(StatCounters::EventsL1I))))))} {Generic#(Near_Mem_IFC::Near_Mem_IFC, Meta#(MetaData#("Near_Mem_IFC", "Near_Mem_IFC", void, 1), Meta#(MetaConsNamed#("Near_Mem_IFC", 0, 11), Tuple11#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("imem", 1), Conc#(Near_Mem_IFC::IMem_IFC)), Meta#(MetaField#("imem_master", 2), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User))), Meta#(MetaField#("dmem", 3), Conc#(Near_Mem_IFC::DMem_IFC)), Meta#(MetaField#("mem_master", 4), Conc#(Fabric_Defs::Near_Mem_Fabric_IFC)), Meta#(MetaField#("server_fence_i", 5), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("server_fence", 6), Conc#(ClientServer::Server#(ISA_Decls::Fence_Ordering, ISA_Decls::Token))), Meta#(MetaField#("sfence_vma_server", 7), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("dma_server", 8), Conc#(AXI4_Types::AXI4_Slave#(Near_Mem_IFC::Wd_Id_Dma, Near_Mem_IFC::Wd_Addr_Dma, Near_Mem_IFC::Wd_Data_Dma, Near_Mem_IFC::Wd_AW_User_Dma, Near_Mem_IFC::Wd_W_User_Dma, Near_Mem_IFC::Wd_B_User_Dma, Near_Mem_IFC::Wd_AR_User_Dma, Near_Mem_IFC::Wd_R_User_Dma))), Meta#(MetaField#("ma_ddr4_ready", 9), Conc#(Action)), Meta#(MetaField#("mv_status", 10), Conc#(Bit#(8)))))))} {Generic#(Near_Mem_IO_AXI4::Module_State, Meta#(MetaData#("Module_State", "Near_Mem_IO_AXI4", void, 2), Either#(Meta#(MetaConsAnon#("MODULE_STATE_START", 0, 0), void), Meta#(MetaConsAnon#("MODULE_STATE_READY", 1, 0), void))))} {Generic#(Near_Mem_IO_AXI4::Near_Mem_IO_AXI4_IFC, Meta#(MetaData#("Near_Mem_IO_AXI4_IFC", "Near_Mem_IO_AXI4", void, 1), Meta#(MetaConsNamed#("Near_Mem_IO_AXI4_IFC", 0, 5), Tuple5#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(Bit#(0), Bit#(0)))), Meta#(MetaField#("set_addr_map", 1), Conc#(function Action f(Bit#(64) x1, Bit#(64) x2))), Meta#(MetaField#("axi4_slave", 2), Conc#(AXI4_Types::AXI4_Slave#(Fabric_Defs::Wd_SId_2x3, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, 0, 0, 0, 0, 0))), Meta#(MetaField#("get_timer_interrupt_req", 3), Conc#(GetPut::Get#(Bool))), Meta#(MetaField#("get_sw_interrupt_req", 4), Conc#(GetPut::Get#(Bool)))))))} {Generic#(NullCrossingFIFOF::CrossingFIFOF#(a), Meta#(MetaData#("CrossingFIFOF", "NullCrossingFIFOF", StarArg#(a), 1), Meta#(MetaConsNamed#("CrossingFIFOF", 0, 2), Tuple2#(Meta#(MetaField#("fifo", 0), Conc#(FIFOF::FIFOF#(a))), Meta#(MetaField#("allowCclock", 1), Conc#(Bool))))))} {Generic#(NullCrossingFIFOF::SceMiCrossingReg#(a), Meta#(MetaData#("SceMiCrossingReg", "NullCrossingFIFOF", StarArg#(a), 1), Meta#(MetaConsNamed#("SceMiCrossingReg", 0, 4), Tuple4#(Meta#(MetaField#("regifc", 0), Conc#(Reg#(a))), Meta#(MetaField#("writtenPulse", 1), Conc#(Bool)), Meta#(MetaField#("readPulse", 2), Conc#(Bool)), Meta#(MetaField#("allowCclock", 3), Conc#(Bool))))))} {Generic#(NumArg#(i), Meta#(MetaData#("NumArg", "Prelude", NumArg#(i), 1), Meta#(MetaConsAnon#("NumArg", 0, 0), void)))} {Generic#(NumberTypes::BuffIndex#(sz, ln), Meta#(MetaData#("BuffIndex", "NumberTypes", Tuple2#(NumArg#(sz), NumArg#(ln)), 1), Meta#(MetaConsNamed#("BuffIndex", 0, 1), Meta#(MetaField#("bix", 0), Conc#(UInt#(sz))))))} {Generic#(NumberTypes::WrapNumber#(sz), Meta#(MetaData#("WrapNumber", "NumberTypes", NumArg#(sz), 1), Meta#(MetaConsNamed#("WrapNumber", 0, 1), Meta#(MetaField#("n", 0), Conc#(UInt#(sz))))))} {Generic#(OInt::OInt#(n), Meta#(MetaData#("OInt", "OInt", NumArg#(n), 1), Meta#(MetaConsAnon#("O", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Vector::Vector#(n, Bool))))))} {Generic#(OVLAssertions::AssertFifoTest_IFC#(a, b), Meta#(MetaData#("AssertFifoTest_IFC", "OVLAssertions", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("AssertFifoTest_IFC", 0, 2), Tuple2#(Meta#(MetaField#("push", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("pop", 1), Conc#(function Action f(b x1)))))))} {Generic#(OVLAssertions::AssertQuiescentTest_IFC#(a), Meta#(MetaData#("AssertQuiescentTest_IFC", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("AssertQuiescentTest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("sample", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("state", 1), Conc#(function Action f(a x1))), Meta#(MetaField#("check", 2), Conc#(function Action f(a x1)))))))} {Generic#(OVLAssertions::AssertSampleTest_IFC#(a), Meta#(MetaData#("AssertSampleTest_IFC", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("AssertSampleTest_IFC", 0, 2), Tuple2#(Meta#(MetaField#("sample", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("test", 1), Conc#(function Action f(a x1)))))))} {Generic#(OVLAssertions::AssertStartStopTest_IFC#(a), Meta#(MetaData#("AssertStartStopTest_IFC", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("AssertStartStopTest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("stop", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("test", 2), Conc#(function Action f(a x1)))))))} {Generic#(OVLAssertions::AssertStartTest_IFC#(a), Meta#(MetaData#("AssertStartTest_IFC", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("AssertStartTest_IFC", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("test", 1), Conc#(function Action f(a x1)))))))} {Generic#(OVLAssertions::AssertTest_IFC#(a), Meta#(MetaData#("AssertTest_IFC", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("AssertTest_IFC", 0, 1), Meta#(MetaField#("test", 0), Conc#(function Action f(a x1))))))} {Generic#(OVLAssertions::AssertTransitionTest_IFC#(a), Meta#(MetaData#("AssertTransitionTest_IFC", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("AssertTransitionTest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("test", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("start", 1), Conc#(function Action f(a x1))), Meta#(MetaField#("next", 2), Conc#(function Action f(a x1)))))))} {Generic#(OVLAssertions::OVLActionOnNewStart, Meta#(MetaData#("OVLActionOnNewStart", "OVLAssertions", void, 5), Either#(Meta#(MetaConsAnon#("OVL_IGNORE_NEW_START", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_RESET_ON_NEW_START", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_ERROR_ON_NEW_START", 2, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 3, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 4, 0), void)))))))} {Generic#(OVLAssertions::OVLCoverageLevel, Meta#(MetaData#("OVLCoverageLevel", "OVLAssertions", void, 8), Either#(Meta#(MetaConsAnon#("OVL_COVER_NONE", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_COVER_ALL", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_COVER_SANITY", 2, 0), void), Either#(Meta#(MetaConsAnon#("OVL_COVER_BASIC", 3, 0), void), Either#(Meta#(MetaConsAnon#("OVL_COVER_CORNER", 4, 0), void), Either#(Meta#(MetaConsAnon#("OVL_COVER_STATISTIC", 5, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 6, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 7, 0), void))))))))))} {Generic#(OVLAssertions::OVLDefaults#(a), Meta#(MetaData#("OVLDefaults", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("OVLDefaults", 0, 23), Tuple23#(Meta#(MetaField#("severity_level", 0), Conc#(OVLAssertions::OVLSeverityLevel)), Meta#(MetaField#("property_type", 1), Conc#(OVLAssertions::OVLPropertyType)), Meta#(MetaField#("msg", 2), Conc#(String)), Meta#(MetaField#("coverage_level", 3), Conc#(OVLAssertions::OVLCoverageLevel)), Meta#(MetaField#("action_on_new_start", 4), Conc#(OVLAssertions::OVLActionOnNewStart)), Meta#(MetaField#("edge_type", 5), Conc#(OVLAssertions::OVLEdgeType)), Meta#(MetaField#("necessary_condition", 6), Conc#(OVLAssertions::OVLNecessaryCondition)), Meta#(MetaField#("inactive", 7), Conc#(OVLAssertions::OVLInactive)), Meta#(MetaField#("num_cks", 8), Conc#(Int#(32))), Meta#(MetaField#("min_cks", 9), Conc#(Int#(32))), Meta#(MetaField#("max_cks", 10), Conc#(Int#(32))), Meta#(MetaField#("min_ack_cycle", 11), Conc#(Int#(32))), Meta#(MetaField#("max_ack_cycle", 12), Conc#(Int#(32))), Meta#(MetaField#("max_ack_length", 13), Conc#(Int#(32))), Meta#(MetaField#("req_drop", 14), Conc#(Int#(32))), Meta#(MetaField#("deassert_count", 15), Conc#(Int#(32))), Meta#(MetaField#("depth", 16), Conc#(Int#(32))), Meta#(MetaField#("value", 17), Conc#(a)), Meta#(MetaField#("min", 18), Conc#(a)), Meta#(MetaField#("max", 19), Conc#(a)), Meta#(MetaField#("check_overlapping", 20), Conc#(Bool)), Meta#(MetaField#("check_missing_start", 21), Conc#(Bool)), Meta#(MetaField#("simultaneous_push_pop", 22), Conc#(Bool))))))} {Generic#(OVLAssertions::OVLDefaultsTemplate#(a), Meta#(MetaData#("OVLDefaultsTemplate", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("OVLDefaultsTemplate", 0, 23), Tuple23#(Meta#(MetaField#("severity_level", 0), Conc#(Maybe#(OVLAssertions::OVLSeverityLevel))), Meta#(MetaField#("property_type", 1), Conc#(Maybe#(OVLAssertions::OVLPropertyType))), Meta#(MetaField#("msg", 2), Conc#(Maybe#(String))), Meta#(MetaField#("coverage_level", 3), Conc#(Maybe#(OVLAssertions::OVLCoverageLevel))), Meta#(MetaField#("action_on_new_start", 4), Conc#(Maybe#(OVLAssertions::OVLActionOnNewStart))), Meta#(MetaField#("edge_type", 5), Conc#(Maybe#(OVLAssertions::OVLEdgeType))), Meta#(MetaField#("necessary_condition", 6), Conc#(Maybe#(OVLAssertions::OVLNecessaryCondition))), Meta#(MetaField#("inactive", 7), Conc#(Maybe#(OVLAssertions::OVLInactive))), Meta#(MetaField#("num_cks", 8), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("min_cks", 9), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("max_cks", 10), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("min_ack_cycle", 11), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("max_ack_cycle", 12), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("max_ack_length", 13), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("req_drop", 14), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("deassert_count", 15), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("depth", 16), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("value", 17), Conc#(Maybe#(a))), Meta#(MetaField#("min", 18), Conc#(Maybe#(a))), Meta#(MetaField#("max", 19), Conc#(Maybe#(a))), Meta#(MetaField#("check_overlapping", 20), Conc#(Maybe#(Bool))), Meta#(MetaField#("check_missing_start", 21), Conc#(Maybe#(Bool))), Meta#(MetaField#("simultaneous_push_pop", 22), Conc#(Maybe#(Bool)))))))} {Generic#(OVLAssertions::OVLEdgeType, Meta#(MetaData#("OVLEdgeType", "OVLAssertions", void, 6), Either#(Meta#(MetaConsAnon#("OVL_NOEDGE", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_POSEDGE", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_NEGEDGE", 2, 0), void), Either#(Meta#(MetaConsAnon#("OVL_ANYEDGE", 3, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 4, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 5, 0), void))))))))} {Generic#(OVLAssertions::OVLInactive, Meta#(MetaData#("OVLInactive", "OVLAssertions", void, 5), Either#(Meta#(MetaConsAnon#("OVL_ALL_ZEROS", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_ALL_ONES", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_ONE_COLD", 2, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 3, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 4, 0), void)))))))} {Generic#(OVLAssertions::OVLNecessaryCondition, Meta#(MetaData#("OVLNecessaryCondition", "OVLAssertions", void, 5), Either#(Meta#(MetaConsAnon#("OVL_TRIGGER_ON_MOST_PIPE", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_TRIGGER_ON_FIRST_PIPE", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_TRIGGER_ON_FIRST_NOPIPE", 2, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 3, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 4, 0), void)))))))} {Generic#(OVLAssertions::OVLPropertyType, Meta#(MetaData#("OVLPropertyType", "OVLAssertions", void, 5), Either#(Meta#(MetaConsAnon#("OVL_ASSERT", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_ASSUME", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_IGNORE", 2, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 3, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 4, 0), void)))))))} {Generic#(OVLAssertions::OVLSeverityLevel, Meta#(MetaData#("OVLSeverityLevel", "OVLAssertions", void, 6), Either#(Meta#(MetaConsAnon#("OVL_FATAL", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_ERROR", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_WARNING", 2, 0), void), Either#(Meta#(MetaConsAnon#("OVL_INFO", 3, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 4, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 5, 0), void))))))))} {Generic#(OVLAssertions::VAssertFifoTest_IFC#(n, m), Meta#(MetaData#("VAssertFifoTest_IFC", "OVLAssertions", Tuple2#(NumArg#(n), NumArg#(m)), 1), Meta#(MetaConsNamed#("VAssertFifoTest_IFC", 0, 2), Tuple2#(Meta#(MetaField#("push", 0), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("pop", 1), Conc#(function Action f(Bit#(m) x1)))))))} {Generic#(OVLAssertions::VAssertQuiescentTest_IFC#(n), Meta#(MetaData#("VAssertQuiescentTest_IFC", "OVLAssertions", NumArg#(n), 1), Meta#(MetaConsNamed#("VAssertQuiescentTest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("sample", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("state", 1), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("check", 2), Conc#(function Action f(Bit#(n) x1)))))))} {Generic#(OVLAssertions::VAssertSampleTest_IFC#(n), Meta#(MetaData#("VAssertSampleTest_IFC", "OVLAssertions", NumArg#(n), 1), Meta#(MetaConsNamed#("VAssertSampleTest_IFC", 0, 2), Tuple2#(Meta#(MetaField#("sample", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function Action f(Bit#(n) x1)))))))} {Generic#(OVLAssertions::VAssertStartStopTest_IFC#(n), Meta#(MetaData#("VAssertStartStopTest_IFC", "OVLAssertions", NumArg#(n), 1), Meta#(MetaConsNamed#("VAssertStartStopTest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("stop", 1), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("test", 2), Conc#(function Action f(Bit#(n) x1)))))))} {Generic#(OVLAssertions::VAssertStartTest_IFC#(n), Meta#(MetaData#("VAssertStartTest_IFC", "OVLAssertions", NumArg#(n), 1), Meta#(MetaConsNamed#("VAssertStartTest_IFC", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function Action f(Bit#(n) x1)))))))} {Generic#(OVLAssertions::VAssertTest_IFC#(n), Meta#(MetaData#("VAssertTest_IFC", "OVLAssertions", NumArg#(n), 1), Meta#(MetaConsNamed#("VAssertTest_IFC", 0, 1), Meta#(MetaField#("test", 0), Conc#(function Action f(Bit#(n) x1))))))} {Generic#(OVLAssertions::VAssertTransitionTest_IFC#(n), Meta#(MetaData#("VAssertTransitionTest_IFC", "OVLAssertions", NumArg#(n), 1), Meta#(MetaConsNamed#("VAssertTransitionTest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("test", 0), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("start", 1), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("next", 2), Conc#(function Action f(Bit#(n) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertFifoTest_IFC2830#(_n0, _n1, _n2), Meta#(MetaData#("_OVLAssertions.VAssertFifoTest_IFC2830", "OVLAssertions", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertFifoTest_IFC2830", 0, 2), Tuple2#(Meta#(MetaField#("push", 0), Conc#(function ActionValue_#(_n2) f(Bit#(_n1) x1))), Meta#(MetaField#("pop", 1), Conc#(function ActionValue_#(_n2) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertQuiescentTest_IFC2691#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertQuiescentTest_IFC2691", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertQuiescentTest_IFC2691", 0, 3), Tuple3#(Meta#(MetaField#("sample", 0), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("state", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("check", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertSampleTest_IFC804#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertSampleTest_IFC804", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertSampleTest_IFC804", 0, 2), Tuple2#(Meta#(MetaField#("sample", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartStopTest_IFC2147#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertStartStopTest_IFC2147", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartStopTest_IFC2147", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("stop", 1), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("test", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartStopTest_IFC2214#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertStartStopTest_IFC2214", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartStopTest_IFC2214", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("stop", 1), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("test", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartStopTest_IFC2280#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertStartStopTest_IFC2280", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartStopTest_IFC2280", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("stop", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 2), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC1123#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC1123", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC1123", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC1193#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC1193", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC1193", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC1260#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC1260", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC1260", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC1505#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC1505", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC1505", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC1950#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC1950", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC1950", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC2016#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC2016", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC2016", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC2463#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC2463", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC2463", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC868#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC868", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC868", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1057#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1057", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1057", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1321#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1321", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1321", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1379#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1379", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1379", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1436#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1436", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1436", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1572#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1572", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1572", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1641#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1641", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1641", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1705#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1705", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1705", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1765#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1765", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1765", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1819#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1819", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1819", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1881#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1881", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1881", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC2081#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC2081", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC2081", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC2339#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC2339", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC2339", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC2400#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC2400", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC2400", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC2753#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC2753", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC2753", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC744#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC744", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC744", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC932#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC932", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC932", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC995#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC995", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC995", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTransitionTest_IFC2541#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTransitionTest_IFC2541", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTransitionTest_IFC2541", 0, 3), Tuple3#(Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("start", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("next", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTransitionTest_IFC2609#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTransitionTest_IFC2609", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTransitionTest_IFC2609", 0, 3), Tuple3#(Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("start", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("next", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(Once::Once, Meta#(MetaData#("Once", "Once", void, 1), Meta#(MetaConsNamed#("Once", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(Action)), Meta#(MetaField#("clear", 1), Conc#(Action))))))} {Generic#(OneHotArbiter::OneHotArbiter, Meta#(MetaData#("OneHotArbiter", "OneHotArbiter", void, 1), Meta#(MetaConsNamed#("OneHotArbiter", 0, 1), Meta#(MetaField#("next", 0), Conc#(ActionValue#(List#(Bool)))))))} {Generic#(Ordering, Meta#(MetaData#("Ordering", "Prelude", void, 3), Either#(Meta#(MetaConsAnon#("LT", 0, 0), void), Either#(Meta#(MetaConsAnon#("EQ", 1, 0), void), Meta#(MetaConsAnon#("GT", 2, 0), void)))))} {Generic#(P2_Core::P2_Core_IFC, Meta#(MetaData#("P2_Core_IFC", "P2_Core", void, 1), Meta#(MetaConsNamed#("P2_Core_IFC", 0, 4), Tuple4#(Meta#(MetaField#("master0", 0), Conc#(AXI4_Types::AXI4_Master_Sig#(Fabric_Defs::Wd_MId, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, 0, 0, 0, 0, 0))), Meta#(MetaField#("master1", 1), Conc#(AXI4_Types::AXI4_Master_Sig#(Fabric_Defs::Wd_MId_ext, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, Fabric_Defs::Wd_AW_User_ext, Fabric_Defs::Wd_W_User_ext, Fabric_Defs::Wd_B_User_ext, Fabric_Defs::Wd_AR_User_ext, Fabric_Defs::Wd_R_User_ext))), Meta#(MetaField#("interrupt_reqs", 2), Conc#(function Action f(Bit#(SoC_Map::N_External_Interrupt_Sources) x1))), Meta#(MetaField#("jtag", 3), Conc#(Giraffe_IFC::JTAG_IFC))))))} {Generic#(PAClib::PipeOut#(t), Meta#(MetaData#("PipeOut", "PAClib", StarArg#(t), 1), Meta#(MetaConsNamed#("PipeOut", 0, 3), Tuple3#(Meta#(MetaField#("first", 0), Conc#(t)), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("notEmpty", 2), Conc#(Bool))))))} {Generic#(PCIE::BARAperture, Meta#(MetaData#("BARAperture", "PCIE", void, 35), Either#(Meta#(MetaConsAnon#("APERTURE_128B", 0, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_256B", 1, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_512B", 2, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_1K", 3, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_2K", 4, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_4K", 5, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_8K", 6, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_16K", 7, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_32K", 8, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_64K", 9, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_128K", 10, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_256K", 11, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_512K", 12, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_1M", 13, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_2M", 14, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_4M", 15, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_8M", 16, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_16M", 17, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_32M", 18, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_64M", 19, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_128M", 20, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_256M", 21, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_512M", 22, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_1G", 23, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_2G", 24, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_4G", 25, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_8G", 26, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_16G", 27, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_32G", 28, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_64G", 29, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_128G", 30, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_256G", 31, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_512G", 32, 0), void), Either#(Meta#(MetaConsAnon#("APERTURE_1E", 33, 0), void), Meta#(MetaConsAnon#("APERTURE_2E", 34, 0), void)))))))))))))))))))))))))))))))))))))} {Generic#(PCIE::BARID, Meta#(MetaData#("BARID", "PCIE", void, 7), Either#(Meta#(MetaConsAnon#("BAR0", 0, 0), void), Either#(Meta#(MetaConsAnon#("BAR1", 1, 0), void), Either#(Meta#(MetaConsAnon#("BAR2", 2, 0), void), Either#(Meta#(MetaConsAnon#("BAR3", 3, 0), void), Either#(Meta#(MetaConsAnon#("BAR4", 4, 0), void), Either#(Meta#(MetaConsAnon#("BAR5", 5, 0), void), Meta#(MetaConsAnon#("EXPANSION_ROM", 6, 0), void)))))))))} {Generic#(PCIE::ErrorCode, Meta#(MetaData#("ErrorCode", "PCIE", void, 9), Either#(Meta#(MetaConsAnon#("NORMAL_TERMINATION", 0, 0), void), Either#(Meta#(MetaConsAnon#("COMPLETION_POISONED", 1, 0), void), Either#(Meta#(MetaConsAnon#("TERMINATED_UR_CA_CRS", 2, 0), void), Either#(Meta#(MetaConsAnon#("NO_DATA_OR_HIGH_BYTECNT", 3, 0), void), Either#(Meta#(MetaConsAnon#("SAME_TAG", 4, 0), void), Either#(Meta#(MetaConsAnon#("START_ADDRESS", 5, 0), void), Either#(Meta#(MetaConsAnon#("INVALID_TAG", 6, 0), void), Either#(Meta#(MetaConsAnon#("FUNCTION_LEVEL_RESET", 7, 0), void), Meta#(MetaConsAnon#("TIMEOUT", 8, 0), void)))))))))))} {Generic#(PCIE::FlowControlInfoSelect, Meta#(MetaData#("FlowControlInfoSelect", "PCIE", void, 8), Either#(Meta#(MetaConsAnon#("RECEIVE_BUFFER_AVAILABLE_SPACE", 0, 0), void), Either#(Meta#(MetaConsAnon#("RECEIVE_CREDITS_GRANTED", 1, 0), void), Either#(Meta#(MetaConsAnon#("RECEIVE_CREDITS_CONSUMED", 2, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_3", 3, 0), void), Either#(Meta#(MetaConsAnon#("TRANSMIT_USER_CREDITS_AVAIALBE", 4, 0), void), Either#(Meta#(MetaConsAnon#("TRANSMIT_CREDIT_LIMIT", 5, 0), void), Either#(Meta#(MetaConsAnon#("TRANSMIT_CREDITS_CONSUMED", 6, 0), void), Meta#(MetaConsAnon#("UNKNOWN_7", 7, 0), void))))))))))} {Generic#(PCIE::MSIErrorCode, Meta#(MetaData#("MSIErrorCode", "PCIE", void, 4), Either#(Meta#(MetaConsAnon#("ERR_COR", 0, 0), void), Either#(Meta#(MetaConsAnon#("ERR_NONFATAL", 1, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_ERR_2", 2, 0), void), Meta#(MetaConsAnon#("ERR_FATAL", 3, 0), void))))))} {Generic#(PCIE::MSIHotPlugCode, Meta#(MetaData#("MSIHotPlugCode", "PCIE", void, 16), Either#(Meta#(MetaConsAnon#("ATTN_INDICATOR_OFF", 0, 0), void), Either#(Meta#(MetaConsAnon#("ATTN_INDICATOR_ON", 1, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_2", 2, 0), void), Either#(Meta#(MetaConsAnon#("ATTN_INDICATOR_BLINK", 3, 0), void), Either#(Meta#(MetaConsAnon#("POWER_INDICATOR_OFF", 4, 0), void), Either#(Meta#(MetaConsAnon#("POWER_INDICATOR_ON", 5, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_6", 6, 0), void), Either#(Meta#(MetaConsAnon#("POWER_INDICATOR_BLINK", 7, 0), void), Either#(Meta#(MetaConsAnon#("ATTN_BUTTON_PRESSED", 8, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_9", 9, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_10", 10, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_11", 11, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_12", 12, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_13", 13, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_14", 14, 0), void), Meta#(MetaConsAnon#("UNKNOWN_CODE_15", 15, 0), void))))))))))))))))))} {Generic#(PCIE::MSIInterruptCode, Meta#(MetaData#("MSIInterruptCode", "PCIE", void, 8), Either#(Meta#(MetaConsAnon#("ASSERT_INTA", 0, 0), void), Either#(Meta#(MetaConsAnon#("ASSERT_INTB", 1, 0), void), Either#(Meta#(MetaConsAnon#("ASSERT_INTC", 2, 0), void), Either#(Meta#(MetaConsAnon#("ASSERT_INTD", 3, 0), void), Either#(Meta#(MetaConsAnon#("DEASSERT_INTA", 4, 0), void), Either#(Meta#(MetaConsAnon#("DEASSERT_INTB", 5, 0), void), Either#(Meta#(MetaConsAnon#("DEASSERT_INTC", 6, 0), void), Meta#(MetaConsAnon#("DEASSERT_INTD", 7, 0), void))))))))))} {Generic#(PCIE::MSIPowerMgtCode, Meta#(MetaData#("MSIPowerMgtCode", "PCIE", void, 16), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_0", 0, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_1", 1, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_2", 2, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_3", 3, 0), void), Either#(Meta#(MetaConsAnon#("PM_ACTIVE_STATE_NAK", 4, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_5", 5, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_6", 6, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_7", 7, 0), void), Either#(Meta#(MetaConsAnon#("PM_PME", 8, 0), void), Either#(Meta#(MetaConsAnon#("PM_TURN_OFF", 9, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_10", 10, 0), void), Either#(Meta#(MetaConsAnon#("PME_TO_ACK", 11, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_12", 12, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_13", 13, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_CODE_14", 14, 0), void), Meta#(MetaConsAnon#("UNKNOWN_CODE_15", 15, 0), void))))))))))))))))))} {Generic#(PCIE::PCIEParams, Meta#(MetaData#("PCIEParams", "PCIE", void, 1), Meta#(MetaConsNamed#("PCIEParams", 0, 2), Tuple2#(Meta#(MetaField#("fast_train_sim_only", 0), Conc#(Bool)), Meta#(MetaField#("clock_period", 1), Conc#(Real))))))} {Generic#(PCIE::PCIE_EXP#(lanes), Meta#(MetaData#("PCIE_EXP", "PCIE", NumArg#(lanes), 1), Meta#(MetaConsNamed#("PCIE_EXP", 0, 4), Tuple4#(Meta#(MetaField#("rxp", 0), Conc#(function Action f(Bit#(lanes) x1))), Meta#(MetaField#("rxn", 1), Conc#(function Action f(Bit#(lanes) x1))), Meta#(MetaField#("txp", 2), Conc#(Bit#(lanes))), Meta#(MetaField#("txn", 3), Conc#(Bit#(lanes)))))))} {Generic#(PCIE::PciId, Meta#(MetaData#("PciId", "PCIE", void, 1), Meta#(MetaConsNamed#("PciId", 0, 3), Tuple3#(Meta#(MetaField#("bus", 0), Conc#(PCIE::BusNumber)), Meta#(MetaField#("dev", 1), Conc#(PCIE::DevNumber)), Meta#(MetaField#("func", 2), Conc#(PCIE::FuncNumber))))))} {Generic#(PCIE::RequestType, Meta#(MetaData#("RequestType", "PCIE", void, 16), Either#(Meta#(MetaConsAnon#("MEMORY_READ", 0, 0), void), Either#(Meta#(MetaConsAnon#("MEMORY_WRITE", 1, 0), void), Either#(Meta#(MetaConsAnon#("IO_READ", 2, 0), void), Either#(Meta#(MetaConsAnon#("IO_WRITE", 3, 0), void), Either#(Meta#(MetaConsAnon#("MEMORY_FETCH_ADD", 4, 0), void), Either#(Meta#(MetaConsAnon#("MEMORY_UNCOND_SWAP", 5, 0), void), Either#(Meta#(MetaConsAnon#("MEMORY_COMP_SWAP", 6, 0), void), Either#(Meta#(MetaConsAnon#("LOCKED_READ", 7, 0), void), Either#(Meta#(MetaConsAnon#("TYPE0_CFG_READ", 8, 0), void), Either#(Meta#(MetaConsAnon#("TYPE1_CFG_READ", 9, 0), void), Either#(Meta#(MetaConsAnon#("TYPE0_CFG_WRITE", 10, 0), void), Either#(Meta#(MetaConsAnon#("TYPE1_CFG_WRITE", 11, 0), void), Either#(Meta#(MetaConsAnon#("NOT_VEND_ATS_MESSAGE", 12, 0), void), Either#(Meta#(MetaConsAnon#("VENDOR_MESSAGE", 13, 0), void), Either#(Meta#(MetaConsAnon#("ATS_MESSAGE", 14, 0), void), Meta#(MetaConsAnon#("RESERVED", 15, 0), void))))))))))))))))))} {Generic#(PCIE::TLPAddressType, Meta#(MetaData#("TLPAddressType", "PCIE", void, 4), Either#(Meta#(MetaConsAnon#("DEFAULT_UNTRANSLATED", 0, 0), void), Either#(Meta#(MetaConsAnon#("TRANSLATION_REQUEST", 1, 0), void), Either#(Meta#(MetaConsAnon#("TRANSLATED", 2, 0), void), Meta#(MetaConsAnon#("RESERVED", 3, 0), void))))))} {Generic#(PCIE::TLPAttrIDBasedOrdering, Meta#(MetaData#("TLPAttrIDBasedOrdering", "PCIE", void, 2), Either#(Meta#(MetaConsAnon#("DEFAULT_ORDERING", 0, 0), void), Meta#(MetaConsAnon#("ID_BASED_ORDERING", 1, 0), void))))} {Generic#(PCIE::TLPAttrNoSnoop, Meta#(MetaData#("TLPAttrNoSnoop", "PCIE", void, 2), Either#(Meta#(MetaConsAnon#("SNOOPING_REQD", 0, 0), void), Meta#(MetaConsAnon#("NO_SNOOPING_REQD", 1, 0), void))))} {Generic#(PCIE::TLPAttrRelaxedOrdering, Meta#(MetaData#("TLPAttrRelaxedOrdering", "PCIE", void, 2), Either#(Meta#(MetaConsAnon#("STRICT_ORDERING", 0, 0), void), Meta#(MetaConsAnon#("RELAXED_ORDERING", 1, 0), void))))} {Generic#(PCIE::TLPByteCountModified, Meta#(MetaData#("TLPByteCountModified", "PCIE", void, 2), Either#(Meta#(MetaConsAnon#("BYTE_COUNT_ORIGINAL", 0, 0), void), Meta#(MetaConsAnon#("BYTE_COUNT_MODIFIED", 1, 0), void))))} {Generic#(PCIE::TLPCompletionHeader, Meta#(MetaData#("TLPCompletionHeader", "PCIE", void, 1), Meta#(MetaConsNamed#("TLPCompletionHeader", 0, 21), Tuple21#(Meta#(MetaField#("r1", 0), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("format", 1), Conc#(PCIE::TLPPacketFormat)), Meta#(MetaField#("pkttype", 2), Conc#(PCIE::TLPPacketType)), Meta#(MetaField#("r2", 3), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("tclass", 4), Conc#(PCIE::TLPTrafficClass)), Meta#(MetaField#("r3", 5), Conc#(Reserved::ReservedZero#(4))), Meta#(MetaField#("digest", 6), Conc#(PCIE::TLPDigest)), Meta#(MetaField#("poison", 7), Conc#(PCIE::TLPPoison)), Meta#(MetaField#("relaxed", 8), Conc#(PCIE::TLPAttrRelaxedOrdering)), Meta#(MetaField#("nosnoop", 9), Conc#(PCIE::TLPAttrNoSnoop)), Meta#(MetaField#("r4", 10), Conc#(Reserved::ReservedZero#(2))), Meta#(MetaField#("length", 11), Conc#(PCIE::TLPLength)), Meta#(MetaField#("cmplid", 12), Conc#(PCIE::PciId)), Meta#(MetaField#("cstatus", 13), Conc#(PCIE::TLPCompletionStatus)), Meta#(MetaField#("bcm", 14), Conc#(PCIE::TLPByteCountModified)), Meta#(MetaField#("bytecount", 15), Conc#(PCIE::TLPByteCount)), Meta#(MetaField#("reqid", 16), Conc#(PCIE::PciId)), Meta#(MetaField#("tag", 17), Conc#(PCIE::TLPTag)), Meta#(MetaField#("r5", 18), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("loweraddr", 19), Conc#(PCIE::TLPLowerAddr)), Meta#(MetaField#("data", 20), Conc#(Bit#(32)))))))} {Generic#(PCIE::TLPCompletionStatus, Meta#(MetaData#("TLPCompletionStatus", "PCIE", void, 8), Either#(Meta#(MetaConsAnon#("SUCCESSFUL_COMPLETION", 0, 0), void), Either#(Meta#(MetaConsAnon#("UNSUPPORTED_REQUEST", 1, 0), void), Either#(Meta#(MetaConsAnon#("CONFIG_REQ_RETRY_STATUS", 2, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_STATUS_3", 3, 0), void), Either#(Meta#(MetaConsAnon#("COMPLETER_ABORT", 4, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_STATUS_5", 5, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_STATUS_6", 6, 0), void), Meta#(MetaConsAnon#("UNKNOWN_STATUS_7", 7, 0), void))))))))))} {Generic#(PCIE::TLPData#(bytes), Meta#(MetaData#("TLPData", "PCIE", NumArg#(bytes), 1), Meta#(MetaConsNamed#("TLPData", 0, 5), Tuple5#(Meta#(MetaField#("sof", 0), Conc#(Bool)), Meta#(MetaField#("eof", 1), Conc#(Bool)), Meta#(MetaField#("hit", 2), Conc#(Bit#(7))), Meta#(MetaField#("be", 3), Conc#(Bit#(bytes))), Meta#(MetaField#("data", 4), Conc#(Bit#(TMul#(bytes, 8))))))))} {Generic#(PCIE::TLPDigest, Meta#(MetaData#("TLPDigest", "PCIE", void, 2), Either#(Meta#(MetaConsAnon#("NO_DIGEST_PRESENT", 0, 0), void), Meta#(MetaConsAnon#("DIGEST_PRESENT", 1, 0), void))))} {Generic#(PCIE::TLPMSIHeader, Meta#(MetaData#("TLPMSIHeader", "PCIE", void, 1), Meta#(MetaConsNamed#("TLPMSIHeader", 0, 16), Tuple16#(Meta#(MetaField#("r1", 0), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("format", 1), Conc#(PCIE::TLPPacketFormat)), Meta#(MetaField#("pkttype", 2), Conc#(PCIE::TLPPacketType)), Meta#(MetaField#("r2", 3), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("tclass", 4), Conc#(PCIE::TLPTrafficClass)), Meta#(MetaField#("r3", 5), Conc#(Reserved::ReservedZero#(4))), Meta#(MetaField#("digest", 6), Conc#(PCIE::TLPDigest)), Meta#(MetaField#("poison", 7), Conc#(PCIE::TLPPoison)), Meta#(MetaField#("relaxed", 8), Conc#(PCIE::TLPAttrRelaxedOrdering)), Meta#(MetaField#("nosnoop", 9), Conc#(PCIE::TLPAttrNoSnoop)), Meta#(MetaField#("r4", 10), Conc#(Reserved::ReservedZero#(2))), Meta#(MetaField#("length", 11), Conc#(PCIE::TLPLength)), Meta#(MetaField#("reqid", 12), Conc#(PCIE::PciId)), Meta#(MetaField#("tag", 13), Conc#(PCIE::TLPTag)), Meta#(MetaField#("msgcode", 14), Conc#(PCIE::TLPMessageCode)), Meta#(MetaField#("address", 15), Conc#(PCIE::DWAddress64))))))} {Generic#(PCIE::TLPMemory4DWHeader, Meta#(MetaData#("TLPMemory4DWHeader", "PCIE", void, 1), Meta#(MetaConsNamed#("TLPMemory4DWHeader", 0, 18), Tuple18#(Meta#(MetaField#("r1", 0), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("format", 1), Conc#(PCIE::TLPPacketFormat)), Meta#(MetaField#("pkttype", 2), Conc#(PCIE::TLPPacketType)), Meta#(MetaField#("r2", 3), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("tclass", 4), Conc#(PCIE::TLPTrafficClass)), Meta#(MetaField#("r3", 5), Conc#(Reserved::ReservedZero#(4))), Meta#(MetaField#("digest", 6), Conc#(PCIE::TLPDigest)), Meta#(MetaField#("poison", 7), Conc#(PCIE::TLPPoison)), Meta#(MetaField#("relaxed", 8), Conc#(PCIE::TLPAttrRelaxedOrdering)), Meta#(MetaField#("nosnoop", 9), Conc#(PCIE::TLPAttrNoSnoop)), Meta#(MetaField#("r4", 10), Conc#(Reserved::ReservedZero#(2))), Meta#(MetaField#("length", 11), Conc#(PCIE::TLPLength)), Meta#(MetaField#("reqid", 12), Conc#(PCIE::PciId)), Meta#(MetaField#("tag", 13), Conc#(PCIE::TLPTag)), Meta#(MetaField#("lastbe", 14), Conc#(PCIE::TLPLastDWBE)), Meta#(MetaField#("firstbe", 15), Conc#(PCIE::TLPFirstDWBE)), Meta#(MetaField#("addr", 16), Conc#(PCIE::DWAddress64)), Meta#(MetaField#("r7", 17), Conc#(Reserved::ReservedZero#(2)))))))} {Generic#(PCIE::TLPMemoryIO3DWHeader, Meta#(MetaData#("TLPMemoryIO3DWHeader", "PCIE", void, 1), Meta#(MetaConsNamed#("TLPMemoryIO3DWHeader", 0, 19), Tuple19#(Meta#(MetaField#("r1", 0), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("format", 1), Conc#(PCIE::TLPPacketFormat)), Meta#(MetaField#("pkttype", 2), Conc#(PCIE::TLPPacketType)), Meta#(MetaField#("r2", 3), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("tclass", 4), Conc#(PCIE::TLPTrafficClass)), Meta#(MetaField#("r3", 5), Conc#(Reserved::ReservedZero#(4))), Meta#(MetaField#("digest", 6), Conc#(PCIE::TLPDigest)), Meta#(MetaField#("poison", 7), Conc#(PCIE::TLPPoison)), Meta#(MetaField#("relaxed", 8), Conc#(PCIE::TLPAttrRelaxedOrdering)), Meta#(MetaField#("nosnoop", 9), Conc#(PCIE::TLPAttrNoSnoop)), Meta#(MetaField#("r4", 10), Conc#(Reserved::ReservedZero#(2))), Meta#(MetaField#("length", 11), Conc#(PCIE::TLPLength)), Meta#(MetaField#("reqid", 12), Conc#(PCIE::PciId)), Meta#(MetaField#("tag", 13), Conc#(PCIE::TLPTag)), Meta#(MetaField#("lastbe", 14), Conc#(PCIE::TLPLastDWBE)), Meta#(MetaField#("firstbe", 15), Conc#(PCIE::TLPFirstDWBE)), Meta#(MetaField#("addr", 16), Conc#(PCIE::DWAddress)), Meta#(MetaField#("r7", 17), Conc#(Reserved::ReservedZero#(2))), Meta#(MetaField#("data", 18), Conc#(Bit#(32)))))))} {Generic#(PCIE::TLPMessageCode, Meta#(MetaData#("TLPMessageCode", "PCIE", void, 8), Either#(Meta#(MetaConsAnon#("Unlock", 0, 0), void), Either#(Meta#(MetaConsAnon#("PowerManagement", 1, 1), Meta#(MetaField#("_1", 0), Conc#(PCIE::MSIPowerMgtCode))), Either#(Meta#(MetaConsAnon#("Interrupt", 2, 1), Meta#(MetaField#("_1", 0), Conc#(PCIE::MSIInterruptCode))), Either#(Meta#(MetaConsAnon#("Error", 3, 1), Meta#(MetaField#("_1", 0), Conc#(PCIE::MSIErrorCode))), Either#(Meta#(MetaConsAnon#("HotPlug", 4, 1), Meta#(MetaField#("_1", 0), Conc#(PCIE::MSIHotPlugCode))), Either#(Meta#(MetaConsAnon#("SlotPower", 5, 0), void), Either#(Meta#(MetaConsAnon#("VendorType0", 6, 0), void), Meta#(MetaConsAnon#("VendorType1", 7, 0), void))))))))))} {Generic#(PCIE::TLPPacketFormat, Meta#(MetaData#("TLPPacketFormat", "PCIE", void, 4), Either#(Meta#(MetaConsAnon#("MEM_READ_3DW_NO_DATA", 0, 0), void), Either#(Meta#(MetaConsAnon#("MEM_READ_4DW_NO_DATA", 1, 0), void), Either#(Meta#(MetaConsAnon#("MEM_WRITE_3DW_DATA", 2, 0), void), Meta#(MetaConsAnon#("MEM_WRITE_4DW_DATA", 3, 0), void))))))} {Generic#(PCIE::TLPPacketType, Meta#(MetaData#("TLPPacketType", "PCIE", void, 32), Either#(Meta#(MetaConsAnon#("MEMORY_READ_WRITE", 0, 0), void), Either#(Meta#(MetaConsAnon#("MEMORY_READ_LOCKED", 1, 0), void), Either#(Meta#(MetaConsAnon#("IO_REQUEST", 2, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_3", 3, 0), void), Either#(Meta#(MetaConsAnon#("CONFIG_0_READ_WRITE", 4, 0), void), Either#(Meta#(MetaConsAnon#("CONFIG_1_READ_WRITE", 5, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_6", 6, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_7", 7, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_8", 8, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_9", 9, 0), void), Either#(Meta#(MetaConsAnon#("COMPLETION", 10, 0), void), Either#(Meta#(MetaConsAnon#("COMPLETION_LOCKED", 11, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_12", 12, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_13", 13, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_14", 14, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_15", 15, 0), void), Either#(Meta#(MetaConsAnon#("MSG_ROUTED_TO_ROOT", 16, 0), void), Either#(Meta#(MetaConsAnon#("MSG_ROUTED_BY_ADDR", 17, 0), void), Either#(Meta#(MetaConsAnon#("MSG_ROUTED_BY_ID", 18, 0), void), Either#(Meta#(MetaConsAnon#("MSG_ROOT_BROADCAST", 19, 0), void), Either#(Meta#(MetaConsAnon#("MSG_LOCAL", 20, 0), void), Either#(Meta#(MetaConsAnon#("MSG_GATHER", 21, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_22", 22, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_23", 23, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_24", 24, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_25", 25, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_26", 26, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_27", 27, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_28", 28, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_29", 29, 0), void), Either#(Meta#(MetaConsAnon#("UNKNOWN_TYPE_30", 30, 0), void), Meta#(MetaConsAnon#("UNKNOWN_TYPE_31", 31, 0), void))))))))))))))))))))))))))))))))))} {Generic#(PCIE::TLPPoison, Meta#(MetaData#("TLPPoison", "PCIE", void, 2), Either#(Meta#(MetaConsAnon#("NOT_POISONED", 0, 0), void), Meta#(MetaConsAnon#("POISONED", 1, 0), void))))} {Generic#(PCIE::TLPTrafficClass, Meta#(MetaData#("TLPTrafficClass", "PCIE", void, 8), Either#(Meta#(MetaConsAnon#("TRAFFIC_CLASS_0", 0, 0), void), Either#(Meta#(MetaConsAnon#("TRAFFIC_CLASS_1", 1, 0), void), Either#(Meta#(MetaConsAnon#("TRAFFIC_CLASS_2", 2, 0), void), Either#(Meta#(MetaConsAnon#("TRAFFIC_CLASS_3", 3, 0), void), Either#(Meta#(MetaConsAnon#("TRAFFIC_CLASS_4", 4, 0), void), Either#(Meta#(MetaConsAnon#("TRAFFIC_CLASS_5", 5, 0), void), Either#(Meta#(MetaConsAnon#("TRAFFIC_CLASS_6", 6, 0), void), Meta#(MetaConsAnon#("TRAFFIC_CLASS_7", 7, 0), void))))))))))} {Generic#(PCIE::TargetFunction, Meta#(MetaData#("TargetFunction", "PCIE", void, 9), Either#(Meta#(MetaConsAnon#("PF0", 0, 0), void), Either#(Meta#(MetaConsAnon#("PF1", 1, 0), void), Either#(Meta#(MetaConsAnon#("VF0", 2, 0), void), Either#(Meta#(MetaConsAnon#("VF1", 3, 0), void), Either#(Meta#(MetaConsAnon#("VF2", 4, 0), void), Either#(Meta#(MetaConsAnon#("VF3", 5, 0), void), Either#(Meta#(MetaConsAnon#("VF4", 6, 0), void), Either#(Meta#(MetaConsAnon#("VF5", 7, 0), void), Meta#(MetaConsAnon#("LAST", 8, 0), void)))))))))))} {Generic#(PLIC::PLIC_IFC#(t_n_external_sources, t_n_targets, t_max_priority), Meta#(MetaData#("PLIC_IFC", "PLIC", Tuple3#(NumArg#(t_n_external_sources), NumArg#(t_n_targets), NumArg#(t_max_priority)), 1), Meta#(MetaConsNamed#("PLIC_IFC", 0, 7), Tuple7#(Meta#(MetaField#("set_verbosity", 0), Conc#(function Action f(Bit#(4) x1))), Meta#(MetaField#("show_PLIC_state", 1), Conc#(Action)), Meta#(MetaField#("server_reset", 2), Conc#(ClientServer::Server#(Bit#(0), Bit#(0)))), Meta#(MetaField#("set_addr_map", 3), Conc#(function Action f(Bit#(64) x1, Bit#(64) x2))), Meta#(MetaField#("axi4_slave", 4), Conc#(AXI4_Types::AXI4_Slave#(Fabric_Defs::Wd_SId_2x3, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, 0, 0, 0, 0, 0))), Meta#(MetaField#("v_sources", 5), Conc#(Vector::Vector#(t_n_external_sources, PLIC::PLIC_Source_IFC))), Meta#(MetaField#("v_targets", 6), Conc#(Vector::Vector#(t_n_targets, PLIC::PLIC_Target_IFC)))))))} {Generic#(PLIC::PLIC_Source_IFC, Meta#(MetaData#("PLIC_Source_IFC", "PLIC", void, 1), Meta#(MetaConsNamed#("PLIC_Source_IFC", 0, 1), Meta#(MetaField#("m_interrupt_req", 0), Conc#(function Action f(Bool x1))))))} {Generic#(PLIC::PLIC_Target_IFC, Meta#(MetaData#("PLIC_Target_IFC", "PLIC", void, 1), Meta#(MetaConsNamed#("PLIC_Target_IFC", 0, 1), Meta#(MetaField#("m_eip", 0), Conc#(Bool)))))} {Generic#(PTMClocks::EdgeDetector, Meta#(MetaData#("EdgeDetector", "PTMClocks", void, 1), Meta#(MetaConsNamed#("EdgeDetector", 0, 1), Meta#(MetaField#("b", 0), Conc#(Bool)))))} {Generic#(PTMClocks::EnabledClock, Meta#(MetaData#("EnabledClock", "PTMClocks", void, 1), Meta#(MetaConsNamed#("EnabledClock", 0, 1), Meta#(MetaField#("clock_out", 0), Conc#(Clock)))))} {Generic#(PTMClocks::OutputBit, Meta#(MetaData#("OutputBit", "PTMClocks", void, 1), Meta#(MetaConsNamed#("OutputBit", 0, 1), Meta#(MetaField#("out", 0), Conc#(Bit#(1))))))} {Generic#(PTMClocks::_PTMClocks.EnabledClock37, Meta#(MetaData#("_PTMClocks.EnabledClock37", "PTMClocks", void, 1), Meta#(MetaConsNamed#("_PTMClocks.EnabledClock37", 0, 1), Meta#(MetaField#("clock_out", 0), Conc#(Clock)))))} {Generic#(PTMClocks::_PTMClocks.OutputBit17, Meta#(MetaData#("_PTMClocks.OutputBit17", "PTMClocks", void, 1), Meta#(MetaConsNamed#("_PTMClocks.OutputBit17", 0, 1), Meta#(MetaField#("out", 0), Conc#(Bit#(1))))))} {Generic#(PerformanceMonitor::PerfCounters_IFC#(ctrs, ctrW, rptW, evts), Meta#(MetaData#("PerfCounters_IFC", "PerformanceMonitor", Tuple4#(NumArg#(ctrs), NumArg#(ctrW), NumArg#(rptW), NumArg#(evts)), 1), Meta#(MetaConsNamed#("PerfCounters_IFC", 0, 8), Tuple8#(Meta#(MetaField#("send_performance_events", 0), Conc#(function Action f(Vector::Vector#(evts, Bit#(rptW)) x1))), Meta#(MetaField#("read_counters", 1), Conc#(Vector::Vector#(ctrs, ReadOnly#(Bit#(ctrW))))), Meta#(MetaField#("read_ctr_sels", 2), Conc#(Vector::Vector#(ctrs, ReadOnly#(Bit#(TLog#(evts)))))), Meta#(MetaField#("read_ctr_inhibit", 3), Conc#(ReadOnly#(Bit#(ctrs)))), Meta#(MetaField#("read_ctr_overflow", 4), Conc#(ReadOnly#(Bit#(ctrs)))), Meta#(MetaField#("write_counter", 5), Conc#(function Action f(Bit#(TLog#(ctrs)) x1, Bit#(ctrW) x2))), Meta#(MetaField#("write_ctr_sel", 6), Conc#(function Action f(Bit#(TLog#(ctrs)) x1, Bit#(TLog#(evts)) x2))), Meta#(MetaField#("write_ctr_inhibit", 7), Conc#(function Action f(Bit#(ctrs) x1)))))))} {Generic#(Position__, ConcPrim#(Position__))} {Generic#(Power, ConcPrim#(Power))} {Generic#(Pred__, ConcPrim#(Pred__))} {Generic#(PrimAction, ConcPrim#(PrimAction))} {Generic#(Printf::RealFormat, Meta#(MetaData#("RealFormat", "Printf", void, 3), Either#(Meta#(MetaConsAnon#("RFGeneric", 0, 0), void), Either#(Meta#(MetaConsAnon#("RFExponent", 1, 0), void), Meta#(MetaConsAnon#("RFFixed", 2, 0), void)))))} {Generic#(Printf::UPrintf, Meta#(MetaData#("UPrintf", "Printf", void, 4), Either#(Meta#(MetaConsAnon#("UChar", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Char))), Either#(Meta#(MetaConsAnon#("UString", 1, 1), Meta#(MetaField#("_1", 0), Conc#(String))), Either#(Meta#(MetaConsAnon#("UInteger", 2, 1), Meta#(MetaField#("_1", 0), Conc#(Tuple2#(Integer, Integer)))), Meta#(MetaConsAnon#("UReal", 3, 1), Meta#(MetaField#("_1", 0), Conc#(Real))))))))} {Generic#(Probe::Probe#(a), Meta#(MetaData#("Probe", "Probe", StarArg#(a), 1), Meta#(MetaConsNamed#("Probe", 0, 1), Meta#(MetaField#("_write", 0), Conc#(function Action f(a x1))))))} {Generic#(Probe::_Probe.Probe48#(_n0, _n1), Meta#(MetaData#("_Probe.Probe48", "Probe", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Probe.Probe48", 0, 1), Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(ProbeWire::ProbeWire#(a), Meta#(MetaData#("ProbeWire", "ProbeWire", StarArg#(a), 1), Meta#(MetaConsNamed#("ProbeWire", 0, 1), Meta#(MetaField#("id", 0), Conc#(function a f(a x1))))))} {Generic#(ProbeWire::_ProbeWire.ProbeWire42#(_n0), Meta#(MetaData#("_ProbeWire.ProbeWire42", "ProbeWire", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_ProbeWire.ProbeWire42", 0, 1), Meta#(MetaField#("id", 0), Conc#(function Bit#(_n0) f(Bit#(_n0) x1))))))} {Generic#(Pull::Pull#(a), Meta#(MetaData#("Pull", "Pull", StarArg#(a), 1), Meta#(MetaConsNamed#("Pull", 0, 1), Meta#(MetaField#("pull", 0), Conc#(ActionValue#(a))))))} {Generic#(PulseWire, Meta#(MetaData#("PulseWire", "PreludeBSV", void, 1), Meta#(MetaConsNamed#("PulseWire", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(Action)), Meta#(MetaField#("_read", 1), Conc#(Bool))))))} {Generic#(Push::Push#(a), Meta#(MetaData#("Push", "Push", StarArg#(a), 1), Meta#(MetaConsNamed#("Push", 0, 1), Meta#(MetaField#("push", 0), Conc#(function Action f(a x1))))))} {Generic#(RAM::RAMreq#(adr, dta), Meta#(MetaData#("RAMreq", "RAM", Tuple2#(StarArg#(adr), StarArg#(dta)), 2), Either#(Meta#(MetaConsAnon#("Read", 0, 1), Meta#(MetaField#("_1", 0), Conc#(adr))), Meta#(MetaConsAnon#("Write", 1, 1), Meta#(MetaField#("_1", 0), Conc#(Tuple2#(adr, dta)))))))} {Generic#(RISCV_MBox::RISCV_MBox_IFC, Meta#(MetaData#("RISCV_MBox_IFC", "RISCV_MBox", void, 1), Meta#(MetaConsNamed#("RISCV_MBox_IFC", 0, 6), Tuple6#(Meta#(MetaField#("set_verbosity", 0), Conc#(function Action f(Bit#(4) x1))), Meta#(MetaField#("req_reset", 1), Conc#(Action)), Meta#(MetaField#("rsp_reset", 2), Conc#(ActionValue#(Bit#(0)))), Meta#(MetaField#("req", 3), Conc#(function Action f(Bool x1, Bit#(3) x2, ISA_Decls::WordXL x3, ISA_Decls::WordXL x4))), Meta#(MetaField#("valid", 4), Conc#(Bool)), Meta#(MetaField#("word", 5), Conc#(ISA_Decls::WordXL))))))} {Generic#(RISCV_MBox::State, Meta#(MetaData#("State", "RISCV_MBox", void, 3), Either#(Meta#(MetaConsAnon#("STATE_MUL1", 0, 0), void), Either#(Meta#(MetaConsAnon#("STATE_MUL2", 1, 0), void), Meta#(MetaConsAnon#("STATE_DIV_REM", 2, 0), void)))))} {Generic#(RPush::RPush#(a), Meta#(MetaData#("RPush", "RPush", StarArg#(a), 1), Meta#(MetaConsNamed#("RPush", 0, 2), Tuple2#(Meta#(MetaField#("push", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("clear", 1), Conc#(Action))))))} {Generic#(RS232::BaudGenerator, Meta#(MetaData#("BaudGenerator", "RS232", void, 1), Meta#(MetaConsNamed#("BaudGenerator", 0, 4), Tuple4#(Meta#(MetaField#("clock_enable", 0), Conc#(Action)), Meta#(MetaField#("clear", 1), Conc#(Action)), Meta#(MetaField#("baud_tick_16x", 2), Conc#(Bool)), Meta#(MetaField#("baud_tick_2x", 3), Conc#(Bool))))))} {Generic#(RS232::EdgeDetector#(a), Meta#(MetaData#("EdgeDetector", "RS232", StarArg#(a), 1), Meta#(MetaConsNamed#("EdgeDetector", 0, 2), Tuple2#(Meta#(MetaField#("rising", 0), Conc#(Bool)), Meta#(MetaField#("falling", 1), Conc#(Bool))))))} {Generic#(RS232::InputFilter#(size, a), Meta#(MetaData#("InputFilter", "RS232", Tuple2#(NumArg#(size), StarArg#(a)), 1), Meta#(MetaConsNamed#("InputFilter", 0, 2), Tuple2#(Meta#(MetaField#("clock_enable", 0), Conc#(Action)), Meta#(MetaField#("_read", 1), Conc#(a))))))} {Generic#(RS232::InputMovingFilter#(width, threshold, a), Meta#(MetaData#("InputMovingFilter", "RS232", Tuple3#(NumArg#(width), NumArg#(threshold), StarArg#(a)), 1), Meta#(MetaConsNamed#("InputMovingFilter", 0, 3), Tuple3#(Meta#(MetaField#("sample", 0), Conc#(Action)), Meta#(MetaField#("clear", 1), Conc#(Action)), Meta#(MetaField#("_read", 2), Conc#(a))))))} {Generic#(RS232::Parity, Meta#(MetaData#("Parity", "RS232", void, 3), Either#(Meta#(MetaConsAnon#("NONE", 0, 0), void), Either#(Meta#(MetaConsAnon#("ODD", 1, 0), void), Meta#(MetaConsAnon#("EVEN", 2, 0), void)))))} {Generic#(RS232::RS232, Meta#(MetaData#("RS232", "RS232", void, 1), Meta#(MetaConsNamed#("RS232", 0, 2), Tuple2#(Meta#(MetaField#("sin", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("sout", 1), Conc#(Bit#(1)))))))} {Generic#(RS232::RecvState, Meta#(MetaData#("RecvState", "RS232", void, 7), Either#(Meta#(MetaConsAnon#("Start", 0, 0), void), Either#(Meta#(MetaConsAnon#("Center", 1, 0), void), Either#(Meta#(MetaConsAnon#("Wait", 2, 0), void), Either#(Meta#(MetaConsAnon#("Sample", 3, 0), void), Either#(Meta#(MetaConsAnon#("Parity", 4, 0), void), Either#(Meta#(MetaConsAnon#("StopFirst", 5, 0), void), Meta#(MetaConsAnon#("StopLast", 6, 0), void)))))))))} {Generic#(RS232::StopBits, Meta#(MetaData#("StopBits", "RS232", void, 3), Either#(Meta#(MetaConsAnon#("STOP_1", 0, 0), void), Either#(Meta#(MetaConsAnon#("STOP_1_5", 1, 0), void), Meta#(MetaConsAnon#("STOP_2", 2, 0), void)))))} {Generic#(RS232::Synchronizer#(a), Meta#(MetaData#("Synchronizer", "RS232", StarArg#(a), 1), Meta#(MetaConsNamed#("Synchronizer", 0, 2), Tuple2#(Meta#(MetaField#("_write", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("_read", 1), Conc#(a))))))} {Generic#(RS232::UART#(depth), Meta#(MetaData#("UART", "RS232", NumArg#(depth), 1), Meta#(MetaConsNamed#("UART", 0, 3), Tuple3#(Meta#(MetaField#("rs232", 0), Conc#(RS232::RS232)), Meta#(MetaField#("tx", 1), Conc#(GetPut::Get#(Bit#(8)))), Meta#(MetaField#("rx", 2), Conc#(GetPut::Put#(Bit#(8))))))))} {Generic#(RS232::XmitState, Meta#(MetaData#("XmitState", "RS232", void, 8), Either#(Meta#(MetaConsAnon#("Idle", 0, 0), void), Either#(Meta#(MetaConsAnon#("Start", 1, 0), void), Either#(Meta#(MetaConsAnon#("Wait", 2, 0), void), Either#(Meta#(MetaConsAnon#("Shift", 3, 0), void), Either#(Meta#(MetaConsAnon#("Stop", 4, 0), void), Either#(Meta#(MetaConsAnon#("Stop5", 5, 0), void), Either#(Meta#(MetaConsAnon#("Stop2", 6, 0), void), Meta#(MetaConsAnon#("Parity", 7, 0), void))))))))))} {Generic#(RWire#(a), Meta#(MetaData#("RWire", "PreludeBSV", StarArg#(a), 1), Meta#(MetaConsNamed#("RWire", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("wget", 1), Conc#(Maybe#(a)))))))} {Generic#(Randomizable::Control, Meta#(MetaData#("Control", "Randomizable", void, 1), Meta#(MetaConsNamed#("Control", 0, 1), Meta#(MetaField#("init", 0), Conc#(Action)))))} {Generic#(Randomizable::Randomize#(a), Meta#(MetaData#("Randomize", "Randomizable", StarArg#(a), 1), Meta#(MetaConsNamed#("Randomize", 0, 2), Tuple2#(Meta#(MetaField#("cntrl", 0), Conc#(Randomizable::Control)), Meta#(MetaField#("next", 1), Conc#(ActionValue#(a)))))))} {Generic#(Randomizable::VRandomize#(n), Meta#(MetaData#("VRandomize", "Randomizable", NumArg#(n), 1), Meta#(MetaConsNamed#("VRandomize", 0, 1), Meta#(MetaField#("next", 0), Conc#(ActionValue#(Bit#(n)))))))} {Generic#(Randomizable::_Randomizable.VRandomize27#(_n0), Meta#(MetaData#("_Randomizable.VRandomize27", "Randomizable", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Randomizable.VRandomize27", 0, 1), Meta#(MetaField#("next", 0), Conc#(ActionValue_#(_n0))))))} {Generic#(ReadOnly#(a_type), Meta#(MetaData#("ReadOnly", "PreludeBSV", StarArg#(a_type), 1), Meta#(MetaConsNamed#("ReadOnly", 0, 1), Meta#(MetaField#("_read", 0), Conc#(a_type)))))} {Generic#(Real, ConcPrim#(Real))} {Generic#(Reg#(a), Meta#(MetaData#("Reg", "Prelude", StarArg#(a), 1), Meta#(MetaConsNamed#("Reg", 0, 2), Tuple2#(Meta#(MetaField#("_write", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("_read", 1), Conc#(a))))))} {Generic#(RegFile::RegFile#(i, a), Meta#(MetaData#("RegFile", "RegFile", Tuple2#(StarArg#(i), StarArg#(a)), 1), Meta#(MetaConsNamed#("RegFile", 0, 2), Tuple2#(Meta#(MetaField#("upd", 0), Conc#(function Action f(i x1, a x2))), Meta#(MetaField#("sub", 1), Conc#(function a f(i x1)))))))} {Generic#(RegFile::VRegFile#(ni, na), Meta#(MetaData#("VRegFile", "RegFile", Tuple2#(NumArg#(ni), NumArg#(na)), 1), Meta#(MetaConsNamed#("VRegFile", 0, 2), Tuple2#(Meta#(MetaField#("upd", 0), Conc#(function PrimAction f(Bit#(ni) x1, Bit#(na) x2))), Meta#(MetaField#("sub", 1), Conc#(function Bit#(na) f(Bit#(ni) x1)))))))} {Generic#(RegTwo::RegTwo#(a), Meta#(MetaData#("RegTwo", "RegTwo", StarArg#(a), 1), Meta#(MetaConsNamed#("RegTwo", 0, 3), Tuple3#(Meta#(MetaField#("setA", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("setB", 1), Conc#(function Action f(a x1))), Meta#(MetaField#("get", 2), Conc#(a))))))} {Generic#(RegTwo::VRegTwo#(n), Meta#(MetaData#("VRegTwo", "RegTwo", NumArg#(n), 1), Meta#(MetaConsNamed#("VRegTwo", 0, 3), Tuple3#(Meta#(MetaField#("setA", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("setB", 1), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("get", 2), Conc#(Bit#(n)))))))} {Generic#(Reserved::Reserved#(n), Meta#(MetaData#("Reserved", "Reserved", NumArg#(n), 1), Meta#(MetaConsAnon#("Reserved", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(n))))))} {Generic#(Reserved::ReservedOne#(n), Meta#(MetaData#("ReservedOne", "Reserved", NumArg#(n), 1), Meta#(MetaConsAnon#("ReservedOne", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(n))))))} {Generic#(Reserved::ReservedZero#(n), Meta#(MetaData#("ReservedZero", "Reserved", NumArg#(n), 1), Meta#(MetaConsAnon#("ReservedZero", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(n))))))} {Generic#(Reset, ConcPrim#(Reset))} {Generic#(RevertingVirtualReg::VReg#(n), Meta#(MetaData#("VReg", "RevertingVirtualReg", NumArg#(n), 1), Meta#(MetaConsNamed#("VReg", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(n)))))))} {Generic#(Routable::Range#(n), Meta#(MetaData#("Range", "Routable", NumArg#(n), 1), Meta#(MetaConsNamed#("Range", 0, 2), Tuple2#(Meta#(MetaField#("base", 0), Conc#(Bit#(n))), Meta#(MetaField#("size", 1), Conc#(Bit#(n)))))))} {Generic#(Routable::WithMetaInfo#(t, m_t), Meta#(MetaData#("WithMetaInfo", "Routable", Tuple2#(StarArg#(t), StarArg#(m_t)), 1), Meta#(MetaConsNamed#("WithMetaInfo", 0, 2), Tuple2#(Meta#(MetaField#("payload", 0), Conc#(t)), Meta#(MetaField#("metaInfo", 1), Conc#(m_t))))))} {Generic#(Routable::WithRouteInfo#(t, r_t), Meta#(MetaData#("WithRouteInfo", "Routable", Tuple2#(StarArg#(t), StarArg#(r_t)), 1), Meta#(MetaConsNamed#("WithRouteInfo", 0, 2), Tuple2#(Meta#(MetaField#("payload", 0), Conc#(t)), Meta#(MetaField#("routeInfo", 1), Conc#(r_t))))))} {Generic#(Rules, ConcPrim#(Rules))} {Generic#(SPSRAM::VSyncSRAM#(adrs, dtas), Meta#(MetaData#("VSyncSRAM", "SPSRAM", Tuple2#(NumArg#(adrs), NumArg#(dtas)), 1), Meta#(MetaConsNamed#("VSyncSRAM", 0, 2), Tuple2#(Meta#(MetaField#("exec", 0), Conc#(function PrimAction f(Bit#(adrs) x1, Bit#(dtas) x2, Bit#(1) x3, Bit#(1) x4))), Meta#(MetaField#("rdata", 1), Conc#(Bit#(dtas)))))))} {Generic#(SRAM::ShiftReg#(n, a), Meta#(MetaData#("ShiftReg", "SRAM", Tuple2#(NumArg#(n), StarArg#(a)), 1), Meta#(MetaConsNamed#("ShiftReg", 0, 2), Tuple2#(Meta#(MetaField#("output", 0), Conc#(a)), Meta#(MetaField#("shift", 1), Conc#(function Action f(a x1)))))))} {Generic#(SVA::AssertRes, Meta#(MetaData#("AssertRes", "SVA", void, 2), Either#(Meta#(MetaConsAnon#("AssertOkay", 0, 0), void), Meta#(MetaConsAnon#("AssertFail", 1, 0), void))))} {Generic#(SVA::Assertion, Meta#(MetaData#("Assertion", "SVA", void, 1), Meta#(MetaConsNamed#("Assertion", 0, 1), Meta#(MetaField#("advance", 0), Conc#(ActionValue#(SVA::AssertRes))))))} {Generic#(SVA::PropRes, Meta#(MetaData#("PropRes", "SVA", void, 4), Either#(Meta#(MetaConsAnon#("PropTrue", 0, 0), void), Either#(Meta#(MetaConsAnon#("PropUndetermined", 1, 0), void), Either#(Meta#(MetaConsAnon#("PropFalse", 2, 0), void), Meta#(MetaConsAnon#("PropVacuous", 3, 0), void))))))} {Generic#(SVA::Property, Meta#(MetaData#("Property", "SVA", void, 1), Meta#(MetaConsNamed#("Property", 0, 1), Meta#(MetaField#("advance", 0), Conc#(ActionValue#(SVA::PropRes))))))} {Generic#(SVA::SeqRes, Meta#(MetaData#("SeqRes", "SVA", void, 4), Either#(Meta#(MetaConsAnon#("SeqFail", 0, 0), void), Either#(Meta#(MetaConsAnon#("SeqPending", 1, 0), void), Either#(Meta#(MetaConsAnon#("SeqHold", 2, 0), void), Meta#(MetaConsAnon#("SeqHoldStrong", 3, 0), void))))))} {Generic#(SVA::Sequence, Meta#(MetaData#("Sequence", "SVA", void, 1), Meta#(MetaConsNamed#("Sequence", 0, 2), Tuple2#(Meta#(MetaField#("running", 0), Conc#(Bool)), Meta#(MetaField#("advance", 1), Conc#(ActionValue#(SVA::SeqRes)))))))} {Generic#(SVA::Wrap1, Meta#(MetaData#("Wrap1", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap1", 0, 1), Meta#(MetaField#("f", 0), Conc#(function SVA::SeqRes f(Bool x1))))))} {Generic#(SVA::Wrap2, Meta#(MetaData#("Wrap2", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap2", 0, 1), Meta#(MetaField#("f", 0), Conc#(function Tuple3#(Bool, Bool, SVA::SeqRes) f(SVA::SeqRes x1))))))} {Generic#(SVA::Wrap3, Meta#(MetaData#("Wrap3", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap3", 0, 1), Meta#(MetaField#("f", 0), Conc#(function Bool f(SVA::SeqRes x1))))))} {Generic#(SVA::Wrap4, Meta#(MetaData#("Wrap4", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap4", 0, 1), Meta#(MetaField#("f", 0), Conc#(function SVA::SeqRes f(Bool x1, Bool x2, SVA::SeqRes x3, SVA::SeqRes x4))))))} {Generic#(SVA::Wrap5, Meta#(MetaData#("Wrap5", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap5", 0, 1), Meta#(MetaField#("f", 0), Conc#(function SVA::SeqRes f(SVA::SeqRes x1, SVA::SeqRes x2))))))} {Generic#(SVA::Wrap6, Meta#(MetaData#("Wrap6", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap6", 0, 1), Meta#(MetaField#("f", 0), Conc#(function Tuple2#(Bool, SVA::SeqRes) f(SVA::SeqRes x1))))))} {Generic#(SVA::Wrap7, Meta#(MetaData#("Wrap7", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap7", 0, 1), Meta#(MetaField#("f", 0), Conc#(function Tuple3#(Bool, Maybe#(SVA::SeqRes), SVA::SeqRes) f(SVA::SeqRes x1, SVA::SeqRes x2))))))} {Generic#(SaturationMode, Meta#(MetaData#("SaturationMode", "PreludeBSV", void, 4), Either#(Meta#(MetaConsAnon#("Sat_Wrap", 0, 0), void), Either#(Meta#(MetaConsAnon#("Sat_Bound", 1, 0), void), Either#(Meta#(MetaConsAnon#("Sat_Zero", 2, 0), void), Meta#(MetaConsAnon#("Sat_Symmetric", 3, 0), void))))))} {Generic#(SchedPragma, ConcPrim#(SchedPragma))} {Generic#(Semi_FIFOF::Client_Semi_FIFOF#(req_t, rsp_t), Meta#(MetaData#("Client_Semi_FIFOF", "Semi_FIFOF", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Client_Semi_FIFOF", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(Semi_FIFOF::FIFOF_O#(req_t))), Meta#(MetaField#("response", 1), Conc#(Semi_FIFOF::FIFOF_I#(rsp_t)))))))} {Generic#(Semi_FIFOF::FIFOF_I#(t), Meta#(MetaData#("FIFOF_I", "Semi_FIFOF", StarArg#(t), 1), Meta#(MetaConsNamed#("FIFOF_I", 0, 2), Tuple2#(Meta#(MetaField#("enq", 0), Conc#(function Action f(t x1))), Meta#(MetaField#("notFull", 1), Conc#(Bool))))))} {Generic#(Semi_FIFOF::FIFOF_O#(t), Meta#(MetaData#("FIFOF_O", "Semi_FIFOF", StarArg#(t), 1), Meta#(MetaConsNamed#("FIFOF_O", 0, 3), Tuple3#(Meta#(MetaField#("first", 0), Conc#(t)), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("notEmpty", 2), Conc#(Bool))))))} {Generic#(Semi_FIFOF::Server_Semi_FIFOF#(req_t, rsp_t), Meta#(MetaData#("Server_Semi_FIFOF", "Semi_FIFOF", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Server_Semi_FIFOF", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(Semi_FIFOF::FIFOF_I#(req_t))), Meta#(MetaField#("response", 1), Conc#(Semi_FIFOF::FIFOF_O#(rsp_t)))))))} {Generic#(SimpleUtils::ArchReg#(t), Meta#(MetaData#("ArchReg", "SimpleUtils", StarArg#(t), 1), Meta#(MetaConsNamed#("ArchReg", 0, 7), Tuple7#(Meta#(MetaField#("_read", 0), Conc#(t)), Meta#(MetaField#("_write", 1), Conc#(function Action f(t x1))), Meta#(MetaField#("early", 2), Conc#(WriteOnly#(t))), Meta#(MetaField#("late", 3), Conc#(Reg#(t))), Meta#(MetaField#("needCommit", 4), Conc#(Bool)), Meta#(MetaField#("commitVal", 5), Conc#(t)), Meta#(MetaField#("commit", 6), Conc#(Action))))))} {Generic#(SimpleUtils::ArchRegFile#(n, a), Meta#(MetaData#("ArchRegFile", "SimpleUtils", Tuple2#(NumArg#(n), StarArg#(a)), 1), Meta#(MetaConsNamed#("ArchRegFile", 0, 5), Tuple5#(Meta#(MetaField#("r", 0), Conc#(Vector::Vector#(n, SimpleUtils::ArchReg#(a)))), Meta#(MetaField#("commit", 1), Conc#(Action)), Meta#(MetaField#("rd_idx", 2), Conc#(Bit#(TLog#(n)))), Meta#(MetaField#("rd_old_val", 3), Conc#(a)), Meta#(MetaField#("rd_new_val", 4), Conc#(a))))))} {Generic#(Simplefifo::FIFOIfc#(value_size), Meta#(MetaData#("FIFOIfc", "Simplefifo", StarArg#(value_size), 1), Meta#(MetaConsNamed#("FIFOIfc", 0, 3), Tuple3#(Meta#(MetaField#("enq", 0), Conc#(function Action f(value_size x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(value_size))))))} {Generic#(Simplefifo::FIFOIfcConnector#(value_size), Meta#(MetaData#("FIFOIfcConnector", "Simplefifo", StarArg#(value_size), 1), Meta#(MetaConsNamed#("FIFOIfcConnector", 0, 2), Tuple2#(Meta#(MetaField#("ff1", 0), Conc#(Simplefifo::FIFOIfc#(value_size))), Meta#(MetaField#("ff2", 1), Conc#(Simplefifo::FIFOIfc#(value_size)))))))} {Generic#(SoC_Map::SoC_Map_IFC, Meta#(MetaData#("SoC_Map_IFC", "SoC_Map", void, 1), Meta#(MetaConsNamed#("SoC_Map_IFC", 0, 25), Tuple25#(Meta#(MetaField#("m_plic_addr_range", 0), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_near_mem_io_addr_range", 1), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_ethernet_0_addr_range", 2), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_dma_0_addr_range", 3), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_uart16550_0_addr_range", 4), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_uart16550_1_addr_range", 5), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_iic_0_addr_range", 6), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_axi_quad_spi_0_full_addr_range", 7), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_axi_quad_spi_0_lite_addr_range", 8), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_axi_quad_spi_1_addr_range", 9), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_gpio_0_addr_range", 10), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_gpio_1_addr_range", 11), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_boot_rom_addr_range", 12), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_ddr4_0_uncached_addr_range", 13), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_ddr4_0_cached_addr_range", 14), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_is_mem_addr", 15), Conc#(function Bool f(Fabric_Defs::Fabric_Addr x1))), Meta#(MetaField#("m_is_IO_addr", 16), Conc#(function Bool f(Fabric_Defs::Fabric_Addr x1))), Meta#(MetaField#("m_is_near_mem_IO_addr", 17), Conc#(function Bool f(Fabric_Defs::Fabric_Addr x1))), Meta#(MetaField#("m_pc_reset_value", 18), Conc#(Bit#(ISA_Decls::XLEN))), Meta#(MetaField#("m_pcc_reset_value", 19), Conc#(CHERICC_Fat::CapReg)), Meta#(MetaField#("m_ddc_reset_value", 20), Conc#(CHERICC_Fat::CapReg)), Meta#(MetaField#("m_mtcc_reset_value", 21), Conc#(CHERICC_Fat::CapReg)), Meta#(MetaField#("m_mepcc_reset_value", 22), Conc#(CHERICC_Fat::CapReg)), Meta#(MetaField#("m_mtvec_reset_value", 23), Conc#(Bit#(ISA_Decls::XLEN))), Meta#(MetaField#("m_nmivec_reset_value", 24), Conc#(Bit#(ISA_Decls::XLEN)))))))} {Generic#(SourceSink::Sink#(t), Meta#(MetaData#("Sink", "SourceSink", StarArg#(t), 1), Meta#(MetaConsNamed#("Sink", 0, 2), Tuple2#(Meta#(MetaField#("canPut", 0), Conc#(Bool)), Meta#(MetaField#("put", 1), Conc#(function Action f(t x1)))))))} {Generic#(SourceSink::Source#(t), Meta#(MetaData#("Source", "SourceSink", StarArg#(t), 1), Meta#(MetaConsNamed#("Source", 0, 3), Tuple3#(Meta#(MetaField#("canPeek", 0), Conc#(Bool)), Meta#(MetaField#("peek", 1), Conc#(t)), Meta#(MetaField#("drop", 2), Conc#(Action))))))} {Generic#(SourceSink::SourceSink#(t), Meta#(MetaData#("SourceSink", "SourceSink", StarArg#(t), 1), Meta#(MetaConsNamed#("SourceSink", 0, 2), Tuple2#(Meta#(MetaField#("source", 0), Conc#(SourceSink::Source#(t))), Meta#(MetaField#("sink", 1), Conc#(SourceSink::Sink#(t)))))))} {Generic#(SpecialFIFOs::SCounter, Meta#(MetaData#("SCounter", "SpecialFIFOs", void, 1), Meta#(MetaConsNamed#("SCounter", 0, 6), Tuple6#(Meta#(MetaField#("incr", 0), Conc#(Action)), Meta#(MetaField#("decr", 1), Conc#(Action)), Meta#(MetaField#("isEq", 2), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("setNext", 3), ConcPoly#(SpecialFIFOs::SCounter_setNext)), Meta#(MetaField#("set", 4), ConcPoly#(SpecialFIFOs::SCounter_set)), Meta#(MetaField#("clear", 5), Conc#(Action))))))} {Generic#(StarArg#(i), Meta#(MetaData#("StarArg", "Prelude", StarArg#(i), 1), Meta#(MetaConsAnon#("StarArg", 0, 0), void)))} {Generic#(StatCounters::AXI4_Master_Events, Meta#(MetaData#("AXI4_Master_Events", "StatCounters", void, 1), Meta#(MetaConsNamed#("AXI4_Master_Events", 0, 7), Tuple7#(Meta#(MetaField#("evt_AW_FLIT", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_W_FLIT", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_W_FLIT_FINAL", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_B_FLIT", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AR_FLIT", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_R_FLIT", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_R_FLIT_FINAL", 6), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::AXI4_Slave_Events, Meta#(MetaData#("AXI4_Slave_Events", "StatCounters", void, 1), Meta#(MetaConsNamed#("AXI4_Slave_Events", 0, 7), Tuple7#(Meta#(MetaField#("evt_AW_FLIT", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_W_FLIT", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_W_FLIT_FINAL", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_B_FLIT", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AR_FLIT", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_R_FLIT", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_R_FLIT_FINAL", 6), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::EventsCore, Meta#(MetaData#("EventsCore", "StatCounters", void, 1), Meta#(MetaConsNamed#("EventsCore", 0, 31), Tuple31#(Meta#(MetaField#("evt_NO_EV", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_REDIRECT", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TRAP", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_BRANCH", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_JAL", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_JALR", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AUIPC", 6), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LOAD", 7), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_STORE", 8), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LR", 9), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_SC", 10), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AMO", 11), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_SERIAL_SHIFT", 12), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_INT_MUL_DIV_REM", 13), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_FP", 14), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_SC_SUCCESS", 15), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LOAD_WAIT", 16), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_STORE_WAIT", 17), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_FENCE", 18), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_F_BUSY_NO_CONSUME", 19), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_D_BUSY_NO_CONSUME", 20), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_1_BUSY_NO_CONSUME", 21), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_2_BUSY_NO_CONSUME", 22), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_3_BUSY_NO_CONSUME", 23), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_IMPRECISE_SETBOUND", 24), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_UNREPRESENTABLE_CAP", 25), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_MEM_CAP_LOAD", 26), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_MEM_CAP_STORE", 27), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_MEM_CAP_LOAD_TAG_SET", 28), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_MEM_CAP_STORE_TAG_SET", 29), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_INTERRUPT", 30), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::EventsL1D, Meta#(MetaData#("EventsL1D", "StatCounters", void, 1), Meta#(MetaConsNamed#("EventsL1D", 0, 14), Tuple14#(Meta#(MetaField#("evt_LD", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LD_MISS", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LD_MISS_LAT", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_ST", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_ST_MISS", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_ST_MISS_LAT", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AMO", 6), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AMO_MISS", 7), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AMO_MISS_LAT", 8), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB", 9), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_MISS", 10), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_MISS_LAT", 11), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_FLUSH", 12), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_EVICT", 13), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::EventsL1I, Meta#(MetaData#("EventsL1I", "StatCounters", void, 1), Meta#(MetaConsNamed#("EventsL1I", 0, 7), Tuple7#(Meta#(MetaField#("evt_LD", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LD_MISS", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LD_MISS_LAT", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_MISS", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_MISS_LAT", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_FLUSH", 6), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::EventsLL, Meta#(MetaData#("EventsLL", "StatCounters", void, 1), Meta#(MetaConsNamed#("EventsLL", 0, 9), Tuple9#(Meta#(MetaField#("evt_LD", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LD_MISS", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LD_MISS_LAT", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_ST", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_ST_MISS", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_MISS", 6), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_FLUSH", 7), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_EVICT", 8), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::EventsTGC, Meta#(MetaData#("EventsTGC", "StatCounters", void, 1), Meta#(MetaConsNamed#("EventsTGC", 0, 7), Tuple7#(Meta#(MetaField#("evt_WRITE", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_WRITE_MISS", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_READ", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_READ_MISS", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_EVICT", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_SET_TAG_WRITE", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_SET_TAG_READ", 6), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::EventsTransExe, Meta#(MetaData#("EventsTransExe", "StatCounters", void, 1), Meta#(MetaConsNamed#("EventsTransExe", 0, 3), Tuple3#(Meta#(MetaField#("evt_RENAMED_INST", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_WILD_JUMP", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_WILD_EXCEPTION", 2), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::HPMEvents, Meta#(MetaData#("HPMEvents", "StatCounters", void, 1), Meta#(MetaConsNamed#("HPMEvents", 0, 8), Tuple8#(Meta#(MetaField#("mab_EventsCore", 0), Conc#(Maybe#(StatCounters::EventsCore))), Meta#(MetaField#("mab_EventsL1I", 1), Conc#(Maybe#(StatCounters::EventsL1I))), Meta#(MetaField#("mab_EventsL1D", 2), Conc#(Maybe#(StatCounters::EventsL1D))), Meta#(MetaField#("mab_EventsTGC", 3), Conc#(Maybe#(StatCounters::EventsTGC))), Meta#(MetaField#("mab_AXI4_Slave_Events", 4), Conc#(Maybe#(StatCounters::AXI4_Slave_Events))), Meta#(MetaField#("mab_AXI4_Master_Events", 5), Conc#(Maybe#(StatCounters::AXI4_Master_Events))), Meta#(MetaField#("mab_EventsLL", 6), Conc#(Maybe#(StatCounters::EventsLL))), Meta#(MetaField#("mab_EventsTransExe", 7), Conc#(Maybe#(StatCounters::EventsTransExe)))))))} {Generic#(State::State#(s, a), Meta#(MetaData#("State", "State", Tuple2#(StarArg#(s), StarArg#(a)), 1), Meta#(MetaConsAnon#("State", 0, 1), Meta#(MetaField#("_1", 0), Conc#(function Tuple2#(a, s) f(s x1))))))} {Generic#(StmtFSM::ActionType, Meta#(MetaData#("ActionType", "StmtFSM", void, 5), Either#(Meta#(MetaConsAnon#("Default", 0, 0), void), Either#(Meta#(MetaConsAnon#("Update", 1, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::Freedom))), Either#(Meta#(MetaConsAnon#("Jump", 2, 1), Meta#(MetaField#("_1", 0), Conc#(String))), Either#(Meta#(MetaConsAnon#("Wait", 3, 0), void), Meta#(MetaConsAnon#("NoME", 4, 0), void)))))))} {Generic#(StmtFSM::FSM, Meta#(MetaData#("FSM", "StmtFSM", void, 1), Meta#(MetaConsNamed#("FSM", 0, 4), Tuple4#(Meta#(MetaField#("start", 0), Conc#(Action)), Meta#(MetaField#("done", 1), Conc#(Bool)), Meta#(MetaField#("waitTillDone", 2), Conc#(Action)), Meta#(MetaField#("abort", 3), Conc#(Action))))))} {Generic#(StmtFSM::FSMAbort, Meta#(MetaData#("FSMAbort", "StmtFSM", void, 1), Meta#(MetaConsNamed#("FSMAbort", 0, 1), Meta#(MetaField#("abort", 0), Conc#(Action)))))} {Generic#(StmtFSM::FSMServer#(a, b), Meta#(MetaData#("FSMServer", "StmtFSM", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("FSMServer", 0, 2), Tuple2#(Meta#(MetaField#("server", 0), Conc#(ClientServer::Server#(a, b))), Meta#(MetaField#("abort", 1), Conc#(Action))))))} {Generic#(StmtFSM::Freedom, Meta#(MetaData#("Freedom", "StmtFSM", void, 2), Either#(Meta#(MetaConsAnon#("Early", 0, 1), Meta#(MetaField#("_1", 0), Conc#(String))), Meta#(MetaConsAnon#("Overlap", 1, 0), void))))} {Generic#(StmtFSM::LabelState#(a), Meta#(MetaData#("LabelState", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("LabelState", 0, 5), Tuple5#(Meta#(MetaField#("state_num", 0), Conc#(Integer)), Meta#(MetaField#("return_label", 1), Conc#(String)), Meta#(MetaField#("label_names", 2), Conc#(List#(String))), Meta#(MetaField#("loop_labels", 3), Conc#(Maybe#(Tuple2#(String, String)))), Meta#(MetaField#("ifc", 4), Conc#(GetPut::Put#(a)))))))} {Generic#(StmtFSM::NCount'#(n), Meta#(MetaData#("NCount'", "StmtFSM", NumArg#(n), 1), Meta#(MetaConsNamed#("NCount'", 0, 3), Tuple3#(Meta#(MetaField#("is'", 0), Conc#(function Bool f(Nat x1))), Meta#(MetaField#("reset'", 1), Conc#(Action)), Meta#(MetaField#("incr'", 2), Conc#(Action))))))} {Generic#(StmtFSM::NCount, Meta#(MetaData#("NCount", "StmtFSM", void, 1), Meta#(MetaConsNamed#("NCount", 0, 3), Tuple3#(Meta#(MetaField#("is", 0), Conc#(function Bool f(Nat x1))), Meta#(MetaField#("reset", 1), Conc#(Action)), Meta#(MetaField#("incr", 2), Conc#(Action))))))} {Generic#(StmtFSM::Once, Meta#(MetaData#("Once", "StmtFSM", void, 1), Meta#(MetaConsNamed#("Once", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(Action)), Meta#(MetaField#("clear", 1), Conc#(Action)), Meta#(MetaField#("done", 2), Conc#(Bool))))))} {Generic#(StmtFSM::RFSM#(a), Meta#(MetaData#("RFSM", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("RFSM", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(Action)), Meta#(MetaField#("abort", 1), Conc#(Action)), Meta#(MetaField#("ready", 2), Conc#(Bool))))))} {Generic#(StmtFSM::RuleSet, Meta#(MetaData#("RuleSet", "StmtFSM", void, 1), Meta#(MetaConsNamed#("RuleSet", 0, 3), Tuple3#(Meta#(MetaField#("me_local", 0), Conc#(Rules)), Meta#(MetaField#("me_parents", 1), Conc#(Rules)), Meta#(MetaField#("no_me", 2), Conc#(Rules))))))} {Generic#(StmtFSM::State'#(n), Meta#(MetaData#("State'", "StmtFSM", NumArg#(n), 1), Meta#(MetaConsNamed#("State'", 0, 2), Tuple2#(Meta#(MetaField#("is'", 0), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("set'", 1), Conc#(function Action f(Integer x1)))))))} {Generic#(StmtFSM::State, Meta#(MetaData#("State", "StmtFSM", void, 1), Meta#(MetaConsNamed#("State", 0, 4), Tuple4#(Meta#(MetaField#("is", 0), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("set", 1), Conc#(function Action f(Integer x1))), Meta#(MetaField#("overlap", 2), Conc#(Action)), Meta#(MetaField#("fired_last", 3), Conc#(Bool))))))} {Generic#(StmtFSM::StmtFT#(a), Meta#(MetaData#("StmtFT", "StmtFSM", StarArg#(a), 13), Either#(Meta#(MetaConsAnon#("SFAction", 0, 7), Tuple7#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Integer)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::NextStateDescriptors)), Meta#(MetaField#("_4", 3), Conc#(Action)), Meta#(MetaField#("_5", 4), Conc#(Action)), Meta#(MetaField#("_6", 5), Conc#(Maybe#(StmtFSM::ActionType))), Meta#(MetaField#("_7", 6), Conc#(Maybe#(StmtFSM::RuleSet))))), Either#(Meta#(MetaConsAnon#("SFLabel", 1, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::NextStateDescriptors)), Meta#(MetaField#("_4", 3), Conc#(Maybe#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SFNamed", 2, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(List#(StmtFSM::StmtFT#(a)))))), Either#(Meta#(MetaConsAnon#("SFUntil", 3, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)))), Either#(Meta#(MetaConsAnon#("SFIf1", 4, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtFT#(a))))), Either#(Meta#(MetaConsAnon#("SFIf2", 5, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtFT#(a))))), Either#(Meta#(MetaConsAnon#("SFFor", 6, 5), Tuple5#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_3", 2), Conc#(Bool)), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_5", 4), Conc#(StmtFSM::StmtFT#(a))))), Either#(Meta#(MetaConsAnon#("SFSeq", 7, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(List#(StmtFSM::StmtFT#(a)))))), Either#(Meta#(MetaConsAnon#("SFPar", 8, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_3", 2), Conc#(List#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SFSkip", 9, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Either#(Meta#(MetaConsAnon#("SFDelay", 10, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Either#(Meta#(MetaConsAnon#("SFReturn", 11, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Meta#(MetaConsAnon#("SFWhile", 12, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtFT#(a)))))))))))))))))))} {Generic#(StmtFSM::StmtFT_$SFAction#(a), Meta#(MetaData#("StmtFT_$SFAction", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFAction", 0, 7), Tuple7#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Integer)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::NextStateDescriptors)), Meta#(MetaField#("_4", 3), Conc#(Action)), Meta#(MetaField#("_5", 4), Conc#(Action)), Meta#(MetaField#("_6", 5), Conc#(Maybe#(StmtFSM::ActionType))), Meta#(MetaField#("_7", 6), Conc#(Maybe#(StmtFSM::RuleSet)))))))} {Generic#(StmtFSM::StmtFT_$SFFor#(a), Meta#(MetaData#("StmtFT_$SFFor", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFFor", 0, 5), Tuple5#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_3", 2), Conc#(Bool)), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_5", 4), Conc#(StmtFSM::StmtFT#(a)))))))} {Generic#(StmtFSM::StmtFT_$SFIf1#(a), Meta#(MetaData#("StmtFT_$SFIf1", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFIf1", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtFT#(a)))))))} {Generic#(StmtFSM::StmtFT_$SFIf2#(a), Meta#(MetaData#("StmtFT_$SFIf2", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFIf2", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtFT#(a)))))))} {Generic#(StmtFSM::StmtFT_$SFLabel#(a), Meta#(MetaData#("StmtFT_$SFLabel", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFLabel", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::NextStateDescriptors)), Meta#(MetaField#("_4", 3), Conc#(Maybe#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::StmtFT_$SFNamed#(a), Meta#(MetaData#("StmtFT_$SFNamed", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFNamed", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(List#(StmtFSM::StmtFT#(a))))))))} {Generic#(StmtFSM::StmtFT_$SFPar#(a), Meta#(MetaData#("StmtFT_$SFPar", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFPar", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_3", 2), Conc#(List#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::StmtFT_$SFSeq#(a), Meta#(MetaData#("StmtFT_$SFSeq", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFSeq", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(List#(StmtFSM::StmtFT#(a))))))))} {Generic#(StmtFSM::StmtFT_$SFUntil#(a), Meta#(MetaData#("StmtFT_$SFUntil", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFUntil", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool))))))} {Generic#(StmtFSM::StmtFT_$SFWhile#(a), Meta#(MetaData#("StmtFT_$SFWhile", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFWhile", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtFT#(a)))))))} {Generic#(StmtFSM::StmtM#(a, b), Meta#(MetaData#("StmtM", "StmtFSM", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsAnon#("S", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Module#(Tuple2#(b, StmtFSM::RStmts#(a))))))))} {Generic#(StmtFSM::StmtT#(a), Meta#(MetaData#("StmtT", "StmtFSM", StarArg#(a), 20), Either#(Meta#(MetaConsAnon#("SAction", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Action)), Meta#(MetaField#("_3", 2), Conc#(Maybe#(StmtFSM::ActionType))))), Either#(Meta#(MetaConsAnon#("SActionValue", 1, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(ActionValue#(a))))), Either#(Meta#(MetaConsAnon#("SNamed", 2, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(List#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SLabel", 3, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(Bool)), Meta#(MetaField#("_4", 3), Conc#(Maybe#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SJump", 4, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)))), Either#(Meta#(MetaConsAnon#("SCall", 5, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Action)), Meta#(MetaField#("_3", 2), Conc#(Action)), Meta#(MetaField#("_4", 3), Conc#(Action)))), Either#(Meta#(MetaConsAnon#("SUntil", 6, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)))), Either#(Meta#(MetaConsAnon#("SIf1", 7, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a))))), Either#(Meta#(MetaConsAnon#("SIf2", 8, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtT#(a))))), Either#(Meta#(MetaConsAnon#("SWhile", 9, 6), Tuple6#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_4", 3), Conc#(Maybe#(StmtFSM::StmtT#(a)))), Meta#(MetaField#("_5", 4), Conc#(Maybe#(StmtFSM::StmtT#(a)))), Meta#(MetaField#("_6", 5), Conc#(Maybe#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SFor", 10, 5), Tuple5#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_3", 2), Conc#(Bool)), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_5", 4), Conc#(StmtFSM::StmtT#(a))))), Either#(Meta#(MetaConsAnon#("SSeq", 11, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(List#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SPar", 12, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(List#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SSkip", 13, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Either#(Meta#(MetaConsAnon#("SRepeat", 14, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Nat)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a))))), Either#(Meta#(MetaConsAnon#("SDelay", 15, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Nat)))), Either#(Meta#(MetaConsAnon#("SReturn", 16, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Either#(Meta#(MetaConsAnon#("SBreak", 17, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Either#(Meta#(MetaConsAnon#("SContinue", 18, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Meta#(MetaConsAnon#("SExprS", 19, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::RStmt#(a))))))))))))))))))))))))))} {Generic#(StmtFSM::StmtT_$SAction#(a), Meta#(MetaData#("StmtT_$SAction", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SAction", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Action)), Meta#(MetaField#("_3", 2), Conc#(Maybe#(StmtFSM::ActionType)))))))} {Generic#(StmtFSM::StmtT_$SActionValue#(a), Meta#(MetaData#("StmtT_$SActionValue", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SActionValue", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(ActionValue#(a)))))))} {Generic#(StmtFSM::StmtT_$SCall#(a), Meta#(MetaData#("StmtT_$SCall", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SCall", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Action)), Meta#(MetaField#("_3", 2), Conc#(Action)), Meta#(MetaField#("_4", 3), Conc#(Action))))))} {Generic#(StmtFSM::StmtT_$SDelay#(a), Meta#(MetaData#("StmtT_$SDelay", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SDelay", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Nat))))))} {Generic#(StmtFSM::StmtT_$SExprS#(a), Meta#(MetaData#("StmtT_$SExprS", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SExprS", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::RStmt#(a)))))))} {Generic#(StmtFSM::StmtT_$SFor#(a), Meta#(MetaData#("StmtT_$SFor", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SFor", 0, 5), Tuple5#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_3", 2), Conc#(Bool)), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_5", 4), Conc#(StmtFSM::StmtT#(a)))))))} {Generic#(StmtFSM::StmtT_$SIf1#(a), Meta#(MetaData#("StmtT_$SIf1", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SIf1", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a)))))))} {Generic#(StmtFSM::StmtT_$SIf2#(a), Meta#(MetaData#("StmtT_$SIf2", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SIf2", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtT#(a)))))))} {Generic#(StmtFSM::StmtT_$SJump#(a), Meta#(MetaData#("StmtT_$SJump", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SJump", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String))))))} {Generic#(StmtFSM::StmtT_$SLabel#(a), Meta#(MetaData#("StmtT_$SLabel", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SLabel", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(Bool)), Meta#(MetaField#("_4", 3), Conc#(Maybe#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::StmtT_$SNamed#(a), Meta#(MetaData#("StmtT_$SNamed", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SNamed", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(List#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::StmtT_$SPar#(a), Meta#(MetaData#("StmtT_$SPar", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SPar", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(List#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::StmtT_$SRepeat#(a), Meta#(MetaData#("StmtT_$SRepeat", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SRepeat", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Nat)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a)))))))} {Generic#(StmtFSM::StmtT_$SSeq#(a), Meta#(MetaData#("StmtT_$SSeq", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SSeq", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(List#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::StmtT_$SUntil#(a), Meta#(MetaData#("StmtT_$SUntil", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SUntil", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool))))))} {Generic#(StmtFSM::StmtT_$SWhile#(a), Meta#(MetaData#("StmtT_$SWhile", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SWhile", 0, 6), Tuple6#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_4", 3), Conc#(Maybe#(StmtFSM::StmtT#(a)))), Meta#(MetaField#("_5", 4), Conc#(Maybe#(StmtFSM::StmtT#(a)))), Meta#(MetaField#("_6", 5), Conc#(Maybe#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::TSDType, Meta#(MetaData#("TSDType", "StmtFSM", void, 3), Either#(Meta#(MetaConsAnon#("Default", 0, 0), void), Either#(Meta#(MetaConsAnon#("Start", 1, 0), void), Meta#(MetaConsAnon#("End", 2, 0), void)))))} {Generic#(StmtFSM::TwoStateDescriptor, Meta#(MetaData#("TwoStateDescriptor", "StmtFSM", void, 1), Meta#(MetaConsAnon#("TSD", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(Bool)), Meta#(MetaField#("_2", 1), Conc#(Integer)), Meta#(MetaField#("_3", 2), Conc#(Integer)), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::TSDType))))))} {Generic#(StmtFSM::TwoStateDescriptor_$TSD, Meta#(MetaData#("TwoStateDescriptor_$TSD", "StmtFSM", void, 1), Meta#(MetaConsNamed#("TwoStateDescriptor_$TSD", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(Bool)), Meta#(MetaField#("_2", 1), Conc#(Integer)), Meta#(MetaField#("_3", 2), Conc#(Integer)), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::TSDType))))))} {Generic#(StmtFSM::Waiter, Meta#(MetaData#("Waiter", "StmtFSM", void, 1), Meta#(MetaConsNamed#("Waiter", 0, 1), Meta#(MetaField#("wait", 0), Conc#(Action)))))} {Generic#(StmtFSMUtil::MEState, Meta#(MetaData#("MEState", "StmtFSMUtil", void, 1), Meta#(MetaConsNamed#("MEState", 0, 5), Tuple5#(Meta#(MetaField#("set", 0), Conc#(function Action f(Integer x1))), Meta#(MetaField#("set_delayed", 1), Conc#(function Action f(Integer x1))), Meta#(MetaField#("reset", 2), Conc#(Action)), Meta#(MetaField#("reset_delayed", 3), Conc#(Action)), Meta#(MetaField#("is", 4), Conc#(function Bool f(Integer x1)))))))} {Generic#(StmtFSMUtil::MEStateInternal#(a), Meta#(MetaData#("MEStateInternal", "StmtFSMUtil", StarArg#(a), 1), Meta#(MetaConsNamed#("MEStateInternal", 0, 5), Tuple5#(Meta#(MetaField#("set", 0), Conc#(function Action f(Integer x1))), Meta#(MetaField#("set_delayed", 1), Conc#(function Action f(Integer x1))), Meta#(MetaField#("reset", 2), Conc#(Action)), Meta#(MetaField#("reset_delayed", 3), Conc#(Action)), Meta#(MetaField#("is", 4), Conc#(function Bool f(Integer x1)))))))} {Generic#(StrArg#(i), Meta#(MetaData#("StrArg", "Prelude", StrArg#(i), 1), Meta#(MetaConsAnon#("StrArg", 0, 0), void)))} {Generic#(String, ConcPrim#(String))} {Generic#(StringProxy#(s), Meta#(MetaData#("StringProxy", "Prelude", StrArg#(s), 1), Meta#(MetaConsAnon#("StringProxy", 0, 0), void)))} {Generic#(SvaParam, Meta#(MetaData#("SvaParam", "Prelude", void, 2), Either#(Meta#(MetaConsAnon#("SvaBool", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bool))), Meta#(MetaConsAnon#("SvaNumber", 1, 1), Meta#(MetaField#("_1", 0), Conc#(UInt#(32)))))))} {Generic#(SyncSRAM::SyncSRAMrequest#(lat, adrs, dtas), Meta#(MetaData#("SyncSRAMrequest", "SyncSRAM", Tuple3#(NumArg#(lat), NumArg#(adrs), NumArg#(dtas)), 1), Meta#(MetaConsNamed#("SyncSRAMrequest", 0, 4), Tuple4#(Meta#(MetaField#("addr", 0), Conc#(Bit#(adrs))), Meta#(MetaField#("wdata", 1), Conc#(Bit#(dtas))), Meta#(MetaField#("we", 2), Conc#(Bit#(1))), Meta#(MetaField#("ena", 3), Conc#(Bit#(1)))))))} {Generic#(TLB::TLBE, Meta#(MetaData#("TLBE", "TLB", void, 1), Meta#(MetaConsNamed#("TLBE", 0, 3), Tuple3#(Meta#(MetaField#("asid_tag", 0), Conc#(ISA_Decls::ASID)), Meta#(MetaField#("pte", 1), Conc#(ISA_Decls::PTE)), Meta#(MetaField#("pte_pa", 2), Conc#(ISA_Decls::PA))))))} {Generic#(TLB::TLB_IFC, Meta#(MetaData#("TLB_IFC", "TLB", void, 1), Meta#(MetaConsNamed#("TLB_IFC", 0, 4), Tuple4#(Meta#(MetaField#("mv_vm_put_va", 0), Conc#(function Action f(ISA_Decls::WordXL x1))), Meta#(MetaField#("mv_vm_get_xlate", 1), Conc#(function MMU_Cache_Common::VM_Xlate_Result f(ISA_Decls::WordXL x1, Bool x2, Bool x3, ISA_Decls::Priv_Mode x4, Bit#(1) x5, Bit#(1) x6))), Meta#(MetaField#("ma_insert", 2), Conc#(function Action f(ISA_Decls::ASID x1, ISA_Decls::VPN x2, ISA_Decls::PTE x3, Bit#(2) x4, ISA_Decls::PA x5))), Meta#(MetaField#("ma_flush", 3), Conc#(Action))))))} {Generic#(TLB::TLB_Lookup_Result, Meta#(MetaData#("TLB_Lookup_Result", "TLB", void, 1), Meta#(MetaConsNamed#("TLB_Lookup_Result", 0, 4), Tuple4#(Meta#(MetaField#("hit", 0), Conc#(Bool)), Meta#(MetaField#("pte", 1), Conc#(ISA_Decls::PTE)), Meta#(MetaField#("pte_level", 2), Conc#(Bit#(2))), Meta#(MetaField#("pte_pa", 3), Conc#(ISA_Decls::PA))))))} {Generic#(TLM2Defines::RequestData#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("RequestData", "TLM2Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 1), Meta#(MetaConsNamed#("RequestData", 0, 3), Tuple3#(Meta#(MetaField#("data", 0), Conc#(TLM2Defines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("transaction_id", 1), Conc#(TLM2Defines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("custom", 2), Conc#(TLM2Defines::TLMCustom#(id_size, addr_size, data_size, uint_size, cstm_type)))))))} {Generic#(TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("RequestDescriptor", "TLM2Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 1), Meta#(MetaConsNamed#("RequestDescriptor", 0, 14), Tuple14#(Meta#(MetaField#("command", 0), Conc#(TLM2Defines::TLMCommand)), Meta#(MetaField#("mode", 1), Conc#(TLM2Defines::TLMMode)), Meta#(MetaField#("addr", 2), Conc#(TLM2Defines::TLMAddr#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("data", 3), Conc#(TLM2Defines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("burst_length", 4), Conc#(TLM2Defines::TLMUInt#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("byte_enable", 5), Conc#(TLM2Defines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("burst_mode", 6), Conc#(TLM2Defines::TLMBurstMode)), Meta#(MetaField#("burst_size", 7), Conc#(TLM2Defines::TLMBurstSize#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("prty", 8), Conc#(TLM2Defines::TLMUInt#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("lock", 9), Conc#(Bool)), Meta#(MetaField#("thread_id", 10), Conc#(TLM2Defines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("transaction_id", 11), Conc#(TLM2Defines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("export_id", 12), Conc#(TLM2Defines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("custom", 13), Conc#(TLM2Defines::TLMCustom#(id_size, addr_size, data_size, uint_size, cstm_type)))))))} {Generic#(TLM2Defines::TLMBurstMode, Meta#(MetaData#("TLMBurstMode", "TLM2Defines", void, 4), Either#(Meta#(MetaConsAnon#("INCR", 0, 0), void), Either#(Meta#(MetaConsAnon#("WRAP", 1, 0), void), Either#(Meta#(MetaConsAnon#("CNST", 2, 0), void), Meta#(MetaConsAnon#("UNKNOWN", 3, 0), void))))))} {Generic#(TLM2Defines::TLMCommand, Meta#(MetaData#("TLMCommand", "TLM2Defines", void, 3), Either#(Meta#(MetaConsAnon#("READ", 0, 0), void), Either#(Meta#(MetaConsAnon#("WRITE", 1, 0), void), Meta#(MetaConsAnon#("UNKNOWN", 2, 0), void)))))} {Generic#(TLM2Defines::TLMMode, Meta#(MetaData#("TLMMode", "TLM2Defines", void, 4), Either#(Meta#(MetaConsAnon#("REGULAR", 0, 0), void), Either#(Meta#(MetaConsAnon#("DEBUG", 1, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL", 2, 0), void), Meta#(MetaConsAnon#("UNKNOWN", 3, 0), void))))))} {Generic#(TLM2Defines::TLMReadWriteRecvIFC#(req, resp), Meta#(MetaData#("TLMReadWriteRecvIFC", "TLM2Defines", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("TLMReadWriteRecvIFC", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(TLM2Defines::TLMRecvIFC#(req, resp))), Meta#(MetaField#("write", 1), Conc#(TLM2Defines::TLMRecvIFC#(req, resp)))))))} {Generic#(TLM2Defines::TLMReadWriteSendIFC#(req, resp), Meta#(MetaData#("TLMReadWriteSendIFC", "TLM2Defines", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("TLMReadWriteSendIFC", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(TLM2Defines::TLMSendIFC#(req, resp))), Meta#(MetaField#("write", 1), Conc#(TLM2Defines::TLMSendIFC#(req, resp)))))))} {Generic#(TLM2Defines::TLMRecvIFC#(req, resp), Meta#(MetaData#("TLMRecvIFC", "TLM2Defines", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("TLMRecvIFC", 0, 2), Tuple2#(Meta#(MetaField#("tx", 0), Conc#(GetPut::Get#(resp))), Meta#(MetaField#("rx", 1), Conc#(GetPut::Put#(req)))))))} {Generic#(TLM2Defines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("TLMRequest", "TLM2Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 2), Either#(Meta#(MetaConsAnon#("Descriptor", 0, 1), Meta#(MetaField#("_1", 0), Conc#(TLM2Defines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)))), Meta#(MetaConsAnon#("Data", 1, 1), Meta#(MetaField#("_1", 0), Conc#(TLM2Defines::RequestData#(id_size, addr_size, data_size, uint_size, cstm_type)))))))} {Generic#(TLM2Defines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("TLMResponse", "TLM2Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 1), Meta#(MetaConsNamed#("TLMResponse", 0, 8), Tuple8#(Meta#(MetaField#("command", 0), Conc#(TLM2Defines::TLMCommand)), Meta#(MetaField#("data", 1), Conc#(TLM2Defines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("status", 2), Conc#(TLM2Defines::TLMStatus)), Meta#(MetaField#("prty", 3), Conc#(TLM2Defines::TLMUInt#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("thread_id", 4), Conc#(TLM2Defines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("transaction_id", 5), Conc#(TLM2Defines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("export_id", 6), Conc#(TLM2Defines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("custom", 7), Conc#(TLM2Defines::TLMCustom#(id_size, addr_size, data_size, uint_size, cstm_type)))))))} {Generic#(TLM2Defines::TLMSendIFC#(req, resp), Meta#(MetaData#("TLMSendIFC", "TLM2Defines", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("TLMSendIFC", 0, 2), Tuple2#(Meta#(MetaField#("tx", 0), Conc#(GetPut::Get#(req))), Meta#(MetaField#("rx", 1), Conc#(GetPut::Put#(resp)))))))} {Generic#(TLM2Defines::TLMStatus, Meta#(MetaData#("TLMStatus", "TLM2Defines", void, 4), Either#(Meta#(MetaConsAnon#("SUCCESS", 0, 0), void), Either#(Meta#(MetaConsAnon#("ERROR", 1, 0), void), Either#(Meta#(MetaConsAnon#("NO_RESPONSE", 2, 0), void), Meta#(MetaConsAnon#("UNKNOWN", 3, 0), void))))))} {Generic#(TLM2Defines::TLMTransformIFC#(req, resp), Meta#(MetaData#("TLMTransformIFC", "TLM2Defines", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("TLMTransformIFC", 0, 2), Tuple2#(Meta#(MetaField#("in", 0), Conc#(TLM2Defines::TLMRecvIFC#(req, resp))), Meta#(MetaField#("out", 1), Conc#(TLM2Defines::TLMSendIFC#(req, resp)))))))} {Generic#(TLM3Api::ApiRecvIFC#(req_t, resp_t), Meta#(MetaData#("ApiRecvIFC", "TLM3Api", Tuple2#(StarArg#(req_t), StarArg#(resp_t)), 1), Meta#(MetaConsNamed#("ApiRecvIFC", 0, 2), Tuple2#(Meta#(MetaField#("scemi", 0), Conc#(ClientServer::Server#(TLM3Api::Chunk, TLM3Api::Chunk))), Meta#(MetaField#("out", 1), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t)))))))} {Generic#(TLM3Api::ApiSendIFC#(req_t, resp_t), Meta#(MetaData#("ApiSendIFC", "TLM3Api", Tuple2#(StarArg#(req_t), StarArg#(resp_t)), 1), Meta#(MetaConsNamed#("ApiSendIFC", 0, 2), Tuple2#(Meta#(MetaField#("in", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("scemi", 1), Conc#(ClientServer::Client#(TLM3Api::Chunk, TLM3Api::Chunk)))))))} {Generic#(TLM3Api::CFIFO#(a), Meta#(MetaData#("CFIFO", "TLM3Api", StarArg#(a), 1), Meta#(MetaConsNamed#("CFIFO", 0, 4), Tuple4#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(Bool)), Meta#(MetaField#("clear", 3), Conc#(Action))))))} {Generic#(TLM3Api::RecvState, Meta#(MetaData#("RecvState", "TLM3Api", void, 5), Either#(Meta#(MetaConsAnon#("RHeader0", 0, 0), void), Either#(Meta#(MetaConsAnon#("RHeader1", 1, 0), void), Either#(Meta#(MetaConsAnon#("RAddr", 2, 0), void), Either#(Meta#(MetaConsAnon#("RUser", 3, 0), void), Meta#(MetaConsAnon#("RData", 4, 0), void)))))))} {Generic#(TLM3Api::SendState, Meta#(MetaData#("SendState", "TLM3Api", void, 7), Either#(Meta#(MetaConsAnon#("SHeader0", 0, 0), void), Either#(Meta#(MetaConsAnon#("SHeader1", 1, 0), void), Either#(Meta#(MetaConsAnon#("SAddrRead", 2, 0), void), Either#(Meta#(MetaConsAnon#("SAddrWrite", 3, 0), void), Either#(Meta#(MetaConsAnon#("SUserRead", 4, 0), void), Either#(Meta#(MetaConsAnon#("SUserWrite", 5, 0), void), Meta#(MetaConsAnon#("SData", 6, 0), void)))))))))} {Generic#(TLM3Api::TLMRequestHeader, Meta#(MetaData#("TLMRequestHeader", "TLM3Api", void, 1), Meta#(MetaConsNamed#("TLMRequestHeader", 0, 2), Tuple2#(Meta#(MetaField#("b_length", 0), Conc#(TLM3Defines::TLMBurstLong)), Meta#(MetaField#("params", 1), Conc#(TLM3Api::TLMRequestParams))))))} {Generic#(TLM3Api::TLMRequestParams, Meta#(MetaData#("TLMRequestParams", "TLM3Api", void, 1), Meta#(MetaConsNamed#("TLMRequestParams", 0, 16), Tuple16#(Meta#(MetaField#("command", 0), Conc#(TLM3Defines::TLMCommand)), Meta#(MetaField#("burst_mode", 1), Conc#(TLM3Defines::TLMBurstMode)), Meta#(MetaField#("b_size", 2), Conc#(TLM3Defines::TLMBSize)), Meta#(MetaField#("lock", 3), Conc#(TLM3Defines::TLMLock)), Meta#(MetaField#("transaction_id", 4), Conc#(TLM3Api::TLMHeaderId)), Meta#(MetaField#("privilege", 5), Conc#(TLM3Defines::TLMPrivilege)), Meta#(MetaField#("security", 6), Conc#(TLM3Defines::TLMSecurity)), Meta#(MetaField#("access", 7), Conc#(TLM3Defines::TLMAccess)), Meta#(MetaField#("cache", 8), Conc#(TLM3Defines::TLMCache)), Meta#(MetaField#("buffer", 9), Conc#(TLM3Defines::TLMBuffer)), Meta#(MetaField#("read_allocate", 10), Conc#(TLM3Defines::TLMAllocate)), Meta#(MetaField#("write_allocate", 11), Conc#(TLM3Defines::TLMAllocate)), Meta#(MetaField#("region", 12), Conc#(TLM3Defines::TLMRegion)), Meta#(MetaField#("qos", 13), Conc#(TLM3Defines::TLMQos)), Meta#(MetaField#("cntrl_flow", 14), Conc#(Bool)), Meta#(MetaField#("spec_byte_enable", 15), Conc#(Bool))))))} {Generic#(TLM3Api::TLMResponseHeader, Meta#(MetaData#("TLMResponseHeader", "TLM3Api", void, 1), Meta#(MetaConsNamed#("TLMResponseHeader", 0, 2), Tuple2#(Meta#(MetaField#("b_length", 0), Conc#(TLM3Defines::TLMBurstLong)), Meta#(MetaField#("params", 1), Conc#(TLM3Api::TLMResponseParams))))))} {Generic#(TLM3Api::TLMResponseParams, Meta#(MetaData#("TLMResponseParams", "TLM3Api", void, 1), Meta#(MetaConsNamed#("TLMResponseParams", 0, 4), Tuple4#(Meta#(MetaField#("command", 0), Conc#(TLM3Defines::TLMCommand)), Meta#(MetaField#("status", 1), Conc#(TLM3Defines::TLMStatus)), Meta#(MetaField#("transaction_id", 2), Conc#(TLM3Api::TLMHeaderId)), Meta#(MetaField#("error", 3), Conc#(TLM3Defines::TLMErrorCode))))))} {Generic#(TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("RequestData", "TLM3Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("RequestData", 0, 5), Tuple5#(Meta#(MetaField#("data", 0), Conc#(TLM3Defines::TLMData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("user", 1), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("byte_enable", 2), Conc#(TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("transaction_id", 3), Conc#(TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("is_last", 4), Conc#(Bool))))))} {Generic#(TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("RequestDescriptor", "TLM3Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("RequestDescriptor", 0, 23), Tuple23#(Meta#(MetaField#("command", 0), Conc#(TLM3Defines::TLMCommand)), Meta#(MetaField#("mode", 1), Conc#(TLM3Defines::TLMMode)), Meta#(MetaField#("addr", 2), Conc#(TLM3Defines::TLMAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("user_addr", 3), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("region", 4), Conc#(TLM3Defines::TLMRegion)), Meta#(MetaField#("data", 5), Conc#(TLM3Defines::TLMData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("b_length", 6), Conc#(TLM3Defines::TLMBLength#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("user", 7), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("byte_enable", 8), Conc#(TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("burst_mode", 9), Conc#(TLM3Defines::TLMBurstMode)), Meta#(MetaField#("b_size", 10), Conc#(TLM3Defines::TLMBSize)), Meta#(MetaField#("prty", 11), Conc#(TLM3Defines::TLMQos)), Meta#(MetaField#("lock", 12), Conc#(TLM3Defines::TLMLock)), Meta#(MetaField#("transaction_id", 13), Conc#(TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("privilege", 14), Conc#(TLM3Defines::TLMPrivilege)), Meta#(MetaField#("security", 15), Conc#(TLM3Defines::TLMSecurity)), Meta#(MetaField#("access", 16), Conc#(TLM3Defines::TLMAccess)), Meta#(MetaField#("cache", 17), Conc#(TLM3Defines::TLMCache)), Meta#(MetaField#("buffer", 18), Conc#(TLM3Defines::TLMBuffer)), Meta#(MetaField#("read_allocate", 19), Conc#(TLM3Defines::TLMAllocate)), Meta#(MetaField#("write_allocate", 20), Conc#(TLM3Defines::TLMAllocate)), Meta#(MetaField#("mark", 21), Conc#(TLM3Defines::TLMMark)), Meta#(MetaField#("cntrl_flow", 22), Conc#(Bool))))))} {Generic#(TLM3Defines::SFIFO#(a, b), Meta#(MetaData#("SFIFO", "TLM3Defines", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("SFIFO", 0, 4), Tuple4#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("clear", 3), Conc#(Action))))))} {Generic#(TLM3Defines::TCounter, Meta#(MetaData#("TCounter", "TLM3Defines", void, 1), Meta#(MetaConsNamed#("TCounter", 0, 8), Tuple8#(Meta#(MetaField#("incr", 0), Conc#(Action)), Meta#(MetaField#("decr", 1), Conc#(Action)), Meta#(MetaField#("isEq", 2), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("setNext", 3), ConcPoly#(TLM3Defines::TCounter_setNext)), Meta#(MetaField#("set", 4), ConcPoly#(TLM3Defines::TCounter_set)), Meta#(MetaField#("getNext", 5), ConcPoly#(TLM3Defines::TCounter_getNext)), Meta#(MetaField#("get", 6), ConcPoly#(TLM3Defines::TCounter_get)), Meta#(MetaField#("clear", 7), Conc#(Action))))))} {Generic#(TLM3Defines::TLMAccess, Meta#(MetaData#("TLMAccess", "TLM3Defines", void, 2), Either#(Meta#(MetaConsAnon#("DATA", 0, 0), void), Meta#(MetaConsAnon#("INST", 1, 0), void))))} {Generic#(TLM3Defines::TLMAllocate, Meta#(MetaData#("TLMAllocate", "TLM3Defines", void, 2), Either#(Meta#(MetaConsAnon#("NO_ALLOCATE", 0, 0), void), Meta#(MetaConsAnon#("ALLOCATE", 1, 0), void))))} {Generic#(TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("TLMBEKind", "TLM3Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 2), Either#(Meta#(MetaConsAnon#("Calculate", 0, 0), void), Meta#(MetaConsAnon#("Specify", 1, 1), Meta#(MetaField#("_1", 0), Conc#(TLM3Defines::TLMByteEn#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(TLM3Defines::TLMBSize, Meta#(MetaData#("TLMBSize", "TLM3Defines", void, 8), Either#(Meta#(MetaConsAnon#("BITS8", 0, 0), void), Either#(Meta#(MetaConsAnon#("BITS16", 1, 0), void), Either#(Meta#(MetaConsAnon#("BITS32", 2, 0), void), Either#(Meta#(MetaConsAnon#("BITS64", 3, 0), void), Either#(Meta#(MetaConsAnon#("BITS128", 4, 0), void), Either#(Meta#(MetaConsAnon#("BITS256", 5, 0), void), Either#(Meta#(MetaConsAnon#("BITS512", 6, 0), void), Meta#(MetaConsAnon#("BITS1024", 7, 0), void))))))))))} {Generic#(TLM3Defines::TLMBuffer, Meta#(MetaData#("TLMBuffer", "TLM3Defines", void, 2), Either#(Meta#(MetaConsAnon#("NO_BUFFER", 0, 0), void), Meta#(MetaConsAnon#("BUFFER", 1, 0), void))))} {Generic#(TLM3Defines::TLMBurstMode, Meta#(MetaData#("TLMBurstMode", "TLM3Defines", void, 4), Either#(Meta#(MetaConsAnon#("INCR", 0, 0), void), Either#(Meta#(MetaConsAnon#("WRAP", 1, 0), void), Either#(Meta#(MetaConsAnon#("CNST", 2, 0), void), Meta#(MetaConsAnon#("UNKNOWN", 3, 0), void))))))} {Generic#(TLM3Defines::TLMCache, Meta#(MetaData#("TLMCache", "TLM3Defines", void, 2), Either#(Meta#(MetaConsAnon#("NO_CACHE", 0, 0), void), Meta#(MetaConsAnon#("CACHE", 1, 0), void))))} {Generic#(TLM3Defines::TLMCommand, Meta#(MetaData#("TLMCommand", "TLM3Defines", void, 3), Either#(Meta#(MetaConsAnon#("READ", 0, 0), void), Either#(Meta#(MetaConsAnon#("WRITE", 1, 0), void), Meta#(MetaConsAnon#("UNKNOWN", 2, 0), void)))))} {Generic#(TLM3Defines::TLMErrorCode, Meta#(MetaData#("TLMErrorCode", "TLM3Defines", void, 8), Either#(Meta#(MetaConsAnon#("NONE", 0, 0), void), Either#(Meta#(MetaConsAnon#("SPLIT_CONTINUE", 1, 0), void), Either#(Meta#(MetaConsAnon#("RETRY", 2, 0), void), Either#(Meta#(MetaConsAnon#("SPLIT", 3, 0), void), Either#(Meta#(MetaConsAnon#("RW_ONLY", 4, 0), void), Either#(Meta#(MetaConsAnon#("UNMAPPED", 5, 0), void), Either#(Meta#(MetaConsAnon#("SLVERR", 6, 0), void), Meta#(MetaConsAnon#("DECERR", 7, 0), void))))))))))} {Generic#(TLM3Defines::TLMFamily, Meta#(MetaData#("TLMFamily", "TLM3Defines", void, 5), Either#(Meta#(MetaConsAnon#("DEFAULT", 0, 0), void), Either#(Meta#(MetaConsAnon#("APB", 1, 0), void), Either#(Meta#(MetaConsAnon#("AHB", 2, 0), void), Either#(Meta#(MetaConsAnon#("AXI", 3, 0), void), Meta#(MetaConsAnon#("AXI4", 4, 0), void)))))))} {Generic#(TLM3Defines::TLMLock, Meta#(MetaData#("TLMLock", "TLM3Defines", void, 4), Either#(Meta#(MetaConsAnon#("NORMAL", 0, 0), void), Either#(Meta#(MetaConsAnon#("EXCLUSIVE", 1, 0), void), Either#(Meta#(MetaConsAnon#("LOCKED", 2, 0), void), Meta#(MetaConsAnon#("RESERVED", 3, 0), void))))))} {Generic#(TLM3Defines::TLMMark, Meta#(MetaData#("TLMMark", "TLM3Defines", void, 3), Either#(Meta#(MetaConsAnon#("LAST", 0, 0), void), Either#(Meta#(MetaConsAnon#("NOT_LAST", 1, 0), void), Meta#(MetaConsAnon#("OPEN", 2, 0), void)))))} {Generic#(TLM3Defines::TLMMode, Meta#(MetaData#("TLMMode", "TLM3Defines", void, 4), Either#(Meta#(MetaConsAnon#("REGULAR", 0, 0), void), Either#(Meta#(MetaConsAnon#("DEBUG", 1, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL", 2, 0), void), Meta#(MetaConsAnon#("UNKNOWN", 3, 0), void))))))} {Generic#(TLM3Defines::TLMModify, Meta#(MetaData#("TLMModify", "TLM3Defines", void, 2), Either#(Meta#(MetaConsAnon#("NO_MODIFY", 0, 0), void), Meta#(MetaConsAnon#("MODIFY", 1, 0), void))))} {Generic#(TLM3Defines::TLMPrivilege, Meta#(MetaData#("TLMPrivilege", "TLM3Defines", void, 2), Either#(Meta#(MetaConsAnon#("NORMAL", 0, 0), void), Meta#(MetaConsAnon#("PRIVILEGED", 1, 0), void))))} {Generic#(TLM3Defines::TLMReadWriteRecvIFC#(req, resp), Meta#(MetaData#("TLMReadWriteRecvIFC", "TLM3Defines", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("TLMReadWriteRecvIFC", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(TLM3Defines::TLMRecvIFC#(req, resp))), Meta#(MetaField#("write", 1), Conc#(TLM3Defines::TLMRecvIFC#(req, resp)))))))} {Generic#(TLM3Defines::TLMReadWriteSendIFC#(req, resp), Meta#(MetaData#("TLMReadWriteSendIFC", "TLM3Defines", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("TLMReadWriteSendIFC", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(TLM3Defines::TLMSendIFC#(req, resp))), Meta#(MetaField#("write", 1), Conc#(TLM3Defines::TLMSendIFC#(req, resp)))))))} {Generic#(TLM3Defines::TLMRecvIFC#(req, resp), Meta#(MetaData#("TLMRecvIFC", "TLM3Defines", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("TLMRecvIFC", 0, 2), Tuple2#(Meta#(MetaField#("tx", 0), Conc#(GetPut::Get#(resp))), Meta#(MetaField#("rx", 1), Conc#(GetPut::Put#(req)))))))} {Generic#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("TLMRequest", "TLM3Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 2), Either#(Meta#(MetaConsAnon#("Descriptor", 0, 1), Meta#(MetaField#("_1", 0), Conc#(TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)))), Meta#(MetaConsAnon#("Data", 1, 1), Meta#(MetaField#("_1", 0), Conc#(TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size)))))))} {Generic#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("TLMResponse", "TLM3Defines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("TLMResponse", 0, 7), Tuple7#(Meta#(MetaField#("command", 0), Conc#(TLM3Defines::TLMCommand)), Meta#(MetaField#("data", 1), Conc#(TLM3Defines::TLMData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("status", 2), Conc#(TLM3Defines::TLMStatus)), Meta#(MetaField#("user", 3), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("prty", 4), Conc#(TLM3Defines::TLMQos)), Meta#(MetaField#("transaction_id", 5), Conc#(TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("is_last", 6), Conc#(Bool))))))} {Generic#(TLM3Defines::TLMSecurity, Meta#(MetaData#("TLMSecurity", "TLM3Defines", void, 2), Either#(Meta#(MetaConsAnon#("SECURE", 0, 0), void), Meta#(MetaConsAnon#("NON_SECURE", 1, 0), void))))} {Generic#(TLM3Defines::TLMSendIFC#(req, resp), Meta#(MetaData#("TLMSendIFC", "TLM3Defines", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("TLMSendIFC", 0, 2), Tuple2#(Meta#(MetaField#("tx", 0), Conc#(GetPut::Get#(req))), Meta#(MetaField#("rx", 1), Conc#(GetPut::Put#(resp)))))))} {Generic#(TLM3Defines::TLMStatus, Meta#(MetaData#("TLMStatus", "TLM3Defines", void, 4), Either#(Meta#(MetaConsAnon#("SUCCESS", 0, 0), void), Either#(Meta#(MetaConsAnon#("ERROR", 1, 0), void), Either#(Meta#(MetaConsAnon#("EXOKAY", 2, 0), void), Meta#(MetaConsAnon#("UNKNOWN", 3, 0), void))))))} {Generic#(TLM3Defines::TLMTransformIFC#(req, resp), Meta#(MetaData#("TLMTransformIFC", "TLM3Defines", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("TLMTransformIFC", 0, 2), Tuple2#(Meta#(MetaField#("in", 0), Conc#(TLM3Defines::TLMRecvIFC#(req, resp))), Meta#(MetaField#("out", 1), Conc#(TLM3Defines::TLMSendIFC#(req, resp)))))))} {Generic#(TLM3FlowControl::TLMFlow#(a), Meta#(MetaData#("TLMFlow", "TLM3FlowControl", StarArg#(a), 1), Meta#(MetaConsNamed#("TLMFlow", 0, 2), Tuple2#(Meta#(MetaField#("tx", 0), Conc#(GetPut::Get#(a))), Meta#(MetaField#("rx", 1), Conc#(GetPut::Put#(a)))))))} {Generic#(TLM3Reduce::MD, Meta#(MetaData#("MD", "TLM3Reduce", void, 3), Either#(Meta#(MetaConsAnon#("Rd", 0, 0), void), Either#(Meta#(MetaConsAnon#("Wr", 1, 0), void), Meta#(MetaConsAnon#("RdOrWr", 2, 0), void)))))} {Generic#(TLM3Reorder::TLMReorder#(m, ln, req_t, resp_t), Meta#(MetaData#("TLMReorder", "TLM3Reorder", Tuple4#(NumArg#(m), NumArg#(ln), StarArg#(req_t), StarArg#(resp_t)), 1), Meta#(MetaConsNamed#("TLMReorder", 0, 2), Tuple2#(Meta#(MetaField#("in", 0), Conc#(TLM3Defines::TLMRecvIFC#(req_t, resp_t))), Meta#(MetaField#("out", 1), Conc#(TLM3Defines::TLMSendIFC#(req_t, resp_t)))))))} {Generic#(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size), Meta#(MetaData#("TLMTransfer", "TLM3Stream", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(length_size), NumArg#(user_size)), 1), Meta#(MetaConsNamed#("TLMTransfer", 0, 7), Tuple7#(Meta#(MetaField#("data", 0), Conc#(TLM3Defines::TLMData#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("dest", 1), Conc#(TLM3Defines::TLMAddr#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("user", 2), Conc#(TLM3Defines::TLMUser#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("transaction_id", 3), Conc#(TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("keep", 4), Conc#(TLM3Defines::TLMByteEn#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("strb", 5), Conc#(TLM3Defines::TLMByteEn#(id_size, addr_size, data_size, length_size, user_size))), Meta#(MetaField#("is_last", 6), Conc#(Bool))))))} {Generic#(TLMDefines::RequestData#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("RequestData", "TLMDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 1), Meta#(MetaConsNamed#("RequestData", 0, 3), Tuple3#(Meta#(MetaField#("data", 0), Conc#(TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("transaction_id", 1), Conc#(TLMDefines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("custom", 2), Conc#(TLMDefines::TLMCustom#(id_size, addr_size, data_size, uint_size, cstm_type)))))))} {Generic#(TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("RequestDescriptor", "TLMDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 1), Meta#(MetaConsNamed#("RequestDescriptor", 0, 14), Tuple14#(Meta#(MetaField#("command", 0), Conc#(TLMDefines::TLMCommand)), Meta#(MetaField#("mode", 1), Conc#(TLMDefines::TLMMode)), Meta#(MetaField#("addr", 2), Conc#(TLMDefines::TLMAddr#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("data", 3), Conc#(TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("burst_length", 4), Conc#(TLMDefines::TLMUInt#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("byte_enable", 5), Conc#(TLMDefines::TLMByteEn#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("burst_mode", 6), Conc#(TLMDefines::TLMBurstMode)), Meta#(MetaField#("burst_size", 7), Conc#(TLMDefines::TLMBurstSize#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("prty", 8), Conc#(TLMDefines::TLMUInt#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("lock", 9), Conc#(Bool)), Meta#(MetaField#("thread_id", 10), Conc#(TLMDefines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("transaction_id", 11), Conc#(TLMDefines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("export_id", 12), Conc#(TLMDefines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("custom", 13), Conc#(TLMDefines::TLMCustom#(id_size, addr_size, data_size, uint_size, cstm_type)))))))} {Generic#(TLMDefines::TLMBurstMode, Meta#(MetaData#("TLMBurstMode", "TLMDefines", void, 4), Either#(Meta#(MetaConsAnon#("INCR", 0, 0), void), Either#(Meta#(MetaConsAnon#("CNST", 1, 0), void), Either#(Meta#(MetaConsAnon#("WRAP", 2, 0), void), Meta#(MetaConsAnon#("UNKNOWN", 3, 0), void))))))} {Generic#(TLMDefines::TLMCommand, Meta#(MetaData#("TLMCommand", "TLMDefines", void, 3), Either#(Meta#(MetaConsAnon#("READ", 0, 0), void), Either#(Meta#(MetaConsAnon#("WRITE", 1, 0), void), Meta#(MetaConsAnon#("UNKNOWN", 2, 0), void)))))} {Generic#(TLMDefines::TLMMode, Meta#(MetaData#("TLMMode", "TLMDefines", void, 3), Either#(Meta#(MetaConsAnon#("REGULAR", 0, 0), void), Either#(Meta#(MetaConsAnon#("DEBUG", 1, 0), void), Meta#(MetaConsAnon#("CONTROL", 2, 0), void)))))} {Generic#(TLMDefines::TLMReadWriteRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("TLMReadWriteRecvIFC", "TLMDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 1), Meta#(MetaConsNamed#("TLMReadWriteRecvIFC", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(TLMDefines::TLMRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("write", 1), Conc#(TLMDefines::TLMRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type)))))))} {Generic#(TLMDefines::TLMReadWriteSendIFC#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("TLMReadWriteSendIFC", "TLMDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 1), Meta#(MetaConsNamed#("TLMReadWriteSendIFC", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(TLMDefines::TLMSendIFC#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("write", 1), Conc#(TLMDefines::TLMSendIFC#(id_size, addr_size, data_size, uint_size, cstm_type)))))))} {Generic#(TLMDefines::TLMRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("TLMRecvIFC", "TLMDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 1), Meta#(MetaConsNamed#("TLMRecvIFC", 0, 2), Tuple2#(Meta#(MetaField#("tx", 0), Conc#(GetPut::Get#(TLMDefines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type)))), Meta#(MetaField#("rx", 1), Conc#(GetPut::Put#(TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))))))))} {Generic#(TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("TLMRequest", "TLMDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 2), Either#(Meta#(MetaConsAnon#("Descriptor", 0, 1), Meta#(MetaField#("_1", 0), Conc#(TLMDefines::RequestDescriptor#(id_size, addr_size, data_size, uint_size, cstm_type)))), Meta#(MetaConsAnon#("Data", 1, 1), Meta#(MetaField#("_1", 0), Conc#(TLMDefines::RequestData#(id_size, addr_size, data_size, uint_size, cstm_type)))))))} {Generic#(TLMDefines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("TLMResponse", "TLMDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 1), Meta#(MetaConsNamed#("TLMResponse", 0, 8), Tuple8#(Meta#(MetaField#("command", 0), Conc#(TLMDefines::TLMCommand)), Meta#(MetaField#("data", 1), Conc#(TLMDefines::TLMData#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("status", 2), Conc#(TLMDefines::TLMStatus)), Meta#(MetaField#("prty", 3), Conc#(TLMDefines::TLMUInt#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("thread_id", 4), Conc#(TLMDefines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("transaction_id", 5), Conc#(TLMDefines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("export_id", 6), Conc#(TLMDefines::TLMId#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("custom", 7), Conc#(TLMDefines::TLMCustom#(id_size, addr_size, data_size, uint_size, cstm_type)))))))} {Generic#(TLMDefines::TLMSendIFC#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("TLMSendIFC", "TLMDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 1), Meta#(MetaConsNamed#("TLMSendIFC", 0, 2), Tuple2#(Meta#(MetaField#("tx", 0), Conc#(GetPut::Get#(TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type)))), Meta#(MetaField#("rx", 1), Conc#(GetPut::Put#(TLMDefines::TLMResponse#(id_size, addr_size, data_size, uint_size, cstm_type))))))))} {Generic#(TLMDefines::TLMStatus, Meta#(MetaData#("TLMStatus", "TLMDefines", void, 3), Either#(Meta#(MetaConsAnon#("SUCCESS", 0, 0), void), Either#(Meta#(MetaConsAnon#("ERROR", 1, 0), void), Meta#(MetaConsAnon#("NO_RESPONSE", 2, 0), void)))))} {Generic#(TLMDefines::TLMTransformIFC#(id_size, addr_size, data_size, uint_size, cstm_type), Meta#(MetaData#("TLMTransformIFC", "TLMDefines", Tuple5#(NumArg#(id_size), NumArg#(addr_size), NumArg#(data_size), NumArg#(uint_size), StarArg#(cstm_type)), 1), Meta#(MetaConsNamed#("TLMTransformIFC", 0, 2), Tuple2#(Meta#(MetaField#("in", 0), Conc#(TLMDefines::TLMRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type))), Meta#(MetaField#("out", 1), Conc#(TLMDefines::TLMSendIFC#(id_size, addr_size, data_size, uint_size, cstm_type)))))))} {Generic#(TRAM::TRAMreq#(tg, adr, dta), Meta#(MetaData#("TRAMreq", "TRAM", Tuple3#(StarArg#(tg), StarArg#(adr), StarArg#(dta)), 2), Either#(Meta#(MetaConsAnon#("Read", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Tuple2#(tg, adr)))), Meta#(MetaConsAnon#("Write", 1, 1), Meta#(MetaField#("_1", 0), Conc#(Tuple2#(adr, dta)))))))} {Generic#(TV_Info::Info_CPU_to_Verifier, Meta#(MetaData#("Info_CPU_to_Verifier", "TV_Info", void, 1), Meta#(MetaConsNamed#("Info_CPU_to_Verifier", 0, 2), Tuple2#(Meta#(MetaField#("num_bytes", 0), Conc#(Bit#(32))), Meta#(MetaField#("vec_bytes", 1), Conc#(TV_Info::TV_Vec_Bytes))))))} {Generic#(TV_Info::Trace_Data, Meta#(MetaData#("Trace_Data", "TV_Info", void, 1), Meta#(MetaConsNamed#("Trace_Data", 0, 10), Tuple10#(Meta#(MetaField#("op", 0), Conc#(TV_Info::Trace_Op)), Meta#(MetaField#("pc", 1), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("instr_sz", 2), Conc#(ISA_Decls::ISize)), Meta#(MetaField#("instr", 3), Conc#(Bit#(32))), Meta#(MetaField#("rd", 4), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("word1", 5), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("word2", 6), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("word3", 7), Conc#(Bit#(64))), Meta#(MetaField#("word4", 8), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("word5", 9), Conc#(Bit#(64)))))))} {Generic#(TV_Info::Trace_Op, Meta#(MetaData#("Trace_Op", "TV_Info", void, 18), Either#(Meta#(MetaConsAnon#("TRACE_RESET", 0, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_GPR_WRITE", 1, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_FPR_WRITE", 2, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_CSR_WRITE", 3, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_MEM_WRITE", 4, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_OTHER", 5, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_I_RD", 6, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_F_GRD", 7, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_F_FRD", 8, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_I_LOAD", 9, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_F_LOAD", 10, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_I_STORE", 11, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_F_STORE", 12, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_AMO", 13, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_TRAP", 14, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_RET", 15, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_CSRRX", 16, 0), void), Meta#(MetaConsAnon#("TRACE_INTR", 17, 0), void))))))))))))))))))))} {Generic#(TV_Taps::DM_CSR_Tap_IFC, Meta#(MetaData#("DM_CSR_Tap_IFC", "TV_Taps", void, 1), Meta#(MetaConsNamed#("DM_CSR_Tap_IFC", 0, 3), Tuple3#(Meta#(MetaField#("client", 0), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("server", 1), Conc#(ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("trace_data_out", 2), Conc#(GetPut::Get#(TV_Info::Trace_Data)))))))} {Generic#(TV_Taps::DM_FPR_Tap_IFC, Meta#(MetaData#("DM_FPR_Tap_IFC", "TV_Taps", void, 1), Meta#(MetaConsNamed#("DM_FPR_Tap_IFC", 0, 3), Tuple3#(Meta#(MetaField#("client", 0), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("server", 1), Conc#(ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("trace_data_out", 2), Conc#(GetPut::Get#(TV_Info::Trace_Data)))))))} {Generic#(TV_Taps::DM_GPR_Tap_IFC, Meta#(MetaData#("DM_GPR_Tap_IFC", "TV_Taps", void, 1), Meta#(MetaConsNamed#("DM_GPR_Tap_IFC", 0, 3), Tuple3#(Meta#(MetaField#("client", 0), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("server", 1), Conc#(ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("trace_data_out", 2), Conc#(GetPut::Get#(TV_Info::Trace_Data)))))))} {Generic#(TV_Taps::DM_Mem_Tap_IFC, Meta#(MetaData#("DM_Mem_Tap_IFC", "TV_Taps", void, 1), Meta#(MetaConsNamed#("DM_Mem_Tap_IFC", 0, 3), Tuple3#(Meta#(MetaField#("slave", 0), Conc#(AXI4_Types::AXI4_Slave#(Fabric_Defs::Wd_MId_2x3, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data_Periph, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User))), Meta#(MetaField#("master", 1), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId_2x3, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data_Periph, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User))), Meta#(MetaField#("trace_data_out", 2), Conc#(GetPut::Get#(TV_Info::Trace_Data)))))))} {Generic#(TagController::AddrFrame, Meta#(MetaData#("AddrFrame", "TagController", void, 1), Meta#(MetaConsNamed#("AddrFrame", 0, 4), Tuple4#(Meta#(MetaField#("tagOnlyRead", 0), Conc#(Bool)), Meta#(MetaField#("bank", 1), Conc#(MemTypesCHERI::CapOffsetInLine)), Meta#(MetaField#("masterID", 2), Conc#(MemTypesCHERI::CheriMasterID)), Meta#(MetaField#("transactionID", 3), Conc#(MemTypesCHERI::CheriTransactionID))))))} {Generic#(TagController::MemReqType, Meta#(MetaData#("MemReqType", "TagController", void, 2), Either#(Meta#(MetaConsAnon#("TagLookupReq", 0, 0), void), Meta#(MetaConsAnon#("StdReq", 1, 0), void))))} {Generic#(TagController::TagControllerIfc, Meta#(MetaData#("TagControllerIfc", "TagController", void, 1), Meta#(MetaConsNamed#("TagControllerIfc", 0, 3), Tuple3#(Meta#(MetaField#("cache", 0), Conc#(MasterSlaveCHERI::Slave#(MemTypesCHERI::CheriMemRequest, MemTypesCHERI::CheriMemResponse))), Meta#(MetaField#("memory", 1), Conc#(MasterSlaveCHERI::Master#(MemTypesCHERI::CheriMemRequest, MemTypesCHERI::CheriMemResponse))), Meta#(MetaField#("events", 2), Conc#(CacheCore::EventsCacheCore))))))} {Generic#(TagController::TagReqId, Meta#(MetaData#("TagReqId", "TagController", void, 1), Meta#(MetaConsNamed#("TagReqId", 0, 2), Tuple2#(Meta#(MetaField#("reqId", 0), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("count", 1), Conc#(TagController::ReqIdCount))))))} {Generic#(TagControllerAXI::TagControllerAXI#(id_, addr_, data_), Meta#(MetaData#("TagControllerAXI", "TagControllerAXI", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(data_)), 1), Meta#(MetaConsNamed#("TagControllerAXI", 0, 4), Tuple4#(Meta#(MetaField#("master", 0), Conc#(AXI4_Types::AXI4_Master#(6, addr_, data_, 0, 0, 0, 0, 0))), Meta#(MetaField#("slave", 1), Conc#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, 0, TagController::CapsPerFlit, 0, 0, TagController::CapsPerFlit))), Meta#(MetaField#("clear", 2), Conc#(Action)), Meta#(MetaField#("events", 3), Conc#(CacheCore::EventsCacheCore))))))} {Generic#(TokenBuffer::TokenBuffer#(m, ln, a), Meta#(MetaData#("TokenBuffer", "TokenBuffer", Tuple3#(NumArg#(m), NumArg#(ln), StarArg#(a)), 1), Meta#(MetaConsNamed#("TokenBuffer", 0, 3), Tuple3#(Meta#(MetaField#("store", 0), Conc#(function Action f(CB::TokenRange#(a, ln) x1))), Meta#(MetaField#("request", 1), Conc#(function Action f(CB::TokenRR#(a, ln) x1))), Meta#(MetaField#("get", 2), Conc#(ActionValue#(Bit#(ln))))))))} {Generic#(TriState::TriState#(t), Meta#(MetaData#("TriState", "TriState", StarArg#(t), 1), Meta#(MetaConsNamed#("TriState", 0, 2), Tuple2#(Meta#(MetaField#("io", 0), Conc#(Inout#(t))), Meta#(MetaField#("_read", 1), Conc#(t))))))} {Generic#(TriState::_TriState.TriState37#(_n0, _n1), Meta#(MetaData#("_TriState.TriState37", "TriState", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_TriState.TriState37", 0, 2), Tuple2#(Meta#(MetaField#("io", 0), Conc#(Inout_#(_n1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Tuple2#(a, b), Meta#(MetaData#("PrimPair", "Prelude", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("PrimPair", 0, 2), Tuple2#(Meta#(MetaField#("fst", 0), Conc#(a)), Meta#(MetaField#("snd", 1), Conc#(b))))))} {Generic#(Type, ConcPrim#(Type))} {Generic#(UInt#(n), Meta#(MetaData#("UInt", "Prelude", NumArg#(n), 1), Meta#(MetaConsAnon#("UInt", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(n))))))} {Generic#(UIntRange::UIntRange#(lo, hi), Meta#(MetaData#("UIntRange", "UIntRange", Tuple2#(NumArg#(lo), NumArg#(hi)), 1), Meta#(MetaConsAnon#("U", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(TLog#(TAdd#(hi, 1))))))))} {Generic#(UniqueWrappers::Wrapper#(a, b), Meta#(MetaData#("Wrapper", "UniqueWrappers", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("Wrapper", 0, 1), Meta#(MetaField#("func", 0), Conc#(function ActionValue#(b) f(a x1))))))} {Generic#(UniqueWrappers::Wrapper2#(a1, a2, b), Meta#(MetaData#("Wrapper2", "UniqueWrappers", Tuple3#(StarArg#(a1), StarArg#(a2), StarArg#(b)), 1), Meta#(MetaConsNamed#("Wrapper2", 0, 1), Meta#(MetaField#("func", 0), Conc#(function ActionValue#(b) f(a1 x1, a2 x2))))))} {Generic#(UniqueWrappers::Wrapper3#(a1, a2, a3, b), Meta#(MetaData#("Wrapper3", "UniqueWrappers", Tuple4#(StarArg#(a1), StarArg#(a2), StarArg#(a3), StarArg#(b)), 1), Meta#(MetaConsNamed#("Wrapper3", 0, 1), Meta#(MetaField#("func", 0), Conc#(function ActionValue#(b) f(a1 x1, a2 x2, a3 x3))))))} {Generic#(UnitAppendList::UAList#(a), Meta#(MetaData#("UAList", "UnitAppendList", StarArg#(a), 3), Either#(Meta#(MetaConsAnon#("NoItems", 0, 0), void), Either#(Meta#(MetaConsAnon#("One", 1, 1), Meta#(MetaField#("_1", 0), Conc#(a))), Meta#(MetaConsAnon#("Append", 2, 1), Meta#(MetaField#("_1", 0), Conc#(Tuple2#(UnitAppendList::UAList#(a), UnitAppendList::UAList#(a)))))))))} {Generic#(VRWire#(a), Meta#(MetaData#("VRWire", "PreludeBSV", StarArg#(a), 1), Meta#(MetaConsNamed#("VRWire", 0, 3), Tuple3#(Meta#(MetaField#("wset", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("wget", 1), Conc#(a)), Meta#(MetaField#("whas", 2), Conc#(Bool))))))} {Generic#(VRWire0, Meta#(MetaData#("VRWire0", "PreludeBSV", void, 1), Meta#(MetaConsNamed#("VRWire0", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(Action)), Meta#(MetaField#("whas", 1), Conc#(Bool))))))} {Generic#(VRWireN#(n), Meta#(MetaData#("VRWireN", "PreludeBSV", NumArg#(n), 1), Meta#(MetaConsNamed#("VRWireN", 0, 3), Tuple3#(Meta#(MetaField#("wset", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(n))), Meta#(MetaField#("whas", 2), Conc#(Bit#(1)))))))} {Generic#(VReg#(n), Meta#(MetaData#("VReg", "Prelude", NumArg#(n), 1), Meta#(MetaConsNamed#("VReg", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(n)))))))} {Generic#(VWire#(a), Meta#(MetaData#("VWire", "PreludeBSV", StarArg#(a), 1), Meta#(MetaConsNamed#("VWire", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("wget", 1), Conc#(a))))))} {Generic#(VWire0, Meta#(MetaData#("VWire0", "PreludeBSV", void, 1), Meta#(MetaConsNamed#("VWire0", 0, 1), Meta#(MetaField#("wset", 0), Conc#(Action)))))} {Generic#(Vector::Ascii#(n), Meta#(MetaData#("Ascii", "Vector", NumArg#(n), 1), Meta#(MetaConsAnon#("Ascii", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Vector::Vector#(n, Bit#(8)))))))} {Generic#(Vector::Vector#(n, a), Meta#(MetaData#("Vector", "Vector", Tuple2#(NumArg#(n), StarArg#(a)), 1), Vector::Vector#(n, Conc#(a))))} {Generic#(Video::CSAdder, Meta#(MetaData#("CSAdder", "Video", void, 1), Meta#(MetaConsNamed#("CSAdder", 0, 2), Tuple2#(Meta#(MetaField#("in", 0), Conc#(GetPut::Put#(Video::CSAdderIn))), Meta#(MetaField#("out", 1), Conc#(GetPut::Get#(Video::PixelData#(Bit#(8)))))))))} {Generic#(Video::CSAdderIn, Meta#(MetaData#("CSAdderIn", "Video", void, 1), Meta#(MetaConsNamed#("CSAdderIn", 0, 5), Tuple5#(Meta#(MetaField#("a", 0), Conc#(Bit#(25))), Meta#(MetaField#("b", 1), Conc#(Bit#(25))), Meta#(MetaField#("c", 2), Conc#(Bit#(25))), Meta#(MetaField#("d", 3), Conc#(Bit#(25))), Meta#(MetaField#("sync", 4), Conc#(Video::SyncData))))))} {Generic#(Video::CSMacc, Meta#(MetaData#("CSMacc", "Video", void, 1), Meta#(MetaConsNamed#("CSMacc", 0, 2), Tuple2#(Meta#(MetaField#("in", 0), Conc#(GetPut::Put#(Video::PixelData#(Bit#(24))))), Meta#(MetaField#("out", 1), Conc#(GetPut::Get#(Video::PixelData#(Bit#(8)))))))))} {Generic#(Video::CSMult, Meta#(MetaData#("CSMult", "Video", void, 1), Meta#(MetaConsNamed#("CSMult", 0, 2), Tuple2#(Meta#(MetaField#("in", 0), Conc#(GetPut::Put#(Video::CSMultIn))), Meta#(MetaField#("out", 1), Conc#(GetPut::Get#(Video::PixelData#(Bit#(25)))))))))} {Generic#(Video::CSMultIn, Meta#(MetaData#("CSMultIn", "Video", void, 1), Meta#(MetaConsNamed#("CSMultIn", 0, 3), Tuple3#(Meta#(MetaField#("a", 0), Conc#(Bit#(17))), Meta#(MetaField#("b", 1), Conc#(Bit#(8))), Meta#(MetaField#("sync", 2), Conc#(Video::SyncData))))))} {Generic#(Video::CrYCb444, Meta#(MetaData#("CrYCb444", "Video", void, 1), Meta#(MetaConsNamed#("CrYCb444", 0, 3), Tuple3#(Meta#(MetaField#("cr", 0), Conc#(Bit#(8))), Meta#(MetaField#("y", 1), Conc#(Bit#(8))), Meta#(MetaField#("cb", 2), Conc#(Bit#(8)))))))} {Generic#(Video::CrYCbY422, Meta#(MetaData#("CrYCbY422", "Video", void, 1), Meta#(MetaConsNamed#("CrYCbY422", 0, 2), Tuple2#(Meta#(MetaField#("c", 0), Conc#(Bit#(8))), Meta#(MetaField#("y", 1), Conc#(Bit#(8)))))))} {Generic#(Video::PixelData#(d), Meta#(MetaData#("PixelData", "Video", StarArg#(d), 1), Meta#(MetaConsNamed#("PixelData", 0, 4), Tuple4#(Meta#(MetaField#("vsync", 0), Conc#(Bit#(1))), Meta#(MetaField#("hsync", 1), Conc#(Bit#(1))), Meta#(MetaField#("dataen", 2), Conc#(Bit#(1))), Meta#(MetaField#("data", 3), Conc#(d))))))} {Generic#(Video::RGB888, Meta#(MetaData#("RGB888", "Video", void, 1), Meta#(MetaConsNamed#("RGB888", 0, 3), Tuple3#(Meta#(MetaField#("red", 0), Conc#(Bit#(8))), Meta#(MetaField#("green", 1), Conc#(Bit#(8))), Meta#(MetaField#("blue", 2), Conc#(Bit#(8)))))))} {Generic#(Video::RGB888toCrYCbY422, Meta#(MetaData#("RGB888toCrYCbY422", "Video", void, 1), Meta#(MetaConsNamed#("RGB888toCrYCbY422", 0, 2), Tuple2#(Meta#(MetaField#("rgb", 0), Conc#(GetPut::Put#(Video::PixelData#(Video::RGB888)))), Meta#(MetaField#("crycby", 1), Conc#(GetPut::Get#(Video::PixelData#(Video::CrYCbY422))))))))} {Generic#(Video::SyncDescriptor, Meta#(MetaData#("SyncDescriptor", "Video", void, 1), Meta#(MetaConsNamed#("SyncDescriptor", 0, 4), Tuple4#(Meta#(MetaField#("active", 0), Conc#(Integer)), Meta#(MetaField#("fporch", 1), Conc#(Integer)), Meta#(MetaField#("sync", 2), Conc#(Integer)), Meta#(MetaField#("bporch", 3), Conc#(Integer))))))} {Generic#(Video::SyncGenerator, Meta#(MetaData#("SyncGenerator", "Video", void, 1), Meta#(MetaConsNamed#("SyncGenerator", 0, 5), Tuple5#(Meta#(MetaField#("tick", 0), Conc#(Action)), Meta#(MetaField#("preedge", 1), Conc#(Bool)), Meta#(MetaField#("out_n", 2), Conc#(Bool)), Meta#(MetaField#("out", 3), Conc#(Bool)), Meta#(MetaField#("active", 4), Conc#(Bool))))))} {Generic#(Video::VideoTiming, Meta#(MetaData#("VideoTiming", "Video", void, 1), Meta#(MetaConsNamed#("VideoTiming", 0, 2), Tuple2#(Meta#(MetaField#("h", 0), Conc#(Video::SyncDescriptor)), Meta#(MetaField#("v", 1), Conc#(Video::SyncDescriptor))))))} {Generic#(VnD::VnD#(a), Meta#(MetaData#("VnD", "VnD", StarArg#(a), 1), Meta#(MetaConsNamed#("VnD", 0, 2), Tuple2#(Meta#(MetaField#("v", 0), Conc#(Bool)), Meta#(MetaField#("d", 1), Conc#(a))))))} {Generic#(WriteOnly#(a_type), Meta#(MetaData#("WriteOnly", "PreludeBSV", StarArg#(a_type), 1), Meta#(MetaConsNamed#("WriteOnly", 0, 1), Meta#(MetaField#("_write", 0), Conc#(function Action f(a_type x1))))))} {Generic#(XilinxCells::BUFRParams, Meta#(MetaData#("BUFRParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("BUFRParams", 0, 2), Tuple2#(Meta#(MetaField#("bufr_divide", 0), Conc#(String)), Meta#(MetaField#("sim_device", 1), Conc#(String))))))} {Generic#(XilinxCells::ClockGenerator, Meta#(MetaData#("ClockGenerator", "XilinxCells", void, 1), Meta#(MetaConsNamed#("ClockGenerator", 0, 7), Tuple7#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout1", 1), Conc#(Clock)), Meta#(MetaField#("clkout2", 2), Conc#(Clock)), Meta#(MetaField#("clkout3", 3), Conc#(Clock)), Meta#(MetaField#("clkout4", 4), Conc#(Clock)), Meta#(MetaField#("clkout5", 5), Conc#(Clock)), Meta#(MetaField#("locked", 6), Conc#(Bool))))))} {Generic#(XilinxCells::ClockGenerator6, Meta#(MetaData#("ClockGenerator6", "XilinxCells", void, 1), Meta#(MetaConsNamed#("ClockGenerator6", 0, 12), Tuple12#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("locked", 11), Conc#(Bool))))))} {Generic#(XilinxCells::ClockGenerator6Params, Meta#(MetaData#("ClockGenerator6Params", "XilinxCells", void, 1), Meta#(MetaConsNamed#("ClockGenerator6Params", 0, 39), Tuple39#(Meta#(MetaField#("clkin_buffer", 0), Conc#(Bool)), Meta#(MetaField#("clkin1_period", 1), Conc#(Real)), Meta#(MetaField#("reset_stages", 2), Conc#(Integer)), Meta#(MetaField#("clkfbout_mult_f", 3), Conc#(Real)), Meta#(MetaField#("clkfbout_phase", 4), Conc#(Real)), Meta#(MetaField#("divclk_divide", 5), Conc#(Integer)), Meta#(MetaField#("clkout0_buffer", 6), Conc#(Bool)), Meta#(MetaField#("clkout0n_buffer", 7), Conc#(Bool)), Meta#(MetaField#("clkout0_divide_f", 8), Conc#(Real)), Meta#(MetaField#("clkout0_duty_cycle", 9), Conc#(Real)), Meta#(MetaField#("clkout0_phase", 10), Conc#(Real)), Meta#(MetaField#("clkout1_buffer", 11), Conc#(Bool)), Meta#(MetaField#("clkout1n_buffer", 12), Conc#(Bool)), Meta#(MetaField#("clkout1_divide", 13), Conc#(Integer)), Meta#(MetaField#("clkout1_duty_cycle", 14), Conc#(Real)), Meta#(MetaField#("clkout1_phase", 15), Conc#(Real)), Meta#(MetaField#("clkout2_buffer", 16), Conc#(Bool)), Meta#(MetaField#("clkout2n_buffer", 17), Conc#(Bool)), Meta#(MetaField#("clkout2_divide", 18), Conc#(Integer)), Meta#(MetaField#("clkout2_duty_cycle", 19), Conc#(Real)), Meta#(MetaField#("clkout2_phase", 20), Conc#(Real)), Meta#(MetaField#("clkout3_buffer", 21), Conc#(Bool)), Meta#(MetaField#("clkout3n_buffer", 22), Conc#(Bool)), Meta#(MetaField#("clkout3_divide", 23), Conc#(Integer)), Meta#(MetaField#("clkout3_duty_cycle", 24), Conc#(Real)), Meta#(MetaField#("clkout3_phase", 25), Conc#(Real)), Meta#(MetaField#("clkout4_buffer", 26), Conc#(Bool)), Meta#(MetaField#("clkout4_divide", 27), Conc#(Integer)), Meta#(MetaField#("clkout4_duty_cycle", 28), Conc#(Real)), Meta#(MetaField#("clkout4_phase", 29), Conc#(Real)), Meta#(MetaField#("clkout5_buffer", 30), Conc#(Bool)), Meta#(MetaField#("clkout5_divide", 31), Conc#(Integer)), Meta#(MetaField#("clkout5_duty_cycle", 32), Conc#(Real)), Meta#(MetaField#("clkout5_phase", 33), Conc#(Real)), Meta#(MetaField#("clkout6_buffer", 34), Conc#(Bool)), Meta#(MetaField#("clkout6_divide", 35), Conc#(Integer)), Meta#(MetaField#("clkout6_duty_cycle", 36), Conc#(Real)), Meta#(MetaField#("clkout6_phase", 37), Conc#(Real)), Meta#(MetaField#("use_same_family", 38), Conc#(Bool))))))} {Generic#(XilinxCells::ClockGenerator7, Meta#(MetaData#("ClockGenerator7", "XilinxCells", void, 1), Meta#(MetaConsNamed#("ClockGenerator7", 0, 12), Tuple12#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("locked", 11), Conc#(Bool))))))} {Generic#(XilinxCells::ClockGenerator7Params, Meta#(MetaData#("ClockGenerator7Params", "XilinxCells", void, 1), Meta#(MetaConsNamed#("ClockGenerator7Params", 0, 39), Tuple39#(Meta#(MetaField#("clkin_buffer", 0), Conc#(Bool)), Meta#(MetaField#("clkin1_period", 1), Conc#(Real)), Meta#(MetaField#("reset_stages", 2), Conc#(Integer)), Meta#(MetaField#("clkfbout_mult_f", 3), Conc#(Real)), Meta#(MetaField#("clkfbout_phase", 4), Conc#(Real)), Meta#(MetaField#("divclk_divide", 5), Conc#(Integer)), Meta#(MetaField#("clkout0_buffer", 6), Conc#(Bool)), Meta#(MetaField#("clkout0n_buffer", 7), Conc#(Bool)), Meta#(MetaField#("clkout0_divide_f", 8), Conc#(Real)), Meta#(MetaField#("clkout0_duty_cycle", 9), Conc#(Real)), Meta#(MetaField#("clkout0_phase", 10), Conc#(Real)), Meta#(MetaField#("clkout1_buffer", 11), Conc#(Bool)), Meta#(MetaField#("clkout1n_buffer", 12), Conc#(Bool)), Meta#(MetaField#("clkout1_divide", 13), Conc#(Integer)), Meta#(MetaField#("clkout1_duty_cycle", 14), Conc#(Real)), Meta#(MetaField#("clkout1_phase", 15), Conc#(Real)), Meta#(MetaField#("clkout2_buffer", 16), Conc#(Bool)), Meta#(MetaField#("clkout2n_buffer", 17), Conc#(Bool)), Meta#(MetaField#("clkout2_divide", 18), Conc#(Integer)), Meta#(MetaField#("clkout2_duty_cycle", 19), Conc#(Real)), Meta#(MetaField#("clkout2_phase", 20), Conc#(Real)), Meta#(MetaField#("clkout3_buffer", 21), Conc#(Bool)), Meta#(MetaField#("clkout3n_buffer", 22), Conc#(Bool)), Meta#(MetaField#("clkout3_divide", 23), Conc#(Integer)), Meta#(MetaField#("clkout3_duty_cycle", 24), Conc#(Real)), Meta#(MetaField#("clkout3_phase", 25), Conc#(Real)), Meta#(MetaField#("clkout4_buffer", 26), Conc#(Bool)), Meta#(MetaField#("clkout4_divide", 27), Conc#(Integer)), Meta#(MetaField#("clkout4_duty_cycle", 28), Conc#(Real)), Meta#(MetaField#("clkout4_phase", 29), Conc#(Real)), Meta#(MetaField#("clkout5_buffer", 30), Conc#(Bool)), Meta#(MetaField#("clkout5_divide", 31), Conc#(Integer)), Meta#(MetaField#("clkout5_duty_cycle", 32), Conc#(Real)), Meta#(MetaField#("clkout5_phase", 33), Conc#(Real)), Meta#(MetaField#("clkout6_buffer", 34), Conc#(Bool)), Meta#(MetaField#("clkout6_divide", 35), Conc#(Integer)), Meta#(MetaField#("clkout6_duty_cycle", 36), Conc#(Real)), Meta#(MetaField#("clkout6_phase", 37), Conc#(Real)), Meta#(MetaField#("use_same_family", 38), Conc#(Bool))))))} {Generic#(XilinxCells::ClockGeneratorParams, Meta#(MetaData#("ClockGeneratorParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("ClockGeneratorParams", 0, 30), Tuple30#(Meta#(MetaField#("clkin_buffer", 0), Conc#(Bool)), Meta#(MetaField#("clkin1_period", 1), Conc#(Real)), Meta#(MetaField#("reset_stages", 2), Conc#(Integer)), Meta#(MetaField#("feedback_mul", 3), Conc#(Integer)), Meta#(MetaField#("feedback_div", 4), Conc#(Integer)), Meta#(MetaField#("clk0_div", 5), Conc#(Integer)), Meta#(MetaField#("clk0_duty_cycle", 6), Conc#(Real)), Meta#(MetaField#("clk0_phase", 7), Conc#(Real)), Meta#(MetaField#("clk0_buffer", 8), Conc#(Bool)), Meta#(MetaField#("clk1_div", 9), Conc#(Integer)), Meta#(MetaField#("clk1_duty_cycle", 10), Conc#(Real)), Meta#(MetaField#("clk1_phase", 11), Conc#(Real)), Meta#(MetaField#("clk1_buffer", 12), Conc#(Bool)), Meta#(MetaField#("clk2_div", 13), Conc#(Integer)), Meta#(MetaField#("clk2_duty_cycle", 14), Conc#(Real)), Meta#(MetaField#("clk2_phase", 15), Conc#(Real)), Meta#(MetaField#("clk2_buffer", 16), Conc#(Bool)), Meta#(MetaField#("clk3_div", 17), Conc#(Integer)), Meta#(MetaField#("clk3_duty_cycle", 18), Conc#(Real)), Meta#(MetaField#("clk3_phase", 19), Conc#(Real)), Meta#(MetaField#("clk3_buffer", 20), Conc#(Bool)), Meta#(MetaField#("clk4_div", 21), Conc#(Integer)), Meta#(MetaField#("clk4_duty_cycle", 22), Conc#(Real)), Meta#(MetaField#("clk4_phase", 23), Conc#(Real)), Meta#(MetaField#("clk4_buffer", 24), Conc#(Bool)), Meta#(MetaField#("clk5_div", 25), Conc#(Integer)), Meta#(MetaField#("clk5_duty_cycle", 26), Conc#(Real)), Meta#(MetaField#("clk5_phase", 27), Conc#(Real)), Meta#(MetaField#("clk5_buffer", 28), Conc#(Bool)), Meta#(MetaField#("use_same_family", 29), Conc#(Bool))))))} {Generic#(XilinxCells::ClockGeneratorU, Meta#(MetaData#("ClockGeneratorU", "XilinxCells", void, 1), Meta#(MetaConsNamed#("ClockGeneratorU", 0, 12), Tuple12#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("locked", 11), Conc#(Bool))))))} {Generic#(XilinxCells::ClockGeneratorUParams, Meta#(MetaData#("ClockGeneratorUParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("ClockGeneratorUParams", 0, 39), Tuple39#(Meta#(MetaField#("clkin_buffer", 0), Conc#(Bool)), Meta#(MetaField#("clkin1_period", 1), Conc#(Real)), Meta#(MetaField#("reset_stages", 2), Conc#(Integer)), Meta#(MetaField#("clkfbout_mult_f", 3), Conc#(Real)), Meta#(MetaField#("clkfbout_phase", 4), Conc#(Real)), Meta#(MetaField#("divclk_divide", 5), Conc#(Integer)), Meta#(MetaField#("clkout0_buffer", 6), Conc#(Bool)), Meta#(MetaField#("clkout0n_buffer", 7), Conc#(Bool)), Meta#(MetaField#("clkout0_divide_f", 8), Conc#(Real)), Meta#(MetaField#("clkout0_duty_cycle", 9), Conc#(Real)), Meta#(MetaField#("clkout0_phase", 10), Conc#(Real)), Meta#(MetaField#("clkout1_buffer", 11), Conc#(Bool)), Meta#(MetaField#("clkout1n_buffer", 12), Conc#(Bool)), Meta#(MetaField#("clkout1_divide", 13), Conc#(Integer)), Meta#(MetaField#("clkout1_duty_cycle", 14), Conc#(Real)), Meta#(MetaField#("clkout1_phase", 15), Conc#(Real)), Meta#(MetaField#("clkout2_buffer", 16), Conc#(Bool)), Meta#(MetaField#("clkout2n_buffer", 17), Conc#(Bool)), Meta#(MetaField#("clkout2_divide", 18), Conc#(Integer)), Meta#(MetaField#("clkout2_duty_cycle", 19), Conc#(Real)), Meta#(MetaField#("clkout2_phase", 20), Conc#(Real)), Meta#(MetaField#("clkout3_buffer", 21), Conc#(Bool)), Meta#(MetaField#("clkout3n_buffer", 22), Conc#(Bool)), Meta#(MetaField#("clkout3_divide", 23), Conc#(Integer)), Meta#(MetaField#("clkout3_duty_cycle", 24), Conc#(Real)), Meta#(MetaField#("clkout3_phase", 25), Conc#(Real)), Meta#(MetaField#("clkout4_buffer", 26), Conc#(Bool)), Meta#(MetaField#("clkout4_divide", 27), Conc#(Integer)), Meta#(MetaField#("clkout4_duty_cycle", 28), Conc#(Real)), Meta#(MetaField#("clkout4_phase", 29), Conc#(Real)), Meta#(MetaField#("clkout5_buffer", 30), Conc#(Bool)), Meta#(MetaField#("clkout5_divide", 31), Conc#(Integer)), Meta#(MetaField#("clkout5_duty_cycle", 32), Conc#(Real)), Meta#(MetaField#("clkout5_phase", 33), Conc#(Real)), Meta#(MetaField#("clkout6_buffer", 34), Conc#(Bool)), Meta#(MetaField#("clkout6_divide", 35), Conc#(Integer)), Meta#(MetaField#("clkout6_duty_cycle", 36), Conc#(Real)), Meta#(MetaField#("clkout6_phase", 37), Conc#(Real)), Meta#(MetaField#("use_same_family", 38), Conc#(Bool))))))} {Generic#(XilinxCells::ClockIODELAYParams, Meta#(MetaData#("ClockIODELAYParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("ClockIODELAYParams", 0, 7), Tuple7#(Meta#(MetaField#("delay_source", 0), Conc#(String)), Meta#(MetaField#("high_performance_mode", 1), Conc#(String)), Meta#(MetaField#("idelay_type", 2), Conc#(String)), Meta#(MetaField#("idelay_value", 3), Conc#(Integer)), Meta#(MetaField#("odelay_value", 4), Conc#(Integer)), Meta#(MetaField#("refclk_frequency", 5), Conc#(Integer)), Meta#(MetaField#("signal_pattern", 6), Conc#(String))))))} {Generic#(XilinxCells::DCM, Meta#(MetaData#("DCM", "XilinxCells", void, 1), Meta#(MetaConsNamed#("DCM", 0, 13), Tuple13#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout180", 1), Conc#(Clock)), Meta#(MetaField#("clkout270", 2), Conc#(Clock)), Meta#(MetaField#("clkout2x180", 3), Conc#(Clock)), Meta#(MetaField#("clkout2x", 4), Conc#(Clock)), Meta#(MetaField#("clkout90", 5), Conc#(Clock)), Meta#(MetaField#("clkoutdv", 6), Conc#(Clock)), Meta#(MetaField#("clkoutfx180", 7), Conc#(Clock)), Meta#(MetaField#("clkoutfx", 8), Conc#(Clock)), Meta#(MetaField#("recfg", 9), Conc#(XilinxCells::DCM_DRP)), Meta#(MetaField#("phase_shift", 10), Conc#(XilinxCells::DCM_PS)), Meta#(MetaField#("locked", 11), Conc#(Bool)), Meta#(MetaField#("fbin", 12), Conc#(function Action f(Bool x1)))))))} {Generic#(XilinxCells::DCMParams, Meta#(MetaData#("DCMParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("DCMParams", 0, 17), Tuple17#(Meta#(MetaField#("clkdv_divide", 0), Conc#(Real)), Meta#(MetaField#("clkfx_divide", 1), Conc#(Integer)), Meta#(MetaField#("clkfx_multiply", 2), Conc#(Integer)), Meta#(MetaField#("clkin_divide_by_2", 3), Conc#(String)), Meta#(MetaField#("clkin_period", 4), Conc#(Real)), Meta#(MetaField#("clkout_phase_shift", 5), Conc#(String)), Meta#(MetaField#("clk_feedback", 6), Conc#(String)), Meta#(MetaField#("dcm_autocalibration", 7), Conc#(String)), Meta#(MetaField#("dcm_performance_mode", 8), Conc#(String)), Meta#(MetaField#("deskew_adjust", 9), Conc#(String)), Meta#(MetaField#("dfs_frequency_mode", 10), Conc#(String)), Meta#(MetaField#("dll_frequency_mode", 11), Conc#(String)), Meta#(MetaField#("duty_cycle_correction", 12), Conc#(String)), Meta#(MetaField#("factory_jf", 13), Conc#(Bit#(16))), Meta#(MetaField#("phase_shift", 14), Conc#(Integer)), Meta#(MetaField#("sim_device", 15), Conc#(String)), Meta#(MetaField#("startup_wait", 16), Conc#(String))))))} {Generic#(XilinxCells::DCM_DRP, Meta#(MetaData#("DCM_DRP", "XilinxCells", void, 1), Meta#(MetaConsNamed#("DCM_DRP", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(function Action f(Bool x1, Bit#(7) x2, Bit#(16) x3))), Meta#(MetaField#("response", 1), Conc#(Bit#(16)))))))} {Generic#(XilinxCells::DCM_PS, Meta#(MetaData#("DCM_PS", "XilinxCells", void, 1), Meta#(MetaConsNamed#("DCM_PS", 0, 2), Tuple2#(Meta#(MetaField#("incdec", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("done", 1), Conc#(Bool))))))} {Generic#(XilinxCells::DiffClock, Meta#(MetaData#("DiffClock", "XilinxCells", void, 1), Meta#(MetaConsNamed#("DiffClock", 0, 2), Tuple2#(Meta#(MetaField#("p", 0), Conc#(Clock)), Meta#(MetaField#("n", 1), Conc#(Clock))))))} {Generic#(XilinxCells::GTE2ClockGenIfc, Meta#(MetaData#("GTE2ClockGenIfc", "XilinxCells", void, 1), Meta#(MetaConsNamed#("GTE2ClockGenIfc", 0, 2), Tuple2#(Meta#(MetaField#("gen_clk", 0), Conc#(Clock)), Meta#(MetaField#("gen_clk_div2", 1), Conc#(Clock))))))} {Generic#(XilinxCells::GTE3ClockGenIfc, Meta#(MetaData#("GTE3ClockGenIfc", "XilinxCells", void, 1), Meta#(MetaConsNamed#("GTE3ClockGenIfc", 0, 2), Tuple2#(Meta#(MetaField#("gen_clk", 0), Conc#(Clock)), Meta#(MetaField#("gen_clk_div2", 1), Conc#(Clock))))))} {Generic#(XilinxCells::GTXE1ClockGenIfc, Meta#(MetaData#("GTXE1ClockGenIfc", "XilinxCells", void, 1), Meta#(MetaConsNamed#("GTXE1ClockGenIfc", 0, 2), Tuple2#(Meta#(MetaField#("gen_clk", 0), Conc#(Clock)), Meta#(MetaField#("gen_clk_div2", 1), Conc#(Clock))))))} {Generic#(XilinxCells::IBUFDSParams, Meta#(MetaData#("IBUFDSParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("IBUFDSParams", 0, 7), Tuple7#(Meta#(MetaField#("capacitance", 0), Conc#(String)), Meta#(MetaField#("diff_term", 1), Conc#(String)), Meta#(MetaField#("dqs_bias", 2), Conc#(String)), Meta#(MetaField#("ibuf_delay_value", 3), Conc#(String)), Meta#(MetaField#("ibuf_low_pwr", 4), Conc#(String)), Meta#(MetaField#("ifd_delay_value", 5), Conc#(String)), Meta#(MetaField#("iostandard", 6), Conc#(String))))))} {Generic#(XilinxCells::IBUFDS_GTE2Params, Meta#(MetaData#("IBUFDS_GTE2Params", "XilinxCells", void, 1), Meta#(MetaConsNamed#("IBUFDS_GTE2Params", 0, 3), Tuple3#(Meta#(MetaField#("clkcm_cfg", 0), Conc#(String)), Meta#(MetaField#("clkrcv_trst", 1), Conc#(String)), Meta#(MetaField#("clkswing_cfg", 2), Conc#(Bit#(2)))))))} {Generic#(XilinxCells::IBUFDS_GTXE1Params, Meta#(MetaData#("IBUFDS_GTXE1Params", "XilinxCells", void, 1), Meta#(MetaConsNamed#("IBUFDS_GTXE1Params", 0, 3), Tuple3#(Meta#(MetaField#("clkcm_cfg", 0), Conc#(String)), Meta#(MetaField#("clkrcv_trst", 1), Conc#(String)), Meta#(MetaField#("refclkout_dly", 2), Conc#(Bit#(10)))))))} {Generic#(XilinxCells::IBUFGDSParams, Meta#(MetaData#("IBUFGDSParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("IBUFGDSParams", 0, 5), Tuple5#(Meta#(MetaField#("capacitance", 0), Conc#(String)), Meta#(MetaField#("diff_term", 1), Conc#(String)), Meta#(MetaField#("ibuf_delay_value", 2), Conc#(String)), Meta#(MetaField#("ibuf_low_pwr", 3), Conc#(String)), Meta#(MetaField#("iostandard", 4), Conc#(String))))))} {Generic#(XilinxCells::IBUFGParams, Meta#(MetaData#("IBUFGParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("IBUFGParams", 0, 4), Tuple4#(Meta#(MetaField#("capacitance", 0), Conc#(String)), Meta#(MetaField#("ibuf_delay_value", 1), Conc#(String)), Meta#(MetaField#("ibuf_low_pwr", 2), Conc#(String)), Meta#(MetaField#("iostandard", 3), Conc#(String))))))} {Generic#(XilinxCells::IBUFParams, Meta#(MetaData#("IBUFParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("IBUFParams", 0, 5), Tuple5#(Meta#(MetaField#("capacitance", 0), Conc#(String)), Meta#(MetaField#("ibuf_delay_value", 1), Conc#(String)), Meta#(MetaField#("ibuf_low_pwr", 2), Conc#(String)), Meta#(MetaField#("ifd_delay_value", 3), Conc#(String)), Meta#(MetaField#("iostandard", 4), Conc#(String))))))} {Generic#(XilinxCells::IDDR#(a), Meta#(MetaData#("IDDR", "XilinxCells", StarArg#(a), 1), Meta#(MetaConsNamed#("IDDR", 0, 5), Tuple5#(Meta#(MetaField#("q1", 0), Conc#(a)), Meta#(MetaField#("q2", 1), Conc#(a)), Meta#(MetaField#("s", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("ce", 3), Conc#(function Action f(Bool x1))), Meta#(MetaField#("d", 4), Conc#(function Action f(a x1)))))))} {Generic#(XilinxCells::IDDRParams#(a), Meta#(MetaData#("IDDRParams", "XilinxCells", StarArg#(a), 1), Meta#(MetaConsNamed#("IDDRParams", 0, 4), Tuple4#(Meta#(MetaField#("ddr_clk_edge", 0), Conc#(String)), Meta#(MetaField#("init_q1", 1), Conc#(a)), Meta#(MetaField#("init_q2", 2), Conc#(a)), Meta#(MetaField#("srtype", 3), Conc#(String))))))} {Generic#(XilinxCells::IDELAY#(a), Meta#(MetaData#("IDELAY", "XilinxCells", StarArg#(a), 1), Meta#(MetaConsNamed#("IDELAY", 0, 3), Tuple3#(Meta#(MetaField#("i", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("inc", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("o", 2), Conc#(a))))))} {Generic#(XilinxCells::IDELAYCTRL, Meta#(MetaData#("IDELAYCTRL", "XilinxCells", void, 1), Meta#(MetaConsNamed#("IDELAYCTRL", 0, 1), Meta#(MetaField#("rdy", 0), Conc#(Bool)))))} {Generic#(XilinxCells::IDELAYParams, Meta#(MetaData#("IDELAYParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("IDELAYParams", 0, 2), Tuple2#(Meta#(MetaField#("iobdelay_type", 0), Conc#(String)), Meta#(MetaField#("iobdelay_value", 1), Conc#(Integer))))))} {Generic#(XilinxCells::IODELAY#(a), Meta#(MetaData#("IODELAY", "XilinxCells", StarArg#(a), 1), Meta#(MetaConsNamed#("IODELAY", 0, 6), Tuple6#(Meta#(MetaField#("idatain", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("odatain", 1), Conc#(function Action f(a x1))), Meta#(MetaField#("dataout", 2), Conc#(a)), Meta#(MetaField#("datain", 3), Conc#(function Action f(a x1))), Meta#(MetaField#("t", 4), Conc#(function Action f(Bool x1))), Meta#(MetaField#("inc", 5), Conc#(function Action f(Bool x1)))))))} {Generic#(XilinxCells::IODELAYParams, Meta#(MetaData#("IODELAYParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("IODELAYParams", 0, 7), Tuple7#(Meta#(MetaField#("delay_source", 0), Conc#(String)), Meta#(MetaField#("high_performance_mode", 1), Conc#(String)), Meta#(MetaField#("idelay_type", 2), Conc#(String)), Meta#(MetaField#("idelay_value", 3), Conc#(Integer)), Meta#(MetaField#("odelay_value", 4), Conc#(Integer)), Meta#(MetaField#("refclk_frequency", 5), Conc#(Integer)), Meta#(MetaField#("signal_pattern", 6), Conc#(String))))))} {Generic#(XilinxCells::MMCM, Meta#(MetaData#("MMCM", "XilinxCells", void, 1), Meta#(MetaConsNamed#("MMCM", 0, 20), Tuple20#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("reconfig", 13), Conc#(XilinxCells::MMCM_DRP)), Meta#(MetaField#("phase_shift", 14), Conc#(XilinxCells::MMCM_PS)), Meta#(MetaField#("locked", 15), Conc#(Bool)), Meta#(MetaField#("clkfb_stopped", 16), Conc#(Bool)), Meta#(MetaField#("clkin_stopped", 17), Conc#(Bool)), Meta#(MetaField#("clkin1sel", 18), Conc#(function Action f(Bool x1))), Meta#(MetaField#("clkfbin", 19), Conc#(function Action f(Bit#(1) x1)))))))} {Generic#(XilinxCells::MMCME2, Meta#(MetaData#("MMCME2", "XilinxCells", void, 1), Meta#(MetaConsNamed#("MMCME2", 0, 12), Tuple12#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("locked", 11), Conc#(Bool))))))} {Generic#(XilinxCells::MMCME3, Meta#(MetaData#("MMCME3", "XilinxCells", void, 1), Meta#(MetaConsNamed#("MMCME3", 0, 12), Tuple12#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("locked", 11), Conc#(Bool))))))} {Generic#(XilinxCells::MMCMParams, Meta#(MetaData#("MMCMParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("MMCMParams", 0, 42), Tuple42#(Meta#(MetaField#("bandwidth", 0), Conc#(String)), Meta#(MetaField#("clkfbout_use_fine_ps", 1), Conc#(String)), Meta#(MetaField#("clkout0_use_fine_ps", 2), Conc#(String)), Meta#(MetaField#("clkout1_use_fine_ps", 3), Conc#(String)), Meta#(MetaField#("clkout2_use_fine_ps", 4), Conc#(String)), Meta#(MetaField#("clkout3_use_fine_ps", 5), Conc#(String)), Meta#(MetaField#("clkout4_cascade", 6), Conc#(String)), Meta#(MetaField#("clkout4_use_fine_ps", 7), Conc#(String)), Meta#(MetaField#("clkout5_use_fine_ps", 8), Conc#(String)), Meta#(MetaField#("clkout6_use_fine_ps", 9), Conc#(String)), Meta#(MetaField#("clock_hold", 10), Conc#(String)), Meta#(MetaField#("compensation", 11), Conc#(String)), Meta#(MetaField#("startup_wait", 12), Conc#(String)), Meta#(MetaField#("clkfbout_mult_f", 13), Conc#(Real)), Meta#(MetaField#("clkfbout_phase", 14), Conc#(Real)), Meta#(MetaField#("clkin1_period", 15), Conc#(Real)), Meta#(MetaField#("clkin2_period", 16), Conc#(Real)), Meta#(MetaField#("divclk_divide", 17), Conc#(Integer)), Meta#(MetaField#("clkout0_divide_f", 18), Conc#(Real)), Meta#(MetaField#("clkout0_duty_cycle", 19), Conc#(Real)), Meta#(MetaField#("clkout0_phase", 20), Conc#(Real)), Meta#(MetaField#("clkout1_divide", 21), Conc#(Integer)), Meta#(MetaField#("clkout1_duty_cycle", 22), Conc#(Real)), Meta#(MetaField#("clkout1_phase", 23), Conc#(Real)), Meta#(MetaField#("clkout2_divide", 24), Conc#(Integer)), Meta#(MetaField#("clkout2_duty_cycle", 25), Conc#(Real)), Meta#(MetaField#("clkout2_phase", 26), Conc#(Real)), Meta#(MetaField#("clkout3_divide", 27), Conc#(Integer)), Meta#(MetaField#("clkout3_duty_cycle", 28), Conc#(Real)), Meta#(MetaField#("clkout3_phase", 29), Conc#(Real)), Meta#(MetaField#("clkout4_divide", 30), Conc#(Integer)), Meta#(MetaField#("clkout4_duty_cycle", 31), Conc#(Real)), Meta#(MetaField#("clkout4_phase", 32), Conc#(Real)), Meta#(MetaField#("clkout5_divide", 33), Conc#(Integer)), Meta#(MetaField#("clkout5_duty_cycle", 34), Conc#(Real)), Meta#(MetaField#("clkout5_phase", 35), Conc#(Real)), Meta#(MetaField#("clkout6_divide", 36), Conc#(Integer)), Meta#(MetaField#("clkout6_duty_cycle", 37), Conc#(Real)), Meta#(MetaField#("clkout6_phase", 38), Conc#(Real)), Meta#(MetaField#("ref_jitter1", 39), Conc#(Real)), Meta#(MetaField#("ref_jitter2", 40), Conc#(Real)), Meta#(MetaField#("use_same_family", 41), Conc#(Bool))))))} {Generic#(XilinxCells::MMCM_CDDC, Meta#(MetaData#("MMCM_CDDC", "XilinxCells", void, 1), Meta#(MetaConsNamed#("MMCM_CDDC", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(Action)), Meta#(MetaField#("done", 1), Conc#(Bool))))))} {Generic#(XilinxCells::MMCM_DRP, Meta#(MetaData#("MMCM_DRP", "XilinxCells", void, 1), Meta#(MetaConsNamed#("MMCM_DRP", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(function Action f(Bool x1, Bit#(7) x2, Bit#(16) x3))), Meta#(MetaField#("response", 1), Conc#(Bit#(16)))))))} {Generic#(XilinxCells::MMCM_PS, Meta#(MetaData#("MMCM_PS", "XilinxCells", void, 1), Meta#(MetaConsNamed#("MMCM_PS", 0, 2), Tuple2#(Meta#(MetaField#("incdec", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("done", 1), Conc#(Bool))))))} {Generic#(XilinxCells::OBUFDSParams, Meta#(MetaData#("OBUFDSParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("OBUFDSParams", 0, 3), Tuple3#(Meta#(MetaField#("capacitance", 0), Conc#(String)), Meta#(MetaField#("iostandard", 1), Conc#(String)), Meta#(MetaField#("slew", 2), Conc#(String))))))} {Generic#(XilinxCells::OBUFParams, Meta#(MetaData#("OBUFParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("OBUFParams", 0, 4), Tuple4#(Meta#(MetaField#("capacitance", 0), Conc#(String)), Meta#(MetaField#("drive", 1), Conc#(Integer)), Meta#(MetaField#("iostandard", 2), Conc#(String)), Meta#(MetaField#("slew", 3), Conc#(String))))))} {Generic#(XilinxCells::ODDR#(a), Meta#(MetaData#("ODDR", "XilinxCells", StarArg#(a), 1), Meta#(MetaConsNamed#("ODDR", 0, 5), Tuple5#(Meta#(MetaField#("q", 0), Conc#(a)), Meta#(MetaField#("s", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("ce", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("d1", 3), Conc#(function Action f(a x1))), Meta#(MetaField#("d2", 4), Conc#(function Action f(a x1)))))))} {Generic#(XilinxCells::ODDRParams#(a), Meta#(MetaData#("ODDRParams", "XilinxCells", StarArg#(a), 1), Meta#(MetaConsNamed#("ODDRParams", 0, 3), Tuple3#(Meta#(MetaField#("ddr_clk_edge", 0), Conc#(String)), Meta#(MetaField#("init", 1), Conc#(a)), Meta#(MetaField#("srtype", 2), Conc#(String))))))} {Generic#(XilinxCells::PLL, Meta#(MetaData#("PLL", "XilinxCells", void, 1), Meta#(MetaConsNamed#("PLL", 0, 17), Tuple17#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout1", 1), Conc#(Clock)), Meta#(MetaField#("clkout2", 2), Conc#(Clock)), Meta#(MetaField#("clkout3", 3), Conc#(Clock)), Meta#(MetaField#("clkout4", 4), Conc#(Clock)), Meta#(MetaField#("clkout5", 5), Conc#(Clock)), Meta#(MetaField#("clkoutdcm0", 6), Conc#(Clock)), Meta#(MetaField#("clkoutdcm1", 7), Conc#(Clock)), Meta#(MetaField#("clkoutdcm2", 8), Conc#(Clock)), Meta#(MetaField#("clkoutdcm3", 9), Conc#(Clock)), Meta#(MetaField#("clkoutdcm4", 10), Conc#(Clock)), Meta#(MetaField#("clkoutdcm5", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout", 12), Conc#(Clock)), Meta#(MetaField#("clkfbdcm", 13), Conc#(Clock)), Meta#(MetaField#("locked", 14), Conc#(Bool)), Meta#(MetaField#("clkin1sel", 15), Conc#(function Action f(Bool x1))), Meta#(MetaField#("fbin", 16), Conc#(function Action f(Bool x1)))))))} {Generic#(XilinxCells::PLLParams, Meta#(MetaData#("PLLParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("PLLParams", 0, 37), Tuple37#(Meta#(MetaField#("bandwidth", 0), Conc#(String)), Meta#(MetaField#("clkfbout_deskew_adjust", 1), Conc#(String)), Meta#(MetaField#("clkout0_deskew_adjust", 2), Conc#(String)), Meta#(MetaField#("clkout1_deskew_adjust", 3), Conc#(String)), Meta#(MetaField#("clkout2_deskew_adjust", 4), Conc#(String)), Meta#(MetaField#("clkout3_deskew_adjust", 5), Conc#(String)), Meta#(MetaField#("clkout4_deskew_adjust", 6), Conc#(String)), Meta#(MetaField#("clkout5_deskew_adjust", 7), Conc#(String)), Meta#(MetaField#("clkfbout_mult", 8), Conc#(Integer)), Meta#(MetaField#("clkfbout_phase", 9), Conc#(Real)), Meta#(MetaField#("clkin1_period", 10), Conc#(Real)), Meta#(MetaField#("clkin2_period", 11), Conc#(Real)), Meta#(MetaField#("clkout0_divide", 12), Conc#(Integer)), Meta#(MetaField#("clkout0_duty_cycle", 13), Conc#(Real)), Meta#(MetaField#("clkout0_phase", 14), Conc#(Real)), Meta#(MetaField#("clkout1_divide", 15), Conc#(Integer)), Meta#(MetaField#("clkout1_duty_cycle", 16), Conc#(Real)), Meta#(MetaField#("clkout1_phase", 17), Conc#(Real)), Meta#(MetaField#("clkout2_divide", 18), Conc#(Integer)), Meta#(MetaField#("clkout2_duty_cycle", 19), Conc#(Real)), Meta#(MetaField#("clkout2_phase", 20), Conc#(Real)), Meta#(MetaField#("clkout3_divide", 21), Conc#(Integer)), Meta#(MetaField#("clkout3_duty_cycle", 22), Conc#(Real)), Meta#(MetaField#("clkout3_phase", 23), Conc#(Real)), Meta#(MetaField#("clkout4_divide", 24), Conc#(Integer)), Meta#(MetaField#("clkout4_duty_cycle", 25), Conc#(Real)), Meta#(MetaField#("clkout4_phase", 26), Conc#(Real)), Meta#(MetaField#("clkout5_divide", 27), Conc#(Integer)), Meta#(MetaField#("clkout5_duty_cycle", 28), Conc#(Real)), Meta#(MetaField#("clkout5_phase", 29), Conc#(Real)), Meta#(MetaField#("compensation", 30), Conc#(String)), Meta#(MetaField#("divclk_divide", 31), Conc#(Integer)), Meta#(MetaField#("en_rel", 32), Conc#(String)), Meta#(MetaField#("pll_pmcd_mode", 33), Conc#(String)), Meta#(MetaField#("ref_jitter", 34), Conc#(Real)), Meta#(MetaField#("reset_on_loss_of_lock", 35), Conc#(String)), Meta#(MetaField#("rst_deassert_clk", 36), Conc#(String))))))} {Generic#(XilinxCells::ResetGenIfc, Meta#(MetaData#("ResetGenIfc", "XilinxCells", void, 1), Meta#(MetaConsNamed#("ResetGenIfc", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(XilinxCells::SRL16E, Meta#(MetaData#("SRL16E", "XilinxCells", void, 1), Meta#(MetaConsNamed#("SRL16E", 0, 3), Tuple3#(Meta#(MetaField#("_read", 0), Conc#(Bit#(1))), Meta#(MetaField#("_write", 1), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("a", 2), Conc#(function Action f(Bit#(4) x1)))))))} {Generic#(XilinxCells::SRL16EParams, Meta#(MetaData#("SRL16EParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("SRL16EParams", 0, 1), Meta#(MetaField#("initValue", 0), Conc#(Bit#(16))))))} {Generic#(XilinxCells::SRLC32E, Meta#(MetaData#("SRLC32E", "XilinxCells", void, 1), Meta#(MetaConsNamed#("SRLC32E", 0, 4), Tuple4#(Meta#(MetaField#("_read", 0), Conc#(Bit#(1))), Meta#(MetaField#("_write", 1), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("a", 2), Conc#(function Action f(Bit#(5) x1))), Meta#(MetaField#("cascade", 3), Conc#(Bit#(1)))))))} {Generic#(XilinxCells::SRLC32EParams, Meta#(MetaData#("SRLC32EParams", "XilinxCells", void, 1), Meta#(MetaConsNamed#("SRLC32EParams", 0, 1), Meta#(MetaField#("initValue", 0), Conc#(Bit#(32))))))} {Generic#(XilinxCells::VDCM, Meta#(MetaData#("VDCM", "XilinxCells", void, 1), Meta#(MetaConsNamed#("VDCM", 0, 13), Tuple13#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout180", 1), Conc#(Clock)), Meta#(MetaField#("clkout270", 2), Conc#(Clock)), Meta#(MetaField#("clkout2x180", 3), Conc#(Clock)), Meta#(MetaField#("clkout2x", 4), Conc#(Clock)), Meta#(MetaField#("clkout90", 5), Conc#(Clock)), Meta#(MetaField#("clkoutdv", 6), Conc#(Clock)), Meta#(MetaField#("clkoutfx180", 7), Conc#(Clock)), Meta#(MetaField#("clkoutfx", 8), Conc#(Clock)), Meta#(MetaField#("recfg", 9), Conc#(XilinxCells::VDCM_DRP)), Meta#(MetaField#("phase_shift", 10), Conc#(XilinxCells::VDCM_PS)), Meta#(MetaField#("locked", 11), Conc#(Bool)), Meta#(MetaField#("fbin", 12), Conc#(function Action f(Bool x1)))))))} {Generic#(XilinxCells::VDCM_DRP, Meta#(MetaData#("VDCM_DRP", "XilinxCells", void, 1), Meta#(MetaConsNamed#("VDCM_DRP", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(function Action f(Bool x1, Bit#(7) x2, Bit#(16) x3))), Meta#(MetaField#("response", 1), Conc#(Bit#(16)))))))} {Generic#(XilinxCells::VDCM_PS, Meta#(MetaData#("VDCM_PS", "XilinxCells", void, 1), Meta#(MetaConsNamed#("VDCM_PS", 0, 2), Tuple2#(Meta#(MetaField#("incdec", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("done", 1), Conc#(Bool))))))} {Generic#(XilinxCells::VIDDR#(a), Meta#(MetaData#("VIDDR", "XilinxCells", StarArg#(a), 1), Meta#(MetaConsNamed#("VIDDR", 0, 5), Tuple5#(Meta#(MetaField#("q1", 0), Conc#(a)), Meta#(MetaField#("q2", 1), Conc#(a)), Meta#(MetaField#("s", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("ce", 3), Conc#(function Action f(Bool x1))), Meta#(MetaField#("d", 4), Conc#(function Action f(a x1)))))))} {Generic#(XilinxCells::VIDELAY#(a), Meta#(MetaData#("VIDELAY", "XilinxCells", StarArg#(a), 1), Meta#(MetaConsNamed#("VIDELAY", 0, 3), Tuple3#(Meta#(MetaField#("i", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("inc", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("o", 2), Conc#(a))))))} {Generic#(XilinxCells::VIODELAY#(a), Meta#(MetaData#("VIODELAY", "XilinxCells", StarArg#(a), 1), Meta#(MetaConsNamed#("VIODELAY", 0, 6), Tuple6#(Meta#(MetaField#("idatain", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("odatain", 1), Conc#(function Action f(a x1))), Meta#(MetaField#("dataout", 2), Conc#(a)), Meta#(MetaField#("datain", 3), Conc#(function Action f(a x1))), Meta#(MetaField#("t", 4), Conc#(function Action f(Bool x1))), Meta#(MetaField#("inc", 5), Conc#(function Action f(Bool x1)))))))} {Generic#(XilinxCells::VMMCME3, Meta#(MetaData#("VMMCME3", "XilinxCells", void, 1), Meta#(MetaConsNamed#("VMMCME3", 0, 21), Tuple21#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("reconfig", 13), Conc#(XilinxCells::MMCM_DRP)), Meta#(MetaField#("cddc", 14), Conc#(XilinxCells::MMCM_CDDC)), Meta#(MetaField#("phase_shift", 15), Conc#(XilinxCells::MMCM_PS)), Meta#(MetaField#("locked", 16), Conc#(Bool)), Meta#(MetaField#("clkfb_stopped", 17), Conc#(Bool)), Meta#(MetaField#("clkin_stopped", 18), Conc#(Bool)), Meta#(MetaField#("clkin1sel", 19), Conc#(function Action f(Bool x1))), Meta#(MetaField#("clkfbin", 20), Conc#(function Action f(Bit#(1) x1)))))))} {Generic#(XilinxCells::VPLL, Meta#(MetaData#("VPLL", "XilinxCells", void, 1), Meta#(MetaConsNamed#("VPLL", 0, 17), Tuple17#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout1", 1), Conc#(Clock)), Meta#(MetaField#("clkout2", 2), Conc#(Clock)), Meta#(MetaField#("clkout3", 3), Conc#(Clock)), Meta#(MetaField#("clkout4", 4), Conc#(Clock)), Meta#(MetaField#("clkout5", 5), Conc#(Clock)), Meta#(MetaField#("clkoutdcm0", 6), Conc#(Clock)), Meta#(MetaField#("clkoutdcm1", 7), Conc#(Clock)), Meta#(MetaField#("clkoutdcm2", 8), Conc#(Clock)), Meta#(MetaField#("clkoutdcm3", 9), Conc#(Clock)), Meta#(MetaField#("clkoutdcm4", 10), Conc#(Clock)), Meta#(MetaField#("clkoutdcm5", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout", 12), Conc#(Clock)), Meta#(MetaField#("clkfbdcm", 13), Conc#(Clock)), Meta#(MetaField#("locked", 14), Conc#(Bool)), Meta#(MetaField#("clkin1sel", 15), Conc#(function Action f(Bool x1))), Meta#(MetaField#("fbin", 16), Conc#(function Action f(Bool x1)))))))} {Generic#(XilinxCells::VSRL16E, Meta#(MetaData#("VSRL16E", "XilinxCells", void, 1), Meta#(MetaConsNamed#("VSRL16E", 0, 6), Tuple6#(Meta#(MetaField#("_read", 0), Conc#(Bit#(1))), Meta#(MetaField#("_write", 1), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("a0", 2), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("a1", 3), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("a2", 4), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("a3", 5), Conc#(function Action f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_Clocks.ClockGenIfc1060, Meta#(MetaData#("_Clocks.ClockGenIfc1060", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc1060", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(XilinxCells::_Clocks.ClockGenIfc1559, Meta#(MetaData#("_Clocks.ClockGenIfc1559", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc1559", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(XilinxCells::_Clocks.ClockGenIfc175, Meta#(MetaData#("_Clocks.ClockGenIfc175", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc175", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(XilinxCells::_Clocks.ClockGenIfc215, Meta#(MetaData#("_Clocks.ClockGenIfc215", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc215", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(XilinxCells::_Clocks.ClockGenIfc307, Meta#(MetaData#("_Clocks.ClockGenIfc307", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc307", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(XilinxCells::_Clocks.ClockGenIfc411, Meta#(MetaData#("_Clocks.ClockGenIfc411", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc411", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(XilinxCells::_Clocks.ClockGenIfc489, Meta#(MetaData#("_Clocks.ClockGenIfc489", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc489", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(XilinxCells::_Clocks.ClockGenIfc557, Meta#(MetaData#("_Clocks.ClockGenIfc557", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc557", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(XilinxCells::_Clocks.ClockGenIfc607, Meta#(MetaData#("_Clocks.ClockGenIfc607", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc607", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(XilinxCells::_Clocks.ClockGenIfc819, Meta#(MetaData#("_Clocks.ClockGenIfc819", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc819", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(XilinxCells::_Prelude.Reg144#(_n0, _n1), Meta#(MetaData#("_Prelude.Reg144", "XilinxCells", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Prelude.Reg144", 0, 2), Tuple2#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0)))))))} {Generic#(XilinxCells::_Prelude.Reg270#(_n0, _n1), Meta#(MetaData#("_Prelude.Reg270", "XilinxCells", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Prelude.Reg270", 0, 2), Tuple2#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0)))))))} {Generic#(XilinxCells::_Prelude.Reg375#(_n0, _n1), Meta#(MetaData#("_Prelude.Reg375", "XilinxCells", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Prelude.Reg375", 0, 2), Tuple2#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0)))))))} {Generic#(XilinxCells::_Prelude.Reg452#(_n0, _n1), Meta#(MetaData#("_Prelude.Reg452", "XilinxCells", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Prelude.Reg452", 0, 2), Tuple2#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0)))))))} {Generic#(XilinxCells::_Prelude.Reg859#(_n0, _n1), Meta#(MetaData#("_Prelude.Reg859", "XilinxCells", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Prelude.Reg859", 0, 2), Tuple2#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0)))))))} {Generic#(XilinxCells::_PreludeBSV.ReadOnly192#(_n0), Meta#(MetaData#("_PreludeBSV.ReadOnly192", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.ReadOnly192", 0, 1), Meta#(MetaField#("_read", 0), Conc#(Bit#(_n0))))))} {Generic#(XilinxCells::_PreludeBSV.ReadOnly329#(_n0), Meta#(MetaData#("_PreludeBSV.ReadOnly329", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.ReadOnly329", 0, 1), Meta#(MetaField#("_read", 0), Conc#(Bit#(_n0))))))} {Generic#(XilinxCells::_XilinxCells.DiffClock917, Meta#(MetaData#("_XilinxCells.DiffClock917", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_XilinxCells.DiffClock917", 0, 2), Tuple2#(Meta#(MetaField#("p", 0), Conc#(Clock)), Meta#(MetaField#("n", 1), Conc#(Clock))))))} {Generic#(XilinxCells::_XilinxCells.GTE2ClockGenIfc721, Meta#(MetaData#("_XilinxCells.GTE2ClockGenIfc721", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_XilinxCells.GTE2ClockGenIfc721", 0, 2), Tuple2#(Meta#(MetaField#("gen_clk", 0), Conc#(Clock)), Meta#(MetaField#("gen_clk_div2", 1), Conc#(Clock))))))} {Generic#(XilinxCells::_XilinxCells.GTE3ClockGenIfc772, Meta#(MetaData#("_XilinxCells.GTE3ClockGenIfc772", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_XilinxCells.GTE3ClockGenIfc772", 0, 2), Tuple2#(Meta#(MetaField#("gen_clk", 0), Conc#(Clock)), Meta#(MetaField#("gen_clk_div2", 1), Conc#(Clock))))))} {Generic#(XilinxCells::_XilinxCells.GTXE1ClockGenIfc656, Meta#(MetaData#("_XilinxCells.GTXE1ClockGenIfc656", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_XilinxCells.GTXE1ClockGenIfc656", 0, 2), Tuple2#(Meta#(MetaField#("gen_clk", 0), Conc#(Clock)), Meta#(MetaField#("gen_clk_div2", 1), Conc#(Clock))))))} {Generic#(XilinxCells::_XilinxCells.IDELAYCTRL1229, Meta#(MetaData#("_XilinxCells.IDELAYCTRL1229", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_XilinxCells.IDELAYCTRL1229", 0, 1), Meta#(MetaField#("rdy", 0), Conc#(Bit#(1))))))} {Generic#(XilinxCells::_XilinxCells.MMCM2185#(_n0), Meta#(MetaData#("_XilinxCells.MMCM2185", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.MMCM2185", 0, 23), Tuple23#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("reconfig_request", 13), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1, Bit#(7) x2, Bit#(16) x3))), Meta#(MetaField#("reconfig_response", 14), Conc#(Bit#(16))), Meta#(MetaField#("RDY_reconfig_response", 15), Conc#(Bit#(1))), Meta#(MetaField#("phase_shift_incdec", 16), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("phase_shift_done", 17), Conc#(Bit#(1))), Meta#(MetaField#("locked", 18), Conc#(Bit#(1))), Meta#(MetaField#("clkfb_stopped", 19), Conc#(Bit#(1))), Meta#(MetaField#("clkin_stopped", 20), Conc#(Bit#(1))), Meta#(MetaField#("clkin1sel", 21), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clkfbin", 22), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.MMCM2282#(_n0), Meta#(MetaData#("_XilinxCells.MMCM2282", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.MMCM2282", 0, 23), Tuple23#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("reconfig_request", 13), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1, Bit#(7) x2, Bit#(16) x3))), Meta#(MetaField#("reconfig_response", 14), Conc#(Bit#(16))), Meta#(MetaField#("RDY_reconfig_response", 15), Conc#(Bit#(1))), Meta#(MetaField#("phase_shift_incdec", 16), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("phase_shift_done", 17), Conc#(Bit#(1))), Meta#(MetaField#("locked", 18), Conc#(Bit#(1))), Meta#(MetaField#("clkfb_stopped", 19), Conc#(Bit#(1))), Meta#(MetaField#("clkin_stopped", 20), Conc#(Bit#(1))), Meta#(MetaField#("clkin1sel", 21), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clkfbin", 22), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.MMCM3971#(_n0), Meta#(MetaData#("_XilinxCells.MMCM3971", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.MMCM3971", 0, 23), Tuple23#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("reconfig_request", 13), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1, Bit#(7) x2, Bit#(16) x3))), Meta#(MetaField#("reconfig_response", 14), Conc#(Bit#(16))), Meta#(MetaField#("RDY_reconfig_response", 15), Conc#(Bit#(1))), Meta#(MetaField#("phase_shift_incdec", 16), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("phase_shift_done", 17), Conc#(Bit#(1))), Meta#(MetaField#("locked", 18), Conc#(Bit#(1))), Meta#(MetaField#("clkfb_stopped", 19), Conc#(Bit#(1))), Meta#(MetaField#("clkin_stopped", 20), Conc#(Bit#(1))), Meta#(MetaField#("clkin1sel", 21), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clkfbin", 22), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.MMCM4067#(_n0), Meta#(MetaData#("_XilinxCells.MMCM4067", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.MMCM4067", 0, 23), Tuple23#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("reconfig_request", 13), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1, Bit#(7) x2, Bit#(16) x3))), Meta#(MetaField#("reconfig_response", 14), Conc#(Bit#(16))), Meta#(MetaField#("RDY_reconfig_response", 15), Conc#(Bit#(1))), Meta#(MetaField#("phase_shift_incdec", 16), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("phase_shift_done", 17), Conc#(Bit#(1))), Meta#(MetaField#("locked", 18), Conc#(Bit#(1))), Meta#(MetaField#("clkfb_stopped", 19), Conc#(Bit#(1))), Meta#(MetaField#("clkin_stopped", 20), Conc#(Bit#(1))), Meta#(MetaField#("clkin1sel", 21), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clkfbin", 22), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.MMCM4306#(_n0), Meta#(MetaData#("_XilinxCells.MMCM4306", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.MMCM4306", 0, 23), Tuple23#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("reconfig_request", 13), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1, Bit#(7) x2, Bit#(16) x3))), Meta#(MetaField#("reconfig_response", 14), Conc#(Bit#(16))), Meta#(MetaField#("RDY_reconfig_response", 15), Conc#(Bit#(1))), Meta#(MetaField#("phase_shift_incdec", 16), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("phase_shift_done", 17), Conc#(Bit#(1))), Meta#(MetaField#("locked", 18), Conc#(Bit#(1))), Meta#(MetaField#("clkfb_stopped", 19), Conc#(Bit#(1))), Meta#(MetaField#("clkin_stopped", 20), Conc#(Bit#(1))), Meta#(MetaField#("clkin1sel", 21), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clkfbin", 22), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.MMCM4403#(_n0), Meta#(MetaData#("_XilinxCells.MMCM4403", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.MMCM4403", 0, 23), Tuple23#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("reconfig_request", 13), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1, Bit#(7) x2, Bit#(16) x3))), Meta#(MetaField#("reconfig_response", 14), Conc#(Bit#(16))), Meta#(MetaField#("RDY_reconfig_response", 15), Conc#(Bit#(1))), Meta#(MetaField#("phase_shift_incdec", 16), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("phase_shift_done", 17), Conc#(Bit#(1))), Meta#(MetaField#("locked", 18), Conc#(Bit#(1))), Meta#(MetaField#("clkfb_stopped", 19), Conc#(Bit#(1))), Meta#(MetaField#("clkin_stopped", 20), Conc#(Bit#(1))), Meta#(MetaField#("clkin1sel", 21), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clkfbin", 22), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.ODDR975#(_n0, _n1), Meta#(MetaData#("_XilinxCells.ODDR975", "XilinxCells", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_XilinxCells.ODDR975", 0, 5), Tuple5#(Meta#(MetaField#("q", 0), Conc#(Bit#(_n1))), Meta#(MetaField#("s", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("ce", 2), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("d1", 3), Conc#(function ActionValue_#(_n0) f(Bit#(_n1) x1))), Meta#(MetaField#("d2", 4), Conc#(function ActionValue_#(_n0) f(Bit#(_n1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.ResetGenIfc240, Meta#(MetaData#("_XilinxCells.ResetGenIfc240", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_XilinxCells.ResetGenIfc240", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(XilinxCells::_XilinxCells.ResetGenIfc510, Meta#(MetaData#("_XilinxCells.ResetGenIfc510", "XilinxCells", void, 1), Meta#(MetaConsNamed#("_XilinxCells.ResetGenIfc510", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(XilinxCells::_XilinxCells.SRLC32E4277#(_n0), Meta#(MetaData#("_XilinxCells.SRLC32E4277", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.SRLC32E4277", 0, 4), Tuple4#(Meta#(MetaField#("_read", 0), Conc#(Bit#(1))), Meta#(MetaField#("_write", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("a", 2), Conc#(function ActionValue_#(_n0) f(Bit#(5) x1))), Meta#(MetaField#("cascade", 3), Conc#(Bit#(1)))))))} {Generic#(XilinxCells::_XilinxCells.VDCM3657#(_n0), Meta#(MetaData#("_XilinxCells.VDCM3657", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.VDCM3657", 0, 16), Tuple16#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout180", 1), Conc#(Clock)), Meta#(MetaField#("clkout270", 2), Conc#(Clock)), Meta#(MetaField#("clkout2x180", 3), Conc#(Clock)), Meta#(MetaField#("clkout2x", 4), Conc#(Clock)), Meta#(MetaField#("clkout90", 5), Conc#(Clock)), Meta#(MetaField#("clkoutdv", 6), Conc#(Clock)), Meta#(MetaField#("clkoutfx180", 7), Conc#(Clock)), Meta#(MetaField#("clkoutfx", 8), Conc#(Clock)), Meta#(MetaField#("recfg_request", 9), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1, Bit#(7) x2, Bit#(16) x3))), Meta#(MetaField#("recfg_response", 10), Conc#(Bit#(16))), Meta#(MetaField#("RDY_recfg_response", 11), Conc#(Bit#(1))), Meta#(MetaField#("phase_shift_incdec", 12), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("phase_shift_done", 13), Conc#(Bit#(1))), Meta#(MetaField#("locked", 14), Conc#(Bit#(1))), Meta#(MetaField#("fbin", 15), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.VIDDR1124#(_n0, _n1), Meta#(MetaData#("_XilinxCells.VIDDR1124", "XilinxCells", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_XilinxCells.VIDDR1124", 0, 5), Tuple5#(Meta#(MetaField#("q1", 0), Conc#(Bit#(_n1))), Meta#(MetaField#("q2", 1), Conc#(Bit#(_n1))), Meta#(MetaField#("s", 2), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("ce", 3), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("d", 4), Conc#(function ActionValue_#(_n0) f(Bit#(_n1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.VIDELAY1283#(_n0, _n1), Meta#(MetaData#("_XilinxCells.VIDELAY1283", "XilinxCells", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_XilinxCells.VIDELAY1283", 0, 3), Tuple3#(Meta#(MetaField#("i", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("inc", 1), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("o", 2), Conc#(Bit#(_n0)))))))} {Generic#(XilinxCells::_XilinxCells.VIODELAY1432#(_n0, _n1), Meta#(MetaData#("_XilinxCells.VIODELAY1432", "XilinxCells", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_XilinxCells.VIODELAY1432", 0, 6), Tuple6#(Meta#(MetaField#("idatain", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("odatain", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("dataout", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("datain", 3), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("t", 4), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("inc", 5), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.VMMCME32473#(_n0), Meta#(MetaData#("_XilinxCells.VMMCME32473", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.VMMCME32473", 0, 25), Tuple25#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("reconfig_request", 13), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1, Bit#(7) x2, Bit#(16) x3))), Meta#(MetaField#("reconfig_response", 14), Conc#(Bit#(16))), Meta#(MetaField#("RDY_reconfig_response", 15), Conc#(Bit#(1))), Meta#(MetaField#("cddc_request", 16), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("cddc_done", 17), Conc#(Bit#(1))), Meta#(MetaField#("phase_shift_incdec", 18), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("phase_shift_done", 19), Conc#(Bit#(1))), Meta#(MetaField#("locked", 20), Conc#(Bit#(1))), Meta#(MetaField#("clkfb_stopped", 21), Conc#(Bit#(1))), Meta#(MetaField#("clkin_stopped", 22), Conc#(Bit#(1))), Meta#(MetaField#("clkin1sel", 23), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clkfbin", 24), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.VMMCME32576#(_n0), Meta#(MetaData#("_XilinxCells.VMMCME32576", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.VMMCME32576", 0, 25), Tuple25#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("reconfig_request", 13), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1, Bit#(7) x2, Bit#(16) x3))), Meta#(MetaField#("reconfig_response", 14), Conc#(Bit#(16))), Meta#(MetaField#("RDY_reconfig_response", 15), Conc#(Bit#(1))), Meta#(MetaField#("cddc_request", 16), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("cddc_done", 17), Conc#(Bit#(1))), Meta#(MetaField#("phase_shift_incdec", 18), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("phase_shift_done", 19), Conc#(Bit#(1))), Meta#(MetaField#("locked", 20), Conc#(Bit#(1))), Meta#(MetaField#("clkfb_stopped", 21), Conc#(Bit#(1))), Meta#(MetaField#("clkin_stopped", 22), Conc#(Bit#(1))), Meta#(MetaField#("clkin1sel", 23), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clkfbin", 24), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.VPLL1757#(_n0), Meta#(MetaData#("_XilinxCells.VPLL1757", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.VPLL1757", 0, 17), Tuple17#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout1", 1), Conc#(Clock)), Meta#(MetaField#("clkout2", 2), Conc#(Clock)), Meta#(MetaField#("clkout3", 3), Conc#(Clock)), Meta#(MetaField#("clkout4", 4), Conc#(Clock)), Meta#(MetaField#("clkout5", 5), Conc#(Clock)), Meta#(MetaField#("clkoutdcm0", 6), Conc#(Clock)), Meta#(MetaField#("clkoutdcm1", 7), Conc#(Clock)), Meta#(MetaField#("clkoutdcm2", 8), Conc#(Clock)), Meta#(MetaField#("clkoutdcm3", 9), Conc#(Clock)), Meta#(MetaField#("clkoutdcm4", 10), Conc#(Clock)), Meta#(MetaField#("clkoutdcm5", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout", 12), Conc#(Clock)), Meta#(MetaField#("clkfbdcm", 13), Conc#(Clock)), Meta#(MetaField#("locked", 14), Conc#(Bit#(1))), Meta#(MetaField#("clkin1sel", 15), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("fbin", 16), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.VPLL1833#(_n0), Meta#(MetaData#("_XilinxCells.VPLL1833", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.VPLL1833", 0, 17), Tuple17#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout1", 1), Conc#(Clock)), Meta#(MetaField#("clkout2", 2), Conc#(Clock)), Meta#(MetaField#("clkout3", 3), Conc#(Clock)), Meta#(MetaField#("clkout4", 4), Conc#(Clock)), Meta#(MetaField#("clkout5", 5), Conc#(Clock)), Meta#(MetaField#("clkoutdcm0", 6), Conc#(Clock)), Meta#(MetaField#("clkoutdcm1", 7), Conc#(Clock)), Meta#(MetaField#("clkoutdcm2", 8), Conc#(Clock)), Meta#(MetaField#("clkoutdcm3", 9), Conc#(Clock)), Meta#(MetaField#("clkoutdcm4", 10), Conc#(Clock)), Meta#(MetaField#("clkoutdcm5", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout", 12), Conc#(Clock)), Meta#(MetaField#("clkfbdcm", 13), Conc#(Clock)), Meta#(MetaField#("locked", 14), Conc#(Bit#(1))), Meta#(MetaField#("clkin1sel", 15), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("fbin", 16), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(XilinxCells::_XilinxCells.VSRL16E4214#(_n0), Meta#(MetaData#("_XilinxCells.VSRL16E4214", "XilinxCells", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxCells.VSRL16E4214", 0, 6), Tuple6#(Meta#(MetaField#("_read", 0), Conc#(Bit#(1))), Meta#(MetaField#("_write", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("a0", 2), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("a1", 3), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("a2", 4), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("a3", 5), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(XilinxClocks::State, Meta#(MetaData#("State", "XilinxClocks", void, 8), Either#(Meta#(MetaConsAnon#("Restart", 0, 0), void), Either#(Meta#(MetaConsAnon#("WaitLock", 1, 0), void), Either#(Meta#(MetaConsAnon#("WaitStart", 2, 0), void), Either#(Meta#(MetaConsAnon#("Address", 3, 0), void), Either#(Meta#(MetaConsAnon#("Read", 4, 0), void), Either#(Meta#(MetaConsAnon#("Modify", 5, 0), void), Either#(Meta#(MetaConsAnon#("Write", 6, 0), void), Meta#(MetaConsAnon#("WaitWriteReady", 7, 0), void))))))))))} {Generic#(XilinxClocks::VMMCM_ADV, Meta#(MetaData#("VMMCM_ADV", "XilinxClocks", void, 1), Meta#(MetaConsNamed#("VMMCM_ADV", 0, 22), Tuple22#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("clkfbin", 13), Conc#(function Action f(Bool x1))), Meta#(MetaField#("rst", 14), Conc#(function Action f(Bool x1))), Meta#(MetaField#("locked", 15), Conc#(Bool)), Meta#(MetaField#("daddr", 16), Conc#(function Action f(Bit#(7) x1))), Meta#(MetaField#("dsel", 17), Conc#(function Action f(Bool x1))), Meta#(MetaField#("di", 18), Conc#(function Action f(Bit#(16) x1))), Meta#(MetaField#("dwe", 19), Conc#(function Action f(Bool x1))), Meta#(MetaField#("dout", 20), Conc#(Bit#(16))), Meta#(MetaField#("drdy", 21), Conc#(Bool))))))} {Generic#(XilinxClocks::XilinxClockController, Meta#(MetaData#("XilinxClockController", "XilinxClocks", void, 1), Meta#(MetaConsNamed#("XilinxClockController", 0, 13), Tuple13#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("locked", 11), Conc#(Bool)), Meta#(MetaField#("csr", 12), Conc#(XilinxClocks::XilinxClockCSR))))))} {Generic#(XilinxClocks::XilinxClockParams, Meta#(MetaData#("XilinxClockParams", "XilinxClocks", void, 1), Meta#(MetaConsNamed#("XilinxClockParams", 0, 53), Tuple53#(Meta#(MetaField#("e_type", 0), Conc#(XilinxClocks::XilinxEType)), Meta#(MetaField#("clkout0_buffer", 1), Conc#(Bool)), Meta#(MetaField#("clkout0n_buffer", 2), Conc#(Bool)), Meta#(MetaField#("clkout1_buffer", 3), Conc#(Bool)), Meta#(MetaField#("clkout1n_buffer", 4), Conc#(Bool)), Meta#(MetaField#("clkout2_buffer", 5), Conc#(Bool)), Meta#(MetaField#("clkout2n_buffer", 6), Conc#(Bool)), Meta#(MetaField#("clkout3_buffer", 7), Conc#(Bool)), Meta#(MetaField#("clkout3n_buffer", 8), Conc#(Bool)), Meta#(MetaField#("clkout4_buffer", 9), Conc#(Bool)), Meta#(MetaField#("clkout5_buffer", 10), Conc#(Bool)), Meta#(MetaField#("clkout6_buffer", 11), Conc#(Bool)), Meta#(MetaField#("bandwidth", 12), Conc#(String)), Meta#(MetaField#("clkfbout_use_fine_ps", 13), Conc#(String)), Meta#(MetaField#("clkout0_use_fine_ps", 14), Conc#(String)), Meta#(MetaField#("clkout1_use_fine_ps", 15), Conc#(String)), Meta#(MetaField#("clkout2_use_fine_ps", 16), Conc#(String)), Meta#(MetaField#("clkout3_use_fine_ps", 17), Conc#(String)), Meta#(MetaField#("clkout4_cascade", 18), Conc#(String)), Meta#(MetaField#("clkout4_use_fine_ps", 19), Conc#(String)), Meta#(MetaField#("clkout5_use_fine_ps", 20), Conc#(String)), Meta#(MetaField#("clkout6_use_fine_ps", 21), Conc#(String)), Meta#(MetaField#("clock_hold", 22), Conc#(String)), Meta#(MetaField#("compensation", 23), Conc#(String)), Meta#(MetaField#("startup_wait", 24), Conc#(String)), Meta#(MetaField#("clkfbout_mult_f", 25), Conc#(Real)), Meta#(MetaField#("clkfbout_phase", 26), Conc#(Real)), Meta#(MetaField#("clkin1_period", 27), Conc#(Real)), Meta#(MetaField#("clkin2_period", 28), Conc#(Real)), Meta#(MetaField#("divclk_divide", 29), Conc#(Integer)), Meta#(MetaField#("clkout0_divide_f", 30), Conc#(Real)), Meta#(MetaField#("clkout0_duty_cycle", 31), Conc#(Real)), Meta#(MetaField#("clkout0_phase", 32), Conc#(Real)), Meta#(MetaField#("clkout1_divide", 33), Conc#(Integer)), Meta#(MetaField#("clkout1_duty_cycle", 34), Conc#(Real)), Meta#(MetaField#("clkout1_phase", 35), Conc#(Real)), Meta#(MetaField#("clkout2_divide", 36), Conc#(Integer)), Meta#(MetaField#("clkout2_duty_cycle", 37), Conc#(Real)), Meta#(MetaField#("clkout2_phase", 38), Conc#(Real)), Meta#(MetaField#("clkout3_divide", 39), Conc#(Integer)), Meta#(MetaField#("clkout3_duty_cycle", 40), Conc#(Real)), Meta#(MetaField#("clkout3_phase", 41), Conc#(Real)), Meta#(MetaField#("clkout4_divide", 42), Conc#(Integer)), Meta#(MetaField#("clkout4_duty_cycle", 43), Conc#(Real)), Meta#(MetaField#("clkout4_phase", 44), Conc#(Real)), Meta#(MetaField#("clkout5_divide", 45), Conc#(Integer)), Meta#(MetaField#("clkout5_duty_cycle", 46), Conc#(Real)), Meta#(MetaField#("clkout5_phase", 47), Conc#(Real)), Meta#(MetaField#("clkout6_divide", 48), Conc#(Integer)), Meta#(MetaField#("clkout6_duty_cycle", 49), Conc#(Real)), Meta#(MetaField#("clkout6_phase", 50), Conc#(Real)), Meta#(MetaField#("ref_jitter1", 51), Conc#(Real)), Meta#(MetaField#("ref_jitter2", 52), Conc#(Real))))))} {Generic#(XilinxClocks::XilinxClockRequest, Meta#(MetaData#("XilinxClockRequest", "XilinxClocks", void, 1), Meta#(MetaConsNamed#("XilinxClockRequest", 0, 3), Tuple3#(Meta#(MetaField#("rnw", 0), Conc#(Bool)), Meta#(MetaField#("addr", 1), Conc#(Bit#(5))), Meta#(MetaField#("data", 2), Conc#(Bit#(16)))))))} {Generic#(XilinxClocks::XilinxEType, Meta#(MetaData#("XilinxEType", "XilinxClocks", void, 3), Either#(Meta#(MetaConsAnon#("NONE", 0, 0), void), Either#(Meta#(MetaConsAnon#("E2", 1, 0), void), Meta#(MetaConsAnon#("E3", 2, 0), void)))))} {Generic#(XilinxClocks::_XilinxClocks.VMMCM_ADV606#(_n0), Meta#(MetaData#("_XilinxClocks.VMMCM_ADV606", "XilinxClocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxClocks.VMMCM_ADV606", 0, 22), Tuple22#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("clkfbin", 13), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("rst", 14), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("locked", 15), Conc#(Bit#(1))), Meta#(MetaField#("daddr", 16), Conc#(function ActionValue_#(_n0) f(Bit#(7) x1))), Meta#(MetaField#("dsel", 17), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("di", 18), Conc#(function ActionValue_#(_n0) f(Bit#(16) x1))), Meta#(MetaField#("dwe", 19), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("dout", 20), Conc#(Bit#(16))), Meta#(MetaField#("drdy", 21), Conc#(Bit#(1)))))))} {Generic#(XilinxClocks::_XilinxClocks.VMMCM_ADV710#(_n0), Meta#(MetaData#("_XilinxClocks.VMMCM_ADV710", "XilinxClocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxClocks.VMMCM_ADV710", 0, 22), Tuple22#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("clkfbin", 13), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("rst", 14), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("locked", 15), Conc#(Bit#(1))), Meta#(MetaField#("daddr", 16), Conc#(function ActionValue_#(_n0) f(Bit#(7) x1))), Meta#(MetaField#("dsel", 17), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("di", 18), Conc#(function ActionValue_#(_n0) f(Bit#(16) x1))), Meta#(MetaField#("dwe", 19), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("dout", 20), Conc#(Bit#(16))), Meta#(MetaField#("drdy", 21), Conc#(Bit#(1)))))))} {Generic#(XilinxClocks::_XilinxClocks.VMMCM_ADV814#(_n0), Meta#(MetaData#("_XilinxClocks.VMMCM_ADV814", "XilinxClocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_XilinxClocks.VMMCM_ADV814", 0, 22), Tuple22#(Meta#(MetaField#("clkout0", 0), Conc#(Clock)), Meta#(MetaField#("clkout0_n", 1), Conc#(Clock)), Meta#(MetaField#("clkout1", 2), Conc#(Clock)), Meta#(MetaField#("clkout1_n", 3), Conc#(Clock)), Meta#(MetaField#("clkout2", 4), Conc#(Clock)), Meta#(MetaField#("clkout2_n", 5), Conc#(Clock)), Meta#(MetaField#("clkout3", 6), Conc#(Clock)), Meta#(MetaField#("clkout3_n", 7), Conc#(Clock)), Meta#(MetaField#("clkout4", 8), Conc#(Clock)), Meta#(MetaField#("clkout5", 9), Conc#(Clock)), Meta#(MetaField#("clkout6", 10), Conc#(Clock)), Meta#(MetaField#("clkfbout", 11), Conc#(Clock)), Meta#(MetaField#("clkfbout_n", 12), Conc#(Clock)), Meta#(MetaField#("clkfbin", 13), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("rst", 14), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("locked", 15), Conc#(Bit#(1))), Meta#(MetaField#("daddr", 16), Conc#(function ActionValue_#(_n0) f(Bit#(7) x1))), Meta#(MetaField#("dsel", 17), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("di", 18), Conc#(function ActionValue_#(_n0) f(Bit#(16) x1))), Meta#(MetaField#("dwe", 19), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("dout", 20), Conc#(Bit#(16))), Meta#(MetaField#("drdy", 21), Conc#(Bit#(1)))))))} {Generic#(ZBus::BState, Meta#(MetaData#("BState", "ZBus", void, 3), Either#(Meta#(MetaConsAnon#("HiZN", 0, 0), void), Either#(Meta#(MetaConsAnon#("HiZ", 1, 0), void), Meta#(MetaConsAnon#("Nothing", 2, 0), void)))))} {Generic#(ZBus::ZBusBusIFC#(t), Meta#(MetaData#("ZBusBusIFC", "ZBus", StarArg#(t), 1), Meta#(MetaConsNamed#("ZBusBusIFC", 0, 3), Tuple3#(Meta#(MetaField#("fromBusSample", 0), Conc#(function Action f(ZBusUtil::ZBit#(t) x1, Bool x2))), Meta#(MetaField#("toBusValue", 1), Conc#(ZBusUtil::ZBit#(t))), Meta#(MetaField#("toBusCtl", 2), Conc#(Bool))))))} {Generic#(ZBus::ZBusClientIFC#(t), Meta#(MetaData#("ZBusClientIFC", "ZBus", StarArg#(t), 1), Meta#(MetaConsNamed#("ZBusClientIFC", 0, 3), Tuple3#(Meta#(MetaField#("drive", 0), Conc#(function Action f(t x1))), Meta#(MetaField#("get", 1), Conc#(t)), Meta#(MetaField#("fromBusValid", 2), Conc#(Bool))))))} {Generic#(ZBus::ZBusDualIFC#(t), Meta#(MetaData#("ZBusDualIFC", "ZBus", StarArg#(t), 1), Meta#(MetaConsNamed#("ZBusDualIFC", 0, 2), Tuple2#(Meta#(MetaField#("busIFC", 0), Conc#(ZBus::ZBusBusIFC#(t))), Meta#(MetaField#("clientIFC", 1), Conc#(ZBus::ZBusClientIFC#(t)))))))} {Generic#(ZBus::ZBusInternalIFC#(t), Meta#(MetaData#("ZBusInternalIFC", "ZBus", StarArg#(t), 1), Meta#(MetaConsNamed#("ZBusInternalIFC", 0, 1), Meta#(MetaField#("zout", 0), Conc#(ZBusUtil::ZBit#(t))))))} {Generic#(ZBusUtil::ConvertFromZ#(i), Meta#(MetaData#("ConvertFromZ", "ZBusUtil", StarArg#(i), 1), Meta#(MetaConsNamed#("ConvertFromZ", 0, 1), Meta#(MetaField#("convert", 0), Conc#(function i f(ZBusUtil::ZBit#(i) x1))))))} {Generic#(ZBusUtil::ConvertToZ#(i), Meta#(MetaData#("ConvertToZ", "ZBusUtil", StarArg#(i), 1), Meta#(MetaConsNamed#("ConvertToZ", 0, 1), Meta#(MetaField#("convert", 0), Conc#(function ZBusUtil::ZBit#(i) f(i x1, Bool x2))))))} {Generic#(ZBusUtil::ResolveZ#(i), Meta#(MetaData#("ResolveZ", "ZBusUtil", StarArg#(i), 1), Meta#(MetaConsNamed#("ResolveZ", 0, 1), Meta#(MetaField#("resolve", 0), Conc#(function ZBusUtil::ZBit#(i) f(ZBusUtil::ZBit#(i) x1, ZBusUtil::ZBit#(i) x2))))))} {Generic#(ZBusUtil::ZBit#(t), Meta#(MetaData#("ZBit", "ZBusUtil", StarArg#(t), 1), Meta#(MetaConsNamed#("ZBit", 0, 1), Meta#(MetaField#("word", 0), Conc#(t)))))} {Generic#(ZBusUtil::_ZBusUtil.ConvertFromZ95#(_n0, _n1), Meta#(MetaData#("_ZBusUtil.ConvertFromZ95", "ZBusUtil", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_ZBusUtil.ConvertFromZ95", 0, 1), Meta#(MetaField#("convert", 0), Conc#(function Bit#(_n1) f(Bit#(_n0) x1))))))} {Generic#(ZBusUtil::_ZBusUtil.ConvertToZ56#(_n0, _n1), Meta#(MetaData#("_ZBusUtil.ConvertToZ56", "ZBusUtil", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_ZBusUtil.ConvertToZ56", 0, 1), Meta#(MetaField#("convert", 0), Conc#(function Bit#(_n1) f(Bit#(_n0) x1, Bit#(1) x2))))))} {Generic#(ZBusUtil::_ZBusUtil.ResolveZ134#(_n0), Meta#(MetaData#("_ZBusUtil.ResolveZ134", "ZBusUtil", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_ZBusUtil.ResolveZ134", 0, 1), Meta#(MetaField#("resolve", 0), Conc#(function Bit#(_n0) f(Bit#(_n0) x1, Bit#(_n0) x2))))))} {Generic#(_PreludeBSV.CReg5712#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.CReg5712", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.CReg5712", 0, 10), Tuple10#(Meta#(MetaField#("port0__write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port0__read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("port1__write", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port1__read", 3), Conc#(Bit#(_n0))), Meta#(MetaField#("port2__write", 4), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port2__read", 5), Conc#(Bit#(_n0))), Meta#(MetaField#("port3__write", 6), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port3__read", 7), Conc#(Bit#(_n0))), Meta#(MetaField#("port4__write", 8), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port4__read", 9), Conc#(Bit#(_n0)))))))} {Generic#(_PreludeBSV.CReg5808#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.CReg5808", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.CReg5808", 0, 10), Tuple10#(Meta#(MetaField#("port0__write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port0__read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("port1__write", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port1__read", 3), Conc#(Bit#(_n0))), Meta#(MetaField#("port2__write", 4), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port2__read", 5), Conc#(Bit#(_n0))), Meta#(MetaField#("port3__write", 6), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port3__read", 7), Conc#(Bit#(_n0))), Meta#(MetaField#("port4__write", 8), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port4__read", 9), Conc#(Bit#(_n0)))))))} {Generic#(_PreludeBSV.CReg5903#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.CReg5903", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.CReg5903", 0, 10), Tuple10#(Meta#(MetaField#("port0__write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port0__read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("port1__write", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port1__read", 3), Conc#(Bit#(_n0))), Meta#(MetaField#("port2__write", 4), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port2__read", 5), Conc#(Bit#(_n0))), Meta#(MetaField#("port3__write", 6), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port3__read", 7), Conc#(Bit#(_n0))), Meta#(MetaField#("port4__write", 8), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port4__read", 9), Conc#(Bit#(_n0)))))))} {Generic#(_PreludeBSV.VRWire0128#(_n0), Meta#(MetaData#("_PreludeBSV.VRWire0128", "PreludeBSV", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire0128", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("whas", 1), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire0162#(_n0), Meta#(MetaData#("_PreludeBSV.VRWire0162", "PreludeBSV", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire0162", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("whas", 1), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire0449#(_n0), Meta#(MetaData#("_PreludeBSV.VRWire0449", "PreludeBSV", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire0449", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("whas", 1), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire0483#(_n0), Meta#(MetaData#("_PreludeBSV.VRWire0483", "PreludeBSV", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire0483", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("whas", 1), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire109#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VRWire109", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire109", 0, 3), Tuple3#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("whas", 2), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire143#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VRWire143", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire143", 0, 3), Tuple3#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("whas", 2), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire430#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VRWire430", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire430", 0, 3), Tuple3#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("whas", 2), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire464#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VRWire464", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire464", 0, 3), Tuple3#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("whas", 2), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VWire0314#(_n0), Meta#(MetaData#("_PreludeBSV.VWire0314", "PreludeBSV", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.VWire0314", 0, 1), Meta#(MetaField#("wset", 0), Conc#(ActionValue_#(_n0))))))} {Generic#(_PreludeBSV.VWire297#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VWire297", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VWire297", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0)))))))} {Generic#(_PreludeBSV.VWire607#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VWire607", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VWire607", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0)))))))} {Generic#(void, Meta#(MetaData#("PrimUnit", "Prelude", void, 1), Meta#(MetaConsNamed#("PrimUnit", 0, 0), void)))}}} {position {%/Libraries/Prelude.bs 4303 6 {Library Prelude}}}
TaggedUnion {Conc#(type a)} polymorphic {members {{a Conc}}} {position {%/Libraries/Prelude.bs 4317 5 {Library Prelude}}}
TaggedUnion {ConcPrim#(type a)} polymorphic {members {{a ConcPrim}}} {position {%/Libraries/Prelude.bs 4323 5 {Library Prelude}}}
TaggedUnion {ConcPoly#(type a)} polymorphic {members {{a ConcPoly}}} {position {%/Libraries/Prelude.bs 4330 5 {Library Prelude}}}
TaggedUnion {Meta#(type m, type r)} polymorphic {members {{r Meta}}} {position {%/Libraries/Prelude.bs 4334 5 {Library Prelude}}}
Enum MetaData {members MetaData} {position {%/Libraries/Prelude.bs 4341 6 {Library Prelude}}}
Enum StarArg {members StarArg} {position {%/Libraries/Prelude.bs 4346 6 {Library Prelude}}}
Enum NumArg {members NumArg} {position {%/Libraries/Prelude.bs 4348 6 {Library Prelude}}}
Enum StrArg {members StrArg} {position {%/Libraries/Prelude.bs 4350 6 {Library Prelude}}}
Enum ConArg {members ConArg} {position {%/Libraries/Prelude.bs 4352 5 {Library Prelude}}}
Enum MetaConsNamed {members MetaConsNamed} {position {%/Libraries/Prelude.bs 4357 6 {Library Prelude}}}
Enum MetaConsAnon {members MetaConsAnon} {position {%/Libraries/Prelude.bs 4362 6 {Library Prelude}}}
Enum MetaField {members MetaField} {position {%/Libraries/Prelude.bs 4368 6 {Library Prelude}}}
Enum SVA::SeqRes {members {SeqFail SeqPending SeqHold SeqHoldStrong}} {width 2} {position {%/Libraries/SVA.bsv 79 48 {Library SVA}}}
Interface SVA::Sequence {members {{method {Bool running {} {{(* ports = [] *)}}}} {method {ActionValue#(SVA::SeqRes) advance {} {{(* ports = [] *)}}}}}} {position {%/Libraries/SVA.bsv 81 11 {Library SVA}}}
Interface SVA::Wrap1 {members {{method {SVA::SeqRes f Bool {{(* ports = ["b"] *)}}}}}} {position {%/Libraries/SVA.bsv 108 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap2 {members {{method {{Tuple3#(Bool, Bool, SVA::SeqRes)} f SVA::SeqRes {{(* ports = ["r"] *)}}}}}} {position {%/Libraries/SVA.bsv 156 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap3 {members {{method {Bool f SVA::SeqRes {{(* ports = ["r"] *)}}}}}} {position {%/Libraries/SVA.bsv 304 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap4 {members {{method {SVA::SeqRes f {Bool Bool SVA::SeqRes SVA::SeqRes} {{(* ports = ["run_1", "run_2", "res_l", "res_r"] *)}}}}}} {position {%/Libraries/SVA.bsv 339 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap5 {members {{method {SVA::SeqRes f {SVA::SeqRes SVA::SeqRes} {{(* ports = ["res_l", "res_r"] *)}}}}}} {position {%/Libraries/SVA.bsv 414 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap6 {members {{method {{Tuple2#(Bool, SVA::SeqRes)} f SVA::SeqRes {{(* ports = ["r"] *)}}}}}} {position {%/Libraries/SVA.bsv 486 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap7 {members {{method {{Tuple3#(Bool, Maybe#(SVA::SeqRes), SVA::SeqRes)} f {SVA::SeqRes SVA::SeqRes} {{(* ports = ["r", "ff"] *)}}}}}} {position {%/Libraries/SVA.bsv 545 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Enum SVA::PropRes {members {PropTrue PropUndetermined PropFalse PropVacuous}} {width 2} {position {%/Libraries/SVA.bsv 735 55 {Library SVA}}}
Interface SVA::Property {members {{method {ActionValue#(SVA::PropRes) advance {} {{(* ports = [] *)}}}}}} {position {%/Libraries/SVA.bsv 737 11 {Library SVA}}}
Enum SVA::AssertRes {members {AssertOkay AssertFail}} {width 1} {position {%/Libraries/SVA.bsv 904 28 {Library SVA}}}
Interface SVA::Assertion {members {{method {ActionValue#(SVA::AssertRes) advance {} {{(* ports = [] *)}}}}}} {position {%/Libraries/SVA.bsv 906 11 {Library SVA}}}
Struct {Memory::MemoryRequest#(numeric type a, numeric type d)} polymorphic {members {{Bool write {width 1}} {{Bit#(TDiv#(d, 8))} byteen} {Bit#(a) address} {Bit#(d) data}}} {position {%/Libraries/Memory.bsv 31 3 {Library Memory}}}
Struct {Memory::MemoryResponse#(numeric type d)} polymorphic {members {{Bit#(d) data}}} {position {%/Libraries/Memory.bsv 35 3 {Library Memory}}}
Alias {Memory::MemoryServer#(numeric type a, numeric type d)} {ClientServer::Server#(Memory::MemoryRequest#(a, d), Memory::MemoryResponse#(d))} {position {%/Libraries/Memory.bsv 37 60 {Library Memory}}}
Alias {Memory::MemoryClient#(numeric type a, numeric type d)} {ClientServer::Client#(Memory::MemoryRequest#(a, d), Memory::MemoryResponse#(d))} {position {%/Libraries/Memory.bsv 38 60 {Library Memory}}}
Typeclass {CShow::CShow#(type a)} {members {{{function Fmt f(a x1)} cshow} {{function Fmt f(a x1)} cshowP}}} {instances {CShow::CShow#(Bit#(n)) CShow::CShow#(Char) CShow::CShow#(Fmt) CShow::CShow#(Int#(a)) CShow::CShow#(Real) CShow::CShow#(String) {CShow::CShow#(Tuple2#(a, b))   provisos (CShow::CShowTuple#(b), CShow::CShow#(a))} CShow::CShow#(UInt#(a)) {CShow::CShow#(a)   provisos (CShow::CShow'#(r), Generic#(a, r))} CShow::CShow#(void)}} {position {%/Libraries/CShow.bs 12 6 {Library CShow}}}
Typeclass {CShow::CShowTuple#(type a)} {members {{{function Fmt f(a x1)} cshowTuple}}} {instances {{CShow::CShowTuple#(Tuple2#(a, b))   provisos (CShow::CShowTuple#(b), CShow::CShow#(a))} {CShow::CShowTuple#(a)   provisos (CShow::CShow#(a))}}} {position {%/Libraries/CShow.bs 49 6 {Library CShow}}}

Typeclass {CShow::CShowSummand#(type a)} {members {{{function Fmt f(a x1)} cshowSummandNamed} {{function Fmt f(a x1)} cshowSummandAnon}}} {instances {{CShow::CShowSummand#(Meta#(MetaField#(name, idx), a))   provisos (CShow::CShow'#(a))} {CShow::CShowSummand#(Tuple2#(a, b))   provisos (CShow::CShowSummand#(b), CShow::CShowSummand#(a))} CShow::CShowSummand#(void)}} {position {%/Libraries/CShow.bs 101 6 {Library CShow}}}
Typeclass {IVec::IVec#(numeric type n, type t)} {dependencies {{t determines n} {n determines t}}} {members {{{function t#(a) f(Vector::Vector#(n, a) x1)} toIVec} {{function Vector::Vector#(n, a) f(t#(a) x1)} fromIVec}}} {instances {{IVec::IVec#(0, IVec::IVec0)} {IVec::IVec#(1, IVec::IVec1)} {IVec::IVec#(10, IVec::IVec10)} {IVec::IVec#(11, IVec::IVec11)} {IVec::IVec#(12, IVec::IVec12)} {IVec::IVec#(13, IVec::IVec13)} {IVec::IVec#(14, IVec::IVec14)} {IVec::IVec#(15, IVec::IVec15)} {IVec::IVec#(16, IVec::IVec16)} {IVec::IVec#(2, IVec::IVec2)} {IVec::IVec#(3, IVec::IVec3)} {IVec::IVec#(32, IVec::IVec32)} {IVec::IVec#(33, IVec::IVec33)} {IVec::IVec#(4, IVec::IVec4)} {IVec::IVec#(5, IVec::IVec5)} {IVec::IVec#(6, IVec::IVec6)} {IVec::IVec#(7, IVec::IVec7)} {IVec::IVec#(8, IVec::IVec8)} {IVec::IVec#(9, IVec::IVec9)}}} {position {%/Libraries/IVec.bs 28 6 {Library IVec}}}
Interface {IVec::IVec0#(type a)} polymorphic {members {}} {position {%/Libraries/IVec.bs 33 10 {Library IVec}}}
Interface {IVec::IVec1#(type a)} polymorphic {members {{method {a _m00 {} {}}}}} {position {%/Libraries/IVec.bs 45 10 {Library IVec}}}
Interface {IVec::IVec2#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}}}} {position {%/Libraries/IVec.bs 60 10 {Library IVec}}}
Interface {IVec::IVec3#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}}}} {position {%/Libraries/IVec.bs 78 10 {Library IVec}}}
Interface {IVec::IVec4#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}}}} {position {%/Libraries/IVec.bs 99 10 {Library IVec}}}
Interface {IVec::IVec5#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}}}} {position {%/Libraries/IVec.bs 123 10 {Library IVec}}}
Interface {IVec::IVec6#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}}}} {position {%/Libraries/IVec.bs 150 10 {Library IVec}}}
Interface {IVec::IVec7#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}}}} {position {%/Libraries/IVec.bs 180 10 {Library IVec}}}
Interface {IVec::IVec8#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}}}} {position {%/Libraries/IVec.bs 213 10 {Library IVec}}}
Interface {IVec::IVec9#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}}}} {position {%/Libraries/IVec.bs 249 10 {Library IVec}}}
Interface {IVec::IVec10#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}}}} {position {%/Libraries/IVec.bs 288 10 {Library IVec}}}
Interface {IVec::IVec11#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}}}} {position {%/Libraries/IVec.bs 330 10 {Library IVec}}}
Interface {IVec::IVec12#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}}}} {position {%/Libraries/IVec.bs 375 10 {Library IVec}}}
Interface {IVec::IVec13#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}}}} {position {%/Libraries/IVec.bs 423 10 {Library IVec}}}
Interface {IVec::IVec14#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}}}} {position {%/Libraries/IVec.bs 474 10 {Library IVec}}}
Interface {IVec::IVec15#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}} {method {a _m14 {} {}}}}} {position {%/Libraries/IVec.bs 528 10 {Library IVec}}}
Interface {IVec::IVec16#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}} {method {a _m14 {} {}}} {method {a _m15 {} {}}}}} {position {%/Libraries/IVec.bs 585 10 {Library IVec}}}
Interface {IVec::IVec32#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}} {method {a _m14 {} {}}} {method {a _m15 {} {}}} {method {a _m16 {} {}}} {method {a _m17 {} {}}} {method {a _m18 {} {}}} {method {a _m19 {} {}}} {method {a _m20 {} {}}} {method {a _m21 {} {}}} {method {a _m22 {} {}}} {method {a _m23 {} {}}} {method {a _m24 {} {}}} {method {a _m25 {} {}}} {method {a _m26 {} {}}} {method {a _m27 {} {}}} {method {a _m28 {} {}}} {method {a _m29 {} {}}} {method {a _m30 {} {}}} {method {a _m31 {} {}}}}} {position {%/Libraries/IVec.bs 645 10 {Library IVec}}}
Interface {IVec::IVec33#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}} {method {a _m14 {} {}}} {method {a _m15 {} {}}} {method {a _m16 {} {}}} {method {a _m17 {} {}}} {method {a _m18 {} {}}} {method {a _m19 {} {}}} {method {a _m20 {} {}}} {method {a _m21 {} {}}} {method {a _m22 {} {}}} {method {a _m23 {} {}}} {method {a _m24 {} {}}} {method {a _m25 {} {}}} {method {a _m26 {} {}}} {method {a _m27 {} {}}} {method {a _m28 {} {}}} {method {a _m29 {} {}}} {method {a _m30 {} {}}} {method {a _m31 {} {}}} {method {a _m32 {} {}}}}} {position {%/Libraries/IVec.bs 754 10 {Library IVec}}}
Interface {Randomizable::Randomize#(type a)} polymorphic {members {{interface Randomizable::Control cntrl {}} {method {ActionValue#(a) next {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Randomizable.bsv 13 11 {Library Randomizable}}}
Interface {Randomizable::VRandomize#(numeric type n)} polymorphic {members {{method {ActionValue#(Bit#(n)) next {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Randomizable.bsv 18 11 {Library Randomizable}}}
Enum CPU_Globals::Control {members {CONTROL_DISCARD CONTROL_STRAIGHT CONTROL_BRANCH CONTROL_CSRR_W CONTROL_CAPBRANCH CONTROL_SCR_W CONTROL_CSRR_S_or_C CONTROL_FENCE CONTROL_FENCE_I CONTROL_SFENCE_VMA CONTROL_MRET CONTROL_SRET CONTROL_URET CONTROL_WFI CONTROL_TRAP}} {width 4} {position {../src_Core/CPU/CPU_Globals.bsv 443 6}}
Typeclass {Randomizable::Randomizable#(type t)} {members {{{a#(Randomizable::Randomize#(t))   provisos (IsModule#(a, b))} mkRandomizer}}} {instances {{Randomizable::Randomizable#(TLM2Defines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Bounded#(cstm_type), Add#(data_size, _v100, s1), Add#(id_size, _v101, _v100), Bits#(cstm_type, _v101), Add#(2, _v102, s0), Add#(2, _v103, _v102), Add#(addr_size, _v104, _v103), Add#(data_size, _v105, _v104), Add#(uint_size, _v106, _v105), Add#(TDiv#(data_size, 8), _v107, _v106), Add#(2, _v108, _v107), Add#(TLog#(TDiv#(data_size, 8)), _v109, _v108), Add#(uint_size, _v110, _v109), Add#(1, _v111, _v110), Add#(id_size, _v112, _v111), Add#(id_size, _v100, _v112))} {Randomizable::Randomizable#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size))   provisos (Add#(data_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(id_size, 1))), s1), Add#(2, TAdd#(2, TAdd#(addr_size, TAdd#(user_size, TAdd#(4, TAdd#(data_size, TAdd#(length_size, TAdd#(user_size, TAdd#(TAdd#(1, TDiv#(data_size, 8)), TAdd#(2, TAdd#(3, TAdd#(4, TAdd#(2, TAdd#(id_size, 10))))))))))))), s0))} {Randomizable::Randomizable#(TLMDefines::TLMRequest#(id_size, addr_size, data_size, uint_size, cstm_type))   provisos (Bounded#(cstm_type), Add#(data_size, _v100, s1), Add#(id_size, _v101, _v100), Bits#(cstm_type, _v101), Add#(2, _v102, s0), Add#(2, _v103, _v102), Add#(addr_size, _v104, _v103), Add#(data_size, _v105, _v104), Add#(uint_size, _v106, _v105), Add#(TDiv#(data_size, 8), _v107, _v106), Add#(2, _v108, _v107), Add#(TLog#(TDiv#(data_size, 8)), _v109, _v108), Add#(uint_size, _v110, _v109), Add#(1, _v111, _v110), Add#(id_size, _v112, _v111), Add#(id_size, _v100, _v112))}}} {position {%/Libraries/Randomizable.bsv 180 11 {Library Randomizable}}}
Interface {GrayCounter::GrayCounter#(numeric type n)} polymorphic {members {{method {Action incr {} {{(* ports = [] *)}}}} {method {Action decr {} {{(* ports = [] *)}}}} {method {Action sWriteBin Bit#(n) {{(* ports = ["value"] *)}}}} {method {Bit#(n) sReadBin {} {{(* ports = [] *)}}}} {method {Action sWriteGray Gray::Gray#(n) {{(* ports = ["value"] *)}}}} {method {Gray::Gray#(n) sReadGray {} {{(* ports = [] *)}}}} {method {Bit#(n) dReadBin {} {{(* ports = [] *)}}}} {method {Gray::Gray#(n) dReadGray {} {{(* ports = [] *)}}}}}} {position {%/Libraries/GrayCounter.bsv 20 11 {Library GrayCounter}}}
Interface {BRAM_Compat::BRAM_PORT#(type addr, type data)} polymorphic {members {{method {Action put {Bool addr data} {{(* ports = ["write", "address", "datain"] *)}}}} {method {data read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/BRAM_Compat.bsv 46 11 {Library BRAM_Compat}}} {attributes {{(* always_ready  *)}}}
Interface {BRAM_Compat::BRAM_DUAL_PORT#(type addr, type data)} polymorphic {members {{interface {BRAM_Compat::BRAM_PORT#(addr, data)} a {}} {interface {BRAM_Compat::BRAM_PORT#(addr, data)} b {}}}} {position {%/Libraries/BRAM_Compat.bsv 56 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM_PORT_BE#(type addr, type data, numeric type n)} polymorphic {members {{method {Action put {Bit#(n) addr data} {{(* ports = ["writeen", "address", "datain"] *)}}}} {method {data read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/BRAM_Compat.bsv 74 11 {Library BRAM_Compat}}} {attributes {{(* always_ready  *)}}}
Interface {BRAM_Compat::BRAM_DUAL_PORT_BE#(type addr, type data, numeric type n)} polymorphic {members {{interface {BRAM_Compat::BRAM_PORT_BE#(addr, data, n)} a {}} {interface {BRAM_Compat::BRAM_PORT_BE#(addr, data, n)} b {}}}} {position {%/Libraries/BRAM_Compat.bsv 79 11 {Library BRAM_Compat}}}
TaggedUnion {UIntRange::UIntRange#(numeric type lo, numeric type hi)} polymorphic {members {{{Bit#(TLog#(TAdd#(hi, 1)))} U}}} {position {%/Libraries/UIntRange.bs 24 6 {Library UIntRange}}}

Struct {FloatingPoint::FloatingPoint#(numeric type e, numeric type m)} polymorphic {members {{Bool sign {width 1}} {Bit#(e) exp} {Bit#(m) sfd}}} {position {%/Libraries/FloatingPoint.bsv 69 3 {Library FloatingPoint}}}
Enum FloatingPoint::Disorder {members {LT EQ GT UO}} {width 2} {position {%/Libraries/FloatingPoint.bsv 84 6 {Library FloatingPoint}}}
Enum FloatingPoint::RoundMode {members {Rnd_Nearest_Even Rnd_Nearest_Away_Zero Rnd_Plus_Inf Rnd_Minus_Inf Rnd_Zero}} {width 3} {position {%/Libraries/FloatingPoint.bsv 126 3 {Library FloatingPoint}}}
Struct FloatingPoint::Exception {members {{Bool invalid_op {width 1}} {Bool divide_0 {width 1}} {Bool overflow {width 1}} {Bool underflow {width 1}} {Bool inexact {width 1}}}} {width 5} {position {%/Libraries/FloatingPoint.bsv 150 3 {Library FloatingPoint}}}
Alias FloatingPoint::Half {FloatingPoint::FloatingPoint#(5, 10)} {position {%/Libraries/FloatingPoint.bsv 212 31 {Library FloatingPoint}}}
Alias FloatingPoint::Float {FloatingPoint::FloatingPoint#(8, 23)} {position {%/Libraries/FloatingPoint.bsv 213 31 {Library FloatingPoint}}}
Alias FloatingPoint::SingleExtended {FloatingPoint::FloatingPoint#(11, 32)} {position {%/Libraries/FloatingPoint.bsv 214 31 {Library FloatingPoint}}}
Alias FloatingPoint::Double {FloatingPoint::FloatingPoint#(11, 52)} {position {%/Libraries/FloatingPoint.bsv 215 31 {Library FloatingPoint}}}
Alias FloatingPoint::DoubleExtended {FloatingPoint::FloatingPoint#(15, 64)} {position {%/Libraries/FloatingPoint.bsv 216 31 {Library FloatingPoint}}}
Struct {FloatingPoint::CommonState#(numeric type e, numeric type m)} polymorphic {members {{{Maybe#(FloatingPoint::FloatingPoint#(e, m))} res} {FloatingPoint::Exception exc {width 5}} {FloatingPoint::RoundMode rmode {width 3}}}} {position {%/Libraries/FloatingPoint.bsv 1824 6 {Library FloatingPoint}}}
Typeclass {FloatingPoint::FixedFloatCVT#(type tfl, type tfx)} {members {{{function Tuple2#(tfl, FloatingPoint::Exception) f(tfx x1, UInt#(a) x2, FloatingPoint::RoundMode x3)} vFixedToFloat} {{function Tuple2#(tfx, FloatingPoint::Exception) f(UInt#(a) x1, tfl x2, FloatingPoint::RoundMode x3)} vFloatToFixed}}} {instances {{FloatingPoint::FixedFloatCVT#(FloatingPoint::FloatingPoint#(e, m), FixedPoint::FixedPoint#(isize, fsize))   provisos (Add#(m, c__, TMax#(n, TAdd#(3, m))), Add#(1, b__, TMax#(n, TAdd#(3, m))), Add#(1, a__, n), Add#(isize, fsize, n))} {FloatingPoint::FixedFloatCVT#(FloatingPoint::FloatingPoint#(e, m), Int#(n))   provisos (Add#(m, c__, TMax#(n, TAdd#(3, m))), Add#(1, b__, TMax#(n, TAdd#(3, m))), Add#(1, a__, n))} {FloatingPoint::FixedFloatCVT#(FloatingPoint::FloatingPoint#(e, m), UInt#(n))   provisos (Add#(1, c__, TMax#(n, TAdd#(3, m))), Add#(m, b__, TMax#(n, TAdd#(3, m))), Add#(1, a__, TMax#(n, TAdd#(m, 2))))}}} {position {%/Libraries/FloatingPoint.bsv 3051 11 {Library FloatingPoint}}}
Struct {NumberTypes::WrapNumber#(numeric type sz)} polymorphic {members {{UInt#(sz) n}}} {position {%/Libraries/NumberTypes.bsv 12 33 {Library NumberTypes}}}
Struct {NumberTypes::BuffIndex#(numeric type sz, numeric type ln)} polymorphic {members {{UInt#(sz) bix}}} {position {%/Libraries/NumberTypes.bsv 47 35 {Library NumberTypes}}}
Typeclass {BuildVector::BuildVector#(type a, type r, numeric type n)} {dependencies {{r determines (a, n)}}} {members {{{function r f(Vector::Vector#(n, a) x1, a x2)} buildVec_}}} {instances {{BuildVector::BuildVector#(a, Vector::Vector#(m, a), n)   provisos (Add#(n, 1, m))} {BuildVector::BuildVector#(a, function r f(a x1), n)   provisos (Add#(n, 1, m), BuildVector::BuildVector#(a, r, m))}}} {position {%/Libraries/BuildVector.bsv 46 11 {Library BuildVector}}}
Interface {RevertingVirtualReg::VReg#(numeric type n)} polymorphic {members {{method {PrimAction write Bit#(n) {}}} {method {Bit#(n) read {} {}}}}} {position {%/Libraries/RevertingVirtualReg.bs 3 10 {Library RevertingVirtualReg}}}
Alias StmtFSM::PosInfo String {position {%/Libraries/StmtFSM.bs 39 5 {Library StmtFSM}}}
TaggedUnion StmtFSM::Freedom {members {{String Early} {void Overlap {width 0}}}} {position {%/Libraries/StmtFSM.bs 56 5 {Library StmtFSM}}}
TaggedUnion StmtFSM::ActionType {members {{void Default {width 0}} {StmtFSM::Freedom Update} {String Jump} {void Wait {width 0}} {void NoME {width 0}}}} {position {%/Libraries/StmtFSM.bs 61 5 {Library StmtFSM}}}
Struct StmtFSM::RuleSet {members {{Rules me_local} {Rules me_parents} {Rules no_me}}} {position {%/Libraries/StmtFSM.bs 82 7 {Library StmtFSM}}}
TaggedUnion {StmtFSM::StmtT#(type a)} polymorphic {members {{{StmtFSM::StmtT_$SAction#(a)} SAction} {{StmtFSM::StmtT_$SActionValue#(a)} SActionValue} {{StmtFSM::StmtT_$SNamed#(a)} SNamed} {{StmtFSM::StmtT_$SLabel#(a)} SLabel} {{StmtFSM::StmtT_$SJump#(a)} SJump} {{StmtFSM::StmtT_$SCall#(a)} SCall} {{StmtFSM::StmtT_$SUntil#(a)} SUntil} {{StmtFSM::StmtT_$SIf1#(a)} SIf1} {{StmtFSM::StmtT_$SIf2#(a)} SIf2} {{StmtFSM::StmtT_$SWhile#(a)} SWhile} {{StmtFSM::StmtT_$SFor#(a)} SFor} {{StmtFSM::StmtT_$SSeq#(a)} SSeq} {{StmtFSM::StmtT_$SPar#(a)} SPar} {String SSkip} {{StmtFSM::StmtT_$SRepeat#(a)} SRepeat} {{StmtFSM::StmtT_$SDelay#(a)} SDelay} {String SReturn} {String SBreak} {String SContinue} {{StmtFSM::StmtT_$SExprS#(a)} SExprS}}} {position {%/Libraries/StmtFSM.bs 110 5 {Library StmtFSM}}}
















Typeclass {StmtFSM::StmtTifiable#(type t, type a)} {dependencies {{t determines a}}} {members {{{function StmtFSM::StmtT#(a) f(String x1, t x2)} stmtify}}} {instances {{StmtFSM::StmtTifiable#(Action, t)} {StmtFSM::StmtTifiable#(StmtFSM::RStmt#(a), a)}}} {position {%/Libraries/StmtFSM.bs 132 6 {Library StmtFSM}}}
Alias {StmtFSM::RStmts#(type a)} List#(StmtFSM::StmtT#(a)) {position {%/Libraries/StmtFSM.bs 144 5 {Library StmtFSM}}}
Alias {StmtFSM::RStmt#(type a)} {StmtFSM::StmtM#(a, void)} {position {%/Libraries/StmtFSM.bs 146 5 {Library StmtFSM}}}
TaggedUnion {StmtFSM::StmtM#(type a, type b)} polymorphic {members {{{Module#(Tuple2#(b, List#(StmtFSM::StmtT#(a))))} S}}} {position {%/Libraries/StmtFSM.bs 148 5 {Library StmtFSM}}}
Alias StmtFSM::Stmt {StmtFSM::StmtM#(Bit#(0), void)} {position {%/Libraries/StmtFSM.bs 171 5 {Library StmtFSM}}}
Interface StmtFSM::Waiter {members {{method {Action wait {} {}}}}} {position {%/Libraries/StmtFSM.bs 278 10 {Library StmtFSM}}}
Interface StmtFSM::Once {members {{method {Action start {} {}}} {method {Action clear {} {}}} {method {Bool done {} {}}}}} {position {%/Libraries/StmtFSM.bs 293 10 {Library StmtFSM}}}
Interface {StmtFSM::RFSM#(type a)} polymorphic {members {{method {Action start {} {}}} {method {Action abort {} {}}} {method {Bool ready {} {}}}}} {position {%/Libraries/StmtFSM.bs 317 10 {Library StmtFSM}}}
Interface StmtFSM::FSMAbort {members {{method {Action abort {} {}}}}} {position {%/Libraries/StmtFSM.bs 322 10 {Library StmtFSM}}}
Interface StmtFSM::FSM {members {{method {Action start {} {}}} {method {Bool done {} {}}} {method {Action waitTillDone {} {}}} {method {Action abort {} {}}}}} {position {%/Libraries/StmtFSM.bs 325 10 {Library StmtFSM}}}
Interface {StmtFSM::FSMServer#(type a, type b)} polymorphic {members {{interface {ClientServer::Server#(a, b)} server {}} {method {Action abort {} {}}}}} {position {%/Libraries/StmtFSM.bs 331 10 {Library StmtFSM}}}
Alias StmtFSM::NextStateDescriptor {Tuple2#(Bool, Integer)} {position {%/Libraries/StmtFSM.bs 339 5 {Library StmtFSM}}}
Alias StmtFSM::NextStateDescriptors {List#(Tuple2#(Bool, Integer))} {position {%/Libraries/StmtFSM.bs 342 5 {Library StmtFSM}}}
Alias StmtFSM::TwoStateDescriptor_orig {Tuple3#(Bool, Integer, Integer)} {position {%/Libraries/StmtFSM.bs 345 5 {Library StmtFSM}}}
TaggedUnion StmtFSM::TwoStateDescriptor {members {{{StmtFSM::TwoStateDescriptor_$TSD} TSD}}} {position {%/Libraries/StmtFSM.bs 348 5 {Library StmtFSM}}}

Enum StmtFSM::TSDType {members {Default Start End}} {position {%/Libraries/StmtFSM.bs 351 5 {Library StmtFSM}}}
Alias StmtFSM::TwoStateDescriptors List#(StmtFSM::TwoStateDescriptor) {position {%/Libraries/StmtFSM.bs 364 5 {Library StmtFSM}}}
Typeclass {StmtFSM::ServerCallToStmtT#(type t)} {members {{{function StmtFSM::StmtM#(d, void) f(t#(c, b) x1, c x2, a x3, String x4)   provisos (GetPut::ToPut#(a, b))} callServer}}} {instances {StmtFSM::ServerCallToStmtT#(ClientServer::Server) StmtFSM::ServerCallToStmtT#(StmtFSM::FSMServer)}} {position {%/Libraries/StmtFSM.bs 400 6 {Library StmtFSM}}}
TaggedUnion {StmtFSM::StmtFT#(type a)} polymorphic {members {{{StmtFSM::StmtFT_$SFAction#(a)} SFAction} {{StmtFSM::StmtFT_$SFLabel#(a)} SFLabel} {{StmtFSM::StmtFT_$SFNamed#(a)} SFNamed} {{StmtFSM::StmtFT_$SFUntil#(a)} SFUntil} {{StmtFSM::StmtFT_$SFIf1#(a)} SFIf1} {{StmtFSM::StmtFT_$SFIf2#(a)} SFIf2} {{StmtFSM::StmtFT_$SFFor#(a)} SFFor} {{StmtFSM::StmtFT_$SFSeq#(a)} SFSeq} {{StmtFSM::StmtFT_$SFPar#(a)} SFPar} {String SFSkip} {String SFDelay} {String SFReturn} {{StmtFSM::StmtFT_$SFWhile#(a)} SFWhile}}} {position {%/Libraries/StmtFSM.bs 421 5 {Library StmtFSM}}}










Struct {StmtFSM::LabelState#(type a)} polymorphic {members {{Integer state_num} {String return_label} {List#(String) label_names} {{Maybe#(Tuple2#(String, String))} loop_labels} {GetPut::Put#(a) ifc}}} {position {%/Libraries/StmtFSM.bs 440 7 {Library StmtFSM}}}
Enum XilinxClocks::State {members {Restart WaitLock WaitStart Address Read Modify Write WaitWriteReady}} {width 3} {position {XilinxClocks.bsv 41 3}}

Interface StmtFSM::NCount {members {{method {Bool is Bit#(32) {}}} {method {Action reset {} {}}} {method {Action incr {} {}}}}} {position {%/Libraries/StmtFSM.bs 2235 10 {Library StmtFSM}}}

Interface {TriState::TriState#(type t)} polymorphic {members {{interface Inout#(t) io {}} {method {t _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/TriState.bsv 16 11 {Library TriState}}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Typeclass {TieOff::TieOff#(type t)} {members {{{function a#(Empty) f(t x1)   provisos (IsModule#(a, b))} mkTieOff}}} {instances {{TieOff::TieOff#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {TieOff::TieOff#(AhbDefines::AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size))} {TieOff::TieOff#(AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))} {TieOff::TieOff#(AhbDefines::AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))} TieOff::TieOff#(AxiDefines::AxiLowPower) {TieOff::TieOff#(AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))} {TieOff::TieOff#(AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size))} {TieOff::TieOff#(Memory::MemoryClient#(a, d))} {TieOff::TieOff#(Vector::Vector#(n, t))   provisos (TieOff::TieOff#(t))}}} {position {%/Libraries/TieOff.bsv 26 11 {Library TieOff}}}
Interface {RPush::RPush#(type a)} polymorphic {members {{method {Action push a {}}} {method {Action clear {} {}}}}} {position {%/Libraries/RPush.bs 29 10 {Library RPush}}}
Struct HList::HNil {members {}} {position {%/Libraries/HList.bsv 3 19 {Library HList}}}
Struct {HList::HCons#(type e, type l)} polymorphic {members {{e hd} {l tl}}} {position {%/Libraries/HList.bsv 9 19 {Library HList}}}
Typeclass {HList::HList#(type l)} {members {}} {instances {{HList::HList#(HList::HCons#(e, l))   provisos (HList::HList#(l))} HList::HList#(HList::HNil)}} {position {%/Libraries/HList.bsv 13 11 {Library HList}}}
Typeclass {HList::HHead#(type l, type h)} {dependencies {{l determines h}}} {members {{{function h f(l x1)} hHead}}} {instances {{HList::HHead#(HList::HCons#(e, l), e)}}} {position {%/Libraries/HList.bsv 23 11 {Library HList}}}
Typeclass {HList::HTail#(type l, type lt)} {dependencies {{l determines lt}}} {members {{{function lt f(l x1)} hTail}}} {instances {{HList::HTail#(HList::HCons#(e, l), l)}}} {position {%/Libraries/HList.bsv 32 11 {Library HList}}}
Typeclass {HList::HLength#(type l, numeric type n)} {dependencies {{l determines n}}} {members {}} {instances {{HList::HLength#(HList::HCons#(e, l), nPlus1)   provisos (Add#(n, 1, nPlus1), HList::HLength#(l, n))} {HList::HLength#(HList::HNil, 0)}}} {position {%/Libraries/HList.bsv 41 11 {Library HList}}}
Typeclass {HList::HAppend#(type l, type l1, type l2)} {dependencies {{(l, l1) determines l2}}} {members {{{function l2 f(l x1, l1 x2)} hAppend}}} {instances {{HList::HAppend#(HList::HCons#(e, l), l1, HList::HCons#(e, l2))   provisos (HList::HAppend#(l, l1, l2), HList::HList#(l))} {HList::HAppend#(HList::HNil, l, l)}}} {position {%/Libraries/HList.bsv 61 11 {Library HList}}}
Typeclass {HList::HSplit#(type l, type l1, type l2)} {members {{{function Tuple2#(l1, l2) f(l x1)} hSplit}}} {instances {{HList::HSplit#(HList::HCons#(hd, tl), HList::HCons#(hd, l3), l2)   provisos (HList::HSplit#(tl, l3, l2))} {HList::HSplit#(HList::HNil, HList::HNil, HList::HNil)} {HList::HSplit#(l, HList::HNil, l)}}} {position {%/Libraries/HList.bsv 80 11 {Library HList}}}
Typeclass {HList::Gettable#(type c1, type c2)} {members {{{function c2 f(c1 x1)} getIt} {{function c1 f(c1 x1, c2 x2)} putIt}}} {instances {{HList::Gettable#(HList::HCons#(t1, t2), t1)} {HList::Gettable#(HList::HCons#(t1, t2), t3)   provisos (HList::Gettable#(t2, t3))}}} {position {%/Libraries/HList.bsv 106 11 {Library HList}}}
Alias {HList::HList1#(type t)} {HList::HCons#(t, HList::HNil)} {position {%/Libraries/HList.bsv 127 62 {Library HList}}}
Alias {HList::HList2#(type t1, type t2)} {HList::HCons#(t1, HList::HCons#(t2, HList::HNil))} {position {%/Libraries/HList.bsv 128 62 {Library HList}}}
Alias {HList::HList3#(type t1, type t2, type t3)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HNil)))} {position {%/Libraries/HList.bsv 129 62 {Library HList}}}
Alias {HList::HList4#(type t1, type t2, type t3, type t4)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HNil))))} {position {%/Libraries/HList.bsv 130 62 {Library HList}}}
Alias {HList::HList5#(type t1, type t2, type t3, type t4, type t5)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HCons#(t5, HList::HNil)))))} {position {%/Libraries/HList.bsv 134 15 {Library HList}}}
Alias {HList::HList6#(type t1, type t2, type t3, type t4, type t5, type t6)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HCons#(t5, HList::HCons#(t6, HList::HNil))))))} {position {%/Libraries/HList.bsv 138 15 {Library HList}}}
Alias {HList::HList7#(type t1, type t2, type t3, type t4, type t5, type t6, type t7)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HCons#(t5, HList::HCons#(t6, HList::HCons#(t7, HList::HNil)))))))} {position {%/Libraries/HList.bsv 142 15 {Library HList}}}
Alias {HList::HList8#(type t1, type t2, type t3, type t4, type t5, type t6, type t7, type t8)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HCons#(t5, HList::HCons#(t6, HList::HCons#(t7, HList::HCons#(t8, HList::HNil))))))))} {position {%/Libraries/HList.bsv 146 15 {Library HList}}}
Alias {AhbDefines::LUInt#(numeric type m)} {UInt#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 29 35}}
Struct MIMO::MIMOConfiguration {members {{Bool unguarded {width 1}} {Bool bram_based {width 1}}}} {position {%/Libraries/MIMO.bsv 40 3 {Library MIMO}}}
Interface {MIMO::MIMO#(numeric type max_in, numeric type max_out, numeric type size, type t)} polymorphic {members {{method {Action enq {{UInt#(TLog#(TAdd#(max_in, 1)))} {Vector::Vector#(max_in, t)}} {{(* ports = ["count", "data"] *)}}}} {method {{Vector::Vector#(max_out, t)} first {} {{(* ports = [] *)}}}} {method {Action deq {{UInt#(TLog#(TAdd#(max_out, 1)))}} {{(* ports = ["count"] *)}}}} {method {Bool enqReady {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool enqReadyN {{UInt#(TLog#(TAdd#(max_in, 1)))}} {{(* ports = ["count"] *)} {(* always_ready  *)}}}} {method {Bool deqReady {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool deqReadyN {{UInt#(TLog#(TAdd#(max_out, 1)))}} {{(* ports = ["count"] *)} {(* always_ready  *)}}}} {method {{UInt#(TLog#(TAdd#(size, 1)))} count {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/MIMO.bsv 52 11 {Library MIMO}}}
Interface {FIFOF::FIFOF#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Bool notFull {} {}}} {method {Bool notEmpty {} {}}} {method {Action clear {} {}}}}} {position {%/Libraries/FIFOF.bs 31 10 {Library FIFOF}}}

Interface {CB::CompletionBuffer#(numeric type ln, type a, type b)} polymorphic {members {{interface {GetPut::Put#(CB::TokenRequest#(a, ln))} request {{(* ports = [] *)}}} {interface {GetPut::Get#(CB::TokenRange#(a, ln))} reserve {{(* ports = [] *)}}} {interface {GetPut::Put#(Tuple2#(Bit#(ln), b))} complete {{(* ports = [] *)}}} {interface GetPut::Get#(b) drain {{(* ports = [] *)}}}}} {position {CB.bsv 63 11}}
Alias {CompletionBuffer::CBToken#(numeric type n)} Bit#(TLog#(n)) {position {%/Libraries/CompletionBuffer.bsv 34 24 {Library CompletionBuffer}}}
Typeclass {ToString::ToString#(type a)} {members {{{function String f(a x1)} toString}}} {instances {{ToString::ToString#(Array#(a))   provisos (ToString::ToString#(a))} ToString::ToString#(Integer) {ToString::ToString#(List#(a))   provisos (ToString::ToString#(a))} ToString::ToString#(StmtFSM::TwoStateDescriptor) ToString::ToString#(String) {ToString::ToString#(Tuple2#(a, b))   provisos (ToString::ToString#(b), ToString::ToString#(a))} {ToString::ToString#(Tuple3#(a, b, c))   provisos (ToString::ToString#(c), ToString::ToString#(b), ToString::ToString#(a))} {ToString::ToString#(Vector::Vector#(n, a))   provisos (ToString::ToString#(a))}}} {position {%/Libraries/ToString.bs 10 6 {Library ToString}}}
Typeclass {ToString::ToStringM#(type a)} {members {{{function b#(String) f(a x1)   provisos (Monad#(b))} toStringM}}} {instances {{ToString::ToStringM#(Array#(a))   provisos (ToString::ToStringM#(a))} ToString::ToStringM#(Integer) {ToString::ToStringM#(List#(a))   provisos (ToString::ToStringM#(a))} ToString::ToStringM#(String) {ToString::ToStringM#(Tuple2#(a, b))   provisos (ToString::ToStringM#(b), ToString::ToStringM#(a))} {ToString::ToStringM#(Tuple3#(a, b, c))   provisos (ToString::ToStringM#(c), ToString::ToStringM#(b), ToString::ToStringM#(a))} {ToString::ToStringM#(Vector::Vector#(n, a))   provisos (ToString::ToStringM#(a))}}} {position {%/Libraries/ToString.bs 13 6 {Library ToString}}}
Interface SpecialFIFOs::SCounter {members {{method {Action incr {} {{(* ports = [] *)}}}} {method {Action decr {} {{(* ports = [] *)}}}} {method {Bool isEq Integer {{(* ports = ["n"] *)}}}} {method {Action setNext {a Array#(Reg#(a))} {{(* ports = ["value", "as"] *)}}}} {method {Action set {a Array#(Reg#(a))} {{(* ports = ["value", "as"] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/SpecialFIFOs.bsv 230 11 {Library SpecialFIFOs}}}
Struct {FixedPoint::FixedPoint#(numeric type isize, numeric type fsize)} polymorphic {members {{Bit#(isize) i} {Bit#(fsize) f}}} {position {%/Libraries/FixedPoint.bsv 29 1 {Library FixedPoint}}}
Enum FloatingPoint::RoundMode {members {Rnd_Nearest_Even Rnd_Nearest_Away_Zero Rnd_Plus_Inf Rnd_Minus_Inf Rnd_Zero}} {width 3} {position {%/Libraries/FloatingPoint.bsv 126 3 {Library FloatingPoint}}}
Interface {ClientServer::Client#(type a, type b)} polymorphic {members {{interface GetPut::Get#(a) request {}} {interface GetPut::Put#(b) response {}}}} {position {%/Libraries/ClientServer.bs 34 10 {Library ClientServer}}}
Interface {ClientServer::Server#(type a, type b)} polymorphic {members {{interface GetPut::Put#(a) request {}} {interface GetPut::Get#(b) response {}}}} {position {%/Libraries/ClientServer.bs 45 10 {Library ClientServer}}}
Alias {ClientServer::ClientServer#(type a, type b)} {Tuple2#(ClientServer::Client#(a, b), ClientServer::Server#(a, b))} {position {%/Libraries/ClientServer.bs 100 5 {Library ClientServer}}}
Alias ClientServer::MaxLat 8 {position {%/Libraries/ClientServer.bs 263 5 {Library ClientServer}}}

Interface {NullCrossingFIFOF::CrossingFIFOF#(type a)} polymorphic {members {{interface FIFOF::FIFOF#(a) fifo {}} {method {Bool allowCclock {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/NullCrossingFIFOF.bsv 7 11 {Library NullCrossingFIFOF}}}
Interface {NullCrossingFIFOF::SceMiCrossingReg#(type a)} polymorphic {members {{interface Reg#(a) regifc {}} {method {Bool writtenPulse {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool readPulse {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool allowCclock {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/NullCrossingFIFOF.bsv 120 11 {Library NullCrossingFIFOF}}}
TaggedUnion {ModuleContextCore::ModuleContext#(type c, type i)} polymorphic {members {{{module f#(c x1)(Tuple2#(c, i))} M}}} {position {%/Libraries/ModuleContextCore.bs 4 5 {Library ModuleContextCore}}}
Alias ModuleContext::CLOCKCONTEXTSIZE 9 {position {%/Libraries/ModuleContext.bsv 11 11 {Library ModuleContext}}}
Typeclass {ModuleContext::Context#(type mc1, type c2)} {members {{{mc1#(c2)   provisos (IsModule#(mc1, a))} getContext} {{function mc1#(Empty) f(c2 x1)   provisos (IsModule#(mc1, a))} putContext}}} {instances {{ModuleContext::Context#(Module, void)} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(st1), st1)} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(st1), st2)   provisos (HList::Gettable#(st1, st2))}}} {position {%/Libraries/ModuleContext.bsv 13 11 {Library ModuleContext}}}
Struct {ModuleContext::ClockContextP#(numeric type n)} polymorphic {members {{{Vector::Vector#(n, Clock)} clks} {{Vector::Vector#(n, Reset)} rsts}}} {position {%/Libraries/ModuleContext.bsv 70 19 {Library ModuleContext}}}
Alias ModuleContext::ClockContext ModuleContext::ClockContextP#(9) {position {%/Libraries/ModuleContext.bsv 75 42 {Library ModuleContext}}}
Alias ModuleContext::ClockContextIfc Empty {position {%/Libraries/ModuleContext.bsv 76 15 {Library ModuleContext}}}
Alias {ModuleContext::ClockModule#(type a)} {ModuleContextCore::ModuleContext#(HList::HCons#(ModuleContext::ClockContextP#(9), HList::HNil), a)} {position {%/Libraries/ModuleContext.bsv 77 51 {Library ModuleContext}}}
Typeclass {ModuleContext::Expose#(type c, type ifc, numeric type n)} {dependencies {{c determines (ifc, n)}}} {members {{{function a#(ifc) f(c x1)   provisos (IsModule#(a, b))} unburyContext} {{function a#(ifc) f(c x1, ModuleContext::ClockContextP#(n) x2)   provisos (IsModule#(a, b))} unburyContextWithClocks}}} {instances {{ModuleContext::Expose#(HList::HCons#(c1, c2), Tuple2#(ifc1, ifc2), n)   provisos (ModuleContext::Expose#(c2, ifc2, n), ModuleContext::Expose#(c1, ifc1, n))} {ModuleContext::Expose#(HList::HList1#(ct1), ifc1, n)   provisos (ModuleContext::Expose#(ct1, ifc1, n))} {ModuleContext::Expose#(LBus::LBusContextP#(sa, sd), LBus::LBusContextIfcP#(sa, sd), ModuleContext::CLOCKCONTEXTSIZE)} {ModuleContext::Expose#(ModuleContext::ClockContextP#(n), Empty, n)}}} {position {%/Libraries/ModuleContext.bsv 86 11 {Library ModuleContext}}}
Typeclass {ModuleContext::Hide#(type mc, type ifc)} {members {{{function mc#(Empty) f(ifc x1)} reburyContext}}} {instances {{ModuleContext::Hide#(mc, Empty)   provisos (IsModule#(mc, a))} {ModuleContext::Hide#(mc, LBus::LBusContextIfcP#(sa, sd))   provisos (ModuleContext::Context#(mc, LBus::LBusContextP#(sa, sd)), IsModule#(mc, _a))} {ModuleContext::Hide#(mc, Tuple2#(ifc1, ifc2))   provisos (ModuleContext::Hide#(mc, ifc2), ModuleContext::Hide#(mc, ifc1), IsModule#(mc, a))}}} {position {%/Libraries/ModuleContext.bsv 135 11 {Library ModuleContext}}}
Typeclass {ModuleContext::ContextRun#(type m, type c1, type ctx2)} {dependencies {{(m, c1) determines ctx2}}} {members {{{function m#(Tuple2#(c1, a)) f(c1 x1, ModuleContextCore::ModuleContext#(ctx2, a) x2)} runWithContext}}} {instances {{ModuleContext::ContextRun#(Module, c1, c1)} {ModuleContext::ContextRun#(ModuleContextCore::ModuleContext#(ctx), c1, HList::HCons#(c1, ctx))}}} {position {%/Libraries/ModuleContext.bsv 158 11 {Library ModuleContext}}}
Typeclass {ModuleContext::ContextsRun#(type m, type c1, type ctx2)} {dependencies {{(m, c1) determines ctx2}}} {members {{{function m#(Tuple2#(c1, a)) f(c1 x1, ModuleContextCore::ModuleContext#(ctx2, a) x2)} runWithContexts}}} {instances {{ModuleContext::ContextsRun#(Module, c1, c1)} {ModuleContext::ContextsRun#(ModuleContextCore::ModuleContext#(ctx), c1, ctx2)   provisos (HList::HSplit#(ctx2, c1, ctx), HList::HAppend#(c1, ctx, ctx2))}}} {position {%/Libraries/ModuleContext.bsv 164 11 {Library ModuleContext}}}
Alias {ModuleCollect::ModuleCollect#(type a, type b)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(a), HList::HNil), b)} {position {%/Libraries/ModuleCollect.bsv 14 45 {Library ModuleCollect}}}
Interface {ModuleCollect::IWithCollection#(type a, type i)} polymorphic {members {{method {i device {} {{(* ports = [] *)}}}} {method {List#(a) collection {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ModuleCollect.bsv 36 11 {Library ModuleCollect}}}


Typeclass {Boolify::Boolify#(type a)} {members {{{function a f(a x1)} boolify}}} {instances {{Boolify::Boolify#(function b f(a x1))   provisos (Bits#(b, sb), Bits#(a, sa), Bounded#(a))} {Boolify::Boolify#(function c f(a x1, b x2))   provisos (Boolify::Boolify#(function c f(Tuple2#(a, b) x1)))}}} {position {%/Libraries/Boolify.bs 20 6 {Library Boolify}}}
Interface {Cntrs::Count#(type t)} polymorphic {members {{method {Action incr t {{(* ports = ["val"] *)}}}} {method {Action decr t {{(* ports = ["val"] *)}}}} {method {Action update t {{(* ports = ["val"] *)}}}} {method {Action _write t {{(* ports = ["val"] *)}}}} {method {t _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Cntrs.bsv 12 11 {Library Cntrs}}}
Interface {Cntrs::VCount#(type t)} polymorphic {members {{method {Action incrA t {{(* ports = ["val"] *)}}}} {method {Action incrB t {{(* ports = ["val"] *)}}}} {method {Action update t {{(* ports = ["val"] *)}}}} {method {Action _write t {{(* ports = ["val"] *)}}}} {method {t _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Cntrs.bsv 42 11 {Library Cntrs}}}
Typeclass {Cntrs::ModArith#(type t)} {members {}} {instances {Cntrs::ModArith#(Bit#(n)) Cntrs::ModArith#(Int#(n)) Cntrs::ModArith#(UInt#(n))}} {position {%/Libraries/Cntrs.bsv 95 11 {Library Cntrs}}}
Interface Cntrs::UCount {members {{method {Action update Integer {{(* ports = ["val"] *)}}}} {method {Action _write Integer {{(* ports = ["val"] *)}}}} {method {Action incr Integer {{(* ports = ["val"] *)}}}} {method {Action decr Integer {{(* ports = ["val"] *)}}}} {method {Bool isEqual Integer {{(* ports = ["val"] *)}}}} {method {Bool isLessThan Integer {{(* ports = ["val"] *)}}}} {method {Bool isGreaterThan Integer {{(* ports = ["val"] *)}}}}}} {position {%/Libraries/Cntrs.bsv 109 11 {Library Cntrs}}}
Interface {LFSR::LFSR#(type a)} polymorphic {members {{method {Action seed a {}}} {method {a value {} {}}} {method {Action next {} {}}}}} {position {%/Libraries/LFSR.bs 28 10 {Library LFSR}}}
Interface {FoldFIFOF::FoldFIFO#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Bool notFull {} {}}} {method {Bool notEmpty {} {}}} {method {Action clear {} {}}} {method {b foldr {{function b f(a x1, b x2)} b} {}}}}} {position {%/Libraries/FoldFIFOF.bs 12 10 {Library FoldFIFOF}}}
Interface {Probe::Probe#(type a)} polymorphic {members {{method {Action _write a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/Probe.bsv 34 11 {Library Probe}}}
Alias ModuleContext::CLOCKCONTEXTSIZE 9 {position {%/Libraries/ModuleContext.bsv 11 11 {Library ModuleContext}}}
Typeclass {ModuleContext::Context#(type mc1, type c2)} {members {{{mc1#(c2)   provisos (IsModule#(mc1, a))} getContext} {{function mc1#(Empty) f(c2 x1)   provisos (IsModule#(mc1, a))} putContext}}} {instances {{ModuleContext::Context#(Module, void)} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(st1), st1)} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(st1), st2)   provisos (HList::Gettable#(st1, st2))}}} {position {%/Libraries/ModuleContext.bsv 13 11 {Library ModuleContext}}}
Struct {ModuleContext::ClockContextP#(numeric type n)} polymorphic {members {{{Vector::Vector#(n, Clock)} clks} {{Vector::Vector#(n, Reset)} rsts}}} {position {%/Libraries/ModuleContext.bsv 70 19 {Library ModuleContext}}}
Alias ModuleContext::ClockContext ModuleContext::ClockContextP#(9) {position {%/Libraries/ModuleContext.bsv 75 42 {Library ModuleContext}}}
Alias ModuleContext::ClockContextIfc Empty {position {%/Libraries/ModuleContext.bsv 76 15 {Library ModuleContext}}}
Alias {ModuleContext::ClockModule#(type a)} {ModuleContextCore::ModuleContext#(HList::HCons#(ModuleContext::ClockContextP#(9), HList::HNil), a)} {position {%/Libraries/ModuleContext.bsv 77 51 {Library ModuleContext}}}
Typeclass {ModuleContext::Expose#(type c, type ifc, numeric type n)} {dependencies {{c determines (ifc, n)}}} {members {{{function a#(ifc) f(c x1)   provisos (IsModule#(a, b))} unburyContext} {{function a#(ifc) f(c x1, ModuleContext::ClockContextP#(n) x2)   provisos (IsModule#(a, b))} unburyContextWithClocks}}} {instances {{ModuleContext::Expose#(HList::HCons#(c1, c2), Tuple2#(ifc1, ifc2), n)   provisos (ModuleContext::Expose#(c2, ifc2, n), ModuleContext::Expose#(c1, ifc1, n))} {ModuleContext::Expose#(HList::HList1#(ct1), ifc1, n)   provisos (ModuleContext::Expose#(ct1, ifc1, n))} {ModuleContext::Expose#(LBus::LBusContextP#(sa, sd), LBus::LBusContextIfcP#(sa, sd), ModuleContext::CLOCKCONTEXTSIZE)} {ModuleContext::Expose#(ModuleContext::ClockContextP#(n), Empty, n)}}} {position {%/Libraries/ModuleContext.bsv 86 11 {Library ModuleContext}}}
Typeclass {ModuleContext::Hide#(type mc, type ifc)} {members {{{function mc#(Empty) f(ifc x1)} reburyContext}}} {instances {{ModuleContext::Hide#(mc, Empty)   provisos (IsModule#(mc, a))} {ModuleContext::Hide#(mc, LBus::LBusContextIfcP#(sa, sd))   provisos (ModuleContext::Context#(mc, LBus::LBusContextP#(sa, sd)), IsModule#(mc, _a))} {ModuleContext::Hide#(mc, Tuple2#(ifc1, ifc2))   provisos (ModuleContext::Hide#(mc, ifc2), ModuleContext::Hide#(mc, ifc1), IsModule#(mc, a))}}} {position {%/Libraries/ModuleContext.bsv 135 11 {Library ModuleContext}}}
Typeclass {ModuleContext::ContextRun#(type m, type c1, type ctx2)} {dependencies {{(m, c1) determines ctx2}}} {members {{{function m#(Tuple2#(c1, a)) f(c1 x1, ModuleContextCore::ModuleContext#(ctx2, a) x2)} runWithContext}}} {instances {{ModuleContext::ContextRun#(Module, c1, c1)} {ModuleContext::ContextRun#(ModuleContextCore::ModuleContext#(ctx), c1, HList::HCons#(c1, ctx))}}} {position {%/Libraries/ModuleContext.bsv 158 11 {Library ModuleContext}}}
Typeclass {ModuleContext::ContextsRun#(type m, type c1, type ctx2)} {dependencies {{(m, c1) determines ctx2}}} {members {{{function m#(Tuple2#(c1, a)) f(c1 x1, ModuleContextCore::ModuleContext#(ctx2, a) x2)} runWithContexts}}} {instances {{ModuleContext::ContextsRun#(Module, c1, c1)} {ModuleContext::ContextsRun#(ModuleContextCore::ModuleContext#(ctx), c1, ctx2)   provisos (HList::HSplit#(ctx2, c1, ctx), HList::HAppend#(c1, ctx, ctx2))}}} {position {%/Libraries/ModuleContext.bsv 164 11 {Library ModuleContext}}}
TaggedUnion {ModuleContextCore::ModuleContext#(type c, type i)} polymorphic {members {{{module f#(c x1)(Tuple2#(c, i))} M}}} {position {%/Libraries/ModuleContextCore.bs 4 5 {Library ModuleContextCore}}}
TaggedUnion {OInt::OInt#(numeric type n)} polymorphic {members {{{Vector::Vector#(n, Bool)} O}}} {position {%/Libraries/OInt.bs 22 5 {Library OInt}}}

Interface {Mcp::IMcpUnitF#(type b)} polymorphic {members {{method {b result {} {}}} {method {Bool isValid {} {}}}}} {position {%/Libraries/Mcp.bs 8 10 {Library Mcp}}}
Interface {RevertingVirtualReg::VReg#(numeric type n)} polymorphic {members {{method {PrimAction write Bit#(n) {}}} {method {Bit#(n) read {} {}}}}} {position {%/Libraries/RevertingVirtualReg.bs 3 10 {Library RevertingVirtualReg}}}
Typeclass {Connectable: :Connectable#(type a, type b)
} {members {
        {
            {function c#(Empty) f(a x1, b x2)   provisos (IsModule#(c, d))
            } mkConnection
        }
    }
} {instances {
        {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_AR_Master_Sig#(a, b), AXI4Lite_Types: :AXI4Lite_AR_Slave_Sig#(a, b))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_AR_Slave_Sig#(a, b), AXI4Lite_Types: :AXI4Lite_AR_Master_Sig#(a, b))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_AW_Master_Sig#(a, b), AXI4Lite_Types: :AXI4Lite_AW_Slave_Sig#(a, b))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_AW_Slave_Sig#(a, b), AXI4Lite_Types: :AXI4Lite_AW_Master_Sig#(a, b))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_B_Master_Sig#(a), AXI4Lite_Types: :AXI4Lite_B_Slave_Sig#(a))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_B_Slave_Sig#(a), AXI4Lite_Types: :AXI4Lite_B_Master_Sig#(a))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g), AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), AXI4_Types: :AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_Master_Sig#(a, b, c, d, e, f, g), AXI4Lite_Types: :AXI4Lite_Slave_Sig#(a, b, c, d, e, f, g))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_R_Master_Sig#(a, b), AXI4Lite_Types: :AXI4Lite_R_Slave_Sig#(a, b))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_R_Slave_Sig#(a, b), AXI4Lite_Types: :AXI4Lite_R_Master_Sig#(a, b))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_Slave#(a, b, c, d, e, f, g), AXI4Lite_Types: :AXI4Lite_Master#(a, b, c, d, e, f, g))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), AXI4_Types: :AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_Slave_Sig#(a, b, c, d, e, f, g), AXI4Lite_Types: :AXI4Lite_Master_Sig#(a, b, c, d, e, f, g))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_W_Master_Sig#(a, b), AXI4Lite_Types: :AXI4Lite_W_Slave_Sig#(a, b))
        } {Connectable: :Connectable#(AXI4Lite_Types: :AXI4Lite_W_Slave_Sig#(a, b), AXI4Lite_Types: :AXI4Lite_W_Master_Sig#(a, b))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_AR_Master_Sig#(a, b, c), AXI4_Types: :AXI4_AR_Slave_Sig#(a, b, c))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_AR_Slave_Sig#(a, b, c), AXI4_Types: :AXI4_AR_Master_Sig#(a, b, c))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_AW_Master_Sig#(a, b, c), AXI4_Types: :AXI4_AW_Slave_Sig#(a, b, c))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_AW_Slave_Sig#(a, b, c), AXI4_Types: :AXI4_AW_Master_Sig#(a, b, c))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_B_Master_Sig#(a, b), AXI4_Types: :AXI4_B_Slave_Sig#(a, b))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_B_Slave_Sig#(a, b), AXI4_Types: :AXI4_B_Master_Sig#(a, b))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h), AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), AXI4Lite_Types: :AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_Master_Sig#(a, b, c, d, e, f, g, h), AXI4_Types: :AXI4_Slave_Sig#(a, b, c, d, e, f, g, h))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_R_Master_Sig#(a, b, c), AXI4_Types: :AXI4_R_Slave_Sig#(a, b, c))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_R_Slave_Sig#(a, b, c), AXI4_Types: :AXI4_R_Master_Sig#(a, b, c))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_Slave#(a, b, c, d, e, f, g, h), AXI4_Types: :AXI4_Master#(a, b, c, d, e, f, g, h))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), AXI4Lite_Types: :AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_Slave_Sig#(a, b, c, d, e, f, g, h), AXI4_Types: :AXI4_Master_Sig#(a, b, c, d, e, f, g, h))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_W_Master_Sig#(a, b), AXI4_Types: :AXI4_W_Slave_Sig#(a, b))
        } {Connectable: :Connectable#(AXI4_Types: :AXI4_W_Slave_Sig#(a, b), AXI4_Types: :AXI4_W_Master_Sig#(a, b))
        } {Connectable: :Connectable#(Action, Action)
        } {Connectable: :Connectable#(ActionValue#(a), function Action f(a x1))
        } {Connectable: :Connectable#(AhbDefines: :AhbMaster#(id_size, addr_size, data_size, length_size, user_size), AhbDefines: :AhbMasterDual#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AhbDefines: :AhbMaster#(id_size, addr_size, data_size, length_size, user_size), AhbDefines: :AhbSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AhbDefines: :AhbMasterArbiter, AhbDefines: :AhbMasterArbiterDual)
        } {Connectable: :Connectable#(AhbDefines: :AhbSlaveDual#(id_size, addr_size, data_size, length_size, user_size), AhbDefines: :AhbSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AhbDefines: :AhbSlaveSelector#(id_size, addr_size, data_size, length_size, user_size), AhbDefines: :AhbSlaveSelectorDual)
        } {Connectable: :Connectable#(AhbDefines: :AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size), AhbDefines: :AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AhbDefines: :AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size), AhbDefines: :AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AhbDefines: :AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size), AhbDefines: :AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AhbDefines: :AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size), AhbDefines: :AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(ApbDefines: :ApbMaster#(id_size, addr_size, data_size, length_size, user_size), ApbDefines: :ApbMasterDual#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(ApbDefines: :ApbMaster#(id_size, addr_size, data_size, length_size, user_size), ApbDefines: :ApbSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(ApbDefines: :ApbSlaveDual#(id_size, addr_size, data_size, length_size, user_size), ApbDefines: :ApbSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(ApbDefines: :ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size), ApbDefines: :ApbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(ApbDefines: :ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size), ApbDefines: :ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(ApbDefines: :ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size), ApbDefines: :ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(ApbDefines: :ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size), ApbDefines: :ApbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Arbiter: :ArbiterClient_IFC, Arbiter: :ArbiterRequest_IFC)
        } {Connectable: :Connectable#(Axi4Defines: :Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines: :Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4Defines: :Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines: :Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4Defines: :Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines: :Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4Defines: :Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines: :Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4Defines: :Axi4RdWrMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines: :Axi4RdWrSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4Defines: :Axi4RdWrSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines: :Axi4RdWrMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4Defines: :Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines: :Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4Defines: :Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines: :Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4Defines: :Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines: :Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4Defines: :Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines: :Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4LDefines: :Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4LDefines: :Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4LDefines: :Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4LDefines: :Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4LDefines: :Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4LDefines: :Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4LDefines: :Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4LDefines: :Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4LDefines: :Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4LDefines: :Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4LDefines: :Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4LDefines: :Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4LDefines: :Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4LDefines: :Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(Axi4LDefines: :Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4LDefines: :Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AxiDefines: :AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines: :AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AxiDefines: :AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines: :AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AxiDefines: :AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines: :AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AxiDefines: :AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines: :AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AxiDefines: :AxiRdWrMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines: :AxiRdWrSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AxiDefines: :AxiRdWrSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines: :AxiRdWrMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AxiDefines: :AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines: :AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AxiDefines: :AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines: :AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AxiDefines: :AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines: :AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(AxiDefines: :AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines: :AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size))
        } {Connectable: :Connectable#(BGetPut: :BClientS#(sa, sb), BGetPut: :BServerS#(sa, sb))
        } {Connectable: :Connectable#(BGetPut: :BGetS#(sa), BGetPut: :BPutS#(sa))
        } {Connectable: :Connectable#(BGetPut: :BPutS#(sa), BGetPut: :BGetS#(sa))
        } {Connectable: :Connectable#(BGetPut: :BServerS#(sa, sb), BGetPut: :BClientS#(sa, sb))
        } {Connectable: :Connectable#(BusDefines: :BusSend#(td), BusDefines: :BusRecv#(td))
        } {Connectable: :Connectable#(CGetPut: :CClientS#(n, a, sa, b, sb), CGetPut: :CServerS#(n, a, sa, b, sb))
        } {Connectable: :Connectable#(CGetPut: :CGetS#(n, a, sa), CGetPut: :CPutS#(n, a, sa))
        } {Connectable: :Connectable#(CGetPut: :CPutS#(n, a, sa), CGetPut: :CGetS#(n, a, sa))
        } {Connectable: :Connectable#(CGetPut: :CServerS#(n, a, sa, b, sb), CGetPut: :CClientS#(n, a, sa, b, sb))
        } {Connectable: :Connectable#(ClientServer: :Client#(a, b), ClientServer: :Server#(a, b))
        } {Connectable: :Connectable#(ClientServer: :Client#(req, resp), CommitIfc: :ServerCommit#(req, resp))   provisos (Bits#(req, _y), Bits#(resp, _x))
        } {Connectable: :Connectable#(ClientServer: :Client#(req_t, rsp_t), MasterSlaveCHERI: :Slave#(req_t, rsp_t))
        } {Connectable: :Connectable#(ClientServer: :Server#(a, b), ClientServer: :Client#(a, b))
        } {Connectable: :Connectable#(ClientServer: :Server#(req, resp), CommitIfc: :ClientCommit#(req, resp))   provisos (Bits#(req, _y), Bits#(resp, _x))
        } {Connectable: :Connectable#(ClientServer: :Server#(req_t, rsp_t), MasterSlaveCHERI: :Master#(req_t, rsp_t))
        } {Connectable: :Connectable#(Clocks: :SyncFIFOIfc#(a), CommitIfc: :RecvCommit#(a))   provisos (Bits#(a, sa))
        } {Connectable: :Connectable#(Clocks: :SyncFIFOIfc#(a), CommitIfc: :SendCommit#(a))   provisos (Bits#(a, sa))
        } {Connectable: :Connectable#(CommitIfc: :ClientCommit#(req, resp), ClientServer: :Server#(req, resp))   provisos (Bits#(req, _y), Bits#(resp, _x))
        } {Connectable: :Connectable#(CommitIfc: :ClientCommit#(req, resp), CommitIfc: :ServerCommit#(req, resp))
        } {Connectable: :Connectable#(CommitIfc: :RecvCommit#(a), Clocks: :SyncFIFOIfc#(a))   provisos (Bits#(a, sa))
        } {Connectable: :Connectable#(CommitIfc: :RecvCommit#(a), CommitIfc: :SendCommit#(a))
        } {Connectable: :Connectable#(CommitIfc: :RecvCommit#(a), FIFOF: :FIFOF#(a))   provisos (Bits#(a, sa))
        } {Connectable: :Connectable#(CommitIfc: :RecvCommit#(a), GetPut: :Get#(a))   provisos (Bits#(a, _v100))
        } {Connectable: :Connectable#(CommitIfc: :SendCommit#(a), Clocks: :SyncFIFOIfc#(a))   provisos (Bits#(a, sa))
        } {Connectable: :Connectable#(CommitIfc: :SendCommit#(a), CommitIfc: :RecvCommit#(a))
        } {Connectable: :Connectable#(CommitIfc: :SendCommit#(a), FIFOF: :FIFOF#(a))   provisos (Bits#(a, sa))
        } {Connectable: :Connectable#(CommitIfc: :SendCommit#(a), GetPut: :Put#(a))   provisos (Bits#(a, _v100))
        } {Connectable: :Connectable#(CommitIfc: :ServerCommit#(req, resp), ClientServer: :Client#(req, resp))   provisos (Bits#(req, _y), Bits#(resp, _x))
        } {Connectable: :Connectable#(CommitIfc: :ServerCommit#(req, resp), CommitIfc: :ClientCommit#(req, resp))
        } {Connectable: :Connectable#(DDR2Types: :DDR2Client, DDR2Types: :DDR2Server)
        } {Connectable: :Connectable#(DDR2Types: :DDR2RequestClient, DDR2Types: :DDR2RequestServer)
        } {Connectable: :Connectable#(DDR2Types: :DDR2RequestServer, DDR2Types: :DDR2RequestClient)
        } {Connectable: :Connectable#(DDR2Types: :DDR2Server, DDR2Types: :DDR2Client)
        } {Connectable: :Connectable#(FIFOF: :FIFOF#(a), CommitIfc: :RecvCommit#(a))   provisos (Bits#(a, sa))
        } {Connectable: :Connectable#(FIFOF: :FIFOF#(a), CommitIfc: :SendCommit#(a))   provisos (Bits#(a, sa))
        } {Connectable: :Connectable#(FIFOF: :FIFOF#(t), Semi_FIFOF: :FIFOF_I#(t))
        } {Connectable: :Connectable#(GetPut: :Get#(PCIE: :TLPData#(16)), GetPut: :Put#(PCIE: :TLPData#(8)))
        } {Connectable: :Connectable#(GetPut: :Get#(PCIE: :TLPData#(8)), GetPut: :Put#(PCIE: :TLPData#(16)))
        } {Connectable: :Connectable#(GetPut: :Get#(a), CommitIfc: :RecvCommit#(a))   provisos (Bits#(a, _v100))
        } {Connectable: :Connectable#(GetPut: :Get#(a), GetPut: :Put#(a))
        } {Connectable: :Connectable#(GetPut: :Get#(data_t), MasterSlaveCHERI: :CheckedPut#(data_t))
        } {Connectable: :Connectable#(GetPut: :GetS#(a), GetPut: :Put#(a))
        } {Connectable: :Connectable#(GetPut: :GetS#(a), GetPut: :PutS#(a))
        } {Connectable: :Connectable#(GetPut: :Put#(PCIE: :TLPData#(16)), GetPut: :Get#(PCIE: :TLPData#(8)))
        } {Connectable: :Connectable#(GetPut: :Put#(PCIE: :TLPData#(8)), GetPut: :Get#(PCIE: :TLPData#(16)))
        } {Connectable: :Connectable#(GetPut: :Put#(a), CommitIfc: :SendCommit#(a))   provisos (Bits#(a, _v100))
        } {Connectable: :Connectable#(GetPut: :Put#(a), GetPut: :Get#(a))
        } {Connectable: :Connectable#(GetPut: :Put#(a), GetPut: :GetS#(a))
        } {Connectable: :Connectable#(GetPut: :Put#(data_t), MasterSlaveCHERI: :CheckedGet#(data_t))
        } {Connectable: :Connectable#(GetPut: :PutS#(a), GetPut: :GetS#(a))
        } {Connectable: :Connectable#(Giraffe_IFC: :DMI_IFC, Giraffe_IFC: :DMI_Master_IFC)
        } {Connectable: :Connectable#(Giraffe_IFC: :DMI_Master_IFC, Giraffe_IFC: :DMI_IFC)
        } {Connectable: :Connectable#(Inout#(a), Inout#(a))   provisos (Bits#(a, sa))
        } {Connectable: :Connectable#(LBus: :ILBus#(sa, sd), LBus: :ILBusDriver#(sa, sd))
        } {Connectable: :Connectable#(LBus: :ILBusDriver#(sa, sd), LBus: :ILBus#(sa, sd))
        } {Connectable: :Connectable#(LBus: :ILbLeaf#(sa, sd), LBus: :ILbNode#(sa, sd))
        } {Connectable: :Connectable#(ListN: :ListN#(n, a), ListN: :ListN#(n, b))   provisos (Connectable: :Connectable#(a, b))
        } {Connectable: :Connectable#(MasterSlave: :Master#(req_t, rsp_t), MasterSlave: :Slave#(req_t, rsp_t))   provisos (Bits#(rsp_t, _b), Bits#(req_t, _a))
        } {Connectable: :Connectable#(MasterSlave: :Slave#(req_t, rsp_t), MasterSlave: :Master#(req_t, rsp_t))   provisos (Bits#(rsp_t, _b), Bits#(req_t, _a))
        } {Connectable: :Connectable#(MasterSlaveCHERI: :CheckedGet#(data_t), GetPut: :Put#(data_t))
        } {Connectable: :Connectable#(MasterSlaveCHERI: :CheckedGet#(data_t), MasterSlaveCHERI: :CheckedPut#(data_t))
        } {Connectable: :Connectable#(MasterSlaveCHERI: :CheckedPut#(data_t), GetPut: :Get#(data_t))
        } {Connectable: :Connectable#(MasterSlaveCHERI: :CheckedPut#(data_t), MasterSlaveCHERI: :CheckedGet#(data_t))
        } {Connectable: :Connectable#(MasterSlaveCHERI: :Master#(req_t, rsp_t), ClientServer: :Server#(req_t, rsp_t))
        } {Connectable: :Connectable#(MasterSlaveCHERI: :Master#(req_t, rsp_t), MasterSlaveCHERI: :Slave#(req_t, rsp_t))
        } {Connectable: :Connectable#(MasterSlaveCHERI: :Slave#(req_t, rsp_t), ClientServer: :Client#(req_t, rsp_t))
        } {Connectable: :Connectable#(MasterSlaveCHERI: :Slave#(req_t, rsp_t), MasterSlaveCHERI: :Master#(req_t, rsp_t))
        } {Connectable: :Connectable#(Memory: :MemoryClient#(a, d), RegFile: :RegFile#(Bit#(ars), Bit#(d)))   provisos (Mul#(TDiv#(d,
            8),
            8, d), Add#(ars, __x, a))
        } {Connectable: :Connectable#(RWire#(a), RWire#(a))
        } {Connectable: :Connectable#(RegFile: :RegFile#(Bit#(ars), Bit#(d)), Memory: :MemoryClient#(a, d))   provisos (Mul#(TDiv#(d,
            8),
            8, d), Add#(ars, __x, a))
        } {Connectable: :Connectable#(Semi_FIFOF: :FIFOF_I#(t), Semi_FIFOF: :FIFOF_O#(t))
        } {Connectable: :Connectable#(Semi_FIFOF: :FIFOF_O#(t), FIFOF: :FIFOF#(t))
        } {Connectable: :Connectable#(Semi_FIFOF: :FIFOF_O#(t), Semi_FIFOF: :FIFOF_I#(t))
        } {Connectable: :Connectable#(Simplefifo: :FIFOIfc#(value_size), Simplefifo: :FIFOIfc#(value_size))
        } {Connectable: :Connectable#(SourceSink: :Sink#(t), SourceSink: :Source#(t))   provisos (Bits#(t, t_sz))
        } {Connectable: :Connectable#(SourceSink: :Source#(t), SourceSink: :Sink#(t))   provisos (Bits#(t, t_sz))
        } {Connectable: :Connectable#(TLM2Defines: :TLMReadWriteSendIFC#(req, resp), TLM2Defines: :TLMReadWriteRecvIFC#(req, resp))
        } {Connectable: :Connectable#(TLM2Defines: :TLMRecvIFC#(req, resp), TLM2Defines: :TLMSendIFC#(req, resp))
        } {Connectable: :Connectable#(TLM2Defines: :TLMSendIFC#(req, resp), TLM2Defines: :TLMRecvIFC#(req, resp))
        } {Connectable: :Connectable#(TLM3Defines: :TLMReadWriteSendIFC#(req, resp), TLM3Defines: :TLMReadWriteRecvIFC#(req, resp))
        } {Connectable: :Connectable#(TLM3Defines: :TLMRecvIFC#(req, resp), TLM3Defines: :TLMSendIFC#(req, resp))
        } {Connectable: :Connectable#(TLM3Defines: :TLMSendIFC#(req, resp), TLM3Defines: :TLMRecvIFC#(req, resp))
        } {Connectable: :Connectable#(TLMDefines: :TLMReadWriteSendIFC#(id_size, addr_size, data_size, uint_size, cstm_type), TLMDefines: :TLMReadWriteRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type))
        } {Connectable: :Connectable#(TLMDefines: :TLMRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type), TLMDefines: :TLMSendIFC#(id_size, addr_size, data_size, uint_size, cstm_type))
        } {Connectable: :Connectable#(TLMDefines: :TLMSendIFC#(id_size, addr_size, data_size, uint_size, cstm_type), TLMDefines: :TLMRecvIFC#(id_size, addr_size, data_size, uint_size, cstm_type))
        } {Connectable: :Connectable#(Tuple2#(a, c), Tuple2#(b, d))   provisos (Connectable: :Connectable#(c, d), Connectable: :Connectable#(a, b))
        } {Connectable: :Connectable#(Vector: :Vector#(n, a), Vector: :Vector#(n, b))   provisos (Connectable: :Connectable#(a, b))
        } {Connectable: :Connectable#(a, function Action f(a x1))
        } {Connectable: :Connectable#(function Action f(a x1), ActionValue#(a))
        } {Connectable: :Connectable#(function Action f(a x1), a)
        }
    }
} {position {%/Libraries/Connectable.bs 20 6 {Library Connectable
        }
    }
}
Alias PopCount::K 8 {position {%/Libraries/PopCount.bs 61 5 {Library PopCount}}}
Alias PopCount::LogK 4 {position {%/Libraries/PopCount.bs 62 5 {Library PopCount}}}
Interface {Push::Push#(type a)} polymorphic {members {{method {Action push a {}}}}} {position {%/Libraries/Push.bs 26 10 {Library Push}}}
Interface {RegFile::RegFile#(type i, type a)} polymorphic {members {{method {Action upd {i a} {}}} {method {a sub i {}}}}} {position {%/Libraries/RegFile.bs 34 10 {Library RegFile}}}
Interface {RegFile::VRegFile#(numeric type ni, numeric type na)} polymorphic {members {{method {PrimAction upd {Bit#(ni) Bit#(na)} {}}} {method {Bit#(na) sub Bit#(ni) {}}}}} {position {%/Libraries/RegFile.bs 45 10 {Library RegFile}}}
Typeclass {Arbitrate::ArbRequestTC#(type a)} {members {{{function Bool f(a x1)} isReadRequest} {{function Bool f(a x1)} isWriteRequest}}} {instances Arbitrate::ArbRequestTC#(I2C::I2CRequest)} {position {%/Libraries/Arbitrate.bsv 25 11 {Library Arbitrate}}}
Interface {Arbitrate::Arbitrate#(numeric type size)} polymorphic {members {{method {Action request {{Vector::Vector#(size, Bool)}} {{(* ports = ["req"] *)}}}} {method {{Vector::Vector#(size, Bool)} grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbitrate.bsv 63 11 {Library Arbitrate}}}
Interface {Arbitrate::Arbiter#(numeric type ports, type request, type response)} polymorphic {members {{method {{Vector::Vector#(ports, ClientServer::Server#(request, response))} users {} {}}} {interface {ClientServer::Client#(request, response)} master {}}}} {position {%/Libraries/Arbitrate.bsv 68 11 {Library Arbitrate}}}
Interface {CGetPut::CGetS#(numeric type n, type a, numeric type sa)} polymorphic {members {{method {Bit#(sa) gvalue {} {}}} {method {Bool gpresent {} {}}} {method {Action gcredit Bool {}}}}} {position {%/Libraries/CGetPut.bs 23 11 {Library CGetPut}}}
Interface {CGetPut::CPutS#(numeric type n, type a, numeric type sa)} polymorphic {members {{method {Action pvalue Bit#(sa) {}}} {method {Action ppresent Bool {}}} {method {Bool pcredit {} {}}}}} {position {%/Libraries/CGetPut.bs 28 11 {Library CGetPut}}}
Alias {CGetPut::CGet#(numeric type n, type a)} {CGetPut::CGetS#(n, a, SizeOf#(a))} {position {%/Libraries/CGetPut.bs 53 5 {Library CGetPut}}}
Alias {CGetPut::CPut#(numeric type n, type a)} {CGetPut::CPutS#(n, a, SizeOf#(a))} {position {%/Libraries/CGetPut.bs 59 5 {Library CGetPut}}}
Alias {CGetPut::CGetPut#(numeric type n, type a)} {Tuple2#(CGetPut::CGetS#(n, a, SizeOf#(a)), GetPut::Put#(a))} {position {%/Libraries/CGetPut.bs 61 5 {Library CGetPut}}}
Alias {CGetPut::GetCPut#(numeric type n, type a)} {Tuple2#(GetPut::Get#(a), CGetPut::CPutS#(n, a, SizeOf#(a)))} {position {%/Libraries/CGetPut.bs 62 5 {Library CGetPut}}}
Interface {CGetPut::CClientS#(numeric type n, type a, numeric type sa, type b, numeric type sb)} polymorphic {members {{interface {CGetPut::CGetS#(n, a, sa)} request {}} {interface {CGetPut::CPutS#(n, b, sb)} response {}}}} {position {%/Libraries/CGetPut.bs 267 10 {Library CGetPut}}}
Interface {CGetPut::CServerS#(numeric type n, type a, numeric type sa, type b, numeric type sb)} polymorphic {members {{interface {CGetPut::CPutS#(n, a, sa)} request {}} {interface {CGetPut::CGetS#(n, b, sb)} response {}}}} {position {%/Libraries/CGetPut.bs 271 10 {Library CGetPut}}}
Alias {CGetPut::CClient#(numeric type n, type a, type b)} {CGetPut::CClientS#(n, a, SizeOf#(a), b, SizeOf#(b))} {position {%/Libraries/CGetPut.bs 281 5 {Library CGetPut}}}
Alias {CGetPut::CServer#(numeric type n, type a, type b)} {CGetPut::CServerS#(n, a, SizeOf#(a), b, SizeOf#(b))} {position {%/Libraries/CGetPut.bs 282 5 {Library CGetPut}}}
Alias {CGetPut::CClientServer#(numeric type n, type a, type b)} {Tuple2#(CGetPut::CClientS#(n, a, SizeOf#(a), b, SizeOf#(b)), ClientServer::Server#(a, b))} {position {%/Libraries/CGetPut.bs 284 5 {Library CGetPut}}}
Alias {CGetPut::ClientCServer#(numeric type n, type a, type b)} {Tuple2#(ClientServer::Client#(a, b), CGetPut::CServerS#(n, a, SizeOf#(a), b, SizeOf#(b)))} {position {%/Libraries/CGetPut.bs 285 5 {Library CGetPut}}}

Typeclass {Printf::SPrintfType#(type t)} {members {{{function t f(String x1, List#(Printf::UPrintf) x2)} spr}}} {instances {Printf::SPrintfType#(String) {Printf::SPrintfType#(function r f(a x1))   provisos (Printf::SPrintfType#(r), Printf::PrintfArg#(a))}}} {position {%/Libraries/Printf.bsv 17 11 {Library Printf}}}
Typeclass {Printf::PrintfArg#(type t)} {members {{{function Printf::UPrintf f(t x1)} toUPrintf}}} {instances {Printf::PrintfArg#(Bit#(n)) Printf::PrintfArg#(Char) Printf::PrintfArg#(Int#(n)) Printf::PrintfArg#(Integer) Printf::PrintfArg#(Real) Printf::PrintfArg#(String) Printf::PrintfArg#(UInt#(n))}} {position {%/Libraries/Printf.bsv 34 11 {Library Printf}}}
TaggedUnion Printf::UPrintf {members {{Char UChar} {String UString} {{Tuple2#(Integer, Integer)} UInteger} {Real UReal}}} {position {%/Libraries/Printf.bsv 80 3 {Library Printf}}}
Enum Printf::RealFormat {members {RFGeneric RFExponent RFFixed}} {position {%/Libraries/Printf.bsv 402 49 {Library Printf}}}
Interface StmtFSM::Once {members {{method {Action start {} {}}} {method {Action clear {} {}}} {method {Bool done {} {}}}}} {position {%/Libraries/StmtFSM.bs 293 10 {Library StmtFSM}}}
Interface Arbiter::ArbiterClient_IFC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Action lock {} {{(* ports = [] *)}}}} {method {Bool grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 11 11 {Library Arbiter}}}
Interface Arbiter::ArbiterRequest_IFC {members {{method {Bool request {} {{(* ports = [] *)}}}} {method {Bool lock {} {{(* ports = [] *)}}}} {method {Action grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 17 11 {Library Arbiter}}}
Interface {Arbiter::Arbiter_IFC#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {Bit#(TLog#(count)) grant_id {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 23 11 {Library Arbiter}}}
Typeclass {Arbiter::Arbitable#(type a)} {members {{{function b#(Arbiter::ArbiterRequest_IFC) f(a x1)   provisos (IsModule#(b, c))} mkArbiterRequest}}} {instances {Arbiter::Arbitable#(AhbDefines::AhbMasterArbiter) {Arbiter::Arbitable#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size))} Arbiter::Arbitable#(BusDefines::BusSend#(a))}} {position {%/Libraries/Arbiter.bsv 340 11 {Library Arbiter}}}

Interface {FIFO::FIFO#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Action clear {} {}}}}} {position {%/Libraries/FIFO.bs 20 10 {Library FIFO}}}
Interface {Gearbox::Gearbox#(numeric type in, numeric type out, type a)} polymorphic {members {{method {Action enq {{Vector::Vector#(in, a)}} {{(* ports = ["din"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {{Vector::Vector#(out, a)} first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Gearbox.bsv 35 11 {Library Gearbox}}}

Alias {ActionSeq::ActionList#(numeric type n)} {Vector::Vector#(n, Action)} {position {%/Libraries/ActionSeq.bs 41 5 {Library ActionSeq}}}
Typeclass {ActionSeq::ActionJoin#(type a, type c)} {dependencies {{a determines c}}} {members {{{function c f(Action x1, a x2)} |>}}} {instances {{ActionSeq::ActionJoin#(Action, ActionSeq::ActionList#(2))} {ActionSeq::ActionJoin#(ActionSeq::ActionList#(n), ActionSeq::ActionList#(m))   provisos (Add#(1, n, m))}}} {position {%/Libraries/ActionSeq.bs 44 6 {Library ActionSeq}}}
Interface ActionSeq::ActionSeq {members {{method {Action start {} {}}} {method {Bool done {} {}}} {method {Action checkDone {} {}}}}} {position {%/Libraries/ActionSeq.bs 68 10 {Library ActionSeq}}}
Alias {ActionSeq::RegB#(numeric type k)} Reg#(Bit#(k)) {position {%/Libraries/ActionSeq.bs 73 5 {Library ActionSeq}}}
Interface {ActionSeq::ActionSeqN#(numeric type n)} polymorphic {members {{interface ActionSeq::ActionSeq _actionSeq {}}}} {position {%/Libraries/ActionSeq.bs 98 11 {Library ActionSeq}}}
Alias {ActionSeq::SeqList#(numeric type n)} {Vector::Vector#(n, ActionSeq::ActionSeq)} {position {%/Libraries/ActionSeq.bs 183 5 {Library ActionSeq}}}
Interface {RWire#(type a)} polymorphic {members {{method {Action wset a {{(* ports = ["datain"] *)}}}} {method {Maybe#(a) wget {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 73 11 {Library PreludeBSV}}}
Interface {VRWire#(type a)} polymorphic {members {{method {Action wset a {{(* ports = ["x1"] *)}}}} {method {a wget {} {{(* ports = [] *)}}}} {method {Bool whas {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 78 11 {Library PreludeBSV}}}
Interface {VRWireN#(numeric type n)} polymorphic {members {{method {PrimAction wset Bit#(n) {{(* ports = ["datain"] *)}}}} {method {Bit#(n) wget {} {{(* ports = [] *)}}}} {method {Bit#(1) whas {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 84 11 {Library PreludeBSV}}}
Interface VRWire0 {members {{method {Action wset {} {{(* ports = [] *)}}}} {method {Bool whas {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 103 11 {Library PreludeBSV}}}
Alias {Wire#(type data_t)} Reg#(data_t) {position {%/Libraries/PreludeBSV.bsv 273 22 {Library PreludeBSV}}}
Interface {VWire#(type a)} polymorphic {members {{method {Action wset a {{(* ports = ["x1"] *)}}}} {method {a wget {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 287 11 {Library PreludeBSV}}}
Interface VWire0 {members {{method {Action wset {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 292 11 {Library PreludeBSV}}}
Interface PulseWire {members {{method {Action send {} {{(* ports = [] *)}}}} {method {Bool _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 387 11 {Library PreludeBSV}}}
Interface {CReg5#(type t)} polymorphic {members {{interface Reg#(t) port0 {}} {interface Reg#(t) port1 {}} {interface Reg#(t) port2 {}} {interface Reg#(t) port3 {}} {interface Reg#(t) port4 {}}}} {position {%/Libraries/PreludeBSV.bsv 703 11 {Library PreludeBSV}}}
Interface {ReadOnly#(type a_type)} polymorphic {members {{method {a_type _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 1061 11 {Library PreludeBSV}}}
Interface {WriteOnly#(type a_type)} polymorphic {members {{method {Action _write a_type {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 1081 11 {Library PreludeBSV}}}
Typeclass {Alias#(type a, type b)} {dependencies {{a determines b} {b determines a}}} {members {}} {instances {{Alias#(a, a)}}} {position {%/Libraries/PreludeBSV.bsv 1117 11 {Library PreludeBSV}}}
Typeclass {NumAlias#(numeric type a, numeric type b)} {dependencies {{a determines b} {b determines a}}} {members {}} {instances {{NumAlias#(a, a)}}} {position {%/Libraries/PreludeBSV.bsv 1125 11 {Library PreludeBSV}}}
Enum SaturationMode {members {Sat_Wrap Sat_Bound Sat_Zero Sat_Symmetric}} {width 2} {position {%/Libraries/PreludeBSV.bsv 1141 6 {Library PreludeBSV}}}
Typeclass {SaturatingArith#(type t)} {members {{{function t f(SaturationMode x1, t x2, t x3)} satPlus} {{function t f(SaturationMode x1, t x2, t x3)} satMinus} {{function t f(t x1, t x2)} boundedPlus} {{function t f(t x1, t x2)} boundedMinus}}} {instances {{SaturatingArith#(Complex::Complex#(any_type))   provisos (SaturatingArith#(any_type))} {SaturatingArith#(FixedPoint::FixedPoint#(i, f))} SaturatingArith#(Int#(n)) SaturatingArith#(UInt#(n))}} {position {%/Libraries/PreludeBSV.bsv 1144 11 {Library PreludeBSV}}}

Alias {RAM::RAM#(type adr, type dta)} {ClientServer::Server#(RAM::RAMreq#(adr, dta), dta)} {position {%/Libraries/RAM.bs 19 5 {Library RAM}}}
Alias {RAM::RAMclient#(type adr, type dta)} {ClientServer::Client#(RAM::RAMreq#(adr, dta), dta)} {position {%/Libraries/RAM.bs 25 5 {Library RAM}}}
TaggedUnion {RAM::RAMreq#(type adr, type dta)} polymorphic {members {{adr Read} {{Tuple2#(adr, dta)} Write}}} {position {%/Libraries/RAM.bs 34 5 {Library RAM}}}
Interface EdgeDetect::RequestDetect {members {{method {Action send {} {{(* ports = [] *)}}}} {method {Bool pulse {} {{(* ports = [] *)}}}} {method {Bool pending {} {{(* ports = [] *)}}}} {method {Action ack {} {{(* ports = [] *)}}}}}} {position {%/Libraries/EdgeDetect.bsv 3 11 {Library EdgeDetect}}}

Interface {FIFOF_::FIFOF_#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["x1"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool i_notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool i_notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOF_.bsv 21 11 {Library FIFOF_}}}
Interface FIFOF_::VFIFOF0_ {members {{method {Action enq {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool i_notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool i_notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOF_.bsv 48 11 {Library FIFOF_}}}
Interface {GetPut::Get#(type a)} polymorphic {members {{method {ActionValue#(a) get {} {}}}}} {position {%/Libraries/GetPut.bs 88 10 {Library GetPut}}}
Interface {GetPut::GetS#(type a)} polymorphic {members {{method {a first {} {}}} {method {Action deq {} {}}}}} {position {%/Libraries/GetPut.bs 91 10 {Library GetPut}}}
Interface {GetPut::Put#(type a)} polymorphic {members {{method {Action put a {{(* prefix = "" *)} {(* result = "UNUSED" *)} {(* ports = ["put"] *)}}}}}} {position {%/Libraries/GetPut.bs 115 10 {Library GetPut}}}
Interface {GetPut::PutS#(type a)} polymorphic {members {{method {Action offer a {}}} {method {Bool accepted {} {}}}}} {position {%/Libraries/GetPut.bs 118 10 {Library GetPut}}}
Interface {AhbMaster::GetPut#(type p, type g)} polymorphic {members {{method {ActionValue#(g) getput p {{(* ports = ["value"] *)}}}}}} {position {AhbMaster.bsv 31 11}}
Typeclass {GetPut::ToGet#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Get#(b) f(a x1)} toGet}}} {instances {{GetPut::ToGet#(ActionValue#(a), a)} {GetPut::ToGet#(AlignedFIFOs::AlignedFIFO#(t), t)} {GetPut::ToGet#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToGet#(CommitIfc::SendCommit#(a), a)} {GetPut::ToGet#(FIFO::FIFO#(a), a)} {GetPut::ToGet#(FIFOF::FIFOF#(a), a)} {GetPut::ToGet#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(GenCMsg::Rx#(d, s, a), a)} {GetPut::ToGet#(GetPut::Get#(a), a)} {GetPut::ToGet#(MasterSlaveCHERI::CheckedGet#(data_t), data_t)} {GetPut::ToGet#(NullCrossingFIFOF::CrossingFIFOF#(t), t)} {GetPut::ToGet#(PAClib::PipeOut#(a), a)} {GetPut::ToGet#(RWire#(a), a)} {GetPut::ToGet#(ReadOnly#(a), a)} {GetPut::ToGet#(Reg#(a), a)} {GetPut::ToGet#(Semi_FIFOF::FIFOF_O#(t), t)} {GetPut::ToGet#(Simplefifo::FIFOIfc#(value_size), value_size)} {GetPut::ToGet#(SourceSink::Source#(t), t)} {GetPut::ToGet#(a, a)}}} {position {%/Libraries/GetPut.bs 417 6 {Library GetPut}}}
Typeclass {GetPut::ToPut#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Put#(b) f(a x1)} toPut}}} {instances {{GetPut::ToPut#(AlignedFIFOs::AlignedFIFO#(t), t)} {GetPut::ToPut#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToPut#(CommitIfc::RecvCommit#(a), a)} {GetPut::ToPut#(FIFO::FIFO#(a), a)} {GetPut::ToPut#(FIFOF::FIFOF#(a), a)} {GetPut::ToPut#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(GenCMsg::Tx#(d, s, a), a)} {GetPut::ToPut#(GetPut::Put#(a), a)} {GetPut::ToPut#(MasterSlaveCHERI::CheckedPut#(data_t), data_t)} {GetPut::ToPut#(NullCrossingFIFOF::CrossingFIFOF#(t), t)} {GetPut::ToPut#(RWire#(a), a)} {GetPut::ToPut#(Reg#(a), a)} {GetPut::ToPut#(Semi_FIFOF::FIFOF_I#(t), t)} {GetPut::ToPut#(Simplefifo::FIFOIfc#(value_size), value_size)} {GetPut::ToPut#(SourceSink::Sink#(t), t)} {GetPut::ToPut#(function Action f(a x1), a)}}} {position {%/Libraries/GetPut.bs 420 6 {Library GetPut}}}
Alias Divide::MBits 11 {position {%/Libraries/Divide.bsv 259 12 {Library Divide}}}
Alias Divide::NBits 22 {position {%/Libraries/Divide.bsv 260 12 {Library Divide}}}
Alias {AxiDefines::AxiAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {AxiDefines.bsv 28 42}}
Alias {AxiDefines::AxiData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {AxiDefines.bsv 29 42}}
Alias {AxiDefines::AxiByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {AxiDefines.bsv 30 42}}
Alias {AxiDefines::AxiId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {AxiDefines.bsv 32 46}}
Alias AxiDefines::AxiLen UInt#(4) {position {AxiDefines.bsv 33 46}}
Alias AxiDefines::AxiSize TLM3Defines::TLMBSize {position {AxiDefines.bsv 34 18}}
Struct AxiDefines::AxiProt {members {{TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMPrivilege privilege {width 1}}}} {width 3} {position {AxiDefines.bsv 40 19}}
Struct AxiDefines::AxiCache {members {{TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}}}} {width 4} {position {AxiDefines.bsv 47 19}}
Enum AxiDefines::AxiBurst {members {FIXED INCR WRAP}} {width 2} {position {AxiDefines.bsv 49 46}}
Alias AxiDefines::AxiLock TLM3Defines::TLMLock {position {AxiDefines.bsv 50 18}}
Enum AxiDefines::AxiResp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {AxiDefines.bsv 51 46}}
Struct {AxiDefines::AxiAddrCmd#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {UInt#(4) len {width 4}} {TLM3Defines::TLMBSize size {width 3}} {AxiDefines::AxiBurst burst {width 2}} {TLM3Defines::TLMLock lock {width 2}} {AxiDefines::AxiCache cache {width 4}} {AxiDefines::AxiProt prot {width 3}} {Bit#(addr_size) addr}}} {position {AxiDefines.bsv 63 19}}
Struct {AxiDefines::AxiWrData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {Bit#(data_size) data} {{Bit#(TDiv#(data_size, 8))} strb} {Bool last {width 1}}}} {position {AxiDefines.bsv 83 19}}
Struct {AxiDefines::AxiRdResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {Bit#(data_size) data} {AxiDefines::AxiResp resp {width 2}} {Bool last {width 1}}}} {position {AxiDefines.bsv 99 19}}
Struct {AxiDefines::AxiWrResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {AxiDefines::AxiResp resp {width 2}}}} {position {AxiDefines.bsv 113 19}}
Interface {AxiDefines::AxiWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) awID {} {{(* ports = [] *)} {(* result = "AWID" *)}}}} {method {Bit#(addr_size) awADDR {} {{(* ports = [] *)} {(* result = "AWADDR" *)}}}} {method {UInt#(4) awLEN {} {{(* ports = [] *)} {(* result = "AWLEN" *)}}}} {method {TLM3Defines::TLMBSize awSIZE {} {{(* ports = [] *)} {(* result = "AWSIZE" *)}}}} {method {AxiDefines::AxiBurst awBURST {} {{(* ports = [] *)} {(* result = "AWBURST" *)}}}} {method {TLM3Defines::TLMLock awLOCK {} {{(* ports = [] *)} {(* result = "AWLOCK" *)}}}} {method {AxiDefines::AxiCache awCACHE {} {{(* ports = [] *)} {(* result = "AWCACHE" *)}}}} {method {AxiDefines::AxiProt awPROT {} {{(* ports = [] *)} {(* result = "AWPROT" *)}}}} {method {Bool awVALID {} {{(* ports = [] *)} {(* result = "AWVALID" *)}}}} {method {Action awREADY Bool {{(* ports = ["AWREADY"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) wID {} {{(* ports = [] *)} {(* result = "WID" *)}}}} {method {Bit#(data_size) wDATA {} {{(* ports = [] *)} {(* result = "WDATA" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} wSTRB {} {{(* ports = [] *)} {(* result = "WSTRB" *)}}}} {method {Bool wLAST {} {{(* ports = [] *)} {(* result = "WLAST" *)}}}} {method {Bool wVALID {} {{(* ports = [] *)} {(* result = "WVALID" *)}}}} {method {Action wREADY Bool {{(* ports = ["WREADY"] *)} {(* result = "unusedwm1" *)} {(* prefix = "" *)}}}} {method {Bool bREADY {} {{(* ports = [] *)} {(* result = "BREADY" *)}}}} {method {Action bID Bit#(id_size) {{(* ports = ["BID"] *)} {(* result = "unusedwm2" *)} {(* prefix = "" *)}}}} {method {Action bRESP AxiDefines::AxiResp {{(* ports = ["BRESP"] *)} {(* result = "unusedwm3" *)} {(* prefix = "" *)}}}} {method {Action bVALID Bool {{(* ports = ["BVALID"] *)} {(* result = "unusedwm4" *)} {(* prefix = "" *)}}}}}} {position {AxiDefines.bsv 184 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiRdMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) arID {} {{(* ports = [] *)} {(* result = "ARID" *)}}}} {method {Bit#(addr_size) arADDR {} {{(* ports = [] *)} {(* result = "ARADDR" *)}}}} {method {UInt#(4) arLEN {} {{(* ports = [] *)} {(* result = "ARLEN" *)}}}} {method {TLM3Defines::TLMBSize arSIZE {} {{(* ports = [] *)} {(* result = "ARSIZE" *)}}}} {method {AxiDefines::AxiBurst arBURST {} {{(* ports = [] *)} {(* result = "ARBURST" *)}}}} {method {TLM3Defines::TLMLock arLOCK {} {{(* ports = [] *)} {(* result = "ARLOCK" *)}}}} {method {AxiDefines::AxiCache arCACHE {} {{(* ports = [] *)} {(* result = "ARCACHE" *)}}}} {method {AxiDefines::AxiProt arPROT {} {{(* ports = [] *)} {(* result = "ARPROT" *)}}}} {method {Bool arVALID {} {{(* ports = [] *)} {(* result = "ARVALID" *)}}}} {method {Action arREADY Bool {{(* ports = ["ARREADY"] *)} {(* result = "unusedrm0" *)} {(* prefix = "" *)}}}} {method {Bool rREADY {} {{(* ports = [] *)} {(* result = "RREADY" *)}}}} {method {Action rID Bit#(id_size) {{(* ports = ["RID"] *)} {(* result = "unusedrm1" *)} {(* prefix = "" *)}}}} {method {Action rDATA Bit#(data_size) {{(* ports = ["RDATA"] *)} {(* result = "unusedrm2" *)} {(* prefix = "" *)}}}} {method {Action rRESP AxiDefines::AxiResp {{(* ports = ["RRESP"] *)} {(* result = "unusedrm3" *)} {(* prefix = "" *)}}}} {method {Action rLAST Bool {{(* ports = ["RLAST"] *)} {(* result = "unusedrm4" *)} {(* prefix = "" *)}}}} {method {Action rVALID Bool {{(* ports = ["RVALID"] *)} {(* result = "unusedrm5" *)} {(* prefix = "" *)}}}}}} {position {AxiDefines.bsv 241 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action awID Bit#(id_size) {{(* ports = ["AWID"] *)} {(* result = "unusedws0" *)} {(* prefix = "" *)}}}} {method {Action awADDR Bit#(addr_size) {{(* ports = ["AWADDR"] *)} {(* result = "unusedws1" *)} {(* prefix = "" *)}}}} {method {Action awLEN UInt#(4) {{(* ports = ["AWLEN"] *)} {(* result = "unusedws2" *)} {(* prefix = "" *)}}}} {method {Action awSIZE TLM3Defines::TLMBSize {{(* ports = ["AWSIZE"] *)} {(* result = "unusedws3" *)} {(* prefix = "" *)}}}} {method {Action awBURST AxiDefines::AxiBurst {{(* ports = ["AWBURST"] *)} {(* result = "unusedws4" *)} {(* prefix = "" *)}}}} {method {Action awLOCK TLM3Defines::TLMLock {{(* ports = ["AWLOCK"] *)} {(* result = "unusedws5" *)} {(* prefix = "" *)}}}} {method {Action awCACHE AxiDefines::AxiCache {{(* ports = ["AWCACHE"] *)} {(* result = "unusedws6" *)} {(* prefix = "" *)}}}} {method {Action awPROT AxiDefines::AxiProt {{(* ports = ["AWPROT"] *)} {(* result = "unusedws7" *)} {(* prefix = "" *)}}}} {method {Action awVALID Bool {{(* ports = ["AWVALID"] *)} {(* result = "unusedws8" *)} {(* prefix = "" *)}}}} {method {Bool awREADY {} {{(* ports = [] *)} {(* result = "AWREADY" *)}}}} {method {Action wID Bit#(id_size) {{(* ports = ["WID"] *)} {(* result = "unusedws9" *)} {(* prefix = "" *)}}}} {method {Action wDATA Bit#(data_size) {{(* ports = ["WDATA"] *)} {(* result = "unusedws10" *)} {(* prefix = "" *)}}}} {method {Action wSTRB {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["WSTRB"] *)} {(* result = "unusedws11" *)} {(* prefix = "" *)}}}} {method {Action wLAST Bool {{(* ports = ["WLAST"] *)} {(* result = "unusedws12" *)} {(* prefix = "" *)}}}} {method {Action wVALID Bool {{(* ports = ["WVALID"] *)} {(* result = "unusedws13" *)} {(* prefix = "" *)}}}} {method {Bool wREADY {} {{(* ports = [] *)} {(* result = "WREADY" *)}}}} {method {Action bREADY Bool {{(* ports = ["BREADY"] *)} {(* result = "unusedws14" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) bID {} {{(* ports = [] *)} {(* result = "BID" *)}}}} {method {AxiDefines::AxiResp bRESP {} {{(* ports = [] *)} {(* result = "BRESP" *)}}}} {method {Bool bVALID {} {{(* ports = [] *)} {(* result = "BVALID" *)}}}}}} {position {AxiDefines.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiRdSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action arID Bit#(id_size) {{(* ports = ["ARID"] *)} {(* result = "unusedrs0" *)} {(* prefix = "" *)}}}} {method {Action arADDR Bit#(addr_size) {{(* ports = ["ARADDR"] *)} {(* result = "unusedrs1" *)} {(* prefix = "" *)}}}} {method {Action arLEN UInt#(4) {{(* ports = ["ARLEN"] *)} {(* result = "unusedrs2" *)} {(* prefix = "" *)}}}} {method {Action arSIZE TLM3Defines::TLMBSize {{(* ports = ["ARSIZE"] *)} {(* result = "unusedrs3" *)} {(* prefix = "" *)}}}} {method {Action arBURST AxiDefines::AxiBurst {{(* ports = ["ARBURST"] *)} {(* result = "unusedrs4" *)} {(* prefix = "" *)}}}} {method {Action arLOCK TLM3Defines::TLMLock {{(* ports = ["ARLOCK"] *)} {(* result = "unusedrs5" *)} {(* prefix = "" *)}}}} {method {Action arCACHE AxiDefines::AxiCache {{(* ports = ["ARCACHE"] *)} {(* result = "unusedrs6" *)} {(* prefix = "" *)}}}} {method {Action arPROT AxiDefines::AxiProt {{(* ports = ["ARPROT"] *)} {(* result = "unusedrs7" *)} {(* prefix = "" *)}}}} {method {Action arVALID Bool {{(* ports = ["ARVALID"] *)} {(* result = "unusedrs8" *)} {(* prefix = "" *)}}}} {method {Bool arREADY {} {{(* ports = [] *)} {(* result = "ARREADY" *)}}}} {method {Action rREADY Bool {{(* ports = ["RREADY"] *)} {(* result = "unusedrs9" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) rID {} {{(* ports = [] *)} {(* result = "RID" *)}}}} {method {Bit#(data_size) rDATA {} {{(* ports = [] *)} {(* result = "RDATA" *)}}}} {method {AxiDefines::AxiResp rRESP {} {{(* ports = [] *)} {(* result = "RRESP" *)}}}} {method {Bool rLAST {} {{(* ports = [] *)} {(* result = "RLAST" *)}}}} {method {Bool rVALID {} {{(* ports = [] *)} {(* result = "RVALID" *)}}}}}} {position {AxiDefines.bsv 344 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiRdBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 392 11}}
Interface {AxiDefines::AxiWrBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusRecv#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 397 11}}
Interface {AxiDefines::AxiRdBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 403 11}}
Interface {AxiDefines::AxiWrBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusSend#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 408 11}}
Interface {AxiDefines::AxiRdFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 418 11}}
Interface {AxiDefines::AxiRdFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {AxiDefines.bsv 423 11}}
Interface {AxiDefines::AxiWrFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 429 11}}
Interface {AxiDefines::AxiWrFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {AxiDefines.bsv 434 11}}
Interface {AxiDefines::AxiRdMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 478 11}}
Interface {AxiDefines::AxiWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 484 11}}
Interface {AxiDefines::AxiRdSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 490 11}}
Interface {AxiDefines::AxiWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 496 11}}
Interface {AxiDefines::AxiRdWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 506 11}}
Interface {AxiDefines::AxiRdWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 514 11}}
Interface {AxiDefines::AxiRdWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 522 11}}
Interface {AxiDefines::AxiRdWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 529 11}}
Interface AxiDefines::AxiLowPower {members {{method {Action cSYSREQ Bool {{(* ports = ["CSYSREQ"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bool cSYSACK {} {{(* ports = [] *)} {(* result = "CSYSACK" *)}}}} {method {Bool cACTIVE {} {{(* ports = [] *)} {(* result = "CACTIVE" *)}}}}}} {position {AxiDefines.bsv 554 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Typeclass {AxiExtend::Extendable#(type ifc_t, type ifc_ext_t)} {members {{{function a#(ifc_ext_t) f(UInt#(32) x1, ifc_t x2)   provisos (IsModule#(a, b))} extendIds}}} {instances {{AxiExtend::Extendable#(AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdFabricMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdFabricSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrFabricMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrFabricSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))}}} {position {AxiExtend.bsv 18 11}}
Interface {AxiPC::AxiPC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action aw_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action aw_len UInt#(4) {{(* ports = ["aw_len"] *)}}}} {method {Action aw_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action aw_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action aw_lock TLM3Defines::TLMLock {{(* ports = ["value"] *)}}}} {method {Action aw_cache AxiDefines::AxiCache {{(* ports = ["value"] *)}}}} {method {Action aw_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action aw_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action aw_valid Bool {{(* ports = ["value"] *)}}}} {method {Action aw_ready Bool {{(* ports = ["value"] *)}}}} {method {Action w_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action w_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action w_strb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["value"] *)}}}} {method {Action w_last Bool {{(* ports = ["value"] *)}}}} {method {Action w_valid Bool {{(* ports = ["value"] *)}}}} {method {Action w_ready Bool {{(* ports = ["value"] *)}}}} {method {Action b_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action b_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action b_valid Bool {{(* ports = ["value"] *)}}}} {method {Action b_ready Bool {{(* ports = ["value"] *)}}}} {method {Action ar_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action ar_len UInt#(4) {{(* ports = ["value"] *)}}}} {method {Action ar_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action ar_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action ar_lock TLM3Defines::TLMLock {{(* ports = ["value"] *)}}}} {method {Action ar_cache AxiDefines::AxiCache {{(* ports = ["value"] *)}}}} {method {Action ar_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action ar_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action ar_valid Bool {{(* ports = ["value"] *)}}}} {method {Action ar_ready Bool {{(* ports = ["value"] *)}}}} {method {Action r_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action r_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action r_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action r_last Bool {{(* ports = ["value"] *)}}}} {method {Action r_valid Bool {{(* ports = ["value"] *)}}}} {method {Action r_ready Bool {{(* ports = ["value"] *)}}}} {method {Action c_active Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysreq Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysack Bool {{(* ports = ["value"] *)}}}}}} {position {AxiPC.bsv 573 11}}
Struct AxiPC::AxiPCParams {members {{UInt#(32) exmon_width {width 32}} {UInt#(32) maxwaits {width 32}}}} {width 64} {position {AxiPC.bsv 629 19}}
Interface {AxiSlave::SlaveSlice#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {GetPut::GetS#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr_f {}} {interface {GetPut::GetS#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} data_f {}} {interface ReadOnly#(Maybe#(Bit#(id_size))) id {}}}} {position {AxiSlave.bsv 498 11}}
Interface {AxiSlave::SlaveSlice#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {GetPut::GetS#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr_f {}} {interface {GetPut::GetS#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} data_f {}} {interface ReadOnly#(Maybe#(Bit#(id_size))) id {}}}} {position {AxiSlave.bsv 498 11}}

Alias {AxiDefines::AxiAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {AxiDefines.bsv 28 42}}
Alias {AxiDefines::AxiData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {AxiDefines.bsv 29 42}}
Alias {AxiDefines::AxiByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {AxiDefines.bsv 30 42}}
Alias {AxiDefines::AxiId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {AxiDefines.bsv 32 46}}
Alias AxiDefines::AxiLen UInt#(4) {position {AxiDefines.bsv 33 46}}
Alias AxiDefines::AxiSize TLM3Defines::TLMBSize {position {AxiDefines.bsv 34 18}}
Struct AxiDefines::AxiProt {members {{TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMPrivilege privilege {width 1}}}} {width 3} {position {AxiDefines.bsv 40 19}}
Struct AxiDefines::AxiCache {members {{TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}}}} {width 4} {position {AxiDefines.bsv 47 19}}
Enum AxiDefines::AxiBurst {members {FIXED INCR WRAP}} {width 2} {position {AxiDefines.bsv 49 46}}
Alias AxiDefines::AxiLock TLM3Defines::TLMLock {position {AxiDefines.bsv 50 18}}
Enum AxiDefines::AxiResp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {AxiDefines.bsv 51 46}}
Struct {AxiDefines::AxiAddrCmd#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {UInt#(4) len {width 4}} {TLM3Defines::TLMBSize size {width 3}} {AxiDefines::AxiBurst burst {width 2}} {TLM3Defines::TLMLock lock {width 2}} {AxiDefines::AxiCache cache {width 4}} {AxiDefines::AxiProt prot {width 3}} {Bit#(addr_size) addr}}} {position {AxiDefines.bsv 63 19}}
Struct {AxiDefines::AxiWrData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {Bit#(data_size) data} {{Bit#(TDiv#(data_size, 8))} strb} {Bool last {width 1}}}} {position {AxiDefines.bsv 83 19}}
Struct {AxiDefines::AxiRdResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {Bit#(data_size) data} {AxiDefines::AxiResp resp {width 2}} {Bool last {width 1}}}} {position {AxiDefines.bsv 99 19}}
Struct {AxiDefines::AxiWrResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {AxiDefines::AxiResp resp {width 2}}}} {position {AxiDefines.bsv 113 19}}
Interface {AxiDefines::AxiWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) awID {} {{(* ports = [] *)} {(* result = "AWID" *)}}}} {method {Bit#(addr_size) awADDR {} {{(* ports = [] *)} {(* result = "AWADDR" *)}}}} {method {UInt#(4) awLEN {} {{(* ports = [] *)} {(* result = "AWLEN" *)}}}} {method {TLM3Defines::TLMBSize awSIZE {} {{(* ports = [] *)} {(* result = "AWSIZE" *)}}}} {method {AxiDefines::AxiBurst awBURST {} {{(* ports = [] *)} {(* result = "AWBURST" *)}}}} {method {TLM3Defines::TLMLock awLOCK {} {{(* ports = [] *)} {(* result = "AWLOCK" *)}}}} {method {AxiDefines::AxiCache awCACHE {} {{(* ports = [] *)} {(* result = "AWCACHE" *)}}}} {method {AxiDefines::AxiProt awPROT {} {{(* ports = [] *)} {(* result = "AWPROT" *)}}}} {method {Bool awVALID {} {{(* ports = [] *)} {(* result = "AWVALID" *)}}}} {method {Action awREADY Bool {{(* ports = ["AWREADY"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) wID {} {{(* ports = [] *)} {(* result = "WID" *)}}}} {method {Bit#(data_size) wDATA {} {{(* ports = [] *)} {(* result = "WDATA" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} wSTRB {} {{(* ports = [] *)} {(* result = "WSTRB" *)}}}} {method {Bool wLAST {} {{(* ports = [] *)} {(* result = "WLAST" *)}}}} {method {Bool wVALID {} {{(* ports = [] *)} {(* result = "WVALID" *)}}}} {method {Action wREADY Bool {{(* ports = ["WREADY"] *)} {(* result = "unusedwm1" *)} {(* prefix = "" *)}}}} {method {Bool bREADY {} {{(* ports = [] *)} {(* result = "BREADY" *)}}}} {method {Action bID Bit#(id_size) {{(* ports = ["BID"] *)} {(* result = "unusedwm2" *)} {(* prefix = "" *)}}}} {method {Action bRESP AxiDefines::AxiResp {{(* ports = ["BRESP"] *)} {(* result = "unusedwm3" *)} {(* prefix = "" *)}}}} {method {Action bVALID Bool {{(* ports = ["BVALID"] *)} {(* result = "unusedwm4" *)} {(* prefix = "" *)}}}}}} {position {AxiDefines.bsv 184 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiRdMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) arID {} {{(* ports = [] *)} {(* result = "ARID" *)}}}} {method {Bit#(addr_size) arADDR {} {{(* ports = [] *)} {(* result = "ARADDR" *)}}}} {method {UInt#(4) arLEN {} {{(* ports = [] *)} {(* result = "ARLEN" *)}}}} {method {TLM3Defines::TLMBSize arSIZE {} {{(* ports = [] *)} {(* result = "ARSIZE" *)}}}} {method {AxiDefines::AxiBurst arBURST {} {{(* ports = [] *)} {(* result = "ARBURST" *)}}}} {method {TLM3Defines::TLMLock arLOCK {} {{(* ports = [] *)} {(* result = "ARLOCK" *)}}}} {method {AxiDefines::AxiCache arCACHE {} {{(* ports = [] *)} {(* result = "ARCACHE" *)}}}} {method {AxiDefines::AxiProt arPROT {} {{(* ports = [] *)} {(* result = "ARPROT" *)}}}} {method {Bool arVALID {} {{(* ports = [] *)} {(* result = "ARVALID" *)}}}} {method {Action arREADY Bool {{(* ports = ["ARREADY"] *)} {(* result = "unusedrm0" *)} {(* prefix = "" *)}}}} {method {Bool rREADY {} {{(* ports = [] *)} {(* result = "RREADY" *)}}}} {method {Action rID Bit#(id_size) {{(* ports = ["RID"] *)} {(* result = "unusedrm1" *)} {(* prefix = "" *)}}}} {method {Action rDATA Bit#(data_size) {{(* ports = ["RDATA"] *)} {(* result = "unusedrm2" *)} {(* prefix = "" *)}}}} {method {Action rRESP AxiDefines::AxiResp {{(* ports = ["RRESP"] *)} {(* result = "unusedrm3" *)} {(* prefix = "" *)}}}} {method {Action rLAST Bool {{(* ports = ["RLAST"] *)} {(* result = "unusedrm4" *)} {(* prefix = "" *)}}}} {method {Action rVALID Bool {{(* ports = ["RVALID"] *)} {(* result = "unusedrm5" *)} {(* prefix = "" *)}}}}}} {position {AxiDefines.bsv 241 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action awID Bit#(id_size) {{(* ports = ["AWID"] *)} {(* result = "unusedws0" *)} {(* prefix = "" *)}}}} {method {Action awADDR Bit#(addr_size) {{(* ports = ["AWADDR"] *)} {(* result = "unusedws1" *)} {(* prefix = "" *)}}}} {method {Action awLEN UInt#(4) {{(* ports = ["AWLEN"] *)} {(* result = "unusedws2" *)} {(* prefix = "" *)}}}} {method {Action awSIZE TLM3Defines::TLMBSize {{(* ports = ["AWSIZE"] *)} {(* result = "unusedws3" *)} {(* prefix = "" *)}}}} {method {Action awBURST AxiDefines::AxiBurst {{(* ports = ["AWBURST"] *)} {(* result = "unusedws4" *)} {(* prefix = "" *)}}}} {method {Action awLOCK TLM3Defines::TLMLock {{(* ports = ["AWLOCK"] *)} {(* result = "unusedws5" *)} {(* prefix = "" *)}}}} {method {Action awCACHE AxiDefines::AxiCache {{(* ports = ["AWCACHE"] *)} {(* result = "unusedws6" *)} {(* prefix = "" *)}}}} {method {Action awPROT AxiDefines::AxiProt {{(* ports = ["AWPROT"] *)} {(* result = "unusedws7" *)} {(* prefix = "" *)}}}} {method {Action awVALID Bool {{(* ports = ["AWVALID"] *)} {(* result = "unusedws8" *)} {(* prefix = "" *)}}}} {method {Bool awREADY {} {{(* ports = [] *)} {(* result = "AWREADY" *)}}}} {method {Action wID Bit#(id_size) {{(* ports = ["WID"] *)} {(* result = "unusedws9" *)} {(* prefix = "" *)}}}} {method {Action wDATA Bit#(data_size) {{(* ports = ["WDATA"] *)} {(* result = "unusedws10" *)} {(* prefix = "" *)}}}} {method {Action wSTRB {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["WSTRB"] *)} {(* result = "unusedws11" *)} {(* prefix = "" *)}}}} {method {Action wLAST Bool {{(* ports = ["WLAST"] *)} {(* result = "unusedws12" *)} {(* prefix = "" *)}}}} {method {Action wVALID Bool {{(* ports = ["WVALID"] *)} {(* result = "unusedws13" *)} {(* prefix = "" *)}}}} {method {Bool wREADY {} {{(* ports = [] *)} {(* result = "WREADY" *)}}}} {method {Action bREADY Bool {{(* ports = ["BREADY"] *)} {(* result = "unusedws14" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) bID {} {{(* ports = [] *)} {(* result = "BID" *)}}}} {method {AxiDefines::AxiResp bRESP {} {{(* ports = [] *)} {(* result = "BRESP" *)}}}} {method {Bool bVALID {} {{(* ports = [] *)} {(* result = "BVALID" *)}}}}}} {position {AxiDefines.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiRdSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action arID Bit#(id_size) {{(* ports = ["ARID"] *)} {(* result = "unusedrs0" *)} {(* prefix = "" *)}}}} {method {Action arADDR Bit#(addr_size) {{(* ports = ["ARADDR"] *)} {(* result = "unusedrs1" *)} {(* prefix = "" *)}}}} {method {Action arLEN UInt#(4) {{(* ports = ["ARLEN"] *)} {(* result = "unusedrs2" *)} {(* prefix = "" *)}}}} {method {Action arSIZE TLM3Defines::TLMBSize {{(* ports = ["ARSIZE"] *)} {(* result = "unusedrs3" *)} {(* prefix = "" *)}}}} {method {Action arBURST AxiDefines::AxiBurst {{(* ports = ["ARBURST"] *)} {(* result = "unusedrs4" *)} {(* prefix = "" *)}}}} {method {Action arLOCK TLM3Defines::TLMLock {{(* ports = ["ARLOCK"] *)} {(* result = "unusedrs5" *)} {(* prefix = "" *)}}}} {method {Action arCACHE AxiDefines::AxiCache {{(* ports = ["ARCACHE"] *)} {(* result = "unusedrs6" *)} {(* prefix = "" *)}}}} {method {Action arPROT AxiDefines::AxiProt {{(* ports = ["ARPROT"] *)} {(* result = "unusedrs7" *)} {(* prefix = "" *)}}}} {method {Action arVALID Bool {{(* ports = ["ARVALID"] *)} {(* result = "unusedrs8" *)} {(* prefix = "" *)}}}} {method {Bool arREADY {} {{(* ports = [] *)} {(* result = "ARREADY" *)}}}} {method {Action rREADY Bool {{(* ports = ["RREADY"] *)} {(* result = "unusedrs9" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) rID {} {{(* ports = [] *)} {(* result = "RID" *)}}}} {method {Bit#(data_size) rDATA {} {{(* ports = [] *)} {(* result = "RDATA" *)}}}} {method {AxiDefines::AxiResp rRESP {} {{(* ports = [] *)} {(* result = "RRESP" *)}}}} {method {Bool rLAST {} {{(* ports = [] *)} {(* result = "RLAST" *)}}}} {method {Bool rVALID {} {{(* ports = [] *)} {(* result = "RVALID" *)}}}}}} {position {AxiDefines.bsv 344 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiDefines::AxiRdBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 392 11}}
Interface {AxiDefines::AxiWrBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusRecv#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 397 11}}
Interface {AxiDefines::AxiRdBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 403 11}}
Interface {AxiDefines::AxiWrBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusSend#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {AxiDefines.bsv 408 11}}
Interface {AxiDefines::AxiRdFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 418 11}}
Interface {AxiDefines::AxiRdFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {AxiDefines.bsv 423 11}}
Interface {AxiDefines::AxiWrFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 429 11}}
Interface {AxiDefines::AxiWrFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {AxiDefines.bsv 434 11}}
Interface {AxiDefines::AxiRdMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 478 11}}
Interface {AxiDefines::AxiWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 484 11}}
Interface {AxiDefines::AxiRdSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 490 11}}
Interface {AxiDefines::AxiWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 496 11}}
Interface {AxiDefines::AxiRdWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 506 11}}
Interface {AxiDefines::AxiRdWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 514 11}}
Interface {AxiDefines::AxiRdWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 522 11}}
Interface {AxiDefines::AxiRdWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {AxiDefines.bsv 529 11}}
Interface AxiDefines::AxiLowPower {members {{method {Action cSYSREQ Bool {{(* ports = ["CSYSREQ"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bool cSYSACK {} {{(* ports = [] *)} {(* result = "CSYSACK" *)}}}} {method {Bool cACTIVE {} {{(* ports = [] *)} {(* result = "CACTIVE" *)}}}}}} {position {AxiDefines.bsv 554 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AxiPC::AxiPC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action aw_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action aw_len UInt#(4) {{(* ports = ["aw_len"] *)}}}} {method {Action aw_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action aw_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action aw_lock TLM3Defines::TLMLock {{(* ports = ["value"] *)}}}} {method {Action aw_cache AxiDefines::AxiCache {{(* ports = ["value"] *)}}}} {method {Action aw_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action aw_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action aw_valid Bool {{(* ports = ["value"] *)}}}} {method {Action aw_ready Bool {{(* ports = ["value"] *)}}}} {method {Action w_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action w_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action w_strb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["value"] *)}}}} {method {Action w_last Bool {{(* ports = ["value"] *)}}}} {method {Action w_valid Bool {{(* ports = ["value"] *)}}}} {method {Action w_ready Bool {{(* ports = ["value"] *)}}}} {method {Action b_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action b_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action b_valid Bool {{(* ports = ["value"] *)}}}} {method {Action b_ready Bool {{(* ports = ["value"] *)}}}} {method {Action ar_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action ar_len UInt#(4) {{(* ports = ["value"] *)}}}} {method {Action ar_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action ar_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action ar_lock TLM3Defines::TLMLock {{(* ports = ["value"] *)}}}} {method {Action ar_cache AxiDefines::AxiCache {{(* ports = ["value"] *)}}}} {method {Action ar_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action ar_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action ar_valid Bool {{(* ports = ["value"] *)}}}} {method {Action ar_ready Bool {{(* ports = ["value"] *)}}}} {method {Action r_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action r_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action r_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action r_last Bool {{(* ports = ["value"] *)}}}} {method {Action r_valid Bool {{(* ports = ["value"] *)}}}} {method {Action r_ready Bool {{(* ports = ["value"] *)}}}} {method {Action c_active Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysreq Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysack Bool {{(* ports = ["value"] *)}}}}}} {position {AxiPC.bsv 573 11}}
Struct AxiPC::AxiPCParams {members {{UInt#(32) exmon_width {width 32}} {UInt#(32) maxwaits {width 32}}}} {width 64} {position {AxiPC.bsv 629 19}}


Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Interface {AHBArbiterSupport::AHBArbiter#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {{Maybe#(Bit#(TSub#(TAdd#(TLog#(count), 1), TDiv#(TLog#(count), count))))} hmaster {} {{(* ports = [] *)}}}} {method {Action update {} {{(* ports = [] *)}}}}}} {position {AHBArbiterSupport.bsv 18 11}}
Typeclass {Arbiter::Arbitable#(type a)} {members {{{function b#(Arbiter::ArbiterRequest_IFC) f(a x1)   provisos (IsModule#(b, c))} mkArbiterRequest}}} {instances {Arbiter::Arbitable#(AhbDefines::AhbMasterArbiter) {Arbiter::Arbitable#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size))} Arbiter::Arbitable#(BusDefines::BusSend#(a))}} {position {%/Libraries/Arbiter.bsv 340 11 {Library Arbiter}}}
Interface Arbiter::ArbiterClient_IFC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Action lock {} {{(* ports = [] *)}}}} {method {Bool grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 11 11 {Library Arbiter}}}
Interface Arbiter::ArbiterRequest_IFC {members {{method {Bool request {} {{(* ports = [] *)}}}} {method {Bool lock {} {{(* ports = [] *)}}}} {method {Action grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 17 11 {Library Arbiter}}}
Interface {Arbiter::Arbiter_IFC#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {Bit#(TLog#(count)) grant_id {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 23 11 {Library Arbiter}}}
Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Interface {AHBArbiterSupport::AHBArbiter#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {{Maybe#(Bit#(TSub#(TAdd#(TLog#(count), 1), TDiv#(TLog#(count), count))))} hmaster {} {{(* ports = [] *)}}}} {method {Action update {} {{(* ports = [] *)}}}}}} {position {AHBArbiterSupport.bsv 18 11}}
Typeclass {Arbiter::Arbitable#(type a)} {members {{{function b#(Arbiter::ArbiterRequest_IFC) f(a x1)   provisos (IsModule#(b, c))} mkArbiterRequest}}} {instances {Arbiter::Arbitable#(AhbDefines::AhbMasterArbiter) {Arbiter::Arbitable#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size))} Arbiter::Arbitable#(BusDefines::BusSend#(a))}} {position {%/Libraries/Arbiter.bsv 340 11 {Library Arbiter}}}
Struct {BusSwitch::BusSwitchPath#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) send_port} {Bit#(id_size) recv_port} {Bit#(id_size) send_id} {Bit#(id_size) recv_id}}} {position {BusSwitch.bsv 28 19}}
Interface {BusSwitch::BusSwitch#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action set_path {{BusSwitch::BusSwitchPath#(id_size, addr_size, data_size, length_size, user_size)}} {{(* ports = ["path"] *)}}}} {method {Bool done {} {{(* ports = [] *)}}}} {method {Action ack {} {{(* ports = [] *)}}}}}} {position {BusSwitch.bsv 38 11}}
Alias {TLM3CBusAdapter::TLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CBus#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 20 38}}
Alias {TLM3CBusAdapter::ModWithTLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(caddr_size, data_size)), HList::HNil), i)} {position {TLM3CBusAdapter.bsv 21 48}}



Alias TLM3Defines::TLMRequestStd {TLM3Defines::TLMRequest#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 31 36}}
Alias TLM3Defines::TLMResponseStd {TLM3Defines::TLMResponse#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 32 36}}
Enum TLM3Defines::TLMCommand {members {READ WRITE UNKNOWN}} {width 2} {position {TLM3Defines.bsv 34 53}}
Enum TLM3Defines::TLMMode {members {REGULAR DEBUG CONTROL UNKNOWN}} {width 2} {position {TLM3Defines.bsv 35 53}}
Enum TLM3Defines::TLMBurstMode {members {INCR WRAP CNST UNKNOWN}} {width 2} {position {TLM3Defines.bsv 36 53}}
Enum TLM3Defines::TLMStatus {members {SUCCESS ERROR EXOKAY UNKNOWN}} {width 2} {position {TLM3Defines.bsv 44 48}}
Alias {TLM3Defines::TLMId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {TLM3Defines.bsv 67 42}}
Alias {TLM3Defines::TLMAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {TLM3Defines.bsv 68 42}}
Alias {TLM3Defines::TLMData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {TLM3Defines.bsv 69 42}}
Alias {TLMDefines::TLMUInt#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} UInt#(uint_size) {position {TLMDefines.bsv 36 42}}
Alias {TLM3Defines::TLMByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {TLM3Defines.bsv 70 42}}
Alias {TLMDefines::TLMBurstSize#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} {Bit#(TLog#(TDiv#(data_size, 8)))} {position {TLMDefines.bsv 38 42}}
Alias {TLMDefines::TLMCustom#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} cstm_type {position {TLMDefines.bsv 39 42}}
Struct {TLM3Defines::RequestDescriptor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMMode mode {width 2}} {Bit#(addr_size) addr} {Bit#(user_size) user_addr} {Bit#(4) region {width 4}} {Bit#(data_size) data} {UInt#(length_size) b_length} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {Bit#(4) prty {width 4}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(id_size) transaction_id} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMMark mark {width 2}} {Bool cntrl_flow {width 1}}}} {position {TLM3Defines.bsv 116 19}}
Struct {TLM3Defines::RequestData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 123 19}}
TaggedUnion {TLM3Defines::TLMRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {{TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size)} Data}}} {position {TLM3Defines.bsv 128 25}}
Struct {TLM3Defines::TLMResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {Bit#(data_size) data} {TLM3Defines::TLMStatus status {width 2}} {Bit#(user_size) user} {Bit#(4) prty {width 4}} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 138 19}}
Interface {TLM3Defines::TLMSendIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(req) tx {}} {interface GetPut::Put#(resp) rx {}}}} {position {TLM3Defines.bsv 790 11}}
Interface {TLM3Defines::TLMRecvIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(resp) tx {}} {interface GetPut::Put#(req) rx {}}}} {position {TLM3Defines.bsv 795 11}}
Interface {TLM3Defines::TLMReadWriteSendIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 800 11}}
Interface {TLM3Defines::TLMReadWriteRecvIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMRecvIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 805 11}}
Interface {TLM3Defines::TLMTransformIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} in {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} out {}}}} {position {TLM3Defines.bsv 810 11}}
Typeclass {TLMDefines::Monitorable#(type a)} {members {{{function b#(Empty) f(a x1)   provisos (IsModule#(b, c))} mkMonitor}}} {position {TLMDefines.bsv 466 11}}
Typeclass {TLM3Defines::AddrMatch#(type addr_t, type ifc_t)} {members {{{function ifc_t f(function Bool x1(addr_t x1), ifc_t x2)} addAddrMatch}}} {position {TLM3Defines.bsv 844 11}}

Alias {TLM3CBusAdapter::TLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CBus#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 20 38}}
Alias {TLM3CBusAdapter::ModWithTLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(caddr_size, data_size)), HList::HNil), i)} {position {TLM3CBusAdapter.bsv 21 48}}
Alias {TLM3CBusAdapter::TLMCRAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CRAddr#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 22 40}}




Typeclass {TLM3BRAM::ToBRAMSeverBETC#(type a, type addr, type data, numeric type n)} {dependencies {{a determines (addr, data, n)}}} {members {{{function ClientServer::Server#(BRAM::BRAMRequestBE#(addr, data, n), data) f(a x1)} toBRAMServerBE}}} {instances {{TLM3BRAM::ToBRAMSeverBETC#(BRAM::BRAMServer#(addr, data), addr, data, n)} {TLM3BRAM::ToBRAMSeverBETC#(BRAM::BRAMServerBE#(addr, data, n), addr, data, n)}}} {position {TLM3BRAM.bsv 132 11}}
Alias TLM3Defines::TLMRequestStd {TLM3Defines::TLMRequest#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 31 36}}
Alias TLM3Defines::TLMResponseStd {TLM3Defines::TLMResponse#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 32 36}}
Enum TLM3Defines::TLMCommand {members {READ WRITE UNKNOWN}} {width 2} {position {TLM3Defines.bsv 34 53}}
Enum TLM3Defines::TLMMode {members {REGULAR DEBUG CONTROL UNKNOWN}} {width 2} {position {TLM3Defines.bsv 35 53}}
Enum TLM3Defines::TLMBurstMode {members {INCR WRAP CNST UNKNOWN}} {width 2} {position {TLM3Defines.bsv 36 53}}
Enum TLM3Defines::TLMStatus {members {SUCCESS ERROR EXOKAY UNKNOWN}} {width 2} {position {TLM3Defines.bsv 44 48}}
Alias {TLM3Defines::TLMId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {TLM3Defines.bsv 67 42}}
Alias {TLM3Defines::TLMAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {TLM3Defines.bsv 68 42}}
Alias {TLM3Defines::TLMData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {TLM3Defines.bsv 69 42}}
Alias {TLMDefines::TLMUInt#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} UInt#(uint_size) {position {TLMDefines.bsv 36 42}}
Alias {TLM3Defines::TLMByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {TLM3Defines.bsv 70 42}}
Alias {TLMDefines::TLMBurstSize#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} {Bit#(TLog#(TDiv#(data_size, 8)))} {position {TLMDefines.bsv 38 42}}
Alias {TLMDefines::TLMCustom#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} cstm_type {position {TLMDefines.bsv 39 42}}
Struct {TLM3Defines::RequestDescriptor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMMode mode {width 2}} {Bit#(addr_size) addr} {Bit#(user_size) user_addr} {Bit#(4) region {width 4}} {Bit#(data_size) data} {UInt#(length_size) b_length} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {Bit#(4) prty {width 4}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(id_size) transaction_id} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMMark mark {width 2}} {Bool cntrl_flow {width 1}}}} {position {TLM3Defines.bsv 116 19}}
Struct {TLM3Defines::RequestData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 123 19}}
TaggedUnion {TLM3Defines::TLMRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {{TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size)} Data}}} {position {TLM3Defines.bsv 128 25}}
Struct {TLM3Defines::TLMResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {Bit#(data_size) data} {TLM3Defines::TLMStatus status {width 2}} {Bit#(user_size) user} {Bit#(4) prty {width 4}} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 138 19}}
Typeclass {TLM3Defines::TLMRequestTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMRequest} {{function a f(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMRequest}}} {instances {{TLM3Defines::TLMRequestTC#(AhbDefines::AhbXtorRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(BRAM::BRAMRequest#(Bit#(addr_size), Bit#(data_size)), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(BRAM::BRAMRequestBE#(Bit#(addr_size), Bit#(data_size), TDiv#(data_size, 8)), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 206 11}}
Typeclass {TLM3Defines::TLMResponseTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMResponse} {{function a f(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMResponse}}} {instances {{TLM3Defines::TLMResponseTC#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(Bit#(data_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 212 11}}
Interface {TLM3Defines::TLMSendIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(req) tx {}} {interface GetPut::Put#(resp) rx {}}}} {position {TLM3Defines.bsv 790 11}}
Interface {TLM3Defines::TLMRecvIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(resp) tx {}} {interface GetPut::Put#(req) rx {}}}} {position {TLM3Defines.bsv 795 11}}
Interface {TLM3Defines::TLMReadWriteSendIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 800 11}}
Interface {TLM3Defines::TLMReadWriteRecvIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMRecvIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 805 11}}
Interface {TLM3Defines::TLMTransformIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} in {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} out {}}}} {position {TLM3Defines.bsv 810 11}}
Typeclass {TLM3Defines::AddrMatch#(type addr_t, type ifc_t)} {members {{{function ifc_t f(function Bool x1(addr_t x1), ifc_t x2)} addAddrMatch}}} {position {TLM3Defines.bsv 844 11}}
Alias TLM3Defines::TLMRequestStd {TLM3Defines::TLMRequest#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 31 36}}
Alias TLM3Defines::TLMResponseStd {TLM3Defines::TLMResponse#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 32 36}}
Enum TLM3Defines::TLMCommand {members {READ WRITE UNKNOWN}} {width 2} {position {TLM3Defines.bsv 34 53}}
Enum TLM3Defines::TLMMode {members {REGULAR DEBUG CONTROL UNKNOWN}} {width 2} {position {TLM3Defines.bsv 35 53}}
Enum TLM3Defines::TLMBurstMode {members {INCR WRAP CNST UNKNOWN}} {width 2} {position {TLM3Defines.bsv 36 53}}
Enum TLM3Defines::TLMStatus {members {SUCCESS ERROR EXOKAY UNKNOWN}} {width 2} {position {TLM3Defines.bsv 44 48}}
Alias {TLM3Defines::TLMId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {TLM3Defines.bsv 67 42}}
Alias {TLM3Defines::TLMAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {TLM3Defines.bsv 68 42}}
Alias {TLM3Defines::TLMData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {TLM3Defines.bsv 69 42}}
Alias {TLMDefines::TLMUInt#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} UInt#(uint_size) {position {TLMDefines.bsv 36 42}}
Alias {TLM3Defines::TLMByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {TLM3Defines.bsv 70 42}}
Alias {TLMDefines::TLMBurstSize#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} {Bit#(TLog#(TDiv#(data_size, 8)))} {position {TLMDefines.bsv 38 42}}
Alias {TLMDefines::TLMCustom#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type uint_size, type cstm_type)} cstm_type {position {TLMDefines.bsv 39 42}}
Struct {TLM3Defines::RequestDescriptor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMMode mode {width 2}} {Bit#(addr_size) addr} {Bit#(user_size) user_addr} {Bit#(4) region {width 4}} {Bit#(data_size) data} {UInt#(length_size) b_length} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {Bit#(4) prty {width 4}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(id_size) transaction_id} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMMark mark {width 2}} {Bool cntrl_flow {width 1}}}} {position {TLM3Defines.bsv 116 19}}
Struct {TLM3Defines::RequestData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 123 19}}
TaggedUnion {TLM3Defines::TLMRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {{TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size)} Data}}} {position {TLM3Defines.bsv 128 25}}
Struct {TLM3Defines::TLMResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {Bit#(data_size) data} {TLM3Defines::TLMStatus status {width 2}} {Bit#(user_size) user} {Bit#(4) prty {width 4}} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 138 19}}
Interface {TLM3Defines::TLMSendIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(req) tx {}} {interface GetPut::Put#(resp) rx {}}}} {position {TLM3Defines.bsv 790 11}}
Interface {TLM3Defines::TLMRecvIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(resp) tx {}} {interface GetPut::Put#(req) rx {}}}} {position {TLM3Defines.bsv 795 11}}
Interface {TLM3Defines::TLMReadWriteSendIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 800 11}}
Interface {TLM3Defines::TLMReadWriteRecvIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMRecvIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 805 11}}
Interface {TLM3Defines::TLMTransformIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} in {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} out {}}}} {position {TLM3Defines.bsv 810 11}}
Typeclass {TLMDefines::Monitorable#(type a)} {members {{{function b#(Empty) f(a x1)   provisos (IsModule#(b, c))} mkMonitor}}} {position {TLMDefines.bsv 466 11}}
Typeclass {TLM3Defines::AddrMatch#(type addr_t, type ifc_t)} {members {{{function ifc_t f(function Bool x1(addr_t x1), ifc_t x2)} addAddrMatch}}} {position {TLM3Defines.bsv 844 11}}
Alias {TLM3CBusAdapter::TLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CBus#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 20 38}}
Alias {TLM3CBusAdapter::ModWithTLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(caddr_size, data_size)), HList::HNil), i)} {position {TLM3CBusAdapter.bsv 21 48}}
Interface {BusDefines::BusSender#(type a)} polymorphic {members {{interface FIFO::FIFO#(a) in {}} {interface BusDefines::BusSend#(a) out {}}}} {position {BusDefines.bsv 15 11}}
Interface {BusDefines::BusReceiver#(type a)} polymorphic {members {{interface BusDefines::BusRecv#(a) in {}} {interface FIFO::FIFO#(a) out {}}}} {position {BusDefines.bsv 20 11}}
Interface {BusDefines::BusSend#(type a)} polymorphic {members {{method {a data {} {{(* ports = [] *)}}}} {method {Bool valid {} {{(* ports = [] *)}}}} {method {Action ready Bool {{(* ports = ["value"] *)}}}}}} {position {BusDefines.bsv 26 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {BusDefines::BusRecv#(type a)} polymorphic {members {{method {Action data a {{(* ports = ["value"] *)}}}} {method {Action valid Bool {{(* ports = ["value"] *)}}}} {method {Bool ready {} {{(* ports = [] *)}}}}}} {position {BusDefines.bsv 33 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Typeclass {BusDefines::BusPayload#(type a, type b)} {dependencies {{a determines b}}} {members {{{function Bool f(a x1)} isLast} {{function b f(a x1)} getId} {{function a f(a x1, b x2)} setId}}} {instances {{BusDefines::BusPayload#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))}}} {position {BusDefines.bsv 56 11}}

Interface {BusDefines::BusSender#(type a)} polymorphic {members {{interface FIFO::FIFO#(a) in {}} {interface BusDefines::BusSend#(a) out {}}}} {position {BusDefines.bsv 15 11}}
Interface {BusDefines::BusReceiver#(type a)} polymorphic {members {{interface BusDefines::BusRecv#(a) in {}} {interface FIFO::FIFO#(a) out {}}}} {position {BusDefines.bsv 20 11}}
Interface {BusDefines::BusSend#(type a)} polymorphic {members {{method {a data {} {{(* ports = [] *)}}}} {method {Bool valid {} {{(* ports = [] *)}}}} {method {Action ready Bool {{(* ports = ["value"] *)}}}}}} {position {BusDefines.bsv 26 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {BusDefines::BusRecv#(type a)} polymorphic {members {{method {Action data a {{(* ports = ["value"] *)}}}} {method {Action valid Bool {{(* ports = ["value"] *)}}}} {method {Bool ready {} {{(* ports = [] *)}}}}}} {position {BusDefines.bsv 33 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Typeclass {BusDefines::BusPayload#(type a, type b)} {dependencies {{a determines b}}} {members {{{function Bool f(a x1)} isLast} {{function b f(a x1)} getId} {{function a f(a x1, b x2)} setId}}} {instances {{BusDefines::BusPayload#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiAddrCmd#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiRdResp#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiWrData#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))} {BusDefines::BusPayload#(AxiDefines::AxiWrResp#(id_size, addr_size, data_size, length_size, user_size), TLM3Defines::TLMId#(id_size, addr_size, data_size, length_size, user_size))}}} {position {BusDefines.bsv 56 11}}
Enum XilinxClocks::State {members {Restart WaitLock WaitStart Address Read Modify Write WaitWriteReady}} {width 3} {position {XilinxClocks.bsv 41 3}}
Alias GenCRepr::ByteList List#(Bit#(8)) {position {GenCRepr.bs 11 5}}
Typeclass {GenCRepr::ByteListToVector#(numeric type n)} {members {{{function Vector::Vector#(n, Bit#(8)) f(List#(Bit#(8)) x1)} byteListToVector}}} {instances {GenCRepr::ByteListToVector#(0) {GenCRepr::ByteListToVector#(n)   provisos (GenCRepr::ByteListToVector#(n1), Add#(n1, 1, n))}}} {position {GenCRepr.bs 35 6}}
Typeclass {GenCRepr::GenCRepr#(type a, numeric type n)} {dependencies {{a determines n}}} {members {{{function String f(a x1)} typeName} {{function Tuple2#(String, String) f(a x1)} genCType} {{function Maybe#(String) f(a x1)} genCTypeDecl} {{function List#(Bit#(8)) f(a x1)} packBytes} {{function String f(a x1, String x2, String x3)} genCPack} {{function Maybe#(Tuple2#(String, String)) f(a x1)} genCPackDecl} {{function Tuple2#(a, List#(Bit#(8))) f(List#(Bit#(8)) x1)} unpackBytes} {{State::State#(List#(Bit#(8)), a)} unpackBytesS} {{function String f(a x1, String x2, String x3)} genCUnpack} {{function Maybe#(Tuple2#(String, String)) f(a x1)} genCUnpackDecl}}} {instances {{GenCRepr::GenCRepr#(Bool, 1)} {GenCRepr::GenCRepr#(Int#(b), n)   provisos (Div#(b, 8, n))} {GenCRepr::GenCRepr#(UInt#(b), n)   provisos (Div#(b, 8, n))} {GenCRepr::GenCRepr#(a, n)   provisos (GenCRepr::GenCRepr#(a, n1), GenCRepr::GenCRepr'#(r, n), Generic#(a, r))}}} {position {GenCRepr.bs 48 6}}

Typeclass {GenCRepr::TypeNames#(type a)} {members {{{function String f(a x1)} typeNames}}} {instances {GenCRepr::TypeNames#(NumArg#(n)) {GenCRepr::TypeNames#(StarArg#(a))   provisos (GenCRepr::GenCRepr#(a, n))} GenCRepr::TypeNames#(StrArg#(s)) {GenCRepr::TypeNames#(Tuple2#(NumArg#(n), b))   provisos (GenCRepr::TypeNames#(b))} {GenCRepr::TypeNames#(Tuple2#(StarArg#(a), b))   provisos (GenCRepr::TypeNames#(b), GenCRepr::GenCRepr#(a, n))} {GenCRepr::TypeNames#(Tuple2#(StrArg#(s), b))   provisos (GenCRepr::TypeNames#(b))} GenCRepr::TypeNames#(void)}} {position {GenCRepr.bs 375 6}}
Typeclass {GenCRepr::GenCUnionBody#(numeric type nt, type a, numeric type i, numeric type n)} {dependencies {{(nt, a) determines (i, n)}}} {members {{{function String f(Bit#(nt) x1, a x2, String x3)} genCEnumBody} {{function String f(Bit#(nt) x1, a x2, String x3)} genCUnionBody} {{function Bool f(Bit#(nt) x1, a x2)} hasUnionMembers} {{function List#(Bit#(8)) f(Bit#(nt) x1, a x2)} packUnionBody} {{function String f(Bit#(nt) x1, a x2, String x3)} genCPackUnionBody} {{function State::State#(List#(Bit#(8)), a) f(Bit#(nt) x1)} unpackUnionBody} {{function String f(Bit#(nt) x1, a x2, String x3)} genCUnpackUnionBody}}} {instances {{GenCRepr::GenCUnionBody#(tagBytes, Either#(a, b), i1, n)   provisos (Mul#(tagBytes, 8, tagBits), Max#(n1, n2, n), GenCRepr::GenCUnionBody#(tagBytes, b, i2, n2), GenCRepr::GenCUnionBody#(tagBytes, a, i1, n1))} {GenCRepr::GenCUnionBody#(tagBytes, Meta#(MetaConsAnon#(ctorName, ctorIdx, 0), void), ctorIdx, 0)   provisos (Mul#(tagBytes, 8, tagBits))} {GenCRepr::GenCUnionBody#(tagBytes, Meta#(MetaConsAnon#(ctorName, ctorIdx, 1), Meta#(MetaField#(fieldName, fieldIdx), Conc#(a))), ctorIdx, n)   provisos (Mul#(tagBytes, 8, tagBits), GenCRepr::GenCRepr#(a, n))} {GenCRepr::GenCUnionBody#(tagBytes, Meta#(MetaConsAnon#(ctorName, ctorIdx, numFields), bodyRepr), ctorIdx, n)   provisos (Mul#(tagBytes, 8, tagBits), GenCRepr::GenCStructBody#(bodyRepr, n))} {GenCRepr::GenCUnionBody#(tagBytes, Meta#(MetaConsNamed#(ctorName, ctorIdx, numFields), bodyRepr), ctorIdx, n)   provisos (Mul#(tagBytes, 8, tagBits), GenCRepr::GenCStructBody#(bodyRepr, n))}}} {position {GenCRepr.bs 406 6}}
Typeclass {GenCRepr::GenCStructBody#(type a, numeric type n)} {dependencies {{a determines n}}} {members {{{function String f(a x1, Bool x2)} genCStructBody} {{function List#(Bit#(8)) f(a x1)} packStructBody} {{function String f(a x1, Bool x2, String x3)} genCPackStructBody} {{State::State#(List#(Bit#(8)), a)} unpackStructBody} {{function String f(a x1, Bool x2, String x3)} genCUnpackStructBody}}} {instances {{GenCRepr::GenCStructBody#(Meta#(MetaField#(name, idx), Conc#(a)), n)   provisos (GenCRepr::GenCRepr#(a, n))} {GenCRepr::GenCStructBody#(Tuple2#(a, b), n)   provisos (Add#(n1, n2, n), GenCRepr::GenCStructBody#(b, n2), GenCRepr::GenCStructBody#(a, n1))} {GenCRepr::GenCStructBody#(void, 0)}}} {position {GenCRepr.bs 545 6}}
Typeclass {GenCRepr::GenCDecls#(type a)} {members {{{function List#(String) f(a x1)} componentTypeNames} {{function State::State#(List#(String), String) f(a x1)} genCHeaderDecls} {{function State::State#(List#(String), String) f(a x1)} genCImplDecls}}} {instances {{GenCRepr::GenCDecls#(a)   provisos (GenCRepr::GenCDecls'#(r), Generic#(a, r), GenCRepr::GenCRepr#(a, n))}}} {position {GenCRepr.bs 593 6}}

Typeclass {GenCRepr::GenAllCDecls#(type a)} {members {{{function State::State#(List#(String), String) f(a x1)} genAllCHeaderDecls} {{function State::State#(List#(String), String) f(a x1)} genAllCImplDecls}}} {instances {{GenCRepr::GenAllCDecls#(Tuple2#(a, b))   provisos (GenCRepr::GenAllCDecls#(b), GenCRepr::GenCDecls'#(_v100), Generic#(a, _v100), GenCRepr::GenCRepr#(a, _v101))} {GenCRepr::GenAllCDecls#(a)   provisos (GenCRepr::GenCDecls'#(_v100), Generic#(a, _v100), GenCRepr::GenCRepr#(a, _v101))} GenCRepr::GenAllCDecls#(void)}} {position {GenCRepr.bs 680 6}}
Typeclass {GenCMsg::ByteVector#(numeric type n)} {members {{{function Vector::Vector#(n, Bit#(8)) f(Bit#(TMul#(n, 8)) x1)} toByteVector} {{function Bit#(TMul#(n, 8)) f(Vector::Vector#(n, Bit#(8)) x1)} fromByteVector}}} {instances {GenCMsg::ByteVector#(0) {GenCMsg::ByteVector#(n)   provisos (GenCMsg::ByteVector#(n1), Add#(n1, 1, n))}}} {position {GenCMsg.bs 11 6}}
Interface {GenCMsg::Rx#(numeric type destFIFOSize, numeric type srcFIFOSize, type a)} polymorphic {members {{method {Action deq {} {}}} {method {a first {} {}}} {method {Bool notEmpty {} {}}}}} {position {GenCMsg.bs 28 11}}
Interface {GenCMsg::Tx#(numeric type destFIFOSize, numeric type srcFIFOSize, type a)} polymorphic {members {{method {Action enq a {}}} {method {Bool notFull {} {}}}}} {position {GenCMsg.bs 36 11}}
Alias {GenCMsg::SizedVector#(numeric type n, type a)} {Tuple2#(UInt#(TLog#(TAdd#(1, n))), Vector::Vector#(n, a))} {position {GenCMsg.bs 58 5}}
Interface {GenCMsg::MsgManager#(type fifos, numeric type rxBytes, numeric type txBytes)} polymorphic {members {{method {fifos fifos {} {}}} {interface {GetPut::Put#(Vector::Vector#(rxBytes, Bit#(8)))} rxMsg {}} {interface {GetPut::Get#(Tuple2#(UInt#(TLog#(TAdd#(1, txBytes))), Vector::Vector#(txBytes, Bit#(8))))} txMsg {}}}} {position {GenCMsg.bs 65 10}}
Typeclass {GenCMsg::GenCMsg#(type fifos, numeric type rxBytes, numeric type txBytes)} {dependencies {{fifos determines (rxBytes, txBytes)}}} {members {{{Module#(GenCMsg::MsgManager#(fifos, rxBytes, txBytes))} mkMsgManager} {{function State::State#(List#(String), String) f(fifos x1)} genCMsgHeaderDecls} {{function State::State#(List#(String), String) f(fifos x1)} genCMsgImplDecls}}} {instances {{GenCMsg::GenCMsg#(fifos, rxTotalBytes, txTotalBytes)   provisos (Generic#(fifos, Meta#(MetaData#(name, pkg, ta, 1), r)), GenCMsg::FIFOs'#(Meta#(MetaData#(name, pkg, ta, 1), r), rxBytes, rxCount, txBytes, txCount), GenCRepr::ByteListToVector#(txBytes), Add#(txHead, txBytes, txTotalBytes), Add#(rxCount, tagBytes, txHead), Add#(txCount, rxRest, rxTotalBytes), Add#(rxHead, rxBytes, rxTotalBytes), Add#(txCount, tagBytes, rxHead), GenCMsg::ByteVector#(tagBytes), Div#(tagBits, 8, tagBytes), Log#(TAdd#(1, TAdd#(rxCount, txCount)), tagBits))}}} {position {GenCMsg.bs 70 6}}
Typeclass {GenCMsg::FIFOs#(type fifos, numeric type rxBytes, numeric type rxCount, numeric type txBytes, numeric type txCount)} {dependencies {{fifos determines (rxBytes, rxCount, txBytes, txCount)}}} {members {{{module f#(fifos x1)(Vector::Vector#(rxCount, Reg#(UInt#(8))))} mkRxCredits} {{module f#(fifos x1)(Vector::Vector#(txCount, Reg#(UInt#(8))))} mkTxCredits} {{module f#(Vector::Vector#(rxCount, Reg#(UInt#(8))) x1, function Bool x2(Integer x1), List#(Bit#(8)) x3, Action x4, Vector::Vector#(txCount, Reg#(UInt#(8))) x5, function Action x6(Integer x1, List#(Bit#(8)) x2))(Tuple2#(fifos, Rules))} mkFIFOs} {{function State::State#(List#(String), String) f(fifos x1)} genCMsgTypeHeaderDcls} {{function State::State#(List#(String), String) f(fifos x1)} genCMsgTypeImplDcls} {{function String f(fifos x1)} genCFIFOStructItems} {{function String f(fifos x1)} genCFIFOInitCredits} {{function String f(fifos x1)} genCFIFORestoreCredits} {{function String f(fifos x1)} genCFIFOCollectCredits} {{function String f(fifos x1, Integer x2)} genCFIFOEncode} {{function String f(fifos x1, Integer x2)} genCFIFODecode} {{function String f(fifos x1, String x2)} genCFIFOHeaderDcls} {{function String f(fifos x1, String x2)} genCFIFOImplDcls}}} {instances {{GenCMsg::FIFOs#(a, brx, nrx, btx, ntx)   provisos (GenCMsg::FIFOs'#(r, brx, nrx, btx, ntx), Generic#(a, r))}}} {position {GenCMsg.bs 185 6}}

Alias TLM3Stream::DFLT 0 {position {TLM3Stream.bsv 20 11}}
Alias TLM3Stream::STRB 1 {position {TLM3Stream.bsv 21 11}}
Alias TLM3Stream::KEEP 2 {position {TLM3Stream.bsv 22 11}}
Alias TLM3Stream::KEEPSTRB 3 {position {TLM3Stream.bsv 23 11}}
Alias {TLM3Stream::TLMKeep#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TMul#(TMin#(1, TMax#(0, TSub#(TMax#(1, length_size), 1))), TDiv#(data_size, 8)))} {position {TLM3Stream.bsv 25 135}}
Alias {TLM3Stream::TLMStrb#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TMul#(TSub#(TMax#(length_size, TAdd#(TDiv#(length_size, 2), TDiv#(length_size, 2))), length_size), TDiv#(data_size, 8)))} {position {TLM3Stream.bsv 26 135}}
Struct {TLM3Stream::TLMTransfer#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(addr_size) dest} {Bit#(user_size) user} {Bit#(id_size) transaction_id} {{Bit#(TDiv#(data_size, 8))} keep} {{Bit#(TDiv#(data_size, 8))} strb} {Bool is_last {width 1}}}} {position {TLM3Stream.bsv 35 19}}
Typeclass {TLM3Stream::TLMTransferTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMTransfer} {{function a f(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMTransfer}}} {instances {{TLM3Stream::TLMTransferTC#(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Stream.bsv 59 11}}

Typeclass {TLM3BRAM::ToBRAMSeverBETC#(type a, type addr, type data, numeric type n)} {dependencies {{a determines (addr, data, n)}}} {members {{{function ClientServer::Server#(BRAM::BRAMRequestBE#(addr, data, n), data) f(a x1)} toBRAMServerBE}}} {instances {{TLM3BRAM::ToBRAMSeverBETC#(BRAM::BRAMServer#(addr, data), addr, data, n)} {TLM3BRAM::ToBRAMSeverBETC#(BRAM::BRAMServerBE#(addr, data, n), addr, data, n)}}} {position {TLM3BRAM.bsv 132 11}}
Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Alias {AhbDefines::LUInt#(numeric type m)} {UInt#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 29 35}}
Alias TLM3Api::TLMHeaderId Bit#(10) {position {TLM3Api.bsv 29 19}}
Struct TLM3Api::TLMRequestHeader {members {{UInt#(15) b_length {width 15}} {TLM3Api::TLMRequestParams params {width 36}}}} {width 51} {position {TLM3Api.bsv 33 19}}
Struct TLM3Api::TLMRequestParams {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(10) transaction_id {width 10}} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {Bit#(4) region {width 4}} {Bit#(4) qos {width 4}} {Bool cntrl_flow {width 1}} {Bool spec_byte_enable {width 1}}}} {width 36} {position {TLM3Api.bsv 57 19}}
Struct TLM3Api::TLMResponseHeader {members {{UInt#(15) b_length {width 15}} {TLM3Api::TLMResponseParams params {width 17}}}} {width 32} {position {TLM3Api.bsv 62 19}}
Struct TLM3Api::TLMResponseParams {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMStatus status {width 2}} {Bit#(10) transaction_id {width 10}} {TLM3Defines::TLMErrorCode error {width 3}}}} {width 17} {position {TLM3Api.bsv 68 19}}
Alias TLM3Api::Chunk Bit#(32) {position {TLM3Api.bsv 237 18}}
Interface {TLM3Api::ApiRecvIFC#(type req_t, type resp_t)} polymorphic {members {{interface {ClientServer::Server#(Bit#(32), Bit#(32))} scemi {}} {interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} out {}}}} {position {TLM3Api.bsv 248 11}}
Interface {TLM3Api::ApiSendIFC#(type req_t, type resp_t)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} in {}} {interface {ClientServer::Client#(Bit#(32), Bit#(32))} scemi {}}}} {position {TLM3Api.bsv 253 11}}
Enum TLM3Api::SendState {members {SHeader0 SHeader1 SAddrRead SAddrWrite SUserRead SUserWrite SData}} {width 3} {position {TLM3Api.bsv 262 88}}
Enum TLM3Api::RecvState {members {RHeader0 RHeader1 RAddr RUser RData}} {width 3} {position {TLM3Api.bsv 551 56}}
Interface {TLM3Api::CFIFO#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["count"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {TLM3Api.bsv 879 11}}

Alias {TLM3CBusAdapter::TLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CBus#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 20 38}}
Alias {TLM3CBusAdapter::ModWithTLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(caddr_size, data_size)), HList::HNil), i)} {position {TLM3CBusAdapter.bsv 21 48}}
Alias {TLM3CBusAdapter::TLMCRAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CRAddr#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 22 40}}
TaggedUnion {CB::TokenRR#(type a, numeric type ln)} polymorphic {members {{{CB::TokenRequest#(a, ln)} Request} {{CB::TokenRange#(a, ln)} Range}}} {position {CB.bsv 22 25}}
Struct {CB::TokenRange#(type a, numeric type ln)} polymorphic {members {{a label} {Bit#(ln) token} {Bit#(ln) size}}} {position {CB.bsv 27 19}}
Struct {CB::TokenRequest#(type a, numeric type ln)} polymorphic {members {{a label} {Bit#(ln) size}}} {position {CB.bsv 31 19}}
Interface {CB::CompletionBuffer#(numeric type ln, type a, type b)} polymorphic {members {{interface {GetPut::Put#(CB::TokenRequest#(a, ln))} request {{(* ports = [] *)}}} {interface {GetPut::Get#(CB::TokenRange#(a, ln))} reserve {{(* ports = [] *)}}} {interface {GetPut::Put#(Tuple2#(Bit#(ln), b))} complete {{(* ports = [] *)}}} {interface GetPut::Get#(b) drain {{(* ports = [] *)}}}}} {position {CB.bsv 63 11}}
Interface {TLM3Reorder::TLMReorder#(numeric type m, numeric type ln, type req_t, type resp_t)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} in {}} {interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} out {}}}} {position {TLM3Reorder.bsv 21 11}}
Alias {TLM3Reorder::TLMReorderBuffer#(numeric type lm, numeric type ld, type req_t, type resp_t)} {TLM3Reorder::TLMReorder#(TExp#(ld), TMax#(8, TAdd#(lm, ld)), req_t, resp_t)} {position {TLM3Reorder.bsv 27 9}}
Enum TLM3Defines::TLMFamily {members {DEFAULT APB AHB AXI AXI4}} {width 3} {position {TLM3Defines.bsv 29 45}}
Alias TLM3Defines::TLMRequestStd {TLM3Defines::TLMRequest#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 31 36}}
Alias TLM3Defines::TLMResponseStd {TLM3Defines::TLMResponse#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 32 36}}
Enum TLM3Defines::TLMCommand {members {READ WRITE UNKNOWN}} {width 2} {position {TLM3Defines.bsv 34 53}}
Enum TLM3Defines::TLMMode {members {REGULAR DEBUG CONTROL UNKNOWN}} {width 2} {position {TLM3Defines.bsv 35 53}}
Enum TLM3Defines::TLMBurstMode {members {INCR WRAP CNST UNKNOWN}} {width 2} {position {TLM3Defines.bsv 36 53}}
Enum TLM3Defines::TLMStatus {members {SUCCESS ERROR EXOKAY UNKNOWN}} {width 2} {position {TLM3Defines.bsv 44 48}}
Enum TLM3Defines::TLMErrorCode {members {NONE SPLIT_CONTINUE RETRY SPLIT RW_ONLY UNMAPPED SLVERR DECERR}} {width 3} {position {TLM3Defines.bsv 54 17}}
Enum TLM3Defines::TLMLock {members {NORMAL EXCLUSIVE LOCKED RESERVED}} {width 2} {position {TLM3Defines.bsv 61 52}}
Alias TLM3Defines::TLMBurstLong UInt#(15) {position {TLM3Defines.bsv 64 19}}
Alias TLM3Defines::TLMQos Bit#(4) {position {TLM3Defines.bsv 65 18}}
Alias {TLM3Defines::TLMId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {TLM3Defines.bsv 67 42}}
Alias {TLM3Defines::TLMAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {TLM3Defines.bsv 68 42}}
Alias {TLM3Defines::TLMData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {TLM3Defines.bsv 69 42}}
Alias {TLM3Defines::TLMByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {TLM3Defines.bsv 70 42}}
Alias {TLM3Defines::TLMBLength#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} UInt#(length_size) {position {TLM3Defines.bsv 71 42}}
Alias {TLM3Defines::TLMUser#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(user_size) {position {TLM3Defines.bsv 72 42}}
Alias {TLM3Defines::TLMUserPort#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(user_size) {position {TLM3Defines.bsv 74 42}}
Enum TLM3Defines::TLMBSize {members {BITS8 BITS16 BITS32 BITS64 BITS128 BITS256 BITS512 BITS1024}} {width 3} {position {TLM3Defines.bsv 76 84}}
Enum TLM3Defines::TLMCache {members {NO_CACHE CACHE}} {width 1} {position {TLM3Defines.bsv 78 38}}
Enum TLM3Defines::TLMModify {members {NO_MODIFY MODIFY}} {width 1} {position {TLM3Defines.bsv 80 38}}
Enum TLM3Defines::TLMBuffer {members {NO_BUFFER BUFFER}} {width 1} {position {TLM3Defines.bsv 81 38}}
Enum TLM3Defines::TLMAllocate {members {NO_ALLOCATE ALLOCATE}} {width 1} {position {TLM3Defines.bsv 82 38}}
Enum TLM3Defines::TLMPrivilege {members {NORMAL PRIVILEGED}} {width 1} {position {TLM3Defines.bsv 84 35}}
Enum TLM3Defines::TLMSecurity {members {SECURE NON_SECURE}} {width 1} {position {TLM3Defines.bsv 85 35}}
Enum TLM3Defines::TLMAccess {members {DATA INST}} {width 1} {position {TLM3Defines.bsv 86 28}}
Enum TLM3Defines::TLMMark {members {LAST NOT_LAST OPEN}} {width 2} {position {TLM3Defines.bsv 87 38}}
Alias TLM3Defines::TLMRegion Bit#(4) {position {TLM3Defines.bsv 89 17}}
Struct {TLM3Defines::RequestDescriptor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMMode mode {width 2}} {Bit#(addr_size) addr} {Bit#(user_size) user_addr} {Bit#(4) region {width 4}} {Bit#(data_size) data} {UInt#(length_size) b_length} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {Bit#(4) prty {width 4}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(id_size) transaction_id} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMMark mark {width 2}} {Bool cntrl_flow {width 1}}}} {position {TLM3Defines.bsv 116 19}}
Struct {TLM3Defines::RequestData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 123 19}}
TaggedUnion {TLM3Defines::TLMRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {{TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size)} Data}}} {position {TLM3Defines.bsv 128 25}}
Struct {TLM3Defines::TLMResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {Bit#(data_size) data} {TLM3Defines::TLMStatus status {width 2}} {Bit#(user_size) user} {Bit#(4) prty {width 4}} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 138 19}}
Typeclass {TLM3Defines::TLMRequestTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMRequest} {{function a f(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMRequest}}} {instances {{TLM3Defines::TLMRequestTC#(AhbDefines::AhbXtorRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(BRAM::BRAMRequest#(Bit#(addr_size), Bit#(data_size)), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(BRAM::BRAMRequestBE#(Bit#(addr_size), Bit#(data_size), TDiv#(data_size, 8)), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 206 11}}
Typeclass {TLM3Defines::TLMResponseTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMResponse} {{function a f(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMResponse}}} {instances {{TLM3Defines::TLMResponseTC#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(Bit#(data_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 212 11}}
Interface {TLM3Defines::TLMSendIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(req) tx {}} {interface GetPut::Put#(resp) rx {}}}} {position {TLM3Defines.bsv 790 11}}
Interface {TLM3Defines::TLMRecvIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(resp) tx {}} {interface GetPut::Put#(req) rx {}}}} {position {TLM3Defines.bsv 795 11}}
Interface {TLM3Defines::TLMReadWriteSendIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 800 11}}
Interface {TLM3Defines::TLMReadWriteRecvIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMRecvIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 805 11}}
Interface {TLM3Defines::TLMTransformIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} in {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} out {}}}} {position {TLM3Defines.bsv 810 11}}
Typeclass {TLM3Defines::AddrMatch#(type addr_t, type ifc_t)} {members {{{function ifc_t f(function Bool x1(addr_t x1), ifc_t x2)} addAddrMatch}}} {position {TLM3Defines.bsv 844 11}}
TaggedUnion {TLM3Defines::TLMBEKind#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{void Calculate {width 0}} {{Bit#(TDiv#(data_size, 8))} Specify}}} {position {TLM3Defines.bsv 1045 25}}
Interface {TLM3Defines::SFIFO#(type a, type b)} polymorphic {members {{method {Action enq a {{(* ports = ["value"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {TLM3Defines.bsv 1087 11}}
Interface TLM3Defines::TCounter {members {{method {Action incr {} {{(* ports = [] *)}}}} {method {Action decr {} {{(* ports = [] *)}}}} {method {Bool isEq Integer {{(* ports = ["n"] *)}}}} {method {Action setNext {a Array#(Reg#(a))} {{(* ports = ["value", "as"] *)}}}} {method {Action set {a Array#(Reg#(a))} {{(* ports = ["value", "as"] *)}}}} {method {a getNext Array#(Reg#(a)) {{(* ports = ["as"] *)}}}} {method {a get Array#(Reg#(a)) {{(* ports = ["as"] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {TLM3Defines.bsv 1163 11}}
Struct {BusSwitch::BusSwitchPath#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) send_port} {Bit#(id_size) recv_port} {Bit#(id_size) send_id} {Bit#(id_size) recv_id}}} {position {BusSwitch.bsv 28 19}}
Interface {BusSwitch::BusSwitch#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action set_path {{BusSwitch::BusSwitchPath#(id_size, addr_size, data_size, length_size, user_size)}} {{(* ports = ["path"] *)}}}} {method {Bool done {} {{(* ports = [] *)}}}} {method {Action ack {} {{(* ports = [] *)}}}}}} {position {BusSwitch.bsv 38 11}}
Typeclass {TLM3BRAM::ToBRAMSeverBETC#(type a, type addr, type data, numeric type n)} {dependencies {{a determines (addr, data, n)}}} {members {{{function ClientServer::Server#(BRAM::BRAMRequestBE#(addr, data, n), data) f(a x1)} toBRAMServerBE}}} {instances {{TLM3BRAM::ToBRAMSeverBETC#(BRAM::BRAMServer#(addr, data), addr, data, n)} {TLM3BRAM::ToBRAMSeverBETC#(BRAM::BRAMServerBE#(addr, data, n), addr, data, n)}}} {position {TLM3BRAM.bsv 132 11}}
Alias {TLM3CBusAdapter::TLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CBus#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 20 38}}
Alias {TLM3CBusAdapter::ModWithTLMCBus#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(caddr_size, data_size)), HList::HNil), i)} {position {TLM3CBusAdapter.bsv 21 48}}
Alias {TLM3CBusAdapter::TLMCRAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size, numeric type caddr_size)} {CBus::CRAddr#(caddr_size, data_size)} {position {TLM3CBusAdapter.bsv 22 40}}
Typeclass {TLM3FlowControl::FlowPayload#(type a)} {members {{{function Bool f(a x1)} lastOne} {{function Bool f(a x1)} canStall}}} {instances {{TLM3FlowControl::FlowPayload#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size))} {TLM3FlowControl::FlowPayload#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size))}}} {position {TLM3FlowControl.bsv 17 11}}
Interface {TLM3FlowControl::TLMFlow#(type a)} polymorphic {members {{interface GetPut::Get#(a) tx {}} {interface GetPut::Put#(a) rx {}}}} {position {TLM3FlowControl.bsv 58 11}}
Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Alias {AhbDefines::LUInt#(numeric type m)} {UInt#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 29 35}}
Alias TLM3Api::TLMHeaderId Bit#(10) {position {TLM3Api.bsv 29 19}}
Struct TLM3Api::TLMRequestHeader {members {{UInt#(15) b_length {width 15}} {TLM3Api::TLMRequestParams params {width 36}}}} {width 51} {position {TLM3Api.bsv 33 19}}
Struct TLM3Api::TLMRequestParams {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(10) transaction_id {width 10}} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {Bit#(4) region {width 4}} {Bit#(4) qos {width 4}} {Bool cntrl_flow {width 1}} {Bool spec_byte_enable {width 1}}}} {width 36} {position {TLM3Api.bsv 57 19}}
Struct TLM3Api::TLMResponseHeader {members {{UInt#(15) b_length {width 15}} {TLM3Api::TLMResponseParams params {width 17}}}} {width 32} {position {TLM3Api.bsv 62 19}}
Struct TLM3Api::TLMResponseParams {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMStatus status {width 2}} {Bit#(10) transaction_id {width 10}} {TLM3Defines::TLMErrorCode error {width 3}}}} {width 17} {position {TLM3Api.bsv 68 19}}
Alias TLM3Api::Chunk Bit#(32) {position {TLM3Api.bsv 237 18}}
Interface {TLM3Api::ApiRecvIFC#(type req_t, type resp_t)} polymorphic {members {{interface {ClientServer::Server#(Bit#(32), Bit#(32))} scemi {}} {interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} out {}}}} {position {TLM3Api.bsv 248 11}}
Interface {TLM3Api::ApiSendIFC#(type req_t, type resp_t)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} in {}} {interface {ClientServer::Client#(Bit#(32), Bit#(32))} scemi {}}}} {position {TLM3Api.bsv 253 11}}
Enum TLM3Api::SendState {members {SHeader0 SHeader1 SAddrRead SAddrWrite SUserRead SUserWrite SData}} {width 3} {position {TLM3Api.bsv 262 88}}
Enum TLM3Api::RecvState {members {RHeader0 RHeader1 RAddr RUser RData}} {width 3} {position {TLM3Api.bsv 551 56}}
Interface {TLM3Api::CFIFO#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["count"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {TLM3Api.bsv 879 11}}
Enum TLM3Reduce::MD {members {Rd Wr RdOrWr}} {width 2} {position {TLM3Reduce.bsv 284 31}}
Alias TLM3Stream::DFLT 0 {position {TLM3Stream.bsv 20 11}}
Alias TLM3Stream::STRB 1 {position {TLM3Stream.bsv 21 11}}
Alias TLM3Stream::KEEP 2 {position {TLM3Stream.bsv 22 11}}
Alias TLM3Stream::KEEPSTRB 3 {position {TLM3Stream.bsv 23 11}}
Alias {TLM3Stream::TLMKeep#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TMul#(TMin#(1, TMax#(0, TSub#(TMax#(1, length_size), 1))), TDiv#(data_size, 8)))} {position {TLM3Stream.bsv 25 135}}
Alias {TLM3Stream::TLMStrb#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TMul#(TSub#(TMax#(length_size, TAdd#(TDiv#(length_size, 2), TDiv#(length_size, 2))), length_size), TDiv#(data_size, 8)))} {position {TLM3Stream.bsv 26 135}}
Struct {TLM3Stream::TLMTransfer#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(addr_size) dest} {Bit#(user_size) user} {Bit#(id_size) transaction_id} {{Bit#(TDiv#(data_size, 8))} keep} {{Bit#(TDiv#(data_size, 8))} strb} {Bool is_last {width 1}}}} {position {TLM3Stream.bsv 35 19}}
Typeclass {TLM3Stream::TLMTransferTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMTransfer} {{function a f(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMTransfer}}} {instances {{TLM3Stream::TLMTransferTC#(TLM3Stream::TLMTransfer#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Stream.bsv 59 11}}
Interface {TLM3Reorder::TLMReorder#(numeric type m, numeric type ln, type req_t, type resp_t)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} in {}} {interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} out {}}}} {position {TLM3Reorder.bsv 21 11}}
Alias {TLM3Reorder::TLMReorderBuffer#(numeric type lm, numeric type ld, type req_t, type resp_t)} {TLM3Reorder::TLMReorder#(TExp#(ld), TMax#(8, TAdd#(lm, ld)), req_t, resp_t)} {position {TLM3Reorder.bsv 27 9}}
Enum TLM3Defines::TLMFamily {members {DEFAULT APB AHB AXI AXI4}} {width 3} {position {TLM3Defines.bsv 29 45}}
Alias TLM3Defines::TLMRequestStd {TLM3Defines::TLMRequest#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 31 36}}
Alias TLM3Defines::TLMResponseStd {TLM3Defines::TLMResponse#(4, 32, 32, 8, 0)} {position {TLM3Defines.bsv 32 36}}
Enum TLM3Defines::TLMCommand {members {READ WRITE UNKNOWN}} {width 2} {position {TLM3Defines.bsv 34 53}}
Enum TLM3Defines::TLMMode {members {REGULAR DEBUG CONTROL UNKNOWN}} {width 2} {position {TLM3Defines.bsv 35 53}}
Enum TLM3Defines::TLMBurstMode {members {INCR WRAP CNST UNKNOWN}} {width 2} {position {TLM3Defines.bsv 36 53}}
Enum TLM3Defines::TLMStatus {members {SUCCESS ERROR EXOKAY UNKNOWN}} {width 2} {position {TLM3Defines.bsv 44 48}}
Enum TLM3Defines::TLMErrorCode {members {NONE SPLIT_CONTINUE RETRY SPLIT RW_ONLY UNMAPPED SLVERR DECERR}} {width 3} {position {TLM3Defines.bsv 54 17}}
Enum TLM3Defines::TLMLock {members {NORMAL EXCLUSIVE LOCKED RESERVED}} {width 2} {position {TLM3Defines.bsv 61 52}}
Alias TLM3Defines::TLMBurstLong UInt#(15) {position {TLM3Defines.bsv 64 19}}
Alias TLM3Defines::TLMQos Bit#(4) {position {TLM3Defines.bsv 65 18}}
Alias {TLM3Defines::TLMId#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(id_size) {position {TLM3Defines.bsv 67 42}}
Alias {TLM3Defines::TLMAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {TLM3Defines.bsv 68 42}}
Alias {TLM3Defines::TLMData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {TLM3Defines.bsv 69 42}}
Alias {TLM3Defines::TLMByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {TLM3Defines.bsv 70 42}}
Alias {TLM3Defines::TLMBLength#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} UInt#(length_size) {position {TLM3Defines.bsv 71 42}}
Alias {TLM3Defines::TLMUser#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(user_size) {position {TLM3Defines.bsv 72 42}}
Alias {TLM3Defines::TLMUserPort#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(user_size) {position {TLM3Defines.bsv 74 42}}
Enum TLM3Defines::TLMBSize {members {BITS8 BITS16 BITS32 BITS64 BITS128 BITS256 BITS512 BITS1024}} {width 3} {position {TLM3Defines.bsv 76 84}}
Enum TLM3Defines::TLMCache {members {NO_CACHE CACHE}} {width 1} {position {TLM3Defines.bsv 78 38}}
Enum TLM3Defines::TLMModify {members {NO_MODIFY MODIFY}} {width 1} {position {TLM3Defines.bsv 80 38}}
Enum TLM3Defines::TLMBuffer {members {NO_BUFFER BUFFER}} {width 1} {position {TLM3Defines.bsv 81 38}}
Enum TLM3Defines::TLMAllocate {members {NO_ALLOCATE ALLOCATE}} {width 1} {position {TLM3Defines.bsv 82 38}}
Enum TLM3Defines::TLMPrivilege {members {NORMAL PRIVILEGED}} {width 1} {position {TLM3Defines.bsv 84 35}}
Enum TLM3Defines::TLMSecurity {members {SECURE NON_SECURE}} {width 1} {position {TLM3Defines.bsv 85 35}}
Enum TLM3Defines::TLMAccess {members {DATA INST}} {width 1} {position {TLM3Defines.bsv 86 28}}
Enum TLM3Defines::TLMMark {members {LAST NOT_LAST OPEN}} {width 2} {position {TLM3Defines.bsv 87 38}}
Alias TLM3Defines::TLMRegion Bit#(4) {position {TLM3Defines.bsv 89 17}}
Struct {TLM3Defines::RequestDescriptor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {TLM3Defines::TLMMode mode {width 2}} {Bit#(addr_size) addr} {Bit#(user_size) user_addr} {Bit#(4) region {width 4}} {Bit#(data_size) data} {UInt#(length_size) b_length} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {TLM3Defines::TLMBurstMode burst_mode {width 2}} {TLM3Defines::TLMBSize b_size {width 3}} {Bit#(4) prty {width 4}} {TLM3Defines::TLMLock lock {width 2}} {Bit#(id_size) transaction_id} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMAllocate read_allocate {width 1}} {TLM3Defines::TLMAllocate write_allocate {width 1}} {TLM3Defines::TLMMark mark {width 2}} {Bool cntrl_flow {width 1}}}} {position {TLM3Defines.bsv 116 19}}
Struct {TLM3Defines::RequestData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{TLM3Defines::TLMBEKind#(id_size, addr_size, data_size, length_size, user_size)} byte_enable} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 123 19}}
TaggedUnion {TLM3Defines::TLMRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{TLM3Defines::RequestDescriptor#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {{TLM3Defines::RequestData#(id_size, addr_size, data_size, length_size, user_size)} Data}}} {position {TLM3Defines.bsv 128 25}}
Struct {TLM3Defines::TLMResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{TLM3Defines::TLMCommand command {width 2}} {Bit#(data_size) data} {TLM3Defines::TLMStatus status {width 2}} {Bit#(user_size) user} {Bit#(4) prty {width 4}} {Bit#(id_size) transaction_id} {Bool is_last {width 1}}}} {position {TLM3Defines.bsv 138 19}}
Typeclass {TLM3Defines::TLMRequestTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMRequest} {{function a f(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMRequest}}} {instances {{TLM3Defines::TLMRequestTC#(AhbDefines::AhbXtorRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(BRAM::BRAMRequest#(Bit#(addr_size), Bit#(data_size)), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(BRAM::BRAMRequestBE#(Bit#(addr_size), Bit#(data_size), TDiv#(data_size, 8)), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMRequestTC#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 206 11}}
Typeclass {TLM3Defines::TLMResponseTC#(type a, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {dependencies {{a determines (id_size, addr_size, data_size, length_size, user_size)}}} {members {{{function TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size) f(a x1)} toTLMResponse} {{function a f(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size) x1)} fromTLMResponse}}} {instances {{TLM3Defines::TLMResponseTC#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(Bit#(data_size), id_size, addr_size, data_size, length_size, user_size)} {TLM3Defines::TLMResponseTC#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size), id_size, addr_size, data_size, length_size, user_size)}}} {position {TLM3Defines.bsv 212 11}}
Interface {TLM3Defines::TLMSendIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(req) tx {}} {interface GetPut::Put#(resp) rx {}}}} {position {TLM3Defines.bsv 790 11}}
Interface {TLM3Defines::TLMRecvIFC#(type req, type resp)} polymorphic {members {{interface GetPut::Get#(resp) tx {}} {interface GetPut::Put#(req) rx {}}}} {position {TLM3Defines.bsv 795 11}}
Interface {TLM3Defines::TLMReadWriteSendIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 800 11}}
Interface {TLM3Defines::TLMReadWriteRecvIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} read {}} {interface {TLM3Defines::TLMRecvIFC#(req, resp)} write {}}}} {position {TLM3Defines.bsv 805 11}}
Interface {TLM3Defines::TLMTransformIFC#(type req, type resp)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req, resp)} in {}} {interface {TLM3Defines::TLMSendIFC#(req, resp)} out {}}}} {position {TLM3Defines.bsv 810 11}}
Typeclass {TLM3Defines::AddrMatch#(type addr_t, type ifc_t)} {members {{{function ifc_t f(function Bool x1(addr_t x1), ifc_t x2)} addAddrMatch}}} {position {TLM3Defines.bsv 844 11}}
TaggedUnion {TLM3Defines::TLMBEKind#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{void Calculate {width 0}} {{Bit#(TDiv#(data_size, 8))} Specify}}} {position {TLM3Defines.bsv 1045 25}}
Interface {TLM3Defines::SFIFO#(type a, type b)} polymorphic {members {{method {Action enq a {{(* ports = ["value"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {TLM3Defines.bsv 1087 11}}
Interface TLM3Defines::TCounter {members {{method {Action incr {} {{(* ports = [] *)}}}} {method {Action decr {} {{(* ports = [] *)}}}} {method {Bool isEq Integer {{(* ports = ["n"] *)}}}} {method {Action setNext {a Array#(Reg#(a))} {{(* ports = ["value", "as"] *)}}}} {method {Action set {a Array#(Reg#(a))} {{(* ports = ["value", "as"] *)}}}} {method {a getNext Array#(Reg#(a)) {{(* ports = ["as"] *)}}}} {method {a get Array#(Reg#(a)) {{(* ports = ["as"] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {TLM3Defines.bsv 1163 11}}
Typeclass {TLM3FlowControl::FlowPayload#(type a)} {members {{{function Bool f(a x1)} lastOne} {{function Bool f(a x1)} canStall}}} {instances {{TLM3FlowControl::FlowPayload#(TLM3Defines::TLMRequest#(id_size, addr_size, data_size, length_size, user_size))} {TLM3FlowControl::FlowPayload#(TLM3Defines::TLMResponse#(id_size, addr_size, data_size, length_size, user_size))}}} {position {TLM3FlowControl.bsv 17 11}}
Interface {TLM3FlowControl::TLMFlow#(type a)} polymorphic {members {{interface GetPut::Get#(a) tx {}} {interface GetPut::Put#(a) rx {}}}} {position {TLM3FlowControl.bsv 58 11}}
Enum TLM3Reduce::MD {members {Rd Wr RdOrWr}} {width 2} {position {TLM3Reduce.bsv 284 31}}

Interface {TokenBuffer::TokenBuffer#(numeric type m, numeric type ln, type a)} polymorphic {members {{method {Action store {{CB::TokenRange#(a, ln)}} {{(* ports = ["value"] *)}}}} {method {Action request {{CB::TokenRR#(a, ln)}} {{(* ports = ["value"] *)}}}} {method {ActionValue#(Bit#(ln)) get {} {{(* ports = [] *)}}}}}} {position {TokenBuffer.bsv 18 11}}

Typeclass {AxiExtend::Extendable#(type ifc_t, type ifc_ext_t)} {members {{{function a#(ifc_ext_t) f(UInt#(32) x1, ifc_t x2)   provisos (IsModule#(a, b))} extendIds}}} {instances {{AxiExtend::Extendable#(AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdFabricMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdFabricSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiRdSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrFabricMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrFabricSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrMaster#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))} {AxiExtend::Extendable#(AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size), AxiDefines::AxiWrSlave#(id_size_ext, addr_size, data_size, length_size, user_size))   provisos (Add#(id_size, x_size, id_size_ext))}}} {position {AxiExtend.bsv 18 11}}
Interface {AhbToAhbBridge::AhbToAhbBridge#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} slave {}} {interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} master {}}}} {position {AhbToAhbBridge.bsv 29 11}}

Interface {AhbSlave::AhbSlaveIFC#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {}} {interface {GetPut::Put#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} response {}} {interface {GetPut::Put#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} response_noready {}} {interface {ReadOnly#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size))} request {}} {interface ReadOnly#(Bit#(4)) hmaster {}} {interface ReadOnly#(Bool) readyin {}}}} {position {AhbSlave.bsv 30 11}}
Interface {AhbSlave::MFIFO#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["value"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bit#(0) first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {AhbSlave.bsv 550 11}}
Interface {AhbSlave::MFIFO2#(type a, type b)} polymorphic {members {{method {Action enq {a b} {{(* ports = ["v_a", "v_b"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {b first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {AhbSlave.bsv 639 11}}
Interface {AhbPC::AhbPC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action haddr Bit#(addr_size) {{(* ports = ["HADDR"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hwdata Bit#(data_size) {{(* ports = ["HWDATA"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hwrite AhbDefines::AhbWrite {{(* ports = ["HWRITE"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action htrans AhbDefines::AhbTransfer {{(* ports = ["HTRANS"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action hburst AhbDefines::AhbBurst {{(* ports = ["HBURST"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Action hsize TLM3Defines::TLMBSize {{(* ports = ["HSIZE"] *)} {(* result = "unused5" *)} {(* prefix = "" *)}}}} {method {Action hprot AhbDefines::AhbProt {{(* ports = ["HPROT"] *)} {(* result = "unused6" *)} {(* prefix = "" *)}}}} {method {Action hrdata Bit#(data_size) {{(* ports = ["HRDATA"] *)} {(* result = "unused7" *)} {(* prefix = "" *)}}}} {method {Action hready Bool {{(* ports = ["HREADY"] *)} {(* result = "unused8" *)} {(* prefix = "" *)}}}} {method {Action hreadyOUT Bool {{(* ports = ["HREADYOUT"] *)} {(* result = "unused9" *)} {(* prefix = "" *)}}}} {method {Action hresp AhbDefines::AhbResp {{(* ports = ["HRESP"] *)} {(* result = "unused10" *)} {(* prefix = "" *)}}}} {method {Action hCLKEN Bool {{(* ports = ["HCLKEN"] *)} {(* result = "unused11" *)} {(* prefix = "" *)}}}} {method {Action hgrantx Bool {{(* ports = ["HGRANTx"] *)} {(* result = "unused12" *)} {(* prefix = "" *)}}}} {method {Action hSELx Bool {{(* ports = ["HSELx"] *)} {(* result = "unused13" *)} {(* prefix = "" *)}}}} {method {Action hlockx Bool {{(* ports = ["HLOCKx"] *)} {(* result = "unused14" *)} {(* prefix = "" *)}}}} {method {Action hMASTLOCK Bool {{(* ports = ["HMASTLOCK"] *)} {(* result = "unused15" *)} {(* prefix = "" *)}}}}}} {position {AhbPC.bsv 212 11}}
Enum AhbPC::FVPropType {members {PROVE ASSUME COVER IGNORE}} {width 2} {position {AhbPC.bsv 258 45}}
Struct AhbPC::AhbPCPrms {members {{Bool enable_master {width 1}} {Bool enable_slave {width 1}} {Bool ignore_align {width 1}} {AhbPC::AhbPropTypes master {width 14}} {AhbPC::AhbPropTypes slave {width 14}}}} {position {AhbPC.bsv 265 19}}
Struct AhbPC::AhbPropTypes {members {{AhbPC::FVPropType err {width 2}} {AhbPC::FVPropType rec {width 2}} {AhbPC::FVPropType add {width 2}} {AhbPC::FVPropType cfg {width 2}} {AhbPC::FVPropType inf {width 2}} {AhbPC::FVPropType alt {width 2}} {AhbPC::FVPropType aux {width 2}}}} {width 14} {position {AhbPC.bsv 274 19}}
Interface Arbiter::ArbiterClient_IFC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Action lock {} {{(* ports = [] *)}}}} {method {Bool grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 11 11 {Library Arbiter}}}
Interface Arbiter::ArbiterRequest_IFC {members {{method {Bool request {} {{(* ports = [] *)}}}} {method {Bool lock {} {{(* ports = [] *)}}}} {method {Action grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 17 11 {Library Arbiter}}}
Interface {Arbiter::Arbiter_IFC#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {Bit#(TLog#(count)) grant_id {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 23 11 {Library Arbiter}}}
Typeclass {Arbiter::Arbitable#(type a)} {members {{{function b#(Arbiter::ArbiterRequest_IFC) f(a x1)   provisos (IsModule#(b, c))} mkArbiterRequest}}} {instances {Arbiter::Arbitable#(AhbDefines::AhbMasterArbiter) {Arbiter::Arbitable#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size))} Arbiter::Arbitable#(BusDefines::BusSend#(a))}} {position {%/Libraries/Arbiter.bsv 340 11 {Library Arbiter}}}
Interface AhbArbiterSupport::AhbMonitor {members {{method {Bool update {} {{(* ports = [] *)}}}} {method {Action hready_in Bool {{(* ports = ["value"] *)}}}} {method {Action hresp_in AhbDefines::AhbResp {{(* ports = ["value"] *)}}}}}} {position {AhbArbiterSupport.bsv 165 11}}
Interface Arbiter::ArbiterClient_IFC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Action lock {} {{(* ports = [] *)}}}} {method {Bool grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 11 11 {Library Arbiter}}}
Interface Arbiter::ArbiterRequest_IFC {members {{method {Bool request {} {{(* ports = [] *)}}}} {method {Bool lock {} {{(* ports = [] *)}}}} {method {Action grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 17 11 {Library Arbiter}}}
Interface {Arbiter::Arbiter_IFC#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {Bit#(TLog#(count)) grant_id {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 23 11 {Library Arbiter}}}
Typeclass {Arbiter::Arbitable#(type a)} {members {{{function b#(Arbiter::ArbiterRequest_IFC) f(a x1)   provisos (IsModule#(b, c))} mkArbiterRequest}}} {instances {Arbiter::Arbitable#(AhbDefines::AhbMasterArbiter) {Arbiter::Arbitable#(AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiRdBusMaster#(id_size, addr_size, data_size, length_size, user_size))} {Arbiter::Arbitable#(AxiDefines::AxiWrBusMaster#(id_size, addr_size, data_size, length_size, user_size))} Arbiter::Arbitable#(BusDefines::BusSend#(a))}} {position {%/Libraries/Arbiter.bsv 340 11 {Library Arbiter}}}
Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Alias {AhbDefines::LUInt#(numeric type m)} {UInt#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 29 35}}
Alias {AhbDefines::AhbAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {AhbDefines.bsv 31 42}}
Alias {AhbDefines::AhbData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {AhbDefines.bsv 32 42}}
Alias {AhbDefines::AhbLength#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} UInt#(length_size) {position {AhbDefines.bsv 33 42}}
Enum AhbDefines::AhbWrite {members {READ WRITE}} {width 1} {position {AhbDefines.bsv 35 30}}
Enum AhbDefines::AhbResp {members {OKAY ERROR RETRY SPLIT}} {width 2} {position {AhbDefines.bsv 36 44}}
Enum AhbDefines::AhbTransfer {members {IDLE BUSY NONSEQ SEQ}} {width 2} {position {AhbDefines.bsv 37 42}}
Alias AhbDefines::AhbSize TLM3Defines::TLMBSize {position {AhbDefines.bsv 39 18}}
Enum AhbDefines::AhbBurst {members {SINGLE INCR WRAP4 INCR4 WRAP8 INCR8 WRAP16 INCR16}} {width 3} {position {AhbDefines.bsv 40 75}}
Struct AhbDefines::AhbProt {members {{TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMAccess access {width 1}}}} {width 4} {position {AhbDefines.bsv 48 19}}
Alias AhbDefines::AhbSplit Bit#(4) {position {AhbDefines.bsv 50 19}}
Alias AhbDefines::AhbSplitOneHot OInt::OInt#(16) {position {AhbDefines.bsv 51 19}}
Struct {AhbDefines::AhbCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbWrite command {width 1}} {TLM3Defines::TLMBSize size {width 3}} {AhbDefines::AhbBurst burst {width 3}} {AhbDefines::AhbTransfer transfer {width 2}} {AhbDefines::AhbProt prot {width 4}} {Bit#(addr_size) addr}}} {position {AhbDefines.bsv 60 19}}
Struct {AhbDefines::AhbRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)} ctrl} {Bit#(data_size) data}}} {position {AhbDefines.bsv 65 19}}
Struct {AhbDefines::AhbResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbResp status {width 2}} {Bit#(data_size) data} {Maybe#(AhbDefines::AhbWrite) command {width 2}}}} {position {AhbDefines.bsv 71 19}}
Struct {AhbDefines::AhbMastCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbWrite command {width 1}} {TLM3Defines::TLMBSize size {width 3}} {AhbDefines::AhbBurst burst {width 3}} {AhbDefines::AhbTransfer transfer {width 2}} {AhbDefines::AhbProt prot {width 4}} {Bit#(addr_size) addr} {Bit#(4) mast {width 4}}}} {position {AhbDefines.bsv 82 19}}
Interface {AhbDefines::AhbMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) haddr {} {{(* ports = [] *)} {(* result = "HADDR" *)}}}} {method {Bit#(data_size) hwdata {} {{(* ports = [] *)} {(* result = "HWDATA" *)}}}} {method {AhbDefines::AhbWrite hwrite {} {{(* ports = [] *)} {(* result = "HWRITE" *)}}}} {method {AhbDefines::AhbTransfer htrans {} {{(* ports = [] *)} {(* result = "HTRANS" *)}}}} {method {AhbDefines::AhbBurst hburst {} {{(* ports = [] *)} {(* result = "HBURST" *)}}}} {method {TLM3Defines::TLMBSize hsize {} {{(* ports = [] *)} {(* result = "HSIZE" *)}}}} {method {AhbDefines::AhbProt hprot {} {{(* ports = [] *)} {(* result = "HPROT" *)}}}} {method {Action hrdata Bit#(data_size) {{(* ports = ["HRDATA"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hready Bool {{(* ports = ["HREADY"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hresp AhbDefines::AhbResp {{(* ports = ["HRESP"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 112 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action haddr Bit#(addr_size) {{(* ports = ["HADDR"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hwdata Bit#(data_size) {{(* ports = ["HWDATA"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hwrite AhbDefines::AhbWrite {{(* ports = ["HWRITE"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action htrans AhbDefines::AhbTransfer {{(* ports = ["HTRANS"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action hburst AhbDefines::AhbBurst {{(* ports = ["HBURST"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Action hsize TLM3Defines::TLMBSize {{(* ports = ["HSIZE"] *)} {(* result = "unused5" *)} {(* prefix = "" *)}}}} {method {Action hprot AhbDefines::AhbProt {{(* ports = ["HPROT"] *)} {(* result = "unused6" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) hrdata {} {{(* ports = [] *)} {(* result = "HRDATA" *)}}}} {method {Bool hready {} {{(* ports = [] *)} {(* result = "HREADY" *)}}}} {method {AhbDefines::AhbResp hresp {} {{(* ports = [] *)} {(* result = "HRESP" *)}}}}}} {position {AhbDefines.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action haddr Bit#(addr_size) {{(* ports = ["HADDR"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hwdata Bit#(data_size) {{(* ports = ["HWDATA"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hwrite AhbDefines::AhbWrite {{(* ports = ["HWRITE"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action htrans AhbDefines::AhbTransfer {{(* ports = ["HTRANS"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action hburst AhbDefines::AhbBurst {{(* ports = ["HBURST"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Action hsize TLM3Defines::TLMBSize {{(* ports = ["HSIZE"] *)} {(* result = "unused5" *)} {(* prefix = "" *)}}}} {method {Action hprot AhbDefines::AhbProt {{(* ports = ["HPROT"] *)} {(* result = "unused6" *)} {(* prefix = "" *)}}}} {method {Action hreadyin Bool {{(* ports = ["HREADY"] *)} {(* result = "unused7" *)} {(* prefix = "" *)}}}} {method {Action hmast Bit#(4) {{(* ports = ["HMASTER"] *)} {(* result = "unused8" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) hrdata {} {{(* ports = [] *)} {(* result = "HRDATA" *)}}}} {method {Bool hready {} {{(* ports = [] *)} {(* result = "HREADYOUT" *)}}}} {method {AhbDefines::AhbResp hresp {} {{(* ports = [] *)} {(* result = "HRESP" *)}}}} {method {Bit#(4) hsplit {} {{(* ports = [] *)} {(* result = "HSPLIT" *)}}}}}} {position {AhbDefines.bsv 171 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) haddr {} {{(* ports = [] *)} {(* result = "HADDR" *)}}}} {method {Bit#(data_size) hwdata {} {{(* ports = [] *)} {(* result = "HWDATA" *)}}}} {method {AhbDefines::AhbWrite hwrite {} {{(* ports = [] *)} {(* result = "HWRITE" *)}}}} {method {AhbDefines::AhbTransfer htrans {} {{(* ports = [] *)} {(* result = "HTRANS" *)}}}} {method {AhbDefines::AhbBurst hburst {} {{(* ports = [] *)} {(* result = "HBURST" *)}}}} {method {TLM3Defines::TLMBSize hsize {} {{(* ports = [] *)} {(* result = "HSIZE" *)}}}} {method {AhbDefines::AhbProt hprot {} {{(* ports = [] *)} {(* result = "HPROT" *)}}}} {method {Bool hreadyin {} {{(* ports = [] *)} {(* result = "HREADY" *)}}}} {method {Bit#(4) hmast {} {{(* ports = [] *)} {(* result = "HMAST" *)}}}} {method {Action hrdata Bit#(data_size) {{(* ports = ["HRDATA"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hready Bool {{(* ports = ["HREADYOUT"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hresp AhbDefines::AhbResp {{(* ports = ["HRESP"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action hsplit Bit#(4) {{(* ports = ["HSPLIT"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 206 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbSlaveSelector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action select Bool {{(* ports = ["HSEL"] *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 244 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface AhbDefines::AhbSlaveSelectorDual {members {{method {Bool select {} {{(* ports = [] *)} {(* result = "HSEL" *)}}}}}} {position {AhbDefines.bsv 250 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface AhbDefines::AhbMasterArbiter {members {{method {Bool hbusreq {} {{(* ports = [] *)} {(* result = "HBUSREQ" *)}}}} {method {Bool hlock {} {{(* ports = [] *)} {(* result = "HLOCK" *)}}}} {method {Action hgrant Bool {{(* ports = ["HGRANT"] *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 256 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface AhbDefines::AhbMasterArbiterDual {members {{method {Action hbusreq Bool {{(* ports = ["HBUSREQ"] *)} {(* result = "unused7" *)} {(* prefix = "" *)}}}} {method {Action hlock Bool {{(* ports = ["HLOCK"] *)} {(* result = "unused8" *)} {(* prefix = "" *)}}}} {method {Bool hgrant {} {{(* ports = [] *)} {(* result = "HGRANT" *)}}}}}} {position {AhbDefines.bsv 266 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbXtorMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface AhbDefines::AhbMasterArbiter arbiter {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 279 11}}
Interface {AhbDefines::AhbXtorSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface {AhbDefines::AhbSlaveSelector#(id_size, addr_size, data_size, length_size, user_size)} selector {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 286 11}}
Interface {AhbDefines::AhbXtorSlaveWM#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface {AhbDefines::AhbSlaveSelector#(id_size, addr_size, data_size, length_size, user_size)} selector {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {AhbDefines.bsv 320 11}}
Interface {AhbDefines::AhbXtorMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbMasterDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface AhbDefines::AhbMasterArbiterDual arbiter {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 332 11}}
Interface {AhbDefines::AhbXtorSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface AhbDefines::AhbSlaveSelectorDual selector {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 339 11}}
Interface {AhbDefines::AhbXtorMasterConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} master {}} {interface {AhbDefines::AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {AhbDefines.bsv 373 11}}
Interface {AhbDefines::AhbXtorSlaveConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} slave {}} {interface {AhbDefines::AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {AhbDefines.bsv 378 11}}
Interface {AhbDefines::AhbBus#(numeric type m, numeric type s, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {{Vector::Vector#(m, AhbDefines::AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size))} masters {} {}}} {method {{Vector::Vector#(s, AhbDefines::AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))} slaves {} {}}}}} {position {AhbDefines.bsv 383 11}}
Interface {AhbDefines::AhbMasterXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 392 11}}
Interface {AhbDefines::AhbSlaveXActorWM#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 398 11}}
Interface {AhbDefines::AhbSlaveXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 404 11}}
Interface {AhbDefines::AhbArbiter#(numeric type count, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {{Maybe#(Bit#(TLog#(TAdd#(count, 1))))} hmaster {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {interface AhbDefines::AhbResponseHandler handler {}}}} {position {AhbDefines.bsv 851 11}}
Interface AhbDefines::AhbResponseHandler {members {{method {Action hready_in Bool {{(* ports = ["value"] *)}}}} {method {Action hresp_in AhbDefines::AhbResp {{(* ports = ["value"] *)}}}} {method {Bool hready {} {{(* ports = [] *)}}}} {method {AhbDefines::AhbResp hresp {} {{(* ports = [] *)}}}}}} {position {AhbDefines.bsv 858 11}}
Interface {AhbDefines::AhbSlaveMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {AhbDefines::AhbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {AhbDefines.bsv 899 11}}
Interface {AhbDefines::AhbMasterMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {AhbDefines::AhbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {AhbDefines.bsv 904 11}}
Interface {AhbDefines::AhbInfo#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bool update {} {{(* ports = [] *)}}}}}} {position {AhbDefines.bsv 910 11}} {attributes {{(* always_ready  *)}}}
Typeclass {ApbDefines::Convert#(type a, type b)} {members {{{function b f(a x1)} convert}}} {instances {{ApbDefines::Convert#(ApbDefines::ApbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size))} {ApbDefines::Convert#(ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {position {ApbDefines.bsv 546 11}}
Struct {AhbDefines::AhbTbCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbWrite command {width 1}} {TLM3Defines::TLMBSize size {width 3}} {AhbDefines::AhbBurst burst {width 3}} {AhbDefines::AhbTransfer transfer {width 2}} {UInt#(length_size) length} {AhbDefines::AhbProt prot {width 4}} {Bit#(addr_size) addr}}} {position {AhbDefines.bsv 978 19}}
Struct {AhbDefines::AhbTbRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size)} ctrl} {Bit#(data_size) data}}} {position {AhbDefines.bsv 1003 19}}
TaggedUnion {AhbDefines::AhbXtorRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{AhbDefines::AhbTbRequest#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {Bit#(data_size) Data}}} {position {AhbDefines.bsv 1014 25}}
Alias {AhbDefines::AhbXtorResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size)} {position {AhbDefines.bsv 1030 32}}
Interface AhbArbiterSupport::AhbMonitor {members {{method {Bool update {} {{(* ports = [] *)}}}} {method {Action hready_in Bool {{(* ports = ["value"] *)}}}} {method {Action hresp_in AhbDefines::AhbResp {{(* ports = ["value"] *)}}}}}} {position {AhbArbiterSupport.bsv 165 11}}
Interface {AhbMaster::GetPut#(type p, type g)} polymorphic {members {{method {ActionValue#(g) getput p {{(* ports = ["value"] *)}}}}}} {position {AhbMaster.bsv 31 11}}
Interface {AhbMaster::AhbMasterIFC#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {}} {interface ReadOnly#(AhbDefines::AhbResp) resp_current {}} {interface {AhbMaster::GetPut#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size), AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} obj {}}}} {position {AhbMaster.bsv 35 11}}
Enum AhbMaster::EBTMode {members {RUN REDO_EBT REDO_RETRY WIND_DOWN}} {width 2} {position {AhbMaster.bsv 42 53}}
Interface {AhbPC::AhbPC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action haddr Bit#(addr_size) {{(* ports = ["HADDR"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hwdata Bit#(data_size) {{(* ports = ["HWDATA"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hwrite AhbDefines::AhbWrite {{(* ports = ["HWRITE"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action htrans AhbDefines::AhbTransfer {{(* ports = ["HTRANS"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action hburst AhbDefines::AhbBurst {{(* ports = ["HBURST"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Action hsize TLM3Defines::TLMBSize {{(* ports = ["HSIZE"] *)} {(* result = "unused5" *)} {(* prefix = "" *)}}}} {method {Action hprot AhbDefines::AhbProt {{(* ports = ["HPROT"] *)} {(* result = "unused6" *)} {(* prefix = "" *)}}}} {method {Action hrdata Bit#(data_size) {{(* ports = ["HRDATA"] *)} {(* result = "unused7" *)} {(* prefix = "" *)}}}} {method {Action hready Bool {{(* ports = ["HREADY"] *)} {(* result = "unused8" *)} {(* prefix = "" *)}}}} {method {Action hreadyOUT Bool {{(* ports = ["HREADYOUT"] *)} {(* result = "unused9" *)} {(* prefix = "" *)}}}} {method {Action hresp AhbDefines::AhbResp {{(* ports = ["HRESP"] *)} {(* result = "unused10" *)} {(* prefix = "" *)}}}} {method {Action hCLKEN Bool {{(* ports = ["HCLKEN"] *)} {(* result = "unused11" *)} {(* prefix = "" *)}}}} {method {Action hgrantx Bool {{(* ports = ["HGRANTx"] *)} {(* result = "unused12" *)} {(* prefix = "" *)}}}} {method {Action hSELx Bool {{(* ports = ["HSELx"] *)} {(* result = "unused13" *)} {(* prefix = "" *)}}}} {method {Action hlockx Bool {{(* ports = ["HLOCKx"] *)} {(* result = "unused14" *)} {(* prefix = "" *)}}}} {method {Action hMASTLOCK Bool {{(* ports = ["HMASTLOCK"] *)} {(* result = "unused15" *)} {(* prefix = "" *)}}}}}} {position {AhbPC.bsv 212 11}}
Enum AhbPC::FVPropType {members {PROVE ASSUME COVER IGNORE}} {width 2} {position {AhbPC.bsv 258 45}}
Struct AhbPC::AhbPCPrms {members {{Bool enable_master {width 1}} {Bool enable_slave {width 1}} {Bool ignore_align {width 1}} {AhbPC::AhbPropTypes master {width 14}} {AhbPC::AhbPropTypes slave {width 14}}}} {position {AhbPC.bsv 265 19}}
Struct AhbPC::AhbPropTypes {members {{AhbPC::FVPropType err {width 2}} {AhbPC::FVPropType rec {width 2}} {AhbPC::FVPropType add {width 2}} {AhbPC::FVPropType cfg {width 2}} {AhbPC::FVPropType inf {width 2}} {AhbPC::FVPropType alt {width 2}} {AhbPC::FVPropType aux {width 2}}}} {width 14} {position {AhbPC.bsv 274 19}}
Interface {AhbSlave::AhbSlaveIFC#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {}} {interface {GetPut::Put#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} response {}} {interface {GetPut::Put#(AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} response_noready {}} {interface {ReadOnly#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size))} request {}} {interface ReadOnly#(Bit#(4)) hmaster {}} {interface ReadOnly#(Bool) readyin {}}}} {position {AhbSlave.bsv 30 11}}
Interface {AhbSlave::MFIFO#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["value"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bit#(0) first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {AhbSlave.bsv 550 11}}
Interface {AhbSlave::MFIFO2#(type a, type b)} polymorphic {members {{method {Action enq {a b} {{(* ports = ["v_a", "v_b"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {b first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {AhbSlave.bsv 639 11}}
Interface {AhbToAhbBridge::AhbToAhbBridge#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} slave {}} {interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} master {}}}} {position {AhbToAhbBridge.bsv 29 11}}
Interface {AhbMaster::GetPut#(type p, type g)} polymorphic {members {{method {ActionValue#(g) getput p {{(* ports = ["value"] *)}}}}}} {position {AhbMaster.bsv 31 11}}
Interface {AhbMaster::AhbMasterIFC#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {}} {interface ReadOnly#(AhbDefines::AhbResp) resp_current {}} {interface {AhbMaster::GetPut#(AhbDefines::AhbRequest#(id_size, addr_size, data_size, length_size, user_size), AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size))} obj {}}}} {position {AhbMaster.bsv 35 11}}
Enum AhbMaster::EBTMode {members {RUN REDO_EBT REDO_RETRY WIND_DOWN}} {width 2} {position {AhbMaster.bsv 42 53}}
Interface AhbArbiterSupport::AhbMonitor {members {{method {Bool update {} {{(* ports = [] *)}}}} {method {Action hready_in Bool {{(* ports = ["value"] *)}}}} {method {Action hresp_in AhbDefines::AhbResp {{(* ports = ["value"] *)}}}}}} {position {AhbArbiterSupport.bsv 165 11}}
Alias {AhbDefines::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 28 35}}
Alias {AhbDefines::LUInt#(numeric type m)} {UInt#(TLog#(TAdd#(m, 1)))} {position {AhbDefines.bsv 29 35}}
Alias {AhbDefines::AhbAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {AhbDefines.bsv 31 42}}
Alias {AhbDefines::AhbData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {AhbDefines.bsv 32 42}}
Alias {AhbDefines::AhbLength#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} UInt#(length_size) {position {AhbDefines.bsv 33 42}}
Enum AhbDefines::AhbWrite {members {READ WRITE}} {width 1} {position {AhbDefines.bsv 35 30}}
Enum AhbDefines::AhbResp {members {OKAY ERROR RETRY SPLIT}} {width 2} {position {AhbDefines.bsv 36 44}}
Enum AhbDefines::AhbTransfer {members {IDLE BUSY NONSEQ SEQ}} {width 2} {position {AhbDefines.bsv 37 42}}
Alias AhbDefines::AhbSize TLM3Defines::TLMBSize {position {AhbDefines.bsv 39 18}}
Enum AhbDefines::AhbBurst {members {SINGLE INCR WRAP4 INCR4 WRAP8 INCR8 WRAP16 INCR16}} {width 3} {position {AhbDefines.bsv 40 75}}
Struct AhbDefines::AhbProt {members {{TLM3Defines::TLMCache cache {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}} {TLM3Defines::TLMPrivilege privilege {width 1}} {TLM3Defines::TLMAccess access {width 1}}}} {width 4} {position {AhbDefines.bsv 48 19}}
Alias AhbDefines::AhbSplit Bit#(4) {position {AhbDefines.bsv 50 19}}
Alias AhbDefines::AhbSplitOneHot OInt::OInt#(16) {position {AhbDefines.bsv 51 19}}
Struct {AhbDefines::AhbCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbWrite command {width 1}} {TLM3Defines::TLMBSize size {width 3}} {AhbDefines::AhbBurst burst {width 3}} {AhbDefines::AhbTransfer transfer {width 2}} {AhbDefines::AhbProt prot {width 4}} {Bit#(addr_size) addr}}} {position {AhbDefines.bsv 60 19}}
Struct {AhbDefines::AhbRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{AhbDefines::AhbCtrl#(id_size, addr_size, data_size, length_size, user_size)} ctrl} {Bit#(data_size) data}}} {position {AhbDefines.bsv 65 19}}
Struct {AhbDefines::AhbResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbResp status {width 2}} {Bit#(data_size) data} {Maybe#(AhbDefines::AhbWrite) command {width 2}}}} {position {AhbDefines.bsv 71 19}}
Struct {AhbDefines::AhbMastCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbWrite command {width 1}} {TLM3Defines::TLMBSize size {width 3}} {AhbDefines::AhbBurst burst {width 3}} {AhbDefines::AhbTransfer transfer {width 2}} {AhbDefines::AhbProt prot {width 4}} {Bit#(addr_size) addr} {Bit#(4) mast {width 4}}}} {position {AhbDefines.bsv 82 19}}
Interface {AhbDefines::AhbMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) haddr {} {{(* ports = [] *)} {(* result = "HADDR" *)}}}} {method {Bit#(data_size) hwdata {} {{(* ports = [] *)} {(* result = "HWDATA" *)}}}} {method {AhbDefines::AhbWrite hwrite {} {{(* ports = [] *)} {(* result = "HWRITE" *)}}}} {method {AhbDefines::AhbTransfer htrans {} {{(* ports = [] *)} {(* result = "HTRANS" *)}}}} {method {AhbDefines::AhbBurst hburst {} {{(* ports = [] *)} {(* result = "HBURST" *)}}}} {method {TLM3Defines::TLMBSize hsize {} {{(* ports = [] *)} {(* result = "HSIZE" *)}}}} {method {AhbDefines::AhbProt hprot {} {{(* ports = [] *)} {(* result = "HPROT" *)}}}} {method {Action hrdata Bit#(data_size) {{(* ports = ["HRDATA"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hready Bool {{(* ports = ["HREADY"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hresp AhbDefines::AhbResp {{(* ports = ["HRESP"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 112 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action haddr Bit#(addr_size) {{(* ports = ["HADDR"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hwdata Bit#(data_size) {{(* ports = ["HWDATA"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hwrite AhbDefines::AhbWrite {{(* ports = ["HWRITE"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action htrans AhbDefines::AhbTransfer {{(* ports = ["HTRANS"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action hburst AhbDefines::AhbBurst {{(* ports = ["HBURST"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Action hsize TLM3Defines::TLMBSize {{(* ports = ["HSIZE"] *)} {(* result = "unused5" *)} {(* prefix = "" *)}}}} {method {Action hprot AhbDefines::AhbProt {{(* ports = ["HPROT"] *)} {(* result = "unused6" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) hrdata {} {{(* ports = [] *)} {(* result = "HRDATA" *)}}}} {method {Bool hready {} {{(* ports = [] *)} {(* result = "HREADY" *)}}}} {method {AhbDefines::AhbResp hresp {} {{(* ports = [] *)} {(* result = "HRESP" *)}}}}}} {position {AhbDefines.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action haddr Bit#(addr_size) {{(* ports = ["HADDR"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hwdata Bit#(data_size) {{(* ports = ["HWDATA"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hwrite AhbDefines::AhbWrite {{(* ports = ["HWRITE"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action htrans AhbDefines::AhbTransfer {{(* ports = ["HTRANS"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action hburst AhbDefines::AhbBurst {{(* ports = ["HBURST"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Action hsize TLM3Defines::TLMBSize {{(* ports = ["HSIZE"] *)} {(* result = "unused5" *)} {(* prefix = "" *)}}}} {method {Action hprot AhbDefines::AhbProt {{(* ports = ["HPROT"] *)} {(* result = "unused6" *)} {(* prefix = "" *)}}}} {method {Action hreadyin Bool {{(* ports = ["HREADY"] *)} {(* result = "unused7" *)} {(* prefix = "" *)}}}} {method {Action hmast Bit#(4) {{(* ports = ["HMASTER"] *)} {(* result = "unused8" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) hrdata {} {{(* ports = [] *)} {(* result = "HRDATA" *)}}}} {method {Bool hready {} {{(* ports = [] *)} {(* result = "HREADYOUT" *)}}}} {method {AhbDefines::AhbResp hresp {} {{(* ports = [] *)} {(* result = "HRESP" *)}}}} {method {Bit#(4) hsplit {} {{(* ports = [] *)} {(* result = "HSPLIT" *)}}}}}} {position {AhbDefines.bsv 171 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) haddr {} {{(* ports = [] *)} {(* result = "HADDR" *)}}}} {method {Bit#(data_size) hwdata {} {{(* ports = [] *)} {(* result = "HWDATA" *)}}}} {method {AhbDefines::AhbWrite hwrite {} {{(* ports = [] *)} {(* result = "HWRITE" *)}}}} {method {AhbDefines::AhbTransfer htrans {} {{(* ports = [] *)} {(* result = "HTRANS" *)}}}} {method {AhbDefines::AhbBurst hburst {} {{(* ports = [] *)} {(* result = "HBURST" *)}}}} {method {TLM3Defines::TLMBSize hsize {} {{(* ports = [] *)} {(* result = "HSIZE" *)}}}} {method {AhbDefines::AhbProt hprot {} {{(* ports = [] *)} {(* result = "HPROT" *)}}}} {method {Bool hreadyin {} {{(* ports = [] *)} {(* result = "HREADY" *)}}}} {method {Bit#(4) hmast {} {{(* ports = [] *)} {(* result = "HMAST" *)}}}} {method {Action hrdata Bit#(data_size) {{(* ports = ["HRDATA"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action hready Bool {{(* ports = ["HREADYOUT"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action hresp AhbDefines::AhbResp {{(* ports = ["HRESP"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action hsplit Bit#(4) {{(* ports = ["HSPLIT"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 206 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbSlaveSelector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action select Bool {{(* ports = ["HSEL"] *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 244 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface AhbDefines::AhbSlaveSelectorDual {members {{method {Bool select {} {{(* ports = [] *)} {(* result = "HSEL" *)}}}}}} {position {AhbDefines.bsv 250 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface AhbDefines::AhbMasterArbiter {members {{method {Bool hbusreq {} {{(* ports = [] *)} {(* result = "HBUSREQ" *)}}}} {method {Bool hlock {} {{(* ports = [] *)} {(* result = "HLOCK" *)}}}} {method {Action hgrant Bool {{(* ports = ["HGRANT"] *)} {(* prefix = "" *)}}}}}} {position {AhbDefines.bsv 256 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface AhbDefines::AhbMasterArbiterDual {members {{method {Action hbusreq Bool {{(* ports = ["HBUSREQ"] *)} {(* result = "unused7" *)} {(* prefix = "" *)}}}} {method {Action hlock Bool {{(* ports = ["HLOCK"] *)} {(* result = "unused8" *)} {(* prefix = "" *)}}}} {method {Bool hgrant {} {{(* ports = [] *)} {(* result = "HGRANT" *)}}}}}} {position {AhbDefines.bsv 266 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AhbDefines::AhbXtorMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface AhbDefines::AhbMasterArbiter arbiter {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 279 11}}
Interface {AhbDefines::AhbXtorSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface {AhbDefines::AhbSlaveSelector#(id_size, addr_size, data_size, length_size, user_size)} selector {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 286 11}}
Interface {AhbDefines::AhbXtorSlaveWM#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface {AhbDefines::AhbSlaveSelector#(id_size, addr_size, data_size, length_size, user_size)} selector {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {AhbDefines.bsv 320 11}}
Interface {AhbDefines::AhbXtorMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbMasterDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface AhbDefines::AhbMasterArbiterDual arbiter {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 332 11}}
Interface {AhbDefines::AhbXtorSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {interface AhbDefines::AhbSlaveSelectorDual selector {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 339 11}}
Interface {AhbDefines::AhbXtorMasterConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} master {}} {interface {AhbDefines::AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {AhbDefines.bsv 373 11}}
Interface {AhbDefines::AhbXtorSlaveConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} slave {}} {interface {AhbDefines::AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {AhbDefines.bsv 378 11}}
Interface {AhbDefines::AhbBus#(numeric type m, numeric type s, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {{Vector::Vector#(m, AhbDefines::AhbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size))} masters {} {}}} {method {{Vector::Vector#(s, AhbDefines::AhbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))} slaves {} {}}}}} {position {AhbDefines.bsv 383 11}}
Interface {AhbDefines::AhbMasterXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 392 11}}
Interface {AhbDefines::AhbSlaveXActorWM#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AhbDefines::AhbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 398 11}}
Interface {AhbDefines::AhbSlaveXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {AhbDefines.bsv 404 11}}
Interface {AhbDefines::AhbArbiter#(numeric type count, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {{Maybe#(Bit#(TLog#(TAdd#(count, 1))))} hmaster {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {interface AhbDefines::AhbResponseHandler handler {}}}} {position {AhbDefines.bsv 851 11}}
Interface AhbDefines::AhbResponseHandler {members {{method {Action hready_in Bool {{(* ports = ["value"] *)}}}} {method {Action hresp_in AhbDefines::AhbResp {{(* ports = ["value"] *)}}}} {method {Bool hready {} {{(* ports = [] *)}}}} {method {AhbDefines::AhbResp hresp {} {{(* ports = [] *)}}}}}} {position {AhbDefines.bsv 858 11}}
Interface {AhbDefines::AhbSlaveMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {AhbDefines::AhbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {AhbDefines.bsv 899 11}}
Interface {AhbDefines::AhbMasterMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {AhbDefines::AhbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {AhbDefines::AhbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {AhbDefines.bsv 904 11}}
Interface {AhbDefines::AhbInfo#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bool update {} {{(* ports = [] *)}}}}}} {position {AhbDefines.bsv 910 11}} {attributes {{(* always_ready  *)}}}
Typeclass {ApbDefines::Convert#(type a, type b)} {members {{{function b f(a x1)} convert}}} {instances {{ApbDefines::Convert#(ApbDefines::ApbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size))} {ApbDefines::Convert#(ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {position {ApbDefines.bsv 546 11}}
Struct {AhbDefines::AhbTbCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AhbDefines::AhbWrite command {width 1}} {TLM3Defines::TLMBSize size {width 3}} {AhbDefines::AhbBurst burst {width 3}} {AhbDefines::AhbTransfer transfer {width 2}} {UInt#(length_size) length} {AhbDefines::AhbProt prot {width 4}} {Bit#(addr_size) addr}}} {position {AhbDefines.bsv 978 19}}
Struct {AhbDefines::AhbTbRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{AhbDefines::AhbTbCtrl#(id_size, addr_size, data_size, length_size, user_size)} ctrl} {Bit#(data_size) data}}} {position {AhbDefines.bsv 1003 19}}
TaggedUnion {AhbDefines::AhbXtorRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{AhbDefines::AhbTbRequest#(id_size, addr_size, data_size, length_size, user_size)} Descriptor} {Bit#(data_size) Data}}} {position {AhbDefines.bsv 1014 25}}
Alias {AhbDefines::AhbXtorResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {AhbDefines::AhbResponse#(id_size, addr_size, data_size, length_size, user_size)} {position {AhbDefines.bsv 1030 32}}
Alias Axi4Defines::Axi4Len UInt#(8) {position {Axi4Defines.bsv 25 42}}
Alias Axi4Defines::Axi4Qos Bit#(4) {position {Axi4Defines.bsv 26 42}}
Alias Axi4Defines::Axi4Region Bit#(4) {position {Axi4Defines.bsv 27 42}}
Struct Axi4Defines::Axi4Cache {members {{TLM3Defines::TLMAllocate allocate {width 1}} {TLM3Defines::TLMAllocate other_allocate {width 1}} {TLM3Defines::TLMModify modify {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}}}} {width 4} {position {Axi4Defines.bsv 34 19}}
Enum Axi4Defines::Axi4Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {Axi4Defines.bsv 36 35}}
Struct {Axi4Defines::Axi4AddrCmd#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {UInt#(8) len {width 8}} {TLM3Defines::TLMBSize size {width 3}} {AxiDefines::AxiBurst burst {width 2}} {Axi4Defines::Axi4Lock lock {width 1}} {Axi4Defines::Axi4Cache cache {width 4}} {AxiDefines::AxiProt prot {width 3}} {Bit#(4) qos {width 4}} {Bit#(addr_size) addr} {Bit#(4) region {width 4}} {Bit#(user_size) user_addr}}} {position {Axi4Defines.bsv 50 19}}
Struct {Axi4Defines::Axi4WrData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{Bit#(TDiv#(data_size, 8))} strb} {Bool last {width 1}}}} {position {Axi4Defines.bsv 73 19}}
Struct {Axi4Defines::Axi4RdResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {Bit#(data_size) data} {AxiDefines::AxiResp resp {width 2}} {Bit#(user_size) user} {Bool last {width 1}}}} {position {Axi4Defines.bsv 90 19}}
Struct {Axi4Defines::Axi4WrResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {AxiDefines::AxiResp resp {width 2}} {Bit#(user_size) user}}} {position {Axi4Defines.bsv 106 19}}
Interface {Axi4Defines::Axi4WrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) awID {} {{(* ports = [] *)} {(* result = "AWID" *)}}}} {method {Bit#(addr_size) awADDR {} {{(* ports = [] *)} {(* result = "AWADDR" *)}}}} {method {Bit#(user_size) awUSER {} {{(* ports = [] *)} {(* result = "AWUSER" *)}}}} {method {UInt#(8) awLEN {} {{(* ports = [] *)} {(* result = "AWLEN" *)}}}} {method {TLM3Defines::TLMBSize awSIZE {} {{(* ports = [] *)} {(* result = "AWSIZE" *)}}}} {method {AxiDefines::AxiBurst awBURST {} {{(* ports = [] *)} {(* result = "AWBURST" *)}}}} {method {Axi4Defines::Axi4Lock awLOCK {} {{(* ports = [] *)} {(* result = "AWLOCK" *)}}}} {method {Axi4Defines::Axi4Cache awCACHE {} {{(* ports = [] *)} {(* result = "AWCACHE" *)}}}} {method {AxiDefines::AxiProt awPROT {} {{(* ports = [] *)} {(* result = "AWPROT" *)}}}} {method {Bit#(4) awQOS {} {{(* ports = [] *)} {(* result = "AWQOS" *)}}}} {method {Bool awVALID {} {{(* ports = [] *)} {(* result = "AWVALID" *)}}}} {method {Action awREADY Bool {{(* ports = ["AWREADY"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) wDATA {} {{(* ports = [] *)} {(* result = "WDATA" *)}}}} {method {Bit#(user_size) wUSER {} {{(* ports = [] *)} {(* result = "WUSER" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} wSTRB {} {{(* ports = [] *)} {(* result = "WSTRB" *)}}}} {method {Bool wLAST {} {{(* ports = [] *)} {(* result = "WLAST" *)}}}} {method {Bool wVALID {} {{(* ports = [] *)} {(* result = "WVALID" *)}}}} {method {Action wREADY Bool {{(* ports = ["WREADY"] *)} {(* result = "unusedwm1" *)} {(* prefix = "" *)}}}} {method {Bool bREADY {} {{(* ports = [] *)} {(* result = "BREADY" *)}}}} {method {Action bID Bit#(id_size) {{(* ports = ["BID"] *)} {(* result = "unusedwm2" *)} {(* prefix = "" *)}}}} {method {Action bRESP AxiDefines::AxiResp {{(* ports = ["BRESP"] *)} {(* result = "unusedwm3" *)} {(* prefix = "" *)}}}} {method {Action bUSER Bit#(user_size) {{(* ports = ["BUSER"] *)} {(* result = "unusedwm4" *)} {(* prefix = "" *)}}}} {method {Action bVALID Bool {{(* ports = ["BVALID"] *)} {(* result = "unusedwm5" *)} {(* prefix = "" *)}}}}}} {position {Axi4Defines.bsv 187 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4RdMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) arID {} {{(* ports = [] *)} {(* result = "ARID" *)}}}} {method {Bit#(addr_size) arADDR {} {{(* ports = [] *)} {(* result = "ARADDR" *)}}}} {method {Bit#(user_size) arUSER {} {{(* ports = [] *)} {(* result = "ARUSER" *)}}}} {method {UInt#(8) arLEN {} {{(* ports = [] *)} {(* result = "ARLEN" *)}}}} {method {TLM3Defines::TLMBSize arSIZE {} {{(* ports = [] *)} {(* result = "ARSIZE" *)}}}} {method {AxiDefines::AxiBurst arBURST {} {{(* ports = [] *)} {(* result = "ARBURST" *)}}}} {method {Axi4Defines::Axi4Lock arLOCK {} {{(* ports = [] *)} {(* result = "ARLOCK" *)}}}} {method {Axi4Defines::Axi4Cache arCACHE {} {{(* ports = [] *)} {(* result = "ARCACHE" *)}}}} {method {AxiDefines::AxiProt arPROT {} {{(* ports = [] *)} {(* result = "ARPROT" *)}}}} {method {Bit#(4) arQOS {} {{(* ports = [] *)} {(* result = "ARQOS" *)}}}} {method {Bool arVALID {} {{(* ports = [] *)} {(* result = "ARVALID" *)}}}} {method {Action arREADY Bool {{(* ports = ["ARREADY"] *)} {(* result = "unusedrm0" *)} {(* prefix = "" *)}}}} {method {Bool rREADY {} {{(* ports = [] *)} {(* result = "RREADY" *)}}}} {method {Action rID Bit#(id_size) {{(* ports = ["RID"] *)} {(* result = "unusedrm1" *)} {(* prefix = "" *)}}}} {method {Action rDATA Bit#(data_size) {{(* ports = ["RDATA"] *)} {(* result = "unusedrm2" *)} {(* prefix = "" *)}}}} {method {Action rRESP AxiDefines::AxiResp {{(* ports = ["RRESP"] *)} {(* result = "unusedrm3" *)} {(* prefix = "" *)}}}} {method {Action rUSER Bit#(user_size) {{(* ports = ["RUSER"] *)} {(* result = "unusedrm4" *)} {(* prefix = "" *)}}}} {method {Action rLAST Bool {{(* ports = ["RLAST"] *)} {(* result = "unusedrm5" *)} {(* prefix = "" *)}}}} {method {Action rVALID Bool {{(* ports = ["RVALID"] *)} {(* result = "unusedrm6" *)} {(* prefix = "" *)}}}}}} {position {Axi4Defines.bsv 250 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4WrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action awID Bit#(id_size) {{(* ports = ["AWID"] *)} {(* result = "unusedws0" *)} {(* prefix = "" *)}}}} {method {Action awADDR Bit#(addr_size) {{(* ports = ["AWADDR"] *)} {(* result = "unusedws1" *)} {(* prefix = "" *)}}}} {method {Action awREGION Bit#(4) {{(* ports = ["AWREGION"] *)} {(* result = "unusedws1A" *)} {(* prefix = "" *)}}}} {method {Action awUSER Bit#(user_size) {{(* ports = ["AWUSER"] *)} {(* result = "unusedws2" *)} {(* prefix = "" *)}}}} {method {Action awLEN UInt#(8) {{(* ports = ["AWLEN"] *)} {(* result = "unusedws3" *)} {(* prefix = "" *)}}}} {method {Action awSIZE TLM3Defines::TLMBSize {{(* ports = ["AWSIZE"] *)} {(* result = "unusedws4" *)} {(* prefix = "" *)}}}} {method {Action awBURST AxiDefines::AxiBurst {{(* ports = ["AWBURST"] *)} {(* result = "unusedws5" *)} {(* prefix = "" *)}}}} {method {Action awLOCK Axi4Defines::Axi4Lock {{(* ports = ["AWLOCK"] *)} {(* result = "unusedws6" *)} {(* prefix = "" *)}}}} {method {Action awCACHE Axi4Defines::Axi4Cache {{(* ports = ["AWCACHE"] *)} {(* result = "unusedws7" *)} {(* prefix = "" *)}}}} {method {Action awPROT AxiDefines::AxiProt {{(* ports = ["AWPROT"] *)} {(* result = "unusedws8" *)} {(* prefix = "" *)}}}} {method {Action awQOS Bit#(4) {{(* ports = ["AWQOS"] *)} {(* result = "unusedws9" *)} {(* prefix = "" *)}}}} {method {Action awVALID Bool {{(* ports = ["AWVALID"] *)} {(* result = "unusedws10" *)} {(* prefix = "" *)}}}} {method {Bool awREADY {} {{(* ports = [] *)} {(* result = "AWREADY" *)}}}} {method {Action wDATA Bit#(data_size) {{(* ports = ["WDATA"] *)} {(* result = "unusedws11" *)} {(* prefix = "" *)}}}} {method {Action wUSER Bit#(user_size) {{(* ports = ["WUSER"] *)} {(* result = "unusedws12" *)} {(* prefix = "" *)}}}} {method {Action wSTRB {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["WSTRB"] *)} {(* result = "unusedws13" *)} {(* prefix = "" *)}}}} {method {Action wLAST Bool {{(* ports = ["WLAST"] *)} {(* result = "unusedws14" *)} {(* prefix = "" *)}}}} {method {Action wVALID Bool {{(* ports = ["WVALID"] *)} {(* result = "unusedws15" *)} {(* prefix = "" *)}}}} {method {Bool wREADY {} {{(* ports = [] *)} {(* result = "WREADY" *)}}}} {method {Action bREADY Bool {{(* ports = ["BREADY"] *)} {(* result = "unusedws16" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) bID {} {{(* ports = [] *)} {(* result = "BID" *)}}}} {method {AxiDefines::AxiResp bRESP {} {{(* ports = [] *)} {(* result = "BRESP" *)}}}} {method {Bit#(user_size) bUSER {} {{(* ports = [] *)} {(* result = "BUSER" *)}}}} {method {Bool bVALID {} {{(* ports = [] *)} {(* result = "BVALID" *)}}}}}} {position {Axi4Defines.bsv 302 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4RdSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action arID Bit#(id_size) {{(* ports = ["ARID"] *)} {(* result = "unusedrs0" *)} {(* prefix = "" *)}}}} {method {Action arADDR Bit#(addr_size) {{(* ports = ["ARADDR"] *)} {(* result = "unusedrs1" *)} {(* prefix = "" *)}}}} {method {Action arREGION Bit#(4) {{(* ports = ["ARREGION"] *)} {(* result = "unusedws1A" *)} {(* prefix = "" *)}}}} {method {Action arUSER Bit#(user_size) {{(* ports = ["ARUSER"] *)} {(* result = "unusedws2" *)} {(* prefix = "" *)}}}} {method {Action arLEN UInt#(8) {{(* ports = ["ARLEN"] *)} {(* result = "unusedrs3" *)} {(* prefix = "" *)}}}} {method {Action arSIZE TLM3Defines::TLMBSize {{(* ports = ["ARSIZE"] *)} {(* result = "unusedrs4" *)} {(* prefix = "" *)}}}} {method {Action arBURST AxiDefines::AxiBurst {{(* ports = ["ARBURST"] *)} {(* result = "unusedrs5" *)} {(* prefix = "" *)}}}} {method {Action arLOCK Axi4Defines::Axi4Lock {{(* ports = ["ARLOCK"] *)} {(* result = "unusedrs6" *)} {(* prefix = "" *)}}}} {method {Action arCACHE Axi4Defines::Axi4Cache {{(* ports = ["ARCACHE"] *)} {(* result = "unusedrs7" *)} {(* prefix = "" *)}}}} {method {Action arPROT AxiDefines::AxiProt {{(* ports = ["ARPROT"] *)} {(* result = "unusedrs8" *)} {(* prefix = "" *)}}}} {method {Action arQOS Bit#(4) {{(* ports = ["ARQOS"] *)} {(* result = "unusedws9" *)} {(* prefix = "" *)}}}} {method {Action arVALID Bool {{(* ports = ["ARVALID"] *)} {(* result = "unusedrs10" *)} {(* prefix = "" *)}}}} {method {Bool arREADY {} {{(* ports = [] *)} {(* result = "ARREADY" *)}}}} {method {Action rREADY Bool {{(* ports = ["RREADY"] *)} {(* result = "unusedrs11" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) rID {} {{(* ports = [] *)} {(* result = "RID" *)}}}} {method {Bit#(data_size) rDATA {} {{(* ports = [] *)} {(* result = "RDATA" *)}}}} {method {AxiDefines::AxiResp rRESP {} {{(* ports = [] *)} {(* result = "RRESP" *)}}}} {method {Bit#(user_size) rUSER {} {{(* ports = [] *)} {(* result = "RUSER" *)}}}} {method {Bool rLAST {} {{(* ports = [] *)} {(* result = "RLAST" *)}}}} {method {Bool rVALID {} {{(* ports = [] *)} {(* result = "RVALID" *)}}}}}} {position {Axi4Defines.bsv 367 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4RdBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 423 11}}
Interface {Axi4Defines::Axi4WrBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusRecv#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 428 11}}
Interface {Axi4Defines::Axi4RdBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 434 11}}
Interface {Axi4Defines::Axi4WrBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusSend#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 439 11}}
Interface {Axi4Defines::Axi4RdFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 449 11}}
Interface {Axi4Defines::Axi4RdFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4Defines.bsv 454 11}}
Interface {Axi4Defines::Axi4WrFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 460 11}}
Interface {Axi4Defines::Axi4WrFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4Defines.bsv 465 11}}
Interface {Axi4Defines::Axi4RdMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 471 11}}
Interface {Axi4Defines::Axi4WrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 477 11}}
Interface {Axi4Defines::Axi4RdSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 483 11}}
Interface {Axi4Defines::Axi4WrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 489 11}}
Interface {Axi4Defines::Axi4RdWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 499 11}}
Interface {Axi4Defines::Axi4RdWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 507 11}}
Interface {Axi4Defines::Axi4RdWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 515 11}}
Interface {Axi4Defines::Axi4RdWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 522 11}}
Typeclass {Axi4Defines::ToAxi4#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(b) f(a x1)   provisos (IsModule#(c, d))} toAxi4}}} {instances {{Axi4Defines::ToAxi4#(AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4Defines.bsv 774 11}}
Struct {Axi4LDefines::Axi4LAddrCmd#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AxiDefines::AxiProt prot {width 3}} {Bit#(addr_size) addr}}} {position {Axi4LDefines.bsv 24 19}}
Struct {Axi4LDefines::Axi4LWrData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {{Bit#(TDiv#(data_size, 8))} strb}}} {position {Axi4LDefines.bsv 37 19}}
Struct {Axi4LDefines::Axi4LRdResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {AxiDefines::AxiResp resp {width 2}}}} {position {Axi4LDefines.bsv 48 19}}
Interface {Axi4LDefines::Axi4LWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) awADDR {} {{(* ports = [] *)} {(* result = "AWADDR" *)}}}} {method {AxiDefines::AxiProt awPROT {} {{(* ports = [] *)} {(* result = "AWPROT" *)}}}} {method {Bool awVALID {} {{(* ports = [] *)} {(* result = "AWVALID" *)}}}} {method {Action awREADY Bool {{(* ports = ["AWREADY"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) wDATA {} {{(* ports = [] *)} {(* result = "WDATA" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} wSTRB {} {{(* ports = [] *)} {(* result = "WSTRB" *)}}}} {method {Bool wVALID {} {{(* ports = [] *)} {(* result = "WVALID" *)}}}} {method {Action wREADY Bool {{(* ports = ["WREADY"] *)} {(* result = "unusedwm1" *)} {(* prefix = "" *)}}}} {method {Bool bREADY {} {{(* ports = [] *)} {(* result = "BREADY" *)}}}} {method {Action bRESP AxiDefines::AxiResp {{(* ports = ["BRESP"] *)} {(* result = "unusedwm3" *)} {(* prefix = "" *)}}}} {method {Action bVALID Bool {{(* ports = ["BVALID"] *)} {(* result = "unusedwm2" *)} {(* prefix = "" *)}}}}}} {position {Axi4LDefines.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LRdMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) arADDR {} {{(* ports = [] *)} {(* result = "ARADDR" *)}}}} {method {AxiDefines::AxiProt arPROT {} {{(* ports = [] *)} {(* result = "ARPROT" *)}}}} {method {Bool arVALID {} {{(* ports = [] *)} {(* result = "ARVALID" *)}}}} {method {Action arREADY Bool {{(* ports = ["ARREADY"] *)} {(* result = "unusedrm0" *)} {(* prefix = "" *)}}}} {method {Bool rREADY {} {{(* ports = [] *)} {(* result = "RREADY" *)}}}} {method {Action rDATA Bit#(data_size) {{(* ports = ["RDATA"] *)} {(* result = "unusedrm2" *)} {(* prefix = "" *)}}}} {method {Action rRESP AxiDefines::AxiResp {{(* ports = ["RRESP"] *)} {(* result = "unusedrm3" *)} {(* prefix = "" *)}}}} {method {Action rVALID Bool {{(* ports = ["RVALID"] *)} {(* result = "unusedrm6" *)} {(* prefix = "" *)}}}}}} {position {Axi4LDefines.bsv 105 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action awADDR Bit#(addr_size) {{(* ports = ["AWADDR"] *)} {(* result = "unusedws1" *)} {(* prefix = "" *)}}}} {method {Action awPROT AxiDefines::AxiProt {{(* ports = ["AWPROT"] *)} {(* result = "unusedws8" *)} {(* prefix = "" *)}}}} {method {Action awVALID Bool {{(* ports = ["AWVALID"] *)} {(* result = "unusedws10" *)} {(* prefix = "" *)}}}} {method {Bool awREADY {} {{(* ports = [] *)} {(* result = "AWREADY" *)}}}} {method {Action wDATA Bit#(data_size) {{(* ports = ["WDATA"] *)} {(* result = "unusedws11" *)} {(* prefix = "" *)}}}} {method {Action wSTRB {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["WSTRB"] *)} {(* result = "unusedws13" *)} {(* prefix = "" *)}}}} {method {Action wVALID Bool {{(* ports = ["WVALID"] *)} {(* result = "unusedws15" *)} {(* prefix = "" *)}}}} {method {Bool wREADY {} {{(* ports = [] *)} {(* result = "WREADY" *)}}}} {method {Action bREADY Bool {{(* ports = ["BREADY"] *)} {(* result = "unusedws16" *)} {(* prefix = "" *)}}}} {method {AxiDefines::AxiResp bRESP {} {{(* ports = [] *)} {(* result = "BRESP" *)}}}} {method {Bool bVALID {} {{(* ports = [] *)} {(* result = "BVALID" *)}}}}}} {position {Axi4LDefines.bsv 135 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LRdSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action arADDR Bit#(addr_size) {{(* ports = ["ARADDR"] *)} {(* result = "unusedrs1" *)} {(* prefix = "" *)}}}} {method {Action arPROT AxiDefines::AxiProt {{(* ports = ["ARPROT"] *)} {(* result = "unusedrs8" *)} {(* prefix = "" *)}}}} {method {Action arVALID Bool {{(* ports = ["ARVALID"] *)} {(* result = "unusedrs10" *)} {(* prefix = "" *)}}}} {method {Bool arREADY {} {{(* ports = [] *)} {(* result = "ARREADY" *)}}}} {method {Action rREADY Bool {{(* ports = ["RREADY"] *)} {(* result = "unusedrs11" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) rDATA {} {{(* ports = [] *)} {(* result = "RDATA" *)}}}} {method {AxiDefines::AxiResp rRESP {} {{(* ports = [] *)} {(* result = "RRESP" *)}}}} {method {Bool rVALID {} {{(* ports = [] *)} {(* result = "RVALID" *)}}}}}} {position {Axi4LDefines.bsv 174 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LRdBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4LDefines.bsv 206 11}}
Interface {Axi4LDefines::Axi4LWrBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface BusDefines::BusRecv#(AxiDefines::AxiResp) resp {}}}} {position {Axi4LDefines.bsv 211 11}}
Interface {Axi4LDefines::Axi4LRdBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4LDefines.bsv 217 11}}
Interface {Axi4LDefines::Axi4LWrBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface BusDefines::BusSend#(AxiDefines::AxiResp) resp {}}}} {position {Axi4LDefines.bsv 222 11}}
Interface {Axi4LDefines::Axi4LRdFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 232 11}}
Interface {Axi4LDefines::Axi4LRdFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4LDefines.bsv 237 11}}
Interface {Axi4LDefines::Axi4LWrFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 243 11}}
Interface {Axi4LDefines::Axi4LWrFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4LDefines.bsv 248 11}}
Interface {Axi4LDefines::Axi4LRdMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 254 11}}
Interface {Axi4LDefines::Axi4LWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 260 11}}
Interface {Axi4LDefines::Axi4LRdSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 266 11}}
Interface {Axi4LDefines::Axi4LWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 272 11}}
Interface {Axi4LDefines::Axi4LRdWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 282 11}}
Interface {Axi4LDefines::Axi4LRdWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 290 11}}
Interface {Axi4LDefines::Axi4LRdWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 298 11}}
Interface {Axi4LDefines::Axi4LRdWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 305 11}}
Typeclass {Axi4LDefines::ToAxi4L#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(b) f(a x1)   provisos (IsModule#(c, d))} toAxi4L}}} {position {Axi4LDefines.bsv 407 11}}
Interface {Axi4LPC::Axi4LPC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action aw_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action aw_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action aw_valid Bool {{(* ports = ["value"] *)}}}} {method {Action aw_ready Bool {{(* ports = ["value"] *)}}}} {method {Action w_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action w_strb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["value"] *)}}}} {method {Action w_valid Bool {{(* ports = ["value"] *)}}}} {method {Action w_ready Bool {{(* ports = ["value"] *)}}}} {method {Action b_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action b_valid Bool {{(* ports = ["value"] *)}}}} {method {Action b_ready Bool {{(* ports = ["value"] *)}}}} {method {Action ar_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action ar_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action ar_valid Bool {{(* ports = ["value"] *)}}}} {method {Action ar_ready Bool {{(* ports = ["value"] *)}}}} {method {Action r_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action r_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action r_valid Bool {{(* ports = ["value"] *)}}}} {method {Action r_ready Bool {{(* ports = ["value"] *)}}}}}} {position {Axi4LPC.bsv 384 11}}
Struct Axi4LPC::Axi4LPCParams {members {{Int#(32) maxwaits {width 32}}}} {width 32} {position {Axi4LPC.bsv 416 19}}
Interface {Axi4PC::Axi4PC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action aw_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action aw_len UInt#(8) {{(* ports = ["aw_len"] *)}}}} {method {Action aw_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action aw_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action aw_lock Axi4Defines::Axi4Lock {{(* ports = ["value"] *)}}}} {method {Action aw_cache Axi4Defines::Axi4Cache {{(* ports = ["value"] *)}}}} {method {Action aw_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action aw_qos Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action aw_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action aw_region Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action aw_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action aw_valid Bool {{(* ports = ["value"] *)}}}} {method {Action aw_ready Bool {{(* ports = ["value"] *)}}}} {method {Action w_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action w_strb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["value"] *)}}}} {method {Action w_last Bool {{(* ports = ["value"] *)}}}} {method {Action w_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action w_valid Bool {{(* ports = ["value"] *)}}}} {method {Action w_ready Bool {{(* ports = ["value"] *)}}}} {method {Action b_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action b_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action b_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action b_valid Bool {{(* ports = ["value"] *)}}}} {method {Action b_ready Bool {{(* ports = ["value"] *)}}}} {method {Action ar_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action ar_len UInt#(8) {{(* ports = ["value"] *)}}}} {method {Action ar_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action ar_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action ar_lock Axi4Defines::Axi4Lock {{(* ports = ["value"] *)}}}} {method {Action ar_cache Axi4Defines::Axi4Cache {{(* ports = ["value"] *)}}}} {method {Action ar_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action ar_qos Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action ar_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action ar_region Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action ar_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action ar_valid Bool {{(* ports = ["value"] *)}}}} {method {Action ar_ready Bool {{(* ports = ["value"] *)}}}} {method {Action r_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action r_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action r_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action r_last Bool {{(* ports = ["value"] *)}}}} {method {Action r_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action r_valid Bool {{(* ports = ["value"] *)}}}} {method {Action r_ready Bool {{(* ports = ["value"] *)}}}} {method {Action c_active Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysreq Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysack Bool {{(* ports = ["value"] *)}}}}}} {position {Axi4PC.bsv 653 11}}
Struct Axi4PC::Axi4PCParams {members {{UInt#(32) exmon_width {width 32}} {UInt#(32) maxwaits {width 32}}}} {width 64} {position {Axi4PC.bsv 717 19}}
Struct {Axi4LDefines::Axi4LAddrCmd#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{AxiDefines::AxiProt prot {width 3}} {Bit#(addr_size) addr}}} {position {Axi4LDefines.bsv 24 19}}
Struct {Axi4LDefines::Axi4LWrData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {{Bit#(TDiv#(data_size, 8))} strb}}} {position {Axi4LDefines.bsv 37 19}}
Struct {Axi4LDefines::Axi4LRdResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {AxiDefines::AxiResp resp {width 2}}}} {position {Axi4LDefines.bsv 48 19}}
Interface {Axi4LDefines::Axi4LWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) awADDR {} {{(* ports = [] *)} {(* result = "AWADDR" *)}}}} {method {AxiDefines::AxiProt awPROT {} {{(* ports = [] *)} {(* result = "AWPROT" *)}}}} {method {Bool awVALID {} {{(* ports = [] *)} {(* result = "AWVALID" *)}}}} {method {Action awREADY Bool {{(* ports = ["AWREADY"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) wDATA {} {{(* ports = [] *)} {(* result = "WDATA" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} wSTRB {} {{(* ports = [] *)} {(* result = "WSTRB" *)}}}} {method {Bool wVALID {} {{(* ports = [] *)} {(* result = "WVALID" *)}}}} {method {Action wREADY Bool {{(* ports = ["WREADY"] *)} {(* result = "unusedwm1" *)} {(* prefix = "" *)}}}} {method {Bool bREADY {} {{(* ports = [] *)} {(* result = "BREADY" *)}}}} {method {Action bRESP AxiDefines::AxiResp {{(* ports = ["BRESP"] *)} {(* result = "unusedwm3" *)} {(* prefix = "" *)}}}} {method {Action bVALID Bool {{(* ports = ["BVALID"] *)} {(* result = "unusedwm2" *)} {(* prefix = "" *)}}}}}} {position {Axi4LDefines.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LRdMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) arADDR {} {{(* ports = [] *)} {(* result = "ARADDR" *)}}}} {method {AxiDefines::AxiProt arPROT {} {{(* ports = [] *)} {(* result = "ARPROT" *)}}}} {method {Bool arVALID {} {{(* ports = [] *)} {(* result = "ARVALID" *)}}}} {method {Action arREADY Bool {{(* ports = ["ARREADY"] *)} {(* result = "unusedrm0" *)} {(* prefix = "" *)}}}} {method {Bool rREADY {} {{(* ports = [] *)} {(* result = "RREADY" *)}}}} {method {Action rDATA Bit#(data_size) {{(* ports = ["RDATA"] *)} {(* result = "unusedrm2" *)} {(* prefix = "" *)}}}} {method {Action rRESP AxiDefines::AxiResp {{(* ports = ["RRESP"] *)} {(* result = "unusedrm3" *)} {(* prefix = "" *)}}}} {method {Action rVALID Bool {{(* ports = ["RVALID"] *)} {(* result = "unusedrm6" *)} {(* prefix = "" *)}}}}}} {position {Axi4LDefines.bsv 105 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action awADDR Bit#(addr_size) {{(* ports = ["AWADDR"] *)} {(* result = "unusedws1" *)} {(* prefix = "" *)}}}} {method {Action awPROT AxiDefines::AxiProt {{(* ports = ["AWPROT"] *)} {(* result = "unusedws8" *)} {(* prefix = "" *)}}}} {method {Action awVALID Bool {{(* ports = ["AWVALID"] *)} {(* result = "unusedws10" *)} {(* prefix = "" *)}}}} {method {Bool awREADY {} {{(* ports = [] *)} {(* result = "AWREADY" *)}}}} {method {Action wDATA Bit#(data_size) {{(* ports = ["WDATA"] *)} {(* result = "unusedws11" *)} {(* prefix = "" *)}}}} {method {Action wSTRB {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["WSTRB"] *)} {(* result = "unusedws13" *)} {(* prefix = "" *)}}}} {method {Action wVALID Bool {{(* ports = ["WVALID"] *)} {(* result = "unusedws15" *)} {(* prefix = "" *)}}}} {method {Bool wREADY {} {{(* ports = [] *)} {(* result = "WREADY" *)}}}} {method {Action bREADY Bool {{(* ports = ["BREADY"] *)} {(* result = "unusedws16" *)} {(* prefix = "" *)}}}} {method {AxiDefines::AxiResp bRESP {} {{(* ports = [] *)} {(* result = "BRESP" *)}}}} {method {Bool bVALID {} {{(* ports = [] *)} {(* result = "BVALID" *)}}}}}} {position {Axi4LDefines.bsv 135 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LRdSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action arADDR Bit#(addr_size) {{(* ports = ["ARADDR"] *)} {(* result = "unusedrs1" *)} {(* prefix = "" *)}}}} {method {Action arPROT AxiDefines::AxiProt {{(* ports = ["ARPROT"] *)} {(* result = "unusedrs8" *)} {(* prefix = "" *)}}}} {method {Action arVALID Bool {{(* ports = ["ARVALID"] *)} {(* result = "unusedrs10" *)} {(* prefix = "" *)}}}} {method {Bool arREADY {} {{(* ports = [] *)} {(* result = "ARREADY" *)}}}} {method {Action rREADY Bool {{(* ports = ["RREADY"] *)} {(* result = "unusedrs11" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) rDATA {} {{(* ports = [] *)} {(* result = "RDATA" *)}}}} {method {AxiDefines::AxiResp rRESP {} {{(* ports = [] *)} {(* result = "RRESP" *)}}}} {method {Bool rVALID {} {{(* ports = [] *)} {(* result = "RVALID" *)}}}}}} {position {Axi4LDefines.bsv 174 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4LDefines::Axi4LRdBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4LDefines.bsv 206 11}}
Interface {Axi4LDefines::Axi4LWrBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface BusDefines::BusRecv#(AxiDefines::AxiResp) resp {}}}} {position {Axi4LDefines.bsv 211 11}}
Interface {Axi4LDefines::Axi4LRdBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4LDefines::Axi4LRdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4LDefines.bsv 217 11}}
Interface {Axi4LDefines::Axi4LWrBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LAddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4LDefines::Axi4LWrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface BusDefines::BusSend#(AxiDefines::AxiResp) resp {}}}} {position {Axi4LDefines.bsv 222 11}}
Interface {Axi4LDefines::Axi4LRdFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 232 11}}
Interface {Axi4LDefines::Axi4LRdFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4LDefines.bsv 237 11}}
Interface {Axi4LDefines::Axi4LWrFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 243 11}}
Interface {Axi4LDefines::Axi4LWrFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4LDefines.bsv 248 11}}
Interface {Axi4LDefines::Axi4LRdMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 254 11}}
Interface {Axi4LDefines::Axi4LWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 260 11}}
Interface {Axi4LDefines::Axi4LRdSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 266 11}}
Interface {Axi4LDefines::Axi4LWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 272 11}}
Interface {Axi4LDefines::Axi4LRdWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 282 11}}
Interface {Axi4LDefines::Axi4LRdWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4LDefines::Axi4LRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 290 11}}
Interface {Axi4LDefines::Axi4LRdWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 298 11}}
Interface {Axi4LDefines::Axi4LRdWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4LDefines::Axi4LRdSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4LDefines::Axi4LWrSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4LDefines.bsv 305 11}}
Typeclass {Axi4LDefines::ToAxi4L#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(b) f(a x1)   provisos (IsModule#(c, d))} toAxi4L}}} {position {Axi4LDefines.bsv 407 11}}


Interface {Axi4PC::Axi4PC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action aw_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action aw_len UInt#(8) {{(* ports = ["aw_len"] *)}}}} {method {Action aw_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action aw_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action aw_lock Axi4Defines::Axi4Lock {{(* ports = ["value"] *)}}}} {method {Action aw_cache Axi4Defines::Axi4Cache {{(* ports = ["value"] *)}}}} {method {Action aw_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action aw_qos Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action aw_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action aw_region Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action aw_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action aw_valid Bool {{(* ports = ["value"] *)}}}} {method {Action aw_ready Bool {{(* ports = ["value"] *)}}}} {method {Action w_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action w_strb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["value"] *)}}}} {method {Action w_last Bool {{(* ports = ["value"] *)}}}} {method {Action w_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action w_valid Bool {{(* ports = ["value"] *)}}}} {method {Action w_ready Bool {{(* ports = ["value"] *)}}}} {method {Action b_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action b_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action b_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action b_valid Bool {{(* ports = ["value"] *)}}}} {method {Action b_ready Bool {{(* ports = ["value"] *)}}}} {method {Action ar_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action ar_len UInt#(8) {{(* ports = ["value"] *)}}}} {method {Action ar_size TLM3Defines::TLMBSize {{(* ports = ["value"] *)}}}} {method {Action ar_burst AxiDefines::AxiBurst {{(* ports = ["value"] *)}}}} {method {Action ar_lock Axi4Defines::Axi4Lock {{(* ports = ["value"] *)}}}} {method {Action ar_cache Axi4Defines::Axi4Cache {{(* ports = ["value"] *)}}}} {method {Action ar_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action ar_qos Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action ar_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action ar_region Bit#(4) {{(* ports = ["value"] *)}}}} {method {Action ar_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action ar_valid Bool {{(* ports = ["value"] *)}}}} {method {Action ar_ready Bool {{(* ports = ["value"] *)}}}} {method {Action r_id Bit#(id_size) {{(* ports = ["value"] *)}}}} {method {Action r_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action r_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action r_last Bool {{(* ports = ["value"] *)}}}} {method {Action r_user Bit#(user_size) {{(* ports = ["value"] *)}}}} {method {Action r_valid Bool {{(* ports = ["value"] *)}}}} {method {Action r_ready Bool {{(* ports = ["value"] *)}}}} {method {Action c_active Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysreq Bool {{(* ports = ["value"] *)}}}} {method {Action c_sysack Bool {{(* ports = ["value"] *)}}}}}} {position {Axi4PC.bsv 653 11}}
Struct Axi4PC::Axi4PCParams {members {{UInt#(32) exmon_width {width 32}} {UInt#(32) maxwaits {width 32}}}} {width 64} {position {Axi4PC.bsv 717 19}}

Alias Axi4Defines::Axi4Len UInt#(8) {position {Axi4Defines.bsv 25 42}}
Alias Axi4Defines::Axi4Qos Bit#(4) {position {Axi4Defines.bsv 26 42}}
Alias Axi4Defines::Axi4Region Bit#(4) {position {Axi4Defines.bsv 27 42}}
Struct Axi4Defines::Axi4Cache {members {{TLM3Defines::TLMAllocate allocate {width 1}} {TLM3Defines::TLMAllocate other_allocate {width 1}} {TLM3Defines::TLMModify modify {width 1}} {TLM3Defines::TLMBuffer buffer {width 1}}}} {width 4} {position {Axi4Defines.bsv 34 19}}
Enum Axi4Defines::Axi4Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {Axi4Defines.bsv 36 35}}
Struct {Axi4Defines::Axi4AddrCmd#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {UInt#(8) len {width 8}} {TLM3Defines::TLMBSize size {width 3}} {AxiDefines::AxiBurst burst {width 2}} {Axi4Defines::Axi4Lock lock {width 1}} {Axi4Defines::Axi4Cache cache {width 4}} {AxiDefines::AxiProt prot {width 3}} {Bit#(4) qos {width 4}} {Bit#(addr_size) addr} {Bit#(4) region {width 4}} {Bit#(user_size) user_addr}}} {position {Axi4Defines.bsv 50 19}}
Struct {Axi4Defines::Axi4WrData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(data_size) data} {Bit#(user_size) user} {{Bit#(TDiv#(data_size, 8))} strb} {Bool last {width 1}}}} {position {Axi4Defines.bsv 73 19}}
Struct {Axi4Defines::Axi4RdResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {Bit#(data_size) data} {AxiDefines::AxiResp resp {width 2}} {Bit#(user_size) user} {Bool last {width 1}}}} {position {Axi4Defines.bsv 90 19}}
Struct {Axi4Defines::Axi4WrResp#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bit#(id_size) id} {AxiDefines::AxiResp resp {width 2}} {Bit#(user_size) user}}} {position {Axi4Defines.bsv 106 19}}
Interface {Axi4Defines::Axi4WrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) awID {} {{(* ports = [] *)} {(* result = "AWID" *)}}}} {method {Bit#(addr_size) awADDR {} {{(* ports = [] *)} {(* result = "AWADDR" *)}}}} {method {Bit#(user_size) awUSER {} {{(* ports = [] *)} {(* result = "AWUSER" *)}}}} {method {UInt#(8) awLEN {} {{(* ports = [] *)} {(* result = "AWLEN" *)}}}} {method {TLM3Defines::TLMBSize awSIZE {} {{(* ports = [] *)} {(* result = "AWSIZE" *)}}}} {method {AxiDefines::AxiBurst awBURST {} {{(* ports = [] *)} {(* result = "AWBURST" *)}}}} {method {Axi4Defines::Axi4Lock awLOCK {} {{(* ports = [] *)} {(* result = "AWLOCK" *)}}}} {method {Axi4Defines::Axi4Cache awCACHE {} {{(* ports = [] *)} {(* result = "AWCACHE" *)}}}} {method {AxiDefines::AxiProt awPROT {} {{(* ports = [] *)} {(* result = "AWPROT" *)}}}} {method {Bit#(4) awQOS {} {{(* ports = [] *)} {(* result = "AWQOS" *)}}}} {method {Bool awVALID {} {{(* ports = [] *)} {(* result = "AWVALID" *)}}}} {method {Action awREADY Bool {{(* ports = ["AWREADY"] *)} {(* result = "unusedwm0" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) wDATA {} {{(* ports = [] *)} {(* result = "WDATA" *)}}}} {method {Bit#(user_size) wUSER {} {{(* ports = [] *)} {(* result = "WUSER" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} wSTRB {} {{(* ports = [] *)} {(* result = "WSTRB" *)}}}} {method {Bool wLAST {} {{(* ports = [] *)} {(* result = "WLAST" *)}}}} {method {Bool wVALID {} {{(* ports = [] *)} {(* result = "WVALID" *)}}}} {method {Action wREADY Bool {{(* ports = ["WREADY"] *)} {(* result = "unusedwm1" *)} {(* prefix = "" *)}}}} {method {Bool bREADY {} {{(* ports = [] *)} {(* result = "BREADY" *)}}}} {method {Action bID Bit#(id_size) {{(* ports = ["BID"] *)} {(* result = "unusedwm2" *)} {(* prefix = "" *)}}}} {method {Action bRESP AxiDefines::AxiResp {{(* ports = ["BRESP"] *)} {(* result = "unusedwm3" *)} {(* prefix = "" *)}}}} {method {Action bUSER Bit#(user_size) {{(* ports = ["BUSER"] *)} {(* result = "unusedwm4" *)} {(* prefix = "" *)}}}} {method {Action bVALID Bool {{(* ports = ["BVALID"] *)} {(* result = "unusedwm5" *)} {(* prefix = "" *)}}}}}} {position {Axi4Defines.bsv 187 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4RdMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(id_size) arID {} {{(* ports = [] *)} {(* result = "ARID" *)}}}} {method {Bit#(addr_size) arADDR {} {{(* ports = [] *)} {(* result = "ARADDR" *)}}}} {method {Bit#(user_size) arUSER {} {{(* ports = [] *)} {(* result = "ARUSER" *)}}}} {method {UInt#(8) arLEN {} {{(* ports = [] *)} {(* result = "ARLEN" *)}}}} {method {TLM3Defines::TLMBSize arSIZE {} {{(* ports = [] *)} {(* result = "ARSIZE" *)}}}} {method {AxiDefines::AxiBurst arBURST {} {{(* ports = [] *)} {(* result = "ARBURST" *)}}}} {method {Axi4Defines::Axi4Lock arLOCK {} {{(* ports = [] *)} {(* result = "ARLOCK" *)}}}} {method {Axi4Defines::Axi4Cache arCACHE {} {{(* ports = [] *)} {(* result = "ARCACHE" *)}}}} {method {AxiDefines::AxiProt arPROT {} {{(* ports = [] *)} {(* result = "ARPROT" *)}}}} {method {Bit#(4) arQOS {} {{(* ports = [] *)} {(* result = "ARQOS" *)}}}} {method {Bool arVALID {} {{(* ports = [] *)} {(* result = "ARVALID" *)}}}} {method {Action arREADY Bool {{(* ports = ["ARREADY"] *)} {(* result = "unusedrm0" *)} {(* prefix = "" *)}}}} {method {Bool rREADY {} {{(* ports = [] *)} {(* result = "RREADY" *)}}}} {method {Action rID Bit#(id_size) {{(* ports = ["RID"] *)} {(* result = "unusedrm1" *)} {(* prefix = "" *)}}}} {method {Action rDATA Bit#(data_size) {{(* ports = ["RDATA"] *)} {(* result = "unusedrm2" *)} {(* prefix = "" *)}}}} {method {Action rRESP AxiDefines::AxiResp {{(* ports = ["RRESP"] *)} {(* result = "unusedrm3" *)} {(* prefix = "" *)}}}} {method {Action rUSER Bit#(user_size) {{(* ports = ["RUSER"] *)} {(* result = "unusedrm4" *)} {(* prefix = "" *)}}}} {method {Action rLAST Bool {{(* ports = ["RLAST"] *)} {(* result = "unusedrm5" *)} {(* prefix = "" *)}}}} {method {Action rVALID Bool {{(* ports = ["RVALID"] *)} {(* result = "unusedrm6" *)} {(* prefix = "" *)}}}}}} {position {Axi4Defines.bsv 250 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4WrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action awID Bit#(id_size) {{(* ports = ["AWID"] *)} {(* result = "unusedws0" *)} {(* prefix = "" *)}}}} {method {Action awADDR Bit#(addr_size) {{(* ports = ["AWADDR"] *)} {(* result = "unusedws1" *)} {(* prefix = "" *)}}}} {method {Action awREGION Bit#(4) {{(* ports = ["AWREGION"] *)} {(* result = "unusedws1A" *)} {(* prefix = "" *)}}}} {method {Action awUSER Bit#(user_size) {{(* ports = ["AWUSER"] *)} {(* result = "unusedws2" *)} {(* prefix = "" *)}}}} {method {Action awLEN UInt#(8) {{(* ports = ["AWLEN"] *)} {(* result = "unusedws3" *)} {(* prefix = "" *)}}}} {method {Action awSIZE TLM3Defines::TLMBSize {{(* ports = ["AWSIZE"] *)} {(* result = "unusedws4" *)} {(* prefix = "" *)}}}} {method {Action awBURST AxiDefines::AxiBurst {{(* ports = ["AWBURST"] *)} {(* result = "unusedws5" *)} {(* prefix = "" *)}}}} {method {Action awLOCK Axi4Defines::Axi4Lock {{(* ports = ["AWLOCK"] *)} {(* result = "unusedws6" *)} {(* prefix = "" *)}}}} {method {Action awCACHE Axi4Defines::Axi4Cache {{(* ports = ["AWCACHE"] *)} {(* result = "unusedws7" *)} {(* prefix = "" *)}}}} {method {Action awPROT AxiDefines::AxiProt {{(* ports = ["AWPROT"] *)} {(* result = "unusedws8" *)} {(* prefix = "" *)}}}} {method {Action awQOS Bit#(4) {{(* ports = ["AWQOS"] *)} {(* result = "unusedws9" *)} {(* prefix = "" *)}}}} {method {Action awVALID Bool {{(* ports = ["AWVALID"] *)} {(* result = "unusedws10" *)} {(* prefix = "" *)}}}} {method {Bool awREADY {} {{(* ports = [] *)} {(* result = "AWREADY" *)}}}} {method {Action wDATA Bit#(data_size) {{(* ports = ["WDATA"] *)} {(* result = "unusedws11" *)} {(* prefix = "" *)}}}} {method {Action wUSER Bit#(user_size) {{(* ports = ["WUSER"] *)} {(* result = "unusedws12" *)} {(* prefix = "" *)}}}} {method {Action wSTRB {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["WSTRB"] *)} {(* result = "unusedws13" *)} {(* prefix = "" *)}}}} {method {Action wLAST Bool {{(* ports = ["WLAST"] *)} {(* result = "unusedws14" *)} {(* prefix = "" *)}}}} {method {Action wVALID Bool {{(* ports = ["WVALID"] *)} {(* result = "unusedws15" *)} {(* prefix = "" *)}}}} {method {Bool wREADY {} {{(* ports = [] *)} {(* result = "WREADY" *)}}}} {method {Action bREADY Bool {{(* ports = ["BREADY"] *)} {(* result = "unusedws16" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) bID {} {{(* ports = [] *)} {(* result = "BID" *)}}}} {method {AxiDefines::AxiResp bRESP {} {{(* ports = [] *)} {(* result = "BRESP" *)}}}} {method {Bit#(user_size) bUSER {} {{(* ports = [] *)} {(* result = "BUSER" *)}}}} {method {Bool bVALID {} {{(* ports = [] *)} {(* result = "BVALID" *)}}}}}} {position {Axi4Defines.bsv 302 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4RdSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action arID Bit#(id_size) {{(* ports = ["ARID"] *)} {(* result = "unusedrs0" *)} {(* prefix = "" *)}}}} {method {Action arADDR Bit#(addr_size) {{(* ports = ["ARADDR"] *)} {(* result = "unusedrs1" *)} {(* prefix = "" *)}}}} {method {Action arREGION Bit#(4) {{(* ports = ["ARREGION"] *)} {(* result = "unusedws1A" *)} {(* prefix = "" *)}}}} {method {Action arUSER Bit#(user_size) {{(* ports = ["ARUSER"] *)} {(* result = "unusedws2" *)} {(* prefix = "" *)}}}} {method {Action arLEN UInt#(8) {{(* ports = ["ARLEN"] *)} {(* result = "unusedrs3" *)} {(* prefix = "" *)}}}} {method {Action arSIZE TLM3Defines::TLMBSize {{(* ports = ["ARSIZE"] *)} {(* result = "unusedrs4" *)} {(* prefix = "" *)}}}} {method {Action arBURST AxiDefines::AxiBurst {{(* ports = ["ARBURST"] *)} {(* result = "unusedrs5" *)} {(* prefix = "" *)}}}} {method {Action arLOCK Axi4Defines::Axi4Lock {{(* ports = ["ARLOCK"] *)} {(* result = "unusedrs6" *)} {(* prefix = "" *)}}}} {method {Action arCACHE Axi4Defines::Axi4Cache {{(* ports = ["ARCACHE"] *)} {(* result = "unusedrs7" *)} {(* prefix = "" *)}}}} {method {Action arPROT AxiDefines::AxiProt {{(* ports = ["ARPROT"] *)} {(* result = "unusedrs8" *)} {(* prefix = "" *)}}}} {method {Action arQOS Bit#(4) {{(* ports = ["ARQOS"] *)} {(* result = "unusedws9" *)} {(* prefix = "" *)}}}} {method {Action arVALID Bool {{(* ports = ["ARVALID"] *)} {(* result = "unusedrs10" *)} {(* prefix = "" *)}}}} {method {Bool arREADY {} {{(* ports = [] *)} {(* result = "ARREADY" *)}}}} {method {Action rREADY Bool {{(* ports = ["RREADY"] *)} {(* result = "unusedrs11" *)} {(* prefix = "" *)}}}} {method {Bit#(id_size) rID {} {{(* ports = [] *)} {(* result = "RID" *)}}}} {method {Bit#(data_size) rDATA {} {{(* ports = [] *)} {(* result = "RDATA" *)}}}} {method {AxiDefines::AxiResp rRESP {} {{(* ports = [] *)} {(* result = "RRESP" *)}}}} {method {Bit#(user_size) rUSER {} {{(* ports = [] *)} {(* result = "RUSER" *)}}}} {method {Bool rLAST {} {{(* ports = [] *)} {(* result = "RLAST" *)}}}} {method {Bool rVALID {} {{(* ports = [] *)} {(* result = "RVALID" *)}}}}}} {position {Axi4Defines.bsv 367 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Axi4Defines::Axi4RdBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 423 11}}
Interface {Axi4Defines::Axi4WrBusMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusSend#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusRecv#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 428 11}}
Interface {Axi4Defines::Axi4RdBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusSend#(Axi4Defines::Axi4RdResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 434 11}}
Interface {Axi4Defines::Axi4WrBusSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {BusDefines::BusRecv#(Axi4Defines::Axi4AddrCmd#(id_size, addr_size, data_size, length_size, user_size))} addr {}} {interface {BusDefines::BusRecv#(Axi4Defines::Axi4WrData#(id_size, addr_size, data_size, length_size, user_size))} data {}} {interface {BusDefines::BusSend#(Axi4Defines::Axi4WrResp#(id_size, addr_size, data_size, length_size, user_size))} resp {}}}} {position {Axi4Defines.bsv 439 11}}
Interface {Axi4Defines::Axi4RdFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 449 11}}
Interface {Axi4Defines::Axi4RdFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4Defines.bsv 454 11}}
Interface {Axi4Defines::Axi4WrFabricMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 460 11}}
Interface {Axi4Defines::Axi4WrFabricSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["value"] *)}}}}}} {position {Axi4Defines.bsv 465 11}}
Interface {Axi4Defines::Axi4RdMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 471 11}}
Interface {Axi4Defines::Axi4WrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 477 11}}
Interface {Axi4Defines::Axi4RdSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 483 11}}
Interface {Axi4Defines::Axi4WrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 489 11}}
Interface {Axi4Defines::Axi4RdWrMasterXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 499 11}}
Interface {Axi4Defines::Axi4RdWrSlaveXActorIFC#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 507 11}}
Interface {Axi4Defines::Axi4RdWrMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 515 11}}
Interface {Axi4Defines::Axi4RdWrSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size)} read {{(* prefix = "" *)}}} {interface {Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size)} write {{(* prefix = "" *)}}}}} {position {Axi4Defines.bsv 522 11}}
Typeclass {Axi4Defines::ToAxi4#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(b) f(a x1)   provisos (IsModule#(c, d))} toAxi4}}} {instances {{Axi4Defines::ToAxi4#(AxiDefines::AxiRdFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiRdFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdFabricSlave#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiRdMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiRdSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4RdSlave#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrFabricMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrFabricMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrFabricSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrFabricSlave#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrMaster#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrMaster#(id_size, addr_size, data_size, length_size, user_size))} {Axi4Defines::ToAxi4#(AxiDefines::AxiWrSlave#(id_size, addr_size, data_size, length_size, user_size), Axi4Defines::Axi4WrSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {position {Axi4Defines.bsv 774 11}}

Interface {Axi4LPC::Axi4LPC_Ifc#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action aw_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action aw_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action aw_valid Bool {{(* ports = ["value"] *)}}}} {method {Action aw_ready Bool {{(* ports = ["value"] *)}}}} {method {Action w_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action w_strb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["value"] *)}}}} {method {Action w_valid Bool {{(* ports = ["value"] *)}}}} {method {Action w_ready Bool {{(* ports = ["value"] *)}}}} {method {Action b_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action b_valid Bool {{(* ports = ["value"] *)}}}} {method {Action b_ready Bool {{(* ports = ["value"] *)}}}} {method {Action ar_prot AxiDefines::AxiProt {{(* ports = ["value"] *)}}}} {method {Action ar_addr Bit#(addr_size) {{(* ports = ["value"] *)}}}} {method {Action ar_valid Bool {{(* ports = ["value"] *)}}}} {method {Action ar_ready Bool {{(* ports = ["value"] *)}}}} {method {Action r_data Bit#(data_size) {{(* ports = ["value"] *)}}}} {method {Action r_resp AxiDefines::AxiResp {{(* ports = ["value"] *)}}}} {method {Action r_valid Bool {{(* ports = ["value"] *)}}}} {method {Action r_ready Bool {{(* ports = ["value"] *)}}}}}} {position {Axi4LPC.bsv 384 11}}
Struct Axi4LPC::Axi4LPCParams {members {{Int#(32) maxwaits {width 32}}}} {width 32} {position {Axi4LPC.bsv 416 19}}

Alias {ApbDefines::ApbAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {ApbDefines.bsv 32 46}}
Alias {ApbDefines::ApbData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {ApbDefines.bsv 33 46}}
Alias {ApbDefines::ApbByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {ApbDefines.bsv 34 46}}
Enum ApbDefines::ApbWrite {members {READ WRITE}} {width 1} {position {ApbDefines.bsv 36 30}}
Struct ApbDefines::ApbProt {members {{TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMPrivilege privilege {width 1}}}} {width 3} {position {ApbDefines.bsv 42 19}}
Struct {ApbDefines::ApbCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{ApbDefines::ApbWrite command {width 1}} {Bit#(addr_size) addr} {ApbDefines::ApbProt prot {width 3}}}} {position {ApbDefines.bsv 48 3}}
Struct {ApbDefines::ApbRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size)} ctrl} {{Bit#(TDiv#(data_size, 8))} strb} {Bit#(data_size) data}}} {position {ApbDefines.bsv 62 3}}
Struct {ApbDefines::ApbResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bool error {width 1}} {Bit#(data_size) data}}} {position {ApbDefines.bsv 75 3}}
Interface {ApbDefines::ApbMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) paddr {} {{(* ports = [] *)} {(* result = "PADDR" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbProt pprot {} {{(* ports = [] *)} {(* result = "PPROT" *)} {(* prefix = "" *)}}}} {method {Bool penable {} {{(* ports = [] *)} {(* result = "PENABLE" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbWrite pwrite {} {{(* ports = [] *)} {(* result = "PWRITE" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) pwdata {} {{(* ports = [] *)} {(* result = "PWDATA" *)} {(* prefix = "" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} pstrb {} {{(* ports = [] *)} {(* result = "PSTRB" *)} {(* prefix = "" *)}}}} {method {Bool psel {} {{(* ports = [] *)} {(* result = "PSEL" *)} {(* prefix = "" *)}}}} {method {Action pready Bool {{(* ports = ["PREADY"] *)} {(* prefix = "" *)}}}} {method {Action prdata Bit#(data_size) {{(* ports = ["PRDATA"] *)} {(* prefix = "" *)}}}} {method {Action pslverr Bool {{(* ports = ["PSLVERR"] *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 88 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action paddr Bit#(addr_size) {{(* ports = ["PADDR"] *)} {(* prefix = "" *)}}}} {method {Action pprot ApbDefines::ApbProt {{(* ports = ["PPROT"] *)} {(* prefix = "" *)}}}} {method {Action penable Bool {{(* ports = ["PENABLE"] *)} {(* prefix = "" *)}}}} {method {Action pwrite ApbDefines::ApbWrite {{(* ports = ["PWRITE"] *)} {(* prefix = "" *)}}}} {method {Action pwdata Bit#(data_size) {{(* ports = ["PWDATA"] *)} {(* prefix = "" *)}}}} {method {Action pstrb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["PSTRB"] *)} {(* prefix = "" *)}}}} {method {Action psel Bool {{(* ports = ["PSEL"] *)} {(* prefix = "" *)}}}} {method {Bool pready {} {{(* ports = [] *)} {(* result = "PREADY" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) prdata {} {{(* ports = [] *)} {(* result = "PRDATA" *)} {(* prefix = "" *)}}}} {method {Bool pslverr {} {{(* ports = [] *)} {(* result = "PSLVERR" *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 122 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bool pready {} {{(* ports = [] *)} {(* result = "PREADY" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) prdata {} {{(* ports = [] *)} {(* result = "PRDATA" *)} {(* prefix = "" *)}}}} {method {Bool pslverr {} {{(* ports = [] *)} {(* result = "PSLVERR" *)} {(* prefix = "" *)}}}} {method {Action paddr Bit#(addr_size) {{(* ports = ["PADDR"] *)} {(* prefix = "" *)}}}} {method {Action pprot ApbDefines::ApbProt {{(* ports = ["PPROT"] *)} {(* prefix = "" *)}}}} {method {Action penable Bool {{(* ports = ["PENABLE"] *)} {(* prefix = "" *)}}}} {method {Action pwrite ApbDefines::ApbWrite {{(* ports = ["PWRITE"] *)} {(* prefix = "" *)}}}} {method {Action pwdata Bit#(data_size) {{(* ports = ["PWDATA"] *)} {(* prefix = "" *)}}}} {method {Action pstrb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["PSTRB"] *)} {(* prefix = "" *)}}}} {method {Action psel Bool {{(* ports = ["PSEL"] *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 152 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action pready Bool {{(* ports = ["PREADY"] *)} {(* prefix = "" *)}}}} {method {Action prdata Bit#(data_size) {{(* ports = ["PRDATA"] *)} {(* prefix = "" *)}}}} {method {Action pslverr Bool {{(* ports = ["PSLVERR"] *)} {(* prefix = "" *)}}}} {method {Bit#(addr_size) paddr {} {{(* ports = [] *)} {(* result = "PADDR" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbProt pprot {} {{(* ports = [] *)} {(* result = "PPROT" *)} {(* prefix = "" *)}}}} {method {Bool penable {} {{(* ports = [] *)} {(* result = "PENABLE" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbWrite pwrite {} {{(* ports = [] *)} {(* result = "PWRITE" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) pwdata {} {{(* ports = [] *)} {(* result = "PWDATA" *)} {(* prefix = "" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} pstrb {} {{(* ports = [] *)} {(* result = "PSTRB" *)} {(* prefix = "" *)}}}} {method {Bool psel {} {{(* ports = [] *)} {(* result = "PSEL" *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 182 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbXtorMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 219 11}}
Interface {ApbDefines::ApbXtorSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 224 11}}
Interface {ApbDefines::ApbXtorSlaveWM#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["x"] *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 229 11}}
Interface {ApbDefines::ApbXtorMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbMasterDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 239 11}}
Interface {ApbDefines::ApbXtorSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 244 11}}
Interface {ApbDefines::ApbXtorMasterConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} master {}} {interface {ApbDefines::ApbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {ApbDefines.bsv 249 11}}
Interface {ApbDefines::ApbXtorSlaveConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} slave {}} {interface {ApbDefines::ApbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {ApbDefines.bsv 254 11}}
Interface {ApbDefines::ApbBus#(numeric type s, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)} master {}} {method {{Vector::Vector#(s, ApbDefines::ApbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))} slaves {} {}}}}} {position {ApbDefines.bsv 259 11}}
Interface {ApbDefines::ApbMasterXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 267 11}}
Interface {ApbDefines::ApbSlaveXActorWM#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 273 11}}
Interface {ApbDefines::ApbSlaveXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 279 11}}
Interface {ApbDefines::ApbSlaveMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {ApbDefines::ApbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {ApbDefines.bsv 514 11}}
Interface {ApbDefines::ApbMasterMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {ApbDefines::ApbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {ApbDefines.bsv 519 11}}
Interface {ApbDefines::ApbInfo#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bool update {} {{(* ports = [] *)}}}}}} {position {ApbDefines.bsv 525 11}} {attributes {{(* always_ready  *)}}}
Typeclass {ApbDefines::Convert#(type a, type b)} {members {{{function b f(a x1)} convert}}} {instances {{ApbDefines::Convert#(ApbDefines::ApbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size))} {ApbDefines::Convert#(ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {position {ApbDefines.bsv 546 11}}
Enum ApbSlave::ApbState {members {IDLE SETUP ACCESS}} {width 2} {position {ApbSlave.bsv 38 3}}
Interface {ApbSlave::ApbSlaveIFC#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {}} {interface {GetPut::Put#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size))} response {}} {interface {ReadOnly#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size))} request {}} {interface ReadOnly#(Bool) penable {}} {interface ReadOnly#(Bool) psel {}}}} {position {ApbSlave.bsv 43 11}}

Enum ApbSlave::ApbState {members {IDLE SETUP ACCESS}} {width 2} {position {ApbSlave.bsv 38 3}}
Interface {ApbSlave::ApbSlaveIFC#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {}} {interface {GetPut::Put#(ApbDefines::ApbResponse#(id_size, addr_size, data_size, length_size, user_size))} response {}} {interface {ReadOnly#(ApbDefines::ApbRequest#(id_size, addr_size, data_size, length_size, user_size))} request {}} {interface ReadOnly#(Bool) penable {}} {interface ReadOnly#(Bool) psel {}}}} {position {ApbSlave.bsv 43 11}}
Alias {ApbDefines::ApbAddr#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(addr_size) {position {ApbDefines.bsv 32 46}}
Alias {ApbDefines::ApbData#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} Bit#(data_size) {position {ApbDefines.bsv 33 46}}
Alias {ApbDefines::ApbByteEn#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} {Bit#(TDiv#(data_size, 8))} {position {ApbDefines.bsv 34 46}}
Enum ApbDefines::ApbWrite {members {READ WRITE}} {width 1} {position {ApbDefines.bsv 36 30}}
Struct ApbDefines::ApbProt {members {{TLM3Defines::TLMAccess access {width 1}} {TLM3Defines::TLMSecurity security {width 1}} {TLM3Defines::TLMPrivilege privilege {width 1}}}} {width 3} {position {ApbDefines.bsv 42 19}}
Struct {ApbDefines::ApbCtrl#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{ApbDefines::ApbWrite command {width 1}} {Bit#(addr_size) addr} {ApbDefines::ApbProt prot {width 3}}}} {position {ApbDefines.bsv 48 3}}
Struct {ApbDefines::ApbRequest#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{{ApbDefines::ApbCtrl#(id_size, addr_size, data_size, length_size, user_size)} ctrl} {{Bit#(TDiv#(data_size, 8))} strb} {Bit#(data_size) data}}} {position {ApbDefines.bsv 62 3}}
Struct {ApbDefines::ApbResponse#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{Bool error {width 1}} {Bit#(data_size) data}}} {position {ApbDefines.bsv 75 3}}
Interface {ApbDefines::ApbMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bit#(addr_size) paddr {} {{(* ports = [] *)} {(* result = "PADDR" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbProt pprot {} {{(* ports = [] *)} {(* result = "PPROT" *)} {(* prefix = "" *)}}}} {method {Bool penable {} {{(* ports = [] *)} {(* result = "PENABLE" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbWrite pwrite {} {{(* ports = [] *)} {(* result = "PWRITE" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) pwdata {} {{(* ports = [] *)} {(* result = "PWDATA" *)} {(* prefix = "" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} pstrb {} {{(* ports = [] *)} {(* result = "PSTRB" *)} {(* prefix = "" *)}}}} {method {Bool psel {} {{(* ports = [] *)} {(* result = "PSEL" *)} {(* prefix = "" *)}}}} {method {Action pready Bool {{(* ports = ["PREADY"] *)} {(* prefix = "" *)}}}} {method {Action prdata Bit#(data_size) {{(* ports = ["PRDATA"] *)} {(* prefix = "" *)}}}} {method {Action pslverr Bool {{(* ports = ["PSLVERR"] *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 88 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action paddr Bit#(addr_size) {{(* ports = ["PADDR"] *)} {(* prefix = "" *)}}}} {method {Action pprot ApbDefines::ApbProt {{(* ports = ["PPROT"] *)} {(* prefix = "" *)}}}} {method {Action penable Bool {{(* ports = ["PENABLE"] *)} {(* prefix = "" *)}}}} {method {Action pwrite ApbDefines::ApbWrite {{(* ports = ["PWRITE"] *)} {(* prefix = "" *)}}}} {method {Action pwdata Bit#(data_size) {{(* ports = ["PWDATA"] *)} {(* prefix = "" *)}}}} {method {Action pstrb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["PSTRB"] *)} {(* prefix = "" *)}}}} {method {Action psel Bool {{(* ports = ["PSEL"] *)} {(* prefix = "" *)}}}} {method {Bool pready {} {{(* ports = [] *)} {(* result = "PREADY" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) prdata {} {{(* ports = [] *)} {(* result = "PRDATA" *)} {(* prefix = "" *)}}}} {method {Bool pslverr {} {{(* ports = [] *)} {(* result = "PSLVERR" *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 122 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bool pready {} {{(* ports = [] *)} {(* result = "PREADY" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) prdata {} {{(* ports = [] *)} {(* result = "PRDATA" *)} {(* prefix = "" *)}}}} {method {Bool pslverr {} {{(* ports = [] *)} {(* result = "PSLVERR" *)} {(* prefix = "" *)}}}} {method {Action paddr Bit#(addr_size) {{(* ports = ["PADDR"] *)} {(* prefix = "" *)}}}} {method {Action pprot ApbDefines::ApbProt {{(* ports = ["PPROT"] *)} {(* prefix = "" *)}}}} {method {Action penable Bool {{(* ports = ["PENABLE"] *)} {(* prefix = "" *)}}}} {method {Action pwrite ApbDefines::ApbWrite {{(* ports = ["PWRITE"] *)} {(* prefix = "" *)}}}} {method {Action pwdata Bit#(data_size) {{(* ports = ["PWDATA"] *)} {(* prefix = "" *)}}}} {method {Action pstrb {{Bit#(TDiv#(data_size, 8))}} {{(* ports = ["PSTRB"] *)} {(* prefix = "" *)}}}} {method {Action psel Bool {{(* ports = ["PSEL"] *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 152 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Action pready Bool {{(* ports = ["PREADY"] *)} {(* prefix = "" *)}}}} {method {Action prdata Bit#(data_size) {{(* ports = ["PRDATA"] *)} {(* prefix = "" *)}}}} {method {Action pslverr Bool {{(* ports = ["PSLVERR"] *)} {(* prefix = "" *)}}}} {method {Bit#(addr_size) paddr {} {{(* ports = [] *)} {(* result = "PADDR" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbProt pprot {} {{(* ports = [] *)} {(* result = "PPROT" *)} {(* prefix = "" *)}}}} {method {Bool penable {} {{(* ports = [] *)} {(* result = "PENABLE" *)} {(* prefix = "" *)}}}} {method {ApbDefines::ApbWrite pwrite {} {{(* ports = [] *)} {(* result = "PWRITE" *)} {(* prefix = "" *)}}}} {method {Bit#(data_size) pwdata {} {{(* ports = [] *)} {(* result = "PWDATA" *)} {(* prefix = "" *)}}}} {method {{Bit#(TDiv#(data_size, 8))} pstrb {} {{(* ports = [] *)} {(* result = "PSTRB" *)} {(* prefix = "" *)}}}} {method {Bool psel {} {{(* ports = [] *)} {(* result = "PSEL" *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 182 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {ApbDefines::ApbXtorMaster#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbMaster#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 219 11}}
Interface {ApbDefines::ApbXtorSlave#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 224 11}}
Interface {ApbDefines::ApbXtorSlaveWM#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlave#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}} {method {Bool addrMatch Bit#(addr_size) {{(* ports = ["x"] *)} {(* prefix = "" *)}}}}}} {position {ApbDefines.bsv 229 11}}
Interface {ApbDefines::ApbXtorMasterDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbMasterDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 239 11}}
Interface {ApbDefines::ApbXtorSlaveDual#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} bus {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 244 11}}
Interface {ApbDefines::ApbXtorMasterConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} master {}} {interface {ApbDefines::ApbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {ApbDefines.bsv 249 11}}
Interface {ApbDefines::ApbXtorSlaveConnector#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} slave {}} {interface {ApbDefines::ApbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size)} dual {}}}} {position {ApbDefines.bsv 254 11}}
Interface {ApbDefines::ApbBus#(numeric type s, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorMasterDual#(id_size, addr_size, data_size, length_size, user_size)} master {}} {method {{Vector::Vector#(s, ApbDefines::ApbXtorSlaveDual#(id_size, addr_size, data_size, length_size, user_size))} slaves {} {}}}}} {position {ApbDefines.bsv 259 11}}
Interface {ApbDefines::ApbMasterXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMRecvIFC#(req_t, resp_t)} tlm {}} {interface {ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 267 11}}
Interface {ApbDefines::ApbSlaveXActorWM#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 273 11}}
Interface {ApbDefines::ApbSlaveXActor#(type req_t, type resp_t, numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {TLM3Defines::TLMSendIFC#(req_t, resp_t)} tlm {}} {interface {ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {{(* prefix = "" *)}}}}} {position {ApbDefines.bsv 279 11}}
Interface {ApbDefines::ApbSlaveMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {ApbDefines::ApbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {ApbDefines.bsv 514 11}}
Interface {ApbDefines::ApbMasterMonitor#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{interface {ApbDefines::ApbXtorMaster#(id_size, addr_size, data_size, length_size, user_size)} fabric {}} {interface {ApbDefines::ApbInfo#(id_size, addr_size, data_size, length_size, user_size)} info {}}}} {position {ApbDefines.bsv 519 11}}
Interface {ApbDefines::ApbInfo#(numeric type id_size, numeric type addr_size, numeric type data_size, numeric type length_size, numeric type user_size)} polymorphic {members {{method {Bool update {} {{(* ports = [] *)}}}}}} {position {ApbDefines.bsv 525 11}} {attributes {{(* always_ready  *)}}}
Typeclass {ApbDefines::Convert#(type a, type b)} {members {{{function b f(a x1)} convert}}} {instances {{ApbDefines::Convert#(ApbDefines::ApbSlaveXActorWM#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbSlaveXActor#(req_t, resp_t, id_size, addr_size, data_size, length_size, user_size))} {ApbDefines::Convert#(ApbDefines::ApbXtorSlaveWM#(id_size, addr_size, data_size, length_size, user_size), ApbDefines::ApbXtorSlave#(id_size, addr_size, data_size, length_size, user_size))}}} {position {ApbDefines.bsv 546 11}}
Interface {COBS::COBSEncoder#(numeric type n)} polymorphic {members {{interface {GetPut::Put#(Tuple2#(UInt#(TLog#(TAdd#(1, n))), Vector::Vector#(n, Bit#(8))))} msg {}} {interface GetPut::Get#(Bit#(8)) byte {}}}} {position {COBS.bs 10 11}}
Interface {COBS::COBSDecoder#(numeric type n)} polymorphic {members {{interface {GetPut::Get#(Tuple2#(UInt#(TLog#(TAdd#(1, n))), Vector::Vector#(n, Bit#(8))))} msg {}} {interface GetPut::Put#(Bit#(8)) byte {}}}} {position {COBS.bs 69 11}}
Interface XilinxCells::DiffClock {members {{interface Clock p {}} {interface Clock n {}}}} {position {XilinxCells.bsv 911 11}}
Struct AlteraCells::AlteraClockGenParams {members {{String device_family} {Integer clkin_period_ps} {Integer clk0_div} {Integer clk0_duty_cycle} {String clk0_phase_shift} {Integer clk0_mul} {Integer clk1_div} {Integer clk1_duty_cycle} {String clk1_phase_shift} {Integer clk1_mul} {Integer clk2_div} {Integer clk2_duty_cycle} {String clk2_phase_shift} {Integer clk2_mul} {Integer clk3_div} {Integer clk3_duty_cycle} {String clk3_phase_shift} {Integer clk3_mul} {Integer clk4_div} {Integer clk4_duty_cycle} {String clk4_phase_shift} {Integer clk4_mul} {Integer clk5_div} {Integer clk5_duty_cycle} {String clk5_phase_shift} {Integer clk5_mul} {Integer clk6_div} {Integer clk6_duty_cycle} {String clk6_phase_shift} {Integer clk6_mul} {Integer clk7_div} {Integer clk7_duty_cycle} {String clk7_phase_shift} {Integer clk7_mul} {Integer clk8_div} {Integer clk8_duty_cycle} {String clk8_phase_shift} {Integer clk8_mul} {Integer clk9_div} {Integer clk9_duty_cycle} {String clk9_phase_shift} {Integer clk9_mul}}} {position {AlteraCells.bsv 93 3}}
Interface AlteraCells::AlteraClockGen {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {interface Clock clkout7 {}} {interface Clock clkout8 {}} {interface Clock clkout9 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {AlteraCells.bsv 142 11}}
Struct {XilinxCells::ODDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init} {String srtype}}} {position {XilinxCells.bsv 954 6}}
Interface {XilinxCells::ODDR#(type a)} polymorphic {members {{method {a q {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d1 a {{(* ports = ["i"] *)}}}} {method {Action d2 a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 966 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {XilinxCells::IDDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init_q1} {a init_q2} {String srtype}}} {position {XilinxCells.bsv 1093 6}}
Interface {XilinxCells::IDDR#(type a)} polymorphic {members {{method {a q1 {} {{(* ports = [] *)}}}} {method {a q2 {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 1115 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxCells::DiffClock {members {{interface Clock p {}} {interface Clock n {}}}} {position {XilinxCells.bsv 911 11}}
Struct AlteraCells::AlteraClockGenParams {members {{String device_family} {Integer clkin_period_ps} {Integer clk0_div} {Integer clk0_duty_cycle} {String clk0_phase_shift} {Integer clk0_mul} {Integer clk1_div} {Integer clk1_duty_cycle} {String clk1_phase_shift} {Integer clk1_mul} {Integer clk2_div} {Integer clk2_duty_cycle} {String clk2_phase_shift} {Integer clk2_mul} {Integer clk3_div} {Integer clk3_duty_cycle} {String clk3_phase_shift} {Integer clk3_mul} {Integer clk4_div} {Integer clk4_duty_cycle} {String clk4_phase_shift} {Integer clk4_mul} {Integer clk5_div} {Integer clk5_duty_cycle} {String clk5_phase_shift} {Integer clk5_mul} {Integer clk6_div} {Integer clk6_duty_cycle} {String clk6_phase_shift} {Integer clk6_mul} {Integer clk7_div} {Integer clk7_duty_cycle} {String clk7_phase_shift} {Integer clk7_mul} {Integer clk8_div} {Integer clk8_duty_cycle} {String clk8_phase_shift} {Integer clk8_mul} {Integer clk9_div} {Integer clk9_duty_cycle} {String clk9_phase_shift} {Integer clk9_mul}}} {position {AlteraCells.bsv 93 3}}
Interface AlteraCells::AlteraClockGen {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {interface Clock clkout7 {}} {interface Clock clkout8 {}} {interface Clock clkout9 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {AlteraCells.bsv 142 11}}
Struct {XilinxCells::ODDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init} {String srtype}}} {position {XilinxCells.bsv 954 6}}
Interface {XilinxCells::ODDR#(type a)} polymorphic {members {{method {a q {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d1 a {{(* ports = ["i"] *)}}}} {method {Action d2 a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 966 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {XilinxCells::IDDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init_q1} {a init_q2} {String srtype}}} {position {XilinxCells.bsv 1093 6}}
Interface {XilinxCells::IDDR#(type a)} polymorphic {members {{method {a q1 {} {{(* ports = [] *)}}}} {method {a q2 {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 1115 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct AlteraCells::LVDSTX {members {{String registered_input} {String multi_clock} {Integer inclock_period_ps} {String center_align_msb} {String intended_device_family} {Integer output_data_rate} {String inclock_data_alignment} {String outclock_alignment} {String common_rx_tx_pll} {String outclock_resource} {String use_external_pll} {String implement_in_les} {Integer preemphasis_setting} {Integer vod_setting} {Integer differential_drive} {Integer outclock_multiply_by} {Integer coreclock_divide_by} {Integer outclock_duty_cycle} {Integer inclock_phase_shift} {Integer outclock_phase_shift} {String use_no_phase_shift} {String pll_self_reset_on_loss_lock} {String refclk_frequency} {String data_rate} {String lpm_type} {String lpm_hint} {String clk_src_is_pll}}} {position {AlteraCells.bsv 524 3}}
Interface {AlteraCells::SERDES_TX#(type in, type out)} polymorphic {members {{interface Clock coreclk {}} {interface Clock outclk {}} {method {Action pins_in in {{(* ports = ["x"] *)}}}} {method {out pins_out {} {{(* ports = [] *)}}}} {method {Bool locked {} {{(* ports = [] *)}}}}}} {position {AlteraCells.bsv 559 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct AlteraCells::LVDSRX {members {{String registered_output} {Integer inclock_period_ps} {String cds_mode} {String intended_device_family} {Integer input_data_rate} {String inclock_data_alignment} {String registered_data_align_input} {String common_rx_tx_pll} {String enable_dpa_mode} {String enable_dpa_calibration} {String enable_dpa_pll_calibration} {String enable_dpa_fifo} {String use_dpll_rawperror} {String use_coreclock_input} {Integer dpll_lock_count} {Integer dpll_lock_window} {String outclock_resource} {String lose_lock_on_one_change} {String reset_fifo_at_first_lock} {String use_external_pll} {String implement_in_les} {String buffer_implementation} {String port_rx_data_align} {String port_rx_channel_data_align} {String pll_operation_mode} {String x_on_bitslip} {String use_no_phase_shift} {String rx_align_data_reg} {Integer inclock_phase_shift} {String enable_soft_cdr_mode} {Integer sim_dpa_output_clock_phase_shift} {String sim_dpa_is_negative_ppm_drift} {Integer sim_dpa_net_ppm_variation} {String enable_dpa_align_to_rising_edge_only} {String enable_dpa_initial_phase_selection} {Integer dpa_initial_phase_value} {String pll_self_reset_on_loss_lock} {String refclk_frequency} {String enable_clock_pin_mode} {String data_rate} {String lpm_hint} {String lpm_type}}} {position {AlteraCells.bsv 697 3}}
Interface {AlteraCells::SERDES_RX#(type in, type out)} polymorphic {members {{interface Clock outclk {}} {method {Action pins_in in {{(* ports = ["x"] *)}}}} {method {out pins_out {} {{(* ports = [] *)}}}} {method {Bool locked {} {{(* ports = [] *)}}}}}} {position {AlteraCells.bsv 747 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Alias ClkCtrlServer::ClkCtrlCycleStamp Bit#(64) {position {ClkCtrlServer.bsv 13 18}}
Alias ClkCtrlServer::EdgeCount Bit#(30) {position {ClkCtrlServer.bsv 23 18}}
TaggedUnion ClkCtrlServer::ClkCtrlReq {members {{Bit#(30) Edges {width 30}} {void Query {width 0}} {void Stop {width 0}} {void Resume {width 0}}}} {width 32} {position {ClkCtrlServer.bsv 30 3}}
Struct ClkCtrlServer::ClkCtrlResp {members {{Bit#(64) cycle {width 64}} {Bool running {width 1}} {Bool free_running {width 1}} {Bit#(30) edges {width 30}}}} {width 96} {position {ClkCtrlServer.bsv 37 3}}
Interface ClkCtrlServer::ClkCtrlServerCore {members {{interface GetPut::Put#(ClkCtrlServer::ClkCtrlReq) cmd {}} {interface GetPut::GetS#(ClkCtrlServer::ClkCtrlResp) status {}} {method {Action preedge Bool {{(* ports = ["val"] *)} {(* always_enabled  *)}}}} {method {Bool allow_edge {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {ClkCtrlServer.bsv 41 11}}
Interface ClkCtrlServer::ClkCtrlServerWithCClk {members {{interface GetPut::Put#(Bit#(32)) rx {}} {interface GetPut::Get#(Bit#(32)) tx {}} {method {Action preedge Bool {{(* ports = ["val"] *)} {(* always_enabled  *)}}}} {method {Bool allow_edge {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {ClkCtrlServer.bsv 51 11}}
Interface ClkCtrlServer::ClkCtrlServer {members {{interface GetPut::Put#(Bit#(32)) rx {}} {interface GetPut::Get#(Bit#(32)) tx {}} {interface Clock cclk {}} {interface Reset crst {}}}} {position {ClkCtrlServer.bsv 61 11}}
Alias PCIE::DWAddress Bit#(30) {position {PCIE.bsv 31 26}}
Alias PCIE::DWAddress64 Bit#(62) {position {PCIE.bsv 32 26}}
Alias CacheCore::Offset Bit#(3) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 98 28}}
Alias PCIE::BusNumber Bit#(8) {position {PCIE.bsv 34 26}}
Alias PCIE::DevNumber Bit#(5) {position {PCIE.bsv 35 26}}
Alias PCIE::FuncNumber Bit#(3) {position {PCIE.bsv 36 26}}
Alias PCIE::TLPLength Bit#(10) {position {PCIE.bsv 38 26}}
Alias PCIE::TLPFirstDWBE Bit#(4) {position {PCIE.bsv 39 26}}
Alias PCIE::TLPLastDWBE Bit#(4) {position {PCIE.bsv 40 26}}
Alias PCIE::TLPTag Bit#(8) {position {PCIE.bsv 41 26}}
Alias PCIE::TLPLowerAddr Bit#(7) {position {PCIE.bsv 42 26}}
Alias PCIE::TLPByteCount Bit#(12) {position {PCIE.bsv 43 26}}
Alias PCIE::TLPRegNum Bit#(10) {position {PCIE.bsv 44 26}}
Alias PCIE::DWCount Bit#(11) {position {PCIE.bsv 46 26}}
Alias PCIE::ByteCount Bit#(13) {position {PCIE.bsv 47 26}}
Struct {PCIE::TLPData#(numeric type bytes)} polymorphic {members {{Bool sof {width 1}} {Bool eof {width 1}} {Bit#(7) hit {width 7}} {Bit#(bytes) be} {{Bit#(TMul#(bytes, 8))} data}}} {position {PCIE.bsv 55 3}}
Enum PCIE::TLPAttrIDBasedOrdering {members {DEFAULT_ORDERING ID_BASED_ORDERING}} {width 1} {position {PCIE.bsv 71 6}}
Enum PCIE::TLPAttrRelaxedOrdering {members {STRICT_ORDERING RELAXED_ORDERING}} {width 1} {position {PCIE.bsv 76 6}}
Enum PCIE::TLPAttrNoSnoop {members {SNOOPING_REQD NO_SNOOPING_REQD}} {width 1} {position {PCIE.bsv 81 6}}
Enum PCIE::TLPPoison {members {NOT_POISONED POISONED}} {width 1} {position {PCIE.bsv 86 6}}
Enum PCIE::TLPDigest {members {NO_DIGEST_PRESENT DIGEST_PRESENT}} {width 1} {position {PCIE.bsv 91 6}}
Enum PCIE::TLPTrafficClass {members {TRAFFIC_CLASS_0 TRAFFIC_CLASS_1 TRAFFIC_CLASS_2 TRAFFIC_CLASS_3 TRAFFIC_CLASS_4 TRAFFIC_CLASS_5 TRAFFIC_CLASS_6 TRAFFIC_CLASS_7}} {width 3} {position {PCIE.bsv 102 6}}
Enum PCIE::TLPPacketType {members {MEMORY_READ_WRITE MEMORY_READ_LOCKED IO_REQUEST UNKNOWN_TYPE_3 CONFIG_0_READ_WRITE CONFIG_1_READ_WRITE UNKNOWN_TYPE_6 UNKNOWN_TYPE_7 UNKNOWN_TYPE_8 UNKNOWN_TYPE_9 COMPLETION COMPLETION_LOCKED UNKNOWN_TYPE_12 UNKNOWN_TYPE_13 UNKNOWN_TYPE_14 UNKNOWN_TYPE_15 MSG_ROUTED_TO_ROOT MSG_ROUTED_BY_ADDR MSG_ROUTED_BY_ID MSG_ROOT_BROADCAST MSG_LOCAL MSG_GATHER UNKNOWN_TYPE_22 UNKNOWN_TYPE_23 UNKNOWN_TYPE_24 UNKNOWN_TYPE_25 UNKNOWN_TYPE_26 UNKNOWN_TYPE_27 UNKNOWN_TYPE_28 UNKNOWN_TYPE_29 UNKNOWN_TYPE_30 UNKNOWN_TYPE_31}} {width 5} {position {PCIE.bsv 137 6}}
Enum PCIE::TLPPacketFormat {members {MEM_READ_3DW_NO_DATA MEM_READ_4DW_NO_DATA MEM_WRITE_3DW_DATA MEM_WRITE_4DW_DATA}} {width 2} {position {PCIE.bsv 144 6}}
Enum PCIE::TLPCompletionStatus {members {SUCCESSFUL_COMPLETION UNSUPPORTED_REQUEST CONFIG_REQ_RETRY_STATUS UNKNOWN_STATUS_3 COMPLETER_ABORT UNKNOWN_STATUS_5 UNKNOWN_STATUS_6 UNKNOWN_STATUS_7}} {width 3} {position {PCIE.bsv 155 6}}
Enum PCIE::TLPByteCountModified {members {BYTE_COUNT_ORIGINAL BYTE_COUNT_MODIFIED}} {width 1} {position {PCIE.bsv 160 6}}
Enum PCIE::TLPAddressType {members {DEFAULT_UNTRANSLATED TRANSLATION_REQUEST TRANSLATED RESERVED}} {width 2} {position {PCIE.bsv 167 6}}
Enum PCIE::MSIInterruptCode {members {ASSERT_INTA ASSERT_INTB ASSERT_INTC ASSERT_INTD DEASSERT_INTA DEASSERT_INTB DEASSERT_INTC DEASSERT_INTD}} {width 3} {position {PCIE.bsv 178 6}}
Enum PCIE::MSIPowerMgtCode {members {UNKNOWN_CODE_0 UNKNOWN_CODE_1 UNKNOWN_CODE_2 UNKNOWN_CODE_3 PM_ACTIVE_STATE_NAK UNKNOWN_CODE_5 UNKNOWN_CODE_6 UNKNOWN_CODE_7 PM_PME PM_TURN_OFF UNKNOWN_CODE_10 PME_TO_ACK UNKNOWN_CODE_12 UNKNOWN_CODE_13 UNKNOWN_CODE_14 UNKNOWN_CODE_15}} {width 4} {position {PCIE.bsv 197 6}}
Enum PCIE::MSIErrorCode {members {ERR_COR ERR_NONFATAL UNKNOWN_ERR_2 ERR_FATAL}} {width 2} {position {PCIE.bsv 204 6}}
Enum PCIE::MSIHotPlugCode {members {ATTN_INDICATOR_OFF ATTN_INDICATOR_ON UNKNOWN_CODE_2 ATTN_INDICATOR_BLINK POWER_INDICATOR_OFF POWER_INDICATOR_ON UNKNOWN_CODE_6 POWER_INDICATOR_BLINK ATTN_BUTTON_PRESSED UNKNOWN_CODE_9 UNKNOWN_CODE_10 UNKNOWN_CODE_11 UNKNOWN_CODE_12 UNKNOWN_CODE_13 UNKNOWN_CODE_14 UNKNOWN_CODE_15}} {width 4} {position {PCIE.bsv 223 6}}
TaggedUnion PCIE::TLPMessageCode {members {{void Unlock {width 0}} {PCIE::MSIPowerMgtCode PowerManagement {width 4}} {PCIE::MSIInterruptCode Interrupt {width 3}} {PCIE::MSIErrorCode Error {width 2}} {PCIE::MSIHotPlugCode HotPlug {width 4}} {void SlotPower {width 0}} {void VendorType0 {width 0}} {void VendorType1 {width 0}}}} {width 8} {position {PCIE.bsv 234 6}}
Struct PCIE::PciId {members {{Bit#(8) bus {width 8}} {Bit#(5) dev {width 5}} {Bit#(3) func {width 3}}}} {width 16} {position {PCIE.bsv 270 6}}
Enum PCIE::FlowControlInfoSelect {members {RECEIVE_BUFFER_AVAILABLE_SPACE RECEIVE_CREDITS_GRANTED RECEIVE_CREDITS_CONSUMED UNKNOWN_3 TRANSMIT_USER_CREDITS_AVAIALBE TRANSMIT_CREDIT_LIMIT TRANSMIT_CREDITS_CONSUMED UNKNOWN_7}} {width 3} {position {PCIE.bsv 290 6}}
Struct PCIE::PCIEParams {members {{Bool fast_train_sim_only {width 1}} {Real clock_period}}} {position {PCIE.bsv 295 6}}
Enum PCIE::BARAperture {members {APERTURE_128B APERTURE_256B APERTURE_512B APERTURE_1K APERTURE_2K APERTURE_4K APERTURE_8K APERTURE_16K APERTURE_32K APERTURE_64K APERTURE_128K APERTURE_256K APERTURE_512K APERTURE_1M APERTURE_2M APERTURE_4M APERTURE_8M APERTURE_16M APERTURE_32M APERTURE_64M APERTURE_128M APERTURE_256M APERTURE_512M APERTURE_1G APERTURE_2G APERTURE_4G APERTURE_8G APERTURE_16G APERTURE_32G APERTURE_64G APERTURE_128G APERTURE_256G APERTURE_512G APERTURE_1E APERTURE_2E}} {width 6} {position {PCIE.bsv 341 3}}
Enum PCIE::BARID {members {BAR0 BAR1 BAR2 BAR3 BAR4 BAR5 EXPANSION_ROM}} {width 3} {position {PCIE.bsv 351 6}}
Enum PCIE::TargetFunction {members {PF0 PF1 VF0 VF1 VF2 VF3 VF4 VF5 LAST}} {width 8} {position {PCIE.bsv 363 6}}
Enum PCIE::RequestType {members {MEMORY_READ MEMORY_WRITE IO_READ IO_WRITE MEMORY_FETCH_ADD MEMORY_UNCOND_SWAP MEMORY_COMP_SWAP LOCKED_READ TYPE0_CFG_READ TYPE1_CFG_READ TYPE0_CFG_WRITE TYPE1_CFG_WRITE NOT_VEND_ATS_MESSAGE VENDOR_MESSAGE ATS_MESSAGE RESERVED}} {width 4} {position {PCIE.bsv 382 6}}
Enum PCIE::ErrorCode {members {NORMAL_TERMINATION COMPLETION_POISONED TERMINATED_UR_CA_CRS NO_DATA_OR_HIGH_BYTECNT SAME_TAG START_ADDRESS INVALID_TAG FUNCTION_LEVEL_RESET TIMEOUT}} {width 4} {position {PCIE.bsv 394 3}}
Struct PCIE::TLPMemoryIO3DWHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {Bit#(4) lastbe {width 4}} {Bit#(4) firstbe {width 4}} {Bit#(30) addr {width 30}} {Reserved::ReservedZero#(2) r7 {width 2}} {Bit#(32) data {width 32}}}} {width 128} {position {PCIE.bsv 419 6}}
Struct PCIE::TLPMemory4DWHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {Bit#(4) lastbe {width 4}} {Bit#(4) firstbe {width 4}} {Bit#(62) addr {width 62}} {Reserved::ReservedZero#(2) r7 {width 2}}}} {width 128} {position {PCIE.bsv 465 6}}
Struct PCIE::TLPCompletionHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId cmplid {width 16}} {PCIE::TLPCompletionStatus cstatus {width 3}} {PCIE::TLPByteCountModified bcm {width 1}} {Bit#(12) bytecount {width 12}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {Reserved::ReservedZero#(1) r5 {width 1}} {Bit#(7) loweraddr {width 7}} {Bit#(32) data {width 32}}}} {width 128} {position {PCIE.bsv 514 6}}
Struct PCIE::TLPMSIHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {PCIE::TLPMessageCode msgcode {width 8}} {Bit#(62) address {width 62}}}} {width 126} {position {PCIE.bsv 560 6}}
Interface {PCIE::PCIE_EXP#(numeric type lanes)} polymorphic {members {{method {Action rxp Bit#(lanes) {{(* ports = ["i"] *)}}}} {method {Action rxn Bit#(lanes) {{(* ports = ["i"] *)}}}} {method {Bit#(lanes) txp {} {{(* ports = [] *)}}}} {method {Bit#(lanes) txn {} {{(* ports = [] *)}}}}}} {position {PCIE.bsv 655 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Typeclass {PCIE::ConnectableWithClocks#(type a, type b)} {members {{{function c#(Empty) f(a x1, b x2, Clock x3, Reset x4, Clock x5, Reset x6)   provisos (IsModule#(c, d))} mkConnectionWithClocks}}} {position {PCIE.bsv 765 11}}
Interface PTMClocks::OutputBit {members {{method {Bit#(1) out {} {{(* ports = [] *)}}}}}} {position {PTMClocks.bsv 12 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface PTMClocks::EnabledClock {members {{interface Clock clock_out {}}}} {position {PTMClocks.bsv 32 11}}
Interface {RS232::EdgeDetector#(type a)} polymorphic {members {{method {Bool rising {} {{(* ports = [] *)}}}} {method {Bool falling {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 106 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Enum TLM3Api::RecvState {members {RHeader0 RHeader1 RAddr RUser RData}} {width 3} {position {TLM3Api.bsv 551 56}}
Enum RS232::XmitState {members {Idle Start Wait Shift Stop Stop5 Stop2 Parity}} {width 3} {position {RS232.bsv 66 6}}
Enum RS232::Parity {members {NONE ODD EVEN}} {width 2} {position {RS232.bsv 72 6}}
Enum RS232::StopBits {members {STOP_1 STOP_1_5 STOP_2}} {width 2} {position {RS232.bsv 78 6}}
Interface RS232::RS232 {members {{method {Action sin Bit#(1) {{(* ports = ["SIN"] *)} {(* prefix = "" *)}}}} {method {Bit#(1) sout {} {{(* ports = [] *)} {(* result = "SOUT" *)} {(* prefix = "" *)}}}}}} {position {RS232.bsv 84 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface RS232::BaudGenerator {members {{method {Action clock_enable {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool baud_tick_16x {} {{(* ports = [] *)}}}} {method {Bool baud_tick_2x {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 93 11}}
Interface {RS232::InputFilter#(numeric type size, type a)} polymorphic {members {{method {Action clock_enable {} {{(* ports = [] *)}}}} {method {a _read {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 100 11}}
Interface {RS232::EdgeDetector#(type a)} polymorphic {members {{method {Bool rising {} {{(* ports = [] *)}}}} {method {Bool falling {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 106 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {RS232::Synchronizer#(type a)} polymorphic {members {{method {Action _write a {{(* ports = ["x"] *)}}}} {method {a _read {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 112 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {RS232::InputMovingFilter#(numeric type width, numeric type threshold, type a)} polymorphic {members {{method {Action sample {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {a _read {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 117 11}}
Interface {RS232::UART#(numeric type depth)} polymorphic {members {{interface RS232::RS232 rs232 {{(* prefix = "" *)}}} {interface GetPut::Get#(Bit#(8)) tx {}} {interface GetPut::Put#(Bit#(8)) rx {}}}} {position {RS232.bsv 123 11}}
Struct DDR3::DDR3_Configure {members {{Bool simulation {width 1}} {Integer reads_in_flight}}} {position {DDR3.bsv 42 3}}
Struct {DDR3::DDR3Request#(numeric type addrwidth, numeric type datawidth, numeric type bewidth)} polymorphic {members {{Bit#(bewidth) byteen} {Bit#(addrwidth) address} {Bit#(datawidth) data}}} {position {DDR3.bsv 55 3}}
Struct {DDR3::DDR3Response#(numeric type datawidth)} polymorphic {members {{Bit#(datawidth) data}}} {position {DDR3.bsv 59 3}}
Interface {DDR3::DDR3_Pins#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{method {Bit#(clkwidth) clk_p {} {{(* ports = [] *)} {(* result = "CLK_P" *)} {(* prefix = "" *)}}}} {method {Bit#(clkwidth) clk_n {} {{(* ports = [] *)} {(* result = "CLK_N" *)} {(* prefix = "" *)}}}} {method {Bit#(rowwidth) a {} {{(* ports = [] *)} {(* result = "A" *)} {(* prefix = "" *)}}}} {method {Bit#(bankwidth) ba {} {{(* ports = [] *)} {(* result = "BA" *)} {(* prefix = "" *)}}}} {method {Bit#(1) ras_n {} {{(* ports = [] *)} {(* result = "RAS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) cas_n {} {{(* ports = [] *)} {(* result = "CAS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) we_n {} {{(* ports = [] *)} {(* result = "WE_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) reset_n {} {{(* ports = [] *)} {(* result = "RESET_N" *)} {(* prefix = "" *)}}}} {method {Bit#(cswidth) cs_n {} {{(* ports = [] *)} {(* result = "CS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(odtwidth) odt {} {{(* ports = [] *)} {(* result = "ODT" *)} {(* prefix = "" *)}}}} {method {Bit#(ckewidth) cke {} {{(* ports = [] *)} {(* result = "CKE" *)} {(* prefix = "" *)}}}} {method {Bit#(bewidth) dm {} {{(* ports = [] *)} {(* result = "DM" *)} {(* prefix = "" *)}}}} {interface Inout#(Bit#(datawidth)) dq {{(* prefix = "DQ" *)}}} {interface Inout#(Bit#(bewidth)) dqs_p {{(* prefix = "DQS_P" *)}}} {interface Inout#(Bit#(bewidth)) dqs_n {{(* prefix = "DQS_N" *)}}}}} {position {DDR3.bsv 99 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface {DDR3::DDR3_User#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset_n {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action request {Bit#(ddr3addrsize) {Bit#(TMul#(ddr3besize, ddr3beats))} {Bit#(TMul#(ddr3datasize, ddr3beats))}} {{(* ports = ["addr", "mask", "data"] *)}}}} {method {{ActionValue#(Bit#(TMul#(ddr3datasize, ddr3beats)))} read_data {} {{(* ports = [] *)}}}}}} {position {DDR3.bsv 132 11}}
Interface {DDR3::DDR3_Controller#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR3::DDR3_Pins#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr3 {{(* prefix = "" *)}}} {interface {DDR3::DDR3_User#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR3.bsv 143 11}}
Interface {DDR3::VDDR3_User_Xilinx#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action app_addr Bit#(ddr3addrsize) {{(* ports = ["i"] *)}}}} {method {Action app_cmd Bit#(3) {{(* ports = ["i"] *)}}}} {method {Action app_en Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_data Bit#(ddr3datasize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_end Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_mask Bit#(ddr3besize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_wren Bool {{(* ports = ["i"] *)}}}} {method {Bit#(ddr3datasize) app_rd_data {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_end {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_valid {} {{(* ports = [] *)}}}} {method {Bool app_rdy {} {{(* ports = [] *)}}}} {method {Bool app_wdf_rdy {} {{(* ports = [] *)}}}}}} {position {DDR3.bsv 151 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {DDR3::VDDR3_Controller_Xilinx#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR3::DDR3_Pins#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr3 {{(* prefix = "" *)}}} {interface {DDR3::VDDR3_User_Xilinx#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR3.bsv 169 11}}
Struct Video::RGB888 {members {{Bit#(8) red {width 8}} {Bit#(8) green {width 8}} {Bit#(8) blue {width 8}}}} {width 24} {position {Video.bsv 33 3}}
Struct Video::CrYCb444 {members {{Bit#(8) cr {width 8}} {Bit#(8) y {width 8}} {Bit#(8) cb {width 8}}}} {width 24} {position {Video.bsv 39 3}}
Struct Video::CrYCbY422 {members {{Bit#(8) c {width 8}} {Bit#(8) y {width 8}}}} {width 16} {position {Video.bsv 44 3}}
Struct Video::SyncDescriptor {members {{Integer active} {Integer fporch} {Integer sync} {Integer bporch}}} {position {Video.bsv 51 3}}
Struct Video::VideoTiming {members {{Video::SyncDescriptor h} {Video::SyncDescriptor v}}} {position {Video.bsv 56 3}}
Struct {Video::PixelData#(type d)} polymorphic {members {{Bit#(1) vsync {width 1}} {Bit#(1) hsync {width 1}} {Bit#(1) dataen {width 1}} {d data}}} {position {Video.bsv 191 3}}
Alias Video::SyncData Video::PixelData#(Bit#(0)) {position {Video.bsv 193 29}}
Struct Video::CSAdderIn {members {{Bit#(25) a {width 25}} {Bit#(25) b {width 25}} {Bit#(25) c {width 25}} {Bit#(25) d {width 25}} {Video::PixelData#(Bit#(0)) sync {width 3}}}} {width 103} {position {Video.bsv 204 3}}
Interface Video::CSAdder {members {{interface GetPut::Put#(Video::CSAdderIn) in {}} {interface GetPut::Get#(Video::PixelData#(Bit#(8))) out {}}}} {position {Video.bsv 207 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct Video::CSMultIn {members {{Bit#(17) a {width 17}} {Bit#(8) b {width 8}} {Video::PixelData#(Bit#(0)) sync {width 3}}}} {width 28} {position {Video.bsv 301 3}}
Interface Video::CSMult {members {{interface GetPut::Put#(Video::CSMultIn) in {}} {interface GetPut::Get#(Video::PixelData#(Bit#(25))) out {}}}} {position {Video.bsv 304 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Video::CSMacc {members {{interface GetPut::Put#(Video::PixelData#(Bit#(24))) in {}} {interface GetPut::Get#(Video::PixelData#(Bit#(8))) out {}}}} {position {Video.bsv 440 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Video::RGB888toCrYCbY422 {members {{interface GetPut::Put#(Video::PixelData#(Video::RGB888)) rgb {}} {interface GetPut::Get#(Video::PixelData#(Video::CrYCbY422)) crycby {}}}} {position {Video.bsv 550 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Video::SyncGenerator {members {{method {Action tick {} {{(* ports = [] *)}}}} {method {Bool preedge {} {{(* ports = [] *)}}}} {method {Bool out_n {} {{(* ports = [] *)}}}} {method {Bool out {} {{(* ports = [] *)}}}} {method {Bool active {} {{(* ports = [] *)}}}}}} {position {Video.bsv 680 11}}
Struct DDR4::DDR4_Configure {members {{Bool simulation {width 1}} {Integer reads_in_flight}}} {position {DDR4.bsv 43 3}}
Struct {DDR4::DDR4Request#(numeric type addrwidth, numeric type datawidth, numeric type bewidth)} polymorphic {members {{Bit#(bewidth) byteen} {Bit#(addrwidth) address} {Bit#(datawidth) data}}} {position {DDR4.bsv 56 3}}
Struct {DDR4::DDR4Response#(numeric type datawidth)} polymorphic {members {{Bit#(datawidth) data}}} {position {DDR4.bsv 60 3}}
Interface {DDR4::DDR4_Pins#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{method {Bit#(1) act_n {} {{(* ports = [] *)} {(* result = "ACT_N" *)} {(* prefix = "" *)}}}} {method {Bit#(rowwidth) a {} {{(* ports = [] *)} {(* result = "A" *)} {(* prefix = "" *)}}}} {method {Bit#(bankwidth) ba {} {{(* ports = [] *)} {(* result = "BA" *)} {(* prefix = "" *)}}}} {method {Bit#(bankgroupwidth) bg {} {{(* ports = [] *)} {(* result = "BG" *)} {(* prefix = "" *)}}}} {method {Bit#(clkwidth) ck_c {} {{(* ports = [] *)} {(* result = "CK_C" *)} {(* prefix = "" *)}}}} {method {Bit#(clkwidth) ck_t {} {{(* ports = [] *)} {(* result = "CK_T" *)} {(* prefix = "" *)}}}} {method {Bit#(ckewidth) cke {} {{(* ports = [] *)} {(* result = "CKE" *)} {(* prefix = "" *)}}}} {method {Bit#(cswidth) cs_n {} {{(* ports = [] *)} {(* result = "CS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) odt {} {{(* ports = [] *)} {(* result = "ODT" *)} {(* prefix = "" *)}}}} {method {Bit#(1) reset_n {} {{(* ports = [] *)} {(* result = "RESET_N" *)} {(* prefix = "" *)}}}} {interface Inout#(Bit#(bewidth)) dm_dbi_n {{(* prefix = "DM_DBI_N" *)}}} {interface Inout#(Bit#(datawidth)) dq {{(* prefix = "DQ" *)}}} {interface Inout#(Bit#(bewidth)) dqs_c {{(* prefix = "DQS_C" *)}}} {interface Inout#(Bit#(bewidth)) dqs_t {{(* prefix = "DQS_T" *)}}}}} {position {DDR4.bsv 103 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface {DDR4::DDR4_User#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset_n {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action request {Bit#(ddr4addrsize) {Bit#(TMul#(ddr4besize, ddr4beats))} {Bit#(TMul#(ddr4datasize, ddr4beats))}} {{(* ports = ["addr", "mask", "data"] *)}}}} {method {{ActionValue#(Bit#(TMul#(ddr4datasize, ddr4beats)))} read_data {} {{(* ports = [] *)}}}}}} {position {DDR4.bsv 134 11}}
Interface {DDR4::DDR4_Controller#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR4::DDR4_Pins#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr4 {{(* prefix = "" *)}}} {interface {DDR4::DDR4_User#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR4.bsv 145 11}}
Interface {DDR4::VDDR4_User_Xilinx#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action app_addr Bit#(ddr4addrsize) {{(* ports = ["i"] *)}}}} {method {Action app_cmd Bit#(3) {{(* ports = ["i"] *)}}}} {method {Action app_en Bool {{(* ports = ["i"] *)}}}} {method {Action app_hi_pri Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_data Bit#(ddr4datasize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_end Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_mask Bit#(ddr4besize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_wren Bool {{(* ports = ["i"] *)}}}} {method {Bit#(ddr4datasize) app_rd_data {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_end {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_valid {} {{(* ports = [] *)}}}} {method {Bool app_rdy {} {{(* ports = [] *)}}}} {method {Bool app_wdf_rdy {} {{(* ports = [] *)}}}} {method {Bit#(512) dbg_bus {} {{(* ports = [] *)}}}}}} {position {DDR4.bsv 153 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {DDR4::VDDR4_Controller_Xilinx#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR4::DDR4_Pins#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr4 {{(* prefix = "" *)}}} {interface {DDR4::VDDR4_User_Xilinx#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR4.bsv 173 11}}
Struct I2C::I2CRequest {members {{Bool write {width 1}} {Bit#(7) slaveaddr {width 7}} {Bit#(8) address {width 8}} {Bit#(8) data {width 8}}}} {width 24} {position {I2C.bsv 48 3}}
Struct I2C::I2CResponse {members {{Bit#(8) data {width 8}}}} {width 8} {position {I2C.bsv 52 3}}
Enum XilinxClocks::State {members {Restart WaitLock WaitStart Address Read Modify Write WaitWriteReady}} {width 3} {position {XilinxClocks.bsv 41 3}}
Interface I2C::I2C_Pins {members {{interface Inout#(Bit#(1)) sda {{(* prefix = "SDA" *)}}} {interface Inout#(Bit#(1)) scl {{(* prefix = "SCL" *)}}}}} {position {I2C.bsv 68 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface I2C::I2C {members {{interface I2C::I2C_Pins i2c {{(* prefix = "" *)}}} {interface {ClientServer::Server#(I2C::I2CRequest, I2C::I2CResponse)} user {}}}} {position {I2C.bsv 75 11}}
Interface {I2C::I2CController#(numeric type n)} polymorphic {members {{interface I2C::I2C_Pins i2c {{(* prefix = "" *)}}} {method {{Vector::Vector#(n, ClientServer::Server#(I2C::I2CRequest, I2C::I2CResponse))} users {} {}}}}} {position {I2C.bsv 81 11}}
Interface PTMClocks::OutputBit {members {{method {Bit#(1) out {} {{(* ports = [] *)}}}}}} {position {PTMClocks.bsv 12 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface PTMClocks::EnabledClock {members {{interface Clock clock_out {}}}} {position {PTMClocks.bsv 32 11}}
Alias ClkCtrlServer::ClkCtrlCycleStamp Bit#(64) {position {ClkCtrlServer.bsv 13 18}}
Alias ClkCtrlServer::EdgeCount Bit#(30) {position {ClkCtrlServer.bsv 23 18}}
TaggedUnion ClkCtrlServer::ClkCtrlReq {members {{Bit#(30) Edges {width 30}} {void Query {width 0}} {void Stop {width 0}} {void Resume {width 0}}}} {width 32} {position {ClkCtrlServer.bsv 30 3}}
Struct ClkCtrlServer::ClkCtrlResp {members {{Bit#(64) cycle {width 64}} {Bool running {width 1}} {Bool free_running {width 1}} {Bit#(30) edges {width 30}}}} {width 96} {position {ClkCtrlServer.bsv 37 3}}
Interface ClkCtrlServer::ClkCtrlServerCore {members {{interface GetPut::Put#(ClkCtrlServer::ClkCtrlReq) cmd {}} {interface GetPut::GetS#(ClkCtrlServer::ClkCtrlResp) status {}} {method {Action preedge Bool {{(* ports = ["val"] *)} {(* always_enabled  *)}}}} {method {Bool allow_edge {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {ClkCtrlServer.bsv 41 11}}
Interface ClkCtrlServer::ClkCtrlServerWithCClk {members {{interface GetPut::Put#(Bit#(32)) rx {}} {interface GetPut::Get#(Bit#(32)) tx {}} {method {Action preedge Bool {{(* ports = ["val"] *)} {(* always_enabled  *)}}}} {method {Bool allow_edge {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {ClkCtrlServer.bsv 51 11}}
Interface ClkCtrlServer::ClkCtrlServer {members {{interface GetPut::Put#(Bit#(32)) rx {}} {interface GetPut::Get#(Bit#(32)) tx {}} {interface Clock cclk {}} {interface Reset crst {}}}} {position {ClkCtrlServer.bsv 61 11}}
Struct I2C::I2CRequest {members {{Bool write {width 1}} {Bit#(7) slaveaddr {width 7}} {Bit#(8) address {width 8}} {Bit#(8) data {width 8}}}} {width 24} {position {I2C.bsv 48 3}}
Struct I2C::I2CResponse {members {{Bit#(8) data {width 8}}}} {width 8} {position {I2C.bsv 52 3}}
Interface I2C::I2C_Pins {members {{interface Inout#(Bit#(1)) sda {{(* prefix = "SDA" *)}}} {interface Inout#(Bit#(1)) scl {{(* prefix = "SCL" *)}}}}} {position {I2C.bsv 68 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface I2C::I2C {members {{interface I2C::I2C_Pins i2c {{(* prefix = "" *)}}} {interface {ClientServer::Server#(I2C::I2CRequest, I2C::I2CResponse)} user {}}}} {position {I2C.bsv 75 11}}
Interface {I2C::I2CController#(numeric type n)} polymorphic {members {{interface I2C::I2C_Pins i2c {{(* prefix = "" *)}}} {method {{Vector::Vector#(n, ClientServer::Server#(I2C::I2CRequest, I2C::I2CResponse))} users {} {}}}}} {position {I2C.bsv 81 11}}
Enum RS232::Parity {members {NONE ODD EVEN}} {width 2} {position {RS232.bsv 72 6}}
Enum RS232::StopBits {members {STOP_1 STOP_1_5 STOP_2}} {width 2} {position {RS232.bsv 78 6}}
Interface RS232::RS232 {members {{method {Action sin Bit#(1) {{(* ports = ["SIN"] *)} {(* prefix = "" *)}}}} {method {Bit#(1) sout {} {{(* ports = [] *)} {(* result = "SOUT" *)} {(* prefix = "" *)}}}}}} {position {RS232.bsv 84 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface RS232::BaudGenerator {members {{method {Action clock_enable {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool baud_tick_16x {} {{(* ports = [] *)}}}} {method {Bool baud_tick_2x {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 93 11}}
Interface {RS232::InputFilter#(numeric type size, type a)} polymorphic {members {{method {Action clock_enable {} {{(* ports = [] *)}}}} {method {a _read {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 100 11}}
Interface {RS232::EdgeDetector#(type a)} polymorphic {members {{method {Bool rising {} {{(* ports = [] *)}}}} {method {Bool falling {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 106 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {RS232::Synchronizer#(type a)} polymorphic {members {{method {Action _write a {{(* ports = ["x"] *)}}}} {method {a _read {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 112 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {RS232::InputMovingFilter#(numeric type width, numeric type threshold, type a)} polymorphic {members {{method {Action sample {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {a _read {} {{(* ports = [] *)}}}}}} {position {RS232.bsv 117 11}}
Interface {RS232::UART#(numeric type depth)} polymorphic {members {{interface RS232::RS232 rs232 {{(* prefix = "" *)}}} {interface GetPut::Get#(Bit#(8)) tx {}} {interface GetPut::Put#(Bit#(8)) rx {}}}} {position {RS232.bsv 123 11}}
Struct DDR3::DDR3_Configure {members {{Bool simulation {width 1}} {Integer reads_in_flight}}} {position {DDR3.bsv 42 3}}
Struct {DDR3::DDR3Request#(numeric type addrwidth, numeric type datawidth, numeric type bewidth)} polymorphic {members {{Bit#(bewidth) byteen} {Bit#(addrwidth) address} {Bit#(datawidth) data}}} {position {DDR3.bsv 55 3}}
Struct {DDR3::DDR3Response#(numeric type datawidth)} polymorphic {members {{Bit#(datawidth) data}}} {position {DDR3.bsv 59 3}}
Interface {DDR3::DDR3_Pins#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{method {Bit#(clkwidth) clk_p {} {{(* ports = [] *)} {(* result = "CLK_P" *)} {(* prefix = "" *)}}}} {method {Bit#(clkwidth) clk_n {} {{(* ports = [] *)} {(* result = "CLK_N" *)} {(* prefix = "" *)}}}} {method {Bit#(rowwidth) a {} {{(* ports = [] *)} {(* result = "A" *)} {(* prefix = "" *)}}}} {method {Bit#(bankwidth) ba {} {{(* ports = [] *)} {(* result = "BA" *)} {(* prefix = "" *)}}}} {method {Bit#(1) ras_n {} {{(* ports = [] *)} {(* result = "RAS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) cas_n {} {{(* ports = [] *)} {(* result = "CAS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) we_n {} {{(* ports = [] *)} {(* result = "WE_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) reset_n {} {{(* ports = [] *)} {(* result = "RESET_N" *)} {(* prefix = "" *)}}}} {method {Bit#(cswidth) cs_n {} {{(* ports = [] *)} {(* result = "CS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(odtwidth) odt {} {{(* ports = [] *)} {(* result = "ODT" *)} {(* prefix = "" *)}}}} {method {Bit#(ckewidth) cke {} {{(* ports = [] *)} {(* result = "CKE" *)} {(* prefix = "" *)}}}} {method {Bit#(bewidth) dm {} {{(* ports = [] *)} {(* result = "DM" *)} {(* prefix = "" *)}}}} {interface Inout#(Bit#(datawidth)) dq {{(* prefix = "DQ" *)}}} {interface Inout#(Bit#(bewidth)) dqs_p {{(* prefix = "DQS_P" *)}}} {interface Inout#(Bit#(bewidth)) dqs_n {{(* prefix = "DQS_N" *)}}}}} {position {DDR3.bsv 99 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface {DDR3::DDR3_User#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset_n {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action request {Bit#(ddr3addrsize) {Bit#(TMul#(ddr3besize, ddr3beats))} {Bit#(TMul#(ddr3datasize, ddr3beats))}} {{(* ports = ["addr", "mask", "data"] *)}}}} {method {{ActionValue#(Bit#(TMul#(ddr3datasize, ddr3beats)))} read_data {} {{(* ports = [] *)}}}}}} {position {DDR3.bsv 132 11}}
Interface {DDR3::DDR3_Controller#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR3::DDR3_Pins#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr3 {{(* prefix = "" *)}}} {interface {DDR3::DDR3_User#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR3.bsv 143 11}}
Interface {DDR3::VDDR3_User_Xilinx#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action app_addr Bit#(ddr3addrsize) {{(* ports = ["i"] *)}}}} {method {Action app_cmd Bit#(3) {{(* ports = ["i"] *)}}}} {method {Action app_en Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_data Bit#(ddr3datasize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_end Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_mask Bit#(ddr3besize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_wren Bool {{(* ports = ["i"] *)}}}} {method {Bit#(ddr3datasize) app_rd_data {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_end {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_valid {} {{(* ports = [] *)}}}} {method {Bool app_rdy {} {{(* ports = [] *)}}}} {method {Bool app_wdf_rdy {} {{(* ports = [] *)}}}}}} {position {DDR3.bsv 151 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {DDR3::VDDR3_Controller_Xilinx#(numeric type ddr3addrsize, numeric type ddr3datasize, numeric type ddr3besize, numeric type ddr3beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR3::DDR3_Pins#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr3 {{(* prefix = "" *)}}} {interface {DDR3::VDDR3_User_Xilinx#(ddr3addrsize, ddr3datasize, ddr3besize, ddr3beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR3.bsv 169 11}}
Struct DDR4::DDR4_Configure {members {{Bool simulation {width 1}} {Integer reads_in_flight}}} {position {DDR4.bsv 43 3}}
Struct {DDR4::DDR4Request#(numeric type addrwidth, numeric type datawidth, numeric type bewidth)} polymorphic {members {{Bit#(bewidth) byteen} {Bit#(addrwidth) address} {Bit#(datawidth) data}}} {position {DDR4.bsv 56 3}}
Struct {DDR4::DDR4Response#(numeric type datawidth)} polymorphic {members {{Bit#(datawidth) data}}} {position {DDR4.bsv 60 3}}
Interface {DDR4::DDR4_Pins#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{method {Bit#(1) act_n {} {{(* ports = [] *)} {(* result = "ACT_N" *)} {(* prefix = "" *)}}}} {method {Bit#(rowwidth) a {} {{(* ports = [] *)} {(* result = "A" *)} {(* prefix = "" *)}}}} {method {Bit#(bankwidth) ba {} {{(* ports = [] *)} {(* result = "BA" *)} {(* prefix = "" *)}}}} {method {Bit#(bankgroupwidth) bg {} {{(* ports = [] *)} {(* result = "BG" *)} {(* prefix = "" *)}}}} {method {Bit#(clkwidth) ck_c {} {{(* ports = [] *)} {(* result = "CK_C" *)} {(* prefix = "" *)}}}} {method {Bit#(clkwidth) ck_t {} {{(* ports = [] *)} {(* result = "CK_T" *)} {(* prefix = "" *)}}}} {method {Bit#(ckewidth) cke {} {{(* ports = [] *)} {(* result = "CKE" *)} {(* prefix = "" *)}}}} {method {Bit#(cswidth) cs_n {} {{(* ports = [] *)} {(* result = "CS_N" *)} {(* prefix = "" *)}}}} {method {Bit#(1) odt {} {{(* ports = [] *)} {(* result = "ODT" *)} {(* prefix = "" *)}}}} {method {Bit#(1) reset_n {} {{(* ports = [] *)} {(* result = "RESET_N" *)} {(* prefix = "" *)}}}} {interface Inout#(Bit#(bewidth)) dm_dbi_n {{(* prefix = "DM_DBI_N" *)}}} {interface Inout#(Bit#(datawidth)) dq {{(* prefix = "DQ" *)}}} {interface Inout#(Bit#(bewidth)) dqs_c {{(* prefix = "DQS_C" *)}}} {interface Inout#(Bit#(bewidth)) dqs_t {{(* prefix = "DQS_T" *)}}}}} {position {DDR4.bsv 103 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface {DDR4::DDR4_User#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset_n {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action request {Bit#(ddr4addrsize) {Bit#(TMul#(ddr4besize, ddr4beats))} {Bit#(TMul#(ddr4datasize, ddr4beats))}} {{(* ports = ["addr", "mask", "data"] *)}}}} {method {{ActionValue#(Bit#(TMul#(ddr4datasize, ddr4beats)))} read_data {} {{(* ports = [] *)}}}}}} {position {DDR4.bsv 134 11}}
Interface {DDR4::DDR4_Controller#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR4::DDR4_Pins#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr4 {{(* prefix = "" *)}}} {interface {DDR4::DDR4_User#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR4.bsv 145 11}}
Interface {DDR4::VDDR4_User_Xilinx#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface Clock clock {}} {interface Reset reset {}} {method {Bool init_done {} {{(* ports = [] *)}}}} {method {Action app_addr Bit#(ddr4addrsize) {{(* ports = ["i"] *)}}}} {method {Action app_cmd Bit#(3) {{(* ports = ["i"] *)}}}} {method {Action app_en Bool {{(* ports = ["i"] *)}}}} {method {Action app_hi_pri Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_data Bit#(ddr4datasize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_end Bool {{(* ports = ["i"] *)}}}} {method {Action app_wdf_mask Bit#(ddr4besize) {{(* ports = ["i"] *)}}}} {method {Action app_wdf_wren Bool {{(* ports = ["i"] *)}}}} {method {Bit#(ddr4datasize) app_rd_data {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_end {} {{(* ports = [] *)}}}} {method {Bool app_rd_data_valid {} {{(* ports = [] *)}}}} {method {Bool app_rdy {} {{(* ports = [] *)}}}} {method {Bool app_wdf_rdy {} {{(* ports = [] *)}}}} {method {Bit#(512) dbg_bus {} {{(* ports = [] *)}}}}}} {position {DDR4.bsv 153 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {DDR4::VDDR4_Controller_Xilinx#(numeric type ddr4addrsize, numeric type ddr4datasize, numeric type ddr4besize, numeric type ddr4beats, numeric type datawidth, numeric type bewidth, numeric type rowwidth, numeric type colwidth, numeric type bankwidth, numeric type bankgroupwidth, numeric type rankwidth, numeric type clkwidth, numeric type cswidth, numeric type ckewidth, numeric type odtwidth)} polymorphic {members {{interface {DDR4::DDR4_Pins#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} ddr4 {{(* prefix = "" *)}}} {interface {DDR4::VDDR4_User_Xilinx#(ddr4addrsize, ddr4datasize, ddr4besize, ddr4beats, datawidth, bewidth, rowwidth, colwidth, bankwidth, bankgroupwidth, rankwidth, clkwidth, cswidth, ckewidth, odtwidth)} user {{(* prefix = "" *)}}}}} {position {DDR4.bsv 173 11}}
Alias PCIE::DWAddress Bit#(30) {position {PCIE.bsv 31 26}}
Alias PCIE::DWAddress64 Bit#(62) {position {PCIE.bsv 32 26}}
Alias CacheCore::Offset Bit#(3) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 98 28}}
Alias PCIE::BusNumber Bit#(8) {position {PCIE.bsv 34 26}}
Alias PCIE::DevNumber Bit#(5) {position {PCIE.bsv 35 26}}
Alias PCIE::FuncNumber Bit#(3) {position {PCIE.bsv 36 26}}
Alias PCIE::TLPLength Bit#(10) {position {PCIE.bsv 38 26}}
Alias PCIE::TLPFirstDWBE Bit#(4) {position {PCIE.bsv 39 26}}
Alias PCIE::TLPLastDWBE Bit#(4) {position {PCIE.bsv 40 26}}
Alias PCIE::TLPTag Bit#(8) {position {PCIE.bsv 41 26}}
Alias PCIE::TLPLowerAddr Bit#(7) {position {PCIE.bsv 42 26}}
Alias PCIE::TLPByteCount Bit#(12) {position {PCIE.bsv 43 26}}
Alias PCIE::TLPRegNum Bit#(10) {position {PCIE.bsv 44 26}}
Alias PCIE::DWCount Bit#(11) {position {PCIE.bsv 46 26}}
Alias PCIE::ByteCount Bit#(13) {position {PCIE.bsv 47 26}}
Struct {PCIE::TLPData#(numeric type bytes)} polymorphic {members {{Bool sof {width 1}} {Bool eof {width 1}} {Bit#(7) hit {width 7}} {Bit#(bytes) be} {{Bit#(TMul#(bytes, 8))} data}}} {position {PCIE.bsv 55 3}}
Enum PCIE::TLPAttrIDBasedOrdering {members {DEFAULT_ORDERING ID_BASED_ORDERING}} {width 1} {position {PCIE.bsv 71 6}}
Enum PCIE::TLPAttrRelaxedOrdering {members {STRICT_ORDERING RELAXED_ORDERING}} {width 1} {position {PCIE.bsv 76 6}}
Enum PCIE::TLPAttrNoSnoop {members {SNOOPING_REQD NO_SNOOPING_REQD}} {width 1} {position {PCIE.bsv 81 6}}
Enum PCIE::TLPPoison {members {NOT_POISONED POISONED}} {width 1} {position {PCIE.bsv 86 6}}
Enum PCIE::TLPDigest {members {NO_DIGEST_PRESENT DIGEST_PRESENT}} {width 1} {position {PCIE.bsv 91 6}}
Enum PCIE::TLPTrafficClass {members {TRAFFIC_CLASS_0 TRAFFIC_CLASS_1 TRAFFIC_CLASS_2 TRAFFIC_CLASS_3 TRAFFIC_CLASS_4 TRAFFIC_CLASS_5 TRAFFIC_CLASS_6 TRAFFIC_CLASS_7}} {width 3} {position {PCIE.bsv 102 6}}
Enum PCIE::TLPPacketType {members {MEMORY_READ_WRITE MEMORY_READ_LOCKED IO_REQUEST UNKNOWN_TYPE_3 CONFIG_0_READ_WRITE CONFIG_1_READ_WRITE UNKNOWN_TYPE_6 UNKNOWN_TYPE_7 UNKNOWN_TYPE_8 UNKNOWN_TYPE_9 COMPLETION COMPLETION_LOCKED UNKNOWN_TYPE_12 UNKNOWN_TYPE_13 UNKNOWN_TYPE_14 UNKNOWN_TYPE_15 MSG_ROUTED_TO_ROOT MSG_ROUTED_BY_ADDR MSG_ROUTED_BY_ID MSG_ROOT_BROADCAST MSG_LOCAL MSG_GATHER UNKNOWN_TYPE_22 UNKNOWN_TYPE_23 UNKNOWN_TYPE_24 UNKNOWN_TYPE_25 UNKNOWN_TYPE_26 UNKNOWN_TYPE_27 UNKNOWN_TYPE_28 UNKNOWN_TYPE_29 UNKNOWN_TYPE_30 UNKNOWN_TYPE_31}} {width 5} {position {PCIE.bsv 137 6}}
Enum PCIE::TLPPacketFormat {members {MEM_READ_3DW_NO_DATA MEM_READ_4DW_NO_DATA MEM_WRITE_3DW_DATA MEM_WRITE_4DW_DATA}} {width 2} {position {PCIE.bsv 144 6}}
Enum PCIE::TLPCompletionStatus {members {SUCCESSFUL_COMPLETION UNSUPPORTED_REQUEST CONFIG_REQ_RETRY_STATUS UNKNOWN_STATUS_3 COMPLETER_ABORT UNKNOWN_STATUS_5 UNKNOWN_STATUS_6 UNKNOWN_STATUS_7}} {width 3} {position {PCIE.bsv 155 6}}
Enum PCIE::TLPByteCountModified {members {BYTE_COUNT_ORIGINAL BYTE_COUNT_MODIFIED}} {width 1} {position {PCIE.bsv 160 6}}
Enum PCIE::TLPAddressType {members {DEFAULT_UNTRANSLATED TRANSLATION_REQUEST TRANSLATED RESERVED}} {width 2} {position {PCIE.bsv 167 6}}
Enum PCIE::MSIInterruptCode {members {ASSERT_INTA ASSERT_INTB ASSERT_INTC ASSERT_INTD DEASSERT_INTA DEASSERT_INTB DEASSERT_INTC DEASSERT_INTD}} {width 3} {position {PCIE.bsv 178 6}}
Enum PCIE::MSIPowerMgtCode {members {UNKNOWN_CODE_0 UNKNOWN_CODE_1 UNKNOWN_CODE_2 UNKNOWN_CODE_3 PM_ACTIVE_STATE_NAK UNKNOWN_CODE_5 UNKNOWN_CODE_6 UNKNOWN_CODE_7 PM_PME PM_TURN_OFF UNKNOWN_CODE_10 PME_TO_ACK UNKNOWN_CODE_12 UNKNOWN_CODE_13 UNKNOWN_CODE_14 UNKNOWN_CODE_15}} {width 4} {position {PCIE.bsv 197 6}}
Enum PCIE::MSIErrorCode {members {ERR_COR ERR_NONFATAL UNKNOWN_ERR_2 ERR_FATAL}} {width 2} {position {PCIE.bsv 204 6}}
Enum PCIE::MSIHotPlugCode {members {ATTN_INDICATOR_OFF ATTN_INDICATOR_ON UNKNOWN_CODE_2 ATTN_INDICATOR_BLINK POWER_INDICATOR_OFF POWER_INDICATOR_ON UNKNOWN_CODE_6 POWER_INDICATOR_BLINK ATTN_BUTTON_PRESSED UNKNOWN_CODE_9 UNKNOWN_CODE_10 UNKNOWN_CODE_11 UNKNOWN_CODE_12 UNKNOWN_CODE_13 UNKNOWN_CODE_14 UNKNOWN_CODE_15}} {width 4} {position {PCIE.bsv 223 6}}
TaggedUnion PCIE::TLPMessageCode {members {{void Unlock {width 0}} {PCIE::MSIPowerMgtCode PowerManagement {width 4}} {PCIE::MSIInterruptCode Interrupt {width 3}} {PCIE::MSIErrorCode Error {width 2}} {PCIE::MSIHotPlugCode HotPlug {width 4}} {void SlotPower {width 0}} {void VendorType0 {width 0}} {void VendorType1 {width 0}}}} {width 8} {position {PCIE.bsv 234 6}}
Struct PCIE::PciId {members {{Bit#(8) bus {width 8}} {Bit#(5) dev {width 5}} {Bit#(3) func {width 3}}}} {width 16} {position {PCIE.bsv 270 6}}
Enum PCIE::FlowControlInfoSelect {members {RECEIVE_BUFFER_AVAILABLE_SPACE RECEIVE_CREDITS_GRANTED RECEIVE_CREDITS_CONSUMED UNKNOWN_3 TRANSMIT_USER_CREDITS_AVAIALBE TRANSMIT_CREDIT_LIMIT TRANSMIT_CREDITS_CONSUMED UNKNOWN_7}} {width 3} {position {PCIE.bsv 290 6}}
Struct PCIE::PCIEParams {members {{Bool fast_train_sim_only {width 1}} {Real clock_period}}} {position {PCIE.bsv 295 6}}
Enum PCIE::BARAperture {members {APERTURE_128B APERTURE_256B APERTURE_512B APERTURE_1K APERTURE_2K APERTURE_4K APERTURE_8K APERTURE_16K APERTURE_32K APERTURE_64K APERTURE_128K APERTURE_256K APERTURE_512K APERTURE_1M APERTURE_2M APERTURE_4M APERTURE_8M APERTURE_16M APERTURE_32M APERTURE_64M APERTURE_128M APERTURE_256M APERTURE_512M APERTURE_1G APERTURE_2G APERTURE_4G APERTURE_8G APERTURE_16G APERTURE_32G APERTURE_64G APERTURE_128G APERTURE_256G APERTURE_512G APERTURE_1E APERTURE_2E}} {width 6} {position {PCIE.bsv 341 3}}
Enum PCIE::BARID {members {BAR0 BAR1 BAR2 BAR3 BAR4 BAR5 EXPANSION_ROM}} {width 3} {position {PCIE.bsv 351 6}}
Enum PCIE::TargetFunction {members {PF0 PF1 VF0 VF1 VF2 VF3 VF4 VF5 LAST}} {width 8} {position {PCIE.bsv 363 6}}
Enum PCIE::RequestType {members {MEMORY_READ MEMORY_WRITE IO_READ IO_WRITE MEMORY_FETCH_ADD MEMORY_UNCOND_SWAP MEMORY_COMP_SWAP LOCKED_READ TYPE0_CFG_READ TYPE1_CFG_READ TYPE0_CFG_WRITE TYPE1_CFG_WRITE NOT_VEND_ATS_MESSAGE VENDOR_MESSAGE ATS_MESSAGE RESERVED}} {width 4} {position {PCIE.bsv 382 6}}
Enum PCIE::ErrorCode {members {NORMAL_TERMINATION COMPLETION_POISONED TERMINATED_UR_CA_CRS NO_DATA_OR_HIGH_BYTECNT SAME_TAG START_ADDRESS INVALID_TAG FUNCTION_LEVEL_RESET TIMEOUT}} {width 4} {position {PCIE.bsv 394 3}}
Struct PCIE::TLPMemoryIO3DWHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {Bit#(4) lastbe {width 4}} {Bit#(4) firstbe {width 4}} {Bit#(30) addr {width 30}} {Reserved::ReservedZero#(2) r7 {width 2}} {Bit#(32) data {width 32}}}} {width 128} {position {PCIE.bsv 419 6}}
Struct PCIE::TLPMemory4DWHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {Bit#(4) lastbe {width 4}} {Bit#(4) firstbe {width 4}} {Bit#(62) addr {width 62}} {Reserved::ReservedZero#(2) r7 {width 2}}}} {width 128} {position {PCIE.bsv 465 6}}
Struct PCIE::TLPCompletionHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId cmplid {width 16}} {PCIE::TLPCompletionStatus cstatus {width 3}} {PCIE::TLPByteCountModified bcm {width 1}} {Bit#(12) bytecount {width 12}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {Reserved::ReservedZero#(1) r5 {width 1}} {Bit#(7) loweraddr {width 7}} {Bit#(32) data {width 32}}}} {width 128} {position {PCIE.bsv 514 6}}
Struct PCIE::TLPMSIHeader {members {{Reserved::ReservedZero#(1) r1 {width 1}} {PCIE::TLPPacketFormat format {width 2}} {PCIE::TLPPacketType pkttype {width 5}} {Reserved::ReservedZero#(1) r2 {width 1}} {PCIE::TLPTrafficClass tclass {width 3}} {Reserved::ReservedZero#(4) r3 {width 4}} {PCIE::TLPDigest digest {width 1}} {PCIE::TLPPoison poison {width 1}} {PCIE::TLPAttrRelaxedOrdering relaxed {width 1}} {PCIE::TLPAttrNoSnoop nosnoop {width 1}} {Reserved::ReservedZero#(2) r4 {width 2}} {Bit#(10) length {width 10}} {PCIE::PciId reqid {width 16}} {Bit#(8) tag {width 8}} {PCIE::TLPMessageCode msgcode {width 8}} {Bit#(62) address {width 62}}}} {width 126} {position {PCIE.bsv 560 6}}
Interface {PCIE::PCIE_EXP#(numeric type lanes)} polymorphic {members {{method {Action rxp Bit#(lanes) {{(* ports = ["i"] *)}}}} {method {Action rxn Bit#(lanes) {{(* ports = ["i"] *)}}}} {method {Bit#(lanes) txp {} {{(* ports = [] *)}}}} {method {Bit#(lanes) txn {} {{(* ports = [] *)}}}}}} {position {PCIE.bsv 655 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Typeclass {PCIE::ConnectableWithClocks#(type a, type b)} {members {{{function c#(Empty) f(a x1, b x2, Clock x3, Reset x4, Clock x5, Reset x6)   provisos (IsModule#(c, d))} mkConnectionWithClocks}}} {position {PCIE.bsv 765 11}}
Struct Video::RGB888 {members {{Bit#(8) red {width 8}} {Bit#(8) green {width 8}} {Bit#(8) blue {width 8}}}} {width 24} {position {Video.bsv 33 3}}
Struct Video::CrYCb444 {members {{Bit#(8) cr {width 8}} {Bit#(8) y {width 8}} {Bit#(8) cb {width 8}}}} {width 24} {position {Video.bsv 39 3}}
Struct Video::CrYCbY422 {members {{Bit#(8) c {width 8}} {Bit#(8) y {width 8}}}} {width 16} {position {Video.bsv 44 3}}
Struct Video::SyncDescriptor {members {{Integer active} {Integer fporch} {Integer sync} {Integer bporch}}} {position {Video.bsv 51 3}}
Struct Video::VideoTiming {members {{Video::SyncDescriptor h} {Video::SyncDescriptor v}}} {position {Video.bsv 56 3}}
Struct {Video::PixelData#(type d)} polymorphic {members {{Bit#(1) vsync {width 1}} {Bit#(1) hsync {width 1}} {Bit#(1) dataen {width 1}} {d data}}} {position {Video.bsv 191 3}}
Alias Video::SyncData Video::PixelData#(Bit#(0)) {position {Video.bsv 193 29}}
Struct Video::CSAdderIn {members {{Bit#(25) a {width 25}} {Bit#(25) b {width 25}} {Bit#(25) c {width 25}} {Bit#(25) d {width 25}} {Video::PixelData#(Bit#(0)) sync {width 3}}}} {width 103} {position {Video.bsv 204 3}}
Interface Video::CSAdder {members {{interface GetPut::Put#(Video::CSAdderIn) in {}} {interface GetPut::Get#(Video::PixelData#(Bit#(8))) out {}}}} {position {Video.bsv 207 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct Video::CSMultIn {members {{Bit#(17) a {width 17}} {Bit#(8) b {width 8}} {Video::PixelData#(Bit#(0)) sync {width 3}}}} {width 28} {position {Video.bsv 301 3}}
Interface Video::CSMult {members {{interface GetPut::Put#(Video::CSMultIn) in {}} {interface GetPut::Get#(Video::PixelData#(Bit#(25))) out {}}}} {position {Video.bsv 304 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Video::CSMacc {members {{interface GetPut::Put#(Video::PixelData#(Bit#(24))) in {}} {interface GetPut::Get#(Video::PixelData#(Bit#(8))) out {}}}} {position {Video.bsv 440 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Video::RGB888toCrYCbY422 {members {{interface GetPut::Put#(Video::PixelData#(Video::RGB888)) rgb {}} {interface GetPut::Get#(Video::PixelData#(Video::CrYCbY422)) crycby {}}}} {position {Video.bsv 550 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Video::SyncGenerator {members {{method {Action tick {} {{(* ports = [] *)}}}} {method {Bool preedge {} {{(* ports = [] *)}}}} {method {Bool out_n {} {{(* ports = [] *)}}}} {method {Bool out {} {{(* ports = [] *)}}}} {method {Bool active {} {{(* ports = [] *)}}}}}} {position {Video.bsv 680 11}}

Interface ML507_mig_33_wrapper::DDR2Wires {members {{interface Inout#(Bit#(64)) dq {}} {method {Bit#(13) a {} {{(* ports = [] *)}}}} {method {Bit#(2) ba {} {{(* ports = [] *)}}}} {method {Bit#(1) ras_n {} {{(* ports = [] *)}}}} {method {Bit#(1) cas_n {} {{(* ports = [] *)}}}} {method {Bit#(1) we_n {} {{(* ports = [] *)}}}} {method {Bit#(1) cs_n {} {{(* ports = [] *)}}}} {method {Bit#(1) odt {} {{(* ports = [] *)}}}} {method {Bit#(1) cke {} {{(* ports = [] *)}}}} {method {Bit#(8) dm {} {{(* ports = [] *)}}}} {interface Inout#(Bit#(8)) dqs {}} {interface Inout#(Bit#(8)) dqs_n {}} {method {Bit#(2) ck {} {{(* ports = [] *)}}}} {method {Bit#(2) ck_n {} {{(* ports = [] *)}}}}}} {position {ML507_mig_33_wrapper.bsv 7 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ML507_mig_33_wrapper::Mig33App {members {{method {Action af {Bit#(3) Bit#(31)} {{(* ports = ["cmd", "addr"] *)}}}} {method {Action wdf {Bit#(128) Bit#(16)} {{(* ports = ["data", "mask"] *)}}}} {method {Bit#(128) data {} {{(* ports = [] *)}}}}}} {position {ML507_mig_33_wrapper.bsv 25 11}}
Interface ML507_mig_33_wrapper::Mig33 {members {{interface Clock clk0_tb {}} {interface Reset rst0_tb {}} {interface ML507_mig_33_wrapper::DDR2Wires ddr2 {}} {interface ML507_mig_33_wrapper::Mig33App app {}}}} {position {ML507_mig_33_wrapper.bsv 43 11}}
Alias DDR2Types::DDR2Address Bit#(32) {position {DDR2Types.bsv 9 18}}
Alias DDR2Types::DDR2Data Bit#(64) {position {DDR2Types.bsv 10 18}}
Struct DDR2Types::DDR2ReqCmd {members {{Bool rnw {width 1}} {Bit#(32) addr {width 32}}}} {width 33} {position {DDR2Types.bsv 19 3}}
Struct DDR2Types::DDR2ReqData {members {{Bit#(8) be {width 8}} {Bit#(64) data {width 64}}}} {width 72} {position {DDR2Types.bsv 29 3}}
Interface DDR2Types::DDR2RequestClient {members {{interface GetPut::Get#(DDR2Types::DDR2ReqCmd) command {}} {interface GetPut::Get#(DDR2Types::DDR2ReqData) data {}}}} {position {DDR2Types.bsv 37 11}}
Interface DDR2Types::DDR2Client {members {{interface DDR2Types::DDR2RequestClient request {}} {interface GetPut::Put#(Bit#(64)) response {}}}} {position {DDR2Types.bsv 42 11}}
Interface DDR2Types::DDR2RequestServer {members {{interface GetPut::Put#(DDR2Types::DDR2ReqCmd) command {}} {interface GetPut::Put#(DDR2Types::DDR2ReqData) data {}}}} {position {DDR2Types.bsv 47 11}}
Interface DDR2Types::DDR2Server {members {{interface DDR2Types::DDR2RequestServer request {}} {interface GetPut::Get#(Bit#(64)) response {}}}} {position {DDR2Types.bsv 52 11}}
Interface DDR2Types::SimpleMemory {members {{method {Action request {Bool UInt#(31) Bit#(256) Bit#(32)} {{(* ports = ["write", "addr", "data", "be"] *)}}}} {interface GetPut::Get#(Bit#(256)) readData {}}}} {position {DDR2Types.bsv 105 11}}
Interface ML507_DDR2::DDR2 {members {{interface ML507_mig_33_wrapper::DDR2Wires wires {}} {interface DDR2Types::DDR2Server server {}}}} {position {ML507_DDR2.bsv 15 11}}
Alias ML507_DDR2::MaxPendingReads 8 {position {ML507_DDR2.bsv 20 11}}
Struct ML507_DDR2::DDR2LLReqCmd {members {{Bit#(3) cmd {width 3}} {Bit#(31) addr {width 31}}}} {width 34} {position {ML507_DDR2.bsv 25 3}}
Struct ML507_DDR2::DDR2LLReqData {members {{Bit#(128) data {width 128}} {Bit#(16) be {width 16}}}} {width 144} {position {ML507_DDR2.bsv 30 3}}
Struct ML507_DDR2::DDR2LLReq {members {{Maybe#(ML507_DDR2::DDR2LLReqCmd) cmd {width 35}} {Maybe#(ML507_DDR2::DDR2LLReqData) data {width 145}}}} {width 180} {position {ML507_DDR2.bsv 35 3}}
Interface {ML507_DDR2::Demarshaller#(type a)} polymorphic {members {{interface GetPut::Put#(a) single {}} {interface {GetPut::Get#(Tuple2#(a, a))} double {}}}} {position {ML507_DDR2.bsv 195 11}}
Interface {ML507_DDR2::Marshaller#(type a)} polymorphic {members {{interface {GetPut::Put#(Tuple2#(a, a))} double {}} {interface GetPut::Get#(a) single {}}}} {position {ML507_DDR2.bsv 224 11}}
Interface ML507_DDR2::DDR2 {members {{interface ML507_mig_33_wrapper::DDR2Wires wires {}} {interface DDR2Types::DDR2Server server {}}}} {position {ML507_DDR2.bsv 15 11}}
Alias ML507_DDR2::MaxPendingReads 8 {position {ML507_DDR2.bsv 20 11}}
Struct ML507_DDR2::DDR2LLReqCmd {members {{Bit#(3) cmd {width 3}} {Bit#(31) addr {width 31}}}} {width 34} {position {ML507_DDR2.bsv 25 3}}
Struct ML507_DDR2::DDR2LLReqData {members {{Bit#(128) data {width 128}} {Bit#(16) be {width 16}}}} {width 144} {position {ML507_DDR2.bsv 30 3}}
Struct ML507_DDR2::DDR2LLReq {members {{Maybe#(ML507_DDR2::DDR2LLReqCmd) cmd {width 35}} {Maybe#(ML507_DDR2::DDR2LLReqData) data {width 145}}}} {width 180} {position {ML507_DDR2.bsv 35 3}}
Interface {ML507_DDR2::Demarshaller#(type a)} polymorphic {members {{interface GetPut::Put#(a) single {}} {interface {GetPut::Get#(Tuple2#(a, a))} double {}}}} {position {ML507_DDR2.bsv 195 11}}
Interface {ML507_DDR2::Marshaller#(type a)} polymorphic {members {{interface {GetPut::Put#(Tuple2#(a, a))} double {}} {interface GetPut::Get#(a) single {}}}} {position {ML507_DDR2.bsv 224 11}}
Alias DDR2Types::DDR2Address Bit#(32) {position {DDR2Types.bsv 9 18}}
Alias DDR2Types::DDR2Data Bit#(64) {position {DDR2Types.bsv 10 18}}
Struct DDR2Types::DDR2ReqCmd {members {{Bool rnw {width 1}} {Bit#(32) addr {width 32}}}} {width 33} {position {DDR2Types.bsv 19 3}}
Struct DDR2Types::DDR2ReqData {members {{Bit#(8) be {width 8}} {Bit#(64) data {width 64}}}} {width 72} {position {DDR2Types.bsv 29 3}}
Interface DDR2Types::DDR2RequestClient {members {{interface GetPut::Get#(DDR2Types::DDR2ReqCmd) command {}} {interface GetPut::Get#(DDR2Types::DDR2ReqData) data {}}}} {position {DDR2Types.bsv 37 11}}
Interface DDR2Types::DDR2Client {members {{interface DDR2Types::DDR2RequestClient request {}} {interface GetPut::Put#(Bit#(64)) response {}}}} {position {DDR2Types.bsv 42 11}}
Interface DDR2Types::DDR2RequestServer {members {{interface GetPut::Put#(DDR2Types::DDR2ReqCmd) command {}} {interface GetPut::Put#(DDR2Types::DDR2ReqData) data {}}}} {position {DDR2Types.bsv 47 11}}
Interface DDR2Types::DDR2Server {members {{interface DDR2Types::DDR2RequestServer request {}} {interface GetPut::Get#(Bit#(64)) response {}}}} {position {DDR2Types.bsv 52 11}}
Interface DDR2Types::SimpleMemory {members {{method {Action request {Bool UInt#(31) Bit#(256) Bit#(32)} {{(* ports = ["write", "addr", "data", "be"] *)}}}} {interface GetPut::Get#(Bit#(256)) readData {}}}} {position {DDR2Types.bsv 105 11}}
Interface ML507_mig_33_wrapper::DDR2Wires {members {{interface Inout#(Bit#(64)) dq {}} {method {Bit#(13) a {} {{(* ports = [] *)}}}} {method {Bit#(2) ba {} {{(* ports = [] *)}}}} {method {Bit#(1) ras_n {} {{(* ports = [] *)}}}} {method {Bit#(1) cas_n {} {{(* ports = [] *)}}}} {method {Bit#(1) we_n {} {{(* ports = [] *)}}}} {method {Bit#(1) cs_n {} {{(* ports = [] *)}}}} {method {Bit#(1) odt {} {{(* ports = [] *)}}}} {method {Bit#(1) cke {} {{(* ports = [] *)}}}} {method {Bit#(8) dm {} {{(* ports = [] *)}}}} {interface Inout#(Bit#(8)) dqs {}} {interface Inout#(Bit#(8)) dqs_n {}} {method {Bit#(2) ck {} {{(* ports = [] *)}}}} {method {Bit#(2) ck_n {} {{(* ports = [] *)}}}}}} {position {ML507_mig_33_wrapper.bsv 7 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ML507_mig_33_wrapper::Mig33App {members {{method {Action af {Bit#(3) Bit#(31)} {{(* ports = ["cmd", "addr"] *)}}}} {method {Action wdf {Bit#(128) Bit#(16)} {{(* ports = ["data", "mask"] *)}}}} {method {Bit#(128) data {} {{(* ports = [] *)}}}}}} {position {ML507_mig_33_wrapper.bsv 25 11}}
Interface ML507_mig_33_wrapper::Mig33 {members {{interface Clock clk0_tb {}} {interface Reset rst0_tb {}} {interface ML507_mig_33_wrapper::DDR2Wires ddr2 {}} {interface ML507_mig_33_wrapper::Mig33App app {}}}} {position {ML507_mig_33_wrapper.bsv 43 11}}
Interface XilinxCells::ResetGenIfc {members {{interface Reset gen_rst {}}}} {position {XilinxCells.bsv 235 11}}
Struct XilinxCells::BUFRParams {members {{String bufr_divide} {String sim_device}}} {position {XilinxCells.bsv 260 3}}
Struct XilinxCells::IBUFGParams {members {{String capacitance} {String ibuf_delay_value} {String ibuf_low_pwr} {String iostandard}}} {position {XilinxCells.bsv 363 3}}
Struct XilinxCells::IBUFParams {members {{String capacitance} {String ibuf_delay_value} {String ibuf_low_pwr} {String ifd_delay_value} {String iostandard}}} {position {XilinxCells.bsv 439 3}}
Struct XilinxCells::IBUFDSParams {members {{String capacitance} {String diff_term} {String dqs_bias} {String ibuf_delay_value} {String ibuf_low_pwr} {String ifd_delay_value} {String iostandard}}} {position {XilinxCells.bsv 542 3}}
Struct XilinxCells::IBUFGDSParams {members {{String capacitance} {String diff_term} {String ibuf_delay_value} {String ibuf_low_pwr} {String iostandard}}} {position {XilinxCells.bsv 594 3}}
Struct XilinxCells::IBUFDS_GTXE1Params {members {{String clkcm_cfg} {String clkrcv_trst} {Bit#(10) refclkout_dly {width 10}}}} {position {XilinxCells.bsv 640 3}}
Interface XilinxCells::GTXE1ClockGenIfc {members {{interface Clock gen_clk {}} {interface Clock gen_clk_div2 {}}}} {position {XilinxCells.bsv 650 11}}
Struct XilinxCells::IBUFDS_GTE2Params {members {{String clkcm_cfg} {String clkrcv_trst} {Bit#(2) clkswing_cfg {width 2}}}} {position {XilinxCells.bsv 705 3}}
Interface XilinxCells::GTE2ClockGenIfc {members {{interface Clock gen_clk {}} {interface Clock gen_clk_div2 {}}}} {position {XilinxCells.bsv 715 11}}
Interface XilinxCells::GTE3ClockGenIfc {members {{interface Clock gen_clk {}} {interface Clock gen_clk_div2 {}}}} {position {XilinxCells.bsv 766 11}}
Struct XilinxCells::OBUFParams {members {{String capacitance} {Integer drive} {String iostandard} {String slew}}} {position {XilinxCells.bsv 847 3}}
Struct XilinxCells::OBUFDSParams {members {{String capacitance} {String iostandard} {String slew}}} {position {XilinxCells.bsv 901 3}}
Interface XilinxCells::DiffClock {members {{interface Clock p {}} {interface Clock n {}}}} {position {XilinxCells.bsv 911 11}}
Struct {XilinxCells::ODDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init} {String srtype}}} {position {XilinxCells.bsv 954 6}}
Interface {XilinxCells::ODDR#(type a)} polymorphic {members {{method {a q {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d1 a {{(* ports = ["i"] *)}}}} {method {Action d2 a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 966 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {XilinxCells::IDDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init_q1} {a init_q2} {String srtype}}} {position {XilinxCells.bsv 1093 6}}
Interface {XilinxCells::VIDDR#(type a)} polymorphic {members {{method {a q1 {} {{(* ports = [] *)}}}} {method {a q2 {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 1106 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {XilinxCells::IDDR#(type a)} polymorphic {members {{method {a q1 {} {{(* ports = [] *)}}}} {method {a q2 {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 1115 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxCells::IDELAYCTRL {members {{method {Bool rdy {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 1224 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct XilinxCells::IDELAYParams {members {{String iobdelay_type} {Integer iobdelay_value}}} {position {XilinxCells.bsv 1254 6}}
Interface {XilinxCells::VIDELAY#(type a)} polymorphic {members {{method {Action i a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action inc Bool {{(* ports = ["inc_not_dec"] *)} {(* always_ready  *)}}}} {method {a o {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1263 11}}
Interface {XilinxCells::IDELAY#(type a)} polymorphic {members {{method {Action i a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action inc Bool {{(* ports = ["inc_not_dec"] *)} {(* always_ready  *)}}}} {method {a o {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1272 11}}
Struct XilinxCells::IODELAYParams {members {{String delay_source} {String high_performance_mode} {String idelay_type} {Integer idelay_value} {Integer odelay_value} {Integer refclk_frequency} {String signal_pattern}}} {position {XilinxCells.bsv 1365 6}}
Struct XilinxCells::ClockIODELAYParams {members {{String delay_source} {String high_performance_mode} {String idelay_type} {Integer idelay_value} {Integer odelay_value} {Integer refclk_frequency} {String signal_pattern}}} {position {XilinxCells.bsv 1387 6}}
Interface {XilinxCells::VIODELAY#(type a)} polymorphic {members {{method {Action idatain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action odatain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {a dataout {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action datain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action t Bool {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action inc Bool {{(* ports = ["inc_not_dec"] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1401 11}}
Interface {XilinxCells::IODELAY#(type a)} polymorphic {members {{method {Action idatain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action odatain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {a dataout {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action datain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action t Bool {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action inc Bool {{(* ports = ["inc_not_dec"] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1416 11}}
Struct XilinxCells::PLLParams {members {{String bandwidth} {String clkfbout_deskew_adjust} {String clkout0_deskew_adjust} {String clkout1_deskew_adjust} {String clkout2_deskew_adjust} {String clkout3_deskew_adjust} {String clkout4_deskew_adjust} {String clkout5_deskew_adjust} {Integer clkfbout_mult} {Real clkfbout_phase} {Real clkin1_period} {Real clkin2_period} {Integer clkout0_divide} {Real clkout0_duty_cycle} {Real clkout0_phase} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {String compensation} {Integer divclk_divide} {String en_rel} {String pll_pmcd_mode} {Real ref_jitter} {String reset_on_loss_of_lock} {String rst_deassert_clk}}} {position {XilinxCells.bsv 1666 6}}
Interface XilinxCells::VPLL {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkoutdcm0 {}} {interface Clock clkoutdcm1 {}} {interface Clock clkoutdcm2 {}} {interface Clock clkoutdcm3 {}} {interface Clock clkoutdcm4 {}} {interface Clock clkoutdcm5 {}} {interface Clock clkfbout {}} {interface Clock clkfbdcm {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action clkin1sel Bool {{(* ports = ["select"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action fbin Bool {{(* ports = ["i"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1710 11}}
Interface XilinxCells::PLL {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkoutdcm0 {}} {interface Clock clkoutdcm1 {}} {interface Clock clkoutdcm2 {}} {interface Clock clkoutdcm3 {}} {interface Clock clkoutdcm4 {}} {interface Clock clkoutdcm5 {}} {interface Clock clkfbout {}} {interface Clock clkfbdcm {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action clkin1sel Bool {{(* ports = ["select"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action fbin Bool {{(* ports = ["i"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1733 11}}
Struct XilinxCells::ClockGeneratorParams {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Integer feedback_mul} {Integer feedback_div} {Integer clk0_div} {Real clk0_duty_cycle} {Real clk0_phase} {Bool clk0_buffer {width 1}} {Integer clk1_div} {Real clk1_duty_cycle} {Real clk1_phase} {Bool clk1_buffer {width 1}} {Integer clk2_div} {Real clk2_duty_cycle} {Real clk2_phase} {Bool clk2_buffer {width 1}} {Integer clk3_div} {Real clk3_duty_cycle} {Real clk3_phase} {Bool clk3_buffer {width 1}} {Integer clk4_div} {Real clk4_duty_cycle} {Real clk4_phase} {Bool clk4_buffer {width 1}} {Integer clk5_div} {Real clk5_duty_cycle} {Real clk5_phase} {Bool clk5_buffer {width 1}} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 1978 6}}
Interface XilinxCells::ClockGenerator {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2015 11}}
Interface XilinxCells::MMCME2 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2168 11}}
Interface XilinxCells::MMCME3 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2427 11}}
Interface XilinxCells::VMMCME3 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {interface Clock clkfbout {}} {interface Clock clkfbout_n {}} {interface XilinxCells::MMCM_DRP reconfig {}} {interface XilinxCells::MMCM_CDDC cddc {}} {interface XilinxCells::MMCM_PS phase_shift {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bool clkfb_stopped {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bool clkin_stopped {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action clkin1sel Bool {{(* ports = ["select"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action clkfbin Bit#(1) {{(* ports = ["clk"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2443 11}}
Struct XilinxCells::ClockGenerator6Params {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Real clkfbout_mult_f} {Real clkfbout_phase} {Integer divclk_divide} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Bool clkout4_buffer {width 1}} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Bool clkout5_buffer {width 1}} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Bool clkout6_buffer {width 1}} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 2767 3}}
Interface XilinxCells::ClockGenerator6 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2813 11}}
Struct XilinxCells::ClockGenerator7Params {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Real clkfbout_mult_f} {Real clkfbout_phase} {Integer divclk_divide} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Bool clkout4_buffer {width 1}} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Bool clkout5_buffer {width 1}} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Bool clkout6_buffer {width 1}} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 3042 3}}
Interface XilinxCells::ClockGenerator7 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3088 11}}
Struct XilinxCells::ClockGeneratorUParams {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Real clkfbout_mult_f} {Real clkfbout_phase} {Integer divclk_divide} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Bool clkout4_buffer {width 1}} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Bool clkout5_buffer {width 1}} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Bool clkout6_buffer {width 1}} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 3317 3}}
Interface XilinxCells::ClockGeneratorU {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3363 11}}
Struct XilinxCells::DCMParams {members {{Real clkdv_divide} {Integer clkfx_divide} {Integer clkfx_multiply} {String clkin_divide_by_2} {Real clkin_period} {String clkout_phase_shift} {String clk_feedback} {String dcm_autocalibration} {String dcm_performance_mode} {String deskew_adjust} {String dfs_frequency_mode} {String dll_frequency_mode} {String duty_cycle_correction} {Bit#(16) factory_jf {width 16}} {Integer phase_shift} {String sim_device} {String startup_wait}}} {position {XilinxCells.bsv 3570 6}}
Interface XilinxCells::VDCM {members {{interface Clock clkout0 {}} {interface Clock clkout180 {}} {interface Clock clkout270 {}} {interface Clock clkout2x180 {}} {interface Clock clkout2x {}} {interface Clock clkout90 {}} {interface Clock clkoutdv {}} {interface Clock clkoutfx180 {}} {interface Clock clkoutfx {}} {interface XilinxCells::VDCM_DRP recfg {}} {interface XilinxCells::VDCM_PS phase_shift {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)}}}} {method {Action fbin Bool {{(* ports = ["clkfb"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3594 11}}
Interface XilinxCells::VDCM_DRP {members {{method {Action request {Bool Bit#(7) Bit#(16)} {{(* ports = ["dwe", "daddr", "di"] *)} {(* always_ready  *)}}}} {method {Bit#(16) response {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3612 11}}
Interface XilinxCells::VDCM_PS {members {{method {Action incdec Bool {{(* ports = ["psincdec"] *)} {(* always_ready  *)}}}} {method {Bool done {} {{(* ports = [] *)} {(* always_enabled  *)}}}}}} {position {XilinxCells.bsv 3618 11}}
Interface XilinxCells::DCM {members {{interface Clock clkout0 {}} {interface Clock clkout180 {}} {interface Clock clkout270 {}} {interface Clock clkout2x180 {}} {interface Clock clkout2x {}} {interface Clock clkout90 {}} {interface Clock clkoutdv {}} {interface Clock clkoutfx180 {}} {interface Clock clkoutfx {}} {interface XilinxCells::DCM_DRP recfg {}} {interface XilinxCells::DCM_PS phase_shift {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)}}}} {method {Action fbin Bool {{(* ports = ["clkfb"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3625 11}}
Interface XilinxCells::DCM_DRP {members {{method {Action request {Bool Bit#(7) Bit#(16)} {{(* ports = ["dwe", "daddr", "di"] *)} {(* always_ready  *)}}}} {method {Bit#(16) response {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3643 11}}
Interface XilinxCells::DCM_PS {members {{method {Action incdec Bool {{(* ports = ["psincdec"] *)} {(* always_ready  *)}}}} {method {Bool done {} {{(* ports = [] *)} {(* always_enabled  *)}}}}}} {position {XilinxCells.bsv 3649 11}}
Struct XilinxCells::MMCMParams {members {{String bandwidth} {String clkfbout_use_fine_ps} {String clkout0_use_fine_ps} {String clkout1_use_fine_ps} {String clkout2_use_fine_ps} {String clkout3_use_fine_ps} {String clkout4_cascade} {String clkout4_use_fine_ps} {String clkout5_use_fine_ps} {String clkout6_use_fine_ps} {String clock_hold} {String compensation} {String startup_wait} {Real clkfbout_mult_f} {Real clkfbout_phase} {Real clkin1_period} {Real clkin2_period} {Integer divclk_divide} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Real ref_jitter1} {Real ref_jitter2} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 3877 3}}
Interface XilinxCells::MMCM_DRP {members {{method {Action request {Bool Bit#(7) Bit#(16)} {{(* ports = ["write", "addr", "datain"] *)}}}} {method {Bit#(16) response {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3926 11}}
Interface XilinxCells::MMCM_CDDC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Bool done {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3931 11}}
Interface XilinxCells::MMCM_PS {members {{method {Action incdec Bool {{(* ports = ["psincdec"] *)}}}} {method {Bool done {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3937 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxCells::MMCM {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {interface Clock clkfbout {}} {interface Clock clkfbout_n {}} {interface XilinxCells::MMCM_DRP reconfig {}} {interface XilinxCells::MMCM_PS phase_shift {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bool clkfb_stopped {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bool clkin_stopped {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action clkin1sel Bool {{(* ports = ["select"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action clkfbin Bit#(1) {{(* ports = ["clk"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3942 11}}
Struct XilinxCells::SRL16EParams {members {{Bit#(16) initValue {width 16}}}} {width 16} {position {XilinxCells.bsv 4188 3}}
Interface XilinxCells::VSRL16E {members {{method {Bit#(1) _read {} {{(* ports = [] *)}}}} {method {Action _write Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a0 Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a1 Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a2 Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a3 Bit#(1) {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 4197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxCells::SRL16E {members {{method {Bit#(1) _read {} {{(* ports = [] *)}}}} {method {Action _write Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a Bit#(4) {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 4207 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct XilinxCells::SRLC32EParams {members {{Bit#(32) initValue {width 32}}}} {width 32} {position {XilinxCells.bsv 4260 3}}
Interface XilinxCells::SRLC32E {members {{method {Bit#(1) _read {} {{(* ports = [] *)}}}} {method {Action _write Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a Bit#(5) {{(* ports = ["i"] *)}}}} {method {Bit#(1) cascade {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 4269 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ButtonController::Button {members {{method {Action button Bit#(1) {{(* ports = ["down"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {ButtonController.bsv 13 11}}
Interface ButtonController::ButtonController {members {{method {Bool pressed {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool released {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action setRepeatParams {UInt#(10) UInt#(10)} {{(* ports = ["delay", "interval"] *)} {(* always_ready  *)}}}} {method {Bool repeating {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface ButtonController::Button ifc {{(* prefix = "" *)}}}}} {position {ButtonController.bsv 19 11}}
Interface {DIPSwitch::DIP#(numeric type n)} polymorphic {members {{method {Action switch Bit#(n) {{(* ports = ["setting"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {DIPSwitch.bsv 14 11}}
Interface {DIPSwitch::DIPSwitch#(numeric type n)} polymorphic {members {{method {Bool changed {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(n) _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface DIPSwitch::DIP#(n) ifc {{(* prefix = "" *)}}}}} {position {DIPSwitch.bsv 20 11}}
Interface GPIOController::GPIO {members {{interface Inout#(Bit#(1)) gpio {}}}} {position {GPIOController.bsv 32 11}}
Interface GPIOController::GPIOController {members {{method {Action _write Bit#(1) {{(* ports = ["i"] *)} {(* always_ready  *)}}}} {method {Action drive_out Bool {{(* ports = ["i"] *)} {(* always_ready  *)}}}} {method {Bool read_drive_out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface GPIOController::GPIO ifc {{(* prefix = "" *)}}}}} {position {GPIOController.bsv 37 11}}
Alias LEDController::Time UInt#(16) {position {LEDController.bsv 24 19}}
Alias LEDController::Level UInt#(3) {position {LEDController.bsv 25 19}}
Alias LEDController::Lag UInt#(4) {position {LEDController.bsv 26 19}}
Interface {LEDController::LED#(numeric type n)} polymorphic {members {{method {Bit#(n) out {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {LEDController.bsv 37 11}}
Interface LEDController::LEDController {members {{method {Action setLag UInt#(4) {{(* ports = ["l"] *)} {(* always_ready  *)}}}} {method {Action setPeriod {UInt#(3) UInt#(16) UInt#(3) UInt#(16)} {{(* ports = ["lo_lvl", "lo_time", "hi_lvl", "hi_time"] *)} {(* always_ready  *)}}}} {method {Action setActivity UInt#(16) {{(* ports = ["on_time"] *)} {(* always_ready  *)}}}} {method {Action bump {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface LEDController::LED#(1) ifc {{(* prefix = "" *)}}}}} {position {LEDController.bsv 51 11}}
Interface LCDController::LCD {members {{method {Bit#(4) db {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) e {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) rs {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) rw {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {LCDController.bsv 19 11}}
Interface LCDController::LCDController {members {{method {Action setLine1 {{Vector::Vector#(16, Bit#(8))}} {{(* ports = ["text"] *)} {(* always_ready  *)}}}} {method {Action setLine2 {{Vector::Vector#(16, Bit#(8))}} {{(* ports = ["text"] *)} {(* always_ready  *)}}}} {interface LCDController::LCD ifc {{(* prefix = "" *)}}}}} {position {LCDController.bsv 31 11}}
Struct XilinxCells::BUFRParams {members {{String bufr_divide} {String sim_device}}} {position {XilinxCells.bsv 260 3}}
Struct XilinxCells::IBUFGParams {members {{String capacitance} {String ibuf_delay_value} {String ibuf_low_pwr} {String iostandard}}} {position {XilinxCells.bsv 363 3}}
Struct XilinxCells::IBUFParams {members {{String capacitance} {String ibuf_delay_value} {String ibuf_low_pwr} {String ifd_delay_value} {String iostandard}}} {position {XilinxCells.bsv 439 3}}
Struct XilinxCells::IBUFDSParams {members {{String capacitance} {String diff_term} {String dqs_bias} {String ibuf_delay_value} {String ibuf_low_pwr} {String ifd_delay_value} {String iostandard}}} {position {XilinxCells.bsv 542 3}}
Struct XilinxCells::IBUFGDSParams {members {{String capacitance} {String diff_term} {String ibuf_delay_value} {String ibuf_low_pwr} {String iostandard}}} {position {XilinxCells.bsv 594 3}}
Struct XilinxCells::IBUFDS_GTXE1Params {members {{String clkcm_cfg} {String clkrcv_trst} {Bit#(10) refclkout_dly {width 10}}}} {position {XilinxCells.bsv 640 3}}
Struct XilinxCells::IBUFDS_GTE2Params {members {{String clkcm_cfg} {String clkrcv_trst} {Bit#(2) clkswing_cfg {width 2}}}} {position {XilinxCells.bsv 705 3}}
Struct XilinxCells::OBUFParams {members {{String capacitance} {Integer drive} {String iostandard} {String slew}}} {position {XilinxCells.bsv 847 3}}
Struct XilinxCells::OBUFDSParams {members {{String capacitance} {String iostandard} {String slew}}} {position {XilinxCells.bsv 901 3}}
Interface XilinxCells::DiffClock {members {{interface Clock p {}} {interface Clock n {}}}} {position {XilinxCells.bsv 911 11}}
Struct {XilinxCells::ODDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init} {String srtype}}} {position {XilinxCells.bsv 954 6}}
Interface {XilinxCells::ODDR#(type a)} polymorphic {members {{method {a q {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d1 a {{(* ports = ["i"] *)}}}} {method {Action d2 a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 966 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {XilinxCells::IDDRParams#(type a)} polymorphic {members {{String ddr_clk_edge} {a init_q1} {a init_q2} {String srtype}}} {position {XilinxCells.bsv 1093 6}}
Interface {XilinxCells::IDDR#(type a)} polymorphic {members {{method {a q1 {} {{(* ports = [] *)}}}} {method {a q2 {} {{(* ports = [] *)}}}} {method {Action s Bool {{(* ports = ["i"] *)}}}} {method {Action ce Bool {{(* ports = ["i"] *)}}}} {method {Action d a {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 1115 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxCells::IDELAYCTRL {members {{method {Bool rdy {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 1224 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct XilinxCells::IDELAYParams {members {{String iobdelay_type} {Integer iobdelay_value}}} {position {XilinxCells.bsv 1254 6}}
Interface {XilinxCells::IDELAY#(type a)} polymorphic {members {{method {Action i a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action inc Bool {{(* ports = ["inc_not_dec"] *)} {(* always_ready  *)}}}} {method {a o {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1272 11}}
Struct XilinxCells::IODELAYParams {members {{String delay_source} {String high_performance_mode} {String idelay_type} {Integer idelay_value} {Integer odelay_value} {Integer refclk_frequency} {String signal_pattern}}} {position {XilinxCells.bsv 1365 6}}
Struct XilinxCells::ClockIODELAYParams {members {{String delay_source} {String high_performance_mode} {String idelay_type} {Integer idelay_value} {Integer odelay_value} {Integer refclk_frequency} {String signal_pattern}}} {position {XilinxCells.bsv 1387 6}}
Interface {XilinxCells::IODELAY#(type a)} polymorphic {members {{method {Action idatain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action odatain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {a dataout {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action datain a {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action t Bool {{(* ports = ["i"] *)} {(* always_enabled  *)}}}} {method {Action inc Bool {{(* ports = ["inc_not_dec"] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1416 11}}
Struct XilinxCells::PLLParams {members {{String bandwidth} {String clkfbout_deskew_adjust} {String clkout0_deskew_adjust} {String clkout1_deskew_adjust} {String clkout2_deskew_adjust} {String clkout3_deskew_adjust} {String clkout4_deskew_adjust} {String clkout5_deskew_adjust} {Integer clkfbout_mult} {Real clkfbout_phase} {Real clkin1_period} {Real clkin2_period} {Integer clkout0_divide} {Real clkout0_duty_cycle} {Real clkout0_phase} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {String compensation} {Integer divclk_divide} {String en_rel} {String pll_pmcd_mode} {Real ref_jitter} {String reset_on_loss_of_lock} {String rst_deassert_clk}}} {position {XilinxCells.bsv 1666 6}}
Interface XilinxCells::PLL {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkoutdcm0 {}} {interface Clock clkoutdcm1 {}} {interface Clock clkoutdcm2 {}} {interface Clock clkoutdcm3 {}} {interface Clock clkoutdcm4 {}} {interface Clock clkoutdcm5 {}} {interface Clock clkfbout {}} {interface Clock clkfbdcm {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action clkin1sel Bool {{(* ports = ["select"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action fbin Bool {{(* ports = ["i"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 1733 11}}
Struct XilinxCells::ClockGeneratorParams {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Integer feedback_mul} {Integer feedback_div} {Integer clk0_div} {Real clk0_duty_cycle} {Real clk0_phase} {Bool clk0_buffer {width 1}} {Integer clk1_div} {Real clk1_duty_cycle} {Real clk1_phase} {Bool clk1_buffer {width 1}} {Integer clk2_div} {Real clk2_duty_cycle} {Real clk2_phase} {Bool clk2_buffer {width 1}} {Integer clk3_div} {Real clk3_duty_cycle} {Real clk3_phase} {Bool clk3_buffer {width 1}} {Integer clk4_div} {Real clk4_duty_cycle} {Real clk4_phase} {Bool clk4_buffer {width 1}} {Integer clk5_div} {Real clk5_duty_cycle} {Real clk5_phase} {Bool clk5_buffer {width 1}} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 1978 6}}
Interface XilinxCells::ClockGenerator {members {{interface Clock clkout0 {}} {interface Clock clkout1 {}} {interface Clock clkout2 {}} {interface Clock clkout3 {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2015 11}}
Interface XilinxCells::MMCME2 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2168 11}}
Interface XilinxCells::MMCME3 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2427 11}}
Struct XilinxCells::ClockGenerator6Params {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Real clkfbout_mult_f} {Real clkfbout_phase} {Integer divclk_divide} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Bool clkout4_buffer {width 1}} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Bool clkout5_buffer {width 1}} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Bool clkout6_buffer {width 1}} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 2767 3}}
Interface XilinxCells::ClockGenerator6 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 2813 11}}
Struct XilinxCells::ClockGenerator7Params {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Real clkfbout_mult_f} {Real clkfbout_phase} {Integer divclk_divide} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Bool clkout4_buffer {width 1}} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Bool clkout5_buffer {width 1}} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Bool clkout6_buffer {width 1}} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 3042 3}}
Interface XilinxCells::ClockGenerator7 {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3088 11}}
Struct XilinxCells::ClockGeneratorUParams {members {{Bool clkin_buffer {width 1}} {Real clkin1_period} {Integer reset_stages} {Real clkfbout_mult_f} {Real clkfbout_phase} {Integer divclk_divide} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Bool clkout4_buffer {width 1}} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Bool clkout5_buffer {width 1}} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Bool clkout6_buffer {width 1}} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 3317 3}}
Interface XilinxCells::ClockGeneratorU {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3363 11}}
Struct XilinxCells::DCMParams {members {{Real clkdv_divide} {Integer clkfx_divide} {Integer clkfx_multiply} {String clkin_divide_by_2} {Real clkin_period} {String clkout_phase_shift} {String clk_feedback} {String dcm_autocalibration} {String dcm_performance_mode} {String deskew_adjust} {String dfs_frequency_mode} {String dll_frequency_mode} {String duty_cycle_correction} {Bit#(16) factory_jf {width 16}} {Integer phase_shift} {String sim_device} {String startup_wait}}} {position {XilinxCells.bsv 3570 6}}
Interface XilinxCells::DCM {members {{interface Clock clkout0 {}} {interface Clock clkout180 {}} {interface Clock clkout270 {}} {interface Clock clkout2x180 {}} {interface Clock clkout2x {}} {interface Clock clkout90 {}} {interface Clock clkoutdv {}} {interface Clock clkoutfx180 {}} {interface Clock clkoutfx {}} {interface XilinxCells::DCM_DRP recfg {}} {interface XilinxCells::DCM_PS phase_shift {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)}}}} {method {Action fbin Bool {{(* ports = ["clkfb"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3625 11}}
Interface XilinxCells::DCM_DRP {members {{method {Action request {Bool Bit#(7) Bit#(16)} {{(* ports = ["dwe", "daddr", "di"] *)} {(* always_ready  *)}}}} {method {Bit#(16) response {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3643 11}}
Interface XilinxCells::DCM_PS {members {{method {Action incdec Bool {{(* ports = ["psincdec"] *)} {(* always_ready  *)}}}} {method {Bool done {} {{(* ports = [] *)} {(* always_enabled  *)}}}}}} {position {XilinxCells.bsv 3649 11}}
Struct XilinxCells::MMCMParams {members {{String bandwidth} {String clkfbout_use_fine_ps} {String clkout0_use_fine_ps} {String clkout1_use_fine_ps} {String clkout2_use_fine_ps} {String clkout3_use_fine_ps} {String clkout4_cascade} {String clkout4_use_fine_ps} {String clkout5_use_fine_ps} {String clkout6_use_fine_ps} {String clock_hold} {String compensation} {String startup_wait} {Real clkfbout_mult_f} {Real clkfbout_phase} {Real clkin1_period} {Real clkin2_period} {Integer divclk_divide} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Real ref_jitter1} {Real ref_jitter2} {Bool use_same_family {width 1}}}} {position {XilinxCells.bsv 3877 3}}
Interface XilinxCells::MMCM_DRP {members {{method {Action request {Bool Bit#(7) Bit#(16)} {{(* ports = ["write", "addr", "datain"] *)}}}} {method {Bit#(16) response {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3926 11}}
Interface XilinxCells::MMCM_CDDC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Bool done {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3931 11}}
Interface XilinxCells::MMCM_PS {members {{method {Action incdec Bool {{(* ports = ["psincdec"] *)}}}} {method {Bool done {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 3937 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxCells::MMCM {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {interface Clock clkfbout {}} {interface Clock clkfbout_n {}} {interface XilinxCells::MMCM_DRP reconfig {}} {interface XilinxCells::MMCM_PS phase_shift {}} {method {Bool locked {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bool clkfb_stopped {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bool clkin_stopped {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action clkin1sel Bool {{(* ports = ["select"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Action clkfbin Bit#(1) {{(* ports = ["clk"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {XilinxCells.bsv 3942 11}}
Struct XilinxCells::SRL16EParams {members {{Bit#(16) initValue {width 16}}}} {width 16} {position {XilinxCells.bsv 4188 3}}
Interface XilinxCells::SRL16E {members {{method {Bit#(1) _read {} {{(* ports = [] *)}}}} {method {Action _write Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a Bit#(4) {{(* ports = ["i"] *)}}}}}} {position {XilinxCells.bsv 4207 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct XilinxCells::SRLC32EParams {members {{Bit#(32) initValue {width 32}}}} {width 32} {position {XilinxCells.bsv 4260 3}}
Interface XilinxCells::SRLC32E {members {{method {Bit#(1) _read {} {{(* ports = [] *)}}}} {method {Action _write Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action a Bit#(5) {{(* ports = ["i"] *)}}}} {method {Bit#(1) cascade {} {{(* ports = [] *)}}}}}} {position {XilinxCells.bsv 4269 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface DVIController::DVI_Pins {members {{interface Reset rst_n {}} {interface Clock xclk_p {}} {interface Clock xclk_n {}} {method {Bool hsync_n {} {{(* ports = [] *)}}}} {method {Bool vsync_n {} {{(* ports = [] *)}}}} {method {Bool de {} {{(* ports = [] *)}}}} {method {Bit#(12) data {} {{(* ports = [] *)}}}} {interface Clock pclk_p {}} {interface Clock pclk_n {}}}} {position {DVIController.bsv 74 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface DVIController::DVI_User {members {{interface GetPut::Put#(Video::RGB888) pixel {}} {method {Bool hsync_n {} {{(* ports = [] *)}}}} {method {Bool vsync_n {} {{(* ports = [] *)}}}}}} {position {DVIController.bsv 86 11}}
Interface {DVIController::DVIController#(numeric type clockMHz)} polymorphic {members {{interface DVIController::DVI_User user {{(* prefix = "" *)}}} {interface DVIController::DVI_Pins dvi {{(* prefix = "" *)}}} {interface {ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)} i2c {}}}} {position {DVIController.bsv 92 11}}
Struct HDMIController::HDMIParams {members {{String xilinxBoard} {Video::VideoTiming timing} {Clock userClock} {Reset userReset}}} {position {HDMIController.bsv 66 3}}
Interface HDMIController::HDMI_Pins {members {{interface Clock clk {}} {method {Bit#(18) data {} {{(* ports = [] *)}}}} {method {Bit#(1) de {} {{(* ports = [] *)}}}} {method {Bit#(1) hsync {} {{(* ports = [] *)}}}} {method {Bit#(1) vsync {} {{(* ports = [] *)}}}} {method {Bit#(1) spdif {} {{(* ports = [] *)}}}} {method {Action interrupt Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action spdif_in Bit#(1) {{(* ports = ["i"] *)}}}}}} {position {HDMIController.bsv 81 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface HDMIController::HDMIController {members {{interface HDMIController::HDMI_Pins hdmi {{(* prefix = "" *)}}} {interface {ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)} i2c {}}}} {position {HDMIController.bsv 92 11}}
Interface ButtonController::Button {members {{method {Action button Bit#(1) {{(* ports = ["down"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {ButtonController.bsv 13 11}}
Interface ButtonController::ButtonController {members {{method {Bool pressed {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool released {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action setRepeatParams {UInt#(10) UInt#(10)} {{(* ports = ["delay", "interval"] *)} {(* always_ready  *)}}}} {method {Bool repeating {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface ButtonController::Button ifc {{(* prefix = "" *)}}}}} {position {ButtonController.bsv 19 11}}
Interface {DIPSwitch::DIP#(numeric type n)} polymorphic {members {{method {Action switch Bit#(n) {{(* ports = ["setting"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {DIPSwitch.bsv 14 11}}
Interface {DIPSwitch::DIPSwitch#(numeric type n)} polymorphic {members {{method {Bool changed {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(n) _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface DIPSwitch::DIP#(n) ifc {{(* prefix = "" *)}}}}} {position {DIPSwitch.bsv 20 11}}
Interface GPIOController::GPIO {members {{interface Inout#(Bit#(1)) gpio {}}}} {position {GPIOController.bsv 32 11}}
Interface GPIOController::GPIOController {members {{method {Action _write Bit#(1) {{(* ports = ["i"] *)} {(* always_ready  *)}}}} {method {Action drive_out Bool {{(* ports = ["i"] *)} {(* always_ready  *)}}}} {method {Bool read_drive_out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface GPIOController::GPIO ifc {{(* prefix = "" *)}}}}} {position {GPIOController.bsv 37 11}}
Alias LEDController::Time UInt#(16) {position {LEDController.bsv 24 19}}
Alias LEDController::Level UInt#(3) {position {LEDController.bsv 25 19}}
Alias LEDController::Lag UInt#(4) {position {LEDController.bsv 26 19}}
Interface {LEDController::LED#(numeric type n)} polymorphic {members {{method {Bit#(n) out {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {LEDController.bsv 37 11}}
Interface LEDController::LEDController {members {{method {Action setLag UInt#(4) {{(* ports = ["l"] *)} {(* always_ready  *)}}}} {method {Action setPeriod {UInt#(3) UInt#(16) UInt#(3) UInt#(16)} {{(* ports = ["lo_lvl", "lo_time", "hi_lvl", "hi_time"] *)} {(* always_ready  *)}}}} {method {Action setActivity UInt#(16) {{(* ports = ["on_time"] *)} {(* always_ready  *)}}}} {method {Action bump {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface LEDController::LED#(1) ifc {{(* prefix = "" *)}}}}} {position {LEDController.bsv 51 11}}
Interface LCDController::LCD {members {{method {Bit#(4) db {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) e {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) rs {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) rw {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {LCDController.bsv 19 11}}
Interface LCDController::LCDController {members {{method {Action setLine1 {{Vector::Vector#(16, Bit#(8))}} {{(* ports = ["text"] *)} {(* always_ready  *)}}}} {method {Action setLine2 {{Vector::Vector#(16, Bit#(8))}} {{(* ports = ["text"] *)} {(* always_ready  *)}}}} {interface LCDController::LCD ifc {{(* prefix = "" *)}}}}} {position {LCDController.bsv 31 11}}
Interface DVIController::DVI_Pins {members {{interface Reset rst_n {}} {interface Clock xclk_p {}} {interface Clock xclk_n {}} {method {Bool hsync_n {} {{(* ports = [] *)}}}} {method {Bool vsync_n {} {{(* ports = [] *)}}}} {method {Bool de {} {{(* ports = [] *)}}}} {method {Bit#(12) data {} {{(* ports = [] *)}}}} {interface Clock pclk_p {}} {interface Clock pclk_n {}}}} {position {DVIController.bsv 74 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface DVIController::DVI_User {members {{interface GetPut::Put#(Video::RGB888) pixel {}} {method {Bool hsync_n {} {{(* ports = [] *)}}}} {method {Bool vsync_n {} {{(* ports = [] *)}}}}}} {position {DVIController.bsv 86 11}}
Interface {DVIController::DVIController#(numeric type clockMHz)} polymorphic {members {{interface DVIController::DVI_User user {{(* prefix = "" *)}}} {interface DVIController::DVI_Pins dvi {{(* prefix = "" *)}}} {interface {ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)} i2c {}}}} {position {DVIController.bsv 92 11}}
Struct HDMIController::HDMIParams {members {{String xilinxBoard} {Video::VideoTiming timing} {Clock userClock} {Reset userReset}}} {position {HDMIController.bsv 66 3}}
Interface HDMIController::HDMI_Pins {members {{interface Clock clk {}} {method {Bit#(18) data {} {{(* ports = [] *)}}}} {method {Bit#(1) de {} {{(* ports = [] *)}}}} {method {Bit#(1) hsync {} {{(* ports = [] *)}}}} {method {Bit#(1) vsync {} {{(* ports = [] *)}}}} {method {Bit#(1) spdif {} {{(* ports = [] *)}}}} {method {Action interrupt Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action spdif_in Bit#(1) {{(* ports = ["i"] *)}}}}}} {position {HDMIController.bsv 81 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface HDMIController::HDMIController {members {{interface HDMIController::HDMI_Pins hdmi {{(* prefix = "" *)}}} {interface {ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)} i2c {}}}} {position {HDMIController.bsv 92 11}}
Interface {DIPSwitch::DIP#(numeric type n)} polymorphic {members {{method {Action switch Bit#(n) {{(* ports = ["setting"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {DIPSwitch.bsv 14 11}}
Interface {DIPSwitch::DIPSwitch#(numeric type n)} polymorphic {members {{method {Bool changed {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(n) _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface DIPSwitch::DIP#(n) ifc {{(* prefix = "" *)}}}}} {position {DIPSwitch.bsv 20 11}}
Alias LEDController::Time UInt#(16) {position {LEDController.bsv 24 19}}
Alias LEDController::Level UInt#(3) {position {LEDController.bsv 25 19}}
Alias LEDController::Lag UInt#(4) {position {LEDController.bsv 26 19}}
Interface {LEDController::LED#(numeric type n)} polymorphic {members {{method {Bit#(n) out {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {LEDController.bsv 37 11}}
Interface LEDController::LEDController {members {{method {Action setLag UInt#(4) {{(* ports = ["l"] *)} {(* always_ready  *)}}}} {method {Action setPeriod {UInt#(3) UInt#(16) UInt#(3) UInt#(16)} {{(* ports = ["lo_lvl", "lo_time", "hi_lvl", "hi_time"] *)} {(* always_ready  *)}}}} {method {Action setActivity UInt#(16) {{(* ports = ["on_time"] *)} {(* always_ready  *)}}}} {method {Action bump {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface LEDController::LED#(1) ifc {{(* prefix = "" *)}}}}} {position {LEDController.bsv 51 11}}
Interface GPIOController::GPIO {members {{interface Inout#(Bit#(1)) gpio {}}}} {position {GPIOController.bsv 32 11}}
Interface GPIOController::GPIOController {members {{method {Action _write Bit#(1) {{(* ports = ["i"] *)} {(* always_ready  *)}}}} {method {Action drive_out Bool {{(* ports = ["i"] *)} {(* always_ready  *)}}}} {method {Bool read_drive_out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface GPIOController::GPIO ifc {{(* prefix = "" *)}}}}} {position {GPIOController.bsv 37 11}}
Interface ButtonController::Button {members {{method {Action button Bit#(1) {{(* ports = ["down"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {ButtonController.bsv 13 11}}
Interface ButtonController::ButtonController {members {{method {Bool pressed {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool released {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action setRepeatParams {UInt#(10) UInt#(10)} {{(* ports = ["delay", "interval"] *)} {(* always_ready  *)}}}} {method {Bool repeating {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool _read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface ButtonController::Button ifc {{(* prefix = "" *)}}}}} {position {ButtonController.bsv 19 11}}
Interface DVIController::DVI_Pins {members {{interface Reset rst_n {}} {interface Clock xclk_p {}} {interface Clock xclk_n {}} {method {Bool hsync_n {} {{(* ports = [] *)}}}} {method {Bool vsync_n {} {{(* ports = [] *)}}}} {method {Bool de {} {{(* ports = [] *)}}}} {method {Bit#(12) data {} {{(* ports = [] *)}}}} {interface Clock pclk_p {}} {interface Clock pclk_n {}}}} {position {DVIController.bsv 74 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface DVIController::DVI_User {members {{interface GetPut::Put#(Video::RGB888) pixel {}} {method {Bool hsync_n {} {{(* ports = [] *)}}}} {method {Bool vsync_n {} {{(* ports = [] *)}}}}}} {position {DVIController.bsv 86 11}}
Interface {DVIController::DVIController#(numeric type clockMHz)} polymorphic {members {{interface DVIController::DVI_User user {{(* prefix = "" *)}}} {interface DVIController::DVI_Pins dvi {{(* prefix = "" *)}}} {interface {ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)} i2c {}}}} {position {DVIController.bsv 92 11}}
Interface LCDController::LCD {members {{method {Bit#(4) db {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) e {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) rs {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(1) rw {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {LCDController.bsv 19 11}}
Interface LCDController::LCDController {members {{method {Action setLine1 {{Vector::Vector#(16, Bit#(8))}} {{(* ports = ["text"] *)} {(* always_ready  *)}}}} {method {Action setLine2 {{Vector::Vector#(16, Bit#(8))}} {{(* ports = ["text"] *)} {(* always_ready  *)}}}} {interface LCDController::LCD ifc {{(* prefix = "" *)}}}}} {position {LCDController.bsv 31 11}}
Struct HDMIController::HDMIParams {members {{String xilinxBoard} {Video::VideoTiming timing} {Clock userClock} {Reset userReset}}} {position {HDMIController.bsv 66 3}}
Interface HDMIController::HDMI_Pins {members {{interface Clock clk {}} {method {Bit#(18) data {} {{(* ports = [] *)}}}} {method {Bit#(1) de {} {{(* ports = [] *)}}}} {method {Bit#(1) hsync {} {{(* ports = [] *)}}}} {method {Bit#(1) vsync {} {{(* ports = [] *)}}}} {method {Bit#(1) spdif {} {{(* ports = [] *)}}}} {method {Action interrupt Bit#(1) {{(* ports = ["i"] *)}}}} {method {Action spdif_in Bit#(1) {{(* ports = ["i"] *)}}}}}} {position {HDMIController.bsv 81 11}} {attributes {{(* always_ready  *)} {(* always_enabled  *)}}}
Interface HDMIController::HDMIController {members {{interface HDMIController::HDMI_Pins hdmi {{(* prefix = "" *)}}} {interface {ClientServer::Client#(I2C::I2CRequest, I2C::I2CResponse)} i2c {}}}} {position {HDMIController.bsv 92 11}}
Enum XilinxClocks::State {members {Restart WaitLock WaitStart Address Read Modify Write WaitWriteReady}} {width 3} {position {XilinxClocks.bsv 41 3}}
Struct XilinxClocks::XilinxClockRequest {members {{Bool rnw {width 1}} {Bit#(5) addr {width 5}} {Bit#(16) data {width 16}}}} {width 22} {position {XilinxClocks.bsv 47 3}}
Enum XilinxClocks::XilinxEType {members {NONE E2 E3}} {width 2} {position {XilinxClocks.bsv 49 31}}
Struct XilinxClocks::XilinxClockParams {members {{XilinxClocks::XilinxEType e_type {width 2}} {Bool clkout0_buffer {width 1}} {Bool clkout0n_buffer {width 1}} {Bool clkout1_buffer {width 1}} {Bool clkout1n_buffer {width 1}} {Bool clkout2_buffer {width 1}} {Bool clkout2n_buffer {width 1}} {Bool clkout3_buffer {width 1}} {Bool clkout3n_buffer {width 1}} {Bool clkout4_buffer {width 1}} {Bool clkout5_buffer {width 1}} {Bool clkout6_buffer {width 1}} {String bandwidth} {String clkfbout_use_fine_ps} {String clkout0_use_fine_ps} {String clkout1_use_fine_ps} {String clkout2_use_fine_ps} {String clkout3_use_fine_ps} {String clkout4_cascade} {String clkout4_use_fine_ps} {String clkout5_use_fine_ps} {String clkout6_use_fine_ps} {String clock_hold} {String compensation} {String startup_wait} {Real clkfbout_mult_f} {Real clkfbout_phase} {Real clkin1_period} {Real clkin2_period} {Integer divclk_divide} {Real clkout0_divide_f} {Real clkout0_duty_cycle} {Real clkout0_phase} {Integer clkout1_divide} {Real clkout1_duty_cycle} {Real clkout1_phase} {Integer clkout2_divide} {Real clkout2_duty_cycle} {Real clkout2_phase} {Integer clkout3_divide} {Real clkout3_duty_cycle} {Real clkout3_phase} {Integer clkout4_divide} {Real clkout4_duty_cycle} {Real clkout4_phase} {Integer clkout5_divide} {Real clkout5_duty_cycle} {Real clkout5_phase} {Integer clkout6_divide} {Real clkout6_duty_cycle} {Real clkout6_phase} {Real ref_jitter1} {Real ref_jitter2}}} {position {XilinxClocks.bsv 105 3}}
Alias XilinxClocks::XilinxClockCSR {ClientServer::Server#(XilinxClocks::XilinxClockRequest, Bit#(16))} {position {XilinxClocks.bsv 165 47}}
Alias XilinxClocks::XilinxClkClient {ClientServer::Client#(Bit#(32), Bit#(32))} {position {XilinxClocks.bsv 167 37}}
Alias XilinxClocks::XilinxClkServer {ClientServer::Server#(Bit#(32), Bit#(32))} {position {XilinxClocks.bsv 168 37}}
Interface XilinxClocks::VMMCM_ADV {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {interface Clock clkfbout {}} {interface Clock clkfbout_n {}} {method {Action clkfbin Bool {{(* ports = ["clk"] *)}}}} {method {Action rst Bool {{(* ports = ["i"] *)}}}} {method {Bool locked {} {{(* ports = [] *)}}}} {method {Action daddr Bit#(7) {{(* ports = ["i"] *)}}}} {method {Action dsel Bool {{(* ports = ["i"] *)}}}} {method {Action di Bit#(16) {{(* ports = ["i"] *)}}}} {method {Action dwe Bool {{(* ports = ["i"] *)}}}} {method {Bit#(16) dout {} {{(* ports = [] *)}}}} {method {Bool drdy {} {{(* ports = [] *)}}}}}} {position {XilinxClocks.bsv 174 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface XilinxClocks::XilinxClockController {members {{interface Clock clkout0 {}} {interface Clock clkout0_n {}} {interface Clock clkout1 {}} {interface Clock clkout1_n {}} {interface Clock clkout2 {}} {interface Clock clkout2_n {}} {interface Clock clkout3 {}} {interface Clock clkout3_n {}} {interface Clock clkout4 {}} {interface Clock clkout5 {}} {interface Clock clkout6 {}} {method {Bool locked {} {{(* ports = [] *)}}}} {interface {ClientServer::Server#(XilinxClocks::XilinxClockRequest, Bit#(16))} csr {}}}} {position {XilinxClocks.bsv 199 11}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4Lite_Types::AXI4Lite_AWFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) awaddr} {Bit#(3) awprot {width 3}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 52 3}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["awvalid", "awaddr", "awprot", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 86 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 130 3}}
Interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 161 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_BFlit#(numeric type user_)} polymorphic {members {{AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 204 3}}
Interface {AXI4Lite_Types::AXI4Lite_B_Master_Sig#(numeric type user_)} polymorphic {members {{method {Action bflit {Bool AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 214 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(numeric type user_)} polymorphic {members {{method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 230 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_ARFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) araddr} {Bit#(3) arprot {width 3}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 273 3}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["arvalid", "araddr", "arprot", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 307 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_RFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 351 3}}
Interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(data_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["rvalid", "rdata", "rresp", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 362 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 379 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_Master#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 421 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 452 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} masterSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 490 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 519 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 550 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slaveSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 588 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 617 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 634 11}}
Struct {AXI4Lite_Types::AXI4Lite_WriteFlit#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)} aw} {{AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)} w}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 712 3}}
Typeclass {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) f(t x1)} toAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)} {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) x1)} fromAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 68 11}}
Typeclass {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) f(t x1)} toAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)} {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) x1)} fromAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 68 11}}
Typeclass {AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_BFlit#(user_) f(t x1)} toAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 51 11}}
Typeclass {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_BFlit#(user_) x1)} fromAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)} {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(MemTypes::MemRsp#(data_t), user_sz)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 59 11}}
Typeclass {AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) f(t x1)} toAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 56 11}}
Typeclass {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) x1)} fromAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)} {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(MemTypes::MemRsp#(data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 64 11}}
Typeclass {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) f(t x1)} toAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)} {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(MemTypes::MemReq#(addr_t, data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 62 11}}
Typeclass {AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) x1)} fromAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 70 11}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}
Typeclass {AXI4_AR_Utils::ToAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) f(t x1)} toAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::ToAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 94 11}}
Typeclass {AXI4_AR_Utils::FromAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) x1)} fromAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::FromAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 105 11}}
Typeclass {AXI4_AW_Utils::ToAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) f(t x1)} toAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::ToAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 94 11}}
Typeclass {AXI4_AW_Utils::FromAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) x1)} fromAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::FromAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 105 11}}
Typeclass {AXI4_B_Utils::ToAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function AXI4_Types::AXI4_BFlit#(id_, user_) f(t x1)} toAXI4_BFlit}}} {instances {{AXI4_B_Utils::ToAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 62 11}}
Typeclass {AXI4_B_Utils::FromAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_BFlit#(id_, user_) x1)} fromAXI4_BFlit}}} {instances {{AXI4_B_Utils::FromAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 70 11}}
Typeclass {AXI4_R_Utils::ToAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_RFlit#(id_, data_, user_) f(t x1)} toAXI4_RFlit}}} {instances {{AXI4_R_Utils::ToAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 76 11}}
Typeclass {AXI4_R_Utils::FromAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_RFlit#(id_, data_, user_) x1)} fromAXI4_RFlit}}} {instances {{AXI4_R_Utils::FromAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 87 11}}
Typeclass {AXI4_W_Utils::ToAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_WFlit#(data_, user_) f(t x1)} toAXI4_WFlit}}} {instances {{AXI4_W_Utils::ToAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 65 11}}
Typeclass {AXI4_W_Utils::FromAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_WFlit#(data_, user_) x1)} fromAXI4_WFlit}}} {instances {{AXI4_W_Utils::FromAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 73 11}}
Enum AXI4_Utils::SerialiserState {members {IDLE BURST_WRITE WAITING}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 437 43}}
Enum AXI4_Utils::ReadSplitOption {members {COMBINE PAD_FIRST PAD_LAST}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 1042 47}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}
Typeclass {AXI4_AR_Utils::ToAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) f(t x1)} toAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::ToAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 94 11}}
Typeclass {AXI4_AR_Utils::FromAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) x1)} fromAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::FromAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 105 11}}
Typeclass {AXI4_AW_Utils::ToAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) f(t x1)} toAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::ToAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 94 11}}
Typeclass {AXI4_AW_Utils::FromAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) x1)} fromAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::FromAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 105 11}}
Typeclass {AXI4_B_Utils::ToAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function AXI4_Types::AXI4_BFlit#(id_, user_) f(t x1)} toAXI4_BFlit}}} {instances {{AXI4_B_Utils::ToAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 62 11}}
Typeclass {AXI4_B_Utils::FromAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_BFlit#(id_, user_) x1)} fromAXI4_BFlit}}} {instances {{AXI4_B_Utils::FromAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 70 11}}
Typeclass {AXI4_R_Utils::ToAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_RFlit#(id_, data_, user_) f(t x1)} toAXI4_RFlit}}} {instances {{AXI4_R_Utils::ToAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 76 11}}
Typeclass {AXI4_R_Utils::FromAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_RFlit#(id_, data_, user_) x1)} fromAXI4_RFlit}}} {instances {{AXI4_R_Utils::FromAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 87 11}}
Typeclass {AXI4_W_Utils::ToAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_WFlit#(data_, user_) f(t x1)} toAXI4_WFlit}}} {instances {{AXI4_W_Utils::ToAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 65 11}}
Typeclass {AXI4_W_Utils::FromAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_WFlit#(data_, user_) x1)} fromAXI4_WFlit}}} {instances {{AXI4_W_Utils::FromAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 73 11}}
Enum AXI4_Utils::SerialiserState {members {IDLE BURST_WRITE WAITING}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 437 43}}
Enum AXI4_Utils::ReadSplitOption {members {COMBINE PAD_FIRST PAD_LAST}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 1042 47}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4Lite_Types::AXI4Lite_AWFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) awaddr} {Bit#(3) awprot {width 3}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 52 3}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["awvalid", "awaddr", "awprot", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 86 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 130 3}}
Interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 161 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_BFlit#(numeric type user_)} polymorphic {members {{AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 204 3}}
Interface {AXI4Lite_Types::AXI4Lite_B_Master_Sig#(numeric type user_)} polymorphic {members {{method {Action bflit {Bool AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 214 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(numeric type user_)} polymorphic {members {{method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 230 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_ARFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) araddr} {Bit#(3) arprot {width 3}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 273 3}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["arvalid", "araddr", "arprot", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 307 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_RFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 351 3}}
Interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(data_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["rvalid", "rdata", "rresp", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 362 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 379 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_Master#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 421 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 452 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} masterSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 490 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 519 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 550 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slaveSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 588 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 617 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 634 11}}
Struct {AXI4Lite_Types::AXI4Lite_WriteFlit#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)} aw} {{AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)} w}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 712 3}}
Typeclass {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) f(t x1)} toAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)} {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) x1)} fromAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 68 11}}
Typeclass {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) f(t x1)} toAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)} {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) x1)} fromAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 68 11}}
Typeclass {AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_BFlit#(user_) f(t x1)} toAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 51 11}}
Typeclass {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_BFlit#(user_) x1)} fromAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)} {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(MemTypes::MemRsp#(data_t), user_sz)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 59 11}}
Typeclass {AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) f(t x1)} toAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 56 11}}
Typeclass {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) x1)} fromAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)} {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(MemTypes::MemRsp#(data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 64 11}}
Typeclass {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) f(t x1)} toAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)} {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(MemTypes::MemReq#(addr_t, data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 62 11}}
Typeclass {AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) x1)} fromAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 70 11}}
Typeclass {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) f(t x1)} toAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)} {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) x1)} fromAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 68 11}}
Typeclass {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) f(t x1)} toAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)} {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) x1)} fromAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 68 11}}
Typeclass {AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_BFlit#(user_) f(t x1)} toAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 51 11}}
Typeclass {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_BFlit#(user_) x1)} fromAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)} {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(MemTypes::MemRsp#(data_t), user_sz)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 59 11}}

Typeclass {AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) f(t x1)} toAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 56 11}}
Typeclass {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) x1)} fromAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)} {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(MemTypes::MemRsp#(data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 64 11}}
Struct {AXI4Lite_Types::AXI4Lite_AWFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) awaddr} {Bit#(3) awprot {width 3}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 52 3}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["awvalid", "awaddr", "awprot", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 86 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 130 3}}
Interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 161 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_BFlit#(numeric type user_)} polymorphic {members {{AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 204 3}}
Interface {AXI4Lite_Types::AXI4Lite_B_Master_Sig#(numeric type user_)} polymorphic {members {{method {Action bflit {Bool AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 214 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(numeric type user_)} polymorphic {members {{method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 230 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_ARFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) araddr} {Bit#(3) arprot {width 3}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 273 3}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["arvalid", "araddr", "arprot", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 307 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_RFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 351 3}}
Interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(data_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["rvalid", "rdata", "rresp", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 362 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 379 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_Master#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 421 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 452 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} masterSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 490 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 519 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 550 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slaveSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 588 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 617 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 634 11}}
Struct {AXI4Lite_Types::AXI4Lite_WriteFlit#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)} aw} {{AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)} w}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 712 3}}

Typeclass {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) f(t x1)} toAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)} {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(MemTypes::MemReq#(addr_t, data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 62 11}}
Typeclass {AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) x1)} fromAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 70 11}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4Stream_Types::AXI4Stream_Flit#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{Bit#(data_) tdata} {{Bit#(TDiv#(data_, 8))} tstrb} {{Bit#(TDiv#(data_, 8))} tkeep} {Bool tlast {width 1}} {Bit#(id_) tid} {Bit#(dest_) tdest} {Bit#(user_) tuser}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 55 3}}
Interface {AXI4Stream_Types::AXI4Stream_Master_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Bit#(data_) tdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tstrb {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tkeep {} {{(* ports = [] *)}}}} {method {Bool tlast {} {{(* ports = [] *)}}}} {method {Bit#(id_) tid {} {{(* ports = [] *)}}}} {method {Bit#(dest_) tdest {} {{(* ports = [] *)}}}} {method {Bit#(user_) tuser {} {{(* ports = [] *)}}}} {method {Bool tvalid {} {{(* ports = [] *)}}}} {method {Action tready Bool {{(* ports = ["tready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 62 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Stream_Types::AXI4Stream_Slave_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action tflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} {Bit#(TDiv#(data_, 8))} Bool Bit#(id_) Bit#(dest_) Bit#(user_)} {{(* ports = ["tvalid", "tdata", "tstrb", "tkeep", "tlast", "tid", "tdest", "tuser"] *)} {(* prefix = "" *)}}}} {method {Bool tready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 78 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Alias {AXI4Stream_Types::AXI4Stream_Master#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 94 9}}
Alias {AXI4Stream_Types::AXI4Stream_Slave#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 100 9}}
Interface {AXI4Stream_Types::AXI4Stream_Shim#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} master {}} {interface {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 114 11}}
Typeclass {AXI4Stream_Utils::ToAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) f(t x1)} toAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::ToAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 63 11}}
Typeclass {AXI4Stream_Utils::FromAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function t f(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) x1)} fromAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::FromAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 76 11}}
Struct {AXI4Stream_Types::AXI4Stream_Flit#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{Bit#(data_) tdata} {{Bit#(TDiv#(data_, 8))} tstrb} {{Bit#(TDiv#(data_, 8))} tkeep} {Bool tlast {width 1}} {Bit#(id_) tid} {Bit#(dest_) tdest} {Bit#(user_) tuser}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 55 3}}
Interface {AXI4Stream_Types::AXI4Stream_Master_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Bit#(data_) tdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tstrb {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tkeep {} {{(* ports = [] *)}}}} {method {Bool tlast {} {{(* ports = [] *)}}}} {method {Bit#(id_) tid {} {{(* ports = [] *)}}}} {method {Bit#(dest_) tdest {} {{(* ports = [] *)}}}} {method {Bit#(user_) tuser {} {{(* ports = [] *)}}}} {method {Bool tvalid {} {{(* ports = [] *)}}}} {method {Action tready Bool {{(* ports = ["tready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 62 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Stream_Types::AXI4Stream_Slave_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action tflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} {Bit#(TDiv#(data_, 8))} Bool Bit#(id_) Bit#(dest_) Bit#(user_)} {{(* ports = ["tvalid", "tdata", "tstrb", "tkeep", "tlast", "tid", "tdest", "tuser"] *)} {(* prefix = "" *)}}}} {method {Bool tready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 78 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Alias {AXI4Stream_Types::AXI4Stream_Master#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 94 9}}
Alias {AXI4Stream_Types::AXI4Stream_Slave#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 100 9}}
Interface {AXI4Stream_Types::AXI4Stream_Shim#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} master {}} {interface {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 114 11}}
Typeclass {AXI4Stream_Utils::ToAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) f(t x1)} toAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::ToAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 63 11}}
Typeclass {AXI4Stream_Utils::FromAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function t f(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) x1)} fromAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::FromAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 76 11}}
Typeclass {AXI4_AR_Utils::ToAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) f(t x1)} toAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::ToAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 94 11}}
Typeclass {AXI4_AR_Utils::FromAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) x1)} fromAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::FromAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 105 11}}
Typeclass {AXI4_AW_Utils::ToAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) f(t x1)} toAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::ToAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 94 11}}
Typeclass {AXI4_AW_Utils::FromAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) x1)} fromAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::FromAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 105 11}}

Typeclass {AXI4_B_Utils::ToAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function AXI4_Types::AXI4_BFlit#(id_, user_) f(t x1)} toAXI4_BFlit}}} {instances {{AXI4_B_Utils::ToAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 62 11}}
Typeclass {AXI4_B_Utils::FromAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_BFlit#(id_, user_) x1)} fromAXI4_BFlit}}} {instances {{AXI4_B_Utils::FromAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 70 11}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}



Typeclass {AXI4_R_Utils::ToAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_RFlit#(id_, data_, user_) f(t x1)} toAXI4_RFlit}}} {instances {{AXI4_R_Utils::ToAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 76 11}}
Typeclass {AXI4_R_Utils::FromAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_RFlit#(id_, data_, user_) x1)} fromAXI4_RFlit}}} {instances {{AXI4_R_Utils::FromAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 87 11}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}
Enum AXI4_Utils::SerialiserState {members {IDLE BURST_WRITE WAITING}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 437 43}}
Enum AXI4_Utils::ReadSplitOption {members {COMBINE PAD_FIRST PAD_LAST}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 1042 47}}
Typeclass {AXI4_W_Utils::ToAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_WFlit#(data_, user_) f(t x1)} toAXI4_WFlit}}} {instances {{AXI4_W_Utils::ToAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 65 11}}
Typeclass {AXI4_W_Utils::FromAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_WFlit#(data_, user_) x1)} fromAXI4_WFlit}}} {instances {{AXI4_W_Utils::FromAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 73 11}}
Struct {AXI_Helpers::WriteReqFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type tag_)} polymorphic {members {{{AXI4_Types::AXI4_AWFlit#(id_, addr_, 0)} aw} {{AXI4_Types::AXI4_WFlit#(data_, tag_)} w}}} {position {../libs/TagController/TagController/AXI_Helpers.bsv 37 3}}
TaggedUnion {AXI_Helpers::ReqFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type tag_)} polymorphic {members {{{AXI_Helpers::WriteReqFlit#(id_, addr_, data_, tag_)} Write} {{AXI4_Types::AXI4_ARFlit#(id_, addr_, 0)} Read}}} {position {../libs/TagController/TagController/AXI_Helpers.bsv 43 3}}
TaggedUnion {AXI_Helpers::RspFlit#(numeric type id_, numeric type data_, numeric type tag_)} polymorphic {members {{{AXI4_Types::AXI4_BFlit#(id_, 0)} Write} {{AXI4_Types::AXI4_RFlit#(id_, data_, tag_)} Read}}} {position {../libs/TagController/TagController/AXI_Helpers.bsv 52 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}
TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {AXI_Helpers::DRAMReq#(numeric type id_, numeric type addr_)} {AXI_Helpers::ReqFlit#(id_, addr_, 64, 0)} {position {../libs/TagController/TagController/AXI_Helpers.bsv 61 58}}
Alias {AXI_Helpers::DRAMRsp#(numeric type id_)} {AXI_Helpers::RspFlit#(id_, 64, 0)} {position {../libs/TagController/TagController/AXI_Helpers.bsv 62 58}}
Struct {Bag::Entry#(type keyType, type datType)} polymorphic {members {{keyType key} {datType dat}}} {position {../libs/TagController/TagController/CacheCore/Bag.bsv 46 3}}
Interface {Bag::Bag#(numeric type numElems, type keyType, type datType)} polymorphic {members {{method {VnD::VnD#(datType) isMember keyType {{(* ports = ["x"] *)}}}} {method {Bool dataMatch datType {{(* ports = ["x"] *)}}}} {method {Action insert {keyType datType} {{(* ports = ["x", "d"] *)}}}} {method {Action update {keyType datType} {{(* ports = ["x", "d"] *)}}}} {method {Bool full {} {{(* ports = [] *)}}}} {method {Bool nextFull {} {{(* ports = [] *)}}}} {method {Bool empty {} {{(* ports = [] *)}}}} {method {Action remove keyType {{(* ports = ["x"] *)}}}} {method {VnD::VnD#(keyType) nextKey {} {{(* ports = [] *)}}}} {method {VnD::VnD#(datType) nextData {} {{(* ports = [] *)}}}} {method {Action iterateNext {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/Bag.bsv 48 11}}
Interface {Bag::FFBag#(numeric type numElems, type keyType, type datType, numeric type depth)} polymorphic {members {{method {Action enq {keyType datType} {{(* ports = ["x", "d"] *)}}}} {method {VnD::VnD#(datType) first keyType {{(* ports = ["x"] *)}}}} {method {Action deq keyType {{(* ports = ["x"] *)}}}} {method {Bool full {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/Bag.bsv 172 11}}
Typeclass {SimUtils::PrintLog#(type a)} {members {{{function Action f(a x1)} printLog} {{function Action f(a x1)} printTLog} {{function Action f(String x1, a x2)} printLogPlusArgs} {{function Action f(String x1, a x2)} printTLogPlusArgs} {{function Action f(String x1, a x2)} printPlusArgs} {{function Action f(String x1, a x2)} printTPlusArgs}}} {instances {SimUtils::PrintLog#(Fmt) SimUtils::PrintLog#(String)}} {position {../libs/BlueStuff/BlueUtils/SimUtils.bsv 44 11}}
Interface {SimpleUtils::ArchReg#(type t)} polymorphic {members {{method {t _read {} {{(* ports = [] *)}}}} {method {Action _write t {{(* ports = ["x"] *)}}}} {interface WriteOnly#(t) early {}} {interface Reg#(t) late {}} {method {Bool needCommit {} {{(* ports = [] *)}}}} {method {t commitVal {} {{(* ports = [] *)}}}} {method {Action commit {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/SimpleUtils.bsv 46 11}}
Interface {SimpleUtils::ArchRegFile#(numeric type n, type a)} polymorphic {members {{method {{Vector::Vector#(n, SimpleUtils::ArchReg#(a))} r {} {}}} {method {Action commit {} {{(* ports = [] *)}}}} {method {Bit#(TLog#(n)) rd_idx {} {{(* ports = [] *)}}}} {method {a rd_old_val {} {{(* ports = [] *)}}}} {method {a rd_new_val {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/SimpleUtils.bsv 86 11}}
Struct {MemTypes::BitPO#(numeric type n)} polymorphic {members {{Bit#(n) val}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 50 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}


TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {MemTypes::Mem#(type addr_t, type data_t)} {MasterSlave::Slave#(MemTypes::MemReq#(addr_t, data_t), MemTypes::MemRsp#(data_t))} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 196 3}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {MemBRAM::BRAM2#(numeric type a0w, numeric type d0w, numeric type a1w, numeric type d1w)} polymorphic {members {{interface {MemBRAM::BRAM#(a0w, d0w)} p0 {}} {interface {MemBRAM::BRAM#(a1w, d1w)} p1 {}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 51 11}}
Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}
Interface {FF::FF#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 64 11}}
Interface {FF::FFNext#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {data next {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool nextNotEmpty {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 74 11}}
Interface Branch_Predictor::Branch_Predictor_IFC {members {{method {Action reset {} {{(* ports = [] *)}}}} {method {Action predict_req Bit#(64) {{(* ports = ["pc"] *)}}}} {method {Bit#(64) predict_rsp {Bool Bit#(32)} {{(* ports = ["is_i32_not_i16", "instr"] *)} {(* always_ready  *)}}}} {method {Action bp_train {Bit#(64) Bool Bit#(32) CPU_Globals::CF_Info} {{(* ports = ["pc", "is_i32_not_i16", "instr", "cf_info"] *)}}}}}} {position {../src_Core/CPU/Branch_Predictor.bsv 38 11}}
Alias Branch_Predictor::BTB_Num_Sets 512 {position {../src_Core/CPU/Branch_Predictor.bsv 70 15}}
Alias Branch_Predictor::BTB_Index_Sz 9 {position {../src_Core/CPU/Branch_Predictor.bsv 76 31}}
Alias Branch_Predictor::BTB_Index Bit#(9) {position {../src_Core/CPU/Branch_Predictor.bsv 79 55}}
Alias Branch_Predictor::BTB_Tag Bit#(54) {position {../src_Core/CPU/Branch_Predictor.bsv 81 55}}
Alias Branch_Predictor::Word_Addr Bit#(63) {position {../src_Core/CPU/Branch_Predictor.bsv 101 32}}
Struct Branch_Predictor::BTB_Entry {members {{Bool valid {width 1}} {Bit#(54) pc_tag {width 54}} {Bit#(63) predicted_pc {width 63}}}} {width 118} {position {../src_Core/CPU/Branch_Predictor.bsv 107 6}}
Alias Branch_Predictor::RAS_Capacity 16 {position {../src_Core/CPU/Branch_Predictor.bsv 113 14}}

Struct CacheCorderer::TransRecord {members {{Bool ongoing {width 1}} {MemTypesCHERI::ReqId id {width 6}} {UInt#(2) first {width 2}} {UInt#(2) last {width 2}} {UInt#(2) next {width 2}}}} {width 13} {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 44 3}}
Struct CacheCorderer::ReqRec {members {{MemTypesCHERI::ReqId id {width 6}} {Bit#(35) line {width 35}} {UInt#(2) first {width 2}} {UInt#(2) last {width 2}} {VnD::VnD#(MemTypesCHERI::ReqId) idBeforeMe {width 7}}}} {width 52} {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 60 3}}
Alias CacheCorderer::Masters 2 {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 62 29}}
Interface {CacheCorderer::CacheCorderer#(numeric type inFlight)} polymorphic {members {{method {Bool reqsEmpty {} {{(* ports = [] *)}}}} {method {Bool reqsFull {} {{(* ports = [] *)}}}} {method {Bool lookupCheckId MemTypesCHERI::ReqId {{(* ports = ["id"] *)}}}} {method {Bool lookupIsOngoing {} {{(* ports = [] *)}}}} {method {UInt#(2) lookupFlit {MemTypesCHERI::ReqId UInt#(2)} {{(* ports = ["id", "original"] *)}}}} {method {Action lookupReport {MemTypesCHERI::ReqId UInt#(2) UInt#(2) UInt#(2)} {{(* ports = ["id", "flit", "first", "last"] *)}}}} {method {Action slaveReq {MemTypesCHERI::ReqId Bit#(35) UInt#(2) UInt#(2)} {{(* ports = ["id", "line", "first", "last"] *)}}}} {method {Bool slaveReqServeReady {MemTypesCHERI::ReqId Bit#(35)} {{(* ports = ["id", "line"] *)}}}} {method {ActionValue#(Bool) slaveReqExecuteReady {MemTypesCHERI::ReqId UInt#(2)} {{(* ports = ["id", "flit"] *)}}}} {method {Bool slaveRspIsOngoing {} {{(* ports = [] *)}}}} {method {Bool slaveRspLast {MemTypesCHERI::ReqId UInt#(2)} {{(* ports = ["id", "flit"] *)}}}} {method {Action slaveRsp {MemTypesCHERI::ReqId Bool} {{(* ports = ["id", "last"] *)}}}} {method {Bool mastReqsEmpty {} {{(* ports = [] *)}}}} {method {Bool mastReqsFull {} {{(* ports = [] *)}}}} {method {Bit#(5) mastReqsSpaces {} {{(* ports = [] *)}}}} {method {Bit#(5) mastNextId {} {{(* ports = [] *)}}}} {method {Bool mastCheckId MemTypesCHERI::ReqId {{(* ports = ["id"] *)}}}} {method {Action mastReq {MemTypesCHERI::ReqId UInt#(2) UInt#(2) Bit#(35) Bool} {{(* ports = ["id", "first", "last", "line", "read"] *)}}}} {method {Action mastRsp {MemTypesCHERI::ReqId Bool Bool} {{(* ports = ["id", "read", "last"] *)}}}} {method {UInt#(2) nextMastRspFlit {MemTypesCHERI::ReqId Bool} {{(* ports = ["id", "read"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 80 11}}
Interface {CacheCore::CacheCore#(numeric type ways, numeric type keyBits, numeric type inFlight)} polymorphic {members {{method {Bool canPut {} {{(* ports = [] *)}}}} {method {Action put {{MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)}} {{(* ports = ["req"] *)}}}} {interface {MasterSlaveCHERI::CheckedGet#(MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} response {{(* ports = [] *)}}} {method {Action nextWillCommit Bool {{(* ports = ["nextCommitting"] *)}}}} {method {Action invalidate {{MemTypesCHERI::PhyByteAddress#(40, 8)}} {{(* ports = ["addr"] *)}}}} {method {ActionValue#(Bool) invalidateDone {} {{(* ports = [] *)}}}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 79 11}}
Alias {CacheCore::Tag#(numeric type tagBits)} Bit#(tagBits) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 96 23}}
Alias {CacheCore::Key#(numeric type keyBits)} Bit#(keyBits) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 97 23}}
Alias CacheCore::Offset Bit#(3) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 98 28}}
Struct {CacheCore::CacheAddress#(numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bit#(tagBits) tag} {Bit#(keyBits) key} {UInt#(2) bank {width 2}} {Bit#(3) offset {width 3}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 104 3}}
Alias {CacheCore::Way#(numeric type ways)} Bit#(TLog#(ways)) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 105 27}}
Struct {CacheCore::DataKey#(numeric type ways, numeric type keyBits)} polymorphic {members {{Bit#(keyBits) key} {UInt#(2) bank {width 2}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 110 3}}
Struct CacheCore::CacheCommit {members {{Bit#(5) id {width 5}} {Bool commit {width 1}}}} {width 6} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 115 3}}
Alias CacheCore::LineCapTags {Vector::Vector#(4, Vector::Vector#(1, Bool))} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 118 35}}
Struct {CacheCore::TagLine#(numeric type tagBits)} polymorphic {members {{Bit#(tagBits) tag} {Bool dirty {width 1}} {{Vector::Vector#(8, Bool)} valid {width 8}} {Bool pendMem {width 1}} {{Vector::Vector#(4, Vector::Vector#(1, Bool))} capTags {width 4}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 129 3}}
Enum CacheCore::CacheState {members {Init Serving}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 142 30}}
Enum CacheCore::LookupCommand {members {Serve Writeback MemResponse}} {width 2} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 143 46}}
Enum CacheCore::WriteMissBehaviour {members {WriteThrough WriteAllocate}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 145 46}}
Enum CacheCore::ResponseBehaviour {members {OnlyReadResponses RespondAll}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 146 46}}
Enum CacheCore::OrderBehaviour {members {InOrder OutOfOrder}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 147 36}}
Struct {CacheCore::AddrTagWay#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{{CacheCore::CacheAddress#(keyBits, tagBits)} addr} {CacheCore::TagLine#(tagBits) tag} {Bit#(TLog#(ways)) way} {Bool cached {width 1}} {MemTypesCHERI::ReqId reqId {width 6}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 155 3}}
Struct {CacheCore::InvalidateToken#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bit#(tagBits) tag} {Bit#(keyBits) key} {Bit#(TLog#(ways)) way} {Bool valid {width 1}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 162 3}}
Struct {CacheCore::ControlToken#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{CacheCore::LookupCommand command {width 2}} {{MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} req {width 141}} {{CacheCore::CacheAddress#(keyBits, tagBits)} addr} {MemTypesCHERI::BytesPerFlit readWidth {width 3}} {{CacheCore::DataKey#(ways, keyBits)} dataKey} {Bit#(TLog#(ways)) way} {Bool last {width 1}} {Bool fresh {width 1}} {{CacheCore::InvalidateToken#(ways, keyBits, tagBits)} invalidate} {CacheCore::TagLine#(tagBits) writebackTag} {MemTypesCHERI::Error rspError {width 2}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 176 3}}
Struct CacheCore::ResponseToken {members {{{MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64)} resp {width 77}} {{MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} req {width 141}} {MemTypesCHERI::ReqId rspId {width 6}} {Bool reportResponse {width 1}} {MemTypesCHERI::ReqId deqId {width 6}} {Bool deqReqCommits {width 1}} {Bool enqRetryReq {width 1}}}} {width 233} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 186 3}}
Struct {CacheCore::RequestRecord#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bit#(keyBits) key} {MemTypesCHERI::ReqId inId {width 6}} {Bool inDone {width 1}} {MemTypesCHERI::ReqId outId {width 6}} {Bool cached {width 1}} {CacheCore::TagLine#(tagBits) oldTag} {Bit#(TLog#(ways)) oldWay} {Bool oldDirty {width 1}} {Bool write {width 1}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 198 3}}
Struct CacheCore::ReqIdWithSC {members {{MemTypesCHERI::ReqId inId {width 6}} {Bool isSC {width 1}} {Bool scResult {width 1}}}} {width 8} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 204 3}}
Struct {CacheCore::TagUpdate#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bool doWrite {width 1}} {Bit#(keyBits) key} {CacheCore::TagLine#(tagBits) newTag} {Bit#(TLog#(ways)) way}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 211 3}}
Alias CacheCore::ByteEnable {Vector::Vector#(8, Bool)} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 213 48}}
Struct CacheCore::EventsCacheCore {members {{Bool evt_WRITE {width 1}} {Bool evt_WRITE_MISS {width 1}} {Bool evt_READ {width 1}} {Bool evt_READ_MISS {width 1}} {Bool evt_EVICT {width 1}} {Bool evt_SET_TAG_WRITE {width 1}} {Bool evt_SET_TAG_READ {width 1}}}} {width 7} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 226 5}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_PA 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 22 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CWord 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 23 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CWord 16 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 24 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Byte_in_CWord 4 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 25 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_CLine 4 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 29 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CWord_in_CLine 2 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 30 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CLine 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 32 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Byte_in_CLine 6 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 33 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CLine 512 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 35 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Ways_per_CSet 2 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 39 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Way_in_CSet 1 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 40 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CSet 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 42 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::KB_per_Cache 8 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 46 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_Cache 8192 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 47 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_Cache 512 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 48 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CLines_per_Cache 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 49 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSets_per_Cache 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 51 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CSet_in_Cache 6 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 52 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_CWords_per_Cache 256 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 54 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CSet_CWord_in_Cache 8 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 55 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CTag 52 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 56 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWord Bit#(128) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 116 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CLine Bit#(512) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 117 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CTag Bit#(52) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 118 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Byte_in_CLine Bit#(6) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 119 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWord_in_CLine Bit#(2) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 120 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Way_in_CSet Bit#(1) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 121 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_in_Cache Bit#(6) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 122 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_CWord_in_Cache Bit#(8) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 123 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_PA 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 22 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CWord 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 23 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CWord 16 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 24 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Byte_in_CWord 4 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 25 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_CLine 4 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 29 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CWord_in_CLine 2 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 30 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CLine 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 32 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Byte_in_CLine 6 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 33 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CLine 512 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 35 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Ways_per_CSet 2 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 39 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Way_in_CSet 1 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 40 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CSet 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 42 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::KB_per_Cache 8 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 46 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_Cache 8192 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 47 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_Cache 512 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 48 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CLines_per_Cache 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 49 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSets_per_Cache 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 51 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CSet_in_Cache 6 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 52 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_CWords_per_Cache 256 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 54 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CSet_CWord_in_Cache 8 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 55 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CTag 52 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 56 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWord Bit#(128) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 116 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CLine Bit#(512) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 117 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CTag Bit#(52) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 118 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Byte_in_CLine Bit#(6) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 119 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWord_in_CLine Bit#(2) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 120 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Way_in_CSet Bit#(1) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 121 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_in_Cache Bit#(6) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 122 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_CWord_in_Cache Bit#(8) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 123 45}}
Alias CHERICap::SoftPerms Bit#(16) {position {../libs/cheri-cap-lib/CHERICap.bsv 36 18}}
Struct CHERICap::HardPerms {members {{Bool permitSetCID {width 1}} {Bool accessSysRegs {width 1}} {Bool permitUnseal {width 1}} {Bool permitCCall {width 1}} {Bool permitSeal {width 1}} {Bool permitStoreLocalCap {width 1}} {Bool permitStoreCap {width 1}} {Bool permitLoadCap {width 1}} {Bool permitStore {width 1}} {Bool permitLoad {width 1}} {Bool permitExecute {width 1}} {Bool global {width 1}}}} {width 12} {position {../libs/cheri-cap-lib/CHERICap.bsv 50 3}}
Struct {CHERICap::Exact#(type t)} polymorphic {members {{Bool exact {width 1}} {t value}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 71 3}}
TaggedUnion {CHERICap::Kind#(numeric type ot)} polymorphic {members {{void UNSEALED {width 0}} {void SENTRY {width 0}} {void RES0 {width 0}} {void RES1 {width 0}} {Bit#(ot) SEALED_WITH_TYPE}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 79 3}}
Struct {CHERICap::SetBoundsReturn#(type t, numeric type n)} polymorphic {members {{t cap} {Bool exact {width 1}} {Bit#(n) length} {Bit#(n) mask}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 87 3}}
Typeclass {CHERICap::CHERICap#(type t, numeric type ot, numeric type flg, numeric type n, numeric type mem_sz, numeric type maskable_bits)} {dependencies {{t determines (ot, flg, n, mem_sz, maskable_bits)}}} {members {{{function Bool f(t x1)} isValidCap} {{function t f(t x1, Bool x2)} setValidCap} {{function Bit#(flg) f(t x1)} getFlags} {{function t f(t x1, Bit#(flg) x2)} setFlags} {{function CHERICap::HardPerms f(t x1)} getHardPerms} {{function t f(t x1, CHERICap::HardPerms x2)} setHardPerms} {{function Bit#(16) f(t x1)} getSoftPerms} {{function t f(t x1, Bit#(16) x2)} setSoftPerms} {{function Bit#(31) f(t x1)} getPerms} {{function t f(t x1, Bit#(31) x2)} setPerms} {{function CHERICap::Kind#(ot) f(t x1)} getKind} {{function t f(t x1, CHERICap::Kind#(ot) x2)} setKind} {{function Bit#(n) f(t x1)} getAddr} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2)} setAddr} {{function t f(t x1, Bit#(n) x2)} setAddrUnsafe} {{function t f(t x1, Bit#(maskable_bits) x2)} addAddrUnsafe} {{function Bit#(n) f(t x1)} getOffset} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2, Bool x3)} modifyOffset} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2)} setOffset} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2)} incOffset} {{function Bit#(n) f(t x1)} getBase} {{function Bit#(TAdd#(n, 1)) f(t x1)} getTop} {{function Bit#(TAdd#(n, 1)) f(t x1)} getLength} {{function Bool f(t x1, Bool x2)} isInBounds} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2)} setBounds} {{function CHERICap::SetBoundsReturn#(t, n) f(t x1, Bit#(n) x2)} setBoundsCombined} {{function t f(Bit#(n) x1)} nullWithAddr} {{function t f(t x1)} nullCapFromDummy} {t almightyCap} {t nullCap} {{function Bool f(t x1, Bit#(n) x2)} validAsType} {{function t f(Tuple2#(Bool, Bit#(mem_sz)) x1)} fromMem} {{function Tuple2#(Bool, Bit#(mem_sz)) f(t x1)} toMem} {{function t f(t x1, Bit#(maskable_bits) x2)} maskAddr} {{function Bit#(2) f(t x1)} getBaseAlignment} {{function Bit#(n) f(t x1, Bit#(n) x2)} getRepresentableAlignmentMask} {{function Bit#(n) f(t x1, Bit#(n) x2)} getRepresentableLength} {{function Bool f(t x1)} isDerivable}}} {instances {{CHERICap::CHERICap#(CHERICC_Fat::CapMem, CHERICC_Fat::OTypeW, CHERICC_Fat::FlagsW, CHERICC_Fat::CapAddrW, CHERICC_Fat::CapW, TSub#(CHERICC_Fat::MW, 3))} {CHERICap::CHERICap#(CHERICC_Fat::CapPipe, CHERICC_Fat::OTypeW, CHERICC_Fat::FlagsW, CHERICC_Fat::CapAddrW, CHERICC_Fat::CapW, TSub#(CHERICC_Fat::MW, 3))} {CHERICap::CHERICap#(CHERICC_Fat::CapReg, CHERICC_Fat::OTypeW, CHERICC_Fat::FlagsW, CHERICC_Fat::CapAddrW, CHERICC_Fat::CapW, TSub#(CHERICC_Fat::MW, 3))}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 89 11}}
Typeclass {CHERICap::Cast#(type src, type dest)} {members {{{function dest f(src x1)} cast}}} {instances {{CHERICap::Cast#(CHERICC_Fat::CapMem, CHERICC_Fat::CapPipe)} {CHERICap::Cast#(CHERICC_Fat::CapMem, CHERICC_Fat::CapReg)} {CHERICap::Cast#(CHERICC_Fat::CapPipe, CHERICC_Fat::CapMem)} {CHERICap::Cast#(CHERICC_Fat::CapPipe, CHERICC_Fat::CapReg)} {CHERICap::Cast#(CHERICC_Fat::CapReg, CHERICC_Fat::CapMem)} {CHERICap::Cast#(CHERICC_Fat::CapReg, CHERICC_Fat::CapPipe)} {CHERICap::Cast#(CPU_Globals::Pipeline_Val#(a), CPU_Globals::Pipeline_Val#(b))   provisos (CHERICap::Cast#(a, b))} {CHERICap::Cast#(function CHERICC_Fat::CapPipe f(t x1), function Bit#(CHERICC_Fat::CapAddrW) f(t x1))} {CHERICap::Cast#(function CHERICC_Fat::CapReg f(t x1), function CHERICC_Fat::CapPipe f(t x1))} {CHERICap::Cast#(t, t)}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 216 11}}
Struct {VnD::VnD#(type a)} polymorphic {members {{Bool v {width 1}} {a d}}} {position {../libs/TagController/TagController/CacheCore/VnD.bsv 35 3}}
Alias CHERICC_Fat::UPermW 4 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 86 13}}
Alias CHERICC_Fat::MW 14 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 87 13}}
Alias CHERICC_Fat::ExpW 6 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 88 13}}
Alias CHERICC_Fat::OTypeW 18 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 89 13}}
Alias CHERICC_Fat::FlagsW 1 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 90 17}}
Alias CHERICC_Fat::CapAddrW 64 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 91 13}}
Alias CHERICC_Fat::CapW 128 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 92 13}}
Alias CHERICC_Fat::AddressW 64 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 100 18}}
Alias CHERICC_Fat::Address Bit#(64) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 101 28}}
Alias CHERICC_Fat::HalfExpW 3 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 102 28}}
Alias CHERICC_Fat::UpperMW 11 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 103 28}}
Alias CHERICC_Fat::CBoundsW 27 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 106 30}}
Alias CHERICC_Fat::CBounds Bit#(27) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 107 24}}
Alias CHERICC_Fat::CapAddr Bit#(64) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 109 33}}
Alias CHERICC_Fat::CapAddrPlus1 Bit#(65) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 110 33}}
Alias CHERICC_Fat::CapAddrPlus2 Bit#(66) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 111 33}}
Struct CHERICC_Fat::HPerms {members {{Bool permit_set_CID {width 1}} {Bool access_sys_regs {width 1}} {Bool permit_unseal {width 1}} {Bool permit_ccall {width 1}} {Bool permit_seal {width 1}} {Bool permit_store_ephemeral_cap {width 1}} {Bool permit_store_cap {width 1}} {Bool permit_load_cap {width 1}} {Bool permit_store {width 1}} {Bool permit_load {width 1}} {Bool permit_execute {width 1}} {Bool non_ephemeral {width 1}}}} {width 12} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 126 3}}
Struct CHERICC_Fat::Perms {members {{Bit#(4) soft {width 4}} {CHERICC_Fat::HPerms hard {width 12}}}} {width 16} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 131 3}}
Alias CHERICC_Fat::PermsW 16 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 132 24}}
Alias CHERICC_Fat::ResW 2 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 137 68}}
Struct CHERICC_Fat::CapabilityInMemory {members {{Bool isCapability {width 1}} {CHERICC_Fat::Perms perms {width 16}} {Bit#(2) reserved {width 2}} {Bit#(1) flags {width 1}} {Bit#(18) otype {width 18}} {Bit#(27) bounds {width 27}} {Bit#(64) address {width 64}}}} {width 129} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 147 3}}
Alias CHERICC_Fat::Capability Bit#(129) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 149 29}}
Alias CHERICC_Fat::CapBits Bit#(128) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 151 20}}
Alias CHERICC_Fat::DebugCap Bit#(128) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 158 20}}
Enum CHERICC_Fat::Format {members {Exp0 EmbeddedExp}} {width 1} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 160 34}}
Alias CHERICC_Fat::Exp UInt#(6) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 162 21}}
Alias CHERICC_Fat::CType CHERICC_Fat::VnD#(Bit#(18)) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 164 28}}
Struct CHERICC_Fat::CapFat {members {{Bool isCapability {width 1}} {Bit#(64) address {width 64}} {Bit#(14) addrBits {width 14}} {CHERICC_Fat::Perms perms {width 16}} {Bit#(1) flags {width 1}} {Bit#(2) reserved {width 2}} {Bit#(18) otype {width 18}} {CHERICC_Fat::Format format {width 1}} {CHERICC_Fat::Bounds bounds {width 34}}}} {width 151} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 182 3}}
Alias CHERICC_Fat::TempFields CHERICC_Fat::MetaInfo {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 255 18}}
Struct CHERICC_Fat::Bounds {members {{UInt#(6) exp {width 6}} {Bit#(14) topBits {width 14}} {Bit#(14) baseBits {width 14}}}} {width 34} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 695 3}}
Struct CHERICC_Fat::BoundsExp0 {members {{Bool embeddedExp {width 1}} {Bit#(12) top {width 12}} {Bit#(14) base {width 14}}}} {width 27} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 761 3}}
Struct CHERICC_Fat::BoundsEmbeddedExp {members {{Bool embeddedExp {width 1}} {Bit#(9) topUpperBits {width 9}} {Bit#(3) expTopHalf {width 3}} {Bit#(11) baseUpperBits {width 11}} {Bit#(3) expBotHalf {width 3}}}} {width 27} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 769 3}}
Struct CHERICC_Fat::MetaInfo {members {{Bit#(3) repBoundTopBits {width 3}} {Bool topHi {width 1}} {Bool baseHi {width 1}} {Bool addrHi {width 1}} {Int#(2) topCorrection {width 2}} {Int#(2) baseCorrection {width 2}}}} {width 10} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 832 3}}
Alias CHERICC_Fat::CapMem Bit#(129) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 860 30}}
Alias CHERICC_Fat::CapReg CHERICC_Fat::CapFat {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 862 16}}
Struct CHERICC_Fat::CapPipe {members {{CHERICC_Fat::CapFat capFat {width 151}} {CHERICC_Fat::MetaInfo tempFields {width 10}}}} {width 161} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 867 3}}
Struct {CHERICap::SetBoundsReturn#(type t, numeric type n)} polymorphic {members {{t cap} {Bool exact {width 1}} {Bit#(n) length} {Bit#(n) mask}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 87 3}}
Interface PTMClocks::OutputBit {members {{method {Bit#(1) out {} {{(* ports = [] *)}}}}}} {position {PTMClocks.bsv 12 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ClockHacks::UnpackedClock {members {{interface Clock clk {}} {method {Action in Bit#(1) {{(* ports = ["x"] *)}}}}}} {position {src_BSV/ClockHacks.bsv 41 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ClockHacks::UnpackedReset {members {{interface Reset rst {}} {method {Action in Bit#(1) {{(* ports = ["x"] *)}}}}}} {position {src_BSV/ClockHacks.bsv 61 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ClockHacks::BlockIfc {members {{interface Clock clk {}} {interface Reset rst {}}}} {position {src_BSV/ClockHacks.bsv 83 11}}

Interface {Core_IFC::Core_IFC#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 80 11}}
Interface {Core_IFC::Core_IFC_Synth#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master_Sig#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master_Sig#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 190 11}}
Enum CPU::CPU_State {members {CPU_RESET1 CPU_RESET2 CPU_GDB_PAUSING CPU_DEBUG_MODE CPU_RUNNING CPU_TRAP CPU_START_TRAP_HANDLER CPU_CSRRW_2 CPU_CSRR_S_or_C_2 CPU_SCR_W_2 CPU_CSRRX_RESTART CPU_FENCE_I CPU_FENCE CPU_SFENCE_VMA CPU_WFI_PAUSED}} {width 4} {position {../src_Core/CPU/CPU.bsv 147 6}}


Enum CPU_Globals::Stage_OStatus {members {OSTATUS_EMPTY OSTATUS_BUSY OSTATUS_PIPE OSTATUS_NONPIPE}} {width 2} {position {../src_Core/CPU/CPU_Globals.bsv 48 6}}
Alias CPU_Globals::Epoch Bit#(2) {position {../src_Core/CPU/CPU_Globals.bsv 59 19}}
Enum CPU_Globals::CF_Op {members {CF_BR CF_JAL CF_JALR CF_None}} {width 2} {position {../src_Core/CPU/CPU_Globals.bsv 74 6}}
Struct CPU_Globals::CF_Info {members {{CPU_Globals::CF_Op cf_op {width 2}} {Bit#(64) from_PC {width 64}} {Bool taken {width 1}} {Bit#(64) fallthru_PC {width 64}} {Bit#(64) taken_PC {width 64}}}} {width 195} {position {../src_Core/CPU/CPU_Globals.bsv 83 6}}
Enum CPU_Globals::Bypass_State {members {BYPASS_RD_NONE BYPASS_RD BYPASS_RD_RDVAL}} {width 2} {position {../src_Core/CPU/CPU_Globals.bsv 123 61}}
Struct CPU_Globals::Bypass {members {{CPU_Globals::Bypass_State bypass_state {width 2}} {Bit#(5) rd {width 5}} {CHERICC_Fat::CapPipe rd_val {width 161}}}} {width 168} {position {../src_Core/CPU/CPU_Globals.bsv 136 6}}
Struct CPU_Globals::FBypass {members {{CPU_Globals::Bypass_State bypass_state {width 2}} {Bit#(5) rd {width 5}} {Bit#(64) rd_val {width 64}}}} {width 71} {position {../src_Core/CPU/CPU_Globals.bsv 157 6}}
Typeclass {CPU_Globals::PCC#(type t)} {members {{{function CHERICap::Exact#(t) f(t x1, Bit#(64) x2)} setPC} {{function Bit#(64) f(t x1)} getPC} {{function Bit#(64) f(t x1)} getPCCBase} {{function Bool f(t x1)} checkPreValid} {{function Maybe#(Bit#(5)) f(t x1, Bit#(65) x2, Bool x3)} checkValid} {{function t f(CHERICC_Fat::CapPipe x1)} fromCapPipe} {{function CHERICC_Fat::CapPipe f(t x1)} toCapPipe}}} {instances CPU_Globals::PCC#(CPU_Globals::PCC_T)} {position {../src_Core/CPU/CPU_Globals.bsv 219 11}}
Alias CPU_Globals::PCC_T {Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} {position {../src_Core/CPU/CPU_Globals.bsv 229 37}}
Struct CPU_Globals::Trap_Info_Pipe {members {{{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} epcc {width 225}} {Bit#(5) cheri_exc_code {width 5}} {Bit#(6) cheri_exc_reg {width 6}} {Bit#(6) exc_code {width 6}} {Bit#(64) tval {width 64}}}} {width 306} {position {../src_Core/CPU/CPU_Globals.bsv 287 6}}
Struct CPU_Globals::Output_StageF {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Data_StageF_to_StageD data_to_stageD {width 239}}}} {width 241} {position {../src_Core/CPU/CPU_Globals.bsv 298 6}}
Struct CPU_Globals::Data_StageF_to_StageD {members {{Bit#(64) fetch_addr {width 64}} {Bool is_cap_mode {width 1}} {Bool refresh_pcc {width 1}} {Bit#(2) epoch {width 2}} {Bit#(2) priv {width 2}} {Bool is_i32_not_i16 {width 1}} {Bool exc {width 1}} {Bit#(6) exc_code {width 6}} {Bit#(64) tval {width 64}} {Bit#(32) instr {width 32}} {Bit#(64) pred_fetch_addr {width 64}} {Bool pred_is_cap_mode {width 1}}}} {width 239} {position {../src_Core/CPU/CPU_Globals.bsv 336 6}}
Struct CPU_Globals::Output_StageD {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Data_StageD_to_Stage1 data_to_stage1 {width 433}}}} {width 435} {position {../src_Core/CPU/CPU_Globals.bsv 360 6}}
Struct CPU_Globals::Data_StageD_to_Stage1 {members {{Bit#(64) fetch_addr {width 64}} {Bool is_cap_mode {width 1}} {Bool refresh_pcc {width 1}} {Bit#(2) priv {width 2}} {Bit#(2) epoch {width 2}} {Bool is_i32_not_i16 {width 1}} {Bool exc {width 1}} {Bit#(6) exc_code {width 6}} {Bit#(64) tval {width 64}} {Bit#(32) instr {width 32}} {Bit#(32) instr_or_instr_C {width 32}} {Bit#(64) pred_fetch_addr {width 64}} {Bool pred_is_cap_mode {width 1}} {ISA_Decls::Decoded_Instr decoded_instr {width 162}}}} {width 433} {position {../src_Core/CPU/CPU_Globals.bsv 404 6}}
Enum CPU_Globals::Control {members {CONTROL_DISCARD CONTROL_STRAIGHT CONTROL_BRANCH CONTROL_CSRR_W CONTROL_CAPBRANCH CONTROL_SCR_W CONTROL_CSRR_S_or_C CONTROL_FENCE CONTROL_FENCE_I CONTROL_SFENCE_VMA CONTROL_MRET CONTROL_SRET CONTROL_URET CONTROL_WFI CONTROL_TRAP}} {width 4} {position {../src_Core/CPU/CPU_Globals.bsv 443 6}}
Struct CPU_Globals::Output_Stage1 {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Control control {width 4}} {CPU_Globals::Trap_Info_Pipe trap_info {width 306}} {Bool redirect {width 1}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} next_pcc {width 225}} {CPU_Globals::CF_Info cf_info {width 195}} {CPU_Globals::Data_Stage1_to_Stage2 data_to_stage2 {width 1285}}}} {width 2018} {position {../src_Core/CPU/CPU_Globals.bsv 464 6}}
Enum CPU_Globals::Op_Stage2 {members {OP_Stage2_ALU OP_Stage2_LD OP_Stage2_ST OP_Stage2_M OP_Stage2_AMO OP_Stage2_FD OP_Stage2_TestSubset}} {width 3} {position {../src_Core/CPU/CPU_Globals.bsv 528 6}}
Struct {CPU_Globals::Pipeline_Val#(type capType)} polymorphic {members {{capType val}}} {position {../src_Core/CPU/CPU_Globals.bsv 537 6}}
Struct CPU_Globals::Data_Stage1_to_Stage2 {members {{Bit#(2) priv {width 2}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {Bit#(32) instr {width 32}} {CPU_Globals::Op_Stage2 op_stage2 {width 3}} {Bit#(5) rd {width 5}} {Bit#(64) addr {width 64}} {CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapPipe) val1 {width 161}} {CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapPipe) val2 {width 161}} {Bit#(64) val1_fast {width 64}} {Bit#(64) val2_fast {width 64}} {CHERICC_Fat::CapPipe check_authority {width 161}} {Bit#(6) check_authority_idx {width 6}} {Bit#(64) check_address_low {width 64}} {Bit#(65) check_address_high {width 65}} {Bool check_enable {width 1}} {Bool check_inclusive {width 1}} {Bool check_exact_enable {width 1}} {Bool check_exact_success {width 1}} {Bool set_offset_in_bounds {width 1}} {Bool mem_allow_cap {width 1}} {Bit#(3) mem_width_code {width 3}} {Bool mem_unsigned {width 1}} {Bit#(64) fval1 {width 64}} {Bit#(64) fval2 {width 64}} {Bit#(64) fval3 {width 64}} {Bool rd_in_fpr {width 1}} {Bool rs_frm_fpr {width 1}} {Bool val1_frm_gpr {width 1}} {Bit#(3) rounding_mode {width 3}}}} {width 1285} {position {../src_Core/CPU/CPU_Globals.bsv 633 6}}
Struct CPU_Globals::Output_Stage2 {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Trap_Info_Pipe trap_info {width 306}} {CPU_Globals::Output_Stage2_Perf perf {width 5}} {Bool check_success {width 1}} {CPU_Globals::Bypass bypass {width 168}} {CPU_Globals::FBypass fbypass {width 71}} {CPU_Globals::Data_Stage2_to_Stage3 data_to_stage3 {width 487}}}} {width 1040} {position {../src_Core/CPU/CPU_Globals.bsv 717 6}}
Struct CPU_Globals::Output_Stage2_Perf {members {{Bool sc_success {width 1}} {Bool ld_cap {width 1}} {Bool ld_cap_tag_set {width 1}} {Bool ld_wait {width 1}} {Bool st_wait {width 1}}}} {width 5} {position {../src_Core/CPU/CPU_Globals.bsv 727 3}}
Struct CPU_Globals::Data_Stage2_to_Stage3 {members {{{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {Bit#(32) instr {width 32}} {Bit#(2) priv {width 2}} {Bool rd_valid {width 1}} {Bit#(5) rd {width 5}} {CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapFat) rd_val {width 151}} {Bool upd_flags {width 1}} {Bool rd_in_fpr {width 1}} {Bit#(5) fpr_flags {width 5}} {Bit#(64) frd_val {width 64}}}} {width 487} {position {../src_Core/CPU/CPU_Globals.bsv 776 6}}
Struct CPU_Globals::Output_Stage3 {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Bypass bypass {width 168}} {CPU_Globals::FBypass fbypass {width 71}}}} {width 241} {position {../src_Core/CPU/CPU_Globals.bsv 824 6}}
Interface CPU_IFC::CPU_IFC {members {{interface {ClientServer::Server#(Bool, Bool)} hart0_server_reset {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 1, 0, 0, 1)} imem_master {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {Action m_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface {ClientServer::Server#(Bool, Bool)} hart0_server_run_halt {}} {interface GetPut::Put#(Bit#(4)) hart0_put_other_req {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_gpr_mem_server {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_fpr_mem_server {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_csr_mem_server {}} {method {Action relay_external_events {StatCounters::AXI4_Slave_Events StatCounters::AXI4_Master_Events StatCounters::EventsTGC} {{(* ports = ["slave_evts", "master_evts", "tag_cache_evts"] *)}}}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_IFC.bsv 64 11}}
Interface CPU_Stage1::CPU_Stage1_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_Stage1 out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq CPU_Globals::Data_StageD_to_Stage1 {{(* ports = ["data"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_Stage1.bsv 56 11}}
Interface CPU_Stage2::CPU_Stage2_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_Stage2 out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq {CPU_Globals::Data_Stage1_to_Stage2 Bool} {{(* ports = ["x", "valid"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_Stage2.bsv 92 11}}
Interface CPU_Stage3::CPU_Stage3_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_Stage3 out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq CPU_Globals::Data_Stage2_to_Stage3 {{(* ports = ["x"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}} {method {Action show_state {} {{(* ports = [] *)}}}}}} {position {../src_Core/CPU/CPU_Stage3.bsv 58 11}}
Interface CPU_StageD::CPU_StageD_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_StageD out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq CPU_Globals::Data_StageF_to_StageD {{(* ports = ["data_stageF_to_stageD"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_StageD.bsv 43 11}}
Interface CPU_StageF::CPU_StageF_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_StageF out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq {Bit#(2) Bit#(64) Bool Bool Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["epoch", "fetch_addr", "is_cap_mode", "refresh_pcc", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action bp_train {Bit#(64) Bool Bit#(32) CPU_Globals::CF_Info} {{(* ports = ["pc", "is_i32_not_i16", "instr", "cf_info"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_StageF.bsv 47 11}}
Interface {CreditCounter::CreditCounter_IFC#(numeric type w)} polymorphic {members {{method {UInt#(w) value {} {{(* ports = [] *)}}}} {method {Action incr {} {{(* ports = [] *)}}}} {method {Action decr {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/CreditCounter.bsv 16 11}}
Interface CSR_MIE::CSR_MIE_IFC {members {{method {Action reset {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(Bit#(64)) mav_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_sie_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(Bit#(64)) mav_sie_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/RegFiles/CSR_MIE.bsv 26 11}}
Interface CSR_MIP::CSR_MIP_IFC {members {{method {Action reset {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(Bit#(64)) mav_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_sip_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(Bit#(64)) mav_sip_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)} {(* always_ready  *)}}}} {method {Action m_external_interrupt_req Bool {{(* ports = ["req"] *)} {(* always_ready  *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["req"] *)} {(* always_ready  *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["req"] *)} {(* always_ready  *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["req"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/RegFiles/CSR_MIP.bsv 27 11}}
Interface CSR_MSTATUS::CSR_MSTATUS_IFC {members {{method {Action reset ISA_Decls::MISA {{(* ports = ["misa_reset_value"] *)}}}} {method {Bit#(64) mv_read {} {{(* ports = [] *)}}}} {method {Bit#(64) mv_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {Action ma_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {ActionValue#(Bit#(64)) mav_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {Bit#(64) mv_ustatus_read {} {{(* ports = [] *)}}}} {method {Action ma_ustatus_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {ActionValue#(Bit#(64)) mav_ustatus_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {Bit#(64) mv_sstatus_read {} {{(* ports = [] *)}}}} {method {Action ma_sstatus_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {ActionValue#(Bit#(64)) mav_sstatus_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}}}} {position {../src_Core/RegFiles/CSR_MSTATUS.bsv 26 11}}
Struct CSR_RegFile_MSU::CSR_Write_Result {members {{Bit#(64) new_csr_value {width 64}} {Maybe#(Bit#(64)) m_new_csr_value2 {width 65}}}} {width 129} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 75 1}}
Struct CSR_RegFile_MSU::AccessPerms {members {{Bool exists {width 1}} {Bool requires_asr {width 1}}}} {width 2} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 84 4}}
Interface CSR_RegFile_MSU::CSR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Maybe#(Bit#(64)) read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(64)) read_csr_port2 Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(CHERICC_Fat::CapFat) read_scr Bit#(5) {{(* ports = ["scr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(Maybe#(Bit#(64))) mav_read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CSR_RegFile_MSU::CSR_Write_Result) mav_csr_write {Bit#(12) Bit#(64)} {{(* ports = ["csr_addr", "word"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CHERICC_Fat::CapFat) mav_scr_write {Bit#(5) CHERICC_Fat::CapFat} {{(* ports = ["scr_addr", "cap"] *)} {(* always_ready  *)}}}} {method {Bit#(3) read_frm {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) read_fflags {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) mv_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Action ma_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {Action ma_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {ISA_Decls::MISA read_misa {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_mstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_sstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_ustatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_satp {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(ISA_Decls::Trap_Info_CSR) csr_trap_actions {Bit#(2) CHERICC_Fat::CapPipe Bool Bool Bit#(5) Bit#(6) Bit#(6) Bit#(64)} {{(* ports = ["from_priv", "pcc", "nmi", "interrupt", "cheri_exc_code", "cheri_exc_reg", "exc_code", "xtval"] *)}}}} {method {{ActionValue#(Tuple3#(CHERICC_Fat::CapPipe, Bit#(2), Bit#(64)))} csr_ret_actions Bit#(2) {{(* ports = ["from_priv"] *)}}}} {method {Bit#(64) read_csr_minstret {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action csr_minstret_incr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mcycle {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mtime {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action send_performance_events {{Vector::Vector#(115, Bit#(64))}} {{(* ports = ["evts"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_1 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_2 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_scr {Bit#(2) Bit#(5) Bool} {{(* ports = ["priv", "scr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {Bool csr_counter_read_fault {Bit#(2) Bit#(12)} {{(* ports = ["priv", "csr_addr"] *)} {(* always_ready  *)}}}} {method {Bit#(64) csr_mip_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action m_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(6)) interrupt_pending Bit#(2) {{(* ports = ["cur_priv"] *)} {(* always_ready  *)}}}} {method {Bool wfi_resume {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Bool nmi_pending {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_dpcc {} {{(* ports = [] *)}}}} {method {Action write_dpcc CHERICC_Fat::CapPipe {{(* ports = ["pcc"] *)}}}} {method {Bool dcsr_break_enters_debug Bit#(2) {{(* ports = ["cur_priv"] *)}}}} {method {Bool read_dcsr_step {} {{(* ports = [] *)}}}} {method {Action write_dcsr_cause_priv {DM_Common::DCSR_Cause Bit#(2)} {{(* ports = ["cause", "priv"] *)} {(* always_ready  *)}}}} {method {Action debug {} {{(* ports = [] *)}}}}}} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 86 11}}
Struct CSR_RegFile_MSU::CSR_Write_Result {members {{Bit#(64) new_csr_value {width 64}} {Maybe#(Bit#(64)) m_new_csr_value2 {width 65}}}} {width 129} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 75 1}}
Struct CSR_RegFile_MSU::AccessPerms {members {{Bool exists {width 1}} {Bool requires_asr {width 1}}}} {width 2} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 84 4}}
Interface CSR_RegFile_MSU::CSR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Maybe#(Bit#(64)) read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(64)) read_csr_port2 Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(CHERICC_Fat::CapFat) read_scr Bit#(5) {{(* ports = ["scr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(Maybe#(Bit#(64))) mav_read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CSR_RegFile_MSU::CSR_Write_Result) mav_csr_write {Bit#(12) Bit#(64)} {{(* ports = ["csr_addr", "word"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CHERICC_Fat::CapFat) mav_scr_write {Bit#(5) CHERICC_Fat::CapFat} {{(* ports = ["scr_addr", "cap"] *)} {(* always_ready  *)}}}} {method {Bit#(3) read_frm {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) read_fflags {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) mv_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Action ma_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {Action ma_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {ISA_Decls::MISA read_misa {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_mstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_sstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_ustatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_satp {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(ISA_Decls::Trap_Info_CSR) csr_trap_actions {Bit#(2) CHERICC_Fat::CapPipe Bool Bool Bit#(5) Bit#(6) Bit#(6) Bit#(64)} {{(* ports = ["from_priv", "pcc", "nmi", "interrupt", "cheri_exc_code", "cheri_exc_reg", "exc_code", "xtval"] *)}}}} {method {{ActionValue#(Tuple3#(CHERICC_Fat::CapPipe, Bit#(2), Bit#(64)))} csr_ret_actions Bit#(2) {{(* ports = ["from_priv"] *)}}}} {method {Bit#(64) read_csr_minstret {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action csr_minstret_incr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mcycle {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mtime {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action send_performance_events {{Vector::Vector#(115, Bit#(64))}} {{(* ports = ["evts"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_1 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_2 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_scr {Bit#(2) Bit#(5) Bool} {{(* ports = ["priv", "scr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {Bool csr_counter_read_fault {Bit#(2) Bit#(12)} {{(* ports = ["priv", "csr_addr"] *)} {(* always_ready  *)}}}} {method {Bit#(64) csr_mip_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action m_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(6)) interrupt_pending Bit#(2) {{(* ports = ["cur_priv"] *)} {(* always_ready  *)}}}} {method {Bool wfi_resume {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Bool nmi_pending {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_dpcc {} {{(* ports = [] *)}}}} {method {Action write_dpcc CHERICC_Fat::CapPipe {{(* ports = ["pcc"] *)}}}} {method {Bool dcsr_break_enters_debug Bit#(2) {{(* ports = ["cur_priv"] *)}}}} {method {Bool read_dcsr_step {} {{(* ports = [] *)}}}} {method {Action write_dcsr_cause_priv {DM_Common::DCSR_Cause Bit#(2)} {{(* ports = ["cause", "priv"] *)} {(* always_ready  *)}}}} {method {Action debug {} {{(* ports = [] *)}}}}}} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 86 11}}
Enum CSR_RegFile_MSU::RF_State {members {RF_RESET_START RF_RUNNING}} {width 1} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 347 45}}

Interface {Debug::Debug#(type a, type b)} polymorphic {members {{method {a inf {} {}}} {method {b debugging {} {}}}}} {position {../libs/TagController/TagController/Debug.bsv 181 11}}
Interface {Debug::Display#(type a)} polymorphic {members {{method {Action debug_display a {{(* ports = ["v"] *)}}}}}} {position {../libs/TagController/TagController/Debug.bsv 190 11}}
Interface Debug_Module::Debug_Module_IFC {members {{interface DM_Common::DMI dmi {}} {interface {ClientServer::Client#(Bool, Bool)} hart0_reset_client {}} {interface {ClientServer::Client#(Bool, Bool)} hart0_client_run_halt {}} {interface GetPut::Get#(Bit#(4)) hart0_get_other_req {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_gpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_fpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_csr_mem_client {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} master {}}}} {position {../src_Core/Debug_Module/Debug_Module.bsv 101 11}}
Alias DM_Common::DM_Addr Bit#(7) {position {../src_Core/Debug_Module/DM_Common.bsv 23 19}}
Alias DM_Common::DM_Word Bit#(32) {position {../src_Core/Debug_Module/DM_Common.bsv 27 19}}
Enum DM_Common::DM_abstractcs_cmderr {members {DM_ABSTRACTCS_CMDERR_NONE DM_ABSTRACTCS_CMDERR_BUSY DM_ABSTRACTCS_CMDERR_NOT_SUPPORTED DM_ABSTRACTCS_CMDERR_EXCEPTION DM_ABSTRACTCS_CMDERR_HALT_RESUME DM_ABSTRACTCS_CMDERR_UNDEF5 DM_ABSTRACTCS_CMDERR_UNDEF6 DM_ABSTRACTCS_CMDERR_OTHER}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 277 6}}
Enum DM_Common::DM_command_cmdtype {members {DM_COMMAND_CMDTYPE_ACCESS_REG DM_COMMAND_CMDTYPE_QUICK_ACCESS}} {width 1} {position {../src_Core/Debug_Module/DM_Common.bsv 308 6}}
Enum DM_Common::DM_command_access_reg_size {members {DM_COMMAND_ACCESS_REG_SIZE_UNDEF0 DM_COMMAND_ACCESS_REG_SIZE_UNDEF1 DM_COMMAND_ACCESS_REG_SIZE_LOWER32 DM_COMMAND_ACCESS_REG_SIZE_LOWER64 DM_COMMAND_ACCESS_REG_SIZE_LOWER128 DM_COMMAND_ACCESS_REG_SIZE_UNDEF5 DM_COMMAND_ACCESS_REG_SIZE_UNDEF6 DM_COMMAND_ACCESS_REG_SIZE_UNDEF7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 319 6}}
Enum DM_Common::DM_sbaccess {members {DM_SBACCESS_8_BIT DM_SBACCESS_16_BIT DM_SBACCESS_32_BIT DM_SBACCESS_64_BIT DM_SBACCESS_128_BIT}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 381 6}}
Enum DM_Common::DM_sberror {members {DM_SBERROR_NONE DM_SBERROR_TIMEOUT DM_SBERROR_BADADDR DM_SBERROR_OTHER DM_SBERROR_BUSY_STALE DM_SBERROR_UNDEF5 DM_SBERROR_UNDEF6 DM_SBERROR_UNDEF7_W1C}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 402 6}}
Enum DM_Common::DCSR_Cause {members {DCSR_CAUSE_RESERVED0 DCSR_CAUSE_EBREAK DCSR_CAUSE_TRIGGER DCSR_CAUSE_HALTREQ DCSR_CAUSE_STEP DCSR_CAUSE_RESERVED5 DCSR_CAUSE_RESERVED6 DCSR_CAUSE_RESERVED7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 488 6}}
Struct JtagTap::DMI {members {{Bit#(6) address {width 6}} {Bit#(32) data {width 32}} {Bit#(2) op {width 2}}}} {width 40} {position {src_BSV/JtagTap.bsv 120 6}}
Interface DM_Abstract_Commands::DM_Abstract_Commands_IFC {members {{method {Action reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(32)) av_read Bit#(7) {{(* ports = ["dm_addr"] *)}}}} {method {Action write {Bit#(7) Bit#(32)} {{(* ports = ["dm_addr", "dm_word"] *)}}}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_gpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_fpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_csr_mem_client {}}}} {position {../src_Core/Debug_Module/DM_Abstract_Commands.bsv 33 11}}
Alias DM_Common::DM_Addr Bit#(7) {position {../src_Core/Debug_Module/DM_Common.bsv 23 19}}
Alias DM_Common::DM_Word Bit#(32) {position {../src_Core/Debug_Module/DM_Common.bsv 27 19}}
Enum DM_Common::DM_abstractcs_cmderr {members {DM_ABSTRACTCS_CMDERR_NONE DM_ABSTRACTCS_CMDERR_BUSY DM_ABSTRACTCS_CMDERR_NOT_SUPPORTED DM_ABSTRACTCS_CMDERR_EXCEPTION DM_ABSTRACTCS_CMDERR_HALT_RESUME DM_ABSTRACTCS_CMDERR_UNDEF5 DM_ABSTRACTCS_CMDERR_UNDEF6 DM_ABSTRACTCS_CMDERR_OTHER}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 277 6}}
Enum DM_Common::DM_command_cmdtype {members {DM_COMMAND_CMDTYPE_ACCESS_REG DM_COMMAND_CMDTYPE_QUICK_ACCESS}} {width 1} {position {../src_Core/Debug_Module/DM_Common.bsv 308 6}}
Enum DM_Common::DM_command_access_reg_size {members {DM_COMMAND_ACCESS_REG_SIZE_UNDEF0 DM_COMMAND_ACCESS_REG_SIZE_UNDEF1 DM_COMMAND_ACCESS_REG_SIZE_LOWER32 DM_COMMAND_ACCESS_REG_SIZE_LOWER64 DM_COMMAND_ACCESS_REG_SIZE_LOWER128 DM_COMMAND_ACCESS_REG_SIZE_UNDEF5 DM_COMMAND_ACCESS_REG_SIZE_UNDEF6 DM_COMMAND_ACCESS_REG_SIZE_UNDEF7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 319 6}}
Enum DM_Common::DM_sbaccess {members {DM_SBACCESS_8_BIT DM_SBACCESS_16_BIT DM_SBACCESS_32_BIT DM_SBACCESS_64_BIT DM_SBACCESS_128_BIT}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 381 6}}
Enum DM_Common::DM_sberror {members {DM_SBERROR_NONE DM_SBERROR_TIMEOUT DM_SBERROR_BADADDR DM_SBERROR_OTHER DM_SBERROR_BUSY_STALE DM_SBERROR_UNDEF5 DM_SBERROR_UNDEF6 DM_SBERROR_UNDEF7_W1C}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 402 6}}
Enum DM_Common::DCSR_Cause {members {DCSR_CAUSE_RESERVED0 DCSR_CAUSE_EBREAK DCSR_CAUSE_TRIGGER DCSR_CAUSE_HALTREQ DCSR_CAUSE_STEP DCSR_CAUSE_RESERVED5 DCSR_CAUSE_RESERVED6 DCSR_CAUSE_RESERVED7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 488 6}}
Struct JtagTap::DMI {members {{Bit#(6) address {width 6}} {Bit#(32) data {width 32}} {Bit#(2) op {width 2}}}} {width 40} {position {src_BSV/JtagTap.bsv 120 6}}
Struct {DM_CPU_Req_Rsp::DM_CPU_Req#(numeric type a, numeric type d)} polymorphic {members {{Bool write {width 1}} {Bit#(a) address} {Bit#(d) data}}} {position {../src_Core/Debug_Module/DM_CPU_Req_Rsp.bsv 25 3}}
Struct {DM_CPU_Req_Rsp::DM_CPU_Rsp#(numeric type d)} polymorphic {members {{Bool ok {width 1}} {Bit#(d) data}}} {position {../src_Core/Debug_Module/DM_CPU_Req_Rsp.bsv 31 3}}
Interface DM_Run_Control::DM_Run_Control_IFC {members {{method {Bool dmactive {} {{(* ports = [] *)}}}} {method {Action reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(32)) av_read Bit#(7) {{(* ports = ["dm_addr"] *)}}}} {method {Action write {Bit#(7) Bit#(32)} {{(* ports = ["dm_addr", "dm_word"] *)}}}} {interface {ClientServer::Client#(Bool, Bool)} hart0_reset_client {}} {interface {ClientServer::Client#(Bool, Bool)} hart0_client_run_halt {}} {interface GetPut::Get#(Bit#(4)) hart0_get_other_req {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}}}} {position {../src_Core/Debug_Module/DM_Run_Control.bsv 32 11}}
Interface DM_System_Bus::DM_System_Bus_IFC {members {{method {Action reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(32)) av_read Bit#(7) {{(* ports = ["dm_addr"] *)}}}} {method {Action write {Bit#(7) Bit#(32)} {{(* ports = ["dm_addr", "dm_word"] *)}}}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} master {}}}} {position {../src_Core/Debug_Module/DM_System_Bus.bsv 45 11}}
Enum DM_System_Bus::SB_State {members {SB_NOTBUSY SB_READ_FINISH SB_WRITE_FINISH}} {width 2} {position {../src_Core/Debug_Module/DM_System_Bus.bsv 184 6}}
Struct EX_ALU_functions::ALU_Inputs {members {{Bit#(2) cur_priv {width 2}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {CHERICC_Fat::CapPipe ddc {width 161}} {Bit#(5) rs1_idx {width 5}} {Bit#(5) rs2_idx {width 5}} {Bit#(64) pc {width 64}} {Bool is_i32_not_i16 {width 1}} {Bit#(32) instr {width 32}} {Bit#(32) instr_or_instr_C {width 32}} {ISA_Decls::Decoded_Instr decoded_instr {width 162}} {Bit#(64) rs1_val {width 64}} {Bit#(64) rs2_val {width 64}} {Bit#(64) mstatus {width 64}} {Bit#(3) frm {width 3}} {Bit#(64) frs1_val {width 64}} {Bit#(64) frs2_val {width 64}} {Bit#(64) frs3_val {width 64}} {CHERICC_Fat::CapPipe cap_rs1_val {width 161}} {CHERICC_Fat::CapPipe cap_rs2_val {width 161}} {ISA_Decls::MISA misa {width 28}}}} {width 1426} {position {../src_Core/CPU/EX_ALU_functions.bsv 86 6}}
Struct EX_ALU_functions::ALU_Outputs {members {{CPU_Globals::Control control {width 4}} {Bit#(6) exc_code {width 6}} {Bit#(5) cheri_exc_code {width 5}} {Bit#(6) cheri_exc_reg {width 6}} {CPU_Globals::Op_Stage2 op_stage2 {width 3}} {Bit#(5) rd {width 5}} {Bit#(64) addr {width 64}} {Bit#(64) val1 {width 64}} {Bit#(64) val2 {width 64}} {Bit#(64) val1_fast {width 64}} {Bit#(64) val2_fast {width 64}} {Bit#(64) fval1 {width 64}} {Bit#(64) fval2 {width 64}} {Bit#(64) fval3 {width 64}} {Bool rd_in_fpr {width 1}} {Bool rs_frm_fpr {width 1}} {Bool val1_frm_gpr {width 1}} {Bit#(3) rm {width 3}} {Bit#(3) mem_width_code {width 3}} {Bool mem_unsigned {width 1}} {Bool mem_allow_cap {width 1}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {CHERICC_Fat::CapPipe cap_val1 {width 161}} {CHERICC_Fat::CapPipe cap_val2 {width 161}} {Bool val1_cap_not_int {width 1}} {Bool val2_cap_not_int {width 1}} {Bool check_enable {width 1}} {CHERICC_Fat::CapPipe check_authority {width 161}} {Bit#(6) check_authority_idx {width 6}} {Bit#(64) check_address_low {width 64}} {Bit#(65) check_address_high {width 65}} {Bool check_inclusive {width 1}} {Bool check_exact_enable {width 1}} {Bool check_exact_success {width 1}} {Bool set_offset_in_bounds {width 1}} {CPU_Globals::CF_Info cf_info {width 195}}}} {width 1597} {position {../src_Core/CPU/EX_ALU_functions.bsv 178 6}}
Enum EX_ALU_functions::Output_Select {members {LITERAL MODIFY_OFFSET SET_BOUNDS SET_ADDR GET_PRECISION}} {width 3} {position {../src_Core/CPU/EX_ALU_functions.bsv 1403 5}}
Alias Fabric_Defs::Num_Masters_2x3 2 {position {../src_Core/Core/Fabric_Defs.bsv 38 12}}
Alias Fabric_Defs::Num_Slaves_2x3 3 {position {../src_Core/Core/Fabric_Defs.bsv 39 12}}
Alias Fabric_Defs::Master_Num_2x3 Bit#(1) {position {../src_Core/Core/Fabric_Defs.bsv 41 40}}
Alias Fabric_Defs::Slave_Num_2x3 Bit#(2) {position {../src_Core/Core/Fabric_Defs.bsv 42 39}}
Alias Fabric_Defs::Wd_MId_2x3 4 {position {../src_Core/Core/Fabric_Defs.bsv 46 11}}
Alias Fabric_Defs::Wd_SId_2x3 5 {position {../src_Core/Core/Fabric_Defs.bsv 47 51}}
Alias Fabric_Defs::Wd_MId 5 {position {../src_Core/Core/Fabric_Defs.bsv 48 20}}
Alias Fabric_Defs::Wd_MId_ext 6 {position {../src_Core/Core/Fabric_Defs.bsv 53 26}}
Alias Fabric_Defs::Wd_Addr 64 {position {../src_Core/Core/Fabric_Defs.bsv 62 14}}
Alias Fabric_Defs::Fabric_Addr Bit#(64) {position {../src_Core/Core/Fabric_Defs.bsv 69 30}}
Alias Fabric_Defs::Bytes_per_Fabric_Addr 8 {position {../src_Core/Core/Fabric_Defs.bsv 70 30}}
Alias Fabric_Defs::Wd_Data 64 {position {../src_Core/Core/Fabric_Defs.bsv 81 13}}
Alias Fabric_Defs::Wd_AW_User 0 {position {../src_Core/Core/Fabric_Defs.bsv 85 11}}
Alias Fabric_Defs::Wd_AW_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 86 20}}
Alias Fabric_Defs::Wd_B_User 0 {position {../src_Core/Core/Fabric_Defs.bsv 87 11}}
Alias Fabric_Defs::Wd_B_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 88 19}}
Alias Fabric_Defs::Wd_AR_User 0 {position {../src_Core/Core/Fabric_Defs.bsv 89 11}}
Alias Fabric_Defs::Wd_AR_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 90 20}}
Alias Fabric_Defs::Wd_W_User 1 {position {../src_Core/Core/Fabric_Defs.bsv 92 39}}
Alias Fabric_Defs::Wd_R_User 1 {position {../src_Core/Core/Fabric_Defs.bsv 93 39}}
Alias Fabric_Defs::Wd_W_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 98 11}}
Alias Fabric_Defs::Wd_R_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 99 11}}
Alias Fabric_Defs::Bytes_per_Fabric_Data 8 {position {../src_Core/Core/Fabric_Defs.bsv 108 37}}
Alias Fabric_Defs::Fabric_Data Bit#(64) {position {../src_Core/Core/Fabric_Defs.bsv 111 37}}
Alias Fabric_Defs::Fabric_Strb Bit#(8) {position {../src_Core/Core/Fabric_Defs.bsv 112 37}}
Alias Fabric_Defs::Wd_Data_Periph 64 {position {../src_Core/Core/Fabric_Defs.bsv 115 14}}
Alias Fabric_Defs::Wd_AW_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 117 14}}
Alias Fabric_Defs::Wd_W_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 118 14}}
Alias Fabric_Defs::Wd_B_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 119 14}}
Alias Fabric_Defs::Wd_AR_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 120 14}}
Alias Fabric_Defs::Wd_R_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 121 14}}
Alias Fabric_Defs::Fabric_Data_Periph Bit#(64) {position {../src_Core/Core/Fabric_Defs.bsv 123 44}}
Alias Fabric_Defs::Fabric_Strb_Periph Bit#(8) {position {../src_Core/Core/Fabric_Defs.bsv 124 44}}
Alias Fabric_Defs::Bytes_per_Fabric_Data_Periph 8 {position {../src_Core/Core/Fabric_Defs.bsv 125 44}}
Alias Fabric_Defs::ZLSBs_Aligned_Fabric_Addr 3 {position {../src_Core/Core/Fabric_Defs.bsv 130 41}}
Alias Fabric_Defs::Wd_Id_Mem 4 {position {../src_Core/Core/Fabric_Defs.bsv 157 20}}
Alias Fabric_Defs::Wd_Addr_Mem 64 {position {../src_Core/Core/Fabric_Defs.bsv 158 20}}
Alias Fabric_Defs::Wd_Data_Mem 64 {position {../src_Core/Core/Fabric_Defs.bsv 159 20}}
Alias Fabric_Defs::Wd_AW_User_Mem 0 {position {../src_Core/Core/Fabric_Defs.bsv 160 20}}
Alias Fabric_Defs::Wd_W_User_Mem 1 {position {../src_Core/Core/Fabric_Defs.bsv 161 20}}
Alias Fabric_Defs::Wd_B_User_Mem 0 {position {../src_Core/Core/Fabric_Defs.bsv 162 20}}
Alias Fabric_Defs::Wd_AR_User_Mem 0 {position {../src_Core/Core/Fabric_Defs.bsv 163 20}}
Alias Fabric_Defs::Wd_R_User_Mem 1 {position {../src_Core/Core/Fabric_Defs.bsv 164 20}}
Alias Fabric_Defs::Near_Mem_Fabric_IFC {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} {position {../src_Core/Core/Fabric_Defs.bsv 175 43}}
Struct FBox_Core::FBoxResult {members {{Bit#(64) value {width 64}} {Bit#(5) flags {width 5}}}} {width 69} {position {../src_Core/CPU/FBox_Core.bsv 39 3}}
Enum FBox_Core::FBoxState {members {FBOX_RST FBOX_REQ FBOX_BUSY FBOX_RSP}} {width 2} {position {../src_Core/CPU/FBox_Core.bsv 46 3}}
Interface FBox_Core::FBox_Core_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action req {Bit#(7) Bit#(7) Bit#(3) Bit#(5) Bit#(64) Bit#(64) Bit#(64) Bool} {{(* ports = ["opcode", "f7", "rm", "rs2", "v1", "v2", "v3", "valid"] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bit#(64), Bit#(5))} word {{(* ports = [] *)} {(* always_ready  *)}}}}} {position {../src_Core/CPU/FBox_Core.bsv 48 11}}
Interface FBox_Top::FBox_Top_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action req {Bit#(7) Bit#(7) Bit#(3) Bit#(5) Bit#(64) Bit#(64) Bit#(64) Bool} {{(* ports = ["opcode", "f7", "rm", "rs2", "v1", "v2", "v3", "valid"] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bit#(64), Bit#(5))} word {{(* ports = [] *)} {(* always_ready  *)}}}}} {position {../src_Core/CPU/FBox_Top.bsv 35 11}}
Interface {FF::FF#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 64 11}}
Interface {FF::FFNext#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {data next {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool nextNotEmpty {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 74 11}}
Interface FPR_RegFile::FPR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Bit#(64) read_rs1 Bit#(5) {{(* ports = ["rs1"] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_rs1_port2 Bit#(5) {{(* ports = ["rs1"] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_rs2 Bit#(5) {{(* ports = ["rs2"] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_rs3 Bit#(5) {{(* ports = ["rs3"] *)} {(* always_ready  *)}}}} {method {Action write_rd {Bit#(5) Bit#(64)} {{(* ports = ["rd", "rd_val"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/RegFiles/FPR_RegFile.bsv 35 11}}
Enum CSR_RegFile_MSU::RF_State {members {RF_RESET_START RF_RUNNING}} {width 1} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 347 45}}
Alias FPU::FDouble {FloatingPoint::FloatingPoint#(11, 52)} {position {../src_Core/CPU/FPU.bsv 17 31}}
Alias FPU::FSingle {FloatingPoint::FloatingPoint#(8, 23)} {position {../src_Core/CPU/FPU.bsv 18 31}}
TaggedUnion FPU::FloatU {members {{{FloatingPoint::FloatingPoint#(11, 52)} D {width 64}} {{FloatingPoint::FloatingPoint#(8, 23)} S {width 32}}}} {width 65} {position {../src_Core/CPU/FPU.bsv 23 6}}
Alias FPU::Fpu_Req {Tuple5#(FPU::FloatU, FPU::FloatU, FPU::FloatU, FloatingPoint::RoundMode, ISA_Decls::FpuOp)} {position {../src_Core/CPU/FPU.bsv 25 56}}
Alias FPU::Fpu_Rsp {Tuple2#(FPU::FloatU, FloatingPoint::Exception)} {position {../src_Core/CPU/FPU.bsv 26 59}}
Alias FPU::FpuR {Tuple2#(FloatingPoint::FloatingPoint#(11, 52), FloatingPoint::Exception)} {position {../src_Core/CPU/FPU.bsv 29 59}}
Interface FPU::FPU_IFC {members {{interface {ClientServer::Server#(Tuple5#(FPU::FloatU, FPU::FloatU, FPU::FloatU, FloatingPoint::RoundMode, ISA_Decls::FpuOp), Tuple2#(FPU::FloatU, FloatingPoint::Exception))} server_core {}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}}}} {position {../src_Core/CPU/FPU.bsv 34 11}}


Interface Giraffe_IFC::JTAG_IFC {members {{method {Action tdi Bit#(1) {{(* ports = ["tdi"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action tms Bit#(1) {{(* ports = ["tms"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action tclk Bit#(1) {{(* ports = ["tclk"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Bit#(1) tdo {} {{(* ports = [] *)} {(* result = "tdo" *)}}}} {interface Clock tclk_out {}}}} {position {src_BSV/Giraffe_IFC.bsv 24 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Giraffe_IFC::DMI_Master_IFC {members {{method {Action req_ready Bit#(1) {{(* ports = ["req_ready"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Bit#(1) req_valid {} {{(* ports = [] *)} {(* result = "req_valid" *)}}}} {method {Bit#(7) req_addr {} {{(* ports = [] *)} {(* result = "req_addr" *)}}}} {method {Bit#(32) req_data {} {{(* ports = [] *)} {(* result = "req_data" *)}}}} {method {Bit#(2) req_op {} {{(* ports = [] *)} {(* result = "req_op" *)}}}} {method {Bit#(1) rsp_ready {} {{(* ports = [] *)} {(* result = "rsp_ready" *)}}}} {method {Action rsp_valid Bit#(1) {{(* ports = ["rsp_valid"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action rsp_data Bit#(32) {{(* ports = ["rsp_data"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action rsp_response Bit#(2) {{(* ports = ["rsp_response"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}}}} {position {src_BSV/Giraffe_IFC.bsv 41 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Giraffe_IFC::DMI_IFC {members {{method {Bit#(1) req_ready {} {{(* ports = [] *)} {(* result = "req_ready" *)}}}} {method {Action req_valid Bit#(1) {{(* ports = ["req_valid"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action req_addr Bit#(7) {{(* ports = ["req_addr"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action req_data Bit#(32) {{(* ports = ["req_data"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action req_op Bit#(2) {{(* ports = ["req_op"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action rsp_ready Bit#(1) {{(* ports = ["rsp_ready"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Bit#(1) rsp_valid {} {{(* ports = [] *)} {(* result = "rsp_valid" *)}}}} {method {Bit#(32) rsp_data {} {{(* ports = [] *)} {(* result = "rsp_data" *)}}}} {method {Bit#(2) rsp_response {} {{(* ports = [] *)} {(* result = "rsp_response" *)}}}}}} {position {src_BSV/Giraffe_IFC.bsv 71 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Core_IFC::Core_IFC#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 80 11}}
Interface Giraffe_IFC::Platform_IFC {members {{interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave0 {}} {interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave1 {}} {interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave2 {}} {interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave3 {}} {method {Bit#(1) interrupt0 {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bit#(1) interrupt1 {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bit#(1) interrupt2 {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {interface BusDefines::BusSend#(Bit#(8)) uart_out {}} {interface BusDefines::BusRecv#(Bit#(8)) uart_in {}}}} {position {src_BSV/Giraffe_IFC.bsv 147 11}}
Interface GPR_RegFile::GPR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CHERICC_Fat::CapPipe read_rs1 Bit#(5) {{(* ports = ["rs1"] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_rs1_port2 Bit#(5) {{(* ports = ["rs1"] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_rs2 Bit#(5) {{(* ports = ["rs2"] *)} {(* always_ready  *)}}}} {method {Action write_rd {Bit#(5) CHERICC_Fat::CapFat} {{(* ports = ["rd", "rd_val"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/RegFiles/GPR_RegFile.bsv 80 11}}
Enum CSR_RegFile_MSU::RF_State {members {RF_RESET_START RF_RUNNING}} {width 1} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 347 45}}
Typeclass {Routable::Has_routingField#(type t, type r_t)} {dependencies {{t determines r_t}}} {members {{{function r_t f(t x1)} routingField}}} {instances {{Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(AddressFlit::AFlit#(i, o), Bit#(o))} {Routable::Has_routingField#(Routable::WithMetaInfo#(t, m_t), r_t)   provisos (Routable::Has_routingField#(t, r_t))} {Routable::Has_routingField#(Routable::WithRouteInfo#(t, r_t), r_t)}}} {position {../libs/BlueStuff/Routable.bsv 46 11}}
Typeclass {Routable::Has_isLast#(type t)} {members {{{function Bool f(t x1)} isLast}}} {instances {{Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_BFlit#(id_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(AddressFlit::AFlit#(i, o))} {Routable::Has_isLast#(Routable::WithMetaInfo#(t, m_t))   provisos (Routable::Has_isLast#(t))} {Routable::Has_isLast#(Routable::WithRouteInfo#(t, r_t))   provisos (Routable::Has_isLast#(t))}}} {position {../libs/BlueStuff/Routable.bsv 50 11}}
Typeclass {Routable::Routable#(type f_t, type r_t)} {superclasses {{Routable::Has_routingField#(f_t, r_t)} Routable::Has_isLast#(f_t)}} {dependencies {{f_t determines r_t}}} {members {}} {instances {{Routable::Routable#(a, b)   provisos (Routable::Has_isLast#(a), Routable::Has_routingField#(a, b))}}} {position {../libs/BlueStuff/Routable.bsv 54 11}}
Typeclass {Routable::FallibleRoute#(type req_t, type rsp_t)} {members {{{a#(MasterSlave::Slave#(req_t, rsp_t))   provisos (IsModule#(a, b))} mkNoRouteSlave}}} {instances {{Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} {Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), AXI4Lite_Types::AXI4Lite_BFlit#(buser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_), down_t))   provisos (Bits#(down_t, down_t_sz))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_), down_t))   provisos (Bits#(down_t, down_t_sz))}}} {position {../libs/BlueStuff/Routable.bsv 72 11}}
Typeclass {Routable::ExpandableReqRsp#(type req_t, type req_fat_t, type rsp_fat_t, type rsp_t, numeric type n_masters)} {dependencies {{(req_t, req_fat_t) determines (rsp_fat_t, rsp_t, n_masters)} {rsp_fat_t determines (req_t, req_fat_t, rsp_t, n_masters)} {(rsp_fat_t, rsp_t) determines (req_t, req_fat_t, n_masters)}}} {members {{{function req_fat_t f(Bit#(TLog#(n_masters)) x1, req_t x2)} expand} {{function Tuple2#(Bit#(TLog#(n_masters)), rsp_t) f(rsp_fat_t x1)} shrink}}} {instances {{Routable::ExpandableReqRsp#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_), AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_), AXI4_Types::AXI4_RFlit#(id_, data_, ruser_), n)   provisos (Add#(id_, TLog#(n), sid_))} {Routable::ExpandableReqRsp#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_), AXI4_Types::AXI4_BFlit#(id_, buser_), n)   provisos (Add#(id_, TLog#(n), sid_))}}} {position {../libs/BlueStuff/Routable.bsv 88 11}}
Struct {Routable::WithRouteInfo#(type t, type r_t)} polymorphic {members {{t payload} {r_t routeInfo}}} {position {../libs/BlueStuff/Routable.bsv 110 3}}
Struct {Routable::WithMetaInfo#(type t, type m_t)} polymorphic {members {{t payload} {m_t metaInfo}}} {position {../libs/BlueStuff/Routable.bsv 123 3}}
Struct {Routable::Range#(numeric type n)} polymorphic {members {{Bit#(n) base} {Bit#(n) size}}} {position {../libs/BlueStuff/Routable.bsv 145 3}}
Alias {Routable::MappingTable#(numeric type n, numeric type a)} {Vector::Vector#(n, Routable::Range#(a))} {position {../libs/BlueStuff/Routable.bsv 155 33}}
Interface {IntMulDiv::IntDiv_IFC#(numeric type w)} polymorphic {members {{method {Action start {Bool Bool} {{(* ports = ["num_is_signed", "den_is_signed"] *)} {(* always_ready  *)}}}} {method {Bool result_valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bit#(w), Bit#(w))} result_value {{(* ports = [] *)} {(* always_ready  *)}}}}} {position {../src_Core/CPU/IntMulDiv.bsv 17 11}}
Enum IntMulDiv::DivState {members {Div_RDY Div_START Div_LOOP1 Div_LOOP2 Div_DONE}} {width 3} {position {../src_Core/CPU/IntMulDiv.bsv 29 68}}
Interface {IntMulDiv::IntMul_IFC#(numeric type w)} polymorphic {members {{method {Action put_args {Bool Bit#(w) Bool Bit#(w)} {{(* ports = ["x_is_signed", "x", "y_is_signed", "y"] *)} {(* always_ready  *)}}}} {method {Bool result_valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {{Bit#(TAdd#(w, w))} result_value {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/IntMulDiv.bsv 162 11}}
Enum IntMulDiv::MulState {members {MUL_IDLE MUL_BUSY MUL_READY}} {width 2} {position {../src_Core/CPU/IntMulDiv.bsv 191 47}}
Alias ISA_Decls::NO_OF_PRIVMODES 3 {position {../src_Core/ISA/ISA_Decls.bsv 56 11}}
Alias ISA_Decls::ILEN 32 {position {../src_Core/ISA/ISA_Decls.bsv 57 12}}
Alias ISA_Decls::XLEN 64 {position {../src_Core/ISA/ISA_Decls.bsv 68 12}}
Alias ISA_Decls::XLEN_2 128 {position {../src_Core/ISA/ISA_Decls.bsv 72 26}}
Alias ISA_Decls::XLEN_MINUS_2 62 {position {../src_Core/ISA/ISA_Decls.bsv 73 26}}
Enum ISA_Decls::RV_Version {members {RV32 RV64}} {width 1} {position {../src_Core/ISA/ISA_Decls.bsv 77 29}}
Alias ISA_Decls::WordXL Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 88 23}}
Alias ISA_Decls::IntXL Int#(64) {position {../src_Core/ISA/ISA_Decls.bsv 89 23}}
Alias ISA_Decls::Word Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 91 23}}
Alias ISA_Decls::Word_S Int#(64) {position {../src_Core/ISA/ISA_Decls.bsv 92 23}}
Alias ISA_Decls::Addr Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 94 23}}
Alias ISA_Decls::Bits_per_Byte 8 {position {../src_Core/ISA/ISA_Decls.bsv 98 48}}
Alias MEM::Byte Bit#(8) {position {../libs/TagController/TagController/CacheCore/MEM.bsv 188 17}}
Alias ISA_Decls::Bits_per_Word 64 {position {../src_Core/ISA/ISA_Decls.bsv 101 48}}
Alias ISA_Decls::Bytes_per_Word 8 {position {../src_Core/ISA/ISA_Decls.bsv 103 48}}
Alias ISA_Decls::Bits_per_Byte_in_Word 3 {position {../src_Core/ISA/ISA_Decls.bsv 104 48}}
Alias ISA_Decls::Byte_in_Word Bit#(3) {position {../src_Core/ISA/ISA_Decls.bsv 105 48}}
Alias ISA_Decls::Word_B {Vector::Vector#(8, Bit#(8))} {position {../src_Core/ISA/ISA_Decls.bsv 106 48}}
Alias ISA_Decls::Bytes_per_WordXL 8 {position {../src_Core/ISA/ISA_Decls.bsv 108 48}}
Alias ISA_Decls::Bits_per_Byte_in_WordXL 3 {position {../src_Core/ISA/ISA_Decls.bsv 109 48}}
Alias ISA_Decls::Byte_in_WordXL Bit#(3) {position {../src_Core/ISA/ISA_Decls.bsv 110 48}}
Alias ISA_Decls::WordXL_B {Vector::Vector#(8, Bit#(8))} {position {../src_Core/ISA/ISA_Decls.bsv 111 48}}
Alias ISA_Decls::Bits_per_Addr 64 {position {../src_Core/ISA/ISA_Decls.bsv 113 48}}
Alias ISA_Decls::Bytes_per_Addr 8 {position {../src_Core/ISA/ISA_Decls.bsv 114 48}}
Alias ISA_Decls::FLEN 64 {position {../src_Core/ISA/ISA_Decls.bsv 141 12}}
Alias ISA_Decls::FP_Value Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 150 22}}
Alias ISA_Decls::WordFL Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 151 23}}
Alias ISA_Decls::Bytes_per_WordFL 8 {position {../src_Core/ISA/ISA_Decls.bsv 153 48}}
Alias ISA_Decls::Bits_per_Byte_in_WordFL 3 {position {../src_Core/ISA/ISA_Decls.bsv 154 48}}
Alias ISA_Decls::Byte_in_WordFL Bit#(3) {position {../src_Core/ISA/ISA_Decls.bsv 155 48}}
Alias ISA_Decls::WordFL_B {Vector::Vector#(8, Bit#(8))} {position {../src_Core/ISA/ISA_Decls.bsv 156 48}}
Alias ISA_Decls::Token Bit#(0) {position {../src_Core/ISA/ISA_Decls.bsv 163 18}}
Enum ISA_Decls::ISize {members {ISIZE16BIT ISIZE32BIT}} {width 1} {position {../src_Core/ISA/ISA_Decls.bsv 170 6}}
Alias ISA_Decls::Instr Bit#(32) {position {../src_Core/ISA/ISA_Decls.bsv 172 21}}
Alias ISA_Decls::Opcode Bit#(7) {position {../src_Core/ISA/ISA_Decls.bsv 173 21}}
Alias ISA_Decls::RegName Bit#(5) {position {../src_Core/ISA/ISA_Decls.bsv 174 21}}
Alias ISA_Decls::NumRegs 32 {position {../src_Core/ISA/ISA_Decls.bsv 175 21}}
Struct ISA_Decls::Decoded_Instr {members {{Bit#(7) opcode {width 7}} {Bit#(5) rd {width 5}} {Bit#(5) rs1 {width 5}} {Bit#(5) rs2 {width 5}} {Bit#(5) rs3 {width 5}} {Bit#(12) csr {width 12}} {Bit#(3) funct3 {width 3}} {Bit#(5) funct5 {width 5}} {Bit#(7) funct7 {width 7}} {Bit#(10) funct10 {width 10}} {Bit#(5) funct5rs2 {width 5}} {Bit#(5) funct5rd {width 5}} {Bit#(12) imm12_I {width 12}} {Bit#(12) imm12_S {width 12}} {Bit#(13) imm13_SB {width 13}} {Bit#(20) imm20_U {width 20}} {Bit#(21) imm21_UJ {width 21}} {Bit#(4) pred {width 4}} {Bit#(4) succ {width 4}} {Bit#(2) aqrl {width 2}}}} {width 162} {position {../src_Core/ISA/ISA_Decls.bsv 255 6}}
Enum ISA_Decls::Access_RWX {members {Access_RWX_R Access_RWX_W Access_RWX_X}} {width 2} {position {../src_Core/ISA/ISA_Decls.bsv 403 59}}
Enum ISA_Decls::Mem_Data_Size {members {BITS8 BITS16 BITS32 BITS64}} {width 2} {position {../src_Core/ISA/ISA_Decls.bsv 413 6}}
Alias ISA_Decls::MemReqSize Bit#(3) {position {../src_Core/ISA/ISA_Decls.bsv 419 18}}
Struct ISA_Decls::Fence_Ordering {members {{Bool pi {width 1}} {Bool po {width 1}} {Bool pr {width 1}} {Bool pw {width 1}} {Bool si {width 1}} {Bool so {width 1}} {Bool sr {width 1}} {Bool sw {width 1}}}} {width 8} {position {../src_Core/ISA/ISA_Decls.bsv 475 6}}
Enum ISA_Decls::FpuOp {members {FPAdd FPSub FPMul FPDiv FPSqrt FPMAdd FPMSub FPNMAdd FPNMSub}} {width 4} {position {../src_Core/ISA/ISA_Decls.bsv 713 16}}
Alias ISA_Decls::Num_Priv_Modes 4 {position {../src_Core/ISA/ISA_Decls.bsv 1042 11}}
Alias ISA_Decls::Priv_Mode Bit#(2) {position {../src_Core/ISA/ISA_Decls.bsv 1044 18}}
Alias ISA_Decls::CSR_Addr Bit#(12) {position {../src_Core/ISA/ISA_Decls.bsv 1063 19}}
Struct ISA_Decls::Trap_Info_CSR {members {{CHERICC_Fat::CapFat pcc {width 151}} {Bit#(64) mstatus {width 64}} {Bit#(64) mcause {width 64}} {Bit#(2) priv {width 2}}}} {width 281} {position {../src_Core/ISA/ISA_Decls.bsv 1168 3}}
Alias ISA_Decls::Instr_C Bit#(16) {position {../src_Core/ISA/ISA_Decls_C.bsv 12 21}}
Alias ISA_Decls::VM_Mode Bit#(4) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 92 19}}
Alias ISA_Decls::ASID Bit#(16) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 93 19}}
Alias ISA_Decls::VA_sz 39 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 156 15}}
Alias ISA_Decls::VPN_sz 27 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 157 15}}
Alias ISA_Decls::VPN_J_sz 9 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 158 15}}
Alias ISA_Decls::VPN_max_levels 3 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 159 15}}
Alias ISA_Decls::PA_sz 64 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 162 15}}
Alias ISA_Decls::PPN_sz 44 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 163 15}}
Alias ISA_Decls::PPN_2_sz 26 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 164 15}}
Alias ISA_Decls::PPN_1_sz 9 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 165 15}}
Alias ISA_Decls::PPN_0_sz 9 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 166 15}}
Alias ISA_Decls::Offset_sz 12 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 169 15}}
Alias ISA_Decls::PTNode_sz 512 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 172 15}}
Alias ISA_Decls::PA Bit#(64) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 196 61}}
Alias ISA_Decls::VA Bit#(39) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 207 62}}
Alias ISA_Decls::VPN Bit#(27) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 223 72}}
Alias ISA_Decls::VPN_J Bit#(9) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 224 72}}
Alias CacheCore::Offset Bit#(3) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 98 28}}
Alias ISA_Decls::PPN Bit#(44) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 228 67}}
Alias ISA_Decls::PPN_2 Bit#(26) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 230 67}}
Alias ISA_Decls::PPN_1 Bit#(9) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 232 67}}
Alias ISA_Decls::PPN_0 Bit#(9) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 233 67}}
Alias ISA_Decls::PPN_MEGA Bit#(35) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 238 44}}
Alias ISA_Decls::PPN_GIGA Bit#(26) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 239 44}}
Alias ISA_Decls::PTNode_Index_sz 9 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 258 34}}
Alias ISA_Decls::PTNode_Index Bit#(9) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 259 34}}
Alias ISA_Decls::PTE Bit#(64) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 265 16}}
Alias ISA_Decls::CLEN 128 {position {../src_Core/ISA/ISA_Decls_CHERI.bsvi 32 24}}
Alias ISA_Decls::CHERI_Exc_Code Bit#(5) {position {../src_Core/ISA/ISA_Decls_CHERI.bsvi 50 18}}
Struct ISA_Decls::XCCSR {members {{Bit#(6) cheri_exc_reg {width 6}} {Bit#(5) cheri_exc_code {width 5}}}} {width 11} {position {../src_Core/ISA/ISA_Decls_CHERI.bsvi 79 5}}
Alias ISA_Decls::SCR_Addr Bit#(5) {position {../src_Core/ISA/ISA_Decls_CHERI.bsvi 92 17}}
Alias ISA_Decls::Report_Width 64 {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 197 23}}
Alias ISA_Decls::No_Of_Ctrs 29 {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 202 21}}
Struct ISA_Decls::MISA {members {{Bit#(2) mxl {width 2}} {Bit#(1) z {width 1}} {Bit#(1) y {width 1}} {Bit#(1) x {width 1}} {Bit#(1) w {width 1}} {Bit#(1) v {width 1}} {Bit#(1) u {width 1}} {Bit#(1) t {width 1}} {Bit#(1) s {width 1}} {Bit#(1) r {width 1}} {Bit#(1) q {width 1}} {Bit#(1) p {width 1}} {Bit#(1) o {width 1}} {Bit#(1) n {width 1}} {Bit#(1) m {width 1}} {Bit#(1) l {width 1}} {Bit#(1) k {width 1}} {Bit#(1) j {width 1}} {Bit#(1) i {width 1}} {Bit#(1) h {width 1}} {Bit#(1) g {width 1}} {Bit#(1) f {width 1}} {Bit#(1) e {width 1}} {Bit#(1) d {width 1}} {Bit#(1) c {width 1}} {Bit#(1) b {width 1}} {Bit#(1) a {width 1}}}} {width 28} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 213 6}}
Enum ISA_Decls::MTVEC_Mode {members {DIRECT VECTORED}} {width 1} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 468 33}}
Struct ISA_Decls::MTVec {members {{Bit#(62) base {width 62}} {ISA_Decls::MTVEC_Mode mode {width 1}}}} {width 63} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 474 3}}
Struct ISA_Decls::MCounteren {members {{Bit#(29) hpm {width 29}} {Bit#(1) ir {width 1}} {Bit#(1) tm {width 1}} {Bit#(1) cy {width 1}}}} {width 32} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 499 3}}
Struct ISA_Decls::MCountinhibit {members {{Reserved::ReservedZero#(0) reserved {width 0}} {Bit#(29) hpm {width 29}} {Bit#(1) ir {width 1}} {Reserved::ReservedZero#(1) reserved2 {width 1}} {Bit#(1) cy {width 1}}}} {width 32} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 525 3}}
Struct ISA_Decls::MCause {members {{Bit#(1) interrupt {width 1}} {Bit#(6) exc_code {width 6}}}} {width 7} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 565 6}}
Alias ISA_Decls::Exc_Code Bit#(6) {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 589 18}}
Alias JtagTap::ABITS 6 {position {src_BSV/JtagTap.bsv 15 11}}
Alias JtagTap::IR_LENGTH 18 {position {src_BSV/JtagTap.bsv 20 12}}
Alias JtagTap::DR_LENGTH 40 {position {src_BSV/JtagTap.bsv 27 25}}
Enum JtagTap::JtagState {members {TEST_LOGIC_RESET RUN_TEST_IDLE SELECT_DR_SCAN CAPTURE_DR SHIFT_DR EXIT1_DR PAUSE_DR EXIT2_DR UPDATE_DR SELECT_IR_SCAN CAPTURE_IR SHIFT_IR EXIT1_IR PAUSE_IR EXIT2_IR UPDATE_IR}} {width 4} {position {src_BSV/JtagTap.bsv 79 6}}
Struct JtagTap::DTMCS {members {{Reserved::ReservedZero#(14) reserved {width 14}} {Bit#(1) dmihardreset {width 1}} {Bit#(1) dmireset {width 1}} {Reserved::ReservedZero#(1) reserved2 {width 1}} {Bit#(3) idle {width 3}} {Bit#(2) dmistat {width 2}} {Bit#(6) abits {width 6}} {Bit#(4) version {width 4}}}} {width 32} {position {src_BSV/JtagTap.bsv 90 6}}
Alias JtagTap::DMI_OP Bit#(2) {position {src_BSV/JtagTap.bsv 107 17}}
Struct JtagTap::DMI {members {{Bit#(6) address {width 6}} {Bit#(32) data {width 32}} {Bit#(2) op {width 2}}}} {width 40} {position {src_BSV/JtagTap.bsv 120 6}}
Interface JtagTap::JtagTap_IFC {members {{interface Giraffe_IFC::JTAG_IFC jtag {}} {interface Giraffe_IFC::DMI_Master_IFC dmi {}}}} {position {src_BSV/JtagTap.bsv 174 11}}
Typeclass {ListExtra::MkList#(type a, type b)} {dependencies {{a determines b}}} {members {{{function a f(List#(b) x1)} mkList}}} {instances {{ListExtra::MkList#(List#(b), b)} {ListExtra::MkList#(function a f(b x1), b)   provisos (ListExtra::MkList#(a, b))}}} {position {../libs/BlueStuff/BlueBasics/ListExtra.bsv 54 11}}
Struct {Map::MapKeyIndex#(type ky, type ix)} polymorphic {members {{ky key} {ix index}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 44 3}}
Struct {Map::MapKeyValue#(type ky, type vl)} polymorphic {members {{ky key} {vl value}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 48 3}}
Struct {Map::MapKeyIndexValue#(type ky, type ix, type vl)} polymorphic {members {{ky key} {ix index} {vl value}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 53 3}}
Interface {Map::Map#(type ky, type ix, type vl, numeric type as)} polymorphic {members {{method {Action update {{Map::MapKeyIndex#(ky, ix)} vl} {{(* ports = ["key", "value"] *)}}}} {method {Action updateWithFunc {{Map::MapKeyIndex#(ky, ix)} vl {function vl f(vl x1, vl x2)} Bool} {{(* ports = ["ki", "value", "up", "insert"] *)}}}} {method {Maybe#(vl) lookup {{Map::MapKeyIndex#(ky, ix)}} {{(* ports = ["lookup_key"] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool clearDone {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 57 11}}
Interface {Map::MapSplit#(type ky, type ix, type vl, numeric type as)} polymorphic {members {{method {Action update {{Map::MapKeyIndex#(ky, ix)} vl} {{(* ports = ["key", "value"] *)}}}} {method {Action lookupStart {{Map::MapKeyIndex#(ky, ix)}} {{(* ports = ["lookup_key"] *)}}}} {method {Maybe#(vl) lookupRead {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool clearDone {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 119 11}}
Interface {MasterSlave::Master#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Source#(req_t) req {}} {interface SourceSink::Sink#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 44 11}}
Interface {MasterSlave::Slave#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Sink#(req_t) req {}} {interface SourceSink::Source#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 50 11}}
Interface {MasterSlaveCHERI::CheckedPut#(type t)} polymorphic {members {{method {Bool canPut {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action put t {{(* ports = ["val"] *)}}}}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 45 11}}
Typeclass {MasterSlaveCHERI::ToCheckedPut#(type a, type b)} {dependencies {{a determines b}}} {members {{{function MasterSlaveCHERI::CheckedPut#(b) f(a x1)} toCheckedPut}}} {instances {{MasterSlaveCHERI::ToCheckedPut#(FIFOF::FIFOF#(data_t), data_t)} {MasterSlaveCHERI::ToCheckedPut#(MasterSlaveCHERI::CheckedPut#(data_t), data_t)}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 51 11}}
Interface {MasterSlaveCHERI::CheckedGet#(type t)} polymorphic {members {{method {Bool canGet {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {t peek {} {{(* ports = [] *)}}}} {method {ActionValue#(t) get {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 107 11}}
Typeclass {MasterSlaveCHERI::ToCheckedGet#(type a, type b)} {dependencies {{a determines b}}} {members {{{function MasterSlaveCHERI::CheckedGet#(b) f(a x1)} toCheckedGet}}} {instances {{MasterSlaveCHERI::ToCheckedGet#(FIFOF::FIFOF#(data_t), data_t)} {MasterSlaveCHERI::ToCheckedGet#(MasterSlaveCHERI::CheckedGet#(data_t), data_t)}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 114 11}}
Interface {MasterSlave::Master#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Source#(req_t) req {}} {interface SourceSink::Sink#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 44 11}}
Interface {MasterSlave::Slave#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Sink#(req_t) req {}} {interface SourceSink::Source#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 50 11}}
Interface {MasterSlaveCHERI::ForwardPutGet#(type a)} polymorphic {members {{interface MasterSlaveCHERI::CheckedPut#(a) cput {}} {interface MasterSlaveCHERI::CheckedGet#(a) cget {}}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 253 11}}
Interface {MasterSlaveCHERI::Forward#(type req_t, type rsp_t)} polymorphic {members {{interface {MasterSlaveCHERI::Slave#(req_t, rsp_t)} slave {}} {interface {MasterSlaveCHERI::Master#(req_t, rsp_t)} master {}}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 265 11}}
Interface {MEM::ReadIfc#(type addr, type data)} polymorphic {members {{method {Action put addr {{(* ports = ["a"] *)}}}} {method {ActionValue#(data) get {} {{(* ports = [] *)}}}} {method {data peek {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 38 11}}
Interface {MEM::MEM#(type addr, type data)} polymorphic {members {{interface {MEM::ReadIfc#(addr, data)} read {}} {method {Action write {addr data} {{(* ports = ["a", "x"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 44 11}}
Alias MEM::Byte Bit#(8) {position {../libs/TagController/TagController/CacheCore/MEM.bsv 188 17}}
Interface {MEM::MemBEVerbose#(type addr, type data, numeric type data_bytes)} polymorphic {members {{interface {MEM::ReadIfc#(addr, data)} read {}} {method {Action write {addr data {Vector::Vector#(data_bytes, Bool)}} {{(* ports = ["a", "x", "be"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 190 11}}
Alias {MEM::MemBE#(type addr, type data)} {MEM::MemBEVerbose#(addr, data, TDiv#(SizeOf#(data), 8))} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 195 57}}
Interface {MEM::MEM2#(type addr, type data)} polymorphic {members {{interface {MEM::ReadIfc#(addr, data)} read {}} {interface {MEM::ReadIfc#(addr, data)} readB {}} {method {Action write {addr data} {{(* ports = ["a", "x"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 246 11}}
Struct {MemTypes::BitPO#(numeric type n)} polymorphic {members {{Bit#(n) val}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 50 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}


TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {MemTypes::Mem#(type addr_t, type data_t)} {MasterSlave::Slave#(MemTypes::MemReq#(addr_t, data_t), MemTypes::MemRsp#(data_t))} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 196 3}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {MemBRAM::BRAM2#(numeric type a0w, numeric type d0w, numeric type a1w, numeric type d1w)} polymorphic {members {{interface {MemBRAM::BRAM#(a0w, d0w)} p0 {}} {interface {MemBRAM::BRAM#(a1w, d1w)} p1 {}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 51 11}}
Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {MemBRAM::BRAM2#(numeric type a0w, numeric type d0w, numeric type a1w, numeric type d1w)} polymorphic {members {{interface {MemBRAM::BRAM#(a0w, d0w)} p0 {}} {interface {MemBRAM::BRAM#(a1w, d1w)} p1 {}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 51 11}}
Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimCHandle Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 58 19}}
Alias MemSim::MemSimSizeT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 59 19}}
Alias MemSim::MemSimAddrT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 60 34}}
Alias MemSim::MemSimAccessSizeT Bit#(8) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 61 18}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}
Alias MemSim::MemSimByteEnT Bit#(8) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 68 18}}
Struct {MemTypes::BitPO#(numeric type n)} polymorphic {members {{Bit#(n) val}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 50 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}


TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {MemTypes::Mem#(type addr_t, type data_t)} {MasterSlave::Slave#(MemTypes::MemReq#(addr_t, data_t), MemTypes::MemRsp#(data_t))} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 196 3}}
Alias MemTypesCHERI::CORE_COUNT 1 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 48 13}}
Alias MemTypesCHERI::MaxTransactions 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 51 11}}
Alias MemTypesCHERI::MaxNoOfFlits 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 52 11}}
Alias MemTypesCHERI::CheriBurstSize 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 53 22}}
Alias MemTypesCHERI::CapWidth 128 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 57 21}}
Alias MemTypesCHERI::CapBytes 16 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 73 29}}
Alias MemTypesCHERI::BootMemBytes 65536 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 76 19}}
Alias MemTypesCHERI::BootMemAddrBits 13 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 77 38}}
Alias {MemTypesCHERI::PhyLineNumber#(numeric type width, numeric type bytePerLine)} {Bit#(TSub#(width, TLog#(bytePerLine)))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 85 47}}
Alias {MemTypesCHERI::PhyByteOffset#(numeric type bytePerLine)} Bit#(TLog#(bytePerLine)) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 86 34}}
Alias {MemTypesCHERI::PhyBitOffset#(numeric type bytePerLine)} {Bit#(TAdd#(TLog#(bytePerLine), 3))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 87 43}}
Struct {MemTypesCHERI::PhyByteAddress#(numeric type width, numeric type bytePerLine)} polymorphic {members {{{Bit#(TSub#(width, TLog#(bytePerLine)))} lineNumber} {Bit#(TLog#(bytePerLine)) byteOffset}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 95 3}}
Struct {MemTypesCHERI::PhyBitAddress#(numeric type width, numeric type bytePerLine)} polymorphic {members {{{MemTypesCHERI::PhyByteAddress#(width, bytePerLine)} byteAddr} {Bit#(3) bitOffset {width 3}}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 100 3}}
Alias MemTypesCHERI::CheriBusBytes 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 119 26}}
Alias MemTypesCHERI::AddrWidth 40 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 133 12}}
Alias TagController::CapsPerFlit 1 {position {../libs/TagController/TagController/TagController.bsv 92 50}}
Alias MemTypesCHERI::CapTags {Vector::Vector#(1, Bool)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 137 37}}
Alias MemTypesCHERI::CapNumber Bit#(36) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 138 50}}
Struct MemTypesCHERI::CheriCapAddress {members {{Bit#(36) capNumber {width 36}} {Bit#(4) offset {width 4}}}} {width 40} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 142 5}}
Alias MemTypesCHERI::CheriDataWidth 64 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 144 32}}
Alias MemTypesCHERI::CheriLineAddrWidth 37 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 145 47}}
Alias MemTypesCHERI::CheriPhyLineNumber Bit#(37) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 146 50}}
Alias MemTypesCHERI::CheriPhyAddr {MemTypesCHERI::PhyByteAddress#(40, 8)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 147 50}}
Alias MemTypesCHERI::CheriPhyBitAddr {MemTypesCHERI::PhyBitAddress#(40, 8)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 148 49}}
Alias MemTypesCHERI::CheriPhyByteOffset Bit#(3) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 149 39}}
Alias MemTypesCHERI::CheriPhyBitOffset Bit#(6) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 150 39}}
Alias MemTypesCHERI::CheriPeriphAddr {MemTypesCHERI::PhyByteAddress#(40, 8)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 151 38}}
Alias MemTypesCHERI::LogLine 5 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 152 39}}
Alias MemTypesCHERI::Flit UInt#(3) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 154 36}}
Alias MemTypesCHERI::Line Bit#(35) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 155 62}}
Alias MemTypesCHERI::CpuLineSize 64 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 157 12}}
Alias MemTypesCHERI::CapOffsetInLine Bit#(2) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 158 51}}
Enum MemTypesCHERI::BytesPerFlit {members {BYTE_1 BYTE_2 BYTE_4 BYTE_8 BYTE_16 BYTE_32 BYTE_64 BYTE_128}} {width 3} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 170 3}}
Struct {MemTypesCHERI::Data#(numeric type width)} polymorphic {members {{{Vector::Vector#(1, Bool)} cap {width 1}} {Bit#(width) data}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 180 3}}
Struct {MemTypesCHERI::DataMinusCapTags#(numeric type width)} polymorphic {members {{Bit#(width) data}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 186 3}}
Enum MemTypesCHERI::WhichCache {members {ICache DCache None L2 TCache}} {width 3} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 191 3}}
Enum MemTypesCHERI::CacheInst {members {CacheInvalidate CacheInvalidateWriteback CacheWriteback CacheSync Read Write StoreConditional CacheLoadTag CacheNop}} {width 4} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 212 3}}
Struct MemTypesCHERI::CacheOperation {members {{MemTypesCHERI::CacheInst inst {width 4}} {MemTypesCHERI::WhichCache cache {width 3}} {Bool indexed {width 1}}}} {width 8} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 222 3}}
Enum MemTypesCHERI::Error {members {NoError BusError SlaveError}} {width 2} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 236 3}}
Struct {Memory::MemoryRequest#(numeric type a, numeric type d)} polymorphic {members {{Bool write {width 1}} {{Bit#(TDiv#(d, 8))} byteen} {Bit#(a) address} {Bit#(d) data}}} {position {%/Libraries/Memory.bsv 31 3 {Library Memory}}}



Alias MemTypesCHERI::CheriMasterIDWidth 1 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 355 29}}
Alias MemTypesCHERI::CheriTransactionIDWidth 5 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 356 34}}
Alias MemTypesCHERI::CheriMasterID Bit#(1) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 357 34}}
Alias MemTypesCHERI::CheriTransactionID Bit#(5) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 358 39}}
Alias MemTypesCHERI::CheriData MemTypesCHERI::Data#(64) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 360 31}}
Alias MemTypesCHERI::CheriMemRequest {MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 361 86}}
Alias MemTypesCHERI::CheriMemRequest64 {MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 362 78}}
Struct MemTypesCHERI::ReqId {members {{Bit#(1) masterID {width 1}} {Bit#(5) transactionID {width 5}}}} {width 6} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 367 3}}
Alias MemTypesCHERI::Banks 4 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 369 11}}
Alias MemTypesCHERI::Bank UInt#(2) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 370 18}}
Alias MemTypesCHERI::TagCacheKilobytes 16384 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 376 19}}
Alias MemTypesCHERI::Indices 9 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 380 71}}
Struct {Memory::MemoryResponse#(numeric type d)} polymorphic {members {{Bit#(d) data}}} {position {%/Libraries/Memory.bsv 35 3 {Library Memory}}}


Alias MemTypesCHERI::CheriMemResponse {MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 470 74}}
Alias MemTypesCHERI::CheriMemResponse64 {MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 471 63}}
Alias MemTypesCHERI::CheriPeriphSlave {MasterSlave::Slave#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 473 57}}
Alias MemTypesCHERI::CheriSlave {MasterSlave::Slave#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 474 57}}
Alias MemTypesCHERI::CheriPeriphMaster {MasterSlave::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 476 57}}
Alias MemTypesCHERI::CheriMaster {MasterSlave::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 477 57}}

Interface {MMU_Cache::MMU_Cache_IFC#(numeric type mID)} polymorphic {members {{method {Action set_verbosity Bit#(4) {{(* ports = ["verbosity"] *)}}}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action req {MMU_Cache_Common::CacheOp Bit#(3) Bool Bit#(5) Bit#(64) {Tuple2#(Bool, Bit#(128))} Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["op", "width_code", "is_unsigned", "amo_funct5", "addr", "st_value", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action commit {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) addr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bool, Bit#(128))} cword {{(* ports = [] *)} {(* always_ready  *)}}} {interface {Tuple2#(Bool, Bit#(128))} st_amo_val {{(* ports = [] *)} {(* always_ready  *)}}} {method {Bool exc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(6) exc_code {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_flush {}} {method {Action tlb_flush {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(mID, 64, 64, 0, 1, 0, 0, 1)} mem_master {}} {method {Near_Mem_IFC::EventsCache events {} {{(* ports = [] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 94 11}}
Alias MMU_Cache::MMU_DCache_IFC MMU_Cache::MMU_Cache_IFC#(4) {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 165 36}}
Alias MMU_Cache::MMU_ICache_IFC MMU_Cache::MMU_Cache_IFC#(5) {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 166 32}}
Enum MMU_Cache::CTagState {members {CTAG_EMPTY CTAG_CLEAN}} {width 1} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 265 41}}
Struct MMU_Cache::State_and_CTag {members {{MMU_Cache::CTagState state {width 1}} {Bit#(52) ctag {width 52}}}} {width 53} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 271 6}}
Alias MMU_Cache::State_and_CTag_CSet {Vector::Vector#(2, MMU_Cache::State_and_CTag)} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 274 49}}
Alias MMU_Cache::CWord_Set {Vector::Vector#(2, Tuple2#(Bit#(1), Bit#(128)))} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 275 49}}
Enum MMU_Cache::Module_State {members {MODULE_PRERESET MODULE_RESETTING MODULE_READY MODULE_RUNNING MODULE_EXCEPTION_RSP PTW_START PTW_LEVEL_2 PTW_LEVEL_1 PTW_LEVEL_0 CACHE_START_REFILL CACHE_REFILL CACHE_REREQ CACHE_ST_AMO_RSP IO_REQ IO_AWAITING_READ_RSP IO_READ_RSP IO_AWAITING_AMO_READ_RSP}} {width 5} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 300 6}}
Enum MMU_Cache::Requestor {members {REQUESTOR_RESET_IFC REQUESTOR_FLUSH_IFC}} {width 1} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 307 57}}
Struct MMU_Cache::Fabric_Write_Fields {members {{Bit#(64) fabric_addr {width 64}} {Bit#(64) fabric_data {width 64}} {Bit#(1) fabric_user {width 1}} {Bit#(8) fabric_strb {width 8}} {AXI4_Common_Types::AXI4_Size fabric_size {width 3}} {Bit#(64) fabric_2_data {width 64}} {Bit#(1) fabric_2_user {width 1}} {Bit#(8) fabric_2_strb {width 8}}}} {width 213} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 340 3}}
Enum MMU_Cache_Common::CacheOp {members {CACHE_LD CACHE_ST CACHE_AMO}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 28 6}}
Alias Near_Mem_IFC::Cache_Cap_Tag_Width 1 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 157 37}}
Alias Near_Mem_IFC::Cache_Entry {Tuple2#(Bit#(1), Bit#(128))} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 158 51}}
Struct MMU_Cache_Common::MMU_Cache_Req {members {{MMU_Cache_Common::CacheOp op {width 2}} {Bit#(3) width_code {width 3}} {Bool is_unsigned {width 1}} {Bool is_cap {width 1}} {Bit#(64) va {width 64}} {{Tuple2#(Bool, Bit#(128))} st_value {width 129}} {Bit#(5) amo_funct5 {width 5}} {Bit#(2) priv {width 2}} {Bit#(1) sstatus_SUM {width 1}} {Bit#(1) mstatus_MXR {width 1}} {Bit#(64) satp {width 64}}}} {width 273} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 53 6}}
Enum MMU_Cache_Common::VM_Xlate_Outcome {members {VM_XLATE_OK VM_XLATE_TLB_MISS VM_XLATE_EXCEPTION}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 90 69}}
Struct MMU_Cache_Common::VM_Xlate_Result {members {{MMU_Cache_Common::VM_Xlate_Outcome outcome {width 2}} {Bool allow_cap {width 1}} {Bit#(64) pa {width 64}} {Bit#(6) exc_code {width 6}} {Bool pte_modified {width 1}} {Bit#(64) pte {width 64}} {Bit#(2) pte_level {width 2}} {Bit#(64) pte_pa {width 64}}}} {width 204} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 104 6}}
Enum MMU_Cache_Common::Meta_State {members {META_INVALID META_SHARED META_EXCLUSIVE META_MODIFIED}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 204 75}}
Struct MMU_Cache_Common::L1_to_L2_Req {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State from_state {width 2}} {MMU_Cache_Common::Meta_State to_state {width 2}} {Bool can_up_to_E {width 1}}}} {width 69} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 243 6}}
Struct MMU_Cache_Common::L2_to_L1_Rsp {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State to_state {width 2}} {{Maybe#(Vector::Vector#(4, Tuple2#(Bit#(1), Bit#(128))))} m_cline {width 517}}}} {width 583} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 265 6}}
Struct MMU_Cache_Common::L2_to_L1_Req {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State to_state {width 2}}}} {width 66} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 290 6}}
Struct MMU_Cache_Common::L1_to_L2_Rsp {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State to_state {width 2}} {{Maybe#(Vector::Vector#(4, Tuple2#(Bit#(1), Bit#(128))))} m_cline {width 517}}}} {width 583} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 306 6}}
Struct MMU_Cache_Common::Single_Req {members {{Bool is_read {width 1}} {Bit#(64) addr {width 64}} {Bit#(3) width_code {width 3}} {{Tuple2#(Bit#(1), Bit#(128))} data {width 129}}}} {width 197} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 330 6}}
Struct MMU_Cache_Common::Single_Rsp {members {{Bool ok {width 1}} {{Tuple2#(Bit#(1), Bit#(128))} data {width 129}}}} {width 130} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 338 6}}
Interface {Monitored::Monitored#(type originalIfc, type events_t)} polymorphic {members {{method {originalIfc ifc {} {}}} {interface ReadOnly#(events_t) events {}}}} {position {../libs/BlueStuff/Monitored.bsv 37 11}}
Alias MultiLevelTagLookup::LineTags {Vector::Vector#(4, Bool)} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 47 52}}
Struct MultiLevelTagLookup::CheriTagWrite {members {{{Vector::Vector#(4, Bool)} tags {width 4}} {{Vector::Vector#(4, Bool)} writeEnable {width 4}}}} {width 8} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 51 3}}
Struct MultiLevelTagLookup::CheriTagRequest {members {{{MemTypesCHERI::PhyByteAddress#(40, 8)} addr {width 40}} {{MultiLevelTagLookup::CheriTagRequest_$operation} operation {width 9}}}} {width 49} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 59 3}}

Struct MultiLevelTagLookup::CheriTagResponse {members {{{MultiLevelTagLookup::CheriTagResponse_$tags} tags {width 5}}}} {width 5} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 66 3}}

Interface MultiLevelTagLookup::TagLookupIfc {members {{interface {MasterSlaveCHERI::Slave#(MultiLevelTagLookup::CheriTagRequest, MultiLevelTagLookup::CheriTagResponse)} cache {}} {interface {MasterSlaveCHERI::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} memory {}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 68 11}}
Enum XilinxClocks::State {members {Restart WaitLock WaitStart Address Read Modify Write WaitWriteReady}} {width 3} {position {XilinxClocks.bsv 41 3}}
Alias MultiLevelTagLookup::CapsPerLine 4 {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 82 30}}
TaggedUnion MultiLevelTagLookup::TableEntry {members {{Bool Node {width 1}} {{Vector::Vector#(4, Bool)} Leaf {width 4}}}} {width 5} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 87 3}}
Struct MultiLevelTagLookup::TableLvl {members {{{MemTypesCHERI::PhyByteAddress#(40, 8)} startAddr {width 40}} {Integer size} {Integer shiftAmnt} {Integer groupFactor} {Integer groupFactorLog}}} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 95 3}}
Alias MultiLevelTagLookup::TDepth UInt#(2) {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 102 18}}
Enum XilinxClocks::State {members {Restart WaitLock WaitStart Address Read Modify Write WaitWriteReady}} {width 3} {position {XilinxClocks.bsv 41 3}}
Alias Near_Mem_IFC::Wd_Id_Dma 6 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 57 13}}
Alias Near_Mem_IFC::Wd_Addr_Dma 64 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 58 13}}
Alias Near_Mem_IFC::Wd_Data_Dma 512 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 59 13}}
Alias Near_Mem_IFC::Wd_AW_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 60 13}}
Alias Near_Mem_IFC::Wd_W_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 61 13}}
Alias Near_Mem_IFC::Wd_B_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 62 13}}
Alias Near_Mem_IFC::Wd_AR_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 63 13}}
Alias Near_Mem_IFC::Wd_R_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 64 13}}
Struct Near_Mem_IFC::EventsCache {members {{Bool evt_LD {width 1}} {Bool evt_LD_MISS {width 1}} {Bool evt_LD_MISS_LAT {width 1}} {Bool evt_ST {width 1}} {Bool evt_ST_MISS {width 1}} {Bool evt_ST_MISS_LAT {width 1}} {Bool evt_AMO {width 1}} {Bool evt_AMO_MISS {width 1}} {Bool evt_AMO_MISS_LAT {width 1}} {Bool evt_TLB {width 1}} {Bool evt_TLB_MISS {width 1}} {Bool evt_TLB_MISS_LAT {width 1}} {Bool evt_TLB_FLUSH {width 1}} {Bool evt_EVICT {width 1}}}} {width 14} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 84 3}}
Interface Near_Mem_IFC::Near_Mem_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {interface Near_Mem_IFC::IMem_IFC imem {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 1, 0, 0, 1)} imem_master {}} {interface Near_Mem_IFC::DMem_IFC dmem {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} mem_master {}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_fence_i {}} {interface {ClientServer::Server#(ISA_Decls::Fence_Ordering, Bit#(0))} server_fence {}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} sfence_vma_server {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 88 11}}
Alias Near_Mem_IFC::Cache_Cap_Tag_Width 1 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 157 37}}
Alias Near_Mem_IFC::Cache_Entry {Tuple2#(Bit#(1), Bit#(128))} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 158 51}}
Interface Near_Mem_IFC::IMem_IFC {members {{method {Action req {Bit#(3) Bit#(64) Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["f3", "addr", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action commit {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool is_i32_not_i16 {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) pc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(32) instr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool exc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(6) exc_code {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) tval {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {StatCounters::EventsL1I events {} {{(* ports = [] *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 169 11}}
Interface Near_Mem_IFC::DMem_IFC {members {{method {Action req {MMU_Cache_Common::CacheOp Bit#(3) Bool Bit#(5) Bit#(64) {Tuple2#(Bool, Bit#(128))} Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["op", "f3", "is_unsigned", "amo_funct5", "addr", "store_value", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action commit {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bool, Bit#(128))} word128 {{(* ports = [] *)} {(* always_ready  *)}}} {method {Bit#(128) st_amo_val {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool exc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(6) exc_code {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {StatCounters::EventsL1D events {} {{(* ports = [] *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 210 11}}
Enum MMU_Cache::Module_State {members {MODULE_PRERESET MODULE_RESETTING MODULE_READY MODULE_RUNNING MODULE_EXCEPTION_RSP PTW_START PTW_LEVEL_2 PTW_LEVEL_1 PTW_LEVEL_0 CACHE_START_REFILL CACHE_REFILL CACHE_REREQ CACHE_ST_AMO_RSP IO_REQ IO_AWAITING_READ_RSP IO_READ_RSP IO_AWAITING_AMO_READ_RSP}} {width 5} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 300 6}}
Interface Near_Mem_IO_AXI4::Near_Mem_IO_AXI4_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action set_addr_map {Bit#(64) Bit#(64)} {{(* ports = ["addr_base", "addr_lim"] *)}}}} {interface {AXI4_Types::AXI4_Slave#(5, 64, 64, 0, 0, 0, 0, 0)} axi4_slave {}} {interface GetPut::Get#(Bool) get_timer_interrupt_req {}} {interface GetPut::Get#(Bool) get_sw_interrupt_req {}}}} {position {../src_Core/Near_Mem_IO/Near_Mem_IO_AXI4.bsv 91 11}}
Typeclass {OneHotArbiter::Arbitrable#(type a)} {members {{{function Bool f(a x1)} isRequesting}}} {instances {OneHotArbiter::Arbitrable#(Bool) OneHotArbiter::Arbitrable#(FIFOF::FIFOF#(t)) OneHotArbiter::Arbitrable#(SourceSink::Source#(t))}} {position {../libs/BlueStuff/OneHotArbiter.bsv 39 11}}
Interface OneHotArbiter::OneHotArbiter {members {{method {ActionValue#(List#(Bool)) next {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/OneHotArbiter.bsv 57 11}}

Interface P2_Core::P2_Core_IFC {members {{interface {AXI4_Types::AXI4_Master_Sig#(5, 64, 64, 0, 0, 0, 0, 0)} master0 {}} {interface {AXI4_Types::AXI4_Master_Sig#(6, 64, 64, 0, 0, 0, 0, 0)} master1 {}} {method {Action interrupt_reqs Bit#(0) {{(* ports = ["cpu_external_interrupt_req"] *)} {(* prefix = "" *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {interface Giraffe_IFC::JTAG_IFC jtag {}}}} {position {src_BSV/P2_Core.bsv 82 11}}
Typeclass {PerformanceMonitor::BitVectorable#(type from, numeric type n, numeric type m)} {dependencies {{from determines (n, m)}}} {members {{{function Vector::Vector#(m, Bit#(n)) f(from x1)} to_vector}}} {instances {{PerformanceMonitor::BitVectorable#(AXI4_Types::AXI4_Events, 1, 7)} {PerformanceMonitor::BitVectorable#(Bit#(n), n, 1)} {PerformanceMonitor::BitVectorable#(CacheCore::EventsCacheCore, 1, 7)} {PerformanceMonitor::BitVectorable#(Vector::Vector#(m, Bit#(n)), n, m)}}} {position {../libs/BlueStuff/PerformanceMonitor.bsv 37 11}}
Interface {PerformanceMonitor::PerfCounters_IFC#(numeric type ctrs, numeric type ctrW, numeric type rptW, numeric type evts)} polymorphic {members {{method {Action send_performance_events {{Vector::Vector#(evts, Bit#(rptW))}} {{(* ports = ["evts"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {{Vector::Vector#(ctrs, ReadOnly#(Bit#(ctrW)))} read_counters {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {{Vector::Vector#(ctrs, ReadOnly#(Bit#(TLog#(evts))))} read_ctr_sels {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface ReadOnly#(Bit#(ctrs)) read_ctr_inhibit {{(* ports = [] *)} {(* always_ready  *)}}} {interface ReadOnly#(Bit#(ctrs)) read_ctr_overflow {{(* ports = [] *)} {(* always_ready  *)}}} {method {Action write_counter {Bit#(TLog#(ctrs)) Bit#(ctrW)} {{(* ports = ["idx", "val"] *)} {(* always_ready  *)}}}} {method {Action write_ctr_sel {Bit#(TLog#(ctrs)) Bit#(TLog#(evts))} {{(* ports = ["idx", "val"] *)} {(* always_ready  *)}}}} {method {Action write_ctr_inhibit Bit#(ctrs) {{(* ports = ["val"] *)} {(* always_ready  *)}}}}}} {position {../libs/BlueStuff/PerformanceMonitor.bsv 72 11}}
Alias PLIC::T_wd_source_id 10 {position {../src_Core/PLIC/PLIC.bsv 61 14}}
Alias PLIC::T_wd_target_id 5 {position {../src_Core/PLIC/PLIC.bsv 62 14}}
Interface PLIC::PLIC_Source_IFC {members {{method {Action m_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {../src_Core/PLIC/PLIC.bsv 70 11}}
Interface PLIC::PLIC_Target_IFC {members {{method {Bool m_eip {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/PLIC/PLIC.bsv 78 11}}
Interface {PLIC::PLIC_IFC#(numeric type t_n_external_sources, numeric type t_n_targets, numeric type t_max_priority)} polymorphic {members {{method {Action set_verbosity Bit#(4) {{(* ports = ["verbosity"] *)}}}} {method {Action show_PLIC_state {} {{(* ports = [] *)}}}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action set_addr_map {Bit#(64) Bit#(64)} {{(* ports = ["addr_base", "addr_lim"] *)}}}} {interface {AXI4_Types::AXI4_Slave#(5, 64, 64, 0, 0, 0, 0, 0)} axi4_slave {}} {method {{Vector::Vector#(t_n_external_sources, PLIC::PLIC_Source_IFC)} v_sources {} {}}} {method {{Vector::Vector#(t_n_targets, PLIC::PLIC_Target_IFC)} v_targets {} {}}}}} {position {../src_Core/PLIC/PLIC.bsv 86 11}}
Alias PLIC_16_2_7::PLIC_N_Targets 2 {position {../src_Core/PLIC/PLIC_16_2_7.bsv 27 13}}
Alias PLIC_16_2_7::PLIC_Max_Priority 7 {position {../src_Core/PLIC/PLIC_16_2_7.bsv 28 13}}
Alias PLIC_16_2_7::PLIC_IFC_16_2_7 {PLIC::PLIC_IFC#(0, 2, 7)} {position {../src_Core/PLIC/PLIC_16_2_7.bsv 32 52}}
Interface RISCV_MBox::RISCV_MBox_IFC {members {{method {Action set_verbosity Bit#(4) {{(* ports = ["verbosity"] *)}}}} {method {Action req_reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(0)) rsp_reset {} {{(* ports = [] *)}}}} {method {Action req {Bool Bit#(3) Bit#(64) Bit#(64)} {{(* ports = ["is_OP_not_OP_32", "f3", "v1", "v2"] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) word {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/RISCV_MBox.bsv 36 11}}
Enum XilinxClocks::State {members {Restart WaitLock WaitStart Address Read Modify Write WaitWriteReady}} {width 3} {position {XilinxClocks.bsv 41 3}}
Typeclass {Routable::Has_routingField#(type t, type r_t)} {dependencies {{t determines r_t}}} {members {{{function r_t f(t x1)} routingField}}} {instances {{Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(AddressFlit::AFlit#(i, o), Bit#(o))} {Routable::Has_routingField#(Routable::WithMetaInfo#(t, m_t), r_t)   provisos (Routable::Has_routingField#(t, r_t))} {Routable::Has_routingField#(Routable::WithRouteInfo#(t, r_t), r_t)}}} {position {../libs/BlueStuff/Routable.bsv 46 11}}
Typeclass {Routable::Has_isLast#(type t)} {members {{{function Bool f(t x1)} isLast}}} {instances {{Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_BFlit#(id_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(AddressFlit::AFlit#(i, o))} {Routable::Has_isLast#(Routable::WithMetaInfo#(t, m_t))   provisos (Routable::Has_isLast#(t))} {Routable::Has_isLast#(Routable::WithRouteInfo#(t, r_t))   provisos (Routable::Has_isLast#(t))}}} {position {../libs/BlueStuff/Routable.bsv 50 11}}
Typeclass {Routable::Routable#(type f_t, type r_t)} {superclasses {{Routable::Has_routingField#(f_t, r_t)} Routable::Has_isLast#(f_t)}} {dependencies {{f_t determines r_t}}} {members {}} {instances {{Routable::Routable#(a, b)   provisos (Routable::Has_isLast#(a), Routable::Has_routingField#(a, b))}}} {position {../libs/BlueStuff/Routable.bsv 54 11}}
Typeclass {Routable::FallibleRoute#(type req_t, type rsp_t)} {members {{{a#(MasterSlave::Slave#(req_t, rsp_t))   provisos (IsModule#(a, b))} mkNoRouteSlave}}} {instances {{Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} {Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), AXI4Lite_Types::AXI4Lite_BFlit#(buser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_), down_t))   provisos (Bits#(down_t, down_t_sz))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_), down_t))   provisos (Bits#(down_t, down_t_sz))}}} {position {../libs/BlueStuff/Routable.bsv 72 11}}
Typeclass {Routable::ExpandableReqRsp#(type req_t, type req_fat_t, type rsp_fat_t, type rsp_t, numeric type n_masters)} {dependencies {{(req_t, req_fat_t) determines (rsp_fat_t, rsp_t, n_masters)} {rsp_fat_t determines (req_t, req_fat_t, rsp_t, n_masters)} {(rsp_fat_t, rsp_t) determines (req_t, req_fat_t, n_masters)}}} {members {{{function req_fat_t f(Bit#(TLog#(n_masters)) x1, req_t x2)} expand} {{function Tuple2#(Bit#(TLog#(n_masters)), rsp_t) f(rsp_fat_t x1)} shrink}}} {instances {{Routable::ExpandableReqRsp#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_), AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_), AXI4_Types::AXI4_RFlit#(id_, data_, ruser_), n)   provisos (Add#(id_, TLog#(n), sid_))} {Routable::ExpandableReqRsp#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_), AXI4_Types::AXI4_BFlit#(id_, buser_), n)   provisos (Add#(id_, TLog#(n), sid_))}}} {position {../libs/BlueStuff/Routable.bsv 88 11}}
Struct {Routable::WithRouteInfo#(type t, type r_t)} polymorphic {members {{t payload} {r_t routeInfo}}} {position {../libs/BlueStuff/Routable.bsv 110 3}}
Struct {Routable::WithMetaInfo#(type t, type m_t)} polymorphic {members {{t payload} {m_t metaInfo}}} {position {../libs/BlueStuff/Routable.bsv 123 3}}
Struct {Routable::Range#(numeric type n)} polymorphic {members {{Bit#(n) base} {Bit#(n) size}}} {position {../libs/BlueStuff/Routable.bsv 145 3}}
Alias {Routable::MappingTable#(numeric type n, numeric type a)} {Vector::Vector#(n, Routable::Range#(a))} {position {../libs/BlueStuff/Routable.bsv 155 33}}
Typeclass {RoutableCHERI::RoutableCHERI#(type a, numeric type width)} {dependencies {{a determines width}}} {members {{{function UInt#(width) f(a x1)} getRoutingField} {{function Bool f(a x1)} getLastField}}} {instances {{RoutableCHERI::RoutableCHERI#(MemTypesCHERI::MemoryRequest#(a, b, c, d), r_width)   provisos (Bits#(a, r_width))} {RoutableCHERI::RoutableCHERI#(MemTypesCHERI::MemoryResponse#(a, b, c), r_width)   provisos (Bits#(a, r_width))}}} {position {../libs/TagController/TagController/RoutableCHERI.bsv 31 11}}
Interface {Semi_FIFOF::FIFOF_I#(type t)} polymorphic {members {{method {Action enq t {{(* ports = ["x"] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 20 11}}
Interface {Semi_FIFOF::FIFOF_O#(type t)} polymorphic {members {{method {t first {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 25 11}}
Typeclass {Semi_FIFOF::To_FIFOF_IO#(type tf, type t)} {dependencies {{tf determines t}}} {members {{{function Semi_FIFOF::FIFOF_I#(t) f(tf x1)} to_FIFOF_I} {{function Semi_FIFOF::FIFOF_O#(t) f(tf x1)} to_FIFOF_O}}} {instances {{Semi_FIFOF::To_FIFOF_IO#(FIFOF::FIFOF#(t), t)} {Semi_FIFOF::To_FIFOF_IO#(FIFOLevel::FIFOLevelIfc#(t, n), t)}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 34 11}}
Interface {Semi_FIFOF::Client_Semi_FIFOF#(type req_t, type rsp_t)} polymorphic {members {{interface Semi_FIFOF::FIFOF_O#(req_t) request {}} {interface Semi_FIFOF::FIFOF_I#(rsp_t) response {}}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 193 11}}
Interface {Semi_FIFOF::Server_Semi_FIFOF#(type req_t, type rsp_t)} polymorphic {members {{interface Semi_FIFOF::FIFOF_I#(req_t) request {}} {interface Semi_FIFOF::FIFOF_O#(rsp_t) response {}}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 198 11}}
Interface {SimpleUtils::ArchReg#(type t)} polymorphic {members {{method {t _read {} {{(* ports = [] *)}}}} {method {Action _write t {{(* ports = ["x"] *)}}}} {interface WriteOnly#(t) early {}} {interface Reg#(t) late {}} {method {Bool needCommit {} {{(* ports = [] *)}}}} {method {t commitVal {} {{(* ports = [] *)}}}} {method {Action commit {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/SimpleUtils.bsv 46 11}}
Interface {SimpleUtils::ArchRegFile#(numeric type n, type a)} polymorphic {members {{method {{Vector::Vector#(n, SimpleUtils::ArchReg#(a))} r {} {}}} {method {Action commit {} {{(* ports = [] *)}}}} {method {Bit#(TLog#(n)) rd_idx {} {{(* ports = [] *)}}}} {method {a rd_old_val {} {{(* ports = [] *)}}}} {method {a rd_new_val {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/SimpleUtils.bsv 86 11}}
Typeclass {SimUtils::PrintLog#(type a)} {members {{{function Action f(a x1)} printLog} {{function Action f(a x1)} printTLog} {{function Action f(String x1, a x2)} printLogPlusArgs} {{function Action f(String x1, a x2)} printTLogPlusArgs} {{function Action f(String x1, a x2)} printPlusArgs} {{function Action f(String x1, a x2)} printTPlusArgs}}} {instances {SimUtils::PrintLog#(Fmt) SimUtils::PrintLog#(String)}} {position {../libs/BlueStuff/BlueUtils/SimUtils.bsv 44 11}}
Interface SoC_Map::SoC_Map_IFC {members {{method {Routable::Range#(64) m_plic_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_near_mem_io_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_ethernet_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_dma_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_uart16550_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_uart16550_1_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_iic_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_axi_quad_spi_0_full_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_axi_quad_spi_0_lite_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_axi_quad_spi_1_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_gpio_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_gpio_1_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_boot_rom_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_ddr4_0_uncached_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_ddr4_0_cached_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool m_is_mem_addr Bit#(64) {{(* ports = ["addr"] *)} {(* always_ready  *)}}}} {method {Bool m_is_IO_addr Bit#(64) {{(* ports = ["addr"] *)} {(* always_ready  *)}}}} {method {Bool m_is_near_mem_IO_addr Bit#(64) {{(* ports = ["addr"] *)} {(* always_ready  *)}}}} {method {Bit#(64) m_pc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapFat m_pcc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapFat m_ddc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapFat m_mtcc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapFat m_mepcc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) m_mtvec_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) m_nmivec_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {src_BSV/SoC_Map.bsv 76 11}}
Alias SoC_Map::N_External_Interrupt_Sources 0 {position {src_BSV/SoC_Map.bsv 382 13}}
Interface {SourceSink::Source#(type t)} polymorphic {members {{method {Bool canPeek {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {t peek {} {{(* ports = [] *)}}}} {method {Action drop {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 42 11}}
Interface {SourceSink::Sink#(type t)} polymorphic {members {{method {Bool canPut {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action put t {{(* ports = ["val"] *)}}}}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 48 11}}
Interface {SourceSink::SourceSink#(type t)} polymorphic {members {{interface SourceSink::Source#(t) source {}} {interface SourceSink::Sink#(t) sink {}}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 53 11}}
Typeclass {SourceSink::HasGet#(type a, type b)} {members {{{function ActionValue#(b) f(a x1)} get}}} {instances {{SourceSink::HasGet#(a, b)   provisos (GetPut::ToGet#(a, b))}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 62 11}}
Typeclass {SourceSink::ToSource#(type a, type b)} {dependencies {{a determines b}}} {members {{{function SourceSink::Source#(b) f(a x1)} toSource}}} {instances {{SourceSink::ToSource#(FIFOF::FIFOF#(t), t)} {SourceSink::ToSource#(SourceSink::Source#(t), t)}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 76 11}}
Typeclass {SourceSink::ToSink#(type a, type b)} {dependencies {{a determines b}}} {members {{{function SourceSink::Sink#(b) f(a x1)} toSink}}} {instances {{SourceSink::ToSink#(FIFOF::FIFOF#(t), t)} {SourceSink::ToSink#(SourceSink::Sink#(t), t)}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 94 11}}


Alias StatCounters::No_Of_Evts 115 {position {StatCounters.bsv 38 13}}
Struct StatCounters::EventsCore {members {{Bit#(64) evt_NO_EV {width 64}} {Bit#(64) evt_REDIRECT {width 64}} {Bit#(64) evt_TRAP {width 64}} {Bit#(64) evt_BRANCH {width 64}} {Bit#(64) evt_JAL {width 64}} {Bit#(64) evt_JALR {width 64}} {Bit#(64) evt_AUIPC {width 64}} {Bit#(64) evt_LOAD {width 64}} {Bit#(64) evt_STORE {width 64}} {Bit#(64) evt_LR {width 64}} {Bit#(64) evt_SC {width 64}} {Bit#(64) evt_AMO {width 64}} {Bit#(64) evt_SERIAL_SHIFT {width 64}} {Bit#(64) evt_INT_MUL_DIV_REM {width 64}} {Bit#(64) evt_FP {width 64}} {Bit#(64) evt_SC_SUCCESS {width 64}} {Bit#(64) evt_LOAD_WAIT {width 64}} {Bit#(64) evt_STORE_WAIT {width 64}} {Bit#(64) evt_FENCE {width 64}} {Bit#(64) evt_F_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_D_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_1_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_2_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_3_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_IMPRECISE_SETBOUND {width 64}} {Bit#(64) evt_UNREPRESENTABLE_CAP {width 64}} {Bit#(64) evt_MEM_CAP_LOAD {width 64}} {Bit#(64) evt_MEM_CAP_STORE {width 64}} {Bit#(64) evt_MEM_CAP_LOAD_TAG_SET {width 64}} {Bit#(64) evt_MEM_CAP_STORE_TAG_SET {width 64}} {Bit#(64) evt_INTERRUPT {width 64}}}} {width 1984} {position {StatCounters.bsv 72 3}}
Struct StatCounters::EventsL1I {members {{Bit#(64) evt_LD {width 64}} {Bit#(64) evt_LD_MISS {width 64}} {Bit#(64) evt_LD_MISS_LAT {width 64}} {Bit#(64) evt_TLB {width 64}} {Bit#(64) evt_TLB_MISS {width 64}} {Bit#(64) evt_TLB_MISS_LAT {width 64}} {Bit#(64) evt_TLB_FLUSH {width 64}}}} {width 448} {position {StatCounters.bsv 82 3}}
Struct StatCounters::EventsL1D {members {{Bit#(64) evt_LD {width 64}} {Bit#(64) evt_LD_MISS {width 64}} {Bit#(64) evt_LD_MISS_LAT {width 64}} {Bit#(64) evt_ST {width 64}} {Bit#(64) evt_ST_MISS {width 64}} {Bit#(64) evt_ST_MISS_LAT {width 64}} {Bit#(64) evt_AMO {width 64}} {Bit#(64) evt_AMO_MISS {width 64}} {Bit#(64) evt_AMO_MISS_LAT {width 64}} {Bit#(64) evt_TLB {width 64}} {Bit#(64) evt_TLB_MISS {width 64}} {Bit#(64) evt_TLB_MISS_LAT {width 64}} {Bit#(64) evt_TLB_FLUSH {width 64}} {Bit#(64) evt_EVICT {width 64}}}} {width 896} {position {StatCounters.bsv 99 3}}
Struct StatCounters::EventsTGC {members {{Bit#(64) evt_WRITE {width 64}} {Bit#(64) evt_WRITE_MISS {width 64}} {Bit#(64) evt_READ {width 64}} {Bit#(64) evt_READ_MISS {width 64}} {Bit#(64) evt_EVICT {width 64}} {Bit#(64) evt_SET_TAG_WRITE {width 64}} {Bit#(64) evt_SET_TAG_READ {width 64}}}} {width 448} {position {StatCounters.bsv 109 3}}
Struct StatCounters::AXI4_Slave_Events {members {{Bit#(64) evt_AW_FLIT {width 64}} {Bit#(64) evt_W_FLIT {width 64}} {Bit#(64) evt_W_FLIT_FINAL {width 64}} {Bit#(64) evt_B_FLIT {width 64}} {Bit#(64) evt_AR_FLIT {width 64}} {Bit#(64) evt_R_FLIT {width 64}} {Bit#(64) evt_R_FLIT_FINAL {width 64}}}} {width 448} {position {StatCounters.bsv 119 3}}
Struct StatCounters::AXI4_Master_Events {members {{Bit#(64) evt_AW_FLIT {width 64}} {Bit#(64) evt_W_FLIT {width 64}} {Bit#(64) evt_W_FLIT_FINAL {width 64}} {Bit#(64) evt_B_FLIT {width 64}} {Bit#(64) evt_AR_FLIT {width 64}} {Bit#(64) evt_R_FLIT {width 64}} {Bit#(64) evt_R_FLIT_FINAL {width 64}}}} {width 448} {position {StatCounters.bsv 129 3}}
Struct StatCounters::EventsLL {members {{Bit#(64) evt_LD {width 64}} {Bit#(64) evt_LD_MISS {width 64}} {Bit#(64) evt_LD_MISS_LAT {width 64}} {Bit#(64) evt_ST {width 64}} {Bit#(64) evt_ST_MISS {width 64}} {Bit#(64) evt_TLB {width 64}} {Bit#(64) evt_TLB_MISS {width 64}} {Bit#(64) evt_TLB_FLUSH {width 64}} {Bit#(64) evt_EVICT {width 64}}}} {width 576} {position {StatCounters.bsv 141 3}}
Struct StatCounters::EventsTransExe {members {{Bit#(64) evt_RENAMED_INST {width 64}} {Bit#(64) evt_WILD_JUMP {width 64}} {Bit#(64) evt_WILD_EXCEPTION {width 64}}}} {width 192} {position {StatCounters.bsv 147 3}}
Struct StatCounters::HPMEvents {members {{Maybe#(StatCounters::EventsCore) mab_EventsCore {width 1985}} {Maybe#(StatCounters::EventsL1I) mab_EventsL1I {width 449}} {Maybe#(StatCounters::EventsL1D) mab_EventsL1D {width 897}} {Maybe#(StatCounters::EventsTGC) mab_EventsTGC {width 449}} {Maybe#(StatCounters::AXI4_Slave_Events) mab_AXI4_Slave_Events {width 449}} {Maybe#(StatCounters::AXI4_Master_Events) mab_AXI4_Master_Events {width 449}} {Maybe#(StatCounters::EventsLL) mab_EventsLL {width 577}} {Maybe#(StatCounters::EventsTransExe) mab_EventsTransExe {width 193}}}} {width 5448} {position {StatCounters.bsv 158 3}}
Interface TagController::TagControllerIfc {members {{interface {MasterSlaveCHERI::Slave#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} cache {}} {interface {MasterSlaveCHERI::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} memory {}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/TagController.bsv 71 11}}
Struct TagController::AddrFrame {members {{Bool tagOnlyRead {width 1}} {Bit#(2) bank {width 2}} {Bit#(1) masterID {width 1}} {Bit#(5) transactionID {width 5}}}} {width 9} {position {../libs/TagController/TagController/TagController.bsv 86 3}}
Alias TagController::LogFlitsPerCap 1 {position {../libs/TagController/TagController/TagController.bsv 91 48}}
Alias TagController::CapsPerFlit 1 {position {../libs/TagController/TagController/TagController.bsv 92 50}}
Enum TagController::MemReqType {members {TagLookupReq StdReq}} {width 1} {position {../libs/TagController/TagController/TagController.bsv 93 37}}
Alias TagController::InFlight 4 {position {../libs/TagController/TagController/TagController.bsv 94 11}}
Alias TagController::MaxBurstLength 8 {position {../libs/TagController/TagController/TagController.bsv 95 11}}
Alias TagController::Frame Bit#(3) {position {../libs/TagController/TagController/TagController.bsv 96 37}}
Alias TagController::ReqIdCount Bit#(8) {position {../libs/TagController/TagController/TagController.bsv 97 17}}
Struct TagController::TagReqId {members {{MemTypesCHERI::ReqId reqId {width 6}} {Bit#(8) count {width 8}}}} {width 14} {position {../libs/TagController/TagController/TagController.bsv 102 3}}
Interface {TagControllerAXI::TagControllerAXI#(numeric type id_, numeric type addr_, numeric type data_)} polymorphic {members {{interface {AXI4_Types::AXI4_Master#(6, addr_, data_, 0, 0, 0, 0, 0)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, 0, 1, 0, 0, 1)} slave {}} {method {Action clear {} {{(* ports = [] *)}}}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/TagControllerAXI.bsv 60 11}}

Interface TLB::TLB_IFC {members {{method {Action mv_vm_put_va Bit#(64) {{(* ports = ["full_va"] *)}}}} {method {MMU_Cache_Common::VM_Xlate_Result mv_vm_get_xlate {Bit#(64) Bool Bool Bit#(2) Bit#(1) Bit#(1)} {{(* ports = ["satp", "read_not_write", "cap", "priv", "sstatus_SUM", "mstatus_MXR"] *)}}}} {method {Action ma_insert {Bit#(16) Bit#(27) Bit#(64) Bit#(2) Bit#(64)} {{(* ports = ["asid", "vpn", "pte", "level", "pte_pa"] *)}}}} {method {Action ma_flush {} {{(* ports = [] *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 49 11}}
Struct TLB::TLB_Lookup_Result {members {{Bool hit {width 1}} {Bit#(64) pte {width 64}} {Bit#(2) pte_level {width 2}} {Bit#(64) pte_pa {width 64}}}} {width 131} {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 83 6}}
Alias {TLB::TLB_Tag#(numeric type lvl, numeric type idx_sz)} {Bit#(TSub#(TMul#(TSub#(3, lvl), 9), idx_sz))} {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 201 4}}
Alias TLB::TLB2_Size 4 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 206 38}}
Alias TLB::TLB2_Index_sz 2 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 207 38}}
Alias TLB::TLB2_Index Bit#(2) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 208 38}}
Alias TLB::TLB2_Tag Bit#(7) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 209 38}}
Alias TLB::TLB1_Size 4 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 214 38}}
Alias TLB::TLB1_Index_sz 2 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 215 38}}
Alias TLB::TLB1_Index Bit#(2) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 216 38}}
Alias TLB::TLB1_Tag Bit#(16) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 217 38}}
Alias TLB::TLB0_Size 512 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 221 49}}
Alias TLB::TLB0_Assos 2 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 222 49}}
Alias TLB::TLB0_Index_sz 8 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 223 49}}
Alias TLB::TLB0_Index Bit#(8) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 224 49}}
Alias TLB::TLB0_Tag Bit#(19) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 225 49}}
Struct TLB::TLBE {members {{Bit#(16) asid_tag {width 16}} {Bit#(64) pte {width 64}} {Bit#(64) pte_pa {width 64}}}} {width 144} {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 240 6}}
Enum MMU_Cache_Common::VM_Xlate_Outcome {members {VM_XLATE_OK VM_XLATE_TLB_MISS VM_XLATE_EXCEPTION}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 90 69}}
Enum TV_Info::Trace_Op {members {TRACE_RESET TRACE_GPR_WRITE TRACE_FPR_WRITE TRACE_CSR_WRITE TRACE_MEM_WRITE TRACE_OTHER TRACE_I_RD TRACE_F_GRD TRACE_F_FRD TRACE_I_LOAD TRACE_F_LOAD TRACE_I_STORE TRACE_F_STORE TRACE_AMO TRACE_TRAP TRACE_RET TRACE_CSRRX TRACE_INTR}} {width 5} {position {../src_Core/ISA/TV_Info.bsv 46 17}}
Struct TV_Info::Trace_Data {members {{TV_Info::Trace_Op op {width 5}} {Bit#(64) pc {width 64}} {ISA_Decls::ISize instr_sz {width 1}} {Bit#(32) instr {width 32}} {Bit#(5) rd {width 5}} {Bit#(64) word1 {width 64}} {Bit#(64) word2 {width 64}} {Bit#(64) word3 {width 64}} {Bit#(64) word4 {width 64}} {Bit#(64) word5 {width 64}}}} {width 427} {position {../src_Core/ISA/TV_Info.bsv 62 6}}
Alias TV_Info::TV_VB_SIZE 72 {position {../src_Core/ISA/TV_Info.bsv 440 14}}
Alias TV_Info::TV_Vec_Bytes {Vector::Vector#(72, Bit#(8))} {position {../src_Core/ISA/TV_Info.bsv 441 38}}
Struct TV_Info::Info_CPU_to_Verifier {members {{Bit#(32) num_bytes {width 32}} {{Vector::Vector#(72, Bit#(8))} vec_bytes {width 576}}}} {width 608} {position {../src_Core/ISA/TV_Info.bsv 448 3}}
Interface TV_Taps::DM_Mem_Tap_IFC {members {{interface {AXI4_Types::AXI4_Slave#(4, 64, 64, 0, 1, 0, 0, 1)} slave {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} master {}} {interface GetPut::Get#(TV_Info::Trace_Data) trace_data_out {}}}} {position {../src_Core/Core/TV_Taps.bsv 56 11}}
Interface TV_Taps::DM_GPR_Tap_IFC {members {{interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} client {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} server {}} {interface GetPut::Get#(TV_Info::Trace_Data) trace_data_out {}}}} {position {../src_Core/Core/TV_Taps.bsv 143 11}}
Interface TV_Taps::DM_FPR_Tap_IFC {members {{interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} client {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} server {}} {interface GetPut::Get#(TV_Info::Trace_Data) trace_data_out {}}}} {position {../src_Core/Core/TV_Taps.bsv 185 11}}
Interface TV_Taps::DM_CSR_Tap_IFC {members {{interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} client {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} server {}} {interface GetPut::Get#(TV_Info::Trace_Data) trace_data_out {}}}} {position {../src_Core/Core/TV_Taps.bsv 227 11}}


Typeclass {Virtualizable::Virtualizable#(type t)} {members {{{function a#(Array#(t)) f(t x1, Integer x2)   provisos (IsModule#(a, b))} virtualize}}} {instances {{Virtualizable::Virtualizable#(ClientServer::Server#(req_t, rsp_t))   provisos (Bits#(rsp_t, _b), Bits#(req_t, _a), Virtualizable::NeedRsp#(req_t))} {Virtualizable::Virtualizable#(MasterSlave::Slave#(req_t, rsp_t))   provisos (Bits#(rsp_t, b__), Bits#(req_t, a__), Virtualizable::NeedRsp#(req_t))} {Virtualizable::Virtualizable#(Reg#(t))   provisos (Bits#(t, _a))}}} {position {../libs/BlueStuff/BlueBasics/Virtualizable.bsv 59 11}}
Typeclass {Virtualizable::NeedRsp#(type req_t)} {members {{{function Bool f(req_t x1)} needRsp}}} {instances {{Virtualizable::NeedRsp#(Either#(a, b))} {Virtualizable::NeedRsp#(MemTypes::MemReq#(a, b))}}} {position {../libs/BlueStuff/BlueBasics/Virtualizable.bsv 67 11}}
Struct {VnD::VnD#(type a)} polymorphic {members {{Bool v {width 1}} {a d}}} {position {../libs/TagController/TagController/CacheCore/VnD.bsv 35 3}}
