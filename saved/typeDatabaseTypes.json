Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4Lite_Types::AXI4Lite_AWFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) awaddr} {Bit#(3) awprot {width 3}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 52 3}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["awvalid", "awaddr", "awprot", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 86 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 130 3}}
Interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 161 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_BFlit#(numeric type user_)} polymorphic {members {{AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 204 3}}
Interface {AXI4Lite_Types::AXI4Lite_B_Master_Sig#(numeric type user_)} polymorphic {members {{method {Action bflit {Bool AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 214 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(numeric type user_)} polymorphic {members {{method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 230 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_ARFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) araddr} {Bit#(3) arprot {width 3}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 273 3}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["arvalid", "araddr", "arprot", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 307 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_RFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 351 3}}
Interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(data_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["rvalid", "rdata", "rresp", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 362 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 379 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_Master#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 421 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 452 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} masterSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 490 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 519 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 550 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slaveSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 588 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 617 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 634 11}}
Struct {AXI4Lite_Types::AXI4Lite_WriteFlit#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)} aw} {{AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)} w}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 712 3}}
Typeclass {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) f(t x1)} toAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)} {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) x1)} fromAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 68 11}}
Typeclass {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) f(t x1)} toAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)} {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) x1)} fromAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 68 11}}
Typeclass {AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_BFlit#(user_) f(t x1)} toAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 51 11}}
Typeclass {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_BFlit#(user_) x1)} fromAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)} {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(MemTypes::MemRsp#(data_t), user_sz)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 59 11}}
Typeclass {AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) f(t x1)} toAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 56 11}}
Typeclass {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) x1)} fromAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)} {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(MemTypes::MemRsp#(data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 64 11}}
Typeclass {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) f(t x1)} toAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)} {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(MemTypes::MemReq#(addr_t, data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 62 11}}
Typeclass {AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) x1)} fromAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 70 11}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}
Typeclass {AXI4_AR_Utils::ToAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) f(t x1)} toAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::ToAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 94 11}}
Typeclass {AXI4_AR_Utils::FromAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) x1)} fromAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::FromAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 105 11}}
Typeclass {AXI4_AW_Utils::ToAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) f(t x1)} toAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::ToAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 94 11}}
Typeclass {AXI4_AW_Utils::FromAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) x1)} fromAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::FromAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 105 11}}
Typeclass {AXI4_B_Utils::ToAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function AXI4_Types::AXI4_BFlit#(id_, user_) f(t x1)} toAXI4_BFlit}}} {instances {{AXI4_B_Utils::ToAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 62 11}}
Typeclass {AXI4_B_Utils::FromAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_BFlit#(id_, user_) x1)} fromAXI4_BFlit}}} {instances {{AXI4_B_Utils::FromAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 70 11}}
Typeclass {AXI4_R_Utils::ToAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_RFlit#(id_, data_, user_) f(t x1)} toAXI4_RFlit}}} {instances {{AXI4_R_Utils::ToAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 76 11}}
Typeclass {AXI4_R_Utils::FromAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_RFlit#(id_, data_, user_) x1)} fromAXI4_RFlit}}} {instances {{AXI4_R_Utils::FromAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 87 11}}
Typeclass {AXI4_W_Utils::ToAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_WFlit#(data_, user_) f(t x1)} toAXI4_WFlit}}} {instances {{AXI4_W_Utils::ToAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 65 11}}
Typeclass {AXI4_W_Utils::FromAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_WFlit#(data_, user_) x1)} fromAXI4_WFlit}}} {instances {{AXI4_W_Utils::FromAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 73 11}}
Enum AXI4_Utils::SerialiserState {members {IDLE BURST_WRITE WAITING}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 437 43}}
Enum AXI4_Utils::ReadSplitOption {members {COMBINE PAD_FIRST PAD_LAST}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 1042 47}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}
Typeclass {AXI4_AR_Utils::ToAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) f(t x1)} toAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::ToAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 94 11}}
Typeclass {AXI4_AR_Utils::FromAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) x1)} fromAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::FromAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 105 11}}
Typeclass {AXI4_AW_Utils::ToAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) f(t x1)} toAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::ToAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 94 11}}
Typeclass {AXI4_AW_Utils::FromAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) x1)} fromAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::FromAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 105 11}}
Typeclass {AXI4_B_Utils::ToAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function AXI4_Types::AXI4_BFlit#(id_, user_) f(t x1)} toAXI4_BFlit}}} {instances {{AXI4_B_Utils::ToAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 62 11}}
Typeclass {AXI4_B_Utils::FromAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_BFlit#(id_, user_) x1)} fromAXI4_BFlit}}} {instances {{AXI4_B_Utils::FromAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 70 11}}
Typeclass {AXI4_R_Utils::ToAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_RFlit#(id_, data_, user_) f(t x1)} toAXI4_RFlit}}} {instances {{AXI4_R_Utils::ToAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 76 11}}
Typeclass {AXI4_R_Utils::FromAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_RFlit#(id_, data_, user_) x1)} fromAXI4_RFlit}}} {instances {{AXI4_R_Utils::FromAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 87 11}}
Typeclass {AXI4_W_Utils::ToAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_WFlit#(data_, user_) f(t x1)} toAXI4_WFlit}}} {instances {{AXI4_W_Utils::ToAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 65 11}}
Typeclass {AXI4_W_Utils::FromAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_WFlit#(data_, user_) x1)} fromAXI4_WFlit}}} {instances {{AXI4_W_Utils::FromAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 73 11}}
Enum AXI4_Utils::SerialiserState {members {IDLE BURST_WRITE WAITING}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 437 43}}
Enum AXI4_Utils::ReadSplitOption {members {COMBINE PAD_FIRST PAD_LAST}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 1042 47}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4Lite_Types::AXI4Lite_AWFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) awaddr} {Bit#(3) awprot {width 3}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 52 3}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["awvalid", "awaddr", "awprot", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 86 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 130 3}}
Interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 161 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_BFlit#(numeric type user_)} polymorphic {members {{AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 204 3}}
Interface {AXI4Lite_Types::AXI4Lite_B_Master_Sig#(numeric type user_)} polymorphic {members {{method {Action bflit {Bool AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 214 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(numeric type user_)} polymorphic {members {{method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 230 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_ARFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) araddr} {Bit#(3) arprot {width 3}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 273 3}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["arvalid", "araddr", "arprot", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 307 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_RFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 351 3}}
Interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(data_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["rvalid", "rdata", "rresp", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 362 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 379 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_Master#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 421 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 452 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} masterSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 490 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 519 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 550 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slaveSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 588 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 617 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 634 11}}
Struct {AXI4Lite_Types::AXI4Lite_WriteFlit#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)} aw} {{AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)} w}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 712 3}}
Typeclass {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) f(t x1)} toAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)} {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) x1)} fromAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 68 11}}
Typeclass {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) f(t x1)} toAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)} {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) x1)} fromAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 68 11}}
Typeclass {AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_BFlit#(user_) f(t x1)} toAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 51 11}}
Typeclass {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_BFlit#(user_) x1)} fromAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)} {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(MemTypes::MemRsp#(data_t), user_sz)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 59 11}}
Typeclass {AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) f(t x1)} toAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 56 11}}
Typeclass {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) x1)} fromAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)} {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(MemTypes::MemRsp#(data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 64 11}}
Typeclass {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) f(t x1)} toAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)} {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(MemTypes::MemReq#(addr_t, data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 62 11}}
Typeclass {AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) x1)} fromAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 70 11}}
Typeclass {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) f(t x1)} toAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)} {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) x1)} fromAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 68 11}}
Typeclass {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) f(t x1)} toAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)} {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) x1)} fromAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 68 11}}
Typeclass {AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_BFlit#(user_) f(t x1)} toAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 51 11}}
Typeclass {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_BFlit#(user_) x1)} fromAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)} {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(MemTypes::MemRsp#(data_t), user_sz)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 59 11}}

Typeclass {AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) f(t x1)} toAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 56 11}}
Typeclass {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) x1)} fromAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)} {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(MemTypes::MemRsp#(data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 64 11}}
Struct {AXI4Lite_Types::AXI4Lite_AWFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) awaddr} {Bit#(3) awprot {width 3}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 52 3}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["awvalid", "awaddr", "awprot", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 86 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 130 3}}
Interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 161 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_BFlit#(numeric type user_)} polymorphic {members {{AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 204 3}}
Interface {AXI4Lite_Types::AXI4Lite_B_Master_Sig#(numeric type user_)} polymorphic {members {{method {Action bflit {Bool AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 214 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(numeric type user_)} polymorphic {members {{method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 230 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_ARFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) araddr} {Bit#(3) arprot {width 3}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 273 3}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["arvalid", "araddr", "arprot", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 307 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_RFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 351 3}}
Interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(data_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["rvalid", "rdata", "rresp", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 362 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 379 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_Master#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 421 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 452 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} masterSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 490 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 519 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 550 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slaveSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 588 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 617 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 634 11}}
Struct {AXI4Lite_Types::AXI4Lite_WriteFlit#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)} aw} {{AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)} w}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 712 3}}

Typeclass {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) f(t x1)} toAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)} {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(MemTypes::MemReq#(addr_t, data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 62 11}}
Typeclass {AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) x1)} fromAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 70 11}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4Stream_Types::AXI4Stream_Flit#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{Bit#(data_) tdata} {{Bit#(TDiv#(data_, 8))} tstrb} {{Bit#(TDiv#(data_, 8))} tkeep} {Bool tlast {width 1}} {Bit#(id_) tid} {Bit#(dest_) tdest} {Bit#(user_) tuser}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 55 3}}
Interface {AXI4Stream_Types::AXI4Stream_Master_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Bit#(data_) tdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tstrb {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tkeep {} {{(* ports = [] *)}}}} {method {Bool tlast {} {{(* ports = [] *)}}}} {method {Bit#(id_) tid {} {{(* ports = [] *)}}}} {method {Bit#(dest_) tdest {} {{(* ports = [] *)}}}} {method {Bit#(user_) tuser {} {{(* ports = [] *)}}}} {method {Bool tvalid {} {{(* ports = [] *)}}}} {method {Action tready Bool {{(* ports = ["tready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 62 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Stream_Types::AXI4Stream_Slave_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action tflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} {Bit#(TDiv#(data_, 8))} Bool Bit#(id_) Bit#(dest_) Bit#(user_)} {{(* ports = ["tvalid", "tdata", "tstrb", "tkeep", "tlast", "tid", "tdest", "tuser"] *)} {(* prefix = "" *)}}}} {method {Bool tready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 78 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Alias {AXI4Stream_Types::AXI4Stream_Master#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 94 9}}
Alias {AXI4Stream_Types::AXI4Stream_Slave#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 100 9}}
Interface {AXI4Stream_Types::AXI4Stream_Shim#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} master {}} {interface {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 114 11}}
Typeclass {AXI4Stream_Utils::ToAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) f(t x1)} toAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::ToAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 63 11}}
Typeclass {AXI4Stream_Utils::FromAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function t f(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) x1)} fromAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::FromAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 76 11}}
Struct {AXI4Stream_Types::AXI4Stream_Flit#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{Bit#(data_) tdata} {{Bit#(TDiv#(data_, 8))} tstrb} {{Bit#(TDiv#(data_, 8))} tkeep} {Bool tlast {width 1}} {Bit#(id_) tid} {Bit#(dest_) tdest} {Bit#(user_) tuser}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 55 3}}
Interface {AXI4Stream_Types::AXI4Stream_Master_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Bit#(data_) tdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tstrb {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tkeep {} {{(* ports = [] *)}}}} {method {Bool tlast {} {{(* ports = [] *)}}}} {method {Bit#(id_) tid {} {{(* ports = [] *)}}}} {method {Bit#(dest_) tdest {} {{(* ports = [] *)}}}} {method {Bit#(user_) tuser {} {{(* ports = [] *)}}}} {method {Bool tvalid {} {{(* ports = [] *)}}}} {method {Action tready Bool {{(* ports = ["tready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 62 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Stream_Types::AXI4Stream_Slave_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action tflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} {Bit#(TDiv#(data_, 8))} Bool Bit#(id_) Bit#(dest_) Bit#(user_)} {{(* ports = ["tvalid", "tdata", "tstrb", "tkeep", "tlast", "tid", "tdest", "tuser"] *)} {(* prefix = "" *)}}}} {method {Bool tready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 78 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Alias {AXI4Stream_Types::AXI4Stream_Master#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 94 9}}
Alias {AXI4Stream_Types::AXI4Stream_Slave#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 100 9}}
Interface {AXI4Stream_Types::AXI4Stream_Shim#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} master {}} {interface {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 114 11}}
Typeclass {AXI4Stream_Utils::ToAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) f(t x1)} toAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::ToAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 63 11}}
Typeclass {AXI4Stream_Utils::FromAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function t f(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) x1)} fromAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::FromAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 76 11}}
Typeclass {AXI4_AR_Utils::ToAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) f(t x1)} toAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::ToAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 94 11}}
Typeclass {AXI4_AR_Utils::FromAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) x1)} fromAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::FromAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 105 11}}
Typeclass {AXI4_AW_Utils::ToAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) f(t x1)} toAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::ToAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 94 11}}
Typeclass {AXI4_AW_Utils::FromAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) x1)} fromAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::FromAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 105 11}}

Typeclass {AXI4_B_Utils::ToAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function AXI4_Types::AXI4_BFlit#(id_, user_) f(t x1)} toAXI4_BFlit}}} {instances {{AXI4_B_Utils::ToAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 62 11}}
Typeclass {AXI4_B_Utils::FromAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_BFlit#(id_, user_) x1)} fromAXI4_BFlit}}} {instances {{AXI4_B_Utils::FromAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 70 11}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}



Typeclass {AXI4_R_Utils::ToAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_RFlit#(id_, data_, user_) f(t x1)} toAXI4_RFlit}}} {instances {{AXI4_R_Utils::ToAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 76 11}}
Typeclass {AXI4_R_Utils::FromAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_RFlit#(id_, data_, user_) x1)} fromAXI4_RFlit}}} {instances {{AXI4_R_Utils::FromAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 87 11}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}
Enum AXI4_Utils::SerialiserState {members {IDLE BURST_WRITE WAITING}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 437 43}}
Enum AXI4_Utils::ReadSplitOption {members {COMBINE PAD_FIRST PAD_LAST}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 1042 47}}
Typeclass {AXI4_W_Utils::ToAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_WFlit#(data_, user_) f(t x1)} toAXI4_WFlit}}} {instances {{AXI4_W_Utils::ToAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 65 11}}
Typeclass {AXI4_W_Utils::FromAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_WFlit#(data_, user_) x1)} fromAXI4_WFlit}}} {instances {{AXI4_W_Utils::FromAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 73 11}}
Struct {AXI_Helpers::WriteReqFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type tag_)} polymorphic {members {{{AXI4_Types::AXI4_AWFlit#(id_, addr_, 0)} aw} {{AXI4_Types::AXI4_WFlit#(data_, tag_)} w}}} {position {../libs/TagController/TagController/AXI_Helpers.bsv 37 3}}
TaggedUnion {AXI_Helpers::ReqFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type tag_)} polymorphic {members {{{AXI_Helpers::WriteReqFlit#(id_, addr_, data_, tag_)} Write} {{AXI4_Types::AXI4_ARFlit#(id_, addr_, 0)} Read}}} {position {../libs/TagController/TagController/AXI_Helpers.bsv 43 3}}
TaggedUnion {AXI_Helpers::RspFlit#(numeric type id_, numeric type data_, numeric type tag_)} polymorphic {members {{{AXI4_Types::AXI4_BFlit#(id_, 0)} Write} {{AXI4_Types::AXI4_RFlit#(id_, data_, tag_)} Read}}} {position {../libs/TagController/TagController/AXI_Helpers.bsv 52 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}
TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {AXI_Helpers::DRAMReq#(numeric type id_, numeric type addr_)} {AXI_Helpers::ReqFlit#(id_, addr_, 64, 0)} {position {../libs/TagController/TagController/AXI_Helpers.bsv 61 58}}
Alias {AXI_Helpers::DRAMRsp#(numeric type id_)} {AXI_Helpers::RspFlit#(id_, 64, 0)} {position {../libs/TagController/TagController/AXI_Helpers.bsv 62 58}}
Struct {Bag::Entry#(type keyType, type datType)} polymorphic {members {{keyType key} {datType dat}}} {position {../libs/TagController/TagController/CacheCore/Bag.bsv 46 3}}
Interface {Bag::Bag#(numeric type numElems, type keyType, type datType)} polymorphic {members {{method {VnD::VnD#(datType) isMember keyType {{(* ports = ["x"] *)}}}} {method {Bool dataMatch datType {{(* ports = ["x"] *)}}}} {method {Action insert {keyType datType} {{(* ports = ["x", "d"] *)}}}} {method {Action update {keyType datType} {{(* ports = ["x", "d"] *)}}}} {method {Bool full {} {{(* ports = [] *)}}}} {method {Bool nextFull {} {{(* ports = [] *)}}}} {method {Bool empty {} {{(* ports = [] *)}}}} {method {Action remove keyType {{(* ports = ["x"] *)}}}} {method {VnD::VnD#(keyType) nextKey {} {{(* ports = [] *)}}}} {method {VnD::VnD#(datType) nextData {} {{(* ports = [] *)}}}} {method {Action iterateNext {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/Bag.bsv 48 11}}
Interface {Bag::FFBag#(numeric type numElems, type keyType, type datType, numeric type depth)} polymorphic {members {{method {Action enq {keyType datType} {{(* ports = ["x", "d"] *)}}}} {method {VnD::VnD#(datType) first keyType {{(* ports = ["x"] *)}}}} {method {Action deq keyType {{(* ports = ["x"] *)}}}} {method {Bool full {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/Bag.bsv 172 11}}
Typeclass {SimUtils::PrintLog#(type a)} {members {{{function Action f(a x1)} printLog} {{function Action f(a x1)} printTLog} {{function Action f(String x1, a x2)} printLogPlusArgs} {{function Action f(String x1, a x2)} printTLogPlusArgs} {{function Action f(String x1, a x2)} printPlusArgs} {{function Action f(String x1, a x2)} printTPlusArgs}}} {instances {SimUtils::PrintLog#(Fmt) SimUtils::PrintLog#(String)}} {position {../libs/BlueStuff/BlueUtils/SimUtils.bsv 44 11}}
Interface {SimpleUtils::ArchReg#(type t)} polymorphic {members {{method {t _read {} {{(* ports = [] *)}}}} {method {Action _write t {{(* ports = ["x"] *)}}}} {interface WriteOnly#(t) early {}} {interface Reg#(t) late {}} {method {Bool needCommit {} {{(* ports = [] *)}}}} {method {t commitVal {} {{(* ports = [] *)}}}} {method {Action commit {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/SimpleUtils.bsv 46 11}}
Interface {SimpleUtils::ArchRegFile#(numeric type n, type a)} polymorphic {members {{method {{Vector::Vector#(n, SimpleUtils::ArchReg#(a))} r {} {}}} {method {Action commit {} {{(* ports = [] *)}}}} {method {Bit#(TLog#(n)) rd_idx {} {{(* ports = [] *)}}}} {method {a rd_old_val {} {{(* ports = [] *)}}}} {method {a rd_new_val {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/SimpleUtils.bsv 86 11}}
Struct {MemTypes::BitPO#(numeric type n)} polymorphic {members {{Bit#(n) val}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 50 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}


TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {MemTypes::Mem#(type addr_t, type data_t)} {MasterSlave::Slave#(MemTypes::MemReq#(addr_t, data_t), MemTypes::MemRsp#(data_t))} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 196 3}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {MemBRAM::BRAM2#(numeric type a0w, numeric type d0w, numeric type a1w, numeric type d1w)} polymorphic {members {{interface {MemBRAM::BRAM#(a0w, d0w)} p0 {}} {interface {MemBRAM::BRAM#(a1w, d1w)} p1 {}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 51 11}}
Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}
Interface {FF::FF#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 64 11}}
Interface {FF::FFNext#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {data next {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool nextNotEmpty {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 74 11}}
Interface Branch_Predictor::Branch_Predictor_IFC {members {{method {Action reset {} {{(* ports = [] *)}}}} {method {Action predict_req Bit#(64) {{(* ports = ["pc"] *)}}}} {method {Bit#(64) predict_rsp {Bool Bit#(32)} {{(* ports = ["is_i32_not_i16", "instr"] *)} {(* always_ready  *)}}}} {method {Action bp_train {Bit#(64) Bool Bit#(32) CPU_Globals::CF_Info} {{(* ports = ["pc", "is_i32_not_i16", "instr", "cf_info"] *)}}}}}} {position {../src_Core/CPU/Branch_Predictor.bsv 38 11}}
Alias Branch_Predictor::BTB_Num_Sets 512 {position {../src_Core/CPU/Branch_Predictor.bsv 70 15}}
Alias Branch_Predictor::BTB_Index_Sz 9 {position {../src_Core/CPU/Branch_Predictor.bsv 76 31}}
Alias Branch_Predictor::BTB_Index Bit#(9) {position {../src_Core/CPU/Branch_Predictor.bsv 79 55}}
Alias Branch_Predictor::BTB_Tag Bit#(54) {position {../src_Core/CPU/Branch_Predictor.bsv 81 55}}
Alias Branch_Predictor::Word_Addr Bit#(63) {position {../src_Core/CPU/Branch_Predictor.bsv 101 32}}
Struct Branch_Predictor::BTB_Entry {members {{Bool valid {width 1}} {Bit#(54) pc_tag {width 54}} {Bit#(63) predicted_pc {width 63}}}} {width 118} {position {../src_Core/CPU/Branch_Predictor.bsv 107 6}}
Alias Branch_Predictor::RAS_Capacity 16 {position {../src_Core/CPU/Branch_Predictor.bsv 113 14}}

Struct CacheCorderer::TransRecord {members {{Bool ongoing {width 1}} {MemTypesCHERI::ReqId id {width 6}} {UInt#(2) first {width 2}} {UInt#(2) last {width 2}} {UInt#(2) next {width 2}}}} {width 13} {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 44 3}}
Struct CacheCorderer::ReqRec {members {{MemTypesCHERI::ReqId id {width 6}} {Bit#(35) line {width 35}} {UInt#(2) first {width 2}} {UInt#(2) last {width 2}} {VnD::VnD#(MemTypesCHERI::ReqId) idBeforeMe {width 7}}}} {width 52} {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 60 3}}
Alias CacheCorderer::Masters 2 {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 62 29}}
Interface {CacheCorderer::CacheCorderer#(numeric type inFlight)} polymorphic {members {{method {Bool reqsEmpty {} {{(* ports = [] *)}}}} {method {Bool reqsFull {} {{(* ports = [] *)}}}} {method {Bool lookupCheckId MemTypesCHERI::ReqId {{(* ports = ["id"] *)}}}} {method {Bool lookupIsOngoing {} {{(* ports = [] *)}}}} {method {UInt#(2) lookupFlit {MemTypesCHERI::ReqId UInt#(2)} {{(* ports = ["id", "original"] *)}}}} {method {Action lookupReport {MemTypesCHERI::ReqId UInt#(2) UInt#(2) UInt#(2)} {{(* ports = ["id", "flit", "first", "last"] *)}}}} {method {Action slaveReq {MemTypesCHERI::ReqId Bit#(35) UInt#(2) UInt#(2)} {{(* ports = ["id", "line", "first", "last"] *)}}}} {method {Bool slaveReqServeReady {MemTypesCHERI::ReqId Bit#(35)} {{(* ports = ["id", "line"] *)}}}} {method {ActionValue#(Bool) slaveReqExecuteReady {MemTypesCHERI::ReqId UInt#(2)} {{(* ports = ["id", "flit"] *)}}}} {method {Bool slaveRspIsOngoing {} {{(* ports = [] *)}}}} {method {Bool slaveRspLast {MemTypesCHERI::ReqId UInt#(2)} {{(* ports = ["id", "flit"] *)}}}} {method {Action slaveRsp {MemTypesCHERI::ReqId Bool} {{(* ports = ["id", "last"] *)}}}} {method {Bool mastReqsEmpty {} {{(* ports = [] *)}}}} {method {Bool mastReqsFull {} {{(* ports = [] *)}}}} {method {Bit#(5) mastReqsSpaces {} {{(* ports = [] *)}}}} {method {Bit#(5) mastNextId {} {{(* ports = [] *)}}}} {method {Bool mastCheckId MemTypesCHERI::ReqId {{(* ports = ["id"] *)}}}} {method {Action mastReq {MemTypesCHERI::ReqId UInt#(2) UInt#(2) Bit#(35) Bool} {{(* ports = ["id", "first", "last", "line", "read"] *)}}}} {method {Action mastRsp {MemTypesCHERI::ReqId Bool Bool} {{(* ports = ["id", "read", "last"] *)}}}} {method {UInt#(2) nextMastRspFlit {MemTypesCHERI::ReqId Bool} {{(* ports = ["id", "read"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 80 11}}
Interface {CacheCore::CacheCore#(numeric type ways, numeric type keyBits, numeric type inFlight)} polymorphic {members {{method {Bool canPut {} {{(* ports = [] *)}}}} {method {Action put {{MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)}} {{(* ports = ["req"] *)}}}} {interface {MasterSlaveCHERI::CheckedGet#(MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} response {{(* ports = [] *)}}} {method {Action nextWillCommit Bool {{(* ports = ["nextCommitting"] *)}}}} {method {Action invalidate {{MemTypesCHERI::PhyByteAddress#(40, 8)}} {{(* ports = ["addr"] *)}}}} {method {ActionValue#(Bool) invalidateDone {} {{(* ports = [] *)}}}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 79 11}}
Alias {CacheCore::Tag#(numeric type tagBits)} Bit#(tagBits) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 96 23}}
Alias {CacheCore::Key#(numeric type keyBits)} Bit#(keyBits) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 97 23}}
Alias CacheCore::Offset Bit#(3) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 98 28}}
Struct {CacheCore::CacheAddress#(numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bit#(tagBits) tag} {Bit#(keyBits) key} {UInt#(2) bank {width 2}} {Bit#(3) offset {width 3}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 104 3}}
Alias {CacheCore::Way#(numeric type ways)} Bit#(TLog#(ways)) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 105 27}}
Struct {CacheCore::DataKey#(numeric type ways, numeric type keyBits)} polymorphic {members {{Bit#(keyBits) key} {UInt#(2) bank {width 2}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 110 3}}
Struct CacheCore::CacheCommit {members {{Bit#(5) id {width 5}} {Bool commit {width 1}}}} {width 6} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 115 3}}
Alias CacheCore::LineCapTags {Vector::Vector#(4, Vector::Vector#(1, Bool))} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 118 35}}
Struct {CacheCore::TagLine#(numeric type tagBits)} polymorphic {members {{Bit#(tagBits) tag} {Bool dirty {width 1}} {{Vector::Vector#(8, Bool)} valid {width 8}} {Bool pendMem {width 1}} {{Vector::Vector#(4, Vector::Vector#(1, Bool))} capTags {width 4}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 129 3}}
Enum CacheCore::CacheState {members {Init Serving}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 142 30}}
Enum CacheCore::LookupCommand {members {Serve Writeback MemResponse}} {width 2} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 143 46}}
Enum CacheCore::WriteMissBehaviour {members {WriteThrough WriteAllocate}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 145 46}}
Enum CacheCore::ResponseBehaviour {members {OnlyReadResponses RespondAll}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 146 46}}
Enum CacheCore::OrderBehaviour {members {InOrder OutOfOrder}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 147 36}}
Struct {CacheCore::AddrTagWay#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{{CacheCore::CacheAddress#(keyBits, tagBits)} addr} {CacheCore::TagLine#(tagBits) tag} {Bit#(TLog#(ways)) way} {Bool cached {width 1}} {MemTypesCHERI::ReqId reqId {width 6}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 155 3}}
Struct {CacheCore::InvalidateToken#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bit#(tagBits) tag} {Bit#(keyBits) key} {Bit#(TLog#(ways)) way} {Bool valid {width 1}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 162 3}}
Struct {CacheCore::ControlToken#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{CacheCore::LookupCommand command {width 2}} {{MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} req {width 141}} {{CacheCore::CacheAddress#(keyBits, tagBits)} addr} {MemTypesCHERI::BytesPerFlit readWidth {width 3}} {{CacheCore::DataKey#(ways, keyBits)} dataKey} {Bit#(TLog#(ways)) way} {Bool last {width 1}} {Bool fresh {width 1}} {{CacheCore::InvalidateToken#(ways, keyBits, tagBits)} invalidate} {CacheCore::TagLine#(tagBits) writebackTag} {MemTypesCHERI::Error rspError {width 2}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 176 3}}
Struct CacheCore::ResponseToken {members {{{MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64)} resp {width 77}} {{MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} req {width 141}} {MemTypesCHERI::ReqId rspId {width 6}} {Bool reportResponse {width 1}} {MemTypesCHERI::ReqId deqId {width 6}} {Bool deqReqCommits {width 1}} {Bool enqRetryReq {width 1}}}} {width 233} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 186 3}}
Struct {CacheCore::RequestRecord#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bit#(keyBits) key} {MemTypesCHERI::ReqId inId {width 6}} {Bool inDone {width 1}} {MemTypesCHERI::ReqId outId {width 6}} {Bool cached {width 1}} {CacheCore::TagLine#(tagBits) oldTag} {Bit#(TLog#(ways)) oldWay} {Bool oldDirty {width 1}} {Bool write {width 1}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 198 3}}
Struct CacheCore::ReqIdWithSC {members {{MemTypesCHERI::ReqId inId {width 6}} {Bool isSC {width 1}} {Bool scResult {width 1}}}} {width 8} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 204 3}}
Struct {CacheCore::TagUpdate#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bool doWrite {width 1}} {Bit#(keyBits) key} {CacheCore::TagLine#(tagBits) newTag} {Bit#(TLog#(ways)) way}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 211 3}}
Alias CacheCore::ByteEnable {Vector::Vector#(8, Bool)} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 213 48}}
Struct CacheCore::EventsCacheCore {members {{Bool evt_WRITE {width 1}} {Bool evt_WRITE_MISS {width 1}} {Bool evt_READ {width 1}} {Bool evt_READ_MISS {width 1}} {Bool evt_EVICT {width 1}} {Bool evt_SET_TAG_WRITE {width 1}} {Bool evt_SET_TAG_READ {width 1}}}} {width 7} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 226 5}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_PA 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 22 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CWord 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 23 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CWord 16 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 24 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Byte_in_CWord 4 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 25 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_CLine 4 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 29 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CWord_in_CLine 2 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 30 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CLine 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 32 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Byte_in_CLine 6 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 33 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CLine 512 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 35 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Ways_per_CSet 2 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 39 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Way_in_CSet 1 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 40 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CSet 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 42 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::KB_per_Cache 8 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 46 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_Cache 8192 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 47 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_Cache 512 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 48 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CLines_per_Cache 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 49 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSets_per_Cache 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 51 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CSet_in_Cache 6 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 52 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_CWords_per_Cache 256 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 54 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CSet_CWord_in_Cache 8 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 55 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CTag 52 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 56 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWord Bit#(128) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 116 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CLine Bit#(512) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 117 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CTag Bit#(52) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 118 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Byte_in_CLine Bit#(6) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 119 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWord_in_CLine Bit#(2) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 120 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Way_in_CSet Bit#(1) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 121 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_in_Cache Bit#(6) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 122 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_CWord_in_Cache Bit#(8) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 123 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_PA 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 22 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CWord 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 23 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CWord 16 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 24 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Byte_in_CWord 4 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 25 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_CLine 4 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 29 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CWord_in_CLine 2 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 30 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CLine 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 32 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Byte_in_CLine 6 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 33 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CLine 512 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 35 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Ways_per_CSet 2 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 39 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Way_in_CSet 1 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 40 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CSet 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 42 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::KB_per_Cache 8 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 46 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_Cache 8192 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 47 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_Cache 512 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 48 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CLines_per_Cache 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 49 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSets_per_Cache 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 51 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CSet_in_Cache 6 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 52 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_CWords_per_Cache 256 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 54 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CSet_CWord_in_Cache 8 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 55 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CTag 52 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 56 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWord Bit#(128) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 116 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CLine Bit#(512) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 117 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CTag Bit#(52) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 118 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Byte_in_CLine Bit#(6) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 119 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWord_in_CLine Bit#(2) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 120 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Way_in_CSet Bit#(1) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 121 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_in_Cache Bit#(6) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 122 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_CWord_in_Cache Bit#(8) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 123 45}}
Alias CHERICap::SoftPerms Bit#(16) {position {../libs/cheri-cap-lib/CHERICap.bsv 36 18}}
Struct CHERICap::HardPerms {members {{Bool permitSetCID {width 1}} {Bool accessSysRegs {width 1}} {Bool permitUnseal {width 1}} {Bool permitCCall {width 1}} {Bool permitSeal {width 1}} {Bool permitStoreLocalCap {width 1}} {Bool permitStoreCap {width 1}} {Bool permitLoadCap {width 1}} {Bool permitStore {width 1}} {Bool permitLoad {width 1}} {Bool permitExecute {width 1}} {Bool global {width 1}}}} {width 12} {position {../libs/cheri-cap-lib/CHERICap.bsv 50 3}}
Struct {CHERICap::Exact#(type t)} polymorphic {members {{Bool exact {width 1}} {t value}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 71 3}}
TaggedUnion {CHERICap::Kind#(numeric type ot)} polymorphic {members {{void UNSEALED {width 0}} {void SENTRY {width 0}} {void RES0 {width 0}} {void RES1 {width 0}} {Bit#(ot) SEALED_WITH_TYPE}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 79 3}}
Struct {CHERICap::SetBoundsReturn#(type t, numeric type n)} polymorphic {members {{t cap} {Bool exact {width 1}} {Bit#(n) length} {Bit#(n) mask}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 87 3}}
Typeclass {CHERICap::CHERICap#(type t, numeric type ot, numeric type flg, numeric type n, numeric type mem_sz, numeric type maskable_bits)} {dependencies {{t determines (ot, flg, n, mem_sz, maskable_bits)}}} {members {{{function Bool f(t x1)} isValidCap} {{function t f(t x1, Bool x2)} setValidCap} {{function Bit#(flg) f(t x1)} getFlags} {{function t f(t x1, Bit#(flg) x2)} setFlags} {{function CHERICap::HardPerms f(t x1)} getHardPerms} {{function t f(t x1, CHERICap::HardPerms x2)} setHardPerms} {{function Bit#(16) f(t x1)} getSoftPerms} {{function t f(t x1, Bit#(16) x2)} setSoftPerms} {{function Bit#(31) f(t x1)} getPerms} {{function t f(t x1, Bit#(31) x2)} setPerms} {{function CHERICap::Kind#(ot) f(t x1)} getKind} {{function t f(t x1, CHERICap::Kind#(ot) x2)} setKind} {{function Bit#(n) f(t x1)} getAddr} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2)} setAddr} {{function t f(t x1, Bit#(n) x2)} setAddrUnsafe} {{function t f(t x1, Bit#(maskable_bits) x2)} addAddrUnsafe} {{function Bit#(n) f(t x1)} getOffset} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2, Bool x3)} modifyOffset} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2)} setOffset} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2)} incOffset} {{function Bit#(n) f(t x1)} getBase} {{function Bit#(TAdd#(n, 1)) f(t x1)} getTop} {{function Bit#(TAdd#(n, 1)) f(t x1)} getLength} {{function Bool f(t x1, Bool x2)} isInBounds} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2)} setBounds} {{function CHERICap::SetBoundsReturn#(t, n) f(t x1, Bit#(n) x2)} setBoundsCombined} {{function t f(Bit#(n) x1)} nullWithAddr} {{function t f(t x1)} nullCapFromDummy} {t almightyCap} {t nullCap} {{function Bool f(t x1, Bit#(n) x2)} validAsType} {{function t f(Tuple2#(Bool, Bit#(mem_sz)) x1)} fromMem} {{function Tuple2#(Bool, Bit#(mem_sz)) f(t x1)} toMem} {{function t f(t x1, Bit#(maskable_bits) x2)} maskAddr} {{function Bit#(2) f(t x1)} getBaseAlignment} {{function Bit#(n) f(t x1, Bit#(n) x2)} getRepresentableAlignmentMask} {{function Bit#(n) f(t x1, Bit#(n) x2)} getRepresentableLength} {{function Bool f(t x1)} isDerivable}}} {instances {{CHERICap::CHERICap#(CHERICC_Fat::CapMem, CHERICC_Fat::OTypeW, CHERICC_Fat::FlagsW, CHERICC_Fat::CapAddrW, CHERICC_Fat::CapW, TSub#(CHERICC_Fat::MW, 3))} {CHERICap::CHERICap#(CHERICC_Fat::CapPipe, CHERICC_Fat::OTypeW, CHERICC_Fat::FlagsW, CHERICC_Fat::CapAddrW, CHERICC_Fat::CapW, TSub#(CHERICC_Fat::MW, 3))} {CHERICap::CHERICap#(CHERICC_Fat::CapReg, CHERICC_Fat::OTypeW, CHERICC_Fat::FlagsW, CHERICC_Fat::CapAddrW, CHERICC_Fat::CapW, TSub#(CHERICC_Fat::MW, 3))}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 89 11}}
Typeclass {CHERICap::Cast#(type src, type dest)} {members {{{function dest f(src x1)} cast}}} {instances {{CHERICap::Cast#(CHERICC_Fat::CapMem, CHERICC_Fat::CapPipe)} {CHERICap::Cast#(CHERICC_Fat::CapMem, CHERICC_Fat::CapReg)} {CHERICap::Cast#(CHERICC_Fat::CapPipe, CHERICC_Fat::CapMem)} {CHERICap::Cast#(CHERICC_Fat::CapPipe, CHERICC_Fat::CapReg)} {CHERICap::Cast#(CHERICC_Fat::CapReg, CHERICC_Fat::CapMem)} {CHERICap::Cast#(CHERICC_Fat::CapReg, CHERICC_Fat::CapPipe)} {CHERICap::Cast#(CPU_Globals::Pipeline_Val#(a), CPU_Globals::Pipeline_Val#(b))   provisos (CHERICap::Cast#(a, b))} {CHERICap::Cast#(function CHERICC_Fat::CapPipe f(t x1), function Bit#(CHERICC_Fat::CapAddrW) f(t x1))} {CHERICap::Cast#(function CHERICC_Fat::CapReg f(t x1), function CHERICC_Fat::CapPipe f(t x1))} {CHERICap::Cast#(t, t)}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 216 11}}
Struct {VnD::VnD#(type a)} polymorphic {members {{Bool v {width 1}} {a d}}} {position {../libs/TagController/TagController/CacheCore/VnD.bsv 35 3}}
Alias CHERICC_Fat::UPermW 4 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 86 13}}
Alias CHERICC_Fat::MW 14 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 87 13}}
Alias CHERICC_Fat::ExpW 6 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 88 13}}
Alias CHERICC_Fat::OTypeW 18 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 89 13}}
Alias CHERICC_Fat::FlagsW 1 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 90 17}}
Alias CHERICC_Fat::CapAddrW 64 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 91 13}}
Alias CHERICC_Fat::CapW 128 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 92 13}}
Alias CHERICC_Fat::AddressW 64 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 100 18}}
Alias CHERICC_Fat::Address Bit#(64) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 101 28}}
Alias CHERICC_Fat::HalfExpW 3 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 102 28}}
Alias CHERICC_Fat::UpperMW 11 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 103 28}}
Alias CHERICC_Fat::CBoundsW 27 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 106 30}}
Alias CHERICC_Fat::CBounds Bit#(27) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 107 24}}
Alias CHERICC_Fat::CapAddr Bit#(64) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 109 33}}
Alias CHERICC_Fat::CapAddrPlus1 Bit#(65) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 110 33}}
Alias CHERICC_Fat::CapAddrPlus2 Bit#(66) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 111 33}}
Struct CHERICC_Fat::HPerms {members {{Bool permit_set_CID {width 1}} {Bool access_sys_regs {width 1}} {Bool permit_unseal {width 1}} {Bool permit_ccall {width 1}} {Bool permit_seal {width 1}} {Bool permit_store_ephemeral_cap {width 1}} {Bool permit_store_cap {width 1}} {Bool permit_load_cap {width 1}} {Bool permit_store {width 1}} {Bool permit_load {width 1}} {Bool permit_execute {width 1}} {Bool non_ephemeral {width 1}}}} {width 12} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 126 3}}
Struct CHERICC_Fat::Perms {members {{Bit#(4) soft {width 4}} {CHERICC_Fat::HPerms hard {width 12}}}} {width 16} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 131 3}}
Alias CHERICC_Fat::PermsW 16 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 132 24}}
Alias CHERICC_Fat::ResW 2 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 137 68}}
Struct CHERICC_Fat::CapabilityInMemory {members {{Bool isCapability {width 1}} {CHERICC_Fat::Perms perms {width 16}} {Bit#(2) reserved {width 2}} {Bit#(1) flags {width 1}} {Bit#(18) otype {width 18}} {Bit#(27) bounds {width 27}} {Bit#(64) address {width 64}}}} {width 129} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 147 3}}
Alias CHERICC_Fat::Capability Bit#(129) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 149 29}}
Alias CHERICC_Fat::CapBits Bit#(128) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 151 20}}
Alias CHERICC_Fat::DebugCap Bit#(128) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 158 20}}
Enum CHERICC_Fat::Format {members {Exp0 EmbeddedExp}} {width 1} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 160 34}}
Alias CHERICC_Fat::Exp UInt#(6) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 162 21}}
Alias CHERICC_Fat::CType CHERICC_Fat::VnD#(Bit#(18)) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 164 28}}
Struct CHERICC_Fat::CapFat {members {{Bool isCapability {width 1}} {Bit#(64) address {width 64}} {Bit#(14) addrBits {width 14}} {CHERICC_Fat::Perms perms {width 16}} {Bit#(1) flags {width 1}} {Bit#(2) reserved {width 2}} {Bit#(18) otype {width 18}} {CHERICC_Fat::Format format {width 1}} {CHERICC_Fat::Bounds bounds {width 34}}}} {width 151} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 182 3}}
Alias CHERICC_Fat::TempFields CHERICC_Fat::MetaInfo {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 255 18}}
Struct CHERICC_Fat::Bounds {members {{UInt#(6) exp {width 6}} {Bit#(14) topBits {width 14}} {Bit#(14) baseBits {width 14}}}} {width 34} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 695 3}}
Struct CHERICC_Fat::BoundsExp0 {members {{Bool embeddedExp {width 1}} {Bit#(12) top {width 12}} {Bit#(14) base {width 14}}}} {width 27} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 761 3}}
Struct CHERICC_Fat::BoundsEmbeddedExp {members {{Bool embeddedExp {width 1}} {Bit#(9) topUpperBits {width 9}} {Bit#(3) expTopHalf {width 3}} {Bit#(11) baseUpperBits {width 11}} {Bit#(3) expBotHalf {width 3}}}} {width 27} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 769 3}}
Struct CHERICC_Fat::MetaInfo {members {{Bit#(3) repBoundTopBits {width 3}} {Bool topHi {width 1}} {Bool baseHi {width 1}} {Bool addrHi {width 1}} {Int#(2) topCorrection {width 2}} {Int#(2) baseCorrection {width 2}}}} {width 10} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 832 3}}
Alias CHERICC_Fat::CapMem Bit#(129) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 860 30}}
Alias CHERICC_Fat::CapReg CHERICC_Fat::CapFat {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 862 16}}
Struct CHERICC_Fat::CapPipe {members {{CHERICC_Fat::CapFat capFat {width 151}} {CHERICC_Fat::MetaInfo tempFields {width 10}}}} {width 161} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 867 3}}
Struct {CHERICap::SetBoundsReturn#(type t, numeric type n)} polymorphic {members {{t cap} {Bool exact {width 1}} {Bit#(n) length} {Bit#(n) mask}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 87 3}}
Interface ClockHacks::OutputBit {members {{method {Bit#(1) out {} {{(* ports = [] *)}}}}}} {position {src_BSV/ClockHacks.bsv 8 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ClockHacks::UnpackedClock {members {{interface Clock clk {}} {method {Action in Bit#(1) {{(* ports = ["x"] *)}}}}}} {position {src_BSV/ClockHacks.bsv 41 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ClockHacks::UnpackedReset {members {{interface Reset rst {}} {method {Action in Bit#(1) {{(* ports = ["x"] *)}}}}}} {position {src_BSV/ClockHacks.bsv 61 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ClockHacks::BlockIfc {members {{interface Clock clk {}} {interface Reset rst {}}}} {position {src_BSV/ClockHacks.bsv 83 11}}

Interface {Core_IFC::Core_IFC#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 80 11}}
Interface {Core_IFC::Core_IFC_Synth#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master_Sig#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master_Sig#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 190 11}}
Enum CPU::CPU_State {members {CPU_RESET1 CPU_RESET2 CPU_GDB_PAUSING CPU_DEBUG_MODE CPU_RUNNING CPU_TRAP CPU_START_TRAP_HANDLER CPU_CSRRW_2 CPU_CSRR_S_or_C_2 CPU_SCR_W_2 CPU_CSRRX_RESTART CPU_FENCE_I CPU_FENCE CPU_SFENCE_VMA CPU_WFI_PAUSED}} {width 4} {position {../src_Core/CPU/CPU.bsv 147 6}}


Enum CPU_Globals::Stage_OStatus {members {OSTATUS_EMPTY OSTATUS_BUSY OSTATUS_PIPE OSTATUS_NONPIPE}} {width 2} {position {../src_Core/CPU/CPU_Globals.bsv 48 6}}
Alias CPU_Globals::Epoch Bit#(2) {position {../src_Core/CPU/CPU_Globals.bsv 59 19}}
Enum CPU_Globals::CF_Op {members {CF_BR CF_JAL CF_JALR CF_None}} {width 2} {position {../src_Core/CPU/CPU_Globals.bsv 74 6}}
Struct CPU_Globals::CF_Info {members {{CPU_Globals::CF_Op cf_op {width 2}} {Bit#(64) from_PC {width 64}} {Bool taken {width 1}} {Bit#(64) fallthru_PC {width 64}} {Bit#(64) taken_PC {width 64}}}} {width 195} {position {../src_Core/CPU/CPU_Globals.bsv 83 6}}
Enum CPU_Globals::Bypass_State {members {BYPASS_RD_NONE BYPASS_RD BYPASS_RD_RDVAL}} {width 2} {position {../src_Core/CPU/CPU_Globals.bsv 123 61}}
Struct CPU_Globals::Bypass {members {{CPU_Globals::Bypass_State bypass_state {width 2}} {Bit#(5) rd {width 5}} {CHERICC_Fat::CapPipe rd_val {width 161}}}} {width 168} {position {../src_Core/CPU/CPU_Globals.bsv 136 6}}
Struct CPU_Globals::FBypass {members {{CPU_Globals::Bypass_State bypass_state {width 2}} {Bit#(5) rd {width 5}} {Bit#(64) rd_val {width 64}}}} {width 71} {position {../src_Core/CPU/CPU_Globals.bsv 157 6}}
Typeclass {CPU_Globals::PCC#(type t)} {members {{{function CHERICap::Exact#(t) f(t x1, Bit#(64) x2)} setPC} {{function Bit#(64) f(t x1)} getPC} {{function Bit#(64) f(t x1)} getPCCBase} {{function Bool f(t x1)} checkPreValid} {{function Maybe#(Bit#(5)) f(t x1, Bit#(65) x2, Bool x3)} checkValid} {{function t f(CHERICC_Fat::CapPipe x1)} fromCapPipe} {{function CHERICC_Fat::CapPipe f(t x1)} toCapPipe}}} {instances CPU_Globals::PCC#(CPU_Globals::PCC_T)} {position {../src_Core/CPU/CPU_Globals.bsv 219 11}}
Alias CPU_Globals::PCC_T {Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} {position {../src_Core/CPU/CPU_Globals.bsv 229 37}}
Struct CPU_Globals::Trap_Info_Pipe {members {{{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} epcc {width 225}} {Bit#(5) cheri_exc_code {width 5}} {Bit#(6) cheri_exc_reg {width 6}} {Bit#(6) exc_code {width 6}} {Bit#(64) tval {width 64}}}} {width 306} {position {../src_Core/CPU/CPU_Globals.bsv 287 6}}
Struct CPU_Globals::Output_StageF {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Data_StageF_to_StageD data_to_stageD {width 239}}}} {width 241} {position {../src_Core/CPU/CPU_Globals.bsv 298 6}}
Struct CPU_Globals::Data_StageF_to_StageD {members {{Bit#(64) fetch_addr {width 64}} {Bool is_cap_mode {width 1}} {Bool refresh_pcc {width 1}} {Bit#(2) epoch {width 2}} {Bit#(2) priv {width 2}} {Bool is_i32_not_i16 {width 1}} {Bool exc {width 1}} {Bit#(6) exc_code {width 6}} {Bit#(64) tval {width 64}} {Bit#(32) instr {width 32}} {Bit#(64) pred_fetch_addr {width 64}} {Bool pred_is_cap_mode {width 1}}}} {width 239} {position {../src_Core/CPU/CPU_Globals.bsv 336 6}}
Struct CPU_Globals::Output_StageD {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Data_StageD_to_Stage1 data_to_stage1 {width 433}}}} {width 435} {position {../src_Core/CPU/CPU_Globals.bsv 360 6}}
Struct CPU_Globals::Data_StageD_to_Stage1 {members {{Bit#(64) fetch_addr {width 64}} {Bool is_cap_mode {width 1}} {Bool refresh_pcc {width 1}} {Bit#(2) priv {width 2}} {Bit#(2) epoch {width 2}} {Bool is_i32_not_i16 {width 1}} {Bool exc {width 1}} {Bit#(6) exc_code {width 6}} {Bit#(64) tval {width 64}} {Bit#(32) instr {width 32}} {Bit#(32) instr_or_instr_C {width 32}} {Bit#(64) pred_fetch_addr {width 64}} {Bool pred_is_cap_mode {width 1}} {ISA_Decls::Decoded_Instr decoded_instr {width 162}}}} {width 433} {position {../src_Core/CPU/CPU_Globals.bsv 404 6}}
Enum CPU_Globals::Control {members {CONTROL_DISCARD CONTROL_STRAIGHT CONTROL_BRANCH CONTROL_CSRR_W CONTROL_CAPBRANCH CONTROL_SCR_W CONTROL_CSRR_S_or_C CONTROL_FENCE CONTROL_FENCE_I CONTROL_SFENCE_VMA CONTROL_MRET CONTROL_SRET CONTROL_URET CONTROL_WFI CONTROL_TRAP}} {width 4} {position {../src_Core/CPU/CPU_Globals.bsv 443 6}}
Struct CPU_Globals::Output_Stage1 {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Control control {width 4}} {CPU_Globals::Trap_Info_Pipe trap_info {width 306}} {Bool redirect {width 1}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} next_pcc {width 225}} {CPU_Globals::CF_Info cf_info {width 195}} {CPU_Globals::Data_Stage1_to_Stage2 data_to_stage2 {width 1285}}}} {width 2018} {position {../src_Core/CPU/CPU_Globals.bsv 464 6}}
Enum CPU_Globals::Op_Stage2 {members {OP_Stage2_ALU OP_Stage2_LD OP_Stage2_ST OP_Stage2_M OP_Stage2_AMO OP_Stage2_FD OP_Stage2_TestSubset}} {width 3} {position {../src_Core/CPU/CPU_Globals.bsv 528 6}}
Struct {CPU_Globals::Pipeline_Val#(type capType)} polymorphic {members {{capType val}}} {position {../src_Core/CPU/CPU_Globals.bsv 537 6}}
Struct CPU_Globals::Data_Stage1_to_Stage2 {members {{Bit#(2) priv {width 2}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {Bit#(32) instr {width 32}} {CPU_Globals::Op_Stage2 op_stage2 {width 3}} {Bit#(5) rd {width 5}} {Bit#(64) addr {width 64}} {CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapPipe) val1 {width 161}} {CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapPipe) val2 {width 161}} {Bit#(64) val1_fast {width 64}} {Bit#(64) val2_fast {width 64}} {CHERICC_Fat::CapPipe check_authority {width 161}} {Bit#(6) check_authority_idx {width 6}} {Bit#(64) check_address_low {width 64}} {Bit#(65) check_address_high {width 65}} {Bool check_enable {width 1}} {Bool check_inclusive {width 1}} {Bool check_exact_enable {width 1}} {Bool check_exact_success {width 1}} {Bool set_offset_in_bounds {width 1}} {Bool mem_allow_cap {width 1}} {Bit#(3) mem_width_code {width 3}} {Bool mem_unsigned {width 1}} {Bit#(64) fval1 {width 64}} {Bit#(64) fval2 {width 64}} {Bit#(64) fval3 {width 64}} {Bool rd_in_fpr {width 1}} {Bool rs_frm_fpr {width 1}} {Bool val1_frm_gpr {width 1}} {Bit#(3) rounding_mode {width 3}}}} {width 1285} {position {../src_Core/CPU/CPU_Globals.bsv 633 6}}
Struct CPU_Globals::Output_Stage2 {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Trap_Info_Pipe trap_info {width 306}} {CPU_Globals::Output_Stage2_Perf perf {width 5}} {Bool check_success {width 1}} {CPU_Globals::Bypass bypass {width 168}} {CPU_Globals::FBypass fbypass {width 71}} {CPU_Globals::Data_Stage2_to_Stage3 data_to_stage3 {width 487}}}} {width 1040} {position {../src_Core/CPU/CPU_Globals.bsv 717 6}}
Struct CPU_Globals::Output_Stage2_Perf {members {{Bool sc_success {width 1}} {Bool ld_cap {width 1}} {Bool ld_cap_tag_set {width 1}} {Bool ld_wait {width 1}} {Bool st_wait {width 1}}}} {width 5} {position {../src_Core/CPU/CPU_Globals.bsv 727 3}}
Struct CPU_Globals::Data_Stage2_to_Stage3 {members {{{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {Bit#(32) instr {width 32}} {Bit#(2) priv {width 2}} {Bool rd_valid {width 1}} {Bit#(5) rd {width 5}} {CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapFat) rd_val {width 151}} {Bool upd_flags {width 1}} {Bool rd_in_fpr {width 1}} {Bit#(5) fpr_flags {width 5}} {Bit#(64) frd_val {width 64}}}} {width 487} {position {../src_Core/CPU/CPU_Globals.bsv 776 6}}
Struct CPU_Globals::Output_Stage3 {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Bypass bypass {width 168}} {CPU_Globals::FBypass fbypass {width 71}}}} {width 241} {position {../src_Core/CPU/CPU_Globals.bsv 824 6}}
Interface CPU_IFC::CPU_IFC {members {{interface {ClientServer::Server#(Bool, Bool)} hart0_server_reset {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 1, 0, 0, 1)} imem_master {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {Action m_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface {ClientServer::Server#(Bool, Bool)} hart0_server_run_halt {}} {interface GetPut::Put#(Bit#(4)) hart0_put_other_req {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_gpr_mem_server {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_fpr_mem_server {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_csr_mem_server {}} {method {Action relay_external_events {StatCounters::AXI4_Slave_Events StatCounters::AXI4_Master_Events StatCounters::EventsTGC} {{(* ports = ["slave_evts", "master_evts", "tag_cache_evts"] *)}}}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_IFC.bsv 64 11}}
Interface CPU_Stage1::CPU_Stage1_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_Stage1 out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq CPU_Globals::Data_StageD_to_Stage1 {{(* ports = ["data"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_Stage1.bsv 56 11}}
Interface CPU_Stage2::CPU_Stage2_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_Stage2 out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq {CPU_Globals::Data_Stage1_to_Stage2 Bool} {{(* ports = ["x", "valid"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_Stage2.bsv 92 11}}
Interface CPU_Stage3::CPU_Stage3_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_Stage3 out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq CPU_Globals::Data_Stage2_to_Stage3 {{(* ports = ["x"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}} {method {Action show_state {} {{(* ports = [] *)}}}}}} {position {../src_Core/CPU/CPU_Stage3.bsv 58 11}}
Interface CPU_StageD::CPU_StageD_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_StageD out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq CPU_Globals::Data_StageF_to_StageD {{(* ports = ["data_stageF_to_stageD"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_StageD.bsv 43 11}}
Interface CPU_StageF::CPU_StageF_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_StageF out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq {Bit#(2) Bit#(64) Bool Bool Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["epoch", "fetch_addr", "is_cap_mode", "refresh_pcc", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action bp_train {Bit#(64) Bool Bit#(32) CPU_Globals::CF_Info} {{(* ports = ["pc", "is_i32_not_i16", "instr", "cf_info"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_StageF.bsv 47 11}}
Interface {CreditCounter::CreditCounter_IFC#(numeric type w)} polymorphic {members {{method {UInt#(w) value {} {{(* ports = [] *)}}}} {method {Action incr {} {{(* ports = [] *)}}}} {method {Action decr {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/CreditCounter.bsv 16 11}}
Interface CSR_MIE::CSR_MIE_IFC {members {{method {Action reset {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(Bit#(64)) mav_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_sie_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(Bit#(64)) mav_sie_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/RegFiles/CSR_MIE.bsv 26 11}}
Interface CSR_MIP::CSR_MIP_IFC {members {{method {Action reset {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(Bit#(64)) mav_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_sip_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(Bit#(64)) mav_sip_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)} {(* always_ready  *)}}}} {method {Action m_external_interrupt_req Bool {{(* ports = ["req"] *)} {(* always_ready  *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["req"] *)} {(* always_ready  *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["req"] *)} {(* always_ready  *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["req"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/RegFiles/CSR_MIP.bsv 27 11}}
Interface CSR_MSTATUS::CSR_MSTATUS_IFC {members {{method {Action reset ISA_Decls::MISA {{(* ports = ["misa_reset_value"] *)}}}} {method {Bit#(64) mv_read {} {{(* ports = [] *)}}}} {method {Bit#(64) mv_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {Action ma_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {ActionValue#(Bit#(64)) mav_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {Bit#(64) mv_ustatus_read {} {{(* ports = [] *)}}}} {method {Action ma_ustatus_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {ActionValue#(Bit#(64)) mav_ustatus_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {Bit#(64) mv_sstatus_read {} {{(* ports = [] *)}}}} {method {Action ma_sstatus_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {ActionValue#(Bit#(64)) mav_sstatus_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}}}} {position {../src_Core/RegFiles/CSR_MSTATUS.bsv 26 11}}
Struct CSR_RegFile_MSU::CSR_Write_Result {members {{Bit#(64) new_csr_value {width 64}} {Maybe#(Bit#(64)) m_new_csr_value2 {width 65}}}} {width 129} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 75 1}}
Struct CSR_RegFile_MSU::AccessPerms {members {{Bool exists {width 1}} {Bool requires_asr {width 1}}}} {width 2} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 84 4}}
Interface CSR_RegFile_MSU::CSR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Maybe#(Bit#(64)) read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(64)) read_csr_port2 Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(CHERICC_Fat::CapFat) read_scr Bit#(5) {{(* ports = ["scr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(Maybe#(Bit#(64))) mav_read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CSR_RegFile_MSU::CSR_Write_Result) mav_csr_write {Bit#(12) Bit#(64)} {{(* ports = ["csr_addr", "word"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CHERICC_Fat::CapFat) mav_scr_write {Bit#(5) CHERICC_Fat::CapFat} {{(* ports = ["scr_addr", "cap"] *)} {(* always_ready  *)}}}} {method {Bit#(3) read_frm {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) read_fflags {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) mv_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Action ma_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {Action ma_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {ISA_Decls::MISA read_misa {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_mstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_sstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_ustatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_satp {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(ISA_Decls::Trap_Info_CSR) csr_trap_actions {Bit#(2) CHERICC_Fat::CapPipe Bool Bool Bit#(5) Bit#(6) Bit#(6) Bit#(64)} {{(* ports = ["from_priv", "pcc", "nmi", "interrupt", "cheri_exc_code", "cheri_exc_reg", "exc_code", "xtval"] *)}}}} {method {{ActionValue#(Tuple3#(CHERICC_Fat::CapPipe, Bit#(2), Bit#(64)))} csr_ret_actions Bit#(2) {{(* ports = ["from_priv"] *)}}}} {method {Bit#(64) read_csr_minstret {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action csr_minstret_incr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mcycle {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mtime {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action send_performance_events {{Vector::Vector#(115, Bit#(64))}} {{(* ports = ["evts"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_1 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_2 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_scr {Bit#(2) Bit#(5) Bool} {{(* ports = ["priv", "scr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {Bool csr_counter_read_fault {Bit#(2) Bit#(12)} {{(* ports = ["priv", "csr_addr"] *)} {(* always_ready  *)}}}} {method {Bit#(64) csr_mip_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action m_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(6)) interrupt_pending Bit#(2) {{(* ports = ["cur_priv"] *)} {(* always_ready  *)}}}} {method {Bool wfi_resume {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Bool nmi_pending {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_dpcc {} {{(* ports = [] *)}}}} {method {Action write_dpcc CHERICC_Fat::CapPipe {{(* ports = ["pcc"] *)}}}} {method {Bool dcsr_break_enters_debug Bit#(2) {{(* ports = ["cur_priv"] *)}}}} {method {Bool read_dcsr_step {} {{(* ports = [] *)}}}} {method {Action write_dcsr_cause_priv {DM_Common::DCSR_Cause Bit#(2)} {{(* ports = ["cause", "priv"] *)} {(* always_ready  *)}}}} {method {Action debug {} {{(* ports = [] *)}}}}}} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 86 11}}
Struct CSR_RegFile_MSU::CSR_Write_Result {members {{Bit#(64) new_csr_value {width 64}} {Maybe#(Bit#(64)) m_new_csr_value2 {width 65}}}} {width 129} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 75 1}}
Struct CSR_RegFile_MSU::AccessPerms {members {{Bool exists {width 1}} {Bool requires_asr {width 1}}}} {width 2} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 84 4}}
Interface CSR_RegFile_MSU::CSR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Maybe#(Bit#(64)) read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(64)) read_csr_port2 Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(CHERICC_Fat::CapFat) read_scr Bit#(5) {{(* ports = ["scr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(Maybe#(Bit#(64))) mav_read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CSR_RegFile_MSU::CSR_Write_Result) mav_csr_write {Bit#(12) Bit#(64)} {{(* ports = ["csr_addr", "word"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CHERICC_Fat::CapFat) mav_scr_write {Bit#(5) CHERICC_Fat::CapFat} {{(* ports = ["scr_addr", "cap"] *)} {(* always_ready  *)}}}} {method {Bit#(3) read_frm {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) read_fflags {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) mv_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Action ma_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {Action ma_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {ISA_Decls::MISA read_misa {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_mstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_sstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_ustatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_satp {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(ISA_Decls::Trap_Info_CSR) csr_trap_actions {Bit#(2) CHERICC_Fat::CapPipe Bool Bool Bit#(5) Bit#(6) Bit#(6) Bit#(64)} {{(* ports = ["from_priv", "pcc", "nmi", "interrupt", "cheri_exc_code", "cheri_exc_reg", "exc_code", "xtval"] *)}}}} {method {{ActionValue#(Tuple3#(CHERICC_Fat::CapPipe, Bit#(2), Bit#(64)))} csr_ret_actions Bit#(2) {{(* ports = ["from_priv"] *)}}}} {method {Bit#(64) read_csr_minstret {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action csr_minstret_incr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mcycle {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mtime {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action send_performance_events {{Vector::Vector#(115, Bit#(64))}} {{(* ports = ["evts"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_1 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_2 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_scr {Bit#(2) Bit#(5) Bool} {{(* ports = ["priv", "scr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {Bool csr_counter_read_fault {Bit#(2) Bit#(12)} {{(* ports = ["priv", "csr_addr"] *)} {(* always_ready  *)}}}} {method {Bit#(64) csr_mip_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action m_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(6)) interrupt_pending Bit#(2) {{(* ports = ["cur_priv"] *)} {(* always_ready  *)}}}} {method {Bool wfi_resume {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Bool nmi_pending {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_dpcc {} {{(* ports = [] *)}}}} {method {Action write_dpcc CHERICC_Fat::CapPipe {{(* ports = ["pcc"] *)}}}} {method {Bool dcsr_break_enters_debug Bit#(2) {{(* ports = ["cur_priv"] *)}}}} {method {Bool read_dcsr_step {} {{(* ports = [] *)}}}} {method {Action write_dcsr_cause_priv {DM_Common::DCSR_Cause Bit#(2)} {{(* ports = ["cause", "priv"] *)} {(* always_ready  *)}}}} {method {Action debug {} {{(* ports = [] *)}}}}}} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 86 11}}
Enum CSR_RegFile_MSU::RF_State {members {RF_RESET_START RF_RUNNING}} {width 1} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 347 45}}

Interface {Debug::Debug#(type a, type b)} polymorphic {members {{method {a inf {} {}}} {method {b debugging {} {}}}}} {position {../libs/TagController/TagController/Debug.bsv 181 11}}
Interface {Debug::Display#(type a)} polymorphic {members {{method {Action debug_display a {{(* ports = ["v"] *)}}}}}} {position {../libs/TagController/TagController/Debug.bsv 190 11}}
Interface Debug_Module::Debug_Module_IFC {members {{interface DM_Common::DMI dmi {}} {interface {ClientServer::Client#(Bool, Bool)} hart0_reset_client {}} {interface {ClientServer::Client#(Bool, Bool)} hart0_client_run_halt {}} {interface GetPut::Get#(Bit#(4)) hart0_get_other_req {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_gpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_fpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_csr_mem_client {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} master {}}}} {position {../src_Core/Debug_Module/Debug_Module.bsv 101 11}}
Alias DM_Common::DM_Addr Bit#(7) {position {../src_Core/Debug_Module/DM_Common.bsv 23 19}}
Alias DM_Common::DM_Word Bit#(32) {position {../src_Core/Debug_Module/DM_Common.bsv 27 19}}
Enum DM_Common::DM_abstractcs_cmderr {members {DM_ABSTRACTCS_CMDERR_NONE DM_ABSTRACTCS_CMDERR_BUSY DM_ABSTRACTCS_CMDERR_NOT_SUPPORTED DM_ABSTRACTCS_CMDERR_EXCEPTION DM_ABSTRACTCS_CMDERR_HALT_RESUME DM_ABSTRACTCS_CMDERR_UNDEF5 DM_ABSTRACTCS_CMDERR_UNDEF6 DM_ABSTRACTCS_CMDERR_OTHER}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 277 6}}
Enum DM_Common::DM_command_cmdtype {members {DM_COMMAND_CMDTYPE_ACCESS_REG DM_COMMAND_CMDTYPE_QUICK_ACCESS}} {width 1} {position {../src_Core/Debug_Module/DM_Common.bsv 308 6}}
Enum DM_Common::DM_command_access_reg_size {members {DM_COMMAND_ACCESS_REG_SIZE_UNDEF0 DM_COMMAND_ACCESS_REG_SIZE_UNDEF1 DM_COMMAND_ACCESS_REG_SIZE_LOWER32 DM_COMMAND_ACCESS_REG_SIZE_LOWER64 DM_COMMAND_ACCESS_REG_SIZE_LOWER128 DM_COMMAND_ACCESS_REG_SIZE_UNDEF5 DM_COMMAND_ACCESS_REG_SIZE_UNDEF6 DM_COMMAND_ACCESS_REG_SIZE_UNDEF7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 319 6}}
Enum DM_Common::DM_sbaccess {members {DM_SBACCESS_8_BIT DM_SBACCESS_16_BIT DM_SBACCESS_32_BIT DM_SBACCESS_64_BIT DM_SBACCESS_128_BIT}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 381 6}}
Enum DM_Common::DM_sberror {members {DM_SBERROR_NONE DM_SBERROR_TIMEOUT DM_SBERROR_BADADDR DM_SBERROR_OTHER DM_SBERROR_BUSY_STALE DM_SBERROR_UNDEF5 DM_SBERROR_UNDEF6 DM_SBERROR_UNDEF7_W1C}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 402 6}}
Enum DM_Common::DCSR_Cause {members {DCSR_CAUSE_RESERVED0 DCSR_CAUSE_EBREAK DCSR_CAUSE_TRIGGER DCSR_CAUSE_HALTREQ DCSR_CAUSE_STEP DCSR_CAUSE_RESERVED5 DCSR_CAUSE_RESERVED6 DCSR_CAUSE_RESERVED7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 488 6}}
Struct JtagTap::DMI {members {{Bit#(6) address {width 6}} {Bit#(32) data {width 32}} {Bit#(2) op {width 2}}}} {width 40} {position {src_BSV/JtagTap.bsv 120 6}}
Interface DM_Abstract_Commands::DM_Abstract_Commands_IFC {members {{method {Action reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(32)) av_read Bit#(7) {{(* ports = ["dm_addr"] *)}}}} {method {Action write {Bit#(7) Bit#(32)} {{(* ports = ["dm_addr", "dm_word"] *)}}}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_gpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_fpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_csr_mem_client {}}}} {position {../src_Core/Debug_Module/DM_Abstract_Commands.bsv 33 11}}
Alias DM_Common::DM_Addr Bit#(7) {position {../src_Core/Debug_Module/DM_Common.bsv 23 19}}
Alias DM_Common::DM_Word Bit#(32) {position {../src_Core/Debug_Module/DM_Common.bsv 27 19}}
Enum DM_Common::DM_abstractcs_cmderr {members {DM_ABSTRACTCS_CMDERR_NONE DM_ABSTRACTCS_CMDERR_BUSY DM_ABSTRACTCS_CMDERR_NOT_SUPPORTED DM_ABSTRACTCS_CMDERR_EXCEPTION DM_ABSTRACTCS_CMDERR_HALT_RESUME DM_ABSTRACTCS_CMDERR_UNDEF5 DM_ABSTRACTCS_CMDERR_UNDEF6 DM_ABSTRACTCS_CMDERR_OTHER}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 277 6}}
Enum DM_Common::DM_command_cmdtype {members {DM_COMMAND_CMDTYPE_ACCESS_REG DM_COMMAND_CMDTYPE_QUICK_ACCESS}} {width 1} {position {../src_Core/Debug_Module/DM_Common.bsv 308 6}}
Enum DM_Common::DM_command_access_reg_size {members {DM_COMMAND_ACCESS_REG_SIZE_UNDEF0 DM_COMMAND_ACCESS_REG_SIZE_UNDEF1 DM_COMMAND_ACCESS_REG_SIZE_LOWER32 DM_COMMAND_ACCESS_REG_SIZE_LOWER64 DM_COMMAND_ACCESS_REG_SIZE_LOWER128 DM_COMMAND_ACCESS_REG_SIZE_UNDEF5 DM_COMMAND_ACCESS_REG_SIZE_UNDEF6 DM_COMMAND_ACCESS_REG_SIZE_UNDEF7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 319 6}}
Enum DM_Common::DM_sbaccess {members {DM_SBACCESS_8_BIT DM_SBACCESS_16_BIT DM_SBACCESS_32_BIT DM_SBACCESS_64_BIT DM_SBACCESS_128_BIT}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 381 6}}
Enum DM_Common::DM_sberror {members {DM_SBERROR_NONE DM_SBERROR_TIMEOUT DM_SBERROR_BADADDR DM_SBERROR_OTHER DM_SBERROR_BUSY_STALE DM_SBERROR_UNDEF5 DM_SBERROR_UNDEF6 DM_SBERROR_UNDEF7_W1C}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 402 6}}
Enum DM_Common::DCSR_Cause {members {DCSR_CAUSE_RESERVED0 DCSR_CAUSE_EBREAK DCSR_CAUSE_TRIGGER DCSR_CAUSE_HALTREQ DCSR_CAUSE_STEP DCSR_CAUSE_RESERVED5 DCSR_CAUSE_RESERVED6 DCSR_CAUSE_RESERVED7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 488 6}}
Struct JtagTap::DMI {members {{Bit#(6) address {width 6}} {Bit#(32) data {width 32}} {Bit#(2) op {width 2}}}} {width 40} {position {src_BSV/JtagTap.bsv 120 6}}
Struct {DM_CPU_Req_Rsp::DM_CPU_Req#(numeric type a, numeric type d)} polymorphic {members {{Bool write {width 1}} {Bit#(a) address} {Bit#(d) data}}} {position {../src_Core/Debug_Module/DM_CPU_Req_Rsp.bsv 25 3}}
Struct {DM_CPU_Req_Rsp::DM_CPU_Rsp#(numeric type d)} polymorphic {members {{Bool ok {width 1}} {Bit#(d) data}}} {position {../src_Core/Debug_Module/DM_CPU_Req_Rsp.bsv 31 3}}
Interface DM_Run_Control::DM_Run_Control_IFC {members {{method {Bool dmactive {} {{(* ports = [] *)}}}} {method {Action reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(32)) av_read Bit#(7) {{(* ports = ["dm_addr"] *)}}}} {method {Action write {Bit#(7) Bit#(32)} {{(* ports = ["dm_addr", "dm_word"] *)}}}} {interface {ClientServer::Client#(Bool, Bool)} hart0_reset_client {}} {interface {ClientServer::Client#(Bool, Bool)} hart0_client_run_halt {}} {interface GetPut::Get#(Bit#(4)) hart0_get_other_req {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}}}} {position {../src_Core/Debug_Module/DM_Run_Control.bsv 32 11}}
Interface DM_System_Bus::DM_System_Bus_IFC {members {{method {Action reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(32)) av_read Bit#(7) {{(* ports = ["dm_addr"] *)}}}} {method {Action write {Bit#(7) Bit#(32)} {{(* ports = ["dm_addr", "dm_word"] *)}}}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} master {}}}} {position {../src_Core/Debug_Module/DM_System_Bus.bsv 45 11}}
Enum DM_System_Bus::SB_State {members {SB_NOTBUSY SB_READ_FINISH SB_WRITE_FINISH}} {width 2} {position {../src_Core/Debug_Module/DM_System_Bus.bsv 184 6}}
Struct EX_ALU_functions::ALU_Inputs {members {{Bit#(2) cur_priv {width 2}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {CHERICC_Fat::CapPipe ddc {width 161}} {Bit#(5) rs1_idx {width 5}} {Bit#(5) rs2_idx {width 5}} {Bit#(64) pc {width 64}} {Bool is_i32_not_i16 {width 1}} {Bit#(32) instr {width 32}} {Bit#(32) instr_or_instr_C {width 32}} {ISA_Decls::Decoded_Instr decoded_instr {width 162}} {Bit#(64) rs1_val {width 64}} {Bit#(64) rs2_val {width 64}} {Bit#(64) mstatus {width 64}} {Bit#(3) frm {width 3}} {Bit#(64) frs1_val {width 64}} {Bit#(64) frs2_val {width 64}} {Bit#(64) frs3_val {width 64}} {CHERICC_Fat::CapPipe cap_rs1_val {width 161}} {CHERICC_Fat::CapPipe cap_rs2_val {width 161}} {ISA_Decls::MISA misa {width 28}}}} {width 1426} {position {../src_Core/CPU/EX_ALU_functions.bsv 86 6}}
Struct EX_ALU_functions::ALU_Outputs {members {{CPU_Globals::Control control {width 4}} {Bit#(6) exc_code {width 6}} {Bit#(5) cheri_exc_code {width 5}} {Bit#(6) cheri_exc_reg {width 6}} {CPU_Globals::Op_Stage2 op_stage2 {width 3}} {Bit#(5) rd {width 5}} {Bit#(64) addr {width 64}} {Bit#(64) val1 {width 64}} {Bit#(64) val2 {width 64}} {Bit#(64) val1_fast {width 64}} {Bit#(64) val2_fast {width 64}} {Bit#(64) fval1 {width 64}} {Bit#(64) fval2 {width 64}} {Bit#(64) fval3 {width 64}} {Bool rd_in_fpr {width 1}} {Bool rs_frm_fpr {width 1}} {Bool val1_frm_gpr {width 1}} {Bit#(3) rm {width 3}} {Bit#(3) mem_width_code {width 3}} {Bool mem_unsigned {width 1}} {Bool mem_allow_cap {width 1}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {CHERICC_Fat::CapPipe cap_val1 {width 161}} {CHERICC_Fat::CapPipe cap_val2 {width 161}} {Bool val1_cap_not_int {width 1}} {Bool val2_cap_not_int {width 1}} {Bool check_enable {width 1}} {CHERICC_Fat::CapPipe check_authority {width 161}} {Bit#(6) check_authority_idx {width 6}} {Bit#(64) check_address_low {width 64}} {Bit#(65) check_address_high {width 65}} {Bool check_inclusive {width 1}} {Bool check_exact_enable {width 1}} {Bool check_exact_success {width 1}} {Bool set_offset_in_bounds {width 1}} {CPU_Globals::CF_Info cf_info {width 195}}}} {width 1597} {position {../src_Core/CPU/EX_ALU_functions.bsv 178 6}}
Enum EX_ALU_functions::Output_Select {members {LITERAL MODIFY_OFFSET SET_BOUNDS SET_ADDR GET_PRECISION}} {width 3} {position {../src_Core/CPU/EX_ALU_functions.bsv 1403 5}}
Alias Fabric_Defs::Num_Masters_2x3 2 {position {../src_Core/Core/Fabric_Defs.bsv 38 12}}
Alias Fabric_Defs::Num_Slaves_2x3 3 {position {../src_Core/Core/Fabric_Defs.bsv 39 12}}
Alias Fabric_Defs::Master_Num_2x3 Bit#(1) {position {../src_Core/Core/Fabric_Defs.bsv 41 40}}
Alias Fabric_Defs::Slave_Num_2x3 Bit#(2) {position {../src_Core/Core/Fabric_Defs.bsv 42 39}}
Alias Fabric_Defs::Wd_MId_2x3 4 {position {../src_Core/Core/Fabric_Defs.bsv 46 11}}
Alias Fabric_Defs::Wd_SId_2x3 5 {position {../src_Core/Core/Fabric_Defs.bsv 47 51}}
Alias Fabric_Defs::Wd_MId 5 {position {../src_Core/Core/Fabric_Defs.bsv 48 20}}
Alias Fabric_Defs::Wd_MId_ext 6 {position {../src_Core/Core/Fabric_Defs.bsv 53 26}}
Alias Fabric_Defs::Wd_Addr 64 {position {../src_Core/Core/Fabric_Defs.bsv 62 14}}
Alias Fabric_Defs::Fabric_Addr Bit#(64) {position {../src_Core/Core/Fabric_Defs.bsv 69 30}}
Alias Fabric_Defs::Bytes_per_Fabric_Addr 8 {position {../src_Core/Core/Fabric_Defs.bsv 70 30}}
Alias Fabric_Defs::Wd_Data 64 {position {../src_Core/Core/Fabric_Defs.bsv 81 13}}
Alias Fabric_Defs::Wd_AW_User 0 {position {../src_Core/Core/Fabric_Defs.bsv 85 11}}
Alias Fabric_Defs::Wd_AW_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 86 20}}
Alias Fabric_Defs::Wd_B_User 0 {position {../src_Core/Core/Fabric_Defs.bsv 87 11}}
Alias Fabric_Defs::Wd_B_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 88 19}}
Alias Fabric_Defs::Wd_AR_User 0 {position {../src_Core/Core/Fabric_Defs.bsv 89 11}}
Alias Fabric_Defs::Wd_AR_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 90 20}}
Alias Fabric_Defs::Wd_W_User 1 {position {../src_Core/Core/Fabric_Defs.bsv 92 39}}
Alias Fabric_Defs::Wd_R_User 1 {position {../src_Core/Core/Fabric_Defs.bsv 93 39}}
Alias Fabric_Defs::Wd_W_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 98 11}}
Alias Fabric_Defs::Wd_R_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 99 11}}
Alias Fabric_Defs::Bytes_per_Fabric_Data 8 {position {../src_Core/Core/Fabric_Defs.bsv 108 37}}
Alias Fabric_Defs::Fabric_Data Bit#(64) {position {../src_Core/Core/Fabric_Defs.bsv 111 37}}
Alias Fabric_Defs::Fabric_Strb Bit#(8) {position {../src_Core/Core/Fabric_Defs.bsv 112 37}}
Alias Fabric_Defs::Wd_Data_Periph 64 {position {../src_Core/Core/Fabric_Defs.bsv 115 14}}
Alias Fabric_Defs::Wd_AW_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 117 14}}
Alias Fabric_Defs::Wd_W_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 118 14}}
Alias Fabric_Defs::Wd_B_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 119 14}}
Alias Fabric_Defs::Wd_AR_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 120 14}}
Alias Fabric_Defs::Wd_R_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 121 14}}
Alias Fabric_Defs::Fabric_Data_Periph Bit#(64) {position {../src_Core/Core/Fabric_Defs.bsv 123 44}}
Alias Fabric_Defs::Fabric_Strb_Periph Bit#(8) {position {../src_Core/Core/Fabric_Defs.bsv 124 44}}
Alias Fabric_Defs::Bytes_per_Fabric_Data_Periph 8 {position {../src_Core/Core/Fabric_Defs.bsv 125 44}}
Alias Fabric_Defs::ZLSBs_Aligned_Fabric_Addr 3 {position {../src_Core/Core/Fabric_Defs.bsv 130 41}}
Alias Fabric_Defs::Wd_Id_Mem 4 {position {../src_Core/Core/Fabric_Defs.bsv 157 20}}
Alias Fabric_Defs::Wd_Addr_Mem 64 {position {../src_Core/Core/Fabric_Defs.bsv 158 20}}
Alias Fabric_Defs::Wd_Data_Mem 64 {position {../src_Core/Core/Fabric_Defs.bsv 159 20}}
Alias Fabric_Defs::Wd_AW_User_Mem 0 {position {../src_Core/Core/Fabric_Defs.bsv 160 20}}
Alias Fabric_Defs::Wd_W_User_Mem 1 {position {../src_Core/Core/Fabric_Defs.bsv 161 20}}
Alias Fabric_Defs::Wd_B_User_Mem 0 {position {../src_Core/Core/Fabric_Defs.bsv 162 20}}
Alias Fabric_Defs::Wd_AR_User_Mem 0 {position {../src_Core/Core/Fabric_Defs.bsv 163 20}}
Alias Fabric_Defs::Wd_R_User_Mem 1 {position {../src_Core/Core/Fabric_Defs.bsv 164 20}}
Alias Fabric_Defs::Near_Mem_Fabric_IFC {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} {position {../src_Core/Core/Fabric_Defs.bsv 175 43}}
Struct FBox_Core::FBoxResult {members {{Bit#(64) value {width 64}} {Bit#(5) flags {width 5}}}} {width 69} {position {../src_Core/CPU/FBox_Core.bsv 39 3}}
Enum FBox_Core::FBoxState {members {FBOX_RST FBOX_REQ FBOX_BUSY FBOX_RSP}} {width 2} {position {../src_Core/CPU/FBox_Core.bsv 46 3}}
Interface FBox_Core::FBox_Core_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action req {Bit#(7) Bit#(7) Bit#(3) Bit#(5) Bit#(64) Bit#(64) Bit#(64) Bool} {{(* ports = ["opcode", "f7", "rm", "rs2", "v1", "v2", "v3", "valid"] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bit#(64), Bit#(5))} word {{(* ports = [] *)} {(* always_ready  *)}}}}} {position {../src_Core/CPU/FBox_Core.bsv 48 11}}
Interface FBox_Top::FBox_Top_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action req {Bit#(7) Bit#(7) Bit#(3) Bit#(5) Bit#(64) Bit#(64) Bit#(64) Bool} {{(* ports = ["opcode", "f7", "rm", "rs2", "v1", "v2", "v3", "valid"] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bit#(64), Bit#(5))} word {{(* ports = [] *)} {(* always_ready  *)}}}}} {position {../src_Core/CPU/FBox_Top.bsv 35 11}}
Interface {FF::FF#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 64 11}}
Interface {FF::FFNext#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {data next {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool nextNotEmpty {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 74 11}}
Interface FPR_RegFile::FPR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Bit#(64) read_rs1 Bit#(5) {{(* ports = ["rs1"] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_rs1_port2 Bit#(5) {{(* ports = ["rs1"] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_rs2 Bit#(5) {{(* ports = ["rs2"] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_rs3 Bit#(5) {{(* ports = ["rs3"] *)} {(* always_ready  *)}}}} {method {Action write_rd {Bit#(5) Bit#(64)} {{(* ports = ["rd", "rd_val"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/RegFiles/FPR_RegFile.bsv 35 11}}
Enum CSR_RegFile_MSU::RF_State {members {RF_RESET_START RF_RUNNING}} {width 1} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 347 45}}
Alias FPU::FDouble {FloatingPoint::FloatingPoint#(11, 52)} {position {../src_Core/CPU/FPU.bsv 17 31}}
Alias FPU::FSingle {FloatingPoint::FloatingPoint#(8, 23)} {position {../src_Core/CPU/FPU.bsv 18 31}}
TaggedUnion FPU::FloatU {members {{{FloatingPoint::FloatingPoint#(11, 52)} D {width 64}} {{FloatingPoint::FloatingPoint#(8, 23)} S {width 32}}}} {width 65} {position {../src_Core/CPU/FPU.bsv 23 6}}
Alias FPU::Fpu_Req {Tuple5#(FPU::FloatU, FPU::FloatU, FPU::FloatU, FloatingPoint::RoundMode, ISA_Decls::FpuOp)} {position {../src_Core/CPU/FPU.bsv 25 56}}
Alias FPU::Fpu_Rsp {Tuple2#(FPU::FloatU, FloatingPoint::Exception)} {position {../src_Core/CPU/FPU.bsv 26 59}}
Alias FPU::FpuR {Tuple2#(FloatingPoint::FloatingPoint#(11, 52), FloatingPoint::Exception)} {position {../src_Core/CPU/FPU.bsv 29 59}}
Interface FPU::FPU_IFC {members {{interface {ClientServer::Server#(Tuple5#(FPU::FloatU, FPU::FloatU, FPU::FloatU, FloatingPoint::RoundMode, ISA_Decls::FpuOp), Tuple2#(FPU::FloatU, FloatingPoint::Exception))} server_core {}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}}}} {position {../src_Core/CPU/FPU.bsv 34 11}}


Interface Giraffe_IFC::JTAG_IFC {members {{method {Action tdi Bit#(1) {{(* ports = ["tdi"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action tms Bit#(1) {{(* ports = ["tms"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action tclk Bit#(1) {{(* ports = ["tclk"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Bit#(1) tdo {} {{(* ports = [] *)} {(* result = "tdo" *)}}}} {interface Clock tclk_out {}}}} {position {src_BSV/Giraffe_IFC.bsv 24 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Giraffe_IFC::DMI_Master_IFC {members {{method {Action req_ready Bit#(1) {{(* ports = ["req_ready"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Bit#(1) req_valid {} {{(* ports = [] *)} {(* result = "req_valid" *)}}}} {method {Bit#(7) req_addr {} {{(* ports = [] *)} {(* result = "req_addr" *)}}}} {method {Bit#(32) req_data {} {{(* ports = [] *)} {(* result = "req_data" *)}}}} {method {Bit#(2) req_op {} {{(* ports = [] *)} {(* result = "req_op" *)}}}} {method {Bit#(1) rsp_ready {} {{(* ports = [] *)} {(* result = "rsp_ready" *)}}}} {method {Action rsp_valid Bit#(1) {{(* ports = ["rsp_valid"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action rsp_data Bit#(32) {{(* ports = ["rsp_data"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action rsp_response Bit#(2) {{(* ports = ["rsp_response"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}}}} {position {src_BSV/Giraffe_IFC.bsv 41 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Giraffe_IFC::DMI_IFC {members {{method {Bit#(1) req_ready {} {{(* ports = [] *)} {(* result = "req_ready" *)}}}} {method {Action req_valid Bit#(1) {{(* ports = ["req_valid"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action req_addr Bit#(7) {{(* ports = ["req_addr"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action req_data Bit#(32) {{(* ports = ["req_data"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action req_op Bit#(2) {{(* ports = ["req_op"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action rsp_ready Bit#(1) {{(* ports = ["rsp_ready"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Bit#(1) rsp_valid {} {{(* ports = [] *)} {(* result = "rsp_valid" *)}}}} {method {Bit#(32) rsp_data {} {{(* ports = [] *)} {(* result = "rsp_data" *)}}}} {method {Bit#(2) rsp_response {} {{(* ports = [] *)} {(* result = "rsp_response" *)}}}}}} {position {src_BSV/Giraffe_IFC.bsv 71 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Core_IFC::Core_IFC#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 80 11}}
Interface Giraffe_IFC::Platform_IFC {members {{interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave0 {}} {interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave1 {}} {interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave2 {}} {interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave3 {}} {method {Bit#(1) interrupt0 {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bit#(1) interrupt1 {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bit#(1) interrupt2 {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {interface BusDefines::BusSend#(Bit#(8)) uart_out {}} {interface BusDefines::BusRecv#(Bit#(8)) uart_in {}}}} {position {src_BSV/Giraffe_IFC.bsv 147 11}}
Interface GPR_RegFile::GPR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CHERICC_Fat::CapPipe read_rs1 Bit#(5) {{(* ports = ["rs1"] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_rs1_port2 Bit#(5) {{(* ports = ["rs1"] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_rs2 Bit#(5) {{(* ports = ["rs2"] *)} {(* always_ready  *)}}}} {method {Action write_rd {Bit#(5) CHERICC_Fat::CapFat} {{(* ports = ["rd", "rd_val"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/RegFiles/GPR_RegFile.bsv 80 11}}
Enum CSR_RegFile_MSU::RF_State {members {RF_RESET_START RF_RUNNING}} {width 1} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 347 45}}
Typeclass {Routable::Has_routingField#(type t, type r_t)} {dependencies {{t determines r_t}}} {members {{{function r_t f(t x1)} routingField}}} {instances {{Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(Routable::WithMetaInfo#(t, m_t), r_t)   provisos (Routable::Has_routingField#(t, r_t))} {Routable::Has_routingField#(Routable::WithRouteInfo#(t, r_t), r_t)}}} {position {../libs/BlueStuff/Routable.bsv 46 11}}
Typeclass {Routable::Has_isLast#(type t)} {members {{{function Bool f(t x1)} isLast}}} {instances {{Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_BFlit#(id_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(Routable::WithMetaInfo#(t, m_t))   provisos (Routable::Has_isLast#(t))} {Routable::Has_isLast#(Routable::WithRouteInfo#(t, r_t))   provisos (Routable::Has_isLast#(t))}}} {position {../libs/BlueStuff/Routable.bsv 50 11}}
Typeclass {Routable::Routable#(type f_t, type r_t)} {superclasses {{Routable::Has_routingField#(f_t, r_t)} Routable::Has_isLast#(f_t)}} {dependencies {{f_t determines r_t}}} {members {}} {instances {{Routable::Routable#(a, b)   provisos (Routable::Has_isLast#(a), Routable::Has_routingField#(a, b))}}} {position {../libs/BlueStuff/Routable.bsv 54 11}}
Typeclass {Routable::FallibleRoute#(type req_t, type rsp_t)} {members {{{a#(MasterSlave::Slave#(req_t, rsp_t))   provisos (IsModule#(a, b))} mkNoRouteSlave}}} {instances {{Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} {Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), AXI4Lite_Types::AXI4Lite_BFlit#(buser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_), down_t))   provisos (Bits#(down_t, down_t_sz))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_), down_t))   provisos (Bits#(down_t, down_t_sz))}}} {position {../libs/BlueStuff/Routable.bsv 72 11}}
Typeclass {Routable::ExpandableReqRsp#(type req_t, type req_fat_t, type rsp_fat_t, type rsp_t, numeric type n_masters)} {dependencies {{(req_t, req_fat_t) determines (rsp_fat_t, rsp_t, n_masters)} {rsp_fat_t determines (req_t, req_fat_t, rsp_t, n_masters)} {(rsp_fat_t, rsp_t) determines (req_t, req_fat_t, n_masters)}}} {members {{{function req_fat_t f(Bit#(TLog#(n_masters)) x1, req_t x2)} expand} {{function Tuple2#(Bit#(TLog#(n_masters)), rsp_t) f(rsp_fat_t x1)} shrink}}} {instances {{Routable::ExpandableReqRsp#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_), AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_), AXI4_Types::AXI4_RFlit#(id_, data_, ruser_), n)   provisos (Add#(id_, TLog#(n), sid_))} {Routable::ExpandableReqRsp#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_), AXI4_Types::AXI4_BFlit#(id_, buser_), n)   provisos (Add#(id_, TLog#(n), sid_))}}} {position {../libs/BlueStuff/Routable.bsv 88 11}}
Struct {Routable::WithRouteInfo#(type t, type r_t)} polymorphic {members {{t payload} {r_t routeInfo}}} {position {../libs/BlueStuff/Routable.bsv 110 3}}
Struct {Routable::WithMetaInfo#(type t, type m_t)} polymorphic {members {{t payload} {m_t metaInfo}}} {position {../libs/BlueStuff/Routable.bsv 123 3}}
Struct {Routable::Range#(numeric type n)} polymorphic {members {{Bit#(n) base} {Bit#(n) size}}} {position {../libs/BlueStuff/Routable.bsv 145 3}}
Alias {Routable::MappingTable#(numeric type n, numeric type a)} {Vector::Vector#(n, Routable::Range#(a))} {position {../libs/BlueStuff/Routable.bsv 155 33}}
Interface {IntMulDiv::IntDiv_IFC#(numeric type w)} polymorphic {members {{method {Action start {Bool Bool} {{(* ports = ["num_is_signed", "den_is_signed"] *)} {(* always_ready  *)}}}} {method {Bool result_valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bit#(w), Bit#(w))} result_value {{(* ports = [] *)} {(* always_ready  *)}}}}} {position {../src_Core/CPU/IntMulDiv.bsv 17 11}}
Enum IntMulDiv::DivState {members {Div_RDY Div_START Div_LOOP1 Div_LOOP2 Div_DONE}} {width 3} {position {../src_Core/CPU/IntMulDiv.bsv 29 68}}
Interface {IntMulDiv::IntMul_IFC#(numeric type w)} polymorphic {members {{method {Action put_args {Bool Bit#(w) Bool Bit#(w)} {{(* ports = ["x_is_signed", "x", "y_is_signed", "y"] *)} {(* always_ready  *)}}}} {method {Bool result_valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {{Bit#(TAdd#(w, w))} result_value {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/IntMulDiv.bsv 162 11}}
Enum IntMulDiv::MulState {members {MUL_IDLE MUL_BUSY MUL_READY}} {width 2} {position {../src_Core/CPU/IntMulDiv.bsv 191 47}}
Alias ISA_Decls::NO_OF_PRIVMODES 3 {position {../src_Core/ISA/ISA_Decls.bsv 56 11}}
Alias ISA_Decls::ILEN 32 {position {../src_Core/ISA/ISA_Decls.bsv 57 12}}
Alias ISA_Decls::XLEN 64 {position {../src_Core/ISA/ISA_Decls.bsv 68 12}}
Alias ISA_Decls::XLEN_2 128 {position {../src_Core/ISA/ISA_Decls.bsv 72 26}}
Alias ISA_Decls::XLEN_MINUS_2 62 {position {../src_Core/ISA/ISA_Decls.bsv 73 26}}
Enum ISA_Decls::RV_Version {members {RV32 RV64}} {width 1} {position {../src_Core/ISA/ISA_Decls.bsv 77 29}}
Alias ISA_Decls::WordXL Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 88 23}}
Alias ISA_Decls::IntXL Int#(64) {position {../src_Core/ISA/ISA_Decls.bsv 89 23}}
Alias ISA_Decls::Word Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 91 23}}
Alias ISA_Decls::Word_S Int#(64) {position {../src_Core/ISA/ISA_Decls.bsv 92 23}}
Alias ISA_Decls::Addr Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 94 23}}
Alias ISA_Decls::Bits_per_Byte 8 {position {../src_Core/ISA/ISA_Decls.bsv 98 48}}
Alias MEM::Byte Bit#(8) {position {../libs/TagController/TagController/CacheCore/MEM.bsv 188 17}}
Alias ISA_Decls::Bits_per_Word 64 {position {../src_Core/ISA/ISA_Decls.bsv 101 48}}
Alias ISA_Decls::Bytes_per_Word 8 {position {../src_Core/ISA/ISA_Decls.bsv 103 48}}
Alias ISA_Decls::Bits_per_Byte_in_Word 3 {position {../src_Core/ISA/ISA_Decls.bsv 104 48}}
Alias ISA_Decls::Byte_in_Word Bit#(3) {position {../src_Core/ISA/ISA_Decls.bsv 105 48}}
Alias ISA_Decls::Word_B {Vector::Vector#(8, Bit#(8))} {position {../src_Core/ISA/ISA_Decls.bsv 106 48}}
Alias ISA_Decls::Bytes_per_WordXL 8 {position {../src_Core/ISA/ISA_Decls.bsv 108 48}}
Alias ISA_Decls::Bits_per_Byte_in_WordXL 3 {position {../src_Core/ISA/ISA_Decls.bsv 109 48}}
Alias ISA_Decls::Byte_in_WordXL Bit#(3) {position {../src_Core/ISA/ISA_Decls.bsv 110 48}}
Alias ISA_Decls::WordXL_B {Vector::Vector#(8, Bit#(8))} {position {../src_Core/ISA/ISA_Decls.bsv 111 48}}
Alias ISA_Decls::Bits_per_Addr 64 {position {../src_Core/ISA/ISA_Decls.bsv 113 48}}
Alias ISA_Decls::Bytes_per_Addr 8 {position {../src_Core/ISA/ISA_Decls.bsv 114 48}}
Alias ISA_Decls::FLEN 64 {position {../src_Core/ISA/ISA_Decls.bsv 141 12}}
Alias ISA_Decls::FP_Value Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 150 22}}
Alias ISA_Decls::WordFL Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 151 23}}
Alias ISA_Decls::Bytes_per_WordFL 8 {position {../src_Core/ISA/ISA_Decls.bsv 153 48}}
Alias ISA_Decls::Bits_per_Byte_in_WordFL 3 {position {../src_Core/ISA/ISA_Decls.bsv 154 48}}
Alias ISA_Decls::Byte_in_WordFL Bit#(3) {position {../src_Core/ISA/ISA_Decls.bsv 155 48}}
Alias ISA_Decls::WordFL_B {Vector::Vector#(8, Bit#(8))} {position {../src_Core/ISA/ISA_Decls.bsv 156 48}}
Alias ISA_Decls::Token Bit#(0) {position {../src_Core/ISA/ISA_Decls.bsv 163 18}}
Enum ISA_Decls::ISize {members {ISIZE16BIT ISIZE32BIT}} {width 1} {position {../src_Core/ISA/ISA_Decls.bsv 170 6}}
Alias ISA_Decls::Instr Bit#(32) {position {../src_Core/ISA/ISA_Decls.bsv 172 21}}
Alias ISA_Decls::Opcode Bit#(7) {position {../src_Core/ISA/ISA_Decls.bsv 173 21}}
Alias ISA_Decls::RegName Bit#(5) {position {../src_Core/ISA/ISA_Decls.bsv 174 21}}
Alias ISA_Decls::NumRegs 32 {position {../src_Core/ISA/ISA_Decls.bsv 175 21}}
Struct ISA_Decls::Decoded_Instr {members {{Bit#(7) opcode {width 7}} {Bit#(5) rd {width 5}} {Bit#(5) rs1 {width 5}} {Bit#(5) rs2 {width 5}} {Bit#(5) rs3 {width 5}} {Bit#(12) csr {width 12}} {Bit#(3) funct3 {width 3}} {Bit#(5) funct5 {width 5}} {Bit#(7) funct7 {width 7}} {Bit#(10) funct10 {width 10}} {Bit#(5) funct5rs2 {width 5}} {Bit#(5) funct5rd {width 5}} {Bit#(12) imm12_I {width 12}} {Bit#(12) imm12_S {width 12}} {Bit#(13) imm13_SB {width 13}} {Bit#(20) imm20_U {width 20}} {Bit#(21) imm21_UJ {width 21}} {Bit#(4) pred {width 4}} {Bit#(4) succ {width 4}} {Bit#(2) aqrl {width 2}}}} {width 162} {position {../src_Core/ISA/ISA_Decls.bsv 255 6}}
Enum ISA_Decls::Access_RWX {members {Access_RWX_R Access_RWX_W Access_RWX_X}} {width 2} {position {../src_Core/ISA/ISA_Decls.bsv 403 59}}
Enum ISA_Decls::Mem_Data_Size {members {BITS8 BITS16 BITS32 BITS64}} {width 2} {position {../src_Core/ISA/ISA_Decls.bsv 413 6}}
Alias ISA_Decls::MemReqSize Bit#(3) {position {../src_Core/ISA/ISA_Decls.bsv 419 18}}
Struct ISA_Decls::Fence_Ordering {members {{Bool pi {width 1}} {Bool po {width 1}} {Bool pr {width 1}} {Bool pw {width 1}} {Bool si {width 1}} {Bool so {width 1}} {Bool sr {width 1}} {Bool sw {width 1}}}} {width 8} {position {../src_Core/ISA/ISA_Decls.bsv 475 6}}
Enum ISA_Decls::FpuOp {members {FPAdd FPSub FPMul FPDiv FPSqrt FPMAdd FPMSub FPNMAdd FPNMSub}} {width 4} {position {../src_Core/ISA/ISA_Decls.bsv 713 16}}
Alias ISA_Decls::Num_Priv_Modes 4 {position {../src_Core/ISA/ISA_Decls.bsv 1042 11}}
Alias ISA_Decls::Priv_Mode Bit#(2) {position {../src_Core/ISA/ISA_Decls.bsv 1044 18}}
Alias ISA_Decls::CSR_Addr Bit#(12) {position {../src_Core/ISA/ISA_Decls.bsv 1063 19}}
Struct ISA_Decls::Trap_Info_CSR {members {{CHERICC_Fat::CapFat pcc {width 151}} {Bit#(64) mstatus {width 64}} {Bit#(64) mcause {width 64}} {Bit#(2) priv {width 2}}}} {width 281} {position {../src_Core/ISA/ISA_Decls.bsv 1168 3}}
Alias ISA_Decls::Instr_C Bit#(16) {position {../src_Core/ISA/ISA_Decls_C.bsv 12 21}}
Alias ISA_Decls::VM_Mode Bit#(4) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 92 19}}
Alias ISA_Decls::ASID Bit#(16) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 93 19}}
Alias ISA_Decls::VA_sz 39 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 156 15}}
Alias ISA_Decls::VPN_sz 27 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 157 15}}
Alias ISA_Decls::VPN_J_sz 9 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 158 15}}
Alias ISA_Decls::VPN_max_levels 3 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 159 15}}
Alias ISA_Decls::PA_sz 64 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 162 15}}
Alias ISA_Decls::PPN_sz 44 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 163 15}}
Alias ISA_Decls::PPN_2_sz 26 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 164 15}}
Alias ISA_Decls::PPN_1_sz 9 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 165 15}}
Alias ISA_Decls::PPN_0_sz 9 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 166 15}}
Alias ISA_Decls::Offset_sz 12 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 169 15}}
Alias ISA_Decls::PTNode_sz 512 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 172 15}}
Alias ISA_Decls::PA Bit#(64) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 196 61}}
Alias ISA_Decls::VA Bit#(39) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 207 62}}
Alias ISA_Decls::VPN Bit#(27) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 223 72}}
Alias ISA_Decls::VPN_J Bit#(9) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 224 72}}
Alias CacheCore::Offset Bit#(3) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 98 28}}
Alias ISA_Decls::PPN Bit#(44) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 228 67}}
Alias ISA_Decls::PPN_2 Bit#(26) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 230 67}}
Alias ISA_Decls::PPN_1 Bit#(9) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 232 67}}
Alias ISA_Decls::PPN_0 Bit#(9) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 233 67}}
Alias ISA_Decls::PPN_MEGA Bit#(35) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 238 44}}
Alias ISA_Decls::PPN_GIGA Bit#(26) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 239 44}}
Alias ISA_Decls::PTNode_Index_sz 9 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 258 34}}
Alias ISA_Decls::PTNode_Index Bit#(9) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 259 34}}
Alias ISA_Decls::PTE Bit#(64) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 265 16}}
Alias ISA_Decls::CLEN 128 {position {../src_Core/ISA/ISA_Decls_CHERI.bsvi 32 24}}
Alias ISA_Decls::CHERI_Exc_Code Bit#(5) {position {../src_Core/ISA/ISA_Decls_CHERI.bsvi 50 18}}
Struct ISA_Decls::XCCSR {members {{Bit#(6) cheri_exc_reg {width 6}} {Bit#(5) cheri_exc_code {width 5}}}} {width 11} {position {../src_Core/ISA/ISA_Decls_CHERI.bsvi 79 5}}
Alias ISA_Decls::SCR_Addr Bit#(5) {position {../src_Core/ISA/ISA_Decls_CHERI.bsvi 92 17}}
Alias ISA_Decls::Report_Width 64 {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 197 23}}
Alias ISA_Decls::No_Of_Ctrs 29 {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 202 21}}
Struct ISA_Decls::MISA {members {{Bit#(2) mxl {width 2}} {Bit#(1) z {width 1}} {Bit#(1) y {width 1}} {Bit#(1) x {width 1}} {Bit#(1) w {width 1}} {Bit#(1) v {width 1}} {Bit#(1) u {width 1}} {Bit#(1) t {width 1}} {Bit#(1) s {width 1}} {Bit#(1) r {width 1}} {Bit#(1) q {width 1}} {Bit#(1) p {width 1}} {Bit#(1) o {width 1}} {Bit#(1) n {width 1}} {Bit#(1) m {width 1}} {Bit#(1) l {width 1}} {Bit#(1) k {width 1}} {Bit#(1) j {width 1}} {Bit#(1) i {width 1}} {Bit#(1) h {width 1}} {Bit#(1) g {width 1}} {Bit#(1) f {width 1}} {Bit#(1) e {width 1}} {Bit#(1) d {width 1}} {Bit#(1) c {width 1}} {Bit#(1) b {width 1}} {Bit#(1) a {width 1}}}} {width 28} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 213 6}}
Enum ISA_Decls::MTVEC_Mode {members {DIRECT VECTORED}} {width 1} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 468 33}}
Struct ISA_Decls::MTVec {members {{Bit#(62) base {width 62}} {ISA_Decls::MTVEC_Mode mode {width 1}}}} {width 63} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 474 3}}
Struct ISA_Decls::MCounteren {members {{Bit#(29) hpm {width 29}} {Bit#(1) ir {width 1}} {Bit#(1) tm {width 1}} {Bit#(1) cy {width 1}}}} {width 32} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 499 3}}
Struct ISA_Decls::MCountinhibit {members {{Reserved::ReservedZero#(0) reserved {width 0}} {Bit#(29) hpm {width 29}} {Bit#(1) ir {width 1}} {Reserved::ReservedZero#(1) reserved2 {width 1}} {Bit#(1) cy {width 1}}}} {width 32} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 525 3}}
Struct ISA_Decls::MCause {members {{Bit#(1) interrupt {width 1}} {Bit#(6) exc_code {width 6}}}} {width 7} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 565 6}}
Alias ISA_Decls::Exc_Code Bit#(6) {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 589 18}}
Alias JtagTap::ABITS 6 {position {src_BSV/JtagTap.bsv 15 11}}
Alias JtagTap::IR_LENGTH 18 {position {src_BSV/JtagTap.bsv 20 12}}
Alias JtagTap::DR_LENGTH 40 {position {src_BSV/JtagTap.bsv 27 25}}
Enum JtagTap::JtagState {members {TEST_LOGIC_RESET RUN_TEST_IDLE SELECT_DR_SCAN CAPTURE_DR SHIFT_DR EXIT1_DR PAUSE_DR EXIT2_DR UPDATE_DR SELECT_IR_SCAN CAPTURE_IR SHIFT_IR EXIT1_IR PAUSE_IR EXIT2_IR UPDATE_IR}} {width 4} {position {src_BSV/JtagTap.bsv 79 6}}
Struct JtagTap::DTMCS {members {{Reserved::ReservedZero#(14) reserved {width 14}} {Bit#(1) dmihardreset {width 1}} {Bit#(1) dmireset {width 1}} {Reserved::ReservedZero#(1) reserved2 {width 1}} {Bit#(3) idle {width 3}} {Bit#(2) dmistat {width 2}} {Bit#(6) abits {width 6}} {Bit#(4) version {width 4}}}} {width 32} {position {src_BSV/JtagTap.bsv 90 6}}
Alias JtagTap::DMI_OP Bit#(2) {position {src_BSV/JtagTap.bsv 107 17}}
Struct JtagTap::DMI {members {{Bit#(6) address {width 6}} {Bit#(32) data {width 32}} {Bit#(2) op {width 2}}}} {width 40} {position {src_BSV/JtagTap.bsv 120 6}}
Interface JtagTap::JtagTap_IFC {members {{interface Giraffe_IFC::JTAG_IFC jtag {}} {interface Giraffe_IFC::DMI_Master_IFC dmi {}}}} {position {src_BSV/JtagTap.bsv 174 11}}
Typeclass {ListExtra::MkList#(type a, type b)} {dependencies {{a determines b}}} {members {{{function a f(List#(b) x1)} mkList}}} {instances {{ListExtra::MkList#(List#(b), b)} {ListExtra::MkList#(function a f(b x1), b)   provisos (ListExtra::MkList#(a, b))}}} {position {../libs/BlueStuff/BlueBasics/ListExtra.bsv 54 11}}
Struct {Map::MapKeyIndex#(type ky, type ix)} polymorphic {members {{ky key} {ix index}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 44 3}}
Struct {Map::MapKeyValue#(type ky, type vl)} polymorphic {members {{ky key} {vl value}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 48 3}}
Struct {Map::MapKeyIndexValue#(type ky, type ix, type vl)} polymorphic {members {{ky key} {ix index} {vl value}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 53 3}}
Interface {Map::Map#(type ky, type ix, type vl, numeric type as)} polymorphic {members {{method {Action update {{Map::MapKeyIndex#(ky, ix)} vl} {{(* ports = ["key", "value"] *)}}}} {method {Action updateWithFunc {{Map::MapKeyIndex#(ky, ix)} vl {function vl f(vl x1, vl x2)} Bool} {{(* ports = ["ki", "value", "up", "insert"] *)}}}} {method {Maybe#(vl) lookup {{Map::MapKeyIndex#(ky, ix)}} {{(* ports = ["lookup_key"] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool clearDone {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 57 11}}
Interface {Map::MapSplit#(type ky, type ix, type vl, numeric type as)} polymorphic {members {{method {Action update {{Map::MapKeyIndex#(ky, ix)} vl} {{(* ports = ["key", "value"] *)}}}} {method {Action lookupStart {{Map::MapKeyIndex#(ky, ix)}} {{(* ports = ["lookup_key"] *)}}}} {method {Maybe#(vl) lookupRead {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool clearDone {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 119 11}}
Interface {MasterSlave::Master#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Source#(req_t) req {}} {interface SourceSink::Sink#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 44 11}}
Interface {MasterSlave::Slave#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Sink#(req_t) req {}} {interface SourceSink::Source#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 50 11}}
Interface {MasterSlaveCHERI::CheckedPut#(type t)} polymorphic {members {{method {Bool canPut {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action put t {{(* ports = ["val"] *)}}}}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 45 11}}
Typeclass {MasterSlaveCHERI::ToCheckedPut#(type a, type b)} {dependencies {{a determines b}}} {members {{{function MasterSlaveCHERI::CheckedPut#(b) f(a x1)} toCheckedPut}}} {instances {{MasterSlaveCHERI::ToCheckedPut#(FIFOF::FIFOF#(data_t), data_t)} {MasterSlaveCHERI::ToCheckedPut#(MasterSlaveCHERI::CheckedPut#(data_t), data_t)}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 51 11}}
Interface {MasterSlaveCHERI::CheckedGet#(type t)} polymorphic {members {{method {Bool canGet {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {t peek {} {{(* ports = [] *)}}}} {method {ActionValue#(t) get {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 107 11}}
Typeclass {MasterSlaveCHERI::ToCheckedGet#(type a, type b)} {dependencies {{a determines b}}} {members {{{function MasterSlaveCHERI::CheckedGet#(b) f(a x1)} toCheckedGet}}} {instances {{MasterSlaveCHERI::ToCheckedGet#(FIFOF::FIFOF#(data_t), data_t)} {MasterSlaveCHERI::ToCheckedGet#(MasterSlaveCHERI::CheckedGet#(data_t), data_t)}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 114 11}}
Interface {MasterSlave::Master#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Source#(req_t) req {}} {interface SourceSink::Sink#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 44 11}}
Interface {MasterSlave::Slave#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Sink#(req_t) req {}} {interface SourceSink::Source#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 50 11}}
Interface {MasterSlaveCHERI::ForwardPutGet#(type a)} polymorphic {members {{interface MasterSlaveCHERI::CheckedPut#(a) cput {}} {interface MasterSlaveCHERI::CheckedGet#(a) cget {}}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 253 11}}
Interface {MasterSlaveCHERI::Forward#(type req_t, type rsp_t)} polymorphic {members {{interface {MasterSlaveCHERI::Slave#(req_t, rsp_t)} slave {}} {interface {MasterSlaveCHERI::Master#(req_t, rsp_t)} master {}}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 265 11}}
Interface {MEM::ReadIfc#(type addr, type data)} polymorphic {members {{method {Action put addr {{(* ports = ["a"] *)}}}} {method {ActionValue#(data) get {} {{(* ports = [] *)}}}} {method {data peek {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 38 11}}
Interface {MEM::MEM#(type addr, type data)} polymorphic {members {{interface {MEM::ReadIfc#(addr, data)} read {}} {method {Action write {addr data} {{(* ports = ["a", "x"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 44 11}}
Alias MEM::Byte Bit#(8) {position {../libs/TagController/TagController/CacheCore/MEM.bsv 188 17}}
Interface {MEM::MemBEVerbose#(type addr, type data, numeric type data_bytes)} polymorphic {members {{interface {MEM::ReadIfc#(addr, data)} read {}} {method {Action write {addr data {Vector::Vector#(data_bytes, Bool)}} {{(* ports = ["a", "x", "be"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 190 11}}
Alias {MEM::MemBE#(type addr, type data)} {MEM::MemBEVerbose#(addr, data, TDiv#(SizeOf#(data), 8))} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 195 57}}
Interface {MEM::MEM2#(type addr, type data)} polymorphic {members {{interface {MEM::ReadIfc#(addr, data)} read {}} {interface {MEM::ReadIfc#(addr, data)} readB {}} {method {Action write {addr data} {{(* ports = ["a", "x"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 246 11}}
Struct {MemTypes::BitPO#(numeric type n)} polymorphic {members {{Bit#(n) val}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 50 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}


TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {MemTypes::Mem#(type addr_t, type data_t)} {MasterSlave::Slave#(MemTypes::MemReq#(addr_t, data_t), MemTypes::MemRsp#(data_t))} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 196 3}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {MemBRAM::BRAM2#(numeric type a0w, numeric type d0w, numeric type a1w, numeric type d1w)} polymorphic {members {{interface {MemBRAM::BRAM#(a0w, d0w)} p0 {}} {interface {MemBRAM::BRAM#(a1w, d1w)} p1 {}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 51 11}}
Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {MemBRAM::BRAM2#(numeric type a0w, numeric type d0w, numeric type a1w, numeric type d1w)} polymorphic {members {{interface {MemBRAM::BRAM#(a0w, d0w)} p0 {}} {interface {MemBRAM::BRAM#(a1w, d1w)} p1 {}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 51 11}}
Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimCHandle Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 58 19}}
Alias MemSim::MemSimSizeT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 59 19}}
Alias MemSim::MemSimAddrT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 60 34}}
Alias MemSim::MemSimAccessSizeT Bit#(8) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 61 18}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}
Alias MemSim::MemSimByteEnT Bit#(8) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 68 18}}
Struct {MemTypes::BitPO#(numeric type n)} polymorphic {members {{Bit#(n) val}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 50 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}


TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {MemTypes::Mem#(type addr_t, type data_t)} {MasterSlave::Slave#(MemTypes::MemReq#(addr_t, data_t), MemTypes::MemRsp#(data_t))} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 196 3}}
Alias MemTypesCHERI::CORE_COUNT 1 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 48 13}}
Alias MemTypesCHERI::MaxTransactions 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 51 11}}
Alias MemTypesCHERI::MaxNoOfFlits 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 52 11}}
Alias MemTypesCHERI::CheriBurstSize 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 53 22}}
Alias MemTypesCHERI::CapWidth 128 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 57 21}}
Alias MemTypesCHERI::CapBytes 16 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 73 29}}
Alias MemTypesCHERI::BootMemBytes 65536 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 76 19}}
Alias MemTypesCHERI::BootMemAddrBits 13 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 77 38}}
Alias {MemTypesCHERI::PhyLineNumber#(numeric type width, numeric type bytePerLine)} {Bit#(TSub#(width, TLog#(bytePerLine)))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 85 47}}
Alias {MemTypesCHERI::PhyByteOffset#(numeric type bytePerLine)} Bit#(TLog#(bytePerLine)) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 86 34}}
Alias {MemTypesCHERI::PhyBitOffset#(numeric type bytePerLine)} {Bit#(TAdd#(TLog#(bytePerLine), 3))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 87 43}}
Struct {MemTypesCHERI::PhyByteAddress#(numeric type width, numeric type bytePerLine)} polymorphic {members {{{Bit#(TSub#(width, TLog#(bytePerLine)))} lineNumber} {Bit#(TLog#(bytePerLine)) byteOffset}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 95 3}}
Struct {MemTypesCHERI::PhyBitAddress#(numeric type width, numeric type bytePerLine)} polymorphic {members {{{MemTypesCHERI::PhyByteAddress#(width, bytePerLine)} byteAddr} {Bit#(3) bitOffset {width 3}}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 100 3}}
Alias MemTypesCHERI::CheriBusBytes 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 119 26}}
Alias MemTypesCHERI::AddrWidth 40 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 133 12}}
Alias TagController::CapsPerFlit 1 {position {../libs/TagController/TagController/TagController.bsv 92 50}}
Alias MemTypesCHERI::CapTags {Vector::Vector#(1, Bool)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 137 37}}
Alias MemTypesCHERI::CapNumber Bit#(36) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 138 50}}
Struct MemTypesCHERI::CheriCapAddress {members {{Bit#(36) capNumber {width 36}} {Bit#(4) offset {width 4}}}} {width 40} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 142 5}}
Alias MemTypesCHERI::CheriDataWidth 64 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 144 32}}
Alias MemTypesCHERI::CheriLineAddrWidth 37 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 145 47}}
Alias MemTypesCHERI::CheriPhyLineNumber Bit#(37) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 146 50}}
Alias MemTypesCHERI::CheriPhyAddr {MemTypesCHERI::PhyByteAddress#(40, 8)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 147 50}}
Alias MemTypesCHERI::CheriPhyBitAddr {MemTypesCHERI::PhyBitAddress#(40, 8)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 148 49}}
Alias MemTypesCHERI::CheriPhyByteOffset Bit#(3) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 149 39}}
Alias MemTypesCHERI::CheriPhyBitOffset Bit#(6) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 150 39}}
Alias MemTypesCHERI::CheriPeriphAddr {MemTypesCHERI::PhyByteAddress#(40, 8)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 151 38}}
Alias MemTypesCHERI::LogLine 5 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 152 39}}
Alias MemTypesCHERI::Flit UInt#(3) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 154 36}}
Alias MemTypesCHERI::Line Bit#(35) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 155 62}}
Alias MemTypesCHERI::CpuLineSize 64 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 157 12}}
Alias MemTypesCHERI::CapOffsetInLine Bit#(2) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 158 51}}
Enum MemTypesCHERI::BytesPerFlit {members {BYTE_1 BYTE_2 BYTE_4 BYTE_8 BYTE_16 BYTE_32 BYTE_64 BYTE_128}} {width 3} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 170 3}}
Struct {MemTypesCHERI::Data#(numeric type width)} polymorphic {members {{{Vector::Vector#(1, Bool)} cap {width 1}} {Bit#(width) data}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 180 3}}
Struct {MemTypesCHERI::DataMinusCapTags#(numeric type width)} polymorphic {members {{Bit#(width) data}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 186 3}}
Enum MemTypesCHERI::WhichCache {members {ICache DCache None L2 TCache}} {width 3} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 191 3}}
Enum MemTypesCHERI::CacheInst {members {CacheInvalidate CacheInvalidateWriteback CacheWriteback CacheSync Read Write StoreConditional CacheLoadTag CacheNop}} {width 4} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 212 3}}
Struct MemTypesCHERI::CacheOperation {members {{MemTypesCHERI::CacheInst inst {width 4}} {MemTypesCHERI::WhichCache cache {width 3}} {Bool indexed {width 1}}}} {width 8} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 222 3}}
Enum MemTypesCHERI::Error {members {NoError BusError SlaveError}} {width 2} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 236 3}}
Struct {Memory::MemoryRequest#(numeric type a, numeric type d)} polymorphic {members {{Bool write {width 1}} {{Bit#(TDiv#(d, 8))} byteen} {Bit#(a) address} {Bit#(d) data}}} {position {%/Libraries/Memory.bsv 31 3 {Library Memory}}}



Alias MemTypesCHERI::CheriMasterIDWidth 1 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 355 29}}
Alias MemTypesCHERI::CheriTransactionIDWidth 5 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 356 34}}
Alias MemTypesCHERI::CheriMasterID Bit#(1) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 357 34}}
Alias MemTypesCHERI::CheriTransactionID Bit#(5) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 358 39}}
Alias MemTypesCHERI::CheriData MemTypesCHERI::Data#(64) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 360 31}}
Alias MemTypesCHERI::CheriMemRequest {MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 361 86}}
Alias MemTypesCHERI::CheriMemRequest64 {MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 362 78}}
Struct MemTypesCHERI::ReqId {members {{Bit#(1) masterID {width 1}} {Bit#(5) transactionID {width 5}}}} {width 6} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 367 3}}
Alias MemTypesCHERI::Banks 4 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 369 11}}
Alias MemTypesCHERI::Bank UInt#(2) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 370 18}}
Alias MemTypesCHERI::TagCacheKilobytes 16384 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 376 19}}
Alias MemTypesCHERI::Indices 9 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 380 71}}
Struct {Memory::MemoryResponse#(numeric type d)} polymorphic {members {{Bit#(d) data}}} {position {%/Libraries/Memory.bsv 35 3 {Library Memory}}}


Alias MemTypesCHERI::CheriMemResponse {MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 470 74}}
Alias MemTypesCHERI::CheriMemResponse64 {MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 471 63}}
Alias MemTypesCHERI::CheriPeriphSlave {MasterSlave::Slave#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 473 57}}
Alias MemTypesCHERI::CheriSlave {MasterSlave::Slave#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 474 57}}
Alias MemTypesCHERI::CheriPeriphMaster {MasterSlave::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 476 57}}
Alias MemTypesCHERI::CheriMaster {MasterSlave::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 477 57}}

Interface {MMU_Cache::MMU_Cache_IFC#(numeric type mID)} polymorphic {members {{method {Action set_verbosity Bit#(4) {{(* ports = ["verbosity"] *)}}}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action req {MMU_Cache_Common::CacheOp Bit#(3) Bool Bit#(5) Bit#(64) {Tuple2#(Bool, Bit#(128))} Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["op", "width_code", "is_unsigned", "amo_funct5", "addr", "st_value", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action commit {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) addr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bool, Bit#(128))} cword {{(* ports = [] *)} {(* always_ready  *)}}} {interface {Tuple2#(Bool, Bit#(128))} st_amo_val {{(* ports = [] *)} {(* always_ready  *)}}} {method {Bool exc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(6) exc_code {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_flush {}} {method {Action tlb_flush {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(mID, 64, 64, 0, 1, 0, 0, 1)} mem_master {}} {method {Near_Mem_IFC::EventsCache events {} {{(* ports = [] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 94 11}}
Alias MMU_Cache::MMU_DCache_IFC MMU_Cache::MMU_Cache_IFC#(4) {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 165 36}}
Alias MMU_Cache::MMU_ICache_IFC MMU_Cache::MMU_Cache_IFC#(5) {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 166 32}}
Enum MMU_Cache::CTagState {members {CTAG_EMPTY CTAG_CLEAN}} {width 1} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 265 41}}
Struct MMU_Cache::State_and_CTag {members {{MMU_Cache::CTagState state {width 1}} {Bit#(52) ctag {width 52}}}} {width 53} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 271 6}}
Alias MMU_Cache::State_and_CTag_CSet {Vector::Vector#(2, MMU_Cache::State_and_CTag)} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 274 49}}
Alias MMU_Cache::CWord_Set {Vector::Vector#(2, Tuple2#(Bit#(1), Bit#(128)))} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 275 49}}
Enum MMU_Cache::Module_State {members {MODULE_PRERESET MODULE_RESETTING MODULE_READY MODULE_RUNNING MODULE_EXCEPTION_RSP PTW_START PTW_LEVEL_2 PTW_LEVEL_1 PTW_LEVEL_0 CACHE_START_REFILL CACHE_REFILL CACHE_REREQ CACHE_ST_AMO_RSP IO_REQ IO_AWAITING_READ_RSP IO_READ_RSP IO_AWAITING_AMO_READ_RSP}} {width 5} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 300 6}}
Enum MMU_Cache::Requestor {members {REQUESTOR_RESET_IFC REQUESTOR_FLUSH_IFC}} {width 1} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 307 57}}
Struct MMU_Cache::Fabric_Write_Fields {members {{Bit#(64) fabric_addr {width 64}} {Bit#(64) fabric_data {width 64}} {Bit#(1) fabric_user {width 1}} {Bit#(8) fabric_strb {width 8}} {AXI4_Common_Types::AXI4_Size fabric_size {width 3}} {Bit#(64) fabric_2_data {width 64}} {Bit#(1) fabric_2_user {width 1}} {Bit#(8) fabric_2_strb {width 8}}}} {width 213} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 340 3}}
Enum MMU_Cache_Common::CacheOp {members {CACHE_LD CACHE_ST CACHE_AMO}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 28 6}}
Alias Near_Mem_IFC::Cache_Cap_Tag_Width 1 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 157 37}}
Alias Near_Mem_IFC::Cache_Entry {Tuple2#(Bit#(1), Bit#(128))} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 158 51}}
Struct MMU_Cache_Common::MMU_Cache_Req {members {{MMU_Cache_Common::CacheOp op {width 2}} {Bit#(3) width_code {width 3}} {Bool is_unsigned {width 1}} {Bool is_cap {width 1}} {Bit#(64) va {width 64}} {{Tuple2#(Bool, Bit#(128))} st_value {width 129}} {Bit#(5) amo_funct5 {width 5}} {Bit#(2) priv {width 2}} {Bit#(1) sstatus_SUM {width 1}} {Bit#(1) mstatus_MXR {width 1}} {Bit#(64) satp {width 64}}}} {width 273} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 53 6}}
Enum MMU_Cache_Common::VM_Xlate_Outcome {members {VM_XLATE_OK VM_XLATE_TLB_MISS VM_XLATE_EXCEPTION}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 90 69}}
Struct MMU_Cache_Common::VM_Xlate_Result {members {{MMU_Cache_Common::VM_Xlate_Outcome outcome {width 2}} {Bool allow_cap {width 1}} {Bit#(64) pa {width 64}} {Bit#(6) exc_code {width 6}} {Bool pte_modified {width 1}} {Bit#(64) pte {width 64}} {Bit#(2) pte_level {width 2}} {Bit#(64) pte_pa {width 64}}}} {width 204} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 104 6}}
Enum MMU_Cache_Common::Meta_State {members {META_INVALID META_SHARED META_EXCLUSIVE META_MODIFIED}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 204 75}}
Struct MMU_Cache_Common::L1_to_L2_Req {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State from_state {width 2}} {MMU_Cache_Common::Meta_State to_state {width 2}} {Bool can_up_to_E {width 1}}}} {width 69} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 243 6}}
Struct MMU_Cache_Common::L2_to_L1_Rsp {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State to_state {width 2}} {{Maybe#(Vector::Vector#(4, Tuple2#(Bit#(1), Bit#(128))))} m_cline {width 517}}}} {width 583} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 265 6}}
Struct MMU_Cache_Common::L2_to_L1_Req {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State to_state {width 2}}}} {width 66} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 290 6}}
Struct MMU_Cache_Common::L1_to_L2_Rsp {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State to_state {width 2}} {{Maybe#(Vector::Vector#(4, Tuple2#(Bit#(1), Bit#(128))))} m_cline {width 517}}}} {width 583} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 306 6}}
Struct MMU_Cache_Common::Single_Req {members {{Bool is_read {width 1}} {Bit#(64) addr {width 64}} {Bit#(3) width_code {width 3}} {{Tuple2#(Bit#(1), Bit#(128))} data {width 129}}}} {width 197} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 330 6}}
Struct MMU_Cache_Common::Single_Rsp {members {{Bool ok {width 1}} {{Tuple2#(Bit#(1), Bit#(128))} data {width 129}}}} {width 130} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 338 6}}
Interface {Monitored::Monitored#(type originalIfc, type events_t)} polymorphic {members {{method {originalIfc ifc {} {}}} {interface ReadOnly#(events_t) events {}}}} {position {../libs/BlueStuff/Monitored.bsv 37 11}}
Alias MultiLevelTagLookup::LineTags {Vector::Vector#(4, Bool)} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 47 52}}
Struct MultiLevelTagLookup::CheriTagWrite {members {{{Vector::Vector#(4, Bool)} tags {width 4}} {{Vector::Vector#(4, Bool)} writeEnable {width 4}}}} {width 8} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 51 3}}
Struct MultiLevelTagLookup::CheriTagRequest {members {{{MemTypesCHERI::PhyByteAddress#(40, 8)} addr {width 40}} {{MultiLevelTagLookup::CheriTagRequest_$operation} operation {width 9}}}} {width 49} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 59 3}}

Struct MultiLevelTagLookup::CheriTagResponse {members {{{MultiLevelTagLookup::CheriTagResponse_$tags} tags {width 5}}}} {width 5} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 66 3}}

Interface MultiLevelTagLookup::TagLookupIfc {members {{interface {MasterSlaveCHERI::Slave#(MultiLevelTagLookup::CheriTagRequest, MultiLevelTagLookup::CheriTagResponse)} cache {}} {interface {MasterSlaveCHERI::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} memory {}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 68 11}}
Enum MultiLevelTagLookup::State {members {Init Idle ReadTag SetTag ClearTag FoldZeroes}} {width 3} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 81 66}}
Alias MultiLevelTagLookup::CapsPerLine 4 {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 82 30}}
TaggedUnion MultiLevelTagLookup::TableEntry {members {{Bool Node {width 1}} {{Vector::Vector#(4, Bool)} Leaf {width 4}}}} {width 5} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 87 3}}
Struct MultiLevelTagLookup::TableLvl {members {{{MemTypesCHERI::PhyByteAddress#(40, 8)} startAddr {width 40}} {Integer size} {Integer shiftAmnt} {Integer groupFactor} {Integer groupFactorLog}}} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 95 3}}
Alias MultiLevelTagLookup::TDepth UInt#(2) {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 102 18}}
Enum MultiLevelTagLookup::State {members {Init Idle ReadTag SetTag ClearTag FoldZeroes}} {width 3} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 81 66}}
Alias Near_Mem_IFC::Wd_Id_Dma 6 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 57 13}}
Alias Near_Mem_IFC::Wd_Addr_Dma 64 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 58 13}}
Alias Near_Mem_IFC::Wd_Data_Dma 512 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 59 13}}
Alias Near_Mem_IFC::Wd_AW_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 60 13}}
Alias Near_Mem_IFC::Wd_W_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 61 13}}
Alias Near_Mem_IFC::Wd_B_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 62 13}}
Alias Near_Mem_IFC::Wd_AR_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 63 13}}
Alias Near_Mem_IFC::Wd_R_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 64 13}}
Struct Near_Mem_IFC::EventsCache {members {{Bool evt_LD {width 1}} {Bool evt_LD_MISS {width 1}} {Bool evt_LD_MISS_LAT {width 1}} {Bool evt_ST {width 1}} {Bool evt_ST_MISS {width 1}} {Bool evt_ST_MISS_LAT {width 1}} {Bool evt_AMO {width 1}} {Bool evt_AMO_MISS {width 1}} {Bool evt_AMO_MISS_LAT {width 1}} {Bool evt_TLB {width 1}} {Bool evt_TLB_MISS {width 1}} {Bool evt_TLB_MISS_LAT {width 1}} {Bool evt_TLB_FLUSH {width 1}} {Bool evt_EVICT {width 1}}}} {width 14} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 84 3}}
Interface Near_Mem_IFC::Near_Mem_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {interface Near_Mem_IFC::IMem_IFC imem {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 1, 0, 0, 1)} imem_master {}} {interface Near_Mem_IFC::DMem_IFC dmem {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} mem_master {}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_fence_i {}} {interface {ClientServer::Server#(ISA_Decls::Fence_Ordering, Bit#(0))} server_fence {}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} sfence_vma_server {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 88 11}}
Alias Near_Mem_IFC::Cache_Cap_Tag_Width 1 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 157 37}}
Alias Near_Mem_IFC::Cache_Entry {Tuple2#(Bit#(1), Bit#(128))} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 158 51}}
Interface Near_Mem_IFC::IMem_IFC {members {{method {Action req {Bit#(3) Bit#(64) Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["f3", "addr", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action commit {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool is_i32_not_i16 {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) pc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(32) instr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool exc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(6) exc_code {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) tval {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {StatCounters::EventsL1I events {} {{(* ports = [] *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 169 11}}
Interface Near_Mem_IFC::DMem_IFC {members {{method {Action req {MMU_Cache_Common::CacheOp Bit#(3) Bool Bit#(5) Bit#(64) {Tuple2#(Bool, Bit#(128))} Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["op", "f3", "is_unsigned", "amo_funct5", "addr", "store_value", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action commit {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bool, Bit#(128))} word128 {{(* ports = [] *)} {(* always_ready  *)}}} {method {Bit#(128) st_amo_val {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool exc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(6) exc_code {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {StatCounters::EventsL1D events {} {{(* ports = [] *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 210 11}}
Enum MMU_Cache::Module_State {members {MODULE_PRERESET MODULE_RESETTING MODULE_READY MODULE_RUNNING MODULE_EXCEPTION_RSP PTW_START PTW_LEVEL_2 PTW_LEVEL_1 PTW_LEVEL_0 CACHE_START_REFILL CACHE_REFILL CACHE_REREQ CACHE_ST_AMO_RSP IO_REQ IO_AWAITING_READ_RSP IO_READ_RSP IO_AWAITING_AMO_READ_RSP}} {width 5} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 300 6}}
Interface Near_Mem_IO_AXI4::Near_Mem_IO_AXI4_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action set_addr_map {Bit#(64) Bit#(64)} {{(* ports = ["addr_base", "addr_lim"] *)}}}} {interface {AXI4_Types::AXI4_Slave#(5, 64, 64, 0, 0, 0, 0, 0)} axi4_slave {}} {interface GetPut::Get#(Bool) get_timer_interrupt_req {}} {interface GetPut::Get#(Bool) get_sw_interrupt_req {}}}} {position {../src_Core/Near_Mem_IO/Near_Mem_IO_AXI4.bsv 91 11}}
Typeclass {OneHotArbiter::Arbitrable#(type a)} {members {{{function Bool f(a x1)} isRequesting}}} {instances {OneHotArbiter::Arbitrable#(Bool) OneHotArbiter::Arbitrable#(FIFOF::FIFOF#(t)) OneHotArbiter::Arbitrable#(SourceSink::Source#(t))}} {position {../libs/BlueStuff/OneHotArbiter.bsv 39 11}}
Interface OneHotArbiter::OneHotArbiter {members {{method {ActionValue#(List#(Bool)) next {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/OneHotArbiter.bsv 57 11}}

Interface P2_Core::P2_Core_IFC {members {{interface {AXI4_Types::AXI4_Master_Sig#(5, 64, 64, 0, 0, 0, 0, 0)} master0 {}} {interface {AXI4_Types::AXI4_Master_Sig#(6, 64, 64, 0, 0, 0, 0, 0)} master1 {}} {method {Action interrupt_reqs Bit#(0) {{(* ports = ["cpu_external_interrupt_req"] *)} {(* prefix = "" *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {interface Giraffe_IFC::JTAG_IFC jtag {}}}} {position {src_BSV/P2_Core.bsv 82 11}}
Typeclass {PerformanceMonitor::BitVectorable#(type from, numeric type n, numeric type m)} {dependencies {{from determines (n, m)}}} {members {{{function Vector::Vector#(m, Bit#(n)) f(from x1)} to_vector}}} {instances {{PerformanceMonitor::BitVectorable#(AXI4_Types::AXI4_Events, 1, 7)} {PerformanceMonitor::BitVectorable#(Bit#(n), n, 1)} {PerformanceMonitor::BitVectorable#(CacheCore::EventsCacheCore, 1, 7)} {PerformanceMonitor::BitVectorable#(Vector::Vector#(m, Bit#(n)), n, m)}}} {position {../libs/BlueStuff/PerformanceMonitor.bsv 37 11}}
Interface {PerformanceMonitor::PerfCounters_IFC#(numeric type ctrs, numeric type ctrW, numeric type rptW, numeric type evts)} polymorphic {members {{method {Action send_performance_events {{Vector::Vector#(evts, Bit#(rptW))}} {{(* ports = ["evts"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {{Vector::Vector#(ctrs, ReadOnly#(Bit#(ctrW)))} read_counters {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {{Vector::Vector#(ctrs, ReadOnly#(Bit#(TLog#(evts))))} read_ctr_sels {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface ReadOnly#(Bit#(ctrs)) read_ctr_inhibit {{(* ports = [] *)} {(* always_ready  *)}}} {interface ReadOnly#(Bit#(ctrs)) read_ctr_overflow {{(* ports = [] *)} {(* always_ready  *)}}} {method {Action write_counter {Bit#(TLog#(ctrs)) Bit#(ctrW)} {{(* ports = ["idx", "val"] *)} {(* always_ready  *)}}}} {method {Action write_ctr_sel {Bit#(TLog#(ctrs)) Bit#(TLog#(evts))} {{(* ports = ["idx", "val"] *)} {(* always_ready  *)}}}} {method {Action write_ctr_inhibit Bit#(ctrs) {{(* ports = ["val"] *)} {(* always_ready  *)}}}}}} {position {../libs/BlueStuff/PerformanceMonitor.bsv 72 11}}
Alias PLIC::T_wd_source_id 10 {position {../src_Core/PLIC/PLIC.bsv 61 14}}
Alias PLIC::T_wd_target_id 5 {position {../src_Core/PLIC/PLIC.bsv 62 14}}
Interface PLIC::PLIC_Source_IFC {members {{method {Action m_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {../src_Core/PLIC/PLIC.bsv 70 11}}
Interface PLIC::PLIC_Target_IFC {members {{method {Bool m_eip {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/PLIC/PLIC.bsv 78 11}}
Interface {PLIC::PLIC_IFC#(numeric type t_n_external_sources, numeric type t_n_targets, numeric type t_max_priority)} polymorphic {members {{method {Action set_verbosity Bit#(4) {{(* ports = ["verbosity"] *)}}}} {method {Action show_PLIC_state {} {{(* ports = [] *)}}}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action set_addr_map {Bit#(64) Bit#(64)} {{(* ports = ["addr_base", "addr_lim"] *)}}}} {interface {AXI4_Types::AXI4_Slave#(5, 64, 64, 0, 0, 0, 0, 0)} axi4_slave {}} {method {{Vector::Vector#(t_n_external_sources, PLIC::PLIC_Source_IFC)} v_sources {} {}}} {method {{Vector::Vector#(t_n_targets, PLIC::PLIC_Target_IFC)} v_targets {} {}}}}} {position {../src_Core/PLIC/PLIC.bsv 86 11}}
Alias PLIC_16_2_7::PLIC_N_Targets 2 {position {../src_Core/PLIC/PLIC_16_2_7.bsv 27 13}}
Alias PLIC_16_2_7::PLIC_Max_Priority 7 {position {../src_Core/PLIC/PLIC_16_2_7.bsv 28 13}}
Alias PLIC_16_2_7::PLIC_IFC_16_2_7 {PLIC::PLIC_IFC#(0, 2, 7)} {position {../src_Core/PLIC/PLIC_16_2_7.bsv 32 52}}
Interface RISCV_MBox::RISCV_MBox_IFC {members {{method {Action set_verbosity Bit#(4) {{(* ports = ["verbosity"] *)}}}} {method {Action req_reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(0)) rsp_reset {} {{(* ports = [] *)}}}} {method {Action req {Bool Bit#(3) Bit#(64) Bit#(64)} {{(* ports = ["is_OP_not_OP_32", "f3", "v1", "v2"] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) word {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/RISCV_MBox.bsv 36 11}}
Enum MultiLevelTagLookup::State {members {Init Idle ReadTag SetTag ClearTag FoldZeroes}} {width 3} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 81 66}}
Typeclass {Routable::Has_routingField#(type t, type r_t)} {dependencies {{t determines r_t}}} {members {{{function r_t f(t x1)} routingField}}} {instances {{Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(Routable::WithMetaInfo#(t, m_t), r_t)   provisos (Routable::Has_routingField#(t, r_t))} {Routable::Has_routingField#(Routable::WithRouteInfo#(t, r_t), r_t)}}} {position {../libs/BlueStuff/Routable.bsv 46 11}}
Typeclass {Routable::Has_isLast#(type t)} {members {{{function Bool f(t x1)} isLast}}} {instances {{Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_BFlit#(id_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(Routable::WithMetaInfo#(t, m_t))   provisos (Routable::Has_isLast#(t))} {Routable::Has_isLast#(Routable::WithRouteInfo#(t, r_t))   provisos (Routable::Has_isLast#(t))}}} {position {../libs/BlueStuff/Routable.bsv 50 11}}
Typeclass {Routable::Routable#(type f_t, type r_t)} {superclasses {{Routable::Has_routingField#(f_t, r_t)} Routable::Has_isLast#(f_t)}} {dependencies {{f_t determines r_t}}} {members {}} {instances {{Routable::Routable#(a, b)   provisos (Routable::Has_isLast#(a), Routable::Has_routingField#(a, b))}}} {position {../libs/BlueStuff/Routable.bsv 54 11}}
Typeclass {Routable::FallibleRoute#(type req_t, type rsp_t)} {members {{{a#(MasterSlave::Slave#(req_t, rsp_t))   provisos (IsModule#(a, b))} mkNoRouteSlave}}} {instances {{Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} {Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), AXI4Lite_Types::AXI4Lite_BFlit#(buser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_), down_t))   provisos (Bits#(down_t, down_t_sz))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_), down_t))   provisos (Bits#(down_t, down_t_sz))}}} {position {../libs/BlueStuff/Routable.bsv 72 11}}
Typeclass {Routable::ExpandableReqRsp#(type req_t, type req_fat_t, type rsp_fat_t, type rsp_t, numeric type n_masters)} {dependencies {{(req_t, req_fat_t) determines (rsp_fat_t, rsp_t, n_masters)} {rsp_fat_t determines (req_t, req_fat_t, rsp_t, n_masters)} {(rsp_fat_t, rsp_t) determines (req_t, req_fat_t, n_masters)}}} {members {{{function req_fat_t f(Bit#(TLog#(n_masters)) x1, req_t x2)} expand} {{function Tuple2#(Bit#(TLog#(n_masters)), rsp_t) f(rsp_fat_t x1)} shrink}}} {instances {{Routable::ExpandableReqRsp#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_), AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_), AXI4_Types::AXI4_RFlit#(id_, data_, ruser_), n)   provisos (Add#(id_, TLog#(n), sid_))} {Routable::ExpandableReqRsp#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_), AXI4_Types::AXI4_BFlit#(id_, buser_), n)   provisos (Add#(id_, TLog#(n), sid_))}}} {position {../libs/BlueStuff/Routable.bsv 88 11}}
Struct {Routable::WithRouteInfo#(type t, type r_t)} polymorphic {members {{t payload} {r_t routeInfo}}} {position {../libs/BlueStuff/Routable.bsv 110 3}}
Struct {Routable::WithMetaInfo#(type t, type m_t)} polymorphic {members {{t payload} {m_t metaInfo}}} {position {../libs/BlueStuff/Routable.bsv 123 3}}
Struct {Routable::Range#(numeric type n)} polymorphic {members {{Bit#(n) base} {Bit#(n) size}}} {position {../libs/BlueStuff/Routable.bsv 145 3}}
Alias {Routable::MappingTable#(numeric type n, numeric type a)} {Vector::Vector#(n, Routable::Range#(a))} {position {../libs/BlueStuff/Routable.bsv 155 33}}
Typeclass {RoutableCHERI::RoutableCHERI#(type a, numeric type width)} {dependencies {{a determines width}}} {members {{{function UInt#(width) f(a x1)} getRoutingField} {{function Bool f(a x1)} getLastField}}} {instances {{RoutableCHERI::RoutableCHERI#(MemTypesCHERI::MemoryRequest#(a, b, c, d), r_width)   provisos (Bits#(a, r_width))} {RoutableCHERI::RoutableCHERI#(MemTypesCHERI::MemoryResponse#(a, b, c), r_width)   provisos (Bits#(a, r_width))}}} {position {../libs/TagController/TagController/RoutableCHERI.bsv 31 11}}
Interface {Semi_FIFOF::FIFOF_I#(type t)} polymorphic {members {{method {Action enq t {{(* ports = ["x"] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 20 11}}
Interface {Semi_FIFOF::FIFOF_O#(type t)} polymorphic {members {{method {t first {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 25 11}}
Typeclass {Semi_FIFOF::To_FIFOF_IO#(type tf, type t)} {dependencies {{tf determines t}}} {members {{{function Semi_FIFOF::FIFOF_I#(t) f(tf x1)} to_FIFOF_I} {{function Semi_FIFOF::FIFOF_O#(t) f(tf x1)} to_FIFOF_O}}} {instances {{Semi_FIFOF::To_FIFOF_IO#(FIFOF::FIFOF#(t), t)} {Semi_FIFOF::To_FIFOF_IO#(FIFOLevel::FIFOLevelIfc#(t, n), t)}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 34 11}}
Interface {Semi_FIFOF::Client_Semi_FIFOF#(type req_t, type rsp_t)} polymorphic {members {{interface Semi_FIFOF::FIFOF_O#(req_t) request {}} {interface Semi_FIFOF::FIFOF_I#(rsp_t) response {}}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 193 11}}
Interface {Semi_FIFOF::Server_Semi_FIFOF#(type req_t, type rsp_t)} polymorphic {members {{interface Semi_FIFOF::FIFOF_I#(req_t) request {}} {interface Semi_FIFOF::FIFOF_O#(rsp_t) response {}}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 198 11}}
