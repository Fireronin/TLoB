Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4Lite_Types::AXI4Lite_AWFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) awaddr} {Bit#(3) awprot {width 3}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 52 3}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["awvalid", "awaddr", "awprot", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 86 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 130 3}}
Interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 161 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_BFlit#(numeric type user_)} polymorphic {members {{AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 204 3}}
Interface {AXI4Lite_Types::AXI4Lite_B_Master_Sig#(numeric type user_)} polymorphic {members {{method {Action bflit {Bool AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 214 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(numeric type user_)} polymorphic {members {{method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 230 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_ARFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) araddr} {Bit#(3) arprot {width 3}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 273 3}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["arvalid", "araddr", "arprot", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 307 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_RFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 351 3}}
Interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(data_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["rvalid", "rdata", "rresp", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 362 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 379 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_Master#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 421 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 452 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} masterSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 490 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 519 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 550 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slaveSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 588 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 617 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 634 11}}
Struct {AXI4Lite_Types::AXI4Lite_WriteFlit#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)} aw} {{AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)} w}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 712 3}}
Typeclass {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) f(t x1)} toAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)} {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) x1)} fromAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 68 11}}
Typeclass {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) f(t x1)} toAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)} {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) x1)} fromAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 68 11}}
Typeclass {AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_BFlit#(user_) f(t x1)} toAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 51 11}}
Typeclass {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_BFlit#(user_) x1)} fromAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)} {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(MemTypes::MemRsp#(data_t), user_sz)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 59 11}}
Typeclass {AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) f(t x1)} toAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 56 11}}
Typeclass {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) x1)} fromAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)} {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(MemTypes::MemRsp#(data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 64 11}}
Typeclass {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) f(t x1)} toAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)} {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(MemTypes::MemReq#(addr_t, data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 62 11}}
Typeclass {AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) x1)} fromAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 70 11}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}
Typeclass {AXI4_AR_Utils::ToAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) f(t x1)} toAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::ToAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 94 11}}
Typeclass {AXI4_AR_Utils::FromAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) x1)} fromAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::FromAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 105 11}}
Typeclass {AXI4_AW_Utils::ToAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) f(t x1)} toAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::ToAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 94 11}}
Typeclass {AXI4_AW_Utils::FromAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) x1)} fromAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::FromAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 105 11}}
Typeclass {AXI4_B_Utils::ToAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function AXI4_Types::AXI4_BFlit#(id_, user_) f(t x1)} toAXI4_BFlit}}} {instances {{AXI4_B_Utils::ToAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 62 11}}
Typeclass {AXI4_B_Utils::FromAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_BFlit#(id_, user_) x1)} fromAXI4_BFlit}}} {instances {{AXI4_B_Utils::FromAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 70 11}}
Typeclass {AXI4_R_Utils::ToAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_RFlit#(id_, data_, user_) f(t x1)} toAXI4_RFlit}}} {instances {{AXI4_R_Utils::ToAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 76 11}}
Typeclass {AXI4_R_Utils::FromAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_RFlit#(id_, data_, user_) x1)} fromAXI4_RFlit}}} {instances {{AXI4_R_Utils::FromAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 87 11}}
Typeclass {AXI4_W_Utils::ToAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_WFlit#(data_, user_) f(t x1)} toAXI4_WFlit}}} {instances {{AXI4_W_Utils::ToAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 65 11}}
Typeclass {AXI4_W_Utils::FromAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_WFlit#(data_, user_) x1)} fromAXI4_WFlit}}} {instances {{AXI4_W_Utils::FromAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 73 11}}
Enum AXI4_Utils::SerialiserState {members {IDLE BURST_WRITE WAITING}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 437 43}}
Enum AXI4_Utils::ReadSplitOption {members {COMBINE PAD_FIRST PAD_LAST}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 1042 47}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}
Typeclass {AXI4_AR_Utils::ToAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) f(t x1)} toAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::ToAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 94 11}}
Typeclass {AXI4_AR_Utils::FromAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) x1)} fromAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::FromAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 105 11}}
Typeclass {AXI4_AW_Utils::ToAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) f(t x1)} toAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::ToAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 94 11}}
Typeclass {AXI4_AW_Utils::FromAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) x1)} fromAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::FromAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 105 11}}
Typeclass {AXI4_B_Utils::ToAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function AXI4_Types::AXI4_BFlit#(id_, user_) f(t x1)} toAXI4_BFlit}}} {instances {{AXI4_B_Utils::ToAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 62 11}}
Typeclass {AXI4_B_Utils::FromAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_BFlit#(id_, user_) x1)} fromAXI4_BFlit}}} {instances {{AXI4_B_Utils::FromAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 70 11}}
Typeclass {AXI4_R_Utils::ToAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_RFlit#(id_, data_, user_) f(t x1)} toAXI4_RFlit}}} {instances {{AXI4_R_Utils::ToAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 76 11}}
Typeclass {AXI4_R_Utils::FromAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_RFlit#(id_, data_, user_) x1)} fromAXI4_RFlit}}} {instances {{AXI4_R_Utils::FromAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 87 11}}
Typeclass {AXI4_W_Utils::ToAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_WFlit#(data_, user_) f(t x1)} toAXI4_WFlit}}} {instances {{AXI4_W_Utils::ToAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 65 11}}
Typeclass {AXI4_W_Utils::FromAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_WFlit#(data_, user_) x1)} fromAXI4_WFlit}}} {instances {{AXI4_W_Utils::FromAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 73 11}}
Enum AXI4_Utils::SerialiserState {members {IDLE BURST_WRITE WAITING}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 437 43}}
Enum AXI4_Utils::ReadSplitOption {members {COMBINE PAD_FIRST PAD_LAST}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 1042 47}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4Lite_Types::AXI4Lite_AWFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) awaddr} {Bit#(3) awprot {width 3}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 52 3}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["awvalid", "awaddr", "awprot", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 86 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 130 3}}
Interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 161 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_BFlit#(numeric type user_)} polymorphic {members {{AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 204 3}}
Interface {AXI4Lite_Types::AXI4Lite_B_Master_Sig#(numeric type user_)} polymorphic {members {{method {Action bflit {Bool AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 214 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(numeric type user_)} polymorphic {members {{method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 230 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_ARFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) araddr} {Bit#(3) arprot {width 3}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 273 3}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["arvalid", "araddr", "arprot", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 307 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_RFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 351 3}}
Interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(data_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["rvalid", "rdata", "rresp", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 362 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 379 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_Master#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 421 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 452 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} masterSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 490 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 519 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 550 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slaveSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 588 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 617 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 634 11}}
Struct {AXI4Lite_Types::AXI4Lite_WriteFlit#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)} aw} {{AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)} w}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 712 3}}
Typeclass {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) f(t x1)} toAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)} {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) x1)} fromAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 68 11}}
Typeclass {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) f(t x1)} toAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)} {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) x1)} fromAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 68 11}}
Typeclass {AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_BFlit#(user_) f(t x1)} toAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 51 11}}
Typeclass {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_BFlit#(user_) x1)} fromAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)} {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(MemTypes::MemRsp#(data_t), user_sz)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 59 11}}
Typeclass {AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) f(t x1)} toAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 56 11}}
Typeclass {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) x1)} fromAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)} {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(MemTypes::MemRsp#(data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 64 11}}
Typeclass {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) f(t x1)} toAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)} {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(MemTypes::MemReq#(addr_t, data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 62 11}}
Typeclass {AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) x1)} fromAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 70 11}}
Typeclass {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) f(t x1)} toAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)} {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) x1)} fromAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 68 11}}
Typeclass {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) f(t x1)} toAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)} {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) x1)} fromAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 68 11}}
Typeclass {AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_BFlit#(user_) f(t x1)} toAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 51 11}}
Typeclass {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_BFlit#(user_) x1)} fromAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)} {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(MemTypes::MemRsp#(data_t), user_sz)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 59 11}}

Typeclass {AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) f(t x1)} toAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 56 11}}
Typeclass {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) x1)} fromAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)} {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(MemTypes::MemRsp#(data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 64 11}}
Struct {AXI4Lite_Types::AXI4Lite_AWFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) awaddr} {Bit#(3) awprot {width 3}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 52 3}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["awvalid", "awaddr", "awprot", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 86 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 130 3}}
Interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 161 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_BFlit#(numeric type user_)} polymorphic {members {{AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 204 3}}
Interface {AXI4Lite_Types::AXI4Lite_B_Master_Sig#(numeric type user_)} polymorphic {members {{method {Action bflit {Bool AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 214 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(numeric type user_)} polymorphic {members {{method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 230 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_ARFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) araddr} {Bit#(3) arprot {width 3}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 273 3}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["arvalid", "araddr", "arprot", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 307 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_RFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 351 3}}
Interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(data_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["rvalid", "rdata", "rresp", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 362 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 379 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_Master#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 421 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 452 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} masterSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 490 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 519 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 550 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slaveSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 588 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 617 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 634 11}}
Struct {AXI4Lite_Types::AXI4Lite_WriteFlit#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)} aw} {{AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)} w}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 712 3}}

Typeclass {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) f(t x1)} toAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)} {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(MemTypes::MemReq#(addr_t, data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 62 11}}
Typeclass {AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) x1)} fromAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 70 11}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4Stream_Types::AXI4Stream_Flit#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{Bit#(data_) tdata} {{Bit#(TDiv#(data_, 8))} tstrb} {{Bit#(TDiv#(data_, 8))} tkeep} {Bool tlast {width 1}} {Bit#(id_) tid} {Bit#(dest_) tdest} {Bit#(user_) tuser}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 55 3}}
Interface {AXI4Stream_Types::AXI4Stream_Master_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Bit#(data_) tdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tstrb {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tkeep {} {{(* ports = [] *)}}}} {method {Bool tlast {} {{(* ports = [] *)}}}} {method {Bit#(id_) tid {} {{(* ports = [] *)}}}} {method {Bit#(dest_) tdest {} {{(* ports = [] *)}}}} {method {Bit#(user_) tuser {} {{(* ports = [] *)}}}} {method {Bool tvalid {} {{(* ports = [] *)}}}} {method {Action tready Bool {{(* ports = ["tready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 62 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Stream_Types::AXI4Stream_Slave_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action tflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} {Bit#(TDiv#(data_, 8))} Bool Bit#(id_) Bit#(dest_) Bit#(user_)} {{(* ports = ["tvalid", "tdata", "tstrb", "tkeep", "tlast", "tid", "tdest", "tuser"] *)} {(* prefix = "" *)}}}} {method {Bool tready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 78 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Alias {AXI4Stream_Types::AXI4Stream_Master#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 94 9}}
Alias {AXI4Stream_Types::AXI4Stream_Slave#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 100 9}}
Interface {AXI4Stream_Types::AXI4Stream_Shim#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} master {}} {interface {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 114 11}}
Typeclass {AXI4Stream_Utils::ToAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) f(t x1)} toAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::ToAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 63 11}}
Typeclass {AXI4Stream_Utils::FromAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function t f(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) x1)} fromAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::FromAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 76 11}}
Struct {AXI4Stream_Types::AXI4Stream_Flit#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{Bit#(data_) tdata} {{Bit#(TDiv#(data_, 8))} tstrb} {{Bit#(TDiv#(data_, 8))} tkeep} {Bool tlast {width 1}} {Bit#(id_) tid} {Bit#(dest_) tdest} {Bit#(user_) tuser}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 55 3}}
Interface {AXI4Stream_Types::AXI4Stream_Master_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Bit#(data_) tdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tstrb {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tkeep {} {{(* ports = [] *)}}}} {method {Bool tlast {} {{(* ports = [] *)}}}} {method {Bit#(id_) tid {} {{(* ports = [] *)}}}} {method {Bit#(dest_) tdest {} {{(* ports = [] *)}}}} {method {Bit#(user_) tuser {} {{(* ports = [] *)}}}} {method {Bool tvalid {} {{(* ports = [] *)}}}} {method {Action tready Bool {{(* ports = ["tready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 62 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Stream_Types::AXI4Stream_Slave_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action tflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} {Bit#(TDiv#(data_, 8))} Bool Bit#(id_) Bit#(dest_) Bit#(user_)} {{(* ports = ["tvalid", "tdata", "tstrb", "tkeep", "tlast", "tid", "tdest", "tuser"] *)} {(* prefix = "" *)}}}} {method {Bool tready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 78 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Alias {AXI4Stream_Types::AXI4Stream_Master#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 94 9}}
Alias {AXI4Stream_Types::AXI4Stream_Slave#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 100 9}}
Interface {AXI4Stream_Types::AXI4Stream_Shim#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} master {}} {interface {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 114 11}}
Typeclass {AXI4Stream_Utils::ToAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) f(t x1)} toAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::ToAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 63 11}}
Typeclass {AXI4Stream_Utils::FromAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function t f(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) x1)} fromAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::FromAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 76 11}}
Typeclass {AXI4_AR_Utils::ToAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) f(t x1)} toAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::ToAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 94 11}}
Typeclass {AXI4_AR_Utils::FromAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) x1)} fromAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::FromAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 105 11}}
Typeclass {AXI4_AW_Utils::ToAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) f(t x1)} toAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::ToAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 94 11}}
Typeclass {AXI4_AW_Utils::FromAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) x1)} fromAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::FromAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 105 11}}

Typeclass {AXI4_B_Utils::ToAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function AXI4_Types::AXI4_BFlit#(id_, user_) f(t x1)} toAXI4_BFlit}}} {instances {{AXI4_B_Utils::ToAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 62 11}}
Typeclass {AXI4_B_Utils::FromAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_BFlit#(id_, user_) x1)} fromAXI4_BFlit}}} {instances {{AXI4_B_Utils::FromAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 70 11}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}



Typeclass {AXI4_R_Utils::ToAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_RFlit#(id_, data_, user_) f(t x1)} toAXI4_RFlit}}} {instances {{AXI4_R_Utils::ToAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 76 11}}
Typeclass {AXI4_R_Utils::FromAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_RFlit#(id_, data_, user_) x1)} fromAXI4_RFlit}}} {instances {{AXI4_R_Utils::FromAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 87 11}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}
Enum AXI4_Utils::SerialiserState {members {IDLE BURST_WRITE WAITING}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 437 43}}
Enum AXI4_Utils::ReadSplitOption {members {COMBINE PAD_FIRST PAD_LAST}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 1042 47}}
Typeclass {AXI4_W_Utils::ToAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_WFlit#(data_, user_) f(t x1)} toAXI4_WFlit}}} {instances {{AXI4_W_Utils::ToAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 65 11}}
Typeclass {AXI4_W_Utils::FromAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_WFlit#(data_, user_) x1)} fromAXI4_WFlit}}} {instances {{AXI4_W_Utils::FromAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 73 11}}
Struct {AXI_Helpers::WriteReqFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type tag_)} polymorphic {members {{{AXI4_Types::AXI4_AWFlit#(id_, addr_, 0)} aw} {{AXI4_Types::AXI4_WFlit#(data_, tag_)} w}}} {position {../libs/TagController/TagController/AXI_Helpers.bsv 37 3}}
TaggedUnion {AXI_Helpers::ReqFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type tag_)} polymorphic {members {{{AXI_Helpers::WriteReqFlit#(id_, addr_, data_, tag_)} Write} {{AXI4_Types::AXI4_ARFlit#(id_, addr_, 0)} Read}}} {position {../libs/TagController/TagController/AXI_Helpers.bsv 43 3}}
TaggedUnion {AXI_Helpers::RspFlit#(numeric type id_, numeric type data_, numeric type tag_)} polymorphic {members {{{AXI4_Types::AXI4_BFlit#(id_, 0)} Write} {{AXI4_Types::AXI4_RFlit#(id_, data_, tag_)} Read}}} {position {../libs/TagController/TagController/AXI_Helpers.bsv 52 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}
TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {AXI_Helpers::DRAMReq#(numeric type id_, numeric type addr_)} {AXI_Helpers::ReqFlit#(id_, addr_, 64, 0)} {position {../libs/TagController/TagController/AXI_Helpers.bsv 61 58}}
Alias {AXI_Helpers::DRAMRsp#(numeric type id_)} {AXI_Helpers::RspFlit#(id_, 64, 0)} {position {../libs/TagController/TagController/AXI_Helpers.bsv 62 58}}
Struct {Bag::Entry#(type keyType, type datType)} polymorphic {members {{keyType key} {datType dat}}} {position {../libs/TagController/TagController/CacheCore/Bag.bsv 46 3}}
Interface {Bag::Bag#(numeric type numElems, type keyType, type datType)} polymorphic {members {{method {VnD::VnD#(datType) isMember keyType {{(* ports = ["x"] *)}}}} {method {Bool dataMatch datType {{(* ports = ["x"] *)}}}} {method {Action insert {keyType datType} {{(* ports = ["x", "d"] *)}}}} {method {Action update {keyType datType} {{(* ports = ["x", "d"] *)}}}} {method {Bool full {} {{(* ports = [] *)}}}} {method {Bool nextFull {} {{(* ports = [] *)}}}} {method {Bool empty {} {{(* ports = [] *)}}}} {method {Action remove keyType {{(* ports = ["x"] *)}}}} {method {VnD::VnD#(keyType) nextKey {} {{(* ports = [] *)}}}} {method {VnD::VnD#(datType) nextData {} {{(* ports = [] *)}}}} {method {Action iterateNext {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/Bag.bsv 48 11}}
Interface {Bag::FFBag#(numeric type numElems, type keyType, type datType, numeric type depth)} polymorphic {members {{method {Action enq {keyType datType} {{(* ports = ["x", "d"] *)}}}} {method {VnD::VnD#(datType) first keyType {{(* ports = ["x"] *)}}}} {method {Action deq keyType {{(* ports = ["x"] *)}}}} {method {Bool full {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/Bag.bsv 172 11}}
Typeclass {SimUtils::PrintLog#(type a)} {members {{{function Action f(a x1)} printLog} {{function Action f(a x1)} printTLog} {{function Action f(String x1, a x2)} printLogPlusArgs} {{function Action f(String x1, a x2)} printTLogPlusArgs} {{function Action f(String x1, a x2)} printPlusArgs} {{function Action f(String x1, a x2)} printTPlusArgs}}} {instances {SimUtils::PrintLog#(Fmt) SimUtils::PrintLog#(String)}} {position {../libs/BlueStuff/BlueUtils/SimUtils.bsv 44 11}}
Interface {SimpleUtils::ArchReg#(type t)} polymorphic {members {{method {t _read {} {{(* ports = [] *)}}}} {method {Action _write t {{(* ports = ["x"] *)}}}} {interface WriteOnly#(t) early {}} {interface Reg#(t) late {}} {method {Bool needCommit {} {{(* ports = [] *)}}}} {method {t commitVal {} {{(* ports = [] *)}}}} {method {Action commit {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/SimpleUtils.bsv 46 11}}
Interface {SimpleUtils::ArchRegFile#(numeric type n, type a)} polymorphic {members {{method {{Vector::Vector#(n, SimpleUtils::ArchReg#(a))} r {} {}}} {method {Action commit {} {{(* ports = [] *)}}}} {method {Bit#(TLog#(n)) rd_idx {} {{(* ports = [] *)}}}} {method {a rd_old_val {} {{(* ports = [] *)}}}} {method {a rd_new_val {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/SimpleUtils.bsv 86 11}}
Struct {MemTypes::BitPO#(numeric type n)} polymorphic {members {{Bit#(n) val}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 50 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}


TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {MemTypes::Mem#(type addr_t, type data_t)} {MasterSlave::Slave#(MemTypes::MemReq#(addr_t, data_t), MemTypes::MemRsp#(data_t))} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 196 3}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {MemBRAM::BRAM2#(numeric type a0w, numeric type d0w, numeric type a1w, numeric type d1w)} polymorphic {members {{interface {MemBRAM::BRAM#(a0w, d0w)} p0 {}} {interface {MemBRAM::BRAM#(a1w, d1w)} p1 {}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 51 11}}
Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}
Interface {FF::FF#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 64 11}}
Interface {FF::FFNext#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {data next {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool nextNotEmpty {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 74 11}}
Interface Branch_Predictor::Branch_Predictor_IFC {members {{method {Action reset {} {{(* ports = [] *)}}}} {method {Action predict_req Bit#(64) {{(* ports = ["pc"] *)}}}} {method {Bit#(64) predict_rsp {Bool Bit#(32)} {{(* ports = ["is_i32_not_i16", "instr"] *)} {(* always_ready  *)}}}} {method {Action bp_train {Bit#(64) Bool Bit#(32) CPU_Globals::CF_Info} {{(* ports = ["pc", "is_i32_not_i16", "instr", "cf_info"] *)}}}}}} {position {../src_Core/CPU/Branch_Predictor.bsv 38 11}}
Alias Branch_Predictor::BTB_Num_Sets 512 {position {../src_Core/CPU/Branch_Predictor.bsv 70 15}}
Alias Branch_Predictor::BTB_Index_Sz 9 {position {../src_Core/CPU/Branch_Predictor.bsv 76 31}}
Alias Branch_Predictor::BTB_Index Bit#(9) {position {../src_Core/CPU/Branch_Predictor.bsv 79 55}}
Alias Branch_Predictor::BTB_Tag Bit#(54) {position {../src_Core/CPU/Branch_Predictor.bsv 81 55}}
Alias Branch_Predictor::Word_Addr Bit#(63) {position {../src_Core/CPU/Branch_Predictor.bsv 101 32}}
Struct Branch_Predictor::BTB_Entry {members {{Bool valid {width 1}} {Bit#(54) pc_tag {width 54}} {Bit#(63) predicted_pc {width 63}}}} {width 118} {position {../src_Core/CPU/Branch_Predictor.bsv 107 6}}
Alias Branch_Predictor::RAS_Capacity 16 {position {../src_Core/CPU/Branch_Predictor.bsv 113 14}}

Struct CacheCorderer::TransRecord {members {{Bool ongoing {width 1}} {MemTypesCHERI::ReqId id {width 6}} {UInt#(2) first {width 2}} {UInt#(2) last {width 2}} {UInt#(2) next {width 2}}}} {width 13} {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 44 3}}
Struct CacheCorderer::ReqRec {members {{MemTypesCHERI::ReqId id {width 6}} {Bit#(35) line {width 35}} {UInt#(2) first {width 2}} {UInt#(2) last {width 2}} {VnD::VnD#(MemTypesCHERI::ReqId) idBeforeMe {width 7}}}} {width 52} {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 60 3}}
Alias CacheCorderer::Masters 2 {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 62 29}}
Interface {CacheCorderer::CacheCorderer#(numeric type inFlight)} polymorphic {members {{method {Bool reqsEmpty {} {{(* ports = [] *)}}}} {method {Bool reqsFull {} {{(* ports = [] *)}}}} {method {Bool lookupCheckId MemTypesCHERI::ReqId {{(* ports = ["id"] *)}}}} {method {Bool lookupIsOngoing {} {{(* ports = [] *)}}}} {method {UInt#(2) lookupFlit {MemTypesCHERI::ReqId UInt#(2)} {{(* ports = ["id", "original"] *)}}}} {method {Action lookupReport {MemTypesCHERI::ReqId UInt#(2) UInt#(2) UInt#(2)} {{(* ports = ["id", "flit", "first", "last"] *)}}}} {method {Action slaveReq {MemTypesCHERI::ReqId Bit#(35) UInt#(2) UInt#(2)} {{(* ports = ["id", "line", "first", "last"] *)}}}} {method {Bool slaveReqServeReady {MemTypesCHERI::ReqId Bit#(35)} {{(* ports = ["id", "line"] *)}}}} {method {ActionValue#(Bool) slaveReqExecuteReady {MemTypesCHERI::ReqId UInt#(2)} {{(* ports = ["id", "flit"] *)}}}} {method {Bool slaveRspIsOngoing {} {{(* ports = [] *)}}}} {method {Bool slaveRspLast {MemTypesCHERI::ReqId UInt#(2)} {{(* ports = ["id", "flit"] *)}}}} {method {Action slaveRsp {MemTypesCHERI::ReqId Bool} {{(* ports = ["id", "last"] *)}}}} {method {Bool mastReqsEmpty {} {{(* ports = [] *)}}}} {method {Bool mastReqsFull {} {{(* ports = [] *)}}}} {method {Bit#(5) mastReqsSpaces {} {{(* ports = [] *)}}}} {method {Bit#(5) mastNextId {} {{(* ports = [] *)}}}} {method {Bool mastCheckId MemTypesCHERI::ReqId {{(* ports = ["id"] *)}}}} {method {Action mastReq {MemTypesCHERI::ReqId UInt#(2) UInt#(2) Bit#(35) Bool} {{(* ports = ["id", "first", "last", "line", "read"] *)}}}} {method {Action mastRsp {MemTypesCHERI::ReqId Bool Bool} {{(* ports = ["id", "read", "last"] *)}}}} {method {UInt#(2) nextMastRspFlit {MemTypesCHERI::ReqId Bool} {{(* ports = ["id", "read"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 80 11}}
Interface {CacheCore::CacheCore#(numeric type ways, numeric type keyBits, numeric type inFlight)} polymorphic {members {{method {Bool canPut {} {{(* ports = [] *)}}}} {method {Action put {{MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)}} {{(* ports = ["req"] *)}}}} {interface {MasterSlaveCHERI::CheckedGet#(MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} response {{(* ports = [] *)}}} {method {Action nextWillCommit Bool {{(* ports = ["nextCommitting"] *)}}}} {method {Action invalidate {{MemTypesCHERI::PhyByteAddress#(40, 8)}} {{(* ports = ["addr"] *)}}}} {method {ActionValue#(Bool) invalidateDone {} {{(* ports = [] *)}}}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 79 11}}
Alias {CacheCore::Tag#(numeric type tagBits)} Bit#(tagBits) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 96 23}}
Alias {CacheCore::Key#(numeric type keyBits)} Bit#(keyBits) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 97 23}}
Alias CacheCore::Offset Bit#(3) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 98 28}}
Struct {CacheCore::CacheAddress#(numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bit#(tagBits) tag} {Bit#(keyBits) key} {UInt#(2) bank {width 2}} {Bit#(3) offset {width 3}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 104 3}}
Alias {CacheCore::Way#(numeric type ways)} Bit#(TLog#(ways)) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 105 27}}
Struct {CacheCore::DataKey#(numeric type ways, numeric type keyBits)} polymorphic {members {{Bit#(keyBits) key} {UInt#(2) bank {width 2}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 110 3}}
Struct CacheCore::CacheCommit {members {{Bit#(5) id {width 5}} {Bool commit {width 1}}}} {width 6} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 115 3}}
Alias CacheCore::LineCapTags {Vector::Vector#(4, Vector::Vector#(1, Bool))} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 118 35}}
Struct {CacheCore::TagLine#(numeric type tagBits)} polymorphic {members {{Bit#(tagBits) tag} {Bool dirty {width 1}} {{Vector::Vector#(8, Bool)} valid {width 8}} {Bool pendMem {width 1}} {{Vector::Vector#(4, Vector::Vector#(1, Bool))} capTags {width 4}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 129 3}}
Enum CacheCore::CacheState {members {Init Serving}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 142 30}}
Enum CacheCore::LookupCommand {members {Serve Writeback MemResponse}} {width 2} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 143 46}}
Enum CacheCore::WriteMissBehaviour {members {WriteThrough WriteAllocate}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 145 46}}
Enum CacheCore::ResponseBehaviour {members {OnlyReadResponses RespondAll}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 146 46}}
Enum CacheCore::OrderBehaviour {members {InOrder OutOfOrder}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 147 36}}
Struct {CacheCore::AddrTagWay#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{{CacheCore::CacheAddress#(keyBits, tagBits)} addr} {CacheCore::TagLine#(tagBits) tag} {Bit#(TLog#(ways)) way} {Bool cached {width 1}} {MemTypesCHERI::ReqId reqId {width 6}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 155 3}}
Struct {CacheCore::InvalidateToken#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bit#(tagBits) tag} {Bit#(keyBits) key} {Bit#(TLog#(ways)) way} {Bool valid {width 1}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 162 3}}
Struct {CacheCore::ControlToken#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{CacheCore::LookupCommand command {width 2}} {{MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} req {width 141}} {{CacheCore::CacheAddress#(keyBits, tagBits)} addr} {MemTypesCHERI::BytesPerFlit readWidth {width 3}} {{CacheCore::DataKey#(ways, keyBits)} dataKey} {Bit#(TLog#(ways)) way} {Bool last {width 1}} {Bool fresh {width 1}} {{CacheCore::InvalidateToken#(ways, keyBits, tagBits)} invalidate} {CacheCore::TagLine#(tagBits) writebackTag} {MemTypesCHERI::Error rspError {width 2}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 176 3}}
Struct CacheCore::ResponseToken {members {{{MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64)} resp {width 77}} {{MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} req {width 141}} {MemTypesCHERI::ReqId rspId {width 6}} {Bool reportResponse {width 1}} {MemTypesCHERI::ReqId deqId {width 6}} {Bool deqReqCommits {width 1}} {Bool enqRetryReq {width 1}}}} {width 233} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 186 3}}
Struct {CacheCore::RequestRecord#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bit#(keyBits) key} {MemTypesCHERI::ReqId inId {width 6}} {Bool inDone {width 1}} {MemTypesCHERI::ReqId outId {width 6}} {Bool cached {width 1}} {CacheCore::TagLine#(tagBits) oldTag} {Bit#(TLog#(ways)) oldWay} {Bool oldDirty {width 1}} {Bool write {width 1}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 198 3}}
Struct CacheCore::ReqIdWithSC {members {{MemTypesCHERI::ReqId inId {width 6}} {Bool isSC {width 1}} {Bool scResult {width 1}}}} {width 8} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 204 3}}
Struct {CacheCore::TagUpdate#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bool doWrite {width 1}} {Bit#(keyBits) key} {CacheCore::TagLine#(tagBits) newTag} {Bit#(TLog#(ways)) way}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 211 3}}
Alias CacheCore::ByteEnable {Vector::Vector#(8, Bool)} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 213 48}}
Struct CacheCore::EventsCacheCore {members {{Bool evt_WRITE {width 1}} {Bool evt_WRITE_MISS {width 1}} {Bool evt_READ {width 1}} {Bool evt_READ_MISS {width 1}} {Bool evt_EVICT {width 1}} {Bool evt_SET_TAG_WRITE {width 1}} {Bool evt_SET_TAG_READ {width 1}}}} {width 7} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 226 5}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_PA 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 22 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CWord 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 23 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CWord 16 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 24 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Byte_in_CWord 4 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 25 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_CLine 4 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 29 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CWord_in_CLine 2 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 30 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CLine 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 32 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Byte_in_CLine 6 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 33 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CLine 512 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 35 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Ways_per_CSet 2 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 39 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Way_in_CSet 1 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 40 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CSet 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 42 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::KB_per_Cache 8 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 46 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_Cache 8192 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 47 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_Cache 512 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 48 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CLines_per_Cache 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 49 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSets_per_Cache 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 51 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CSet_in_Cache 6 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 52 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_CWords_per_Cache 256 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 54 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CSet_CWord_in_Cache 8 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 55 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CTag 52 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 56 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWord Bit#(128) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 116 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CLine Bit#(512) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 117 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CTag Bit#(52) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 118 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Byte_in_CLine Bit#(6) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 119 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWord_in_CLine Bit#(2) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 120 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Way_in_CSet Bit#(1) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 121 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_in_Cache Bit#(6) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 122 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_CWord_in_Cache Bit#(8) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 123 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_PA 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 22 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CWord 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 23 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CWord 16 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 24 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Byte_in_CWord 4 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 25 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_CLine 4 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 29 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CWord_in_CLine 2 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 30 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CLine 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 32 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Byte_in_CLine 6 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 33 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CLine 512 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 35 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Ways_per_CSet 2 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 39 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_Way_in_CSet 1 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 40 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_CSet 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 42 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::KB_per_Cache 8 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 46 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bytes_per_Cache 8192 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 47 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_Cache 512 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 48 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CLines_per_Cache 128 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 49 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSets_per_Cache 64 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 51 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CSet_in_Cache 6 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 52 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_CWords_per_Cache 256 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 54 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CSet_CWord_in_Cache 8 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 55 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Bits_per_CTag 52 {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 56 21}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWord Bit#(128) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 116 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CLine Bit#(512) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 117 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CTag Bit#(52) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 118 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Byte_in_CLine Bit#(6) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 119 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CWord_in_CLine Bit#(2) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 120 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::Way_in_CSet Bit#(1) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 121 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_in_Cache Bit#(6) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 122 45}}
Alias Cache_Decls_RV64_Sv39_8KB_2way::CSet_CWord_in_Cache Bit#(8) {position {../src_Core/Cache_Config/Cache_Decls_RV64_Sv39_8KB_2way.bsv 123 45}}
Alias CHERICap::SoftPerms Bit#(16) {position {../libs/cheri-cap-lib/CHERICap.bsv 36 18}}
Struct CHERICap::HardPerms {members {{Bool permitSetCID {width 1}} {Bool accessSysRegs {width 1}} {Bool permitUnseal {width 1}} {Bool permitCCall {width 1}} {Bool permitSeal {width 1}} {Bool permitStoreLocalCap {width 1}} {Bool permitStoreCap {width 1}} {Bool permitLoadCap {width 1}} {Bool permitStore {width 1}} {Bool permitLoad {width 1}} {Bool permitExecute {width 1}} {Bool global {width 1}}}} {width 12} {position {../libs/cheri-cap-lib/CHERICap.bsv 50 3}}
Struct {CHERICap::Exact#(type t)} polymorphic {members {{Bool exact {width 1}} {t value}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 71 3}}
TaggedUnion {CHERICap::Kind#(numeric type ot)} polymorphic {members {{void UNSEALED {width 0}} {void SENTRY {width 0}} {void RES0 {width 0}} {void RES1 {width 0}} {Bit#(ot) SEALED_WITH_TYPE}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 79 3}}
Struct {CHERICap::SetBoundsReturn#(type t, numeric type n)} polymorphic {members {{t cap} {Bool exact {width 1}} {Bit#(n) length} {Bit#(n) mask}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 87 3}}
Typeclass {CHERICap::CHERICap#(type t, numeric type ot, numeric type flg, numeric type n, numeric type mem_sz, numeric type maskable_bits)} {dependencies {{t determines (ot, flg, n, mem_sz, maskable_bits)}}} {members {{{function Bool f(t x1)} isValidCap} {{function t f(t x1, Bool x2)} setValidCap} {{function Bit#(flg) f(t x1)} getFlags} {{function t f(t x1, Bit#(flg) x2)} setFlags} {{function CHERICap::HardPerms f(t x1)} getHardPerms} {{function t f(t x1, CHERICap::HardPerms x2)} setHardPerms} {{function Bit#(16) f(t x1)} getSoftPerms} {{function t f(t x1, Bit#(16) x2)} setSoftPerms} {{function Bit#(31) f(t x1)} getPerms} {{function t f(t x1, Bit#(31) x2)} setPerms} {{function CHERICap::Kind#(ot) f(t x1)} getKind} {{function t f(t x1, CHERICap::Kind#(ot) x2)} setKind} {{function Bit#(n) f(t x1)} getAddr} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2)} setAddr} {{function t f(t x1, Bit#(n) x2)} setAddrUnsafe} {{function t f(t x1, Bit#(maskable_bits) x2)} addAddrUnsafe} {{function Bit#(n) f(t x1)} getOffset} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2, Bool x3)} modifyOffset} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2)} setOffset} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2)} incOffset} {{function Bit#(n) f(t x1)} getBase} {{function Bit#(TAdd#(n, 1)) f(t x1)} getTop} {{function Bit#(TAdd#(n, 1)) f(t x1)} getLength} {{function Bool f(t x1, Bool x2)} isInBounds} {{function CHERICap::Exact#(t) f(t x1, Bit#(n) x2)} setBounds} {{function CHERICap::SetBoundsReturn#(t, n) f(t x1, Bit#(n) x2)} setBoundsCombined} {{function t f(Bit#(n) x1)} nullWithAddr} {{function t f(t x1)} nullCapFromDummy} {t almightyCap} {t nullCap} {{function Bool f(t x1, Bit#(n) x2)} validAsType} {{function t f(Tuple2#(Bool, Bit#(mem_sz)) x1)} fromMem} {{function Tuple2#(Bool, Bit#(mem_sz)) f(t x1)} toMem} {{function t f(t x1, Bit#(maskable_bits) x2)} maskAddr} {{function Bit#(2) f(t x1)} getBaseAlignment} {{function Bit#(n) f(t x1, Bit#(n) x2)} getRepresentableAlignmentMask} {{function Bit#(n) f(t x1, Bit#(n) x2)} getRepresentableLength} {{function Bool f(t x1)} isDerivable}}} {instances {{CHERICap::CHERICap#(CHERICC_Fat::CapMem, CHERICC_Fat::OTypeW, CHERICC_Fat::FlagsW, CHERICC_Fat::CapAddrW, CHERICC_Fat::CapW, TSub#(CHERICC_Fat::MW, 3))} {CHERICap::CHERICap#(CHERICC_Fat::CapPipe, CHERICC_Fat::OTypeW, CHERICC_Fat::FlagsW, CHERICC_Fat::CapAddrW, CHERICC_Fat::CapW, TSub#(CHERICC_Fat::MW, 3))} {CHERICap::CHERICap#(CHERICC_Fat::CapReg, CHERICC_Fat::OTypeW, CHERICC_Fat::FlagsW, CHERICC_Fat::CapAddrW, CHERICC_Fat::CapW, TSub#(CHERICC_Fat::MW, 3))}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 89 11}}
Typeclass {CHERICap::Cast#(type src, type dest)} {members {{{function dest f(src x1)} cast}}} {instances {{CHERICap::Cast#(CHERICC_Fat::CapMem, CHERICC_Fat::CapPipe)} {CHERICap::Cast#(CHERICC_Fat::CapMem, CHERICC_Fat::CapReg)} {CHERICap::Cast#(CHERICC_Fat::CapPipe, CHERICC_Fat::CapMem)} {CHERICap::Cast#(CHERICC_Fat::CapPipe, CHERICC_Fat::CapReg)} {CHERICap::Cast#(CHERICC_Fat::CapReg, CHERICC_Fat::CapMem)} {CHERICap::Cast#(CHERICC_Fat::CapReg, CHERICC_Fat::CapPipe)} {CHERICap::Cast#(CPU_Globals::Pipeline_Val#(a), CPU_Globals::Pipeline_Val#(b))   provisos (CHERICap::Cast#(a, b))} {CHERICap::Cast#(function CHERICC_Fat::CapPipe f(t x1), function Bit#(CHERICC_Fat::CapAddrW) f(t x1))} {CHERICap::Cast#(function CHERICC_Fat::CapReg f(t x1), function CHERICC_Fat::CapPipe f(t x1))} {CHERICap::Cast#(t, t)}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 216 11}}
Struct {VnD::VnD#(type a)} polymorphic {members {{Bool v {width 1}} {a d}}} {position {../libs/TagController/TagController/CacheCore/VnD.bsv 35 3}}
Alias CHERICC_Fat::UPermW 4 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 86 13}}
Alias CHERICC_Fat::MW 14 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 87 13}}
Alias CHERICC_Fat::ExpW 6 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 88 13}}
Alias CHERICC_Fat::OTypeW 18 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 89 13}}
Alias CHERICC_Fat::FlagsW 1 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 90 17}}
Alias CHERICC_Fat::CapAddrW 64 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 91 13}}
Alias CHERICC_Fat::CapW 128 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 92 13}}
Alias CHERICC_Fat::AddressW 64 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 100 18}}
Alias CHERICC_Fat::Address Bit#(64) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 101 28}}
Alias CHERICC_Fat::HalfExpW 3 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 102 28}}
Alias CHERICC_Fat::UpperMW 11 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 103 28}}
Alias CHERICC_Fat::CBoundsW 27 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 106 30}}
Alias CHERICC_Fat::CBounds Bit#(27) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 107 24}}
Alias CHERICC_Fat::CapAddr Bit#(64) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 109 33}}
Alias CHERICC_Fat::CapAddrPlus1 Bit#(65) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 110 33}}
Alias CHERICC_Fat::CapAddrPlus2 Bit#(66) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 111 33}}
Struct CHERICC_Fat::HPerms {members {{Bool permit_set_CID {width 1}} {Bool access_sys_regs {width 1}} {Bool permit_unseal {width 1}} {Bool permit_ccall {width 1}} {Bool permit_seal {width 1}} {Bool permit_store_ephemeral_cap {width 1}} {Bool permit_store_cap {width 1}} {Bool permit_load_cap {width 1}} {Bool permit_store {width 1}} {Bool permit_load {width 1}} {Bool permit_execute {width 1}} {Bool non_ephemeral {width 1}}}} {width 12} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 126 3}}
Struct CHERICC_Fat::Perms {members {{Bit#(4) soft {width 4}} {CHERICC_Fat::HPerms hard {width 12}}}} {width 16} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 131 3}}
Alias CHERICC_Fat::PermsW 16 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 132 24}}
Alias CHERICC_Fat::ResW 2 {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 137 68}}
Struct CHERICC_Fat::CapabilityInMemory {members {{Bool isCapability {width 1}} {CHERICC_Fat::Perms perms {width 16}} {Bit#(2) reserved {width 2}} {Bit#(1) flags {width 1}} {Bit#(18) otype {width 18}} {Bit#(27) bounds {width 27}} {Bit#(64) address {width 64}}}} {width 129} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 147 3}}
Alias CHERICC_Fat::Capability Bit#(129) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 149 29}}
Alias CHERICC_Fat::CapBits Bit#(128) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 151 20}}
Alias CHERICC_Fat::DebugCap Bit#(128) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 158 20}}
Enum CHERICC_Fat::Format {members {Exp0 EmbeddedExp}} {width 1} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 160 34}}
Alias CHERICC_Fat::Exp UInt#(6) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 162 21}}
Alias CHERICC_Fat::CType CHERICC_Fat::VnD#(Bit#(18)) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 164 28}}
Struct CHERICC_Fat::CapFat {members {{Bool isCapability {width 1}} {Bit#(64) address {width 64}} {Bit#(14) addrBits {width 14}} {CHERICC_Fat::Perms perms {width 16}} {Bit#(1) flags {width 1}} {Bit#(2) reserved {width 2}} {Bit#(18) otype {width 18}} {CHERICC_Fat::Format format {width 1}} {CHERICC_Fat::Bounds bounds {width 34}}}} {width 151} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 182 3}}
Alias CHERICC_Fat::TempFields CHERICC_Fat::MetaInfo {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 255 18}}
Struct CHERICC_Fat::Bounds {members {{UInt#(6) exp {width 6}} {Bit#(14) topBits {width 14}} {Bit#(14) baseBits {width 14}}}} {width 34} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 695 3}}
Struct CHERICC_Fat::BoundsExp0 {members {{Bool embeddedExp {width 1}} {Bit#(12) top {width 12}} {Bit#(14) base {width 14}}}} {width 27} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 761 3}}
Struct CHERICC_Fat::BoundsEmbeddedExp {members {{Bool embeddedExp {width 1}} {Bit#(9) topUpperBits {width 9}} {Bit#(3) expTopHalf {width 3}} {Bit#(11) baseUpperBits {width 11}} {Bit#(3) expBotHalf {width 3}}}} {width 27} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 769 3}}
Struct CHERICC_Fat::MetaInfo {members {{Bit#(3) repBoundTopBits {width 3}} {Bool topHi {width 1}} {Bool baseHi {width 1}} {Bool addrHi {width 1}} {Int#(2) topCorrection {width 2}} {Int#(2) baseCorrection {width 2}}}} {width 10} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 832 3}}
Alias CHERICC_Fat::CapMem Bit#(129) {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 860 30}}
Alias CHERICC_Fat::CapReg CHERICC_Fat::CapFat {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 862 16}}
Struct CHERICC_Fat::CapPipe {members {{CHERICC_Fat::CapFat capFat {width 151}} {CHERICC_Fat::MetaInfo tempFields {width 10}}}} {width 161} {position {../libs/cheri-cap-lib/CHERICC_Fat.bsv 867 3}}
Struct {CHERICap::SetBoundsReturn#(type t, numeric type n)} polymorphic {members {{t cap} {Bool exact {width 1}} {Bit#(n) length} {Bit#(n) mask}}} {position {../libs/cheri-cap-lib/CHERICap.bsv 87 3}}
Interface ClockHacks::OutputBit {members {{method {Bit#(1) out {} {{(* ports = [] *)}}}}}} {position {src_BSV/ClockHacks.bsv 8 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ClockHacks::UnpackedClock {members {{interface Clock clk {}} {method {Action in Bit#(1) {{(* ports = ["x"] *)}}}}}} {position {src_BSV/ClockHacks.bsv 41 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ClockHacks::UnpackedReset {members {{interface Reset rst {}} {method {Action in Bit#(1) {{(* ports = ["x"] *)}}}}}} {position {src_BSV/ClockHacks.bsv 61 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface ClockHacks::BlockIfc {members {{interface Clock clk {}} {interface Reset rst {}}}} {position {src_BSV/ClockHacks.bsv 83 11}}

Interface {Core_IFC::Core_IFC#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 80 11}}
Interface {Core_IFC::Core_IFC_Synth#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master_Sig#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master_Sig#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 190 11}}
Enum CPU::CPU_State {members {CPU_RESET1 CPU_RESET2 CPU_GDB_PAUSING CPU_DEBUG_MODE CPU_RUNNING CPU_TRAP CPU_START_TRAP_HANDLER CPU_CSRRW_2 CPU_CSRR_S_or_C_2 CPU_SCR_W_2 CPU_CSRRX_RESTART CPU_FENCE_I CPU_FENCE CPU_SFENCE_VMA CPU_WFI_PAUSED}} {width 4} {position {../src_Core/CPU/CPU.bsv 147 6}}


Enum CPU_Globals::Stage_OStatus {members {OSTATUS_EMPTY OSTATUS_BUSY OSTATUS_PIPE OSTATUS_NONPIPE}} {width 2} {position {../src_Core/CPU/CPU_Globals.bsv 48 6}}
Alias CPU_Globals::Epoch Bit#(2) {position {../src_Core/CPU/CPU_Globals.bsv 59 19}}
Enum CPU_Globals::CF_Op {members {CF_BR CF_JAL CF_JALR CF_None}} {width 2} {position {../src_Core/CPU/CPU_Globals.bsv 74 6}}
Struct CPU_Globals::CF_Info {members {{CPU_Globals::CF_Op cf_op {width 2}} {Bit#(64) from_PC {width 64}} {Bool taken {width 1}} {Bit#(64) fallthru_PC {width 64}} {Bit#(64) taken_PC {width 64}}}} {width 195} {position {../src_Core/CPU/CPU_Globals.bsv 83 6}}
Enum CPU_Globals::Bypass_State {members {BYPASS_RD_NONE BYPASS_RD BYPASS_RD_RDVAL}} {width 2} {position {../src_Core/CPU/CPU_Globals.bsv 123 61}}
Struct CPU_Globals::Bypass {members {{CPU_Globals::Bypass_State bypass_state {width 2}} {Bit#(5) rd {width 5}} {CHERICC_Fat::CapPipe rd_val {width 161}}}} {width 168} {position {../src_Core/CPU/CPU_Globals.bsv 136 6}}
Struct CPU_Globals::FBypass {members {{CPU_Globals::Bypass_State bypass_state {width 2}} {Bit#(5) rd {width 5}} {Bit#(64) rd_val {width 64}}}} {width 71} {position {../src_Core/CPU/CPU_Globals.bsv 157 6}}
Typeclass {CPU_Globals::PCC#(type t)} {members {{{function CHERICap::Exact#(t) f(t x1, Bit#(64) x2)} setPC} {{function Bit#(64) f(t x1)} getPC} {{function Bit#(64) f(t x1)} getPCCBase} {{function Bool f(t x1)} checkPreValid} {{function Maybe#(Bit#(5)) f(t x1, Bit#(65) x2, Bool x3)} checkValid} {{function t f(CHERICC_Fat::CapPipe x1)} fromCapPipe} {{function CHERICC_Fat::CapPipe f(t x1)} toCapPipe}}} {instances CPU_Globals::PCC#(CPU_Globals::PCC_T)} {position {../src_Core/CPU/CPU_Globals.bsv 219 11}}
Alias CPU_Globals::PCC_T {Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} {position {../src_Core/CPU/CPU_Globals.bsv 229 37}}
Struct CPU_Globals::Trap_Info_Pipe {members {{{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} epcc {width 225}} {Bit#(5) cheri_exc_code {width 5}} {Bit#(6) cheri_exc_reg {width 6}} {Bit#(6) exc_code {width 6}} {Bit#(64) tval {width 64}}}} {width 306} {position {../src_Core/CPU/CPU_Globals.bsv 287 6}}
Struct CPU_Globals::Output_StageF {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Data_StageF_to_StageD data_to_stageD {width 239}}}} {width 241} {position {../src_Core/CPU/CPU_Globals.bsv 298 6}}
Struct CPU_Globals::Data_StageF_to_StageD {members {{Bit#(64) fetch_addr {width 64}} {Bool is_cap_mode {width 1}} {Bool refresh_pcc {width 1}} {Bit#(2) epoch {width 2}} {Bit#(2) priv {width 2}} {Bool is_i32_not_i16 {width 1}} {Bool exc {width 1}} {Bit#(6) exc_code {width 6}} {Bit#(64) tval {width 64}} {Bit#(32) instr {width 32}} {Bit#(64) pred_fetch_addr {width 64}} {Bool pred_is_cap_mode {width 1}}}} {width 239} {position {../src_Core/CPU/CPU_Globals.bsv 336 6}}
Struct CPU_Globals::Output_StageD {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Data_StageD_to_Stage1 data_to_stage1 {width 433}}}} {width 435} {position {../src_Core/CPU/CPU_Globals.bsv 360 6}}
Struct CPU_Globals::Data_StageD_to_Stage1 {members {{Bit#(64) fetch_addr {width 64}} {Bool is_cap_mode {width 1}} {Bool refresh_pcc {width 1}} {Bit#(2) priv {width 2}} {Bit#(2) epoch {width 2}} {Bool is_i32_not_i16 {width 1}} {Bool exc {width 1}} {Bit#(6) exc_code {width 6}} {Bit#(64) tval {width 64}} {Bit#(32) instr {width 32}} {Bit#(32) instr_or_instr_C {width 32}} {Bit#(64) pred_fetch_addr {width 64}} {Bool pred_is_cap_mode {width 1}} {ISA_Decls::Decoded_Instr decoded_instr {width 162}}}} {width 433} {position {../src_Core/CPU/CPU_Globals.bsv 404 6}}
Enum CPU_Globals::Control {members {CONTROL_DISCARD CONTROL_STRAIGHT CONTROL_BRANCH CONTROL_CSRR_W CONTROL_CAPBRANCH CONTROL_SCR_W CONTROL_CSRR_S_or_C CONTROL_FENCE CONTROL_FENCE_I CONTROL_SFENCE_VMA CONTROL_MRET CONTROL_SRET CONTROL_URET CONTROL_WFI CONTROL_TRAP}} {width 4} {position {../src_Core/CPU/CPU_Globals.bsv 443 6}}
Struct CPU_Globals::Output_Stage1 {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Control control {width 4}} {CPU_Globals::Trap_Info_Pipe trap_info {width 306}} {Bool redirect {width 1}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} next_pcc {width 225}} {CPU_Globals::CF_Info cf_info {width 195}} {CPU_Globals::Data_Stage1_to_Stage2 data_to_stage2 {width 1285}}}} {width 2018} {position {../src_Core/CPU/CPU_Globals.bsv 464 6}}
Enum CPU_Globals::Op_Stage2 {members {OP_Stage2_ALU OP_Stage2_LD OP_Stage2_ST OP_Stage2_M OP_Stage2_AMO OP_Stage2_FD OP_Stage2_TestSubset}} {width 3} {position {../src_Core/CPU/CPU_Globals.bsv 528 6}}
Struct {CPU_Globals::Pipeline_Val#(type capType)} polymorphic {members {{capType val}}} {position {../src_Core/CPU/CPU_Globals.bsv 537 6}}
Struct CPU_Globals::Data_Stage1_to_Stage2 {members {{Bit#(2) priv {width 2}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {Bit#(32) instr {width 32}} {CPU_Globals::Op_Stage2 op_stage2 {width 3}} {Bit#(5) rd {width 5}} {Bit#(64) addr {width 64}} {CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapPipe) val1 {width 161}} {CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapPipe) val2 {width 161}} {Bit#(64) val1_fast {width 64}} {Bit#(64) val2_fast {width 64}} {CHERICC_Fat::CapPipe check_authority {width 161}} {Bit#(6) check_authority_idx {width 6}} {Bit#(64) check_address_low {width 64}} {Bit#(65) check_address_high {width 65}} {Bool check_enable {width 1}} {Bool check_inclusive {width 1}} {Bool check_exact_enable {width 1}} {Bool check_exact_success {width 1}} {Bool set_offset_in_bounds {width 1}} {Bool mem_allow_cap {width 1}} {Bit#(3) mem_width_code {width 3}} {Bool mem_unsigned {width 1}} {Bit#(64) fval1 {width 64}} {Bit#(64) fval2 {width 64}} {Bit#(64) fval3 {width 64}} {Bool rd_in_fpr {width 1}} {Bool rs_frm_fpr {width 1}} {Bool val1_frm_gpr {width 1}} {Bit#(3) rounding_mode {width 3}}}} {width 1285} {position {../src_Core/CPU/CPU_Globals.bsv 633 6}}
Struct CPU_Globals::Output_Stage2 {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Trap_Info_Pipe trap_info {width 306}} {CPU_Globals::Output_Stage2_Perf perf {width 5}} {Bool check_success {width 1}} {CPU_Globals::Bypass bypass {width 168}} {CPU_Globals::FBypass fbypass {width 71}} {CPU_Globals::Data_Stage2_to_Stage3 data_to_stage3 {width 487}}}} {width 1040} {position {../src_Core/CPU/CPU_Globals.bsv 717 6}}
Struct CPU_Globals::Output_Stage2_Perf {members {{Bool sc_success {width 1}} {Bool ld_cap {width 1}} {Bool ld_cap_tag_set {width 1}} {Bool ld_wait {width 1}} {Bool st_wait {width 1}}}} {width 5} {position {../src_Core/CPU/CPU_Globals.bsv 727 3}}
Struct CPU_Globals::Data_Stage2_to_Stage3 {members {{{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {Bit#(32) instr {width 32}} {Bit#(2) priv {width 2}} {Bool rd_valid {width 1}} {Bit#(5) rd {width 5}} {CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapFat) rd_val {width 151}} {Bool upd_flags {width 1}} {Bool rd_in_fpr {width 1}} {Bit#(5) fpr_flags {width 5}} {Bit#(64) frd_val {width 64}}}} {width 487} {position {../src_Core/CPU/CPU_Globals.bsv 776 6}}
Struct CPU_Globals::Output_Stage3 {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Bypass bypass {width 168}} {CPU_Globals::FBypass fbypass {width 71}}}} {width 241} {position {../src_Core/CPU/CPU_Globals.bsv 824 6}}
Interface CPU_IFC::CPU_IFC {members {{interface {ClientServer::Server#(Bool, Bool)} hart0_server_reset {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 1, 0, 0, 1)} imem_master {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {Action m_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface {ClientServer::Server#(Bool, Bool)} hart0_server_run_halt {}} {interface GetPut::Put#(Bit#(4)) hart0_put_other_req {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_gpr_mem_server {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_fpr_mem_server {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_csr_mem_server {}} {method {Action relay_external_events {StatCounters::AXI4_Slave_Events StatCounters::AXI4_Master_Events StatCounters::EventsTGC} {{(* ports = ["slave_evts", "master_evts", "tag_cache_evts"] *)}}}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_IFC.bsv 64 11}}
Interface CPU_Stage1::CPU_Stage1_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_Stage1 out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq CPU_Globals::Data_StageD_to_Stage1 {{(* ports = ["data"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_Stage1.bsv 56 11}}
Interface CPU_Stage2::CPU_Stage2_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_Stage2 out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq {CPU_Globals::Data_Stage1_to_Stage2 Bool} {{(* ports = ["x", "valid"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_Stage2.bsv 92 11}}
Interface CPU_Stage3::CPU_Stage3_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_Stage3 out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq CPU_Globals::Data_Stage2_to_Stage3 {{(* ports = ["x"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}} {method {Action show_state {} {{(* ports = [] *)}}}}}} {position {../src_Core/CPU/CPU_Stage3.bsv 58 11}}
Interface CPU_StageD::CPU_StageD_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_StageD out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq CPU_Globals::Data_StageF_to_StageD {{(* ports = ["data_stageF_to_stageD"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_StageD.bsv 43 11}}
Interface CPU_StageF::CPU_StageF_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_StageF out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq {Bit#(2) Bit#(64) Bool Bool Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["epoch", "fetch_addr", "is_cap_mode", "refresh_pcc", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action bp_train {Bit#(64) Bool Bit#(32) CPU_Globals::CF_Info} {{(* ports = ["pc", "is_i32_not_i16", "instr", "cf_info"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_StageF.bsv 47 11}}
Interface {CreditCounter::CreditCounter_IFC#(numeric type w)} polymorphic {members {{method {UInt#(w) value {} {{(* ports = [] *)}}}} {method {Action incr {} {{(* ports = [] *)}}}} {method {Action decr {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/CreditCounter.bsv 16 11}}
Interface CSR_MIE::CSR_MIE_IFC {members {{method {Action reset {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(Bit#(64)) mav_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_sie_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(Bit#(64)) mav_sie_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/RegFiles/CSR_MIE.bsv 26 11}}
Interface CSR_MIP::CSR_MIP_IFC {members {{method {Action reset {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(Bit#(64)) mav_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_sip_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(Bit#(64)) mav_sip_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)} {(* always_ready  *)}}}} {method {Action m_external_interrupt_req Bool {{(* ports = ["req"] *)} {(* always_ready  *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["req"] *)} {(* always_ready  *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["req"] *)} {(* always_ready  *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["req"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/RegFiles/CSR_MIP.bsv 27 11}}
Interface CSR_MSTATUS::CSR_MSTATUS_IFC {members {{method {Action reset ISA_Decls::MISA {{(* ports = ["misa_reset_value"] *)}}}} {method {Bit#(64) mv_read {} {{(* ports = [] *)}}}} {method {Bit#(64) mv_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {Action ma_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {ActionValue#(Bit#(64)) mav_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {Bit#(64) mv_ustatus_read {} {{(* ports = [] *)}}}} {method {Action ma_ustatus_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {ActionValue#(Bit#(64)) mav_ustatus_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {Bit#(64) mv_sstatus_read {} {{(* ports = [] *)}}}} {method {Action ma_sstatus_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}} {method {ActionValue#(Bit#(64)) mav_sstatus_write {ISA_Decls::MISA Bit#(64)} {{(* ports = ["misa", "wordxl"] *)}}}}}} {position {../src_Core/RegFiles/CSR_MSTATUS.bsv 26 11}}
Struct CSR_RegFile_MSU::CSR_Write_Result {members {{Bit#(64) new_csr_value {width 64}} {Maybe#(Bit#(64)) m_new_csr_value2 {width 65}}}} {width 129} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 75 1}}
Struct CSR_RegFile_MSU::AccessPerms {members {{Bool exists {width 1}} {Bool requires_asr {width 1}}}} {width 2} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 84 4}}
Interface CSR_RegFile_MSU::CSR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Maybe#(Bit#(64)) read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(64)) read_csr_port2 Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(CHERICC_Fat::CapFat) read_scr Bit#(5) {{(* ports = ["scr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(Maybe#(Bit#(64))) mav_read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CSR_RegFile_MSU::CSR_Write_Result) mav_csr_write {Bit#(12) Bit#(64)} {{(* ports = ["csr_addr", "word"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CHERICC_Fat::CapFat) mav_scr_write {Bit#(5) CHERICC_Fat::CapFat} {{(* ports = ["scr_addr", "cap"] *)} {(* always_ready  *)}}}} {method {Bit#(3) read_frm {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) read_fflags {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) mv_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Action ma_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {Action ma_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {ISA_Decls::MISA read_misa {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_mstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_sstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_ustatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_satp {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(ISA_Decls::Trap_Info_CSR) csr_trap_actions {Bit#(2) CHERICC_Fat::CapPipe Bool Bool Bit#(5) Bit#(6) Bit#(6) Bit#(64)} {{(* ports = ["from_priv", "pcc", "nmi", "interrupt", "cheri_exc_code", "cheri_exc_reg", "exc_code", "xtval"] *)}}}} {method {{ActionValue#(Tuple3#(CHERICC_Fat::CapPipe, Bit#(2), Bit#(64)))} csr_ret_actions Bit#(2) {{(* ports = ["from_priv"] *)}}}} {method {Bit#(64) read_csr_minstret {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action csr_minstret_incr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mcycle {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mtime {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action send_performance_events {{Vector::Vector#(115, Bit#(64))}} {{(* ports = ["evts"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_1 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_2 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_scr {Bit#(2) Bit#(5) Bool} {{(* ports = ["priv", "scr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {Bool csr_counter_read_fault {Bit#(2) Bit#(12)} {{(* ports = ["priv", "csr_addr"] *)} {(* always_ready  *)}}}} {method {Bit#(64) csr_mip_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action m_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(6)) interrupt_pending Bit#(2) {{(* ports = ["cur_priv"] *)} {(* always_ready  *)}}}} {method {Bool wfi_resume {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Bool nmi_pending {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_dpcc {} {{(* ports = [] *)}}}} {method {Action write_dpcc CHERICC_Fat::CapPipe {{(* ports = ["pcc"] *)}}}} {method {Bool dcsr_break_enters_debug Bit#(2) {{(* ports = ["cur_priv"] *)}}}} {method {Bool read_dcsr_step {} {{(* ports = [] *)}}}} {method {Action write_dcsr_cause_priv {DM_Common::DCSR_Cause Bit#(2)} {{(* ports = ["cause", "priv"] *)} {(* always_ready  *)}}}} {method {Action debug {} {{(* ports = [] *)}}}}}} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 86 11}}
Struct CSR_RegFile_MSU::CSR_Write_Result {members {{Bit#(64) new_csr_value {width 64}} {Maybe#(Bit#(64)) m_new_csr_value2 {width 65}}}} {width 129} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 75 1}}
Struct CSR_RegFile_MSU::AccessPerms {members {{Bool exists {width 1}} {Bool requires_asr {width 1}}}} {width 2} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 84 4}}
Interface CSR_RegFile_MSU::CSR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Maybe#(Bit#(64)) read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(64)) read_csr_port2 Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(CHERICC_Fat::CapFat) read_scr Bit#(5) {{(* ports = ["scr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(Maybe#(Bit#(64))) mav_read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CSR_RegFile_MSU::CSR_Write_Result) mav_csr_write {Bit#(12) Bit#(64)} {{(* ports = ["csr_addr", "word"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CHERICC_Fat::CapFat) mav_scr_write {Bit#(5) CHERICC_Fat::CapFat} {{(* ports = ["scr_addr", "cap"] *)} {(* always_ready  *)}}}} {method {Bit#(3) read_frm {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) read_fflags {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) mv_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Action ma_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {Action ma_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {ISA_Decls::MISA read_misa {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_mstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_sstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_ustatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_satp {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(ISA_Decls::Trap_Info_CSR) csr_trap_actions {Bit#(2) CHERICC_Fat::CapPipe Bool Bool Bit#(5) Bit#(6) Bit#(6) Bit#(64)} {{(* ports = ["from_priv", "pcc", "nmi", "interrupt", "cheri_exc_code", "cheri_exc_reg", "exc_code", "xtval"] *)}}}} {method {{ActionValue#(Tuple3#(CHERICC_Fat::CapPipe, Bit#(2), Bit#(64)))} csr_ret_actions Bit#(2) {{(* ports = ["from_priv"] *)}}}} {method {Bit#(64) read_csr_minstret {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action csr_minstret_incr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mcycle {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mtime {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action send_performance_events {{Vector::Vector#(115, Bit#(64))}} {{(* ports = ["evts"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_1 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_2 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_scr {Bit#(2) Bit#(5) Bool} {{(* ports = ["priv", "scr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {Bool csr_counter_read_fault {Bit#(2) Bit#(12)} {{(* ports = ["priv", "csr_addr"] *)} {(* always_ready  *)}}}} {method {Bit#(64) csr_mip_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action m_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(6)) interrupt_pending Bit#(2) {{(* ports = ["cur_priv"] *)} {(* always_ready  *)}}}} {method {Bool wfi_resume {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Bool nmi_pending {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_dpcc {} {{(* ports = [] *)}}}} {method {Action write_dpcc CHERICC_Fat::CapPipe {{(* ports = ["pcc"] *)}}}} {method {Bool dcsr_break_enters_debug Bit#(2) {{(* ports = ["cur_priv"] *)}}}} {method {Bool read_dcsr_step {} {{(* ports = [] *)}}}} {method {Action write_dcsr_cause_priv {DM_Common::DCSR_Cause Bit#(2)} {{(* ports = ["cause", "priv"] *)} {(* always_ready  *)}}}} {method {Action debug {} {{(* ports = [] *)}}}}}} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 86 11}}
Enum CSR_RegFile_MSU::RF_State {members {RF_RESET_START RF_RUNNING}} {width 1} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 347 45}}

Interface {Debug::Debug#(type a, type b)} polymorphic {members {{method {a inf {} {}}} {method {b debugging {} {}}}}} {position {../libs/TagController/TagController/Debug.bsv 181 11}}
Interface {Debug::Display#(type a)} polymorphic {members {{method {Action debug_display a {{(* ports = ["v"] *)}}}}}} {position {../libs/TagController/TagController/Debug.bsv 190 11}}
Interface Debug_Module::Debug_Module_IFC {members {{interface DM_Common::DMI dmi {}} {interface {ClientServer::Client#(Bool, Bool)} hart0_reset_client {}} {interface {ClientServer::Client#(Bool, Bool)} hart0_client_run_halt {}} {interface GetPut::Get#(Bit#(4)) hart0_get_other_req {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_gpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_fpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_csr_mem_client {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} master {}}}} {position {../src_Core/Debug_Module/Debug_Module.bsv 101 11}}
Alias DM_Common::DM_Addr Bit#(7) {position {../src_Core/Debug_Module/DM_Common.bsv 23 19}}
Alias DM_Common::DM_Word Bit#(32) {position {../src_Core/Debug_Module/DM_Common.bsv 27 19}}
Enum DM_Common::DM_abstractcs_cmderr {members {DM_ABSTRACTCS_CMDERR_NONE DM_ABSTRACTCS_CMDERR_BUSY DM_ABSTRACTCS_CMDERR_NOT_SUPPORTED DM_ABSTRACTCS_CMDERR_EXCEPTION DM_ABSTRACTCS_CMDERR_HALT_RESUME DM_ABSTRACTCS_CMDERR_UNDEF5 DM_ABSTRACTCS_CMDERR_UNDEF6 DM_ABSTRACTCS_CMDERR_OTHER}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 277 6}}
Enum DM_Common::DM_command_cmdtype {members {DM_COMMAND_CMDTYPE_ACCESS_REG DM_COMMAND_CMDTYPE_QUICK_ACCESS}} {width 1} {position {../src_Core/Debug_Module/DM_Common.bsv 308 6}}
Enum DM_Common::DM_command_access_reg_size {members {DM_COMMAND_ACCESS_REG_SIZE_UNDEF0 DM_COMMAND_ACCESS_REG_SIZE_UNDEF1 DM_COMMAND_ACCESS_REG_SIZE_LOWER32 DM_COMMAND_ACCESS_REG_SIZE_LOWER64 DM_COMMAND_ACCESS_REG_SIZE_LOWER128 DM_COMMAND_ACCESS_REG_SIZE_UNDEF5 DM_COMMAND_ACCESS_REG_SIZE_UNDEF6 DM_COMMAND_ACCESS_REG_SIZE_UNDEF7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 319 6}}
Enum DM_Common::DM_sbaccess {members {DM_SBACCESS_8_BIT DM_SBACCESS_16_BIT DM_SBACCESS_32_BIT DM_SBACCESS_64_BIT DM_SBACCESS_128_BIT}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 381 6}}
Enum DM_Common::DM_sberror {members {DM_SBERROR_NONE DM_SBERROR_TIMEOUT DM_SBERROR_BADADDR DM_SBERROR_OTHER DM_SBERROR_BUSY_STALE DM_SBERROR_UNDEF5 DM_SBERROR_UNDEF6 DM_SBERROR_UNDEF7_W1C}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 402 6}}
Enum DM_Common::DCSR_Cause {members {DCSR_CAUSE_RESERVED0 DCSR_CAUSE_EBREAK DCSR_CAUSE_TRIGGER DCSR_CAUSE_HALTREQ DCSR_CAUSE_STEP DCSR_CAUSE_RESERVED5 DCSR_CAUSE_RESERVED6 DCSR_CAUSE_RESERVED7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 488 6}}
Struct JtagTap::DMI {members {{Bit#(6) address {width 6}} {Bit#(32) data {width 32}} {Bit#(2) op {width 2}}}} {width 40} {position {src_BSV/JtagTap.bsv 120 6}}
Interface DM_Abstract_Commands::DM_Abstract_Commands_IFC {members {{method {Action reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(32)) av_read Bit#(7) {{(* ports = ["dm_addr"] *)}}}} {method {Action write {Bit#(7) Bit#(32)} {{(* ports = ["dm_addr", "dm_word"] *)}}}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_gpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_fpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_csr_mem_client {}}}} {position {../src_Core/Debug_Module/DM_Abstract_Commands.bsv 33 11}}
Alias DM_Common::DM_Addr Bit#(7) {position {../src_Core/Debug_Module/DM_Common.bsv 23 19}}
Alias DM_Common::DM_Word Bit#(32) {position {../src_Core/Debug_Module/DM_Common.bsv 27 19}}
Enum DM_Common::DM_abstractcs_cmderr {members {DM_ABSTRACTCS_CMDERR_NONE DM_ABSTRACTCS_CMDERR_BUSY DM_ABSTRACTCS_CMDERR_NOT_SUPPORTED DM_ABSTRACTCS_CMDERR_EXCEPTION DM_ABSTRACTCS_CMDERR_HALT_RESUME DM_ABSTRACTCS_CMDERR_UNDEF5 DM_ABSTRACTCS_CMDERR_UNDEF6 DM_ABSTRACTCS_CMDERR_OTHER}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 277 6}}
Enum DM_Common::DM_command_cmdtype {members {DM_COMMAND_CMDTYPE_ACCESS_REG DM_COMMAND_CMDTYPE_QUICK_ACCESS}} {width 1} {position {../src_Core/Debug_Module/DM_Common.bsv 308 6}}
Enum DM_Common::DM_command_access_reg_size {members {DM_COMMAND_ACCESS_REG_SIZE_UNDEF0 DM_COMMAND_ACCESS_REG_SIZE_UNDEF1 DM_COMMAND_ACCESS_REG_SIZE_LOWER32 DM_COMMAND_ACCESS_REG_SIZE_LOWER64 DM_COMMAND_ACCESS_REG_SIZE_LOWER128 DM_COMMAND_ACCESS_REG_SIZE_UNDEF5 DM_COMMAND_ACCESS_REG_SIZE_UNDEF6 DM_COMMAND_ACCESS_REG_SIZE_UNDEF7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 319 6}}
Enum DM_Common::DM_sbaccess {members {DM_SBACCESS_8_BIT DM_SBACCESS_16_BIT DM_SBACCESS_32_BIT DM_SBACCESS_64_BIT DM_SBACCESS_128_BIT}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 381 6}}
Enum DM_Common::DM_sberror {members {DM_SBERROR_NONE DM_SBERROR_TIMEOUT DM_SBERROR_BADADDR DM_SBERROR_OTHER DM_SBERROR_BUSY_STALE DM_SBERROR_UNDEF5 DM_SBERROR_UNDEF6 DM_SBERROR_UNDEF7_W1C}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 402 6}}
Enum DM_Common::DCSR_Cause {members {DCSR_CAUSE_RESERVED0 DCSR_CAUSE_EBREAK DCSR_CAUSE_TRIGGER DCSR_CAUSE_HALTREQ DCSR_CAUSE_STEP DCSR_CAUSE_RESERVED5 DCSR_CAUSE_RESERVED6 DCSR_CAUSE_RESERVED7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 488 6}}
Struct JtagTap::DMI {members {{Bit#(6) address {width 6}} {Bit#(32) data {width 32}} {Bit#(2) op {width 2}}}} {width 40} {position {src_BSV/JtagTap.bsv 120 6}}
Struct {DM_CPU_Req_Rsp::DM_CPU_Req#(numeric type a, numeric type d)} polymorphic {members {{Bool write {width 1}} {Bit#(a) address} {Bit#(d) data}}} {position {../src_Core/Debug_Module/DM_CPU_Req_Rsp.bsv 25 3}}
Struct {DM_CPU_Req_Rsp::DM_CPU_Rsp#(numeric type d)} polymorphic {members {{Bool ok {width 1}} {Bit#(d) data}}} {position {../src_Core/Debug_Module/DM_CPU_Req_Rsp.bsv 31 3}}
Interface DM_Run_Control::DM_Run_Control_IFC {members {{method {Bool dmactive {} {{(* ports = [] *)}}}} {method {Action reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(32)) av_read Bit#(7) {{(* ports = ["dm_addr"] *)}}}} {method {Action write {Bit#(7) Bit#(32)} {{(* ports = ["dm_addr", "dm_word"] *)}}}} {interface {ClientServer::Client#(Bool, Bool)} hart0_reset_client {}} {interface {ClientServer::Client#(Bool, Bool)} hart0_client_run_halt {}} {interface GetPut::Get#(Bit#(4)) hart0_get_other_req {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}}}} {position {../src_Core/Debug_Module/DM_Run_Control.bsv 32 11}}
Interface DM_System_Bus::DM_System_Bus_IFC {members {{method {Action reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(32)) av_read Bit#(7) {{(* ports = ["dm_addr"] *)}}}} {method {Action write {Bit#(7) Bit#(32)} {{(* ports = ["dm_addr", "dm_word"] *)}}}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} master {}}}} {position {../src_Core/Debug_Module/DM_System_Bus.bsv 45 11}}
Enum DM_System_Bus::SB_State {members {SB_NOTBUSY SB_READ_FINISH SB_WRITE_FINISH}} {width 2} {position {../src_Core/Debug_Module/DM_System_Bus.bsv 184 6}}
Struct EX_ALU_functions::ALU_Inputs {members {{Bit#(2) cur_priv {width 2}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {CHERICC_Fat::CapPipe ddc {width 161}} {Bit#(5) rs1_idx {width 5}} {Bit#(5) rs2_idx {width 5}} {Bit#(64) pc {width 64}} {Bool is_i32_not_i16 {width 1}} {Bit#(32) instr {width 32}} {Bit#(32) instr_or_instr_C {width 32}} {ISA_Decls::Decoded_Instr decoded_instr {width 162}} {Bit#(64) rs1_val {width 64}} {Bit#(64) rs2_val {width 64}} {Bit#(64) mstatus {width 64}} {Bit#(3) frm {width 3}} {Bit#(64) frs1_val {width 64}} {Bit#(64) frs2_val {width 64}} {Bit#(64) frs3_val {width 64}} {CHERICC_Fat::CapPipe cap_rs1_val {width 161}} {CHERICC_Fat::CapPipe cap_rs2_val {width 161}} {ISA_Decls::MISA misa {width 28}}}} {width 1426} {position {../src_Core/CPU/EX_ALU_functions.bsv 86 6}}
Struct EX_ALU_functions::ALU_Outputs {members {{CPU_Globals::Control control {width 4}} {Bit#(6) exc_code {width 6}} {Bit#(5) cheri_exc_code {width 5}} {Bit#(6) cheri_exc_reg {width 6}} {CPU_Globals::Op_Stage2 op_stage2 {width 3}} {Bit#(5) rd {width 5}} {Bit#(64) addr {width 64}} {Bit#(64) val1 {width 64}} {Bit#(64) val2 {width 64}} {Bit#(64) val1_fast {width 64}} {Bit#(64) val2_fast {width 64}} {Bit#(64) fval1 {width 64}} {Bit#(64) fval2 {width 64}} {Bit#(64) fval3 {width 64}} {Bool rd_in_fpr {width 1}} {Bool rs_frm_fpr {width 1}} {Bool val1_frm_gpr {width 1}} {Bit#(3) rm {width 3}} {Bit#(3) mem_width_code {width 3}} {Bool mem_unsigned {width 1}} {Bool mem_allow_cap {width 1}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {CHERICC_Fat::CapPipe cap_val1 {width 161}} {CHERICC_Fat::CapPipe cap_val2 {width 161}} {Bool val1_cap_not_int {width 1}} {Bool val2_cap_not_int {width 1}} {Bool check_enable {width 1}} {CHERICC_Fat::CapPipe check_authority {width 161}} {Bit#(6) check_authority_idx {width 6}} {Bit#(64) check_address_low {width 64}} {Bit#(65) check_address_high {width 65}} {Bool check_inclusive {width 1}} {Bool check_exact_enable {width 1}} {Bool check_exact_success {width 1}} {Bool set_offset_in_bounds {width 1}} {CPU_Globals::CF_Info cf_info {width 195}}}} {width 1597} {position {../src_Core/CPU/EX_ALU_functions.bsv 178 6}}
Enum EX_ALU_functions::Output_Select {members {LITERAL MODIFY_OFFSET SET_BOUNDS SET_ADDR GET_PRECISION}} {width 3} {position {../src_Core/CPU/EX_ALU_functions.bsv 1403 5}}
Alias Fabric_Defs::Num_Masters_2x3 2 {position {../src_Core/Core/Fabric_Defs.bsv 38 12}}
Alias Fabric_Defs::Num_Slaves_2x3 3 {position {../src_Core/Core/Fabric_Defs.bsv 39 12}}
Alias Fabric_Defs::Master_Num_2x3 Bit#(1) {position {../src_Core/Core/Fabric_Defs.bsv 41 40}}
Alias Fabric_Defs::Slave_Num_2x3 Bit#(2) {position {../src_Core/Core/Fabric_Defs.bsv 42 39}}
Alias Fabric_Defs::Wd_MId_2x3 4 {position {../src_Core/Core/Fabric_Defs.bsv 46 11}}
Alias Fabric_Defs::Wd_SId_2x3 5 {position {../src_Core/Core/Fabric_Defs.bsv 47 51}}
Alias Fabric_Defs::Wd_MId 5 {position {../src_Core/Core/Fabric_Defs.bsv 48 20}}
Alias Fabric_Defs::Wd_MId_ext 6 {position {../src_Core/Core/Fabric_Defs.bsv 53 26}}
Alias Fabric_Defs::Wd_Addr 64 {position {../src_Core/Core/Fabric_Defs.bsv 62 14}}
Alias Fabric_Defs::Fabric_Addr Bit#(64) {position {../src_Core/Core/Fabric_Defs.bsv 69 30}}
Alias Fabric_Defs::Bytes_per_Fabric_Addr 8 {position {../src_Core/Core/Fabric_Defs.bsv 70 30}}
Alias Fabric_Defs::Wd_Data 64 {position {../src_Core/Core/Fabric_Defs.bsv 81 13}}
Alias Fabric_Defs::Wd_AW_User 0 {position {../src_Core/Core/Fabric_Defs.bsv 85 11}}
Alias Fabric_Defs::Wd_AW_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 86 20}}
Alias Fabric_Defs::Wd_B_User 0 {position {../src_Core/Core/Fabric_Defs.bsv 87 11}}
Alias Fabric_Defs::Wd_B_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 88 19}}
Alias Fabric_Defs::Wd_AR_User 0 {position {../src_Core/Core/Fabric_Defs.bsv 89 11}}
Alias Fabric_Defs::Wd_AR_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 90 20}}
Alias Fabric_Defs::Wd_W_User 1 {position {../src_Core/Core/Fabric_Defs.bsv 92 39}}
Alias Fabric_Defs::Wd_R_User 1 {position {../src_Core/Core/Fabric_Defs.bsv 93 39}}
Alias Fabric_Defs::Wd_W_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 98 11}}
Alias Fabric_Defs::Wd_R_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 99 11}}
Alias Fabric_Defs::Bytes_per_Fabric_Data 8 {position {../src_Core/Core/Fabric_Defs.bsv 108 37}}
Alias Fabric_Defs::Fabric_Data Bit#(64) {position {../src_Core/Core/Fabric_Defs.bsv 111 37}}
Alias Fabric_Defs::Fabric_Strb Bit#(8) {position {../src_Core/Core/Fabric_Defs.bsv 112 37}}
Alias Fabric_Defs::Wd_Data_Periph 64 {position {../src_Core/Core/Fabric_Defs.bsv 115 14}}
Alias Fabric_Defs::Wd_AW_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 117 14}}
Alias Fabric_Defs::Wd_W_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 118 14}}
Alias Fabric_Defs::Wd_B_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 119 14}}
Alias Fabric_Defs::Wd_AR_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 120 14}}
Alias Fabric_Defs::Wd_R_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 121 14}}
Alias Fabric_Defs::Fabric_Data_Periph Bit#(64) {position {../src_Core/Core/Fabric_Defs.bsv 123 44}}
Alias Fabric_Defs::Fabric_Strb_Periph Bit#(8) {position {../src_Core/Core/Fabric_Defs.bsv 124 44}}
Alias Fabric_Defs::Bytes_per_Fabric_Data_Periph 8 {position {../src_Core/Core/Fabric_Defs.bsv 125 44}}
Alias Fabric_Defs::ZLSBs_Aligned_Fabric_Addr 3 {position {../src_Core/Core/Fabric_Defs.bsv 130 41}}
Alias Fabric_Defs::Wd_Id_Mem 4 {position {../src_Core/Core/Fabric_Defs.bsv 157 20}}
Alias Fabric_Defs::Wd_Addr_Mem 64 {position {../src_Core/Core/Fabric_Defs.bsv 158 20}}
Alias Fabric_Defs::Wd_Data_Mem 64 {position {../src_Core/Core/Fabric_Defs.bsv 159 20}}
Alias Fabric_Defs::Wd_AW_User_Mem 0 {position {../src_Core/Core/Fabric_Defs.bsv 160 20}}
Alias Fabric_Defs::Wd_W_User_Mem 1 {position {../src_Core/Core/Fabric_Defs.bsv 161 20}}
Alias Fabric_Defs::Wd_B_User_Mem 0 {position {../src_Core/Core/Fabric_Defs.bsv 162 20}}
Alias Fabric_Defs::Wd_AR_User_Mem 0 {position {../src_Core/Core/Fabric_Defs.bsv 163 20}}
Alias Fabric_Defs::Wd_R_User_Mem 1 {position {../src_Core/Core/Fabric_Defs.bsv 164 20}}
Alias Fabric_Defs::Near_Mem_Fabric_IFC {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} {position {../src_Core/Core/Fabric_Defs.bsv 175 43}}
Struct FBox_Core::FBoxResult {members {{Bit#(64) value {width 64}} {Bit#(5) flags {width 5}}}} {width 69} {position {../src_Core/CPU/FBox_Core.bsv 39 3}}
Enum FBox_Core::FBoxState {members {FBOX_RST FBOX_REQ FBOX_BUSY FBOX_RSP}} {width 2} {position {../src_Core/CPU/FBox_Core.bsv 46 3}}
Interface FBox_Core::FBox_Core_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action req {Bit#(7) Bit#(7) Bit#(3) Bit#(5) Bit#(64) Bit#(64) Bit#(64) Bool} {{(* ports = ["opcode", "f7", "rm", "rs2", "v1", "v2", "v3", "valid"] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bit#(64), Bit#(5))} word {{(* ports = [] *)} {(* always_ready  *)}}}}} {position {../src_Core/CPU/FBox_Core.bsv 48 11}}
Interface FBox_Top::FBox_Top_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action req {Bit#(7) Bit#(7) Bit#(3) Bit#(5) Bit#(64) Bit#(64) Bit#(64) Bool} {{(* ports = ["opcode", "f7", "rm", "rs2", "v1", "v2", "v3", "valid"] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bit#(64), Bit#(5))} word {{(* ports = [] *)} {(* always_ready  *)}}}}} {position {../src_Core/CPU/FBox_Top.bsv 35 11}}
Interface {FF::FF#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 64 11}}
Interface {FF::FFNext#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {data next {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool nextNotEmpty {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 74 11}}
Interface FPR_RegFile::FPR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Bit#(64) read_rs1 Bit#(5) {{(* ports = ["rs1"] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_rs1_port2 Bit#(5) {{(* ports = ["rs1"] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_rs2 Bit#(5) {{(* ports = ["rs2"] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_rs3 Bit#(5) {{(* ports = ["rs3"] *)} {(* always_ready  *)}}}} {method {Action write_rd {Bit#(5) Bit#(64)} {{(* ports = ["rd", "rd_val"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/RegFiles/FPR_RegFile.bsv 35 11}}
Enum CSR_RegFile_MSU::RF_State {members {RF_RESET_START RF_RUNNING}} {width 1} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 347 45}}
Alias FPU::FDouble {FloatingPoint::FloatingPoint#(11, 52)} {position {../src_Core/CPU/FPU.bsv 17 31}}
Alias FPU::FSingle {FloatingPoint::FloatingPoint#(8, 23)} {position {../src_Core/CPU/FPU.bsv 18 31}}
TaggedUnion FPU::FloatU {members {{{FloatingPoint::FloatingPoint#(11, 52)} D {width 64}} {{FloatingPoint::FloatingPoint#(8, 23)} S {width 32}}}} {width 65} {position {../src_Core/CPU/FPU.bsv 23 6}}
Alias FPU::Fpu_Req {Tuple5#(FPU::FloatU, FPU::FloatU, FPU::FloatU, FloatingPoint::RoundMode, ISA_Decls::FpuOp)} {position {../src_Core/CPU/FPU.bsv 25 56}}
Alias FPU::Fpu_Rsp {Tuple2#(FPU::FloatU, FloatingPoint::Exception)} {position {../src_Core/CPU/FPU.bsv 26 59}}
Alias FPU::FpuR {Tuple2#(FloatingPoint::FloatingPoint#(11, 52), FloatingPoint::Exception)} {position {../src_Core/CPU/FPU.bsv 29 59}}
Interface FPU::FPU_IFC {members {{interface {ClientServer::Server#(Tuple5#(FPU::FloatU, FPU::FloatU, FPU::FloatU, FloatingPoint::RoundMode, ISA_Decls::FpuOp), Tuple2#(FPU::FloatU, FloatingPoint::Exception))} server_core {}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}}}} {position {../src_Core/CPU/FPU.bsv 34 11}}


Interface Giraffe_IFC::JTAG_IFC {members {{method {Action tdi Bit#(1) {{(* ports = ["tdi"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action tms Bit#(1) {{(* ports = ["tms"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action tclk Bit#(1) {{(* ports = ["tclk"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Bit#(1) tdo {} {{(* ports = [] *)} {(* result = "tdo" *)}}}} {interface Clock tclk_out {}}}} {position {src_BSV/Giraffe_IFC.bsv 24 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Giraffe_IFC::DMI_Master_IFC {members {{method {Action req_ready Bit#(1) {{(* ports = ["req_ready"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Bit#(1) req_valid {} {{(* ports = [] *)} {(* result = "req_valid" *)}}}} {method {Bit#(7) req_addr {} {{(* ports = [] *)} {(* result = "req_addr" *)}}}} {method {Bit#(32) req_data {} {{(* ports = [] *)} {(* result = "req_data" *)}}}} {method {Bit#(2) req_op {} {{(* ports = [] *)} {(* result = "req_op" *)}}}} {method {Bit#(1) rsp_ready {} {{(* ports = [] *)} {(* result = "rsp_ready" *)}}}} {method {Action rsp_valid Bit#(1) {{(* ports = ["rsp_valid"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action rsp_data Bit#(32) {{(* ports = ["rsp_data"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action rsp_response Bit#(2) {{(* ports = ["rsp_response"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}}}} {position {src_BSV/Giraffe_IFC.bsv 41 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface Giraffe_IFC::DMI_IFC {members {{method {Bit#(1) req_ready {} {{(* ports = [] *)} {(* result = "req_ready" *)}}}} {method {Action req_valid Bit#(1) {{(* ports = ["req_valid"] *)} {(* result = "unused0" *)} {(* prefix = "" *)}}}} {method {Action req_addr Bit#(7) {{(* ports = ["req_addr"] *)} {(* result = "unused1" *)} {(* prefix = "" *)}}}} {method {Action req_data Bit#(32) {{(* ports = ["req_data"] *)} {(* result = "unused2" *)} {(* prefix = "" *)}}}} {method {Action req_op Bit#(2) {{(* ports = ["req_op"] *)} {(* result = "unused3" *)} {(* prefix = "" *)}}}} {method {Action rsp_ready Bit#(1) {{(* ports = ["rsp_ready"] *)} {(* result = "unused4" *)} {(* prefix = "" *)}}}} {method {Bit#(1) rsp_valid {} {{(* ports = [] *)} {(* result = "rsp_valid" *)}}}} {method {Bit#(32) rsp_data {} {{(* ports = [] *)} {(* result = "rsp_data" *)}}}} {method {Bit#(2) rsp_response {} {{(* ports = [] *)} {(* result = "rsp_response" *)}}}}}} {position {src_BSV/Giraffe_IFC.bsv 71 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {Core_IFC::Core_IFC#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 80 11}}
Interface Giraffe_IFC::Platform_IFC {members {{interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave0 {}} {interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave1 {}} {interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave2 {}} {interface {AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0)} slave3 {}} {method {Bit#(1) interrupt0 {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bit#(1) interrupt1 {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {Bit#(1) interrupt2 {} {{(* ports = [] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {interface BusDefines::BusSend#(Bit#(8)) uart_out {}} {interface BusDefines::BusRecv#(Bit#(8)) uart_in {}}}} {position {src_BSV/Giraffe_IFC.bsv 147 11}}
Interface GPR_RegFile::GPR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CHERICC_Fat::CapPipe read_rs1 Bit#(5) {{(* ports = ["rs1"] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_rs1_port2 Bit#(5) {{(* ports = ["rs1"] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_rs2 Bit#(5) {{(* ports = ["rs2"] *)} {(* always_ready  *)}}}} {method {Action write_rd {Bit#(5) CHERICC_Fat::CapFat} {{(* ports = ["rd", "rd_val"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/RegFiles/GPR_RegFile.bsv 80 11}}
Enum CSR_RegFile_MSU::RF_State {members {RF_RESET_START RF_RUNNING}} {width 1} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 347 45}}
Typeclass {Routable::Has_routingField#(type t, type r_t)} {dependencies {{t determines r_t}}} {members {{{function r_t f(t x1)} routingField}}} {instances {{Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(Routable::WithMetaInfo#(t, m_t), r_t)   provisos (Routable::Has_routingField#(t, r_t))} {Routable::Has_routingField#(Routable::WithRouteInfo#(t, r_t), r_t)}}} {position {../libs/BlueStuff/Routable.bsv 46 11}}
Typeclass {Routable::Has_isLast#(type t)} {members {{{function Bool f(t x1)} isLast}}} {instances {{Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_BFlit#(id_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(Routable::WithMetaInfo#(t, m_t))   provisos (Routable::Has_isLast#(t))} {Routable::Has_isLast#(Routable::WithRouteInfo#(t, r_t))   provisos (Routable::Has_isLast#(t))}}} {position {../libs/BlueStuff/Routable.bsv 50 11}}
Typeclass {Routable::Routable#(type f_t, type r_t)} {superclasses {{Routable::Has_routingField#(f_t, r_t)} Routable::Has_isLast#(f_t)}} {dependencies {{f_t determines r_t}}} {members {}} {instances {{Routable::Routable#(a, b)   provisos (Routable::Has_isLast#(a), Routable::Has_routingField#(a, b))}}} {position {../libs/BlueStuff/Routable.bsv 54 11}}
Typeclass {Routable::FallibleRoute#(type req_t, type rsp_t)} {members {{{a#(MasterSlave::Slave#(req_t, rsp_t))   provisos (IsModule#(a, b))} mkNoRouteSlave}}} {instances {{Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} {Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), AXI4Lite_Types::AXI4Lite_BFlit#(buser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_), down_t))   provisos (Bits#(down_t, down_t_sz))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_), down_t))   provisos (Bits#(down_t, down_t_sz))}}} {position {../libs/BlueStuff/Routable.bsv 72 11}}
Typeclass {Routable::ExpandableReqRsp#(type req_t, type req_fat_t, type rsp_fat_t, type rsp_t, numeric type n_masters)} {dependencies {{(req_t, req_fat_t) determines (rsp_fat_t, rsp_t, n_masters)} {rsp_fat_t determines (req_t, req_fat_t, rsp_t, n_masters)} {(rsp_fat_t, rsp_t) determines (req_t, req_fat_t, n_masters)}}} {members {{{function req_fat_t f(Bit#(TLog#(n_masters)) x1, req_t x2)} expand} {{function Tuple2#(Bit#(TLog#(n_masters)), rsp_t) f(rsp_fat_t x1)} shrink}}} {instances {{Routable::ExpandableReqRsp#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_), AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_), AXI4_Types::AXI4_RFlit#(id_, data_, ruser_), n)   provisos (Add#(id_, TLog#(n), sid_))} {Routable::ExpandableReqRsp#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_), AXI4_Types::AXI4_BFlit#(id_, buser_), n)   provisos (Add#(id_, TLog#(n), sid_))}}} {position {../libs/BlueStuff/Routable.bsv 88 11}}
Struct {Routable::WithRouteInfo#(type t, type r_t)} polymorphic {members {{t payload} {r_t routeInfo}}} {position {../libs/BlueStuff/Routable.bsv 110 3}}
Struct {Routable::WithMetaInfo#(type t, type m_t)} polymorphic {members {{t payload} {m_t metaInfo}}} {position {../libs/BlueStuff/Routable.bsv 123 3}}
Struct {Routable::Range#(numeric type n)} polymorphic {members {{Bit#(n) base} {Bit#(n) size}}} {position {../libs/BlueStuff/Routable.bsv 145 3}}
Alias {Routable::MappingTable#(numeric type n, numeric type a)} {Vector::Vector#(n, Routable::Range#(a))} {position {../libs/BlueStuff/Routable.bsv 155 33}}
Interface {IntMulDiv::IntDiv_IFC#(numeric type w)} polymorphic {members {{method {Action start {Bool Bool} {{(* ports = ["num_is_signed", "den_is_signed"] *)} {(* always_ready  *)}}}} {method {Bool result_valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bit#(w), Bit#(w))} result_value {{(* ports = [] *)} {(* always_ready  *)}}}}} {position {../src_Core/CPU/IntMulDiv.bsv 17 11}}
Enum IntMulDiv::DivState {members {Div_RDY Div_START Div_LOOP1 Div_LOOP2 Div_DONE}} {width 3} {position {../src_Core/CPU/IntMulDiv.bsv 29 68}}
Interface {IntMulDiv::IntMul_IFC#(numeric type w)} polymorphic {members {{method {Action put_args {Bool Bit#(w) Bool Bit#(w)} {{(* ports = ["x_is_signed", "x", "y_is_signed", "y"] *)} {(* always_ready  *)}}}} {method {Bool result_valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {{Bit#(TAdd#(w, w))} result_value {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/IntMulDiv.bsv 162 11}}
Enum IntMulDiv::MulState {members {MUL_IDLE MUL_BUSY MUL_READY}} {width 2} {position {../src_Core/CPU/IntMulDiv.bsv 191 47}}
Alias ISA_Decls::NO_OF_PRIVMODES 3 {position {../src_Core/ISA/ISA_Decls.bsv 56 11}}
Alias ISA_Decls::ILEN 32 {position {../src_Core/ISA/ISA_Decls.bsv 57 12}}
Alias ISA_Decls::XLEN 64 {position {../src_Core/ISA/ISA_Decls.bsv 68 12}}
Alias ISA_Decls::XLEN_2 128 {position {../src_Core/ISA/ISA_Decls.bsv 72 26}}
Alias ISA_Decls::XLEN_MINUS_2 62 {position {../src_Core/ISA/ISA_Decls.bsv 73 26}}
Enum ISA_Decls::RV_Version {members {RV32 RV64}} {width 1} {position {../src_Core/ISA/ISA_Decls.bsv 77 29}}
Alias ISA_Decls::WordXL Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 88 23}}
Alias ISA_Decls::IntXL Int#(64) {position {../src_Core/ISA/ISA_Decls.bsv 89 23}}
Alias ISA_Decls::Word Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 91 23}}
Alias ISA_Decls::Word_S Int#(64) {position {../src_Core/ISA/ISA_Decls.bsv 92 23}}
Alias ISA_Decls::Addr Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 94 23}}
Alias ISA_Decls::Bits_per_Byte 8 {position {../src_Core/ISA/ISA_Decls.bsv 98 48}}
Alias MEM::Byte Bit#(8) {position {../libs/TagController/TagController/CacheCore/MEM.bsv 188 17}}
Alias ISA_Decls::Bits_per_Word 64 {position {../src_Core/ISA/ISA_Decls.bsv 101 48}}
Alias ISA_Decls::Bytes_per_Word 8 {position {../src_Core/ISA/ISA_Decls.bsv 103 48}}
Alias ISA_Decls::Bits_per_Byte_in_Word 3 {position {../src_Core/ISA/ISA_Decls.bsv 104 48}}
Alias ISA_Decls::Byte_in_Word Bit#(3) {position {../src_Core/ISA/ISA_Decls.bsv 105 48}}
Alias ISA_Decls::Word_B {Vector::Vector#(8, Bit#(8))} {position {../src_Core/ISA/ISA_Decls.bsv 106 48}}
Alias ISA_Decls::Bytes_per_WordXL 8 {position {../src_Core/ISA/ISA_Decls.bsv 108 48}}
Alias ISA_Decls::Bits_per_Byte_in_WordXL 3 {position {../src_Core/ISA/ISA_Decls.bsv 109 48}}
Alias ISA_Decls::Byte_in_WordXL Bit#(3) {position {../src_Core/ISA/ISA_Decls.bsv 110 48}}
Alias ISA_Decls::WordXL_B {Vector::Vector#(8, Bit#(8))} {position {../src_Core/ISA/ISA_Decls.bsv 111 48}}
Alias ISA_Decls::Bits_per_Addr 64 {position {../src_Core/ISA/ISA_Decls.bsv 113 48}}
Alias ISA_Decls::Bytes_per_Addr 8 {position {../src_Core/ISA/ISA_Decls.bsv 114 48}}
Alias ISA_Decls::FLEN 64 {position {../src_Core/ISA/ISA_Decls.bsv 141 12}}
Alias ISA_Decls::FP_Value Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 150 22}}
Alias ISA_Decls::WordFL Bit#(64) {position {../src_Core/ISA/ISA_Decls.bsv 151 23}}
Alias ISA_Decls::Bytes_per_WordFL 8 {position {../src_Core/ISA/ISA_Decls.bsv 153 48}}
Alias ISA_Decls::Bits_per_Byte_in_WordFL 3 {position {../src_Core/ISA/ISA_Decls.bsv 154 48}}
Alias ISA_Decls::Byte_in_WordFL Bit#(3) {position {../src_Core/ISA/ISA_Decls.bsv 155 48}}
Alias ISA_Decls::WordFL_B {Vector::Vector#(8, Bit#(8))} {position {../src_Core/ISA/ISA_Decls.bsv 156 48}}
Alias ISA_Decls::Token Bit#(0) {position {../src_Core/ISA/ISA_Decls.bsv 163 18}}
Enum ISA_Decls::ISize {members {ISIZE16BIT ISIZE32BIT}} {width 1} {position {../src_Core/ISA/ISA_Decls.bsv 170 6}}
Alias ISA_Decls::Instr Bit#(32) {position {../src_Core/ISA/ISA_Decls.bsv 172 21}}
Alias ISA_Decls::Opcode Bit#(7) {position {../src_Core/ISA/ISA_Decls.bsv 173 21}}
Alias ISA_Decls::RegName Bit#(5) {position {../src_Core/ISA/ISA_Decls.bsv 174 21}}
Alias ISA_Decls::NumRegs 32 {position {../src_Core/ISA/ISA_Decls.bsv 175 21}}
Struct ISA_Decls::Decoded_Instr {members {{Bit#(7) opcode {width 7}} {Bit#(5) rd {width 5}} {Bit#(5) rs1 {width 5}} {Bit#(5) rs2 {width 5}} {Bit#(5) rs3 {width 5}} {Bit#(12) csr {width 12}} {Bit#(3) funct3 {width 3}} {Bit#(5) funct5 {width 5}} {Bit#(7) funct7 {width 7}} {Bit#(10) funct10 {width 10}} {Bit#(5) funct5rs2 {width 5}} {Bit#(5) funct5rd {width 5}} {Bit#(12) imm12_I {width 12}} {Bit#(12) imm12_S {width 12}} {Bit#(13) imm13_SB {width 13}} {Bit#(20) imm20_U {width 20}} {Bit#(21) imm21_UJ {width 21}} {Bit#(4) pred {width 4}} {Bit#(4) succ {width 4}} {Bit#(2) aqrl {width 2}}}} {width 162} {position {../src_Core/ISA/ISA_Decls.bsv 255 6}}
Enum ISA_Decls::Access_RWX {members {Access_RWX_R Access_RWX_W Access_RWX_X}} {width 2} {position {../src_Core/ISA/ISA_Decls.bsv 403 59}}
Enum ISA_Decls::Mem_Data_Size {members {BITS8 BITS16 BITS32 BITS64}} {width 2} {position {../src_Core/ISA/ISA_Decls.bsv 413 6}}
Alias ISA_Decls::MemReqSize Bit#(3) {position {../src_Core/ISA/ISA_Decls.bsv 419 18}}
Struct ISA_Decls::Fence_Ordering {members {{Bool pi {width 1}} {Bool po {width 1}} {Bool pr {width 1}} {Bool pw {width 1}} {Bool si {width 1}} {Bool so {width 1}} {Bool sr {width 1}} {Bool sw {width 1}}}} {width 8} {position {../src_Core/ISA/ISA_Decls.bsv 475 6}}
Enum ISA_Decls::FpuOp {members {FPAdd FPSub FPMul FPDiv FPSqrt FPMAdd FPMSub FPNMAdd FPNMSub}} {width 4} {position {../src_Core/ISA/ISA_Decls.bsv 713 16}}
Alias ISA_Decls::Num_Priv_Modes 4 {position {../src_Core/ISA/ISA_Decls.bsv 1042 11}}
Alias ISA_Decls::Priv_Mode Bit#(2) {position {../src_Core/ISA/ISA_Decls.bsv 1044 18}}
Alias ISA_Decls::CSR_Addr Bit#(12) {position {../src_Core/ISA/ISA_Decls.bsv 1063 19}}
Struct ISA_Decls::Trap_Info_CSR {members {{CHERICC_Fat::CapFat pcc {width 151}} {Bit#(64) mstatus {width 64}} {Bit#(64) mcause {width 64}} {Bit#(2) priv {width 2}}}} {width 281} {position {../src_Core/ISA/ISA_Decls.bsv 1168 3}}
Alias ISA_Decls::Instr_C Bit#(16) {position {../src_Core/ISA/ISA_Decls_C.bsv 12 21}}
Alias ISA_Decls::VM_Mode Bit#(4) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 92 19}}
Alias ISA_Decls::ASID Bit#(16) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 93 19}}
Alias ISA_Decls::VA_sz 39 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 156 15}}
Alias ISA_Decls::VPN_sz 27 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 157 15}}
Alias ISA_Decls::VPN_J_sz 9 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 158 15}}
Alias ISA_Decls::VPN_max_levels 3 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 159 15}}
Alias ISA_Decls::PA_sz 64 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 162 15}}
Alias ISA_Decls::PPN_sz 44 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 163 15}}
Alias ISA_Decls::PPN_2_sz 26 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 164 15}}
Alias ISA_Decls::PPN_1_sz 9 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 165 15}}
Alias ISA_Decls::PPN_0_sz 9 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 166 15}}
Alias ISA_Decls::Offset_sz 12 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 169 15}}
Alias ISA_Decls::PTNode_sz 512 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 172 15}}
Alias ISA_Decls::PA Bit#(64) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 196 61}}
Alias ISA_Decls::VA Bit#(39) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 207 62}}
Alias ISA_Decls::VPN Bit#(27) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 223 72}}
Alias ISA_Decls::VPN_J Bit#(9) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 224 72}}
Alias CacheCore::Offset Bit#(3) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 98 28}}
Alias ISA_Decls::PPN Bit#(44) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 228 67}}
Alias ISA_Decls::PPN_2 Bit#(26) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 230 67}}
Alias ISA_Decls::PPN_1 Bit#(9) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 232 67}}
Alias ISA_Decls::PPN_0 Bit#(9) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 233 67}}
Alias ISA_Decls::PPN_MEGA Bit#(35) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 238 44}}
Alias ISA_Decls::PPN_GIGA Bit#(26) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 239 44}}
Alias ISA_Decls::PTNode_Index_sz 9 {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 258 34}}
Alias ISA_Decls::PTNode_Index Bit#(9) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 259 34}}
Alias ISA_Decls::PTE Bit#(64) {position {../src_Core/ISA/ISA_Decls_Priv_S.bsv 265 16}}
Alias ISA_Decls::CLEN 128 {position {../src_Core/ISA/ISA_Decls_CHERI.bsvi 32 24}}
Alias ISA_Decls::CHERI_Exc_Code Bit#(5) {position {../src_Core/ISA/ISA_Decls_CHERI.bsvi 50 18}}
Struct ISA_Decls::XCCSR {members {{Bit#(6) cheri_exc_reg {width 6}} {Bit#(5) cheri_exc_code {width 5}}}} {width 11} {position {../src_Core/ISA/ISA_Decls_CHERI.bsvi 79 5}}
Alias ISA_Decls::SCR_Addr Bit#(5) {position {../src_Core/ISA/ISA_Decls_CHERI.bsvi 92 17}}
Alias ISA_Decls::Report_Width 64 {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 197 23}}
Alias ISA_Decls::No_Of_Ctrs 29 {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 202 21}}
Struct ISA_Decls::MISA {members {{Bit#(2) mxl {width 2}} {Bit#(1) z {width 1}} {Bit#(1) y {width 1}} {Bit#(1) x {width 1}} {Bit#(1) w {width 1}} {Bit#(1) v {width 1}} {Bit#(1) u {width 1}} {Bit#(1) t {width 1}} {Bit#(1) s {width 1}} {Bit#(1) r {width 1}} {Bit#(1) q {width 1}} {Bit#(1) p {width 1}} {Bit#(1) o {width 1}} {Bit#(1) n {width 1}} {Bit#(1) m {width 1}} {Bit#(1) l {width 1}} {Bit#(1) k {width 1}} {Bit#(1) j {width 1}} {Bit#(1) i {width 1}} {Bit#(1) h {width 1}} {Bit#(1) g {width 1}} {Bit#(1) f {width 1}} {Bit#(1) e {width 1}} {Bit#(1) d {width 1}} {Bit#(1) c {width 1}} {Bit#(1) b {width 1}} {Bit#(1) a {width 1}}}} {width 28} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 213 6}}
Enum ISA_Decls::MTVEC_Mode {members {DIRECT VECTORED}} {width 1} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 468 33}}
Struct ISA_Decls::MTVec {members {{Bit#(62) base {width 62}} {ISA_Decls::MTVEC_Mode mode {width 1}}}} {width 63} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 474 3}}
Struct ISA_Decls::MCounteren {members {{Bit#(29) hpm {width 29}} {Bit#(1) ir {width 1}} {Bit#(1) tm {width 1}} {Bit#(1) cy {width 1}}}} {width 32} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 499 3}}
Struct ISA_Decls::MCountinhibit {members {{Reserved::ReservedZero#(0) reserved {width 0}} {Bit#(29) hpm {width 29}} {Bit#(1) ir {width 1}} {Reserved::ReservedZero#(1) reserved2 {width 1}} {Bit#(1) cy {width 1}}}} {width 32} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 525 3}}
Struct ISA_Decls::MCause {members {{Bit#(1) interrupt {width 1}} {Bit#(6) exc_code {width 6}}}} {width 7} {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 565 6}}
Alias ISA_Decls::Exc_Code Bit#(6) {position {../src_Core/ISA/ISA_Decls_Priv_M.bsv 589 18}}
Alias JtagTap::ABITS 6 {position {src_BSV/JtagTap.bsv 15 11}}
Alias JtagTap::IR_LENGTH 18 {position {src_BSV/JtagTap.bsv 20 12}}
Alias JtagTap::DR_LENGTH 40 {position {src_BSV/JtagTap.bsv 27 25}}
Enum JtagTap::JtagState {members {TEST_LOGIC_RESET RUN_TEST_IDLE SELECT_DR_SCAN CAPTURE_DR SHIFT_DR EXIT1_DR PAUSE_DR EXIT2_DR UPDATE_DR SELECT_IR_SCAN CAPTURE_IR SHIFT_IR EXIT1_IR PAUSE_IR EXIT2_IR UPDATE_IR}} {width 4} {position {src_BSV/JtagTap.bsv 79 6}}
Struct JtagTap::DTMCS {members {{Reserved::ReservedZero#(14) reserved {width 14}} {Bit#(1) dmihardreset {width 1}} {Bit#(1) dmireset {width 1}} {Reserved::ReservedZero#(1) reserved2 {width 1}} {Bit#(3) idle {width 3}} {Bit#(2) dmistat {width 2}} {Bit#(6) abits {width 6}} {Bit#(4) version {width 4}}}} {width 32} {position {src_BSV/JtagTap.bsv 90 6}}
Alias JtagTap::DMI_OP Bit#(2) {position {src_BSV/JtagTap.bsv 107 17}}
Struct JtagTap::DMI {members {{Bit#(6) address {width 6}} {Bit#(32) data {width 32}} {Bit#(2) op {width 2}}}} {width 40} {position {src_BSV/JtagTap.bsv 120 6}}
Interface JtagTap::JtagTap_IFC {members {{interface Giraffe_IFC::JTAG_IFC jtag {}} {interface Giraffe_IFC::DMI_Master_IFC dmi {}}}} {position {src_BSV/JtagTap.bsv 174 11}}
Typeclass {ListExtra::MkList#(type a, type b)} {dependencies {{a determines b}}} {members {{{function a f(List#(b) x1)} mkList}}} {instances {{ListExtra::MkList#(List#(b), b)} {ListExtra::MkList#(function a f(b x1), b)   provisos (ListExtra::MkList#(a, b))}}} {position {../libs/BlueStuff/BlueBasics/ListExtra.bsv 54 11}}
Struct {Map::MapKeyIndex#(type ky, type ix)} polymorphic {members {{ky key} {ix index}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 44 3}}
Struct {Map::MapKeyValue#(type ky, type vl)} polymorphic {members {{ky key} {vl value}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 48 3}}
Struct {Map::MapKeyIndexValue#(type ky, type ix, type vl)} polymorphic {members {{ky key} {ix index} {vl value}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 53 3}}
Interface {Map::Map#(type ky, type ix, type vl, numeric type as)} polymorphic {members {{method {Action update {{Map::MapKeyIndex#(ky, ix)} vl} {{(* ports = ["key", "value"] *)}}}} {method {Action updateWithFunc {{Map::MapKeyIndex#(ky, ix)} vl {function vl f(vl x1, vl x2)} Bool} {{(* ports = ["ki", "value", "up", "insert"] *)}}}} {method {Maybe#(vl) lookup {{Map::MapKeyIndex#(ky, ix)}} {{(* ports = ["lookup_key"] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool clearDone {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 57 11}}
Interface {Map::MapSplit#(type ky, type ix, type vl, numeric type as)} polymorphic {members {{method {Action update {{Map::MapKeyIndex#(ky, ix)} vl} {{(* ports = ["key", "value"] *)}}}} {method {Action lookupStart {{Map::MapKeyIndex#(ky, ix)}} {{(* ports = ["lookup_key"] *)}}}} {method {Maybe#(vl) lookupRead {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool clearDone {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/Map.bsv 119 11}}
Interface {MasterSlave::Master#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Source#(req_t) req {}} {interface SourceSink::Sink#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 44 11}}
Interface {MasterSlave::Slave#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Sink#(req_t) req {}} {interface SourceSink::Source#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 50 11}}
Interface {MasterSlaveCHERI::CheckedPut#(type t)} polymorphic {members {{method {Bool canPut {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action put t {{(* ports = ["val"] *)}}}}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 45 11}}
Typeclass {MasterSlaveCHERI::ToCheckedPut#(type a, type b)} {dependencies {{a determines b}}} {members {{{function MasterSlaveCHERI::CheckedPut#(b) f(a x1)} toCheckedPut}}} {instances {{MasterSlaveCHERI::ToCheckedPut#(FIFOF::FIFOF#(data_t), data_t)} {MasterSlaveCHERI::ToCheckedPut#(MasterSlaveCHERI::CheckedPut#(data_t), data_t)}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 51 11}}
Interface {MasterSlaveCHERI::CheckedGet#(type t)} polymorphic {members {{method {Bool canGet {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {t peek {} {{(* ports = [] *)}}}} {method {ActionValue#(t) get {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 107 11}}
Typeclass {MasterSlaveCHERI::ToCheckedGet#(type a, type b)} {dependencies {{a determines b}}} {members {{{function MasterSlaveCHERI::CheckedGet#(b) f(a x1)} toCheckedGet}}} {instances {{MasterSlaveCHERI::ToCheckedGet#(FIFOF::FIFOF#(data_t), data_t)} {MasterSlaveCHERI::ToCheckedGet#(MasterSlaveCHERI::CheckedGet#(data_t), data_t)}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 114 11}}
Interface {MasterSlave::Master#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Source#(req_t) req {}} {interface SourceSink::Sink#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 44 11}}
Interface {MasterSlave::Slave#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Sink#(req_t) req {}} {interface SourceSink::Source#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 50 11}}
Interface {MasterSlaveCHERI::ForwardPutGet#(type a)} polymorphic {members {{interface MasterSlaveCHERI::CheckedPut#(a) cput {}} {interface MasterSlaveCHERI::CheckedGet#(a) cget {}}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 253 11}}
Interface {MasterSlaveCHERI::Forward#(type req_t, type rsp_t)} polymorphic {members {{interface {MasterSlaveCHERI::Slave#(req_t, rsp_t)} slave {}} {interface {MasterSlaveCHERI::Master#(req_t, rsp_t)} master {}}}} {position {../libs/TagController/TagController/MasterSlaveCHERI.bsv 265 11}}
Interface {MEM::ReadIfc#(type addr, type data)} polymorphic {members {{method {Action put addr {{(* ports = ["a"] *)}}}} {method {ActionValue#(data) get {} {{(* ports = [] *)}}}} {method {data peek {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 38 11}}
Interface {MEM::MEM#(type addr, type data)} polymorphic {members {{interface {MEM::ReadIfc#(addr, data)} read {}} {method {Action write {addr data} {{(* ports = ["a", "x"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 44 11}}
Alias MEM::Byte Bit#(8) {position {../libs/TagController/TagController/CacheCore/MEM.bsv 188 17}}
Interface {MEM::MemBEVerbose#(type addr, type data, numeric type data_bytes)} polymorphic {members {{interface {MEM::ReadIfc#(addr, data)} read {}} {method {Action write {addr data {Vector::Vector#(data_bytes, Bool)}} {{(* ports = ["a", "x", "be"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 190 11}}
Alias {MEM::MemBE#(type addr, type data)} {MEM::MemBEVerbose#(addr, data, TDiv#(SizeOf#(data), 8))} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 195 57}}
Interface {MEM::MEM2#(type addr, type data)} polymorphic {members {{interface {MEM::ReadIfc#(addr, data)} read {}} {interface {MEM::ReadIfc#(addr, data)} readB {}} {method {Action write {addr data} {{(* ports = ["a", "x"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/MEM.bsv 246 11}}
Struct {MemTypes::BitPO#(numeric type n)} polymorphic {members {{Bit#(n) val}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 50 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}


TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {MemTypes::Mem#(type addr_t, type data_t)} {MasterSlave::Slave#(MemTypes::MemReq#(addr_t, data_t), MemTypes::MemRsp#(data_t))} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 196 3}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {MemBRAM::BRAM2#(numeric type a0w, numeric type d0w, numeric type a1w, numeric type d1w)} polymorphic {members {{interface {MemBRAM::BRAM#(a0w, d0w)} p0 {}} {interface {MemBRAM::BRAM#(a1w, d1w)} p1 {}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 51 11}}
Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {MemBRAM::BRAM2#(numeric type a0w, numeric type d0w, numeric type a1w, numeric type d1w)} polymorphic {members {{interface {MemBRAM::BRAM#(a0w, d0w)} p0 {}} {interface {MemBRAM::BRAM#(a1w, d1w)} p1 {}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 51 11}}
Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimCHandle Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 58 19}}
Alias MemSim::MemSimSizeT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 59 19}}
Alias MemSim::MemSimAddrT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 60 34}}
Alias MemSim::MemSimAccessSizeT Bit#(8) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 61 18}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}
Alias MemSim::MemSimByteEnT Bit#(8) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 68 18}}
Struct {MemTypes::BitPO#(numeric type n)} polymorphic {members {{Bit#(n) val}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 50 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}


TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {MemTypes::Mem#(type addr_t, type data_t)} {MasterSlave::Slave#(MemTypes::MemReq#(addr_t, data_t), MemTypes::MemRsp#(data_t))} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 196 3}}
Alias MemTypesCHERI::CORE_COUNT 1 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 48 13}}
Alias MemTypesCHERI::MaxTransactions 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 51 11}}
Alias MemTypesCHERI::MaxNoOfFlits 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 52 11}}
Alias MemTypesCHERI::CheriBurstSize 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 53 22}}
Alias MemTypesCHERI::CapWidth 128 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 57 21}}
Alias MemTypesCHERI::CapBytes 16 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 73 29}}
Alias MemTypesCHERI::BootMemBytes 65536 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 76 19}}
Alias MemTypesCHERI::BootMemAddrBits 13 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 77 38}}
Alias {MemTypesCHERI::PhyLineNumber#(numeric type width, numeric type bytePerLine)} {Bit#(TSub#(width, TLog#(bytePerLine)))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 85 47}}
Alias {MemTypesCHERI::PhyByteOffset#(numeric type bytePerLine)} Bit#(TLog#(bytePerLine)) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 86 34}}
Alias {MemTypesCHERI::PhyBitOffset#(numeric type bytePerLine)} {Bit#(TAdd#(TLog#(bytePerLine), 3))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 87 43}}
Struct {MemTypesCHERI::PhyByteAddress#(numeric type width, numeric type bytePerLine)} polymorphic {members {{{Bit#(TSub#(width, TLog#(bytePerLine)))} lineNumber} {Bit#(TLog#(bytePerLine)) byteOffset}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 95 3}}
Struct {MemTypesCHERI::PhyBitAddress#(numeric type width, numeric type bytePerLine)} polymorphic {members {{{MemTypesCHERI::PhyByteAddress#(width, bytePerLine)} byteAddr} {Bit#(3) bitOffset {width 3}}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 100 3}}
Alias MemTypesCHERI::CheriBusBytes 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 119 26}}
Alias MemTypesCHERI::AddrWidth 40 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 133 12}}
Alias TagController::CapsPerFlit 1 {position {../libs/TagController/TagController/TagController.bsv 92 50}}
Alias MemTypesCHERI::CapTags {Vector::Vector#(1, Bool)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 137 37}}
Alias MemTypesCHERI::CapNumber Bit#(36) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 138 50}}
Struct MemTypesCHERI::CheriCapAddress {members {{Bit#(36) capNumber {width 36}} {Bit#(4) offset {width 4}}}} {width 40} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 142 5}}
Alias MemTypesCHERI::CheriDataWidth 64 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 144 32}}
Alias MemTypesCHERI::CheriLineAddrWidth 37 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 145 47}}
Alias MemTypesCHERI::CheriPhyLineNumber Bit#(37) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 146 50}}
Alias MemTypesCHERI::CheriPhyAddr {MemTypesCHERI::PhyByteAddress#(40, 8)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 147 50}}
Alias MemTypesCHERI::CheriPhyBitAddr {MemTypesCHERI::PhyBitAddress#(40, 8)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 148 49}}
Alias MemTypesCHERI::CheriPhyByteOffset Bit#(3) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 149 39}}
Alias MemTypesCHERI::CheriPhyBitOffset Bit#(6) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 150 39}}
Alias MemTypesCHERI::CheriPeriphAddr {MemTypesCHERI::PhyByteAddress#(40, 8)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 151 38}}
Alias MemTypesCHERI::LogLine 5 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 152 39}}
Alias MemTypesCHERI::Flit UInt#(3) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 154 36}}
Alias MemTypesCHERI::Line Bit#(35) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 155 62}}
Alias MemTypesCHERI::CpuLineSize 64 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 157 12}}
Alias MemTypesCHERI::CapOffsetInLine Bit#(2) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 158 51}}
Enum MemTypesCHERI::BytesPerFlit {members {BYTE_1 BYTE_2 BYTE_4 BYTE_8 BYTE_16 BYTE_32 BYTE_64 BYTE_128}} {width 3} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 170 3}}
Struct {MemTypesCHERI::Data#(numeric type width)} polymorphic {members {{{Vector::Vector#(1, Bool)} cap {width 1}} {Bit#(width) data}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 180 3}}
Struct {MemTypesCHERI::DataMinusCapTags#(numeric type width)} polymorphic {members {{Bit#(width) data}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 186 3}}
Enum MemTypesCHERI::WhichCache {members {ICache DCache None L2 TCache}} {width 3} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 191 3}}
Enum MemTypesCHERI::CacheInst {members {CacheInvalidate CacheInvalidateWriteback CacheWriteback CacheSync Read Write StoreConditional CacheLoadTag CacheNop}} {width 4} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 212 3}}
Struct MemTypesCHERI::CacheOperation {members {{MemTypesCHERI::CacheInst inst {width 4}} {MemTypesCHERI::WhichCache cache {width 3}} {Bool indexed {width 1}}}} {width 8} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 222 3}}
Enum MemTypesCHERI::Error {members {NoError BusError SlaveError}} {width 2} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 236 3}}
Struct {Memory::MemoryRequest#(numeric type a, numeric type d)} polymorphic {members {{Bool write {width 1}} {{Bit#(TDiv#(d, 8))} byteen} {Bit#(a) address} {Bit#(d) data}}} {position {%/Libraries/Memory.bsv 31 3 {Library Memory}}}



Alias MemTypesCHERI::CheriMasterIDWidth 1 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 355 29}}
Alias MemTypesCHERI::CheriTransactionIDWidth 5 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 356 34}}
Alias MemTypesCHERI::CheriMasterID Bit#(1) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 357 34}}
Alias MemTypesCHERI::CheriTransactionID Bit#(5) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 358 39}}
Alias MemTypesCHERI::CheriData MemTypesCHERI::Data#(64) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 360 31}}
Alias MemTypesCHERI::CheriMemRequest {MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 361 86}}
Alias MemTypesCHERI::CheriMemRequest64 {MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 362 78}}
Struct MemTypesCHERI::ReqId {members {{Bit#(1) masterID {width 1}} {Bit#(5) transactionID {width 5}}}} {width 6} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 367 3}}
Alias MemTypesCHERI::Banks 4 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 369 11}}
Alias MemTypesCHERI::Bank UInt#(2) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 370 18}}
Alias MemTypesCHERI::TagCacheKilobytes 16384 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 376 19}}
Alias MemTypesCHERI::Indices 9 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 380 71}}
Struct {Memory::MemoryResponse#(numeric type d)} polymorphic {members {{Bit#(d) data}}} {position {%/Libraries/Memory.bsv 35 3 {Library Memory}}}


Alias MemTypesCHERI::CheriMemResponse {MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 470 74}}
Alias MemTypesCHERI::CheriMemResponse64 {MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 471 63}}
Alias MemTypesCHERI::CheriPeriphSlave {MasterSlave::Slave#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 473 57}}
Alias MemTypesCHERI::CheriSlave {MasterSlave::Slave#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 474 57}}
Alias MemTypesCHERI::CheriPeriphMaster {MasterSlave::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 476 57}}
Alias MemTypesCHERI::CheriMaster {MasterSlave::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 477 57}}

Interface {MMU_Cache::MMU_Cache_IFC#(numeric type mID)} polymorphic {members {{method {Action set_verbosity Bit#(4) {{(* ports = ["verbosity"] *)}}}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action req {MMU_Cache_Common::CacheOp Bit#(3) Bool Bit#(5) Bit#(64) {Tuple2#(Bool, Bit#(128))} Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["op", "width_code", "is_unsigned", "amo_funct5", "addr", "st_value", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action commit {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) addr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bool, Bit#(128))} cword {{(* ports = [] *)} {(* always_ready  *)}}} {interface {Tuple2#(Bool, Bit#(128))} st_amo_val {{(* ports = [] *)} {(* always_ready  *)}}} {method {Bool exc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(6) exc_code {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_flush {}} {method {Action tlb_flush {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(mID, 64, 64, 0, 1, 0, 0, 1)} mem_master {}} {method {Near_Mem_IFC::EventsCache events {} {{(* ports = [] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 94 11}}
Alias MMU_Cache::MMU_DCache_IFC MMU_Cache::MMU_Cache_IFC#(4) {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 165 36}}
Alias MMU_Cache::MMU_ICache_IFC MMU_Cache::MMU_Cache_IFC#(5) {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 166 32}}
Enum MMU_Cache::CTagState {members {CTAG_EMPTY CTAG_CLEAN}} {width 1} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 265 41}}
Struct MMU_Cache::State_and_CTag {members {{MMU_Cache::CTagState state {width 1}} {Bit#(52) ctag {width 52}}}} {width 53} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 271 6}}
Alias MMU_Cache::State_and_CTag_CSet {Vector::Vector#(2, MMU_Cache::State_and_CTag)} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 274 49}}
Alias MMU_Cache::CWord_Set {Vector::Vector#(2, Tuple2#(Bit#(1), Bit#(128)))} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 275 49}}
Enum MMU_Cache::Module_State {members {MODULE_PRERESET MODULE_RESETTING MODULE_READY MODULE_RUNNING MODULE_EXCEPTION_RSP PTW_START PTW_LEVEL_2 PTW_LEVEL_1 PTW_LEVEL_0 CACHE_START_REFILL CACHE_REFILL CACHE_REREQ CACHE_ST_AMO_RSP IO_REQ IO_AWAITING_READ_RSP IO_READ_RSP IO_AWAITING_AMO_READ_RSP}} {width 5} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 300 6}}
Enum MMU_Cache::Requestor {members {REQUESTOR_RESET_IFC REQUESTOR_FLUSH_IFC}} {width 1} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 307 57}}
Struct MMU_Cache::Fabric_Write_Fields {members {{Bit#(64) fabric_addr {width 64}} {Bit#(64) fabric_data {width 64}} {Bit#(1) fabric_user {width 1}} {Bit#(8) fabric_strb {width 8}} {AXI4_Common_Types::AXI4_Size fabric_size {width 3}} {Bit#(64) fabric_2_data {width 64}} {Bit#(1) fabric_2_user {width 1}} {Bit#(8) fabric_2_strb {width 8}}}} {width 213} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 340 3}}
Enum MMU_Cache_Common::CacheOp {members {CACHE_LD CACHE_ST CACHE_AMO}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 28 6}}
Alias Near_Mem_IFC::Cache_Cap_Tag_Width 1 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 157 37}}
Alias Near_Mem_IFC::Cache_Entry {Tuple2#(Bit#(1), Bit#(128))} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 158 51}}
Struct MMU_Cache_Common::MMU_Cache_Req {members {{MMU_Cache_Common::CacheOp op {width 2}} {Bit#(3) width_code {width 3}} {Bool is_unsigned {width 1}} {Bool is_cap {width 1}} {Bit#(64) va {width 64}} {{Tuple2#(Bool, Bit#(128))} st_value {width 129}} {Bit#(5) amo_funct5 {width 5}} {Bit#(2) priv {width 2}} {Bit#(1) sstatus_SUM {width 1}} {Bit#(1) mstatus_MXR {width 1}} {Bit#(64) satp {width 64}}}} {width 273} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 53 6}}
Enum MMU_Cache_Common::VM_Xlate_Outcome {members {VM_XLATE_OK VM_XLATE_TLB_MISS VM_XLATE_EXCEPTION}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 90 69}}
Struct MMU_Cache_Common::VM_Xlate_Result {members {{MMU_Cache_Common::VM_Xlate_Outcome outcome {width 2}} {Bool allow_cap {width 1}} {Bit#(64) pa {width 64}} {Bit#(6) exc_code {width 6}} {Bool pte_modified {width 1}} {Bit#(64) pte {width 64}} {Bit#(2) pte_level {width 2}} {Bit#(64) pte_pa {width 64}}}} {width 204} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 104 6}}
Enum MMU_Cache_Common::Meta_State {members {META_INVALID META_SHARED META_EXCLUSIVE META_MODIFIED}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 204 75}}
Struct MMU_Cache_Common::L1_to_L2_Req {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State from_state {width 2}} {MMU_Cache_Common::Meta_State to_state {width 2}} {Bool can_up_to_E {width 1}}}} {width 69} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 243 6}}
Struct MMU_Cache_Common::L2_to_L1_Rsp {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State to_state {width 2}} {{Maybe#(Vector::Vector#(4, Tuple2#(Bit#(1), Bit#(128))))} m_cline {width 517}}}} {width 583} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 265 6}}
Struct MMU_Cache_Common::L2_to_L1_Req {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State to_state {width 2}}}} {width 66} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 290 6}}
Struct MMU_Cache_Common::L1_to_L2_Rsp {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State to_state {width 2}} {{Maybe#(Vector::Vector#(4, Tuple2#(Bit#(1), Bit#(128))))} m_cline {width 517}}}} {width 583} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 306 6}}
Struct MMU_Cache_Common::Single_Req {members {{Bool is_read {width 1}} {Bit#(64) addr {width 64}} {Bit#(3) width_code {width 3}} {{Tuple2#(Bit#(1), Bit#(128))} data {width 129}}}} {width 197} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 330 6}}
Struct MMU_Cache_Common::Single_Rsp {members {{Bool ok {width 1}} {{Tuple2#(Bit#(1), Bit#(128))} data {width 129}}}} {width 130} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 338 6}}
Interface {Monitored::Monitored#(type originalIfc, type events_t)} polymorphic {members {{method {originalIfc ifc {} {}}} {interface ReadOnly#(events_t) events {}}}} {position {../libs/BlueStuff/Monitored.bsv 37 11}}
Alias MultiLevelTagLookup::LineTags {Vector::Vector#(4, Bool)} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 47 52}}
Struct MultiLevelTagLookup::CheriTagWrite {members {{{Vector::Vector#(4, Bool)} tags {width 4}} {{Vector::Vector#(4, Bool)} writeEnable {width 4}}}} {width 8} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 51 3}}
Struct MultiLevelTagLookup::CheriTagRequest {members {{{MemTypesCHERI::PhyByteAddress#(40, 8)} addr {width 40}} {{MultiLevelTagLookup::CheriTagRequest_$operation} operation {width 9}}}} {width 49} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 59 3}}

Struct MultiLevelTagLookup::CheriTagResponse {members {{{MultiLevelTagLookup::CheriTagResponse_$tags} tags {width 5}}}} {width 5} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 66 3}}

Interface MultiLevelTagLookup::TagLookupIfc {members {{interface {MasterSlaveCHERI::Slave#(MultiLevelTagLookup::CheriTagRequest, MultiLevelTagLookup::CheriTagResponse)} cache {}} {interface {MasterSlaveCHERI::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} memory {}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 68 11}}
Enum MultiLevelTagLookup::State {members {Init Idle ReadTag SetTag ClearTag FoldZeroes}} {width 3} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 81 66}}
Alias MultiLevelTagLookup::CapsPerLine 4 {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 82 30}}
TaggedUnion MultiLevelTagLookup::TableEntry {members {{Bool Node {width 1}} {{Vector::Vector#(4, Bool)} Leaf {width 4}}}} {width 5} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 87 3}}
Struct MultiLevelTagLookup::TableLvl {members {{{MemTypesCHERI::PhyByteAddress#(40, 8)} startAddr {width 40}} {Integer size} {Integer shiftAmnt} {Integer groupFactor} {Integer groupFactorLog}}} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 95 3}}
Alias MultiLevelTagLookup::TDepth UInt#(2) {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 102 18}}
Enum MultiLevelTagLookup::State {members {Init Idle ReadTag SetTag ClearTag FoldZeroes}} {width 3} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 81 66}}
Alias Near_Mem_IFC::Wd_Id_Dma 6 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 57 13}}
Alias Near_Mem_IFC::Wd_Addr_Dma 64 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 58 13}}
Alias Near_Mem_IFC::Wd_Data_Dma 512 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 59 13}}
Alias Near_Mem_IFC::Wd_AW_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 60 13}}
Alias Near_Mem_IFC::Wd_W_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 61 13}}
Alias Near_Mem_IFC::Wd_B_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 62 13}}
Alias Near_Mem_IFC::Wd_AR_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 63 13}}
Alias Near_Mem_IFC::Wd_R_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 64 13}}
Struct Near_Mem_IFC::EventsCache {members {{Bool evt_LD {width 1}} {Bool evt_LD_MISS {width 1}} {Bool evt_LD_MISS_LAT {width 1}} {Bool evt_ST {width 1}} {Bool evt_ST_MISS {width 1}} {Bool evt_ST_MISS_LAT {width 1}} {Bool evt_AMO {width 1}} {Bool evt_AMO_MISS {width 1}} {Bool evt_AMO_MISS_LAT {width 1}} {Bool evt_TLB {width 1}} {Bool evt_TLB_MISS {width 1}} {Bool evt_TLB_MISS_LAT {width 1}} {Bool evt_TLB_FLUSH {width 1}} {Bool evt_EVICT {width 1}}}} {width 14} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 84 3}}
Interface Near_Mem_IFC::Near_Mem_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {interface Near_Mem_IFC::IMem_IFC imem {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 1, 0, 0, 1)} imem_master {}} {interface Near_Mem_IFC::DMem_IFC dmem {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} mem_master {}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_fence_i {}} {interface {ClientServer::Server#(ISA_Decls::Fence_Ordering, Bit#(0))} server_fence {}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} sfence_vma_server {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 88 11}}
Alias Near_Mem_IFC::Cache_Cap_Tag_Width 1 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 157 37}}
Alias Near_Mem_IFC::Cache_Entry {Tuple2#(Bit#(1), Bit#(128))} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 158 51}}
Interface Near_Mem_IFC::IMem_IFC {members {{method {Action req {Bit#(3) Bit#(64) Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["f3", "addr", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action commit {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool is_i32_not_i16 {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) pc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(32) instr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool exc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(6) exc_code {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) tval {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {StatCounters::EventsL1I events {} {{(* ports = [] *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 169 11}}
Interface Near_Mem_IFC::DMem_IFC {members {{method {Action req {MMU_Cache_Common::CacheOp Bit#(3) Bool Bit#(5) Bit#(64) {Tuple2#(Bool, Bit#(128))} Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["op", "f3", "is_unsigned", "amo_funct5", "addr", "store_value", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action commit {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bool, Bit#(128))} word128 {{(* ports = [] *)} {(* always_ready  *)}}} {method {Bit#(128) st_amo_val {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool exc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(6) exc_code {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {StatCounters::EventsL1D events {} {{(* ports = [] *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 210 11}}
Enum MMU_Cache::Module_State {members {MODULE_PRERESET MODULE_RESETTING MODULE_READY MODULE_RUNNING MODULE_EXCEPTION_RSP PTW_START PTW_LEVEL_2 PTW_LEVEL_1 PTW_LEVEL_0 CACHE_START_REFILL CACHE_REFILL CACHE_REREQ CACHE_ST_AMO_RSP IO_REQ IO_AWAITING_READ_RSP IO_READ_RSP IO_AWAITING_AMO_READ_RSP}} {width 5} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 300 6}}
Interface Near_Mem_IO_AXI4::Near_Mem_IO_AXI4_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action set_addr_map {Bit#(64) Bit#(64)} {{(* ports = ["addr_base", "addr_lim"] *)}}}} {interface {AXI4_Types::AXI4_Slave#(5, 64, 64, 0, 0, 0, 0, 0)} axi4_slave {}} {interface GetPut::Get#(Bool) get_timer_interrupt_req {}} {interface GetPut::Get#(Bool) get_sw_interrupt_req {}}}} {position {../src_Core/Near_Mem_IO/Near_Mem_IO_AXI4.bsv 91 11}}
Typeclass {OneHotArbiter::Arbitrable#(type a)} {members {{{function Bool f(a x1)} isRequesting}}} {instances {OneHotArbiter::Arbitrable#(Bool) OneHotArbiter::Arbitrable#(FIFOF::FIFOF#(t)) OneHotArbiter::Arbitrable#(SourceSink::Source#(t))}} {position {../libs/BlueStuff/OneHotArbiter.bsv 39 11}}
Interface OneHotArbiter::OneHotArbiter {members {{method {ActionValue#(List#(Bool)) next {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/OneHotArbiter.bsv 57 11}}

Interface P2_Core::P2_Core_IFC {members {{interface {AXI4_Types::AXI4_Master_Sig#(5, 64, 64, 0, 0, 0, 0, 0)} master0 {}} {interface {AXI4_Types::AXI4_Master_Sig#(6, 64, 64, 0, 0, 0, 0, 0)} master1 {}} {method {Action interrupt_reqs Bit#(0) {{(* ports = ["cpu_external_interrupt_req"] *)} {(* prefix = "" *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {interface Giraffe_IFC::JTAG_IFC jtag {}}}} {position {src_BSV/P2_Core.bsv 82 11}}
Typeclass {PerformanceMonitor::BitVectorable#(type from, numeric type n, numeric type m)} {dependencies {{from determines (n, m)}}} {members {{{function Vector::Vector#(m, Bit#(n)) f(from x1)} to_vector}}} {instances {{PerformanceMonitor::BitVectorable#(AXI4_Types::AXI4_Events, 1, 7)} {PerformanceMonitor::BitVectorable#(Bit#(n), n, 1)} {PerformanceMonitor::BitVectorable#(CacheCore::EventsCacheCore, 1, 7)} {PerformanceMonitor::BitVectorable#(Vector::Vector#(m, Bit#(n)), n, m)}}} {position {../libs/BlueStuff/PerformanceMonitor.bsv 37 11}}
Interface {PerformanceMonitor::PerfCounters_IFC#(numeric type ctrs, numeric type ctrW, numeric type rptW, numeric type evts)} polymorphic {members {{method {Action send_performance_events {{Vector::Vector#(evts, Bit#(rptW))}} {{(* ports = ["evts"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {{Vector::Vector#(ctrs, ReadOnly#(Bit#(ctrW)))} read_counters {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {{Vector::Vector#(ctrs, ReadOnly#(Bit#(TLog#(evts))))} read_ctr_sels {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface ReadOnly#(Bit#(ctrs)) read_ctr_inhibit {{(* ports = [] *)} {(* always_ready  *)}}} {interface ReadOnly#(Bit#(ctrs)) read_ctr_overflow {{(* ports = [] *)} {(* always_ready  *)}}} {method {Action write_counter {Bit#(TLog#(ctrs)) Bit#(ctrW)} {{(* ports = ["idx", "val"] *)} {(* always_ready  *)}}}} {method {Action write_ctr_sel {Bit#(TLog#(ctrs)) Bit#(TLog#(evts))} {{(* ports = ["idx", "val"] *)} {(* always_ready  *)}}}} {method {Action write_ctr_inhibit Bit#(ctrs) {{(* ports = ["val"] *)} {(* always_ready  *)}}}}}} {position {../libs/BlueStuff/PerformanceMonitor.bsv 72 11}}
Alias PLIC::T_wd_source_id 10 {position {../src_Core/PLIC/PLIC.bsv 61 14}}
Alias PLIC::T_wd_target_id 5 {position {../src_Core/PLIC/PLIC.bsv 62 14}}
Interface PLIC::PLIC_Source_IFC {members {{method {Action m_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {../src_Core/PLIC/PLIC.bsv 70 11}}
Interface PLIC::PLIC_Target_IFC {members {{method {Bool m_eip {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/PLIC/PLIC.bsv 78 11}}
Interface {PLIC::PLIC_IFC#(numeric type t_n_external_sources, numeric type t_n_targets, numeric type t_max_priority)} polymorphic {members {{method {Action set_verbosity Bit#(4) {{(* ports = ["verbosity"] *)}}}} {method {Action show_PLIC_state {} {{(* ports = [] *)}}}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action set_addr_map {Bit#(64) Bit#(64)} {{(* ports = ["addr_base", "addr_lim"] *)}}}} {interface {AXI4_Types::AXI4_Slave#(5, 64, 64, 0, 0, 0, 0, 0)} axi4_slave {}} {method {{Vector::Vector#(t_n_external_sources, PLIC::PLIC_Source_IFC)} v_sources {} {}}} {method {{Vector::Vector#(t_n_targets, PLIC::PLIC_Target_IFC)} v_targets {} {}}}}} {position {../src_Core/PLIC/PLIC.bsv 86 11}}
Alias PLIC_16_2_7::PLIC_N_Targets 2 {position {../src_Core/PLIC/PLIC_16_2_7.bsv 27 13}}
Alias PLIC_16_2_7::PLIC_Max_Priority 7 {position {../src_Core/PLIC/PLIC_16_2_7.bsv 28 13}}
Alias PLIC_16_2_7::PLIC_IFC_16_2_7 {PLIC::PLIC_IFC#(0, 2, 7)} {position {../src_Core/PLIC/PLIC_16_2_7.bsv 32 52}}
Interface RISCV_MBox::RISCV_MBox_IFC {members {{method {Action set_verbosity Bit#(4) {{(* ports = ["verbosity"] *)}}}} {method {Action req_reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(0)) rsp_reset {} {{(* ports = [] *)}}}} {method {Action req {Bool Bit#(3) Bit#(64) Bit#(64)} {{(* ports = ["is_OP_not_OP_32", "f3", "v1", "v2"] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) word {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/RISCV_MBox.bsv 36 11}}
Enum MultiLevelTagLookup::State {members {Init Idle ReadTag SetTag ClearTag FoldZeroes}} {width 3} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 81 66}}
Typeclass {Routable::Has_routingField#(type t, type r_t)} {dependencies {{t determines r_t}}} {members {{{function r_t f(t x1)} routingField}}} {instances {{Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(Routable::WithMetaInfo#(t, m_t), r_t)   provisos (Routable::Has_routingField#(t, r_t))} {Routable::Has_routingField#(Routable::WithRouteInfo#(t, r_t), r_t)}}} {position {../libs/BlueStuff/Routable.bsv 46 11}}
Typeclass {Routable::Has_isLast#(type t)} {members {{{function Bool f(t x1)} isLast}}} {instances {{Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_BFlit#(id_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(Routable::WithMetaInfo#(t, m_t))   provisos (Routable::Has_isLast#(t))} {Routable::Has_isLast#(Routable::WithRouteInfo#(t, r_t))   provisos (Routable::Has_isLast#(t))}}} {position {../libs/BlueStuff/Routable.bsv 50 11}}
Typeclass {Routable::Routable#(type f_t, type r_t)} {superclasses {{Routable::Has_routingField#(f_t, r_t)} Routable::Has_isLast#(f_t)}} {dependencies {{f_t determines r_t}}} {members {}} {instances {{Routable::Routable#(a, b)   provisos (Routable::Has_isLast#(a), Routable::Has_routingField#(a, b))}}} {position {../libs/BlueStuff/Routable.bsv 54 11}}
Typeclass {Routable::FallibleRoute#(type req_t, type rsp_t)} {members {{{a#(MasterSlave::Slave#(req_t, rsp_t))   provisos (IsModule#(a, b))} mkNoRouteSlave}}} {instances {{Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} {Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), AXI4Lite_Types::AXI4Lite_BFlit#(buser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_), down_t))   provisos (Bits#(down_t, down_t_sz))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_), down_t))   provisos (Bits#(down_t, down_t_sz))}}} {position {../libs/BlueStuff/Routable.bsv 72 11}}
Typeclass {Routable::ExpandableReqRsp#(type req_t, type req_fat_t, type rsp_fat_t, type rsp_t, numeric type n_masters)} {dependencies {{(req_t, req_fat_t) determines (rsp_fat_t, rsp_t, n_masters)} {rsp_fat_t determines (req_t, req_fat_t, rsp_t, n_masters)} {(rsp_fat_t, rsp_t) determines (req_t, req_fat_t, n_masters)}}} {members {{{function req_fat_t f(Bit#(TLog#(n_masters)) x1, req_t x2)} expand} {{function Tuple2#(Bit#(TLog#(n_masters)), rsp_t) f(rsp_fat_t x1)} shrink}}} {instances {{Routable::ExpandableReqRsp#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_), AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_), AXI4_Types::AXI4_RFlit#(id_, data_, ruser_), n)   provisos (Add#(id_, TLog#(n), sid_))} {Routable::ExpandableReqRsp#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_), AXI4_Types::AXI4_BFlit#(id_, buser_), n)   provisos (Add#(id_, TLog#(n), sid_))}}} {position {../libs/BlueStuff/Routable.bsv 88 11}}
Struct {Routable::WithRouteInfo#(type t, type r_t)} polymorphic {members {{t payload} {r_t routeInfo}}} {position {../libs/BlueStuff/Routable.bsv 110 3}}
Struct {Routable::WithMetaInfo#(type t, type m_t)} polymorphic {members {{t payload} {m_t metaInfo}}} {position {../libs/BlueStuff/Routable.bsv 123 3}}
Struct {Routable::Range#(numeric type n)} polymorphic {members {{Bit#(n) base} {Bit#(n) size}}} {position {../libs/BlueStuff/Routable.bsv 145 3}}
Alias {Routable::MappingTable#(numeric type n, numeric type a)} {Vector::Vector#(n, Routable::Range#(a))} {position {../libs/BlueStuff/Routable.bsv 155 33}}
Typeclass {RoutableCHERI::RoutableCHERI#(type a, numeric type width)} {dependencies {{a determines width}}} {members {{{function UInt#(width) f(a x1)} getRoutingField} {{function Bool f(a x1)} getLastField}}} {instances {{RoutableCHERI::RoutableCHERI#(MemTypesCHERI::MemoryRequest#(a, b, c, d), r_width)   provisos (Bits#(a, r_width))} {RoutableCHERI::RoutableCHERI#(MemTypesCHERI::MemoryResponse#(a, b, c), r_width)   provisos (Bits#(a, r_width))}}} {position {../libs/TagController/TagController/RoutableCHERI.bsv 31 11}}
Interface {Semi_FIFOF::FIFOF_I#(type t)} polymorphic {members {{method {Action enq t {{(* ports = ["x"] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 20 11}}
Interface {Semi_FIFOF::FIFOF_O#(type t)} polymorphic {members {{method {t first {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 25 11}}
Typeclass {Semi_FIFOF::To_FIFOF_IO#(type tf, type t)} {dependencies {{tf determines t}}} {members {{{function Semi_FIFOF::FIFOF_I#(t) f(tf x1)} to_FIFOF_I} {{function Semi_FIFOF::FIFOF_O#(t) f(tf x1)} to_FIFOF_O}}} {instances {{Semi_FIFOF::To_FIFOF_IO#(FIFOF::FIFOF#(t), t)} {Semi_FIFOF::To_FIFOF_IO#(FIFOLevel::FIFOLevelIfc#(t, n), t)}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 34 11}}
Interface {Semi_FIFOF::Client_Semi_FIFOF#(type req_t, type rsp_t)} polymorphic {members {{interface Semi_FIFOF::FIFOF_O#(req_t) request {}} {interface Semi_FIFOF::FIFOF_I#(rsp_t) response {}}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 193 11}}
Interface {Semi_FIFOF::Server_Semi_FIFOF#(type req_t, type rsp_t)} polymorphic {members {{interface Semi_FIFOF::FIFOF_I#(req_t) request {}} {interface Semi_FIFOF::FIFOF_O#(rsp_t) response {}}}} {position {../src_Core/BSV_Additional_Libs/Semi_FIFOF.bsv 198 11}}
Interface {SimpleUtils::ArchReg#(type t)} polymorphic {members {{method {t _read {} {{(* ports = [] *)}}}} {method {Action _write t {{(* ports = ["x"] *)}}}} {interface WriteOnly#(t) early {}} {interface Reg#(t) late {}} {method {Bool needCommit {} {{(* ports = [] *)}}}} {method {t commitVal {} {{(* ports = [] *)}}}} {method {Action commit {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/SimpleUtils.bsv 46 11}}
Interface {SimpleUtils::ArchRegFile#(numeric type n, type a)} polymorphic {members {{method {{Vector::Vector#(n, SimpleUtils::ArchReg#(a))} r {} {}}} {method {Action commit {} {{(* ports = [] *)}}}} {method {Bit#(TLog#(n)) rd_idx {} {{(* ports = [] *)}}}} {method {a rd_old_val {} {{(* ports = [] *)}}}} {method {a rd_new_val {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/SimpleUtils.bsv 86 11}}
Typeclass {SimUtils::PrintLog#(type a)} {members {{{function Action f(a x1)} printLog} {{function Action f(a x1)} printTLog} {{function Action f(String x1, a x2)} printLogPlusArgs} {{function Action f(String x1, a x2)} printTLogPlusArgs} {{function Action f(String x1, a x2)} printPlusArgs} {{function Action f(String x1, a x2)} printTPlusArgs}}} {instances {SimUtils::PrintLog#(Fmt) SimUtils::PrintLog#(String)}} {position {../libs/BlueStuff/BlueUtils/SimUtils.bsv 44 11}}
Interface SoC_Map::SoC_Map_IFC {members {{method {Routable::Range#(64) m_plic_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_near_mem_io_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_ethernet_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_dma_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_uart16550_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_uart16550_1_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_iic_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_axi_quad_spi_0_full_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_axi_quad_spi_0_lite_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_axi_quad_spi_1_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_gpio_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_gpio_1_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_boot_rom_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_ddr4_0_uncached_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_ddr4_0_cached_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool m_is_mem_addr Bit#(64) {{(* ports = ["addr"] *)} {(* always_ready  *)}}}} {method {Bool m_is_IO_addr Bit#(64) {{(* ports = ["addr"] *)} {(* always_ready  *)}}}} {method {Bool m_is_near_mem_IO_addr Bit#(64) {{(* ports = ["addr"] *)} {(* always_ready  *)}}}} {method {Bit#(64) m_pc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapFat m_pcc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapFat m_ddc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapFat m_mtcc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapFat m_mepcc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) m_mtvec_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) m_nmivec_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {src_BSV/SoC_Map.bsv 76 11}}
Alias SoC_Map::N_External_Interrupt_Sources 0 {position {src_BSV/SoC_Map.bsv 382 13}}
Interface {SourceSink::Source#(type t)} polymorphic {members {{method {Bool canPeek {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {t peek {} {{(* ports = [] *)}}}} {method {Action drop {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 42 11}}
Interface {SourceSink::Sink#(type t)} polymorphic {members {{method {Bool canPut {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action put t {{(* ports = ["val"] *)}}}}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 48 11}}
Interface {SourceSink::SourceSink#(type t)} polymorphic {members {{interface SourceSink::Source#(t) source {}} {interface SourceSink::Sink#(t) sink {}}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 53 11}}
Typeclass {SourceSink::HasGet#(type a, type b)} {members {{{function ActionValue#(b) f(a x1)} get}}} {instances {{SourceSink::HasGet#(a, b)   provisos (GetPut::ToGet#(a, b))}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 62 11}}
Typeclass {SourceSink::ToSource#(type a, type b)} {dependencies {{a determines b}}} {members {{{function SourceSink::Source#(b) f(a x1)} toSource}}} {instances {{SourceSink::ToSource#(FIFOF::FIFOF#(t), t)} {SourceSink::ToSource#(SourceSink::Source#(t), t)}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 76 11}}
Typeclass {SourceSink::ToSink#(type a, type b)} {dependencies {{a determines b}}} {members {{{function SourceSink::Sink#(b) f(a x1)} toSink}}} {instances {{SourceSink::ToSink#(FIFOF::FIFOF#(t), t)} {SourceSink::ToSink#(SourceSink::Sink#(t), t)}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 94 11}}


Alias StatCounters::No_Of_Evts 115 {position {StatCounters.bsv 38 13}}
Struct StatCounters::EventsCore {members {{Bit#(64) evt_NO_EV {width 64}} {Bit#(64) evt_REDIRECT {width 64}} {Bit#(64) evt_TRAP {width 64}} {Bit#(64) evt_BRANCH {width 64}} {Bit#(64) evt_JAL {width 64}} {Bit#(64) evt_JALR {width 64}} {Bit#(64) evt_AUIPC {width 64}} {Bit#(64) evt_LOAD {width 64}} {Bit#(64) evt_STORE {width 64}} {Bit#(64) evt_LR {width 64}} {Bit#(64) evt_SC {width 64}} {Bit#(64) evt_AMO {width 64}} {Bit#(64) evt_SERIAL_SHIFT {width 64}} {Bit#(64) evt_INT_MUL_DIV_REM {width 64}} {Bit#(64) evt_FP {width 64}} {Bit#(64) evt_SC_SUCCESS {width 64}} {Bit#(64) evt_LOAD_WAIT {width 64}} {Bit#(64) evt_STORE_WAIT {width 64}} {Bit#(64) evt_FENCE {width 64}} {Bit#(64) evt_F_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_D_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_1_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_2_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_3_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_IMPRECISE_SETBOUND {width 64}} {Bit#(64) evt_UNREPRESENTABLE_CAP {width 64}} {Bit#(64) evt_MEM_CAP_LOAD {width 64}} {Bit#(64) evt_MEM_CAP_STORE {width 64}} {Bit#(64) evt_MEM_CAP_LOAD_TAG_SET {width 64}} {Bit#(64) evt_MEM_CAP_STORE_TAG_SET {width 64}} {Bit#(64) evt_INTERRUPT {width 64}}}} {width 1984} {position {StatCounters.bsv 72 3}}
Struct StatCounters::EventsL1I {members {{Bit#(64) evt_LD {width 64}} {Bit#(64) evt_LD_MISS {width 64}} {Bit#(64) evt_LD_MISS_LAT {width 64}} {Bit#(64) evt_TLB {width 64}} {Bit#(64) evt_TLB_MISS {width 64}} {Bit#(64) evt_TLB_MISS_LAT {width 64}} {Bit#(64) evt_TLB_FLUSH {width 64}}}} {width 448} {position {StatCounters.bsv 82 3}}
Struct StatCounters::EventsL1D {members {{Bit#(64) evt_LD {width 64}} {Bit#(64) evt_LD_MISS {width 64}} {Bit#(64) evt_LD_MISS_LAT {width 64}} {Bit#(64) evt_ST {width 64}} {Bit#(64) evt_ST_MISS {width 64}} {Bit#(64) evt_ST_MISS_LAT {width 64}} {Bit#(64) evt_AMO {width 64}} {Bit#(64) evt_AMO_MISS {width 64}} {Bit#(64) evt_AMO_MISS_LAT {width 64}} {Bit#(64) evt_TLB {width 64}} {Bit#(64) evt_TLB_MISS {width 64}} {Bit#(64) evt_TLB_MISS_LAT {width 64}} {Bit#(64) evt_TLB_FLUSH {width 64}} {Bit#(64) evt_EVICT {width 64}}}} {width 896} {position {StatCounters.bsv 99 3}}
Struct StatCounters::EventsTGC {members {{Bit#(64) evt_WRITE {width 64}} {Bit#(64) evt_WRITE_MISS {width 64}} {Bit#(64) evt_READ {width 64}} {Bit#(64) evt_READ_MISS {width 64}} {Bit#(64) evt_EVICT {width 64}} {Bit#(64) evt_SET_TAG_WRITE {width 64}} {Bit#(64) evt_SET_TAG_READ {width 64}}}} {width 448} {position {StatCounters.bsv 109 3}}
Struct StatCounters::AXI4_Slave_Events {members {{Bit#(64) evt_AW_FLIT {width 64}} {Bit#(64) evt_W_FLIT {width 64}} {Bit#(64) evt_W_FLIT_FINAL {width 64}} {Bit#(64) evt_B_FLIT {width 64}} {Bit#(64) evt_AR_FLIT {width 64}} {Bit#(64) evt_R_FLIT {width 64}} {Bit#(64) evt_R_FLIT_FINAL {width 64}}}} {width 448} {position {StatCounters.bsv 119 3}}
Struct StatCounters::AXI4_Master_Events {members {{Bit#(64) evt_AW_FLIT {width 64}} {Bit#(64) evt_W_FLIT {width 64}} {Bit#(64) evt_W_FLIT_FINAL {width 64}} {Bit#(64) evt_B_FLIT {width 64}} {Bit#(64) evt_AR_FLIT {width 64}} {Bit#(64) evt_R_FLIT {width 64}} {Bit#(64) evt_R_FLIT_FINAL {width 64}}}} {width 448} {position {StatCounters.bsv 129 3}}
Struct StatCounters::EventsLL {members {{Bit#(64) evt_LD {width 64}} {Bit#(64) evt_LD_MISS {width 64}} {Bit#(64) evt_LD_MISS_LAT {width 64}} {Bit#(64) evt_ST {width 64}} {Bit#(64) evt_ST_MISS {width 64}} {Bit#(64) evt_TLB {width 64}} {Bit#(64) evt_TLB_MISS {width 64}} {Bit#(64) evt_TLB_FLUSH {width 64}} {Bit#(64) evt_EVICT {width 64}}}} {width 576} {position {StatCounters.bsv 141 3}}
Struct StatCounters::EventsTransExe {members {{Bit#(64) evt_RENAMED_INST {width 64}} {Bit#(64) evt_WILD_JUMP {width 64}} {Bit#(64) evt_WILD_EXCEPTION {width 64}}}} {width 192} {position {StatCounters.bsv 147 3}}
Struct StatCounters::HPMEvents {members {{Maybe#(StatCounters::EventsCore) mab_EventsCore {width 1985}} {Maybe#(StatCounters::EventsL1I) mab_EventsL1I {width 449}} {Maybe#(StatCounters::EventsL1D) mab_EventsL1D {width 897}} {Maybe#(StatCounters::EventsTGC) mab_EventsTGC {width 449}} {Maybe#(StatCounters::AXI4_Slave_Events) mab_AXI4_Slave_Events {width 449}} {Maybe#(StatCounters::AXI4_Master_Events) mab_AXI4_Master_Events {width 449}} {Maybe#(StatCounters::EventsLL) mab_EventsLL {width 577}} {Maybe#(StatCounters::EventsTransExe) mab_EventsTransExe {width 193}}}} {width 5448} {position {StatCounters.bsv 158 3}}
Interface TagController::TagControllerIfc {members {{interface {MasterSlaveCHERI::Slave#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} cache {}} {interface {MasterSlaveCHERI::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} memory {}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/TagController.bsv 71 11}}
Struct TagController::AddrFrame {members {{Bool tagOnlyRead {width 1}} {Bit#(2) bank {width 2}} {Bit#(1) masterID {width 1}} {Bit#(5) transactionID {width 5}}}} {width 9} {position {../libs/TagController/TagController/TagController.bsv 86 3}}
Alias TagController::LogFlitsPerCap 1 {position {../libs/TagController/TagController/TagController.bsv 91 48}}
Alias TagController::CapsPerFlit 1 {position {../libs/TagController/TagController/TagController.bsv 92 50}}
Enum TagController::MemReqType {members {TagLookupReq StdReq}} {width 1} {position {../libs/TagController/TagController/TagController.bsv 93 37}}
Alias TagController::InFlight 4 {position {../libs/TagController/TagController/TagController.bsv 94 11}}
Alias TagController::MaxBurstLength 8 {position {../libs/TagController/TagController/TagController.bsv 95 11}}
Alias TagController::Frame Bit#(3) {position {../libs/TagController/TagController/TagController.bsv 96 37}}
Alias TagController::ReqIdCount Bit#(8) {position {../libs/TagController/TagController/TagController.bsv 97 17}}
Struct TagController::TagReqId {members {{MemTypesCHERI::ReqId reqId {width 6}} {Bit#(8) count {width 8}}}} {width 14} {position {../libs/TagController/TagController/TagController.bsv 102 3}}
Interface {TagControllerAXI::TagControllerAXI#(numeric type id_, numeric type addr_, numeric type data_)} polymorphic {members {{interface {AXI4_Types::AXI4_Master#(6, addr_, data_, 0, 0, 0, 0, 0)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, 0, 1, 0, 0, 1)} slave {}} {method {Action clear {} {{(* ports = [] *)}}}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/TagControllerAXI.bsv 60 11}}

Interface TLB::TLB_IFC {members {{method {Action mv_vm_put_va Bit#(64) {{(* ports = ["full_va"] *)}}}} {method {MMU_Cache_Common::VM_Xlate_Result mv_vm_get_xlate {Bit#(64) Bool Bool Bit#(2) Bit#(1) Bit#(1)} {{(* ports = ["satp", "read_not_write", "cap", "priv", "sstatus_SUM", "mstatus_MXR"] *)}}}} {method {Action ma_insert {Bit#(16) Bit#(27) Bit#(64) Bit#(2) Bit#(64)} {{(* ports = ["asid", "vpn", "pte", "level", "pte_pa"] *)}}}} {method {Action ma_flush {} {{(* ports = [] *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 49 11}}
Struct TLB::TLB_Lookup_Result {members {{Bool hit {width 1}} {Bit#(64) pte {width 64}} {Bit#(2) pte_level {width 2}} {Bit#(64) pte_pa {width 64}}}} {width 131} {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 83 6}}
Alias {TLB::TLB_Tag#(numeric type lvl, numeric type idx_sz)} {Bit#(TSub#(TMul#(TSub#(3, lvl), 9), idx_sz))} {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 201 4}}
Alias TLB::TLB2_Size 4 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 206 38}}
Alias TLB::TLB2_Index_sz 2 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 207 38}}
Alias TLB::TLB2_Index Bit#(2) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 208 38}}
Alias TLB::TLB2_Tag Bit#(7) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 209 38}}
Alias TLB::TLB1_Size 4 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 214 38}}
Alias TLB::TLB1_Index_sz 2 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 215 38}}
Alias TLB::TLB1_Index Bit#(2) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 216 38}}
Alias TLB::TLB1_Tag Bit#(16) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 217 38}}
Alias TLB::TLB0_Size 512 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 221 49}}
Alias TLB::TLB0_Assos 2 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 222 49}}
Alias TLB::TLB0_Index_sz 8 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 223 49}}
Alias TLB::TLB0_Index Bit#(8) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 224 49}}
Alias TLB::TLB0_Tag Bit#(19) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 225 49}}
Struct TLB::TLBE {members {{Bit#(16) asid_tag {width 16}} {Bit#(64) pte {width 64}} {Bit#(64) pte_pa {width 64}}}} {width 144} {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 240 6}}
Enum MMU_Cache_Common::VM_Xlate_Outcome {members {VM_XLATE_OK VM_XLATE_TLB_MISS VM_XLATE_EXCEPTION}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 90 69}}
Enum TV_Info::Trace_Op {members {TRACE_RESET TRACE_GPR_WRITE TRACE_FPR_WRITE TRACE_CSR_WRITE TRACE_MEM_WRITE TRACE_OTHER TRACE_I_RD TRACE_F_GRD TRACE_F_FRD TRACE_I_LOAD TRACE_F_LOAD TRACE_I_STORE TRACE_F_STORE TRACE_AMO TRACE_TRAP TRACE_RET TRACE_CSRRX TRACE_INTR}} {width 5} {position {../src_Core/ISA/TV_Info.bsv 46 17}}
Struct TV_Info::Trace_Data {members {{TV_Info::Trace_Op op {width 5}} {Bit#(64) pc {width 64}} {ISA_Decls::ISize instr_sz {width 1}} {Bit#(32) instr {width 32}} {Bit#(5) rd {width 5}} {Bit#(64) word1 {width 64}} {Bit#(64) word2 {width 64}} {Bit#(64) word3 {width 64}} {Bit#(64) word4 {width 64}} {Bit#(64) word5 {width 64}}}} {width 427} {position {../src_Core/ISA/TV_Info.bsv 62 6}}
Alias TV_Info::TV_VB_SIZE 72 {position {../src_Core/ISA/TV_Info.bsv 440 14}}
Alias TV_Info::TV_Vec_Bytes {Vector::Vector#(72, Bit#(8))} {position {../src_Core/ISA/TV_Info.bsv 441 38}}
Struct TV_Info::Info_CPU_to_Verifier {members {{Bit#(32) num_bytes {width 32}} {{Vector::Vector#(72, Bit#(8))} vec_bytes {width 576}}}} {width 608} {position {../src_Core/ISA/TV_Info.bsv 448 3}}
Interface TV_Taps::DM_Mem_Tap_IFC {members {{interface {AXI4_Types::AXI4_Slave#(4, 64, 64, 0, 1, 0, 0, 1)} slave {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} master {}} {interface GetPut::Get#(TV_Info::Trace_Data) trace_data_out {}}}} {position {../src_Core/Core/TV_Taps.bsv 56 11}}
Interface TV_Taps::DM_GPR_Tap_IFC {members {{interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} client {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} server {}} {interface GetPut::Get#(TV_Info::Trace_Data) trace_data_out {}}}} {position {../src_Core/Core/TV_Taps.bsv 143 11}}
Interface TV_Taps::DM_FPR_Tap_IFC {members {{interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} client {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} server {}} {interface GetPut::Get#(TV_Info::Trace_Data) trace_data_out {}}}} {position {../src_Core/Core/TV_Taps.bsv 185 11}}
Interface TV_Taps::DM_CSR_Tap_IFC {members {{interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} client {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} server {}} {interface GetPut::Get#(TV_Info::Trace_Data) trace_data_out {}}}} {position {../src_Core/Core/TV_Taps.bsv 227 11}}


Typeclass {Virtualizable::Virtualizable#(type t)} {members {{{function a#(Array#(t)) f(t x1, Integer x2)   provisos (IsModule#(a, b))} virtualize}}} {instances {{Virtualizable::Virtualizable#(ClientServer::Server#(req_t, rsp_t))   provisos (Bits#(rsp_t, _b), Bits#(req_t, _a), Virtualizable::NeedRsp#(req_t))} {Virtualizable::Virtualizable#(MasterSlave::Slave#(req_t, rsp_t))   provisos (Bits#(rsp_t, b__), Bits#(req_t, a__), Virtualizable::NeedRsp#(req_t))} {Virtualizable::Virtualizable#(Reg#(t))   provisos (Bits#(t, _a))}}} {position {../libs/BlueStuff/BlueBasics/Virtualizable.bsv 59 11}}
Typeclass {Virtualizable::NeedRsp#(type req_t)} {members {{{function Bool f(req_t x1)} needRsp}}} {instances {{Virtualizable::NeedRsp#(Either#(a, b))} {Virtualizable::NeedRsp#(MemTypes::MemReq#(a, b))}}} {position {../libs/BlueStuff/BlueBasics/Virtualizable.bsv 67 11}}
Struct {VnD::VnD#(type a)} polymorphic {members {{Bool v {width 1}} {a d}}} {position {../libs/TagController/TagController/CacheCore/VnD.bsv 35 3}}
Interface {CRC::CRC#(numeric type n)} polymorphic {members {{method {Action add Bit#(8) {{(* ports = ["data"] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bit#(n) result {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(n)) complete {} {{(* ports = [] *)}}}}}} {position {%/Libraries/CRC.bsv 19 11 {Library CRC}}}

TaggedUnion {Reserved::Reserved#(numeric type n)} polymorphic {members {{Bit#(n) Reserved}}} {position {%/Libraries/Reserved.bs 16 5 {Library Reserved}}}
TaggedUnion {Reserved::ReservedZero#(numeric type n)} polymorphic {members {{Bit#(n) ReservedZero}}} {position {%/Libraries/Reserved.bs 17 5 {Library Reserved}}}
TaggedUnion {Reserved::ReservedOne#(numeric type n)} polymorphic {members {{Bit#(n) ReservedOne}}} {position {%/Libraries/Reserved.bs 18 5 {Library Reserved}}}
Struct BRAM::BRAM_Configure {members {{Integer memorySize} {Integer latency} {BRAM::LoadFormat loadFormat} {Integer outFIFODepth} {Bool allowWriteResponseBypass {width 1}}}} {position {%/Libraries/BRAM.bsv 47 6 {Library BRAM}}}
TaggedUnion BRAM::LoadFormat {members {{void None {width 0}} {String Hex} {String Binary}}} {position {%/Libraries/BRAM.bsv 53 6 {Library BRAM}}}
Struct {BRAM_Compat::BRAMRequest#(type addr, type data)} polymorphic {members {{Bool write {width 1}} {addr address} {data datain}}} {position {%/Libraries/BRAM_Compat.bsv 23 19 {Library BRAM_Compat}}}
Struct {BRAM_Compat::BRAMRequestBE#(type addr, type data, numeric type n)} polymorphic {members {{Bit#(n) writeen} {addr address} {data datain}}} {position {%/Libraries/BRAM_Compat.bsv 29 19 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMServer#(type addr, type data)} {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} {position {%/Libraries/BRAM_Compat.bsv 31 49 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMClient#(type addr, type data)} {ClientServer::Client#(BRAM_Compat::BRAMRequest#(addr, data), data)} {position {%/Libraries/BRAM_Compat.bsv 32 49 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMServerBE#(type addr, type data, numeric type n)} {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} {position {%/Libraries/BRAM_Compat.bsv 34 54 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMClientBE#(type addr, type data, numeric type n)} {ClientServer::Client#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} {position {%/Libraries/BRAM_Compat.bsv 35 54 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM1Port#(type addr, type data)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portA {}}}} {position {%/Libraries/BRAM_Compat.bsv 66 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM1PortBE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}}}} {position {%/Libraries/BRAM_Compat.bsv 94 11 {Library BRAM_Compat}}}
Alias {BRAM::BRAM1PortBE8#(type addr, type data)} {BRAM::BRAM1PortBE#(addr, data, TDiv#(SizeOf#(data), 8))} {position {%/Libraries/BRAM.bsv 134 59 {Library BRAM}}}
Interface {BRAM_Compat::BRAM2Port#(type addr, type data)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 61 11 {Library BRAM_Compat}}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {BRAM_Compat::BRAM2PortBE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 89 11 {Library BRAM_Compat}}}
Typeclass {BRAM::RequestToBRAM#(type bram_request_t, type bramifc_t)} {members {{{function Action f(bramifc_t x1, bram_request_t x2)} doRequest}}} {instances {{BRAM::RequestToBRAM#(BRAM::BRAMRequest#(addr, data), BRAMCore::BRAM_PORT#(addr, data))} {BRAM::RequestToBRAM#(BRAM::BRAMRequestBE#(addr, data, n), BRAMCore::BRAM_PORT_BE#(addr, data, n))}}} {position {%/Libraries/BRAM.bsv 429 11 {Library BRAM}}}
Typeclass {BRAM::RequestToResponse#(type bram_request_t)} {members {{{function Bool f(bram_request_t x1)} responseRequired} {{function Bool f(bram_request_t x1)} isWriteRequest}}} {instances {{BRAM::RequestToResponse#(BRAM::BRAMRequest#(addr, data))} {BRAM::RequestToResponse#(BRAM::BRAMRequestBE#(addr, data, n))}}} {position {%/Libraries/BRAM.bsv 432 11 {Library BRAM}}}
Typeclass {BRAM::BRAMToResponse#(type bramifc_t, type response_t)} {members {{{function ActionValue#(response_t) f(bramifc_t x1)} getResponse} {{function response_t f(bramifc_t x1)} readResponse}}} {instances {{BRAM::BRAMToResponse#(BRAMCore::BRAM_PORT#(addr, data), data)} {BRAM::BRAMToResponse#(BRAMCore::BRAM_PORT_BE#(addr, data, n), data)}}} {position {%/Libraries/BRAM.bsv 436 11 {Library BRAM}}}
Interface {BRAM::ServerWithClear#(type req, type resp)} polymorphic {members {{interface {ClientServer::Server#(req, resp)} server {}} {method {Action clear {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/BRAM.bsv 443 11 {Library BRAM}}}
Interface BRAM::SizedReg {members {{method {Action _write Integer {{(* ports = ["i"] *)}}}} {method {Action addA Integer {{(* ports = ["i"] *)}}}} {method {Action addB Integer {{(* ports = ["d"] *)}}}} {method {Bool isLessThan Integer {{(* ports = ["i"] *)}}}} {method {Bool isGreaterThan Integer {{(* ports = ["i"] *)}}}} {method {Bool isEqualTo Integer {{(* ports = ["i"] *)}}}}}} {position {%/Libraries/BRAM.bsv 880 11 {Library BRAM}}}
Interface {GetPut::Get#(type a)} polymorphic {members {{method {ActionValue#(a) get {} {}}}}} {position {%/Libraries/GetPut.bs 88 10 {Library GetPut}}}
Interface {GetPut::GetS#(type a)} polymorphic {members {{method {a first {} {}}} {method {Action deq {} {}}}}} {position {%/Libraries/GetPut.bs 91 10 {Library GetPut}}}
Interface {GetPut::Put#(type a)} polymorphic {members {{method {Action put a {{(* prefix = "" *)} {(* result = "UNUSED" *)} {(* ports = ["put"] *)}}}}}} {position {%/Libraries/GetPut.bs 115 10 {Library GetPut}}}
Interface {GetPut::PutS#(type a)} polymorphic {members {{method {Action offer a {}}} {method {Bool accepted {} {}}}}} {position {%/Libraries/GetPut.bs 118 10 {Library GetPut}}}
Alias {GetPut::GetPut#(type a)} {Tuple2#(GetPut::Get#(a), GetPut::Put#(a))} {position {%/Libraries/GetPut.bs 127 5 {Library GetPut}}}
Typeclass {GetPut::ToGet#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Get#(b) f(a x1)} toGet}}} {instances {{GetPut::ToGet#(ActionValue#(a), a)} {GetPut::ToGet#(AlignedFIFOs::AlignedFIFO#(t), t)} {GetPut::ToGet#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToGet#(CommitIfc::SendCommit#(a), a)} {GetPut::ToGet#(FIFO::FIFO#(a), a)} {GetPut::ToGet#(FIFOF::FIFOF#(a), a)} {GetPut::ToGet#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(GetPut::Get#(a), a)} {GetPut::ToGet#(MasterSlaveCHERI::CheckedGet#(data_t), data_t)} {GetPut::ToGet#(NullCrossingFIFOF::CrossingFIFOF#(t), t)} {GetPut::ToGet#(PAClib::PipeOut#(a), a)} {GetPut::ToGet#(RWire#(a), a)} {GetPut::ToGet#(ReadOnly#(a), a)} {GetPut::ToGet#(Reg#(a), a)} {GetPut::ToGet#(Semi_FIFOF::FIFOF_O#(t), t)} {GetPut::ToGet#(SourceSink::Source#(t), t)} {GetPut::ToGet#(a, a)}}} {position {%/Libraries/GetPut.bs 417 6 {Library GetPut}}}
Typeclass {GetPut::ToPut#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Put#(b) f(a x1)} toPut}}} {instances {{GetPut::ToPut#(AlignedFIFOs::AlignedFIFO#(t), t)} {GetPut::ToPut#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToPut#(CommitIfc::RecvCommit#(a), a)} {GetPut::ToPut#(FIFO::FIFO#(a), a)} {GetPut::ToPut#(FIFOF::FIFOF#(a), a)} {GetPut::ToPut#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(GetPut::Put#(a), a)} {GetPut::ToPut#(MasterSlaveCHERI::CheckedPut#(data_t), data_t)} {GetPut::ToPut#(NullCrossingFIFOF::CrossingFIFOF#(t), t)} {GetPut::ToPut#(RWire#(a), a)} {GetPut::ToPut#(Reg#(a), a)} {GetPut::ToPut#(Semi_FIFOF::FIFOF_I#(t), t)} {GetPut::ToPut#(SourceSink::Sink#(t), t)} {GetPut::ToPut#(function Action f(a x1), a)}}} {position {%/Libraries/GetPut.bs 420 6 {Library GetPut}}}
Interface {ClientServer::Client#(type a, type b)} polymorphic {members {{interface GetPut::Get#(a) request {}} {interface GetPut::Put#(b) response {}}}} {position {%/Libraries/ClientServer.bs 34 10 {Library ClientServer}}}
Interface {ClientServer::Server#(type a, type b)} polymorphic {members {{interface GetPut::Put#(a) request {}} {interface GetPut::Get#(b) response {}}}} {position {%/Libraries/ClientServer.bs 45 10 {Library ClientServer}}}
Alias {ClientServer::ClientServer#(type a, type b)} {Tuple2#(ClientServer::Client#(a, b), ClientServer::Server#(a, b))} {position {%/Libraries/ClientServer.bs 100 5 {Library ClientServer}}}
TaggedUnion {ModuleContextCore::ModuleContext#(type c, type i)} polymorphic {members {{{module f#(c x1)(Tuple2#(c, i))} M}}} {position {%/Libraries/ModuleContextCore.bs 4 5 {Library ModuleContextCore}}}

Struct {Complex::Complex#(type any_t)} polymorphic {members {{any_t rel} {any_t img}}} {position {%/Libraries/Complex.bsv 22 11 {Library Complex}}}




Interface {FoldFIFOF::FoldFIFO#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Bool notFull {} {}}} {method {Bool notEmpty {} {}}} {method {Action clear {} {}}} {method {b foldr {{function b f(a x1, b x2)} b} {}}}}} {position {%/Libraries/FoldFIFOF.bs 12 10 {Library FoldFIFOF}}}

Typeclass {DummyDriver::DummyDriver#(type i)} {members {{{a#(i)   provisos (IsModule#(a, b))} mkStub}}} {instances {{DummyDriver::DummyDriver#(Memory::MemoryClient#(a, d))} {DummyDriver::DummyDriver#(Vector::Vector#(n, i))   provisos (DummyDriver::DummyDriver#(i))}}} {position {%/Libraries/DummyDriver.bsv 21 11 {Library DummyDriver}}}
Interface {SPSRAM::VSyncSRAM#(numeric type adrs, numeric type dtas)} polymorphic {members {{method {PrimAction exec {Bit#(adrs) Bit#(dtas) Bit#(1) Bit#(1)} {}}} {method {Bit#(dtas) rdata {} {}}}}} {position {%/Libraries/SPSRAM.bs 67 10 {Library SPSRAM}}}
Interface {BRAMFIFO::IBRAMFIFOF#(numeric type log2depth, type t)} polymorphic {members {{interface FIFOF::FIFOF#(t) fifo {}}}} {position {%/Libraries/BRAMFIFO.bsv 32 11 {Library BRAMFIFO}}}
Interface {BRAMFIFO::ISyncBRAMFIFOFIfc#(numeric type log2depth, type t)} polymorphic {members {{interface Clocks::SyncFIFOIfc#(t) fifo {}}}} {position {%/Libraries/BRAMFIFO.bsv 36 11 {Library BRAMFIFO}}}
Interface {AlignedFIFOs::Store#(type i, type a, numeric type n)} polymorphic {members {{method {Action write {i a} {{(* ports = ["idx", "value"] *)}}}} {method {Action prefetch i {{(* ports = ["idx"] *)}}}} {method {a read i {{(* ports = ["idx"] *)}}}}}} {position {%/Libraries/AlignedFIFOs.bsv 44 11 {Library AlignedFIFOs}}}
Interface {AlignedFIFOs::RawReg#(numeric type n)} polymorphic {members {{method {Action write Bit#(n) {{(* ports = ["x"] *)}}}} {method {Bit#(n) read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/AlignedFIFOs.bsv 54 11 {Library AlignedFIFOs}}} {attributes {{(* always_ready  *)}}}
Interface {AlignedFIFOs::AlignedFIFO#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["x"] *)}}}} {method {a first {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/AlignedFIFOs.bsv 232 11 {Library AlignedFIFOs}}}
Interface {Pull::Pull#(type a)} polymorphic {members {{method {ActionValue#(a) pull {} {}}}}} {position {%/Libraries/Pull.bs 21 10 {Library Pull}}}
Interface {Counter::Counter#(numeric type n)} polymorphic {members {{method {Action inc Bit#(n) {}}} {method {Action dec Bit#(n) {}}} {method {Action up {} {}}} {method {Action down {} {}}} {method {Bit#(n) value {} {}}} {method {Action setC Bit#(n) {}}} {method {Action setF Bit#(n) {}}} {method {Action clear {} {}}}}} {position {%/Libraries/Counter.bs 5 10 {Library Counter}}}
Interface {Counter::VCounter#(numeric type n)} polymorphic {members {{method {PrimAction addA Bit#(n) {}}} {method {PrimAction addB Bit#(n) {}}} {method {Bit#(n) value {} {}}} {method {PrimAction setC Bit#(n) {}}} {method {PrimAction setF Bit#(n) {}}}}} {position {%/Libraries/Counter.bs 15 10 {Library Counter}}}
Interface {SRAM::ShiftReg#(numeric type n, type a)} polymorphic {members {{method {a output {} {}}} {method {Action shift a {}}}}} {position {%/Libraries/SRAM.bs 135 11 {Library SRAM}}}
Interface StmtFSMUtil::MEState {members {{method {Action set Integer {{(* ports = ["value"] *)}}}} {method {Action set_delayed Integer {{(* ports = ["value"] *)}}}} {method {Action reset {} {{(* ports = [] *)}}}} {method {Action reset_delayed {} {{(* ports = [] *)}}}} {method {Bool is Integer {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/StmtFSMUtil.bsv 7 11 {Library StmtFSMUtil}}}
Interface {StmtFSMUtil::MEStateInternal#(type a)} polymorphic {members {{method {Action set Integer {{(* ports = ["value"] *)}}}} {method {Action set_delayed Integer {{(* ports = ["value"] *)}}}} {method {Action reset {} {{(* ports = [] *)}}}} {method {Action reset_delayed {} {{(* ports = [] *)}}}} {method {Bool is Integer {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/StmtFSMUtil.bsv 15 11 {Library StmtFSMUtil}}}
Alias {SyncSRAM::SyncSRAMS#(numeric type lat, numeric type adrs, numeric type dtas)} {ClientServer::Server#(SyncSRAM::SyncSRAMrequest#(lat, adrs, dtas), Bit#(dtas))} {position {%/Libraries/SyncSRAM.bs 21 5 {Library SyncSRAM}}}
Alias {SyncSRAM::SyncSRAMC#(numeric type lat, numeric type adrs, numeric type dtas)} {ClientServer::Client#(SyncSRAM::SyncSRAMrequest#(lat, adrs, dtas), Bit#(dtas))} {position {%/Libraries/SyncSRAM.bs 30 5 {Library SyncSRAM}}}
Interface {SyncSRAM::SyncSRAMrequest#(numeric type lat, numeric type adrs, numeric type dtas)} polymorphic {members {{method {Bit#(adrs) addr {} {}}} {method {Bit#(dtas) wdata {} {}}} {method {Bit#(1) we {} {}}} {method {Bit#(1) ena {} {}}}}} {position {%/Libraries/SyncSRAM.bs 43 11 {Library SyncSRAM}}}
Alias SquareRoot::SqrtT UInt#(64) {position {%/Libraries/SquareRoot.bsv 256 19 {Library SquareRoot}}}
Alias SquareRoot::SqrtTFx {FixedPoint::FixedPoint#(32, 32)} {position {%/Libraries/SquareRoot.bsv 257 28 {Library SquareRoot}}}

Interface {CommitIfc::SendCommit#(type a)} polymorphic {members {{method {a dataout {} {{(* ports = [] *)}}}} {method {Action ack {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/CommitIfc.bsv 15 11 {Library CommitIfc}}}
Interface {CommitIfc::RecvCommit#(type a)} polymorphic {members {{method {Action datain a {{(* ports = ["din"] *)} {(* always_ready  *)}}}} {method {Bool accept {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/CommitIfc.bsv 21 11 {Library CommitIfc}}}
Typeclass {CommitIfc::ToSendCommit#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(CommitIfc::SendCommit#(b)) f(a x1)   provisos (IsModule#(c, d))} mkSendCommit}}} {instances {{CommitIfc::ToSendCommit#(Clocks::SyncFIFOIfc#(a), a)} {CommitIfc::ToSendCommit#(FIFO::FIFO#(a), a)} {CommitIfc::ToSendCommit#(FIFOF::FIFOF#(a), a)} {CommitIfc::ToSendCommit#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {CommitIfc::ToSendCommit#(GetPut::Get#(a), a)   provisos (Bits#(a, sa))} {CommitIfc::ToSendCommit#(RWire#(a), a)}}} {position {%/Libraries/CommitIfc.bsv 147 11 {Library CommitIfc}}}
Typeclass {CommitIfc::ToRecvCommit#(type a, type b)} {dependencies {{a determines b}}} {members {{{function c#(CommitIfc::RecvCommit#(b)) f(a x1)   provisos (IsModule#(c, d))} mkRecvCommit}}} {instances {{CommitIfc::ToRecvCommit#(Clocks::SyncFIFOIfc#(a), a)   provisos (Bits#(a, sa))} {CommitIfc::ToRecvCommit#(FIFOF::FIFOF#(a), a)   provisos (Bits#(a, sa))} {CommitIfc::ToRecvCommit#(FIFOLevel::FIFOLevelIfc#(a, n), a)   provisos (Bits#(a, sa))} {CommitIfc::ToRecvCommit#(GetPut::Put#(a), a)   provisos (Bits#(a, sa))} {CommitIfc::ToRecvCommit#(RWire#(a), a)}}} {position {%/Libraries/CommitIfc.bsv 152 11 {Library CommitIfc}}}
Interface {CommitIfc::ClientCommit#(type req, type resp)} polymorphic {members {{interface CommitIfc::SendCommit#(req) request {}} {interface CommitIfc::RecvCommit#(resp) response {}}}} {position {%/Libraries/CommitIfc.bsv 354 11 {Library CommitIfc}}}
Interface {CommitIfc::ServerCommit#(type req, type resp)} polymorphic {members {{interface CommitIfc::RecvCommit#(req) request {}} {interface CommitIfc::SendCommit#(resp) response {}}}} {position {%/Libraries/CommitIfc.bsv 359 11 {Library CommitIfc}}}
TaggedUnion {ListN::ListN#(numeric type n, type a)} polymorphic {members {{List#(a) L}}} {position {%/Libraries/ListN.bs 56 6 {Library ListN}}}
Interface {CBus::CBus#(numeric type sa, numeric type sd)} polymorphic {members {{method {Action write {Bit#(sa) Bit#(sd)} {{(* ports = ["addr", "data"] *)}}}} {method {ActionValue#(Bit#(sd)) read Bit#(sa) {{(* ports = ["addr"] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/CBus.bsv 16 11 {Library CBus}}}
Interface {CBus::IWithCBus#(type cbus_IFC, type device_IFC)} polymorphic {members {{method {cbus_IFC cbus_ifc {} {}}} {method {device_IFC device_ifc {} {}}}}} {position {%/Libraries/CBus.bsv 23 11 {Library CBus}}}
Alias {CBus::CBusItem#(numeric type sa, numeric type sd)} {CBus::CBus#(sa, sd)} {position {%/Libraries/CBus.bsv 33 23 {Library CBus}}}
Alias {CBus::ModWithCBus#(numeric type sa, numeric type sd, type i)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(CBus::CBus#(sa, sd)), HList::HNil), i)} {position {%/Libraries/CBus.bsv 36 46 {Library CBus}}}
Struct {CBus::CRAddr#(numeric type sa, numeric type sd)} polymorphic {members {{Bit#(sa) a} {Bit#(TLog#(sd)) o}}} {position {%/Libraries/CBus.bsv 41 6 {Library CBus}}}
Typeclass {CBus::ExtendNP#(type a, numeric type m, numeric type n)} {members {{{function a#(m) f(a#(n) x1)} extendNP} {{function a#(m) f(a#(n) x1)} zeroExtendNP} {{function a#(m) f(a#(n) x1)} signExtendNP} {{function a#(m) f(a#(n) x1)} truncateNP} {{function a#(m) f(a#(n) x1)} truncateLSBNP}}} {instances {{CBus::ExtendNP#(Bit, m, n)} {CBus::ExtendNP#(Int, m, n)} {CBus::ExtendNP#(UInt, m, n)}}} {position {%/Libraries/CBus.bsv 454 11 {Library CBus}}}


Alias {ConfigReg::ConfigReg#(type a)} Reg#(a) {position {%/Libraries/ConfigReg.bs 26 5 {Library ConfigReg}}}
Interface {RevertingVirtualReg::VReg#(numeric type n)} polymorphic {members {{method {PrimAction write Bit#(n) {}}} {method {Bit#(n) read {} {}}}}} {position {%/Libraries/RevertingVirtualReg.bs 3 10 {Library RevertingVirtualReg}}}
Interface {BGetPut::BGetS#(numeric type sa)} polymorphic {members {{method {Bit#(sa) gvalue {} {}}} {method {Bool gpresent {} {}}} {method {Action gcredit Bool {}}}}} {position {%/Libraries/BGetPut.bs 36 10 {Library BGetPut}}}
Interface {BGetPut::BPutS#(numeric type sa)} polymorphic {members {{method {Action pvalue Bit#(sa) {}}} {method {Action ppresent Bool {}}} {method {Bool pcredit {} {}}}}} {position {%/Libraries/BGetPut.bs 48 10 {Library BGetPut}}}
Alias {BGetPut::BGet#(type a)} BGetPut::BGetS#(SizeOf#(a)) {position {%/Libraries/BGetPut.bs 60 5 {Library BGetPut}}}
Alias {BGetPut::BPut#(type a)} BGetPut::BPutS#(SizeOf#(a)) {position {%/Libraries/BGetPut.bs 61 5 {Library BGetPut}}}
Alias {BGetPut::BGetPut#(type a)} {Tuple2#(BGetPut::BGetS#(SizeOf#(a)), GetPut::Put#(a))} {position {%/Libraries/BGetPut.bs 63 5 {Library BGetPut}}}
Alias {BGetPut::GetBPut#(type a)} {Tuple2#(GetPut::Get#(a), BGetPut::BPutS#(SizeOf#(a)))} {position {%/Libraries/BGetPut.bs 64 5 {Library BGetPut}}}
Interface {BGetPut::BClientS#(numeric type sa, numeric type sb)} polymorphic {members {{interface BGetPut::BGetS#(sa) request {}} {interface BGetPut::BPutS#(sb) response {}}}} {position {%/Libraries/BGetPut.bs 182 10 {Library BGetPut}}}
Interface {BGetPut::BServerS#(numeric type sa, numeric type sb)} polymorphic {members {{interface BGetPut::BPutS#(sa) request {}} {interface BGetPut::BGetS#(sb) response {}}}} {position {%/Libraries/BGetPut.bs 186 10 {Library BGetPut}}}
Alias {BGetPut::BClient#(type a, type b)} {BGetPut::BClientS#(SizeOf#(a), SizeOf#(b))} {position {%/Libraries/BGetPut.bs 208 5 {Library BGetPut}}}
Alias {BGetPut::BServer#(type a, type b)} {BGetPut::BServerS#(SizeOf#(a), SizeOf#(b))} {position {%/Libraries/BGetPut.bs 209 5 {Library BGetPut}}}
Alias {BGetPut::BClientServer#(type a, type b)} {Tuple2#(BGetPut::BClientS#(SizeOf#(a), SizeOf#(b)), ClientServer::Server#(a, b))} {position {%/Libraries/BGetPut.bs 210 5 {Library BGetPut}}}
Alias {BGetPut::ClientBServer#(type a, type b)} {Tuple2#(ClientServer::Client#(a, b), BGetPut::BServerS#(SizeOf#(a), SizeOf#(b)))} {position {%/Libraries/BGetPut.bs 211 5 {Library BGetPut}}}
Struct {ZBusUtil::ZBit#(type t)} polymorphic {members {{t word}}} {position {%/Libraries/ZBusUtil.bsv 34 19 {Library ZBusUtil}}}
Interface {ZBusUtil::ConvertToZ#(type i)} polymorphic {members {{method {ZBusUtil::ZBit#(i) convert {i Bool} {{(* ports = ["x1", "x2"] *)}}}}}} {position {%/Libraries/ZBusUtil.bsv 52 11 {Library ZBusUtil}}}
Interface {ZBusUtil::ConvertFromZ#(type i)} polymorphic {members {{method {i convert ZBusUtil::ZBit#(i) {{(* ports = ["x1"] *)}}}}}} {position {%/Libraries/ZBusUtil.bsv 91 11 {Library ZBusUtil}}}
Interface {ZBusUtil::ResolveZ#(type i)} polymorphic {members {{method {ZBusUtil::ZBit#(i) resolve {ZBusUtil::ZBit#(i) ZBusUtil::ZBit#(i)} {{(* ports = ["x1", "x2"] *)}}}}}} {position {%/Libraries/ZBusUtil.bsv 130 11 {Library ZBusUtil}}}
Interface {ZBus::ZBusInternalIFC#(type t)} polymorphic {members {{method {ZBusUtil::ZBit#(t) zout {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ZBus.bsv 84 11 {Library ZBus}}}
Interface {ZBus::ZBusBusIFC#(type t)} polymorphic {members {{method {Action fromBusSample {ZBusUtil::ZBit#(t) Bool} {{(* ports = ["value", "isJust"] *)}}}} {method {ZBusUtil::ZBit#(t) toBusValue {} {{(* ports = [] *)}}}} {method {Bool toBusCtl {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ZBus.bsv 158 11 {Library ZBus}}}
Enum ZBus::BState {members {HiZN HiZ Nothing}} {width 2} {position {%/Libraries/ZBus.bsv 227 35 {Library ZBus}}}
Interface {ZBus::ZBusClientIFC#(type t)} polymorphic {members {{method {Action drive t {{(* ports = ["value"] *)}}}} {method {t get {} {{(* ports = [] *)}}}} {method {Bool fromBusValid {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ZBus.bsv 317 11 {Library ZBus}}}
Interface {ZBus::ZBusDualIFC#(type t)} polymorphic {members {{interface ZBus::ZBusBusIFC#(t) busIFC {}} {interface ZBus::ZBusClientIFC#(t) clientIFC {}}}} {position {%/Libraries/ZBus.bsv 323 11 {Library ZBus}}}
Interface {ProbeWire::ProbeWire#(type a)} polymorphic {members {{method {a id a {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/ProbeWire.bsv 28 11 {Library ProbeWire}}}

Interface {SPSRAM::VSyncSRAM#(numeric type adrs, numeric type dtas)} polymorphic {members {{method {PrimAction exec {Bit#(adrs) Bit#(dtas) Bit#(1) Bit#(1)} {}}} {method {Bit#(dtas) rdata {} {}}}}} {position {%/Libraries/SPSRAM.bs 67 10 {Library SPSRAM}}}
Interface Clocks::ClockGenIfc {members {{interface Clock gen_clk {}}}} {position {%/Libraries/Clocks.bsv 23 11 {Library Clocks}}}
Interface {Clocks::MakeClockIfc#(type one_bit_type)} polymorphic {members {{method {Action setClockValue one_bit_type {{(* ports = ["value"] *)}}}} {method {one_bit_type getClockValue {} {{(* ports = [] *)}}}} {method {Action setGateCond Bool {{(* ports = ["gate"] *)}}}} {method {Bool getGateCond {} {{(* ports = [] *)}}}} {interface Clock new_clk {}}}} {position {%/Libraries/Clocks.bsv 102 11 {Library Clocks}}}
Interface {Clocks::MakeUngatedClockIfc#(type one_bit_type)} polymorphic {members {{method {Action setClockValue one_bit_type {{(* ports = ["value"] *)}}}} {method {one_bit_type getClockValue {} {{(* ports = [] *)}}}} {method {Action setGateCond Bool {{(* ports = ["gate"] *)}}}} {method {Bool getGateCond {} {{(* ports = [] *)}}}} {method {Bool unused {} {{(* ports = [] *)}}}} {interface Clock new_clk {}}}} {position {%/Libraries/Clocks.bsv 111 11 {Library Clocks}}}
Interface Clocks::GatedClockIfc {members {{method {Action setGateCond Bool {{(* ports = ["gate"] *)}}}} {method {Bool getGateCond {} {{(* ports = [] *)}}}} {interface Clock new_clk {}}}} {position {%/Libraries/Clocks.bsv 263 11 {Library Clocks}}}
Interface Clocks::MuxClkIfc {members {{method {Action select Bool {{(* ports = ["ab"] *)}}}} {interface Clock clock_out {}}}} {position {%/Libraries/Clocks.bsv 346 11 {Library Clocks}}}
Interface Clocks::SelectClkIfc {members {{method {Action select Bool {{(* ports = ["ab"] *)}}}} {interface Clock clock_out {}} {interface Reset reset_out {}}}} {position {%/Libraries/Clocks.bsv 406 11 {Library Clocks}}}
Alias Clocks::ClkNextRdy Bool {position {%/Libraries/Clocks.bsv 495 14 {Library Clocks}}}
Interface Clocks::ClockDividerIfc {members {{interface Clock fastClock {}} {interface Clock slowClock {}} {method {Bool clockReady {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 498 11 {Library Clocks}}}
Interface Clocks::ClockDivider_internal {members {{interface Clock slowClock {}} {method {Bool clockReady {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 583 11 {Library Clocks}}}
Interface {Clocks::SyncBitIfc#(type one_bit_type)} polymorphic {members {{method {Action send one_bit_type {{(* ports = ["bitData"] *)}}}} {method {one_bit_type read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 683 11 {Library Clocks}}}
Interface Clocks::SyncPulseIfc {members {{method {Action send {} {{(* ports = [] *)}}}} {method {Bool pulse {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 997 11 {Library Clocks}}}
Interface {Clocks::RegI#(type a_type)} polymorphic {members {{method {Action write a_type {{(* ports = ["x1"] *)}}}} {method {a_type read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 1162 11 {Library Clocks}}}
Interface {Clocks::SyncFIFOIfc#(type a_type)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 1276 11 {Library Clocks}}}
Interface Clocks::SyncFIFO0Ifc {members {{method {Action enq {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 1285 11 {Library Clocks}}}
Interface {Clocks::DualPortRamIfc#(type addr_t, type data_t)} polymorphic {members {{method {Action write {addr_t data_t} {{(* ports = ["wr_addr", "din"] *)}}}} {method {data_t read addr_t {{(* ports = ["rd_addr"] *)}}}}}} {position {%/Libraries/Clocks.bsv 1597 11 {Library Clocks}}}
Interface {Clocks::CrossingReg#(type a)} polymorphic {members {{method {Action _write a {{(* ports = ["datain"] *)}}}} {method {a _read {} {{(* ports = [] *)}}}} {method {a crossed {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 1753 11 {Library Clocks}}}
Interface {Clocks::FIFOF_MC#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["x1"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool i_notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool i_notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Clocks.bsv 2017 11 {Library Clocks}}}
Interface Clocks::MakeResetIfc {members {{method {Action assertReset {} {{(* ports = [] *)}}}} {method {Bool isAsserted {} {{(* ports = [] *)}}}} {interface Reset new_rst {}}}} {position {%/Libraries/Clocks.bsv 2269 11 {Library Clocks}}}
Interface Clocks::ResetGenIfc {members {{interface Reset gen_rst {}}}} {position {%/Libraries/Clocks.bsv 2336 11 {Library Clocks}}}
Interface Clocks::MuxRstIfc {members {{method {Action select Bool {{(* ports = ["ab"] *)}}}} {interface Reset reset_out {}}}} {position {%/Libraries/Clocks.bsv 2538 11 {Library Clocks}}}
Interface Clocks::JoinRstIfc {members {{interface Reset reset_out {}}}} {position {%/Libraries/Clocks.bsv 2563 11 {Library Clocks}}}
Typeclass {Clocks::ClockConv#(type a)} {members {{{function b#(a) f(Integer x1, a x2)   provisos (IsModule#(b, c))} mkConverter}}} {instances {{Clocks::ClockConv#(ActionValue#(a))   provisos (Bits#(a, sa))} {Clocks::ClockConv#(ClientServer::Client#(a, b))   provisos (Bits#(b, sb), Bits#(a, sa))} {Clocks::ClockConv#(ClientServer::Server#(a, b))   provisos (Bits#(b, sb), Bits#(a, sa))} {Clocks::ClockConv#(GetPut::Get#(a))   provisos (Bits#(a, sa))} {Clocks::ClockConv#(GetPut::Put#(a))   provisos (Bits#(a, sa))} {Clocks::ClockConv#(function Action f(a x1))   provisos (Bits#(a, sa))}}} {position {%/Libraries/Clocks.bsv 2626 11 {Library Clocks}}}
Alias {TRAM::TRAM#(type tag, type adr, type dta)} {ClientServer::Server#(TRAM::TRAMreq#(tag, adr, dta), Tuple2#(tag, dta))} {position {%/Libraries/TRAM.bs 18 5 {Library TRAM}}}
Alias {TRAM::TRAMclient#(type tag, type adr, type dta)} {ClientServer::Client#(TRAM::TRAMreq#(tag, adr, dta), Tuple2#(tag, dta))} {position {%/Libraries/TRAM.bs 26 5 {Library TRAM}}}
TaggedUnion {TRAM::TRAMreq#(type tg, type adr, type dta)} polymorphic {members {{{Tuple2#(tg, adr)} Read} {{Tuple2#(adr, dta)} Write}}} {position {%/Libraries/TRAM.bs 45 5 {Library TRAM}}}
Alias {TRAM::TRAMresp#(type tg, type dta)} {Tuple2#(tg, dta)} {position {%/Libraries/TRAM.bs 57 5 {Library TRAM}}}
Interface {PAClib::PipeOut#(type t)} polymorphic {members {{method {t first {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PAClib.bsv 44 11 {Library PAClib}}}
Alias {PAClib::Pipe#(type ta, type tb)} {module f#(PAClib::PipeOut#(ta) x1)(PAClib::PipeOut#(tb))} {position {%/Libraries/PAClib.bsv 55 9 {Library PAClib}}}
Typeclass {PAClib::VectorTreeReduce#(numeric type n, type a)} {members {{{module f#(module x1#(PAClib::PipeOut#(Tuple2#(a, a)) x1)(PAClib::PipeOut#(a)), Bit#(32) x2, PAClib::PipeOut#(Vector::Vector#(n, a)) x3)(PAClib::PipeOut#(a))} mkTreeReducePipe} {{module f#(function a x1(a x1, a x2), function a x2(a x1), Bit#(32) x3, PAClib::PipeOut#(Vector::Vector#(n, a)) x4)(PAClib::PipeOut#(a))} mkTreeReduceFn}}} {instances {{PAClib::VectorTreeReduce#(1, a)   provisos (Bits#(a, sa))} {PAClib::VectorTreeReduce#(2, a)   provisos (Bits#(a, sa))} {PAClib::VectorTreeReduce#(n, a)   provisos (PAClib::VectorTreeReduce#(n2, a), Div#(n, 2, n2), Bits#(a, sa))}}} {position {%/Libraries/PAClib.bsv 1582 11 {Library PAClib}}}
Alias LBus::LBUS_ADDR_SIZE 24 {position {%/Libraries/LBus.bsv 19 12 {Library LBus}}}
Alias LBus::LBUS_DATA_SIZE 32 {position {%/Libraries/LBus.bsv 20 12 {Library LBus}}}
Alias LBus::LBusContext {LBus::LBusContextP#(24, 32)} {position {%/Libraries/LBus.bsv 22 58 {Library LBus}}}
Alias LBus::LBusContextIfc {LBus::ILbLeaf#(24, 32)} {position {%/Libraries/LBus.bsv 23 58 {Library LBus}}}
Alias LBus::SA 24 {position {%/Libraries/LBus.bsv 29 24 {Library LBus}}}
Alias LBus::SD 32 {position {%/Libraries/LBus.bsv 30 24 {Library LBus}}}
Interface {LBus::LBSReg#(numeric type sa, numeric type sd)} polymorphic {members {{method {{LBus::LbAddr#(sa, sd)} lbsAddr {} {{(* ports = [] *)}}}} {method {Action lbsSet Bit#(sd) {{(* ports = ["x1"] *)}}}} {method {ActionValue#(Bit#(sd)) lbsGet {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 38 11 {Library LBus}}}
Interface {LBus::IntFlag#(numeric type sa, numeric type sd)} polymorphic {members {{method {Bit#(1) flag {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 48 11 {Library LBus}}}
TaggedUnion {LBus::LBSItem#(numeric type sa, numeric type sd)} polymorphic {members {{{LBus::LBSReg#(sa, sd)} Rg} {{LBus::IntFlag#(sa, sd)} Flg}}} {position {%/Libraries/LBus.bsv 55 3 {Library LBus}}}
TaggedUnion {LBus::LbAddr#(numeric type sa, numeric type sd)} polymorphic {members {{Bit#(sa) LbAddr}}} {position {%/Libraries/LBus.bsv 62 3 {Library LBus}}}
Struct {LBus::LBusContextP#(numeric type sa, numeric type sd)} polymorphic {members {{{List#(LBus::LBSItem#(sa, sd))} items} {{List#(LBus::ILbLeaf#(sa, sd))} leaves}}} {position {%/Libraries/LBus.bsv 86 19 {Library LBus}}}
Alias {LBus::LBusContextIfcP#(numeric type sa, numeric type sd)} {LBus::ILbLeaf#(sa, sd)} {position {%/Libraries/LBus.bsv 88 26 {Library LBus}}}
Interface {LBus::IWithLBus#(type busIfc, type deviceIfc)} polymorphic {members {{method {busIfc bus {} {}}} {method {deviceIfc device {} {}}}}} {position {%/Libraries/LBus.bsv 90 11 {Library LBus}}}
Alias {LBus::LBReg#(numeric type sa, numeric type sd, type i)} {LBus::IWithLBus#(LBus::LBSReg#(sa, sd), i)} {position {%/Libraries/LBus.bsv 95 40 {Library LBus}}}
Enum LBus::ResetType {members {SYNC ASYNC NONE}} {width 2} {position {%/Libraries/LBus.bsv 123 36 {Library LBus}}}
Interface {LBus::Accum#(numeric type n)} polymorphic {members {{method {Action add Bit#(n) {{(* ports = ["x1"] *)}}}} {method {Bit#(n) value {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 349 11 {Library LBus}}}
Interface LBus::Interrupt {members {{method {Action set {} {{(* ports = [] *)}}}} {method {Bool _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 397 11 {Library LBus}}}
Interface {LBus::RegHandler#(type a, type b)} polymorphic {members {{method {a getRequest {} {{(* ports = [] *)}}}} {method {Action storeResponse b {{(* ports = ["x1"] *)}}}}}} {position {%/Libraries/LBus.bsv 485 11 {Library LBus}}}
Enum LBus::LbRWop {members {LbRead LbWrite}} {width 1} {position {%/Libraries/LBus.bsv 565 32 {Library LBus}}}
Interface {LBus::ILBus#(numeric type sa, numeric type sd)} polymorphic {members {{method {Action req {Bool LBus::LbRWop Bit#(sa) Bit#(sd)} {{(* ports = ["valid", "op", "addr", "dat"] *)}}}} {method {Bit#(sd) rdDat {} {{(* ports = [] *)}}}} {method {Bit#(1) ack {} {{(* ports = [] *)}}}} {method {Bit#(1) inrpt {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 568 11 {Library LBus}}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {LBus::LbReq#(numeric type sa, numeric type sd)} polymorphic {members {{LBus::LbRWop wr {width 1}} {Bit#(sa) adr} {Bit#(sd) dat}}} {position {%/Libraries/LBus.bsv 579 19 {Library LBus}}}
Interface {LBus::ILbLeaf#(numeric type sa, numeric type sd)} polymorphic {members {{interface {GetPut::Put#(Maybe#(LBus::LbReq#(sa, sd)))} req {}} {interface GetPut::Get#(Maybe#(Bit#(sd))) ack {}} {interface GetPut::Get#(Bit#(1)) inrpt {{(* always_ready  *)}}}}} {position {%/Libraries/LBus.bsv 581 11 {Library LBus}}}
Interface {LBus::ILbNode#(numeric type sa, numeric type sd)} polymorphic {members {{interface {GetPut::Get#(Maybe#(LBus::LbReq#(sa, sd)))} req {}} {interface GetPut::Put#(Maybe#(Bit#(sd))) ack {}} {interface GetPut::Put#(Bit#(1)) inrpt {}}}} {position {%/Libraries/LBus.bsv 588 11 {Library LBus}}}
Interface {LBus::DutWithLBusIfc#(type i)} polymorphic {members {{method {i dutIfc {} {}}} {interface {LBus::ILbLeaf#(24, 32)} lbus {}}}} {position {%/Libraries/LBus.bsv 845 11 {Library LBus}}}
Typeclass {LBus::LBusAddable#(type m1, type m2)} {dependencies {{m1 determines m2} {m2 determines m1}}} {members {{{function m1#(LBus::DutWithLBusIfc#(a)) f(m2#(a) x1)} runWithLBus}}} {instances {{LBus::LBusAddable#(Module, ModuleContextCore::ModuleContext#(LBus::LBusContext))} {LBus::LBusAddable#(ModuleContextCore::ModuleContext#(c1), ModuleContextCore::ModuleContext#(HList::HCons#(LBus::LBusContext, c1)))}}} {position {%/Libraries/LBus.bsv 850 11 {Library LBus}}}
Enum LBus::LbState {members {Idle Req1 Req2 Req3}} {width 2} {position {%/Libraries/LBus.bsv 886 27 {Library LBus}}}
Interface {LBus::Fan#(type intype, type outtype)} polymorphic {members {{method {intype fanin {} {}}} {method {outtype fanout {} {}}}}} {position {%/Libraries/LBus.bsv 888 11 {Library LBus}}}
Interface {LBus::ILBusDriver#(numeric type sa, numeric type sd)} polymorphic {members {{method {Bool valid {} {{(* ports = [] *)}}}} {method {LBus::LbRWop op {} {{(* ports = [] *)}}}} {method {Bit#(sa) addr {} {{(* ports = [] *)}}}} {method {Bit#(sd) dat {} {{(* ports = [] *)}}}} {method {Action rdDat Bit#(sd) {{(* ports = ["x"] *)}}}} {method {Action ack Bit#(1) {{(* ports = ["x"] *)}}}} {method {Action inrpt Bit#(1) {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/LBus.bsv 1034 11 {Library LBus}}}
Interface {LBus::ILBusHandler#(numeric type sa, numeric type sd)} polymorphic {members {{interface {LBus::ILBusDriver#(sa, sd)} driver {}} {interface {ClientServer::Server#(RAM::RAMreq#(Bit#(sa), Bit#(sd)), Bit#(sd))} lbserver {}} {method {Bool interrupting {} {{(* ports = [] *)}}}} {method {Action resetInterrupt {} {{(* ports = [] *)}}}}}} {position {%/Libraries/LBus.bsv 1062 11 {Library LBus}}}
Enum LBus::HandlerState {members {Idle Writing Reading}} {width 2} {position {%/Libraries/LBus.bsv 1070 30 {Library LBus}}}
Alias Wallace::Bit1 Bit#(1) {position {%/Libraries/Wallace.bs 22 5 {Library Wallace}}}
Alias Wallace::BitBag List#(Bit#(1)) {position {%/Libraries/Wallace.bs 23 5 {Library Wallace}}}

Interface {RegTwo::RegTwo#(type a)} polymorphic {members {{method {Action setA a {}}} {method {Action setB a {}}} {method {a get {} {}}}}} {position {%/Libraries/RegTwo.bs 7 10 {Library RegTwo}}}
Interface {RegTwo::VRegTwo#(numeric type n)} polymorphic {members {{method {PrimAction setA Bit#(n) {}}} {method {PrimAction setB Bit#(n) {}}} {method {Bit#(n) get {} {}}}}} {position {%/Libraries/RegTwo.bs 12 10 {Library RegTwo}}}
Alias {ModuleCollect::ModuleCollect#(type a, type b)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(a), HList::HNil), b)} {position {%/Libraries/ModuleCollect.bsv 14 45 {Library ModuleCollect}}}
Interface {ModuleCollect::IWithCollection#(type a, type i)} polymorphic {members {{method {i device {} {{(* ports = [] *)}}}} {method {List#(a) collection {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ModuleCollect.bsv 36 11 {Library ModuleCollect}}}
Enum OVLAssertions::OVLSeverityLevel {members {OVL_FATAL OVL_ERROR OVL_WARNING OVL_INFO DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 17 33}}
Enum OVLAssertions::OVLPropertyType {members {OVL_ASSERT OVL_ASSUME OVL_IGNORE DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 22 33}}
Enum OVLAssertions::OVLCoverageLevel {members {OVL_COVER_NONE OVL_COVER_ALL OVL_COVER_SANITY OVL_COVER_BASIC OVL_COVER_CORNER OVL_COVER_STATISTIC DEFAULT ILLEGAL}} {width 32} {position {%/Libraries/OVLAssertions.bsv 30 33}}
Enum OVLAssertions::OVLActionOnNewStart {members {OVL_IGNORE_NEW_START OVL_RESET_ON_NEW_START OVL_ERROR_ON_NEW_START DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 39 33}}
Enum OVLAssertions::OVLEdgeType {members {OVL_NOEDGE OVL_POSEDGE OVL_NEGEDGE OVL_ANYEDGE DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 45 33}}
Enum OVLAssertions::OVLNecessaryCondition {members {OVL_TRIGGER_ON_MOST_PIPE OVL_TRIGGER_ON_FIRST_PIPE OVL_TRIGGER_ON_FIRST_NOPIPE DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 50 33}}
Enum OVLAssertions::OVLInactive {members {OVL_ALL_ZEROS OVL_ALL_ONES OVL_ONE_COLD DEFAULT ILLEGAL}} {width 3} {position {%/Libraries/OVLAssertions.bsv 55 33}}
Struct {OVLAssertions::OVLDefaults#(type a)} polymorphic {members {{OVLAssertions::OVLSeverityLevel severity_level {width 3}} {OVLAssertions::OVLPropertyType property_type {width 3}} {String msg} {OVLAssertions::OVLCoverageLevel coverage_level {width 32}} {OVLAssertions::OVLActionOnNewStart action_on_new_start {width 3}} {OVLAssertions::OVLEdgeType edge_type {width 3}} {OVLAssertions::OVLNecessaryCondition necessary_condition {width 3}} {OVLAssertions::OVLInactive inactive {width 3}} {Int#(32) num_cks {width 32}} {Int#(32) min_cks {width 32}} {Int#(32) max_cks {width 32}} {Int#(32) min_ack_cycle {width 32}} {Int#(32) max_ack_cycle {width 32}} {Int#(32) max_ack_length {width 32}} {Int#(32) req_drop {width 32}} {Int#(32) deassert_count {width 32}} {Int#(32) depth {width 32}} {a value} {a min} {a max} {Bool check_overlapping {width 1}} {Bool check_missing_start {width 1}} {Bool simultaneous_push_pop {width 1}}}} {position {%/Libraries/OVLAssertions.bsv 81 19}}
Struct {OVLAssertions::OVLDefaultsTemplate#(type a)} polymorphic {members {{Maybe#(OVLAssertions::OVLSeverityLevel) severity_level {width 4}} {Maybe#(OVLAssertions::OVLPropertyType) property_type {width 4}} {Maybe#(String) msg} {Maybe#(OVLAssertions::OVLCoverageLevel) coverage_level {width 33}} {Maybe#(OVLAssertions::OVLActionOnNewStart) action_on_new_start {width 4}} {Maybe#(OVLAssertions::OVLEdgeType) edge_type {width 4}} {Maybe#(OVLAssertions::OVLNecessaryCondition) necessary_condition {width 4}} {Maybe#(OVLAssertions::OVLInactive) inactive {width 4}} {Maybe#(Int#(32)) num_cks {width 33}} {Maybe#(Int#(32)) min_cks {width 33}} {Maybe#(Int#(32)) max_cks {width 33}} {Maybe#(Int#(32)) min_ack_cycle {width 33}} {Maybe#(Int#(32)) max_ack_cycle {width 33}} {Maybe#(Int#(32)) max_ack_length {width 33}} {Maybe#(Int#(32)) req_drop {width 33}} {Maybe#(Int#(32)) deassert_count {width 33}} {Maybe#(Int#(32)) depth {width 33}} {Maybe#(a) value} {Maybe#(a) min} {Maybe#(a) max} {Maybe#(Bool) check_overlapping {width 2}} {Maybe#(Bool) check_missing_start {width 2}} {Maybe#(Bool) simultaneous_push_pop {width 2}}}} {position {%/Libraries/OVLAssertions.bsv 107 19}}
Interface {OVLAssertions::AssertTest_IFC#(type a)} polymorphic {members {{method {Action test a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 648 11}}
Interface {OVLAssertions::VAssertTest_IFC#(numeric type n)} polymorphic {members {{method {Action test Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 654 11}}
Interface {OVLAssertions::AssertSampleTest_IFC#(type a)} polymorphic {members {{method {Action sample Bool {{(* ports = ["value"] *)}}}} {method {Action test a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 660 11}}
Interface {OVLAssertions::VAssertSampleTest_IFC#(numeric type n)} polymorphic {members {{method {Action sample Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action test Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 667 11}}
Interface {OVLAssertions::AssertStartTest_IFC#(type a)} polymorphic {members {{method {Action start Bool {{(* ports = ["value"] *)}}}} {method {Action test a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 674 11}}
Interface {OVLAssertions::VAssertStartTest_IFC#(numeric type n)} polymorphic {members {{method {Action start Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action test Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 681 11}}
Interface {OVLAssertions::AssertStartStopTest_IFC#(type a)} polymorphic {members {{method {Action start Bool {{(* ports = ["value"] *)}}}} {method {Action stop Bool {{(* ports = ["value"] *)}}}} {method {Action test a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 688 11}}
Interface {OVLAssertions::VAssertStartStopTest_IFC#(numeric type n)} polymorphic {members {{method {Action start Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action stop Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action test Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 696 11}}
Interface {OVLAssertions::AssertTransitionTest_IFC#(type a)} polymorphic {members {{method {Action test a {{(* ports = ["value"] *)}}}} {method {Action start a {{(* ports = ["value"] *)}}}} {method {Action next a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2491 11}}
Interface {OVLAssertions::VAssertTransitionTest_IFC#(numeric type n)} polymorphic {members {{method {Action test Bit#(n) {{(* ports = ["value"] *)}}}} {method {Action start Bit#(n) {{(* ports = ["value"] *)}}}} {method {Action next Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2497 11}}
Interface {OVLAssertions::AssertQuiescentTest_IFC#(type a)} polymorphic {members {{method {Action sample Bool {{(* ports = ["value"] *)}}}} {method {Action state a {{(* ports = ["value"] *)}}}} {method {Action check a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2640 11}}
Interface {OVLAssertions::VAssertQuiescentTest_IFC#(numeric type n)} polymorphic {members {{method {Action sample Bit#(1) {{(* ports = ["value"] *)}}}} {method {Action state Bit#(n) {{(* ports = ["value"] *)}}}} {method {Action check Bit#(n) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2646 11}}
Interface {OVLAssertions::AssertFifoTest_IFC#(type a, type b)} polymorphic {members {{method {Action push a {{(* ports = ["value"] *)}}}} {method {Action pop b {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2782 11}}
Interface {OVLAssertions::VAssertFifoTest_IFC#(numeric type n, numeric type m)} polymorphic {members {{method {Action push Bit#(n) {{(* ports = ["value"] *)}}}} {method {Action pop Bit#(m) {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/OVLAssertions.bsv 2787 11}}
Alias {BUtils::LBit#(numeric type m)} {Bit#(TLog#(TAdd#(m, 1)))} {position {%/Libraries/BUtils.bsv 124 35 {Library BUtils}}}
Alias {MIMO::LUInt#(numeric type n)} {UInt#(TLog#(TAdd#(n, 1)))} {position {%/Libraries/MIMO.bsv 35 39 {Library MIMO}}}


Struct {Gray::Gray#(numeric type n)} polymorphic {members {{Bit#(n) code}}} {position {%/Libraries/Gray.bsv 15 19 {Library Gray}}}
TaggedUnion {UnitAppendList::UAList#(type a)} polymorphic {members {{void NoItems {width 0}} {a One} {{Tuple2#(UnitAppendList::UAList#(a), UnitAppendList::UAList#(a))} Append}}} {position {%/Libraries/UnitAppendList.bsv 7 3 {Library UnitAppendList}}}

Interface {BypassReg::WReg#(type a)} polymorphic {members {{method {Action bypass a {{(* ports = ["x"] *)}}}} {method {a _read {} {{(* ports = [] *)}}}} {method {Action _write a {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/BypassReg.bsv 12 11 {Library BypassReg}}}
Interface {UniqueWrappers::Wrapper#(type a, type b)} polymorphic {members {{method {ActionValue#(b) func a {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/UniqueWrappers.bsv 40 11 {Library UniqueWrappers}}}
Interface {UniqueWrappers::Wrapper2#(type a1, type a2, type b)} polymorphic {members {{method {ActionValue#(b) func {a1 a2} {{(* ports = ["x", "y"] *)}}}}}} {position {%/Libraries/UniqueWrappers.bsv 73 11 {Library UniqueWrappers}}}
Interface {UniqueWrappers::Wrapper3#(type a1, type a2, type a3, type b)} polymorphic {members {{method {ActionValue#(b) func {a1 a2 a3} {{(* ports = ["x", "y", "z"] *)}}}}}} {position {%/Libraries/UniqueWrappers.bsv 92 11 {Library UniqueWrappers}}}
Interface {FIFOLevel::FIFOLevelIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["x1"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool isLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool isGreaterThan Integer {{(* ports = ["c1"] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 42 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOLevelIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {Bool sIsLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool sIsGreaterThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool dIsLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool dIsGreaterThan Integer {{(* ports = ["c1"] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 220 11 {Library FIFOLevel}}}
Interface {FIFOLevel::FIFOCountIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} count {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 557 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOCountIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} sCount {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} dCount {} {{(* ports = [] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 701 11 {Library FIFOLevel}}}
Struct {BRAM_Compat::BRAMRequest#(type addr, type data)} polymorphic {members {{Bool write {width 1}} {addr address} {data datain}}} {position {%/Libraries/BRAM_Compat.bsv 23 19 {Library BRAM_Compat}}}
Struct {BRAM_Compat::BRAMRequestBE#(type addr, type data, numeric type n)} polymorphic {members {{Bit#(n) writeen} {addr address} {data datain}}} {position {%/Libraries/BRAM_Compat.bsv 29 19 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMServer#(type addr, type data)} {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} {position {%/Libraries/BRAM_Compat.bsv 31 49 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMClient#(type addr, type data)} {ClientServer::Client#(BRAM_Compat::BRAMRequest#(addr, data), data)} {position {%/Libraries/BRAM_Compat.bsv 32 49 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMServerBE#(type addr, type data, numeric type n)} {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} {position {%/Libraries/BRAM_Compat.bsv 34 54 {Library BRAM_Compat}}}
Alias {BRAM_Compat::BRAMClientBE#(type addr, type data, numeric type n)} {ClientServer::Client#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} {position {%/Libraries/BRAM_Compat.bsv 35 54 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM_PORT#(type addr, type data)} polymorphic {members {{method {Action put {Bool addr data} {{(* ports = ["write", "address", "datain"] *)}}}} {method {data read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/BRAM_Compat.bsv 46 11 {Library BRAM_Compat}}} {attributes {{(* always_ready  *)}}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {BRAM_Compat::BRAM_DUAL_PORT#(type addr, type data)} polymorphic {members {{interface {BRAM_Compat::BRAM_PORT#(addr, data)} a {}} {interface {BRAM_Compat::BRAM_PORT#(addr, data)} b {}}}} {position {%/Libraries/BRAM_Compat.bsv 56 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM2Port#(type addr, type data)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 61 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM1Port#(type addr, type data)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequest#(addr, data), data)} portA {}}}} {position {%/Libraries/BRAM_Compat.bsv 66 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM_PORT_BE#(type addr, type data, numeric type n)} polymorphic {members {{method {Action put {Bit#(n) addr data} {{(* ports = ["writeen", "address", "datain"] *)}}}} {method {data read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/BRAM_Compat.bsv 74 11 {Library BRAM_Compat}}} {attributes {{(* always_ready  *)}}}
Interface {BRAM_Compat::BRAM_DUAL_PORT_BE#(type addr, type data, numeric type n)} polymorphic {members {{interface {BRAM_Compat::BRAM_PORT_BE#(addr, data, n)} a {}} {interface {BRAM_Compat::BRAM_PORT_BE#(addr, data, n)} b {}}}} {position {%/Libraries/BRAM_Compat.bsv 79 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM_BE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 84 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM2PortBE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}} {interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portB {}}}} {position {%/Libraries/BRAM_Compat.bsv 89 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM1PortBE#(type addr, type data, numeric type n)} polymorphic {members {{interface {ClientServer::Server#(BRAM_Compat::BRAMRequestBE#(addr, data, n), data)} portA {}}}} {position {%/Libraries/BRAM_Compat.bsv 94 11 {Library BRAM_Compat}}}
Interface {FIFOLevel::FIFOLevelIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["x1"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool isLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool isGreaterThan Integer {{(* ports = ["c1"] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 42 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOLevelIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {Bool sIsLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool sIsGreaterThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool dIsLessThan Integer {{(* ports = ["c1"] *)}}}} {method {Bool dIsGreaterThan Integer {{(* ports = ["c1"] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 220 11 {Library FIFOLevel}}}
Interface {FIFOLevel::FIFOLevel_INT#(type a_type, numeric type cntSize)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {UInt#(cntSize) count {} {{(* ports = [] *)}}}} {method {Bool i_notFull {} {{(* ports = [] *)}}}} {method {Bool i_notEmpty {} {{(* ports = [] *)}}}} {method {UInt#(cntSize) i_count {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 326 11 {Library FIFOLevel}}}
Interface {FIFOLevel::FIFOCountIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} count {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 557 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOCountIfc#(type a_type, numeric type fifoDepth)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool sNotEmpty {} {{(* ports = [] *)}}}} {method {Bool dNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} sCount {} {{(* ports = [] *)}}}} {method {{UInt#(TLog#(TAdd#(fifoDepth, 1)))} dCount {} {{(* ports = [] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 701 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOCount_INT#(type a_type, numeric type cntSize)} polymorphic {members {{method {Action enq a_type {{(* ports = ["sendData"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a_type first {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {UInt#(cntSize) sCount {} {{(* ports = [] *)}}}} {method {UInt#(cntSize) dCount {} {{(* ports = [] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 841 11 {Library FIFOLevel}}}
Interface {FIFOLevel::SyncFIFOCount0_INT#(numeric type cntSize)} polymorphic {members {{method {Action enq {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Bool sNotFull {} {{(* ports = [] *)}}}} {method {Bool dNotEmpty {} {{(* ports = [] *)}}}} {method {UInt#(cntSize) sCount {} {{(* ports = [] *)}}}} {method {UInt#(cntSize) dCount {} {{(* ports = [] *)}}}} {method {Action sClear {} {{(* ports = [] *)}}}} {method {Action dClear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOLevel.bsv 854 11 {Library FIFOLevel}}}
Vector {Vector::Vector#(numeric type vsize, type element_type)} polymorphic {length n} {elem a}
TaggedUnion {Vector::Ascii#(numeric type n)} polymorphic {members {{{Vector::Vector#(n, Bit#(8))} Ascii}}} {position {%/Libraries/Vector.bs 1337 5 {Library Vector}}}
Typeclass {Monad#(type m)} {members {{{function m#(b) f(m#(a) x1, function m#(b) x2(a x1))} bind} {{function m#(a) f(a x1)} return}}} {instances {Monad#(ActionValue) Monad#(List) Monad#(Maybe) Monad#(Module) Monad#(ModuleContextCore::ModuleContext#(c)) Monad#(StmtFSM::StmtM#(a))}} {position {%/Libraries/Prelude.bs 316 6 {Library Prelude}}}
Typeclass {MonadFix#(type m)} {superclasses Monad#(m)} {members {{{function m#(a) f(function m#(a) x1(a x1))} mfix}}} {instances {MonadFix#(ActionValue) MonadFix#(Module) MonadFix#(ModuleContextCore::ModuleContext#(c))}} {position {%/Libraries/Prelude.bs 329 19 {Library Prelude}}}
Typeclass {Bits#(type a, numeric type n)} {dependencies {{a determines n}}} coherent {members {{{function Bit#(n) f(a x1)} pack} {{function a f(Bit#(n) x1)} unpack}}} {instances {{Bits#(AXI4Lite_Types::AXI4Lite_ARFlit#(_v101, _v107), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(3, _v107, _v100))} {Bits#(AXI4Lite_Types::AXI4Lite_AWFlit#(_v101, _v107), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(3, _v107, _v100))} {Bits#(AXI4Lite_Types::AXI4Lite_BFlit#(_v104), _v100)   provisos (Add#(2, _v104, _v100))} {Bits#(AXI4Lite_Types::AXI4Lite_RFlit#(_v101, _v107), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(2, _v107, _v100))} {Bits#(AXI4Lite_Types::AXI4Lite_WFlit#(_v101, _v107), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(TDiv#(_v101, 8), _v107, _v100))} {Bits#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), _v100)   provisos (Add#(_v101, _v104, _v100), Add#(data_, TAdd#(TDiv#(data_, 8), wuser_), _v104), Add#(addr_, TAdd#(3, awuser_), _v101))} {Bits#(AXI4Stream_Types::AXI4Stream_Flit#(_v113, _v101, _v116, _v119), _v115)   provisos (Add#(_v101, _v112, _v115), Add#(TDiv#(_v101, 8), _v106, _v109), Add#(1, _v103, _v106), Add#(_v113, _v100, _v103), Add#(_v116, _v119, _v100), Add#(TDiv#(_v101, 8), _v109, _v112))} {Bits#(AXI4_Common_Types::AXI4_Burst, 2)} {Bits#(AXI4_Common_Types::AXI4_Lock, 1)} {Bits#(AXI4_Common_Types::AXI4_Prot_0, 1)} {Bits#(AXI4_Common_Types::AXI4_Prot_1, 1)} {Bits#(AXI4_Common_Types::AXI4_Prot_2, 1)} {Bits#(AXI4_Common_Types::AXI4_Resp, 2)} {Bits#(AXI4_Common_Types::AXI4_Size, 3)} {Bits#(AXI4_Types::AXI4_ARFlit#(_v101, _v104, _v131), _v127)   provisos (Add#(_v101, _v124, _v127), Add#(_v104, _v121, _v124), Add#(8, _v118, _v121), Add#(3, _v115, _v118), Add#(2, _v112, _v115), Add#(1, _v109, _v112), Add#(3, _v103, _v106), Add#(4, _v131, _v100), Add#(4, _v106, _v109), Add#(4, _v100, _v103))} {Bits#(AXI4_Types::AXI4_AWFlit#(_v101, _v104, _v131), _v127)   provisos (Add#(_v101, _v124, _v127), Add#(_v104, _v121, _v124), Add#(8, _v118, _v121), Add#(3, _v115, _v118), Add#(2, _v112, _v115), Add#(1, _v109, _v112), Add#(3, _v103, _v106), Add#(4, _v131, _v100), Add#(4, _v106, _v109), Add#(4, _v100, _v103))} {Bits#(AXI4_Types::AXI4_BFlit#(_v101, _v107), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(2, _v107, _v100))} {Bits#(AXI4_Types::AXI4_Events, 7)} {Bits#(AXI4_Types::AXI4_RFlit#(_v101, _v104, _v113), _v109)   provisos (Add#(_v101, _v106, _v109), Add#(_v104, _v103, _v106), Add#(2, _v100, _v103), Add#(1, _v113, _v100))} {Bits#(AXI4_Types::AXI4_WFlit#(_v101, _v110), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(TDiv#(_v101, 8), _v100, _v103), Add#(1, _v110, _v100))} {Bits#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), _v100)   provisos (Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(data_, TAdd#(TDiv#(data_, 8), TAdd#(1, wuser_)), _v104), Add#(TAdd#(id_, TAdd#(addr_, TAdd#(8, TAdd#(3, TAdd#(2, TAdd#(1, TAdd#(4, TAdd#(3, TAdd#(4, TAdd#(4, awuser_)))))))))), TAdd#(data_, TAdd#(TDiv#(data_, 8), TAdd#(1, wuser_))), _v101))} {Bits#(AXI4_Utils::ReadSplitOption, 2)} {Bits#(AXI4_Utils::SerialiserState, 2)} {Bits#(AXI_Helpers::ReqFlit#(id_, addr_, data_, tag_), _v100)   provisos (Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(id_, TAdd#(addr_, 29), _v104), Add#(TAdd#(id_, TAdd#(addr_, 29)), TAdd#(data_, TAdd#(TDiv#(data_, 8), TAdd#(1, tag_))), _v101))} {Bits#(AXI_Helpers::RspFlit#(id_, data_, tag_), _v100)   provisos (Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(id_, TAdd#(data_, TAdd#(2, TAdd#(1, tag_))), _v104), Add#(id_, 2, _v101))} {Bits#(AXI_Helpers::WriteReqFlit#(id_, addr_, data_, tag_), _v100)   provisos (Add#(_v101, _v104, _v100), Add#(data_, TAdd#(TDiv#(data_, 8), TAdd#(1, tag_)), _v104), Add#(id_, TAdd#(addr_, 29), _v101))} {Bits#(BRAM::BRAMRequest#(addr, data), _v106)   provisos (Add#(1, _v100, _v103), Add#(_v107, _v110, _v100), Bits#(data, _v110), Bits#(addr, _v107), Add#(1, _v103, _v106))} {Bits#(BRAM::BRAMRequestBE#(addr, data, _v101), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(1, _v100, _v103), Add#(_v107, _v110, _v100), Bits#(data, _v110), Bits#(addr, _v107))} {Bits#(BRAM::LoadFormat, _v100)   provisos (Add#(2, _v106, _v100), Add#(_v108, _v107, _v106), Bits#(String, _v107), Max#(_v107, _v107, _v106))} {Bits#(BRAM_Compat::BRAMRequest#(addr, data), _v103)   provisos (Add#(1, _v100, _v103), Add#(_v104, _v107, _v100), Bits#(data, _v107), Bits#(addr, _v104))} {Bits#(BRAM_Compat::BRAMRequestBE#(addr, data, _v101), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(_v104, _v107, _v100), Bits#(data, _v107), Bits#(addr, _v104))} {Bits#(Bag::Entry#(keyType, datType), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(datType, _v104), Bits#(keyType, _v101))} {Bits#(Bit#(k), k)} {Bits#(Bool, 1)} {Bits#(Branch_Predictor::BTB_Entry, 118)} {Bits#(CBus::CRAddr#(_v101, sd), _v100)   provisos (Add#(_v101, TLog#(sd), _v100))} {Bits#(CHERICC_Fat::Bounds, 34)} {Bits#(CHERICC_Fat::BoundsEmbeddedExp, 27)} {Bits#(CHERICC_Fat::BoundsExp0, 27)} {Bits#(CHERICC_Fat::CapFat, 151)} {Bits#(CHERICC_Fat::CapPipe, 161)} {Bits#(CHERICC_Fat::CapabilityInMemory, 129)} {Bits#(CHERICC_Fat::Format, 1)} {Bits#(CHERICC_Fat::HPerms, 12)} {Bits#(CHERICC_Fat::MetaInfo, 10)} {Bits#(CHERICC_Fat::Perms, 16)} {Bits#(CHERICC_Fat::VnD#(t), _v100)   provisos (Add#(1, _v104, _v100), Bits#(t, _v104))} {Bits#(CHERICap::Exact#(t), _v100)   provisos (Add#(1, _v104, _v100), Bits#(t, _v104))} {Bits#(CHERICap::HardPerms, 12)} {Bits#(CHERICap::Kind#(_v112), _v100)   provisos (Add#(3, _v112, _v100))} {Bits#(CHERICap::SetBoundsReturn#(t, _v110), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(1, _v100, _v103), Bits#(t, _v101), Add#(_v110, _v110, _v100))} {Bits#(CPU::CPU_State, 4)} {Bits#(CPU_Globals::Bypass, 168)} {Bits#(CPU_Globals::Bypass_State, 2)} {Bits#(CPU_Globals::CF_Info, 195)} {Bits#(CPU_Globals::CF_Op, 2)} {Bits#(CPU_Globals::Control, 4)} {Bits#(CPU_Globals::Data_Stage1_to_Stage2, 1285)} {Bits#(CPU_Globals::Data_Stage2_to_Stage3, 487)} {Bits#(CPU_Globals::Data_StageD_to_Stage1, 433)} {Bits#(CPU_Globals::Data_StageF_to_StageD, 239)} {Bits#(CPU_Globals::FBypass, 71)} {Bits#(CPU_Globals::Op_Stage2, 3)} {Bits#(CPU_Globals::Output_Stage1, 2018)} {Bits#(CPU_Globals::Output_Stage2, 1040)} {Bits#(CPU_Globals::Output_Stage2_Perf, 5)} {Bits#(CPU_Globals::Output_Stage3, 241)} {Bits#(CPU_Globals::Output_StageD, 435)} {Bits#(CPU_Globals::Output_StageF, 241)} {Bits#(CPU_Globals::Pipeline_Val#(capType), _v101)   provisos (Bits#(capType, _v101))} {Bits#(CPU_Globals::Stage_OStatus, 2)} {Bits#(CPU_Globals::Trap_Info_Pipe, 306)} {Bits#(CSR_RegFile_MSU::AccessPerms, 2)} {Bits#(CSR_RegFile_MSU::CSR_Write_Result, 129)} {Bits#(CSR_RegFile_MSU::RF_State, 1)} {Bits#(CacheCorderer::ReqRec, 52)} {Bits#(CacheCorderer::TransRecord, 13)} {Bits#(CacheCore::AddrTagWay#(ways, keyBits, tagBits), _v109)   provisos (Add#(_v101, _v106, _v109), Add#(_v104, _v103, _v106), Add#(TLog#(ways), 7, _v103), Add#(tagBits, 14, _v104), Add#(tagBits, TAdd#(keyBits, 5), _v101))} {Bits#(CacheCore::CacheAddress#(_v104, _v101), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(_v104, 5, _v103))} {Bits#(CacheCore::CacheCommit, 6)} {Bits#(CacheCore::CacheState, 1)} {Bits#(CacheCore::ControlToken#(ways, keyBits, tagBits), _v127)   provisos (Add#(2, _v124, _v127), Add#(141, _v121, _v124), Add#(_v107, _v118, _v121), Add#(3, _v115, _v118), Add#(_v113, _v112, _v115), Add#(TLog#(ways), _v109, _v112), Add#(1, _v103, _v106), Add#(_v125, _v100, _v103), Add#(_v128, 2, _v100), Add#(tagBits, 14, _v128), Add#(tagBits, TAdd#(keyBits, TAdd#(TLog#(ways), 1)), _v125), Add#(keyBits, 2, _v113), Add#(tagBits, TAdd#(keyBits, 5), _v107), Add#(1, _v106, _v109))} {Bits#(CacheCore::DataKey#(ways, _v101), _v100)   provisos (Add#(_v101, 2, _v100))} {Bits#(CacheCore::EventsCacheCore, 7)} {Bits#(CacheCore::InvalidateToken#(ways, _v104, _v101), _v106)   provisos (Add#(_v101, _v103, _v106), Add#(_v104, _v100, _v103), Add#(TLog#(ways), 1, _v100))} {Bits#(CacheCore::LookupCommand, 2)} {Bits#(CacheCore::OrderBehaviour, 1)} {Bits#(CacheCore::ReqIdWithSC, 8)} {Bits#(CacheCore::RequestRecord#(ways, _v101, tagBits), _v121)   provisos (Add#(_v101, _v118, _v121), Add#(6, _v109, _v112), Add#(_v116, _v103, _v106), Add#(TLog#(ways), 2, _v103), Add#(tagBits, 14, _v116), Add#(6, _v115, _v118), Add#(1, _v112, _v115), Add#(1, _v106, _v109))} {Bits#(CacheCore::ResponseBehaviour, 1)} {Bits#(CacheCore::ResponseToken, 233)} {Bits#(CacheCore::TagLine#(_v101), _v109)   provisos (Add#(_v101, 14, _v109))} {Bits#(CacheCore::TagUpdate#(ways, _v104, tagBits), _v106)   provisos (Add#(1, _v103, _v106), Add#(_v104, _v100, _v103), Add#(_v107, TLog#(ways), _v100), Add#(tagBits, 14, _v107))} {Bits#(CacheCore::WriteMissBehaviour, 1)} {Bits#(Complex::Complex#(any_t), _v100)   provisos (Bits#(any_t, _v104), Add#(_v104, _v104, _v100))} {Bits#(DM_CPU_Req_Rsp::DM_CPU_Req#(_v104, _v107), _v103)   provisos (Add#(1, _v100, _v103), Add#(_v104, _v107, _v100))} {Bits#(DM_CPU_Req_Rsp::DM_CPU_Rsp#(_v104), _v100)   provisos (Add#(1, _v104, _v100))} {Bits#(DM_Common::DCSR_Cause, 3)} {Bits#(DM_Common::DM_abstractcs_cmderr, 3)} {Bits#(DM_Common::DM_command_access_reg_size, 3)} {Bits#(DM_Common::DM_command_cmdtype, 1)} {Bits#(DM_Common::DM_sbaccess, 3)} {Bits#(DM_Common::DM_sberror, 3)} {Bits#(DM_System_Bus::SB_State, 2)} {Bits#(EX_ALU_functions::ALU_Inputs, 1426)} {Bits#(EX_ALU_functions::ALU_Outputs, 1597)} {Bits#(EX_ALU_functions::Output_Select, 3)} {Bits#(Either#(a, b), _v100)   provisos (Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Bits#(b, _v104), Bits#(a, _v101))} {Bits#(FBox_Core::FBoxResult, 69)} {Bits#(FBox_Core::FBoxState, 2)} {Bits#(FPR_RegFile::RF_State, 2)} {Bits#(FPU::FloatU, 65)} {Bits#(File, 32)} {Bits#(FixedPoint::FixedPoint#(i, f), b)   provisos (Add#(i, f, b))} {Bits#(FixedPoint::RoundMode, 3)} {Bits#(FloatingPoint::CommonState#(e, m), _v103)   provisos (Add#(_v101, 8, _v103), Add#(1, TAdd#(1, TAdd#(e, m)), _v101))} {Bits#(FloatingPoint::Disorder, 2)} {Bits#(FloatingPoint::Exception, 5)} {Bits#(FloatingPoint::FloatingPoint#(_v104, _v107), _v103)   provisos (Add#(1, _v100, _v103), Add#(_v104, _v107, _v100))} {Bits#(FloatingPoint::RoundMode, 3)} {Bits#(GPR_RegFile::RF_State, 2)} {Bits#(Gray::Gray#(_v101), _v101)} {Bits#(ISA_Decls::Access_RWX, 2)} {Bits#(ISA_Decls::Decoded_Instr, 162)} {Bits#(ISA_Decls::Fence_Ordering, 8)} {Bits#(ISA_Decls::FpuOp, 4)} {Bits#(ISA_Decls::ISize, 1)} {Bits#(ISA_Decls::MCause, 7)} {Bits#(ISA_Decls::MCounteren, 32)} {Bits#(ISA_Decls::MCountinhibit, 32)} {Bits#(ISA_Decls::MISA, 28)} {Bits#(ISA_Decls::MTVEC_Mode, 1)} {Bits#(ISA_Decls::MTVec, 63)} {Bits#(ISA_Decls::Mem_Data_Size, 2)} {Bits#(ISA_Decls::RV_Version, 1)} {Bits#(ISA_Decls::Trap_Info_CSR, 281)} {Bits#(ISA_Decls::XCCSR, 11)} {Bits#(Int#(n), n)} {Bits#(IntMulDiv::DivState, 3)} {Bits#(IntMulDiv::MulState, 2)} {Bits#(JtagTap::DMI, 40)} {Bits#(JtagTap::DTMCS, 32)} {Bits#(JtagTap::JtagState, 4)} {Bits#(LBus::HandlerState, 2)} {Bits#(LBus::LbAddr#(_v101, sd), _v101)} {Bits#(LBus::LbRWop, 1)} {Bits#(LBus::LbReq#(_v104, _v107), _v103)   provisos (Add#(1, _v100, _v103), Add#(_v104, _v107, _v100))} {Bits#(LBus::LbState, 2)} {Bits#(LBus::ResetType, 2)} {Bits#(ListN::ListN#(n, a), nsa)   provisos (Mul#(n, sa, nsa), Bits#(a, sa))} {Bits#(MMU_Cache::CTagState, 1)} {Bits#(MMU_Cache::Fabric_Write_Fields, 213)} {Bits#(MMU_Cache::Module_State, 5)} {Bits#(MMU_Cache::Requestor, 1)} {Bits#(MMU_Cache::State_and_CTag, 53)} {Bits#(MMU_Cache_Common::CacheOp, 2)} {Bits#(MMU_Cache_Common::L1_to_L2_Req, 69)} {Bits#(MMU_Cache_Common::L1_to_L2_Rsp, 583)} {Bits#(MMU_Cache_Common::L2_to_L1_Req, 66)} {Bits#(MMU_Cache_Common::L2_to_L1_Rsp, 583)} {Bits#(MMU_Cache_Common::MMU_Cache_Req, 273)} {Bits#(MMU_Cache_Common::Meta_State, 2)} {Bits#(MMU_Cache_Common::Single_Req, 197)} {Bits#(MMU_Cache_Common::Single_Rsp, 130)} {Bits#(MMU_Cache_Common::VM_Xlate_Outcome, 2)} {Bits#(MMU_Cache_Common::VM_Xlate_Result, 204)} {Bits#(Map::MapKeyIndex#(ky, ix), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(ix, _v104), Bits#(ky, _v101))} {Bits#(Map::MapKeyIndexValue#(ky, ix, vl), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(_v104, _v107, _v100), Bits#(vl, _v107), Bits#(ix, _v104), Bits#(ky, _v101))} {Bits#(Map::MapKeyValue#(ky, vl), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(vl, _v104), Bits#(ky, _v101))} {Bits#(Maybe#(a), _v100)   provisos (Add#(1, _v103, _v100), Bits#(a, _v103))} {Bits#(MemTypes::BitPO#(_v101), _v101)} {Bits#(MemTypes::MemReq#(addr_t, data_t), _v100)   provisos (Add#(TDiv#(_v106, 8), _v106, _v107), Bits#(data_t, _v106), Add#(_v108, _v107, _v104), Bits#(addr_t, _v108), Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Add#(_v108, TMax#(1, TLog#(TAdd#(1, TLog#(TDiv#(_v106, 8))))), _v101))} {Bits#(MemTypes::MemReq_$ReadReq#(addr_t, data_t), _v100)   provisos (Add#(_v101, TMax#(1, TLog#(TAdd#(1, TLog#(TDiv#(_v102, 8))))), _v100), Bits#(data_t, _v102), Bits#(addr_t, _v101))} {Bits#(MemTypes::MemReq_$WriteReq#(addr_t, data_t), _v103)   provisos (Add#(_v101, _v100, _v103), Add#(TDiv#(_v107, 8), _v107, _v100), Bits#(addr_t, _v101), Bits#(data_t, _v107))} {Bits#(MemTypes::MemRsp#(data_t), _v100)   provisos (Add#(2, _v106, _v100), Bits#(data_t, _v106))} {Bits#(MemTypesCHERI::BytesPerFlit, 3)} {Bits#(MemTypesCHERI::CacheInst, 4)} {Bits#(MemTypesCHERI::CacheOperation, 8)} {Bits#(MemTypesCHERI::CheriCapAddress, 40)} {Bits#(MemTypesCHERI::Data#(_v104), _v100)   provisos (Add#(1, _v104, _v100))} {Bits#(MemTypesCHERI::DataMinusCapTags#(_v101), _v101)} {Bits#(MemTypesCHERI::Error, 2)} {Bits#(MemTypesCHERI::MemoryRequest#(addr_t, masterid_t, transactionid_t, data_width), _v109)   provisos (Add#(_v101, _v106, _v109), Add#(_v104, _v103, _v106), Add#(_v107, _v100, _v103), Add#(1, _v113, _v100), Add#(2, TMax#(9, TMax#(TAdd#(1, TAdd#(1, TAdd#(1, TAdd#(TDiv#(data_width, 8), TAdd#(8, TAdd#(TAdd#(1, data_width), 8)))))), 8)), _v113), Bits#(transactionid_t, _v107), Bits#(masterid_t, _v104), Bits#(addr_t, _v101))} {Bits#(MemTypesCHERI::MemoryRequest_$operation#(addr_t, masterid_t, transactionid_t, data_width), _v100)   provisos (Add#(2, _v106, _v100), Max#(9, _v103, _v106), Max#(_v104, 8, _v103), Add#(_v108, 8, _v106), Add#(_v105, _v104, _v106), Add#(_v102, 9, _v106), Add#(1, TAdd#(1, TAdd#(1, TAdd#(TDiv#(data_width, 8), TAdd#(8, TAdd#(TAdd#(1, data_width), 8))))), _v104))} {Bits#(MemTypesCHERI::MemoryRequest_$operation_$Read#(addr_t, masterid_t, transactionid_t, data_width), 9)} {Bits#(MemTypesCHERI::MemoryRequest_$operation_$Write#(addr_t, masterid_t, transactionid_t, data_width), _v115)   provisos (Add#(1, _v106, _v109), Add#(TDiv#(data_width, 8), _v103, _v106), Add#(_v116, 8, _v100), Add#(1, data_width, _v116), Add#(1, _v109, _v112), Add#(1, _v112, _v115), Add#(8, _v100, _v103))} {Bits#(MemTypesCHERI::MemoryResponse#(masterid_t, transactionid_t, data_width), _v109)   provisos (Add#(_v101, _v106, _v109), Add#(_v104, _v103, _v106), Add#(2, _v100, _v103), Add#(4, _v113, _v100), Add#(1, data_width, _v113), Bits#(transactionid_t, _v104), Bits#(masterid_t, _v101))} {Bits#(MemTypesCHERI::MemoryResponse_$operation#(masterid_t, transactionid_t, data_width), 4)} {Bits#(MemTypesCHERI::MemoryResponse_$operation_$Read#(masterid_t, transactionid_t, data_width), 2)} {Bits#(MemTypesCHERI::PhyBitAddress#(width, bytePerLine), _v100)   provisos (Add#(_v101, 3, _v100), Add#(TSub#(width, TLog#(bytePerLine)), TLog#(bytePerLine), _v101))} {Bits#(MemTypesCHERI::PhyByteAddress#(width, bytePerLine), _v100)   provisos (Add#(TSub#(width, TLog#(bytePerLine)), TLog#(bytePerLine), _v100))} {Bits#(MemTypesCHERI::ReqId, 6)} {Bits#(MemTypesCHERI::WhichCache, 3)} {Bits#(Memory::MemoryRequest#(_v107, _v110), _v106)   provisos (Add#(1, _v103, _v106), Add#(TDiv#(_v110, 8), _v100, _v103), Add#(_v107, _v110, _v100))} {Bits#(Memory::MemoryResponse#(_v101), _v101)} {Bits#(MultiLevelTagLookup::CheriTagRequest, 49)} {Bits#(MultiLevelTagLookup::CheriTagRequest_$operation, 9)} {Bits#(MultiLevelTagLookup::CheriTagResponse, 5)} {Bits#(MultiLevelTagLookup::CheriTagResponse_$tags, 5)} {Bits#(MultiLevelTagLookup::CheriTagWrite, 8)} {Bits#(MultiLevelTagLookup::State, 3)} {Bits#(MultiLevelTagLookup::TableEntry, 5)} {Bits#(Near_Mem_Caches::State, 2)} {Bits#(Near_Mem_IFC::EventsCache, 14)} {Bits#(Near_Mem_IO_AXI4::Module_State, 1)} {Bits#(NumberTypes::BuffIndex#(_v101, ln), _v101)} {Bits#(NumberTypes::WrapNumber#(_v101), _v101)} {Bits#(OInt::OInt#(_v101), _v101)} {Bits#(OVLAssertions::OVLActionOnNewStart, 3)} {Bits#(OVLAssertions::OVLCoverageLevel, 32)} {Bits#(OVLAssertions::OVLEdgeType, 3)} {Bits#(OVLAssertions::OVLInactive, 3)} {Bits#(OVLAssertions::OVLNecessaryCondition, 3)} {Bits#(OVLAssertions::OVLPropertyType, 3)} {Bits#(OVLAssertions::OVLSeverityLevel, 3)} {Bits#(Ordering, 2)} {Bits#(RAM::RAMreq#(adr, dta), sz)   provisos (Add#(sz1, 1, sz), Add#(sa, sd, sz1), Bits#(dta, sd), Bits#(adr, sa))} {Bits#(RISCV_MBox::State, 2)} {Bits#(Reserved::Reserved#(n), n)} {Bits#(Reserved::ReservedOne#(n), n)} {Bits#(Reserved::ReservedZero#(n), n)} {Bits#(Routable::Range#(_v104), _v100)   provisos (Add#(_v104, _v104, _v100))} {Bits#(Routable::WithMetaInfo#(t, m_t), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(m_t, _v104), Bits#(t, _v101))} {Bits#(Routable::WithRouteInfo#(t, r_t), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(r_t, _v104), Bits#(t, _v101))} {Bits#(SVA::AssertRes, 1)} {Bits#(SVA::PropRes, 2)} {Bits#(SVA::SeqRes, 2)} {Bits#(SaturationMode, 2)} {Bits#(StatCounters::AXI4_Master_Events, 448)} {Bits#(StatCounters::AXI4_Slave_Events, 448)} {Bits#(StatCounters::EventsCore, 1984)} {Bits#(StatCounters::EventsL1D, 896)} {Bits#(StatCounters::EventsL1I, 448)} {Bits#(StatCounters::EventsLL, 576)} {Bits#(StatCounters::EventsTGC, 448)} {Bits#(StatCounters::EventsTransExe, 192)} {Bits#(StatCounters::HPMEvents, 5448)} {Bits#(SvaParam, 33)} {Bits#(TLB::TLBE, 144)} {Bits#(TLB::TLB_Lookup_Result, 131)} {Bits#(TRAM::TRAMreq#(tg, adr, dta), _v100)   provisos (Add#(_v106, _v107, _v104), Bits#(adr, _v106), Add#(1, _v103, _v100), Max#(_v101, _v104, _v103), Add#(_v105, _v104, _v103), Add#(_v102, _v101, _v103), Bits#(dta, _v107), Bits#(tg, _v108), Add#(_v108, _v106, _v101))} {Bits#(TV_Info::Info_CPU_to_Verifier, 608)} {Bits#(TV_Info::Trace_Data, 427)} {Bits#(TV_Info::Trace_Op, 5)} {Bits#(TagController::AddrFrame, 9)} {Bits#(TagController::MemReqType, 1)} {Bits#(TagController::TagReqId, 14)} {Bits#(Tuple2#(a, b), _v100)   provisos (Add#(_v101, _v104, _v100), Bits#(b, _v104), Bits#(a, _v101))} {Bits#(UInt#(n), n)} {Bits#(UIntRange::UIntRange#(lo, hi), TLog#(TAdd#(hi, 1)))} {Bits#(Vector::Ascii#(n), _v101)   provisos (Mul#(n, 8, _v101))} {Bits#(Vector::Vector#(n, a), nsa)   provisos (Mul#(n, sa, nsa), Bits#(a, sa))} {Bits#(VnD::VnD#(a), _v100)   provisos (Add#(1, _v104, _v100), Bits#(a, _v104))} {Bits#(ZBus::BState, 2)} {Bits#(ZBusUtil::ZBit#(t), _v101)   provisos (Bits#(t, _v101))} {Bits#(void, 0)}}} {position {%/Libraries/Prelude.bs 349 15 {Library Prelude}}}
Typeclass {Eq#(type a)} {members {{{function Bool f(a x1, a x2)} ==} {{function Bool f(a x1, a x2)} /=}}} {instances {Eq#(AXI4_Common_Types::AXI4_Burst) Eq#(AXI4_Common_Types::AXI4_Lock) Eq#(AXI4_Common_Types::AXI4_Prot_0) Eq#(AXI4_Common_Types::AXI4_Prot_1) Eq#(AXI4_Common_Types::AXI4_Prot_2) Eq#(AXI4_Common_Types::AXI4_Resp) Eq#(AXI4_Common_Types::AXI4_Size) Eq#(AXI4_Utils::ReadSplitOption) Eq#(AXI4_Utils::SerialiserState) {Eq#(Array#(a))   provisos (Eq#(a))} {Eq#(BRAM::BRAMRequest#(addr, data))   provisos (Eq#(data), Eq#(addr))} {Eq#(BRAM::BRAMRequestBE#(addr, data, n))   provisos (Eq#(data), Eq#(addr))} Eq#(BRAM::LoadFormat) {Eq#(BRAM_Compat::BRAMRequest#(addr, data))   provisos (Eq#(data), Eq#(addr))} {Eq#(BRAM_Compat::BRAMRequestBE#(addr, data, n))   provisos (Eq#(data), Eq#(addr))} {Eq#(Bag::Entry#(keyType, datType))   provisos (Eq#(datType), Eq#(keyType))} Eq#(Bit#(n)) Eq#(Bool) Eq#(BufferMode) {Eq#(CBus::CRAddr#(sa, sd))} Eq#(CHERICC_Fat::Bounds) Eq#(CHERICC_Fat::BoundsEmbeddedExp) Eq#(CHERICC_Fat::BoundsExp0) Eq#(CHERICC_Fat::CapPipe) Eq#(CHERICC_Fat::CapReg) Eq#(CHERICC_Fat::CapabilityInMemory) Eq#(CHERICC_Fat::Format) Eq#(CHERICC_Fat::HPerms) Eq#(CHERICC_Fat::MetaInfo) Eq#(CHERICC_Fat::Perms) Eq#(CHERICap::HardPerms) Eq#(CHERICap::Kind#(ot)) {Eq#(CHERICap::SetBoundsReturn#(t, n))   provisos (Eq#(t))} Eq#(CPU::CPU_State) Eq#(CPU_Globals::Bypass_State) Eq#(CPU_Globals::CF_Op) Eq#(CPU_Globals::Control) Eq#(CPU_Globals::Op_Stage2) Eq#(CPU_Globals::Stage_OStatus) Eq#(CSR_RegFile_MSU::RF_State) Eq#(CacheCorderer::ReqRec) Eq#(CacheCorderer::TransRecord) {Eq#(CacheCore::CacheAddress#(keyBits, tagBits))} Eq#(CacheCore::CacheCommit) Eq#(CacheCore::CacheState) {Eq#(CacheCore::DataKey#(ways, keyBits))} Eq#(CacheCore::LookupCommand) Eq#(CacheCore::OrderBehaviour) Eq#(CacheCore::ReqIdWithSC) {Eq#(CacheCore::RequestRecord#(ways, keyBits, tagBits))} Eq#(CacheCore::ResponseBehaviour) Eq#(CacheCore::TagLine#(tagBits)) {Eq#(CacheCore::TagUpdate#(ways, keyBits, tagBits))} Eq#(CacheCore::WriteMissBehaviour) Eq#(Char) Eq#(Clock) {Eq#(Complex::Complex#(any_t))   provisos (Eq#(any_t))} {Eq#(DM_CPU_Req_Rsp::DM_CPU_Req#(a, d))} Eq#(DM_CPU_Req_Rsp::DM_CPU_Rsp#(d)) Eq#(DM_Common::DCSR_Cause) Eq#(DM_Common::DM_abstractcs_cmderr) Eq#(DM_Common::DM_command_access_reg_size) Eq#(DM_Common::DM_command_cmdtype) Eq#(DM_Common::DM_sbaccess) Eq#(DM_Common::DM_sberror) Eq#(DM_System_Bus::SB_State) Eq#(EX_ALU_functions::Output_Select) {Eq#(Either#(a, b))   provisos (Eq#(b), Eq#(a))} Eq#(FBox_Core::FBoxResult) Eq#(FBox_Core::FBoxState) Eq#(FPR_RegFile::RF_State) Eq#(FPU::FloatU) Eq#(File) {Eq#(FixedPoint::FixedPoint#(isize, fsize))} Eq#(FixedPoint::RoundMode) {Eq#(FloatingPoint::CommonState#(e, m))} Eq#(FloatingPoint::Disorder) Eq#(FloatingPoint::Exception) {Eq#(FloatingPoint::FloatingPoint#(e, m))} Eq#(FloatingPoint::RoundMode) Eq#(GPR_RegFile::RF_State) Eq#(Gray::Gray#(n)) {Eq#(HList::HCons#(e, l))   provisos (Eq#(l), Eq#(e))} Eq#(HList::HNil) Eq#(IOMode) Eq#(ISA_Decls::Access_RWX) Eq#(ISA_Decls::FpuOp) Eq#(ISA_Decls::ISize) Eq#(ISA_Decls::MTVEC_Mode) Eq#(ISA_Decls::Mem_Data_Size) Eq#(ISA_Decls::RV_Version) Eq#(Int#(n)) Eq#(IntMulDiv::DivState) Eq#(IntMulDiv::MulState) Eq#(Integer) Eq#(JtagTap::DMI) Eq#(JtagTap::DTMCS) Eq#(JtagTap::JtagState) Eq#(LBus::HandlerState) {Eq#(LBus::LbAddr#(sa, sd))} Eq#(LBus::LbRWop) {Eq#(LBus::LbReq#(sa, sd))} Eq#(LBus::LbState) Eq#(LBus::ResetType) {Eq#(List#(a))   provisos (Eq#(a))} {Eq#(ListN::ListN#(n, a))   provisos (Eq#(a))} {Eq#(List_$Cons#(a))   provisos (Eq#(a))} Eq#(MIMO::MIMOConfiguration) Eq#(MMU_Cache::CTagState) Eq#(MMU_Cache::Fabric_Write_Fields) Eq#(MMU_Cache::Module_State) Eq#(MMU_Cache::Requestor) Eq#(MMU_Cache_Common::CacheOp) Eq#(MMU_Cache_Common::Meta_State) Eq#(MMU_Cache_Common::VM_Xlate_Outcome) {Eq#(Map::MapKeyIndex#(ky, ix))   provisos (Eq#(ix), Eq#(ky))} {Eq#(Map::MapKeyIndexValue#(ky, ix, vl))   provisos (Eq#(vl), Eq#(ix), Eq#(ky))} {Eq#(Map::MapKeyValue#(ky, vl))   provisos (Eq#(vl), Eq#(ky))} {Eq#(Maybe#(a))   provisos (Eq#(a))} Eq#(MemTypesCHERI::BytesPerFlit) Eq#(MemTypesCHERI::CacheInst) Eq#(MemTypesCHERI::CacheOperation) Eq#(MemTypesCHERI::CheriCapAddress) Eq#(MemTypesCHERI::Data#(width)) Eq#(MemTypesCHERI::DataMinusCapTags#(width)) Eq#(MemTypesCHERI::Error) {Eq#(MemTypesCHERI::MemoryRequest#(addr_t, masterid_t, transactionid_t, data_width))   provisos (Eq#(transactionid_t), Eq#(masterid_t), Eq#(addr_t))} {Eq#(MemTypesCHERI::MemoryRequest_$operation#(addr_t, masterid_t, transactionid_t, data_width))} {Eq#(MemTypesCHERI::MemoryRequest_$operation_$Read#(addr_t, masterid_t, transactionid_t, data_width))} {Eq#(MemTypesCHERI::MemoryRequest_$operation_$Write#(addr_t, masterid_t, transactionid_t, data_width))} {Eq#(MemTypesCHERI::PhyBitAddress#(width, bytePerLine))} {Eq#(MemTypesCHERI::PhyByteAddress#(width, bytePerLine))} Eq#(MemTypesCHERI::ReqId) Eq#(MemTypesCHERI::WhichCache) {Eq#(Memory::MemoryRequest#(a, d))} Eq#(Memory::MemoryResponse#(d)) Eq#(MultiLevelTagLookup::CheriTagRequest) {Eq#(MultiLevelTagLookup::CheriTagRequest_$operation)} Eq#(MultiLevelTagLookup::CheriTagResponse) {Eq#(MultiLevelTagLookup::CheriTagResponse_$tags)} Eq#(MultiLevelTagLookup::CheriTagWrite) Eq#(MultiLevelTagLookup::State) Eq#(Near_Mem_Caches::State) Eq#(Near_Mem_IO_AXI4::Module_State) {Eq#(NumberTypes::BuffIndex#(sz, ln))} Eq#(NumberTypes::WrapNumber#(sz)) Eq#(OInt::OInt#(n)) Eq#(OVLAssertions::OVLActionOnNewStart) Eq#(OVLAssertions::OVLCoverageLevel) Eq#(OVLAssertions::OVLEdgeType) Eq#(OVLAssertions::OVLInactive) Eq#(OVLAssertions::OVLNecessaryCondition) Eq#(OVLAssertions::OVLPropertyType) Eq#(OVLAssertions::OVLSeverityLevel) Eq#(Ordering) Eq#(Printf::RealFormat) {Eq#(RAM::RAMreq#(adr, dta))   provisos (Eq#(adr), Eq#(dta))} Eq#(RISCV_MBox::State) Eq#(Real) Eq#(Reserved::Reserved#(n)) Eq#(Reserved::ReservedOne#(n)) Eq#(Reserved::ReservedZero#(n)) Eq#(Reset) Eq#(SVA::AssertRes) Eq#(SVA::PropRes) Eq#(SVA::SeqRes) Eq#(SaturationMode) Eq#(StmtFSM::ActionType) Eq#(StmtFSM::Freedom) Eq#(StmtFSM::TSDType) Eq#(StmtFSM::TwoStateDescriptor) {Eq#(StmtFSM::TwoStateDescriptor_$TSD)} Eq#(String) {Eq#(TRAM::TRAMreq#(tg, adr, dta))   provisos (Eq#(adr), Eq#(dta), Eq#(tg))} Eq#(TV_Info::Trace_Op) Eq#(TagController::AddrFrame) Eq#(TagController::MemReqType) Eq#(TagController::TagReqId) {Eq#(Tuple2#(a, b))   provisos (Eq#(b), Eq#(a))} Eq#(Type) Eq#(UInt#(n)) {Eq#(UIntRange::UIntRange#(lo, hi))} Eq#(Vector::Ascii#(n)) {Eq#(Vector::Vector#(n, a))   provisos (Eq#(a))} {Eq#(VnD::VnD#(a))   provisos (Eq#(a))} Eq#(ZBus::BState) {Eq#(ZBusUtil::ZBit#(t))   provisos (Eq#(t))} {Eq#(function b f(a x1))   provisos (Eq#(b), Bounded#(a), Bits#(a, sa))} Eq#(void)}} {position {%/Libraries/Prelude.bs 363 6 {Library Prelude}}}
Typeclass {Literal#(type a)} {members {{{function a f(Integer x1)} fromInteger} {{function Bool f(a x1, Integer x2)} inLiteralRange}}} {instances {Literal#(AXI4_Common_Types::AXI4_Size) Literal#(Bit#(n)) {Literal#(CBus::CRAddr#(t, d))} {Literal#(Complex::Complex#(any_type))   provisos (Literal#(any_type))} {Literal#(FixedPoint::FixedPoint#(i, f))   provisos (Add#(i, f, b))} {Literal#(FloatingPoint::FloatingPoint#(e, m))} Literal#(Fmt) {Literal#(Gray::Gray#(n))   provisos (Add#(1, msb, n))} Literal#(Int#(n)) Literal#(Integer) {Literal#(LBus::LbAddr#(sa, sd))} Literal#(MemTypes::BitPO#(n)) {Literal#(NumberTypes::BuffIndex#(n, m))} Literal#(NumberTypes::WrapNumber#(sz)) Literal#(OInt::OInt#(n)) Literal#(Real) Literal#(String) Literal#(UInt#(n)) {Literal#(UIntRange::UIntRange#(lo, hi))}}} {position {%/Libraries/Prelude.bs 382 6 {Library Prelude}}}
Typeclass {RealLiteral#(type a)} {members {{{function a f(Real x1)} fromReal}}} {instances {{RealLiteral#(FixedPoint::FixedPoint#(i, f))} {RealLiteral#(FloatingPoint::FloatingPoint#(e, m))} RealLiteral#(Real)}} {position {%/Libraries/Prelude.bs 386 6 {Library Prelude}}}
Typeclass {SizedLiteral#(type a, numeric type n)} {dependencies {{a determines n}}} {members {{{function a f(Bit#(n) x1)} fromSizedInteger}}} {instances {{SizedLiteral#(Bit#(n), n)} {SizedLiteral#(Int#(n), n)} {SizedLiteral#(UInt#(n), n)}}} {position {%/Libraries/Prelude.bs 389 6 {Library Prelude}}}
Typeclass {StringLiteral#(type a)} {members {{{function a f(String x1)} fromString}}} {instances {StringLiteral#(Char) StringLiteral#(String)}} {position {%/Libraries/Prelude.bs 394 6 {Library Prelude}}}
Enum Ordering {members {LT EQ GT}} {width 2} {position {%/Libraries/Prelude.bs 398 5 {Library Prelude}}}
Typeclass {Ord#(type a)} {members {{{function Bool f(a x1, a x2)} <} {{function Bool f(a x1, a x2)} <=} {{function Bool f(a x1, a x2)} >} {{function Bool f(a x1, a x2)} >=} {{function Ordering f(a x1, a x2)} compare} {{function a f(a x1, a x2)} min} {{function a f(a x1, a x2)} max}}} {instances {Ord#(AXI4_Common_Types::AXI4_Size) Ord#(Bit#(n)) Ord#(Char) {Ord#(FixedPoint::FixedPoint#(i, f))   provisos (Add#(i, f, b))} {Ord#(FloatingPoint::FloatingPoint#(e, m))} Ord#(Int#(n)) Ord#(Integer) Ord#(MMU_Cache_Common::Meta_State) {Ord#(MemTypesCHERI::PhyByteAddress#(a, b))} Ord#(NumberTypes::WrapNumber#(n)) {Ord#(OInt::OInt#(n))   provisos (Log#(n, k))} Ord#(Real) Ord#(Reserved::Reserved#(n)) Ord#(Reserved::ReservedOne#(n)) Ord#(Reserved::ReservedZero#(n)) {Ord#(Tuple2#(a, b))   provisos (Eq#(a), Ord#(b), Ord#(a))} Ord#(UInt#(n)) {Ord#(UIntRange::UIntRange#(lo, hi))}}} {position {%/Libraries/Prelude.bs 421 6 {Library Prelude}}}
Typeclass {Bounded#(type a)} {members {{a minBound} {a maxBound}}} {instances {{Bounded#(Bag::Entry#(keyType, datType))   provisos (Bounded#(datType), Bounded#(keyType))} Bounded#(Bit#(n)) Bounded#(Bool) {Bounded#(CacheCore::CacheAddress#(keyBits, tagBits))} Bounded#(CacheCore::CacheCommit) {Bounded#(CacheCore::DataKey#(ways, keyBits))} Bounded#(CacheCore::TagLine#(tagBits)) {Bounded#(FixedPoint::FixedPoint#(i, f))   provisos (Add#(i, f, b))} Bounded#(FloatingPoint::Disorder) {Bounded#(FloatingPoint::FloatingPoint#(e, m))} {Bounded#(Gray::Gray#(n))   provisos (Add#(1, msb, n))} Bounded#(Int#(n)) Bounded#(MemTypesCHERI::BytesPerFlit) Bounded#(MemTypesCHERI::CheriCapAddress) {Bounded#(MemTypesCHERI::PhyBitAddress#(width, bytePerLine))} {Bounded#(MemTypesCHERI::PhyByteAddress#(width, bytePerLine))} Bounded#(NumberTypes::WrapNumber#(sz)) Bounded#(OInt::OInt#(n)) Bounded#(Ordering) Bounded#(Reserved::Reserved#(n)) Bounded#(Reserved::ReservedOne#(n)) Bounded#(Reserved::ReservedZero#(n)) {Bounded#(Tuple2#(a, b))   provisos (Bounded#(b), Bounded#(a))} Bounded#(UInt#(n)) {Bounded#(UIntRange::UIntRange#(lo, hi))} Bounded#(Vector::Ascii#(n)) {Bounded#(Vector::Vector#(n, a))   provisos (Bits#(a, sa), Bounded#(a))} {Bounded#(VnD::VnD#(a))   provisos (Bounded#(a))} Bounded#(void)}} {position {%/Libraries/Prelude.bs 454 6 {Library Prelude}}}
Typeclass {Bitwise#(type a)} {members {{{function a f(a x1, a x2)} &} {{function a f(a x1, a x2)} |} {{function a f(a x1, a x2)} ^} {{function a f(a x1, a x2)} ~^} {{function a f(a x1, a x2)} ^~} {{function a f(a x1)} invert} {{function a f(a x1, b x2)   provisos (PrimShiftIndex#(b, c))} <<} {{function a f(a x1, b x2)   provisos (PrimShiftIndex#(b, c))} >>} {{function Bit#(1) f(a x1)} msb} {{function Bit#(1) f(a x1)} lsb}}} {instances {Bitwise#(AXI4_Common_Types::AXI4_Size) Bitwise#(Bit#(n)) Bitwise#(CHERICap::HardPerms) Bitwise#(File) {Bitwise#(FixedPoint::FixedPoint#(i, f))   provisos (Add#(i, f, b))} Bitwise#(FloatingPoint::Exception) Bitwise#(Int#(n)) Bitwise#(UInt#(n))}} {position {%/Libraries/Prelude.bs 482 6 {Library Prelude}}}
Typeclass {BitReduction#(type a, numeric type n)} {members {{{function a#(1) f(a#(n) x1)} reduceAnd} {{function a#(1) f(a#(n) x1)} reduceOr} {{function a#(1) f(a#(n) x1)} reduceXor} {{function a#(1) f(a#(n) x1)} reduceNand} {{function a#(1) f(a#(n) x1)} reduceNor} {{function a#(1) f(a#(n) x1)} reduceXnor}}} {instances {{BitReduction#(Bit, n)} {BitReduction#(Int, n)} {BitReduction#(UInt, n)}}} {position {%/Libraries/Prelude.bs 494 7 {Library Prelude}}}
Typeclass {BitExtend#(numeric type a, numeric type b, type c)} {members {{{function c#(b) f(c#(a) x1)} zeroExtend} {{function c#(b) f(c#(a) x1)} signExtend} {{function c#(b) f(c#(a) x1)} extend} {{function c#(a) f(c#(b) x1)} truncate}}} {instances {{BitExtend#(n, m, Bit)   provisos (Add#(k, n, m))} {BitExtend#(n, m, Int)   provisos (Add#(k, n, m))} {BitExtend#(n, m, UInt)   provisos (Add#(k, n, m))}}} {position {%/Libraries/Prelude.bs 503 7 {Library Prelude}}}
Typeclass {Arith#(type a)} {superclasses Literal#(a)} {members {{{function a f(a x1, a x2)} +} {{function a f(a x1, a x2)} -} {{function a f(a x1)} negate} {{function a f(a x1, a x2)} *} {{function a f(a x1, a x2)} /} {{function a f(a x1, a x2)} %} {{function a f(a x1)} abs} {{function a f(a x1)} signum} {{function a f(a x1, a x2)} **} {{function a f(a x1)} exp_e} {{function a f(a x1)} log} {{function a f(a x1, a x2)} logb} {{function a f(a x1)} log2} {{function a f(a x1)} log10}}} {instances {Arith#(AXI4_Common_Types::AXI4_Size) Arith#(Bit#(n)) {Arith#(CBus::CRAddr#(t, d))} {Arith#(Complex::Complex#(any_type))   provisos (Arith#(any_type))} {Arith#(FixedPoint::FixedPoint#(i, f))   provisos (Add#(TAdd#(i, i), TAdd#(f, f), TAdd#(b, b)), Add#(i, f, b))} {Arith#(FloatingPoint::FloatingPoint#(e, m))   provisos (Add#(f__, TLog#(TAdd#(1, TAdd#(m, 5))), TAdd#(e, 1)), Add#(e__, TLog#(TAdd#(1, TAdd#(m, 1))), TAdd#(TAdd#(e, 1), 1)), Add#(d__, TLog#(TAdd#(1, TAdd#(TAdd#(m, 5), 1))), TAdd#(e, 1)), Add#(c__, TLog#(TAdd#(1, TAdd#(m, 2))), TAdd#(e, 1)), Add#(b__, TLog#(TAdd#(1, TAdd#(m, 4))), TAdd#(e, 1)), Add#(a__, TLog#(TAdd#(1, TAdd#(TAdd#(m, 1), TAdd#(m, 1)))), TAdd#(e, 1)))} Arith#(Fmt) Arith#(Int#(n)) Arith#(Integer) {Arith#(NumberTypes::BuffIndex#(n, m))   provisos (Add#(log, _, n), Log#(m, log), Add#(1, n, n1))} Arith#(NumberTypes::WrapNumber#(sz)) Arith#(Real) Arith#(String) Arith#(UInt#(n))}} {position {%/Libraries/Prelude.bs 528 21 {Library Prelude}}}
Typeclass {IsModule#(type m, type c)} {superclasses MonadFix#(m)} {dependencies {{m determines c}}} {members {{{function m#(a) f(Module#(a) x1)} liftModule} {{function m#(b) f(module x1#(Module#(c#(a)) x1)(c#(b)), m#(a) x2)} liftModuleOp}}} {instances {{IsModule#(Module, Id__)} {IsModule#(ModuleContextCore::ModuleContext#(c), PrimPair#(c))}}} {position {%/Libraries/Prelude.bs 735 22 {Library Prelude}}}
Primary {Id__#(type a)} polymorphic
Primary SchedPragma
Enum ActionWorld {members ActionWorld} {position {%/Libraries/Prelude.bs 769 5 {Library Prelude}}}
Struct {AVStruct#(type a)} polymorphic {members {{a avValue} {PrimAction avAction} {ActionWorld avWorld}}} {position {%/Libraries/Prelude.bs 774 7 {Library Prelude}}}


Alias Action_ ActionValue_#(0) {position {%/Libraries/Prelude.bs 911 5 {Library Prelude}}}
Struct {ActionValue_#(numeric type n)} polymorphic {members {{Bit#(n) avValue_} {PrimAction avAction_}}} {position {%/Libraries/Prelude.bs 932 7 {Library Prelude}}}
Primary {Bit#(numeric type a)} polymorphic
Enum Bool {members {False True}} {width 1} {position {%/Libraries/Prelude.bs 1259 5 {Library Prelude}}}
Interface Empty {members {}} {position {%/Libraries/Prelude.bs 1296 10 {Library Prelude}}}
Primary Integer
Primary Real
TaggedUnion {Maybe#(type a)} polymorphic {members {{void Invalid {width 0}} {a Valid}}} {position {%/Libraries/Prelude.bs 1465 5 {Library Prelude}}}
Alias {Perhaps#(type a)} Maybe#(a) {position {%/Libraries/Prelude.bs 1467 5 {Library Prelude}}}
Primary {Int#(numeric type n)} polymorphic
Primary {UInt#(numeric type n)} polymorphic
Alias Nat Bit#(32) {position {%/Libraries/Prelude.bs 1773 5 {Library Prelude}}}
TaggedUnion {Either#(type a, type b)} polymorphic {members {{a Left} {b Right}}} {position {%/Libraries/Prelude.bs 1787 5 {Library Prelude}}}
Interface {Reg#(type a)} polymorphic {members {{method {Action _write a {}}} {method {a _read {} {}}}}} {position {%/Libraries/Prelude.bs 1836 10 {Library Prelude}}}
Interface {RevertingVirtualReg::VReg#(numeric type n)} polymorphic {members {{method {PrimAction write Bit#(n) {}}} {method {Bit#(n) read {} {}}}}} {position {%/Libraries/RevertingVirtualReg.bs 3 10 {Library RevertingVirtualReg}}}
Primary Rules
Primary String
Primary Char
Primary Fmt
Primary {Module#(type a)} polymorphic
Primary Name__
Primary Attributes__
Primary Position__
Primary Type
Primary Clock
Primary Power
Primary Reset
Primary {Inout#(type a)} polymorphic
Primary {Inout_#(numeric type a)} polymorphic
Primary {SizeOf#(type a)} polymorphic
Primary {TAdd#(numeric type a, numeric type b)} polymorphic
Primary {TSub#(numeric type a, numeric type b)} polymorphic
Primary {TMul#(numeric type a, numeric type b)} polymorphic
Primary {TDiv#(numeric type a, numeric type b)} polymorphic
Primary {TLog#(numeric type a)} polymorphic
Primary {TExp#(numeric type a)} polymorphic
Primary {TMax#(numeric type a, numeric type b)} polymorphic
Primary {TMin#(numeric type a, numeric type b)} polymorphic
Enum StringProxy {members StringProxy} {position {%/Libraries/Prelude.bs 2880 6 {Library Prelude}}}
Primary Pred__
TaggedUnion SvaParam {members {{Bool SvaBool {width 1}} {UInt#(32) SvaNumber {width 32}}}} {width 33} {position {%/Libraries/Prelude.bs 3119 5 {Library Prelude}}}
Primary File {width 32}
Struct {Tuple2#(type a, type b)} polymorphic {members {{a tpl_1} {b tpl_2}}} {position {%/Libraries/Prelude.bs 3297 5 {Library Prelude}}}
Struct {Tuple3#(type a, type b, type c)} polymorphic {members {{a tpl_1} {b tpl_2} {c tpl_3}}} {position {%/Libraries/Prelude.bs 3298 5 {Library Prelude}}}
Struct {Tuple4#(type a, type b, type c, type d)} polymorphic {members {{a tpl_1} {b tpl_2} {c tpl_3} {d tpl_4}}} {position {%/Libraries/Prelude.bs 3299 5 {Library Prelude}}}
Struct {Tuple5#(type a, type b, type c, type d, type e)} polymorphic {members {{a tpl_1} {b tpl_2} {c tpl_3} {d tpl_4} {e tpl_5}}} {position {%/Libraries/Prelude.bs 3300 5 {Library Prelude}}}
Struct {Tuple6#(type a, type b, type c, type d, type e, type f)} polymorphic {members {{a tpl_1} {b tpl_2} {c tpl_3} {d tpl_4} {e tpl_5} {f tpl_6}}} {position {%/Libraries/Prelude.bs 3301 5 {Library Prelude}}}
Struct {Tuple7#(type a, type b, type c, type d, type e, type f, type g)} polymorphic {members {{a tpl_1} {b tpl_2} {c tpl_3} {d tpl_4} {e tpl_5} {f tpl_6} {g tpl_7}}} {position {%/Libraries/Prelude.bs 3302 5 {Library Prelude}}}
Struct {Tuple8#(type a, type b, type c, type d, type e, type f, type g, type h)} polymorphic {members {{a tpl_1} {b tpl_2} {c tpl_3} {d tpl_4} {e tpl_5} {f tpl_6} {g tpl_7} {h tpl_8}}} {position {%/Libraries/Prelude.bs 3303 5 {Library Prelude}}}
Typeclass {Has_tpl_1#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_1}}} {instances {{Has_tpl_1#(Tuple2#(a, b), a)} {Has_tpl_1#(Tuple3#(a, b, c), a)} {Has_tpl_1#(Tuple4#(a, b, c, d), a)} {Has_tpl_1#(Tuple5#(a, b, c, d, e), a)} {Has_tpl_1#(Tuple6#(a, b, c, d, e, f), a)} {Has_tpl_1#(Tuple7#(a, b, c, d, e, f, g), a)} {Has_tpl_1#(Tuple8#(a, b, c, d, e, f, g, h), a)}}} {position {%/Libraries/Prelude.bs 3306 17 {Library Prelude}}}
Typeclass {Has_tpl_2#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_2}}} {instances {{Has_tpl_2#(Tuple2#(a, b), b)} {Has_tpl_2#(Tuple3#(a, b, c), b)} {Has_tpl_2#(Tuple4#(a, b, c, d), b)} {Has_tpl_2#(Tuple5#(a, b, c, d, e), b)} {Has_tpl_2#(Tuple6#(a, b, c, d, e, f), b)} {Has_tpl_2#(Tuple7#(a, b, c, d, e, f, g), b)} {Has_tpl_2#(Tuple8#(a, b, c, d, e, f, g, h), b)}}} {position {%/Libraries/Prelude.bs 3307 17 {Library Prelude}}}
Typeclass {Has_tpl_3#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_3}}} {instances {{Has_tpl_3#(Tuple3#(a, b, c), c)} {Has_tpl_3#(Tuple4#(a, b, c, d), c)} {Has_tpl_3#(Tuple5#(a, b, c, d, e), c)} {Has_tpl_3#(Tuple6#(a, b, c, d, e, f), c)} {Has_tpl_3#(Tuple7#(a, b, c, d, e, f, g), c)} {Has_tpl_3#(Tuple8#(a, b, c, d, e, f, g, h), c)}}} {position {%/Libraries/Prelude.bs 3308 17 {Library Prelude}}}
Typeclass {Has_tpl_4#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_4}}} {instances {{Has_tpl_4#(Tuple4#(a, b, c, d), d)} {Has_tpl_4#(Tuple5#(a, b, c, d, e), d)} {Has_tpl_4#(Tuple6#(a, b, c, d, e, f), d)} {Has_tpl_4#(Tuple7#(a, b, c, d, e, f, g), d)} {Has_tpl_4#(Tuple8#(a, b, c, d, e, f, g, h), d)}}} {position {%/Libraries/Prelude.bs 3309 17 {Library Prelude}}}
Typeclass {Has_tpl_5#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_5}}} {instances {{Has_tpl_5#(Tuple5#(a, b, c, d, e), e)} {Has_tpl_5#(Tuple6#(a, b, c, d, e, f), e)} {Has_tpl_5#(Tuple7#(a, b, c, d, e, f, g), e)} {Has_tpl_5#(Tuple8#(a, b, c, d, e, f, g, h), e)}}} {position {%/Libraries/Prelude.bs 3310 17 {Library Prelude}}}
Typeclass {Has_tpl_6#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_6}}} {instances {{Has_tpl_6#(Tuple6#(a, b, c, d, e, f), f)} {Has_tpl_6#(Tuple7#(a, b, c, d, e, f, g), f)} {Has_tpl_6#(Tuple8#(a, b, c, d, e, f, g, h), f)}}} {position {%/Libraries/Prelude.bs 3311 17 {Library Prelude}}}
Typeclass {Has_tpl_7#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_7}}} {instances {{Has_tpl_7#(Tuple7#(a, b, c, d, e, f, g), g)} {Has_tpl_7#(Tuple8#(a, b, c, d, e, f, g, h), g)}}} {position {%/Libraries/Prelude.bs 3312 17 {Library Prelude}}}
Typeclass {Has_tpl_8#(type t, type a)} {dependencies {{t determines a}}} incoherent {members {{{function a f(t x1)} tpl_8}}} {instances {{Has_tpl_8#(Tuple8#(a, b, c, d, e, f, g, h), h)}}} {position {%/Libraries/Prelude.bs 3313 17 {Library Prelude}}}
List {List#(type element_type)} polymorphic {elem a}
can't read "Cons": no such variable
Primary {Array#(type a)} polymorphic
Primary Handle
Enum IOMode {members {ReadMode WriteMode AppendMode}} {position {%/Libraries/Prelude.bs 4042 5 {Library Prelude}}}
TaggedUnion BufferMode {members {{void NoBuffering {width 0}} {void LineBuffering {width 0}} {Maybe#(Integer) BlockBuffering}}} {position {%/Libraries/Prelude.bs 4085 5 {Library Prelude}}}
Typeclass {FShow#(type t)} {members {{{function Fmt f(t x1)} fshow}}} {instances {{FShow#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {FShow#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} FShow#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {FShow#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {FShow#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {FShow#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_))} {FShow#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} FShow#(AXI4_Common_Types::AXI4_Burst) FShow#(AXI4_Common_Types::AXI4_Lock) FShow#(AXI4_Common_Types::AXI4_Prot_0) FShow#(AXI4_Common_Types::AXI4_Prot_1) FShow#(AXI4_Common_Types::AXI4_Prot_2) FShow#(AXI4_Common_Types::AXI4_Resp) FShow#(AXI4_Common_Types::AXI4_Size) {FShow#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {FShow#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {FShow#(AXI4_Types::AXI4_BFlit#(id_, user_))} FShow#(AXI4_Types::AXI4_Events) {FShow#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {FShow#(AXI4_Types::AXI4_WFlit#(data_, user_))} {FShow#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))} FShow#(AXI4_Utils::ReadSplitOption) FShow#(AXI4_Utils::SerialiserState) {FShow#(AXI_Helpers::ReqFlit#(id_, addr_, data_, tag_))} {FShow#(AXI_Helpers::RspFlit#(id_, data_, tag_))} {FShow#(AXI_Helpers::WriteReqFlit#(id_, addr_, data_, tag_))} {FShow#(Bag::Entry#(keyType, datType))   provisos (FShow#(datType), FShow#(keyType))} FShow#(Bit#(n)) FShow#(Bool) FShow#(Branch_Predictor::BTB_Entry) FShow#(CHERICC_Fat::Bounds) FShow#(CHERICC_Fat::BoundsEmbeddedExp) FShow#(CHERICC_Fat::BoundsExp0) FShow#(CHERICC_Fat::CapFat) FShow#(CHERICC_Fat::CapPipe) FShow#(CHERICC_Fat::CapabilityInMemory) FShow#(CHERICC_Fat::Format) FShow#(CHERICC_Fat::HPerms) FShow#(CHERICC_Fat::MetaInfo) FShow#(CHERICC_Fat::Perms) FShow#(CHERICap::HardPerms) FShow#(CHERICap::Kind#(ot)) {FShow#(CHERICap::SetBoundsReturn#(t, n))   provisos (FShow#(t))} FShow#(CPU::CPU_State) FShow#(CPU_Globals::Bypass) FShow#(CPU_Globals::Bypass_State) FShow#(CPU_Globals::CF_Info) FShow#(CPU_Globals::CF_Op) FShow#(CPU_Globals::Control) FShow#(CPU_Globals::Data_Stage1_to_Stage2) FShow#(CPU_Globals::Data_Stage2_to_Stage3) FShow#(CPU_Globals::Data_StageD_to_Stage1) FShow#(CPU_Globals::Data_StageF_to_StageD) FShow#(CPU_Globals::FBypass) FShow#(CPU_Globals::Op_Stage2) FShow#(CPU_Globals::Output_Stage1) FShow#(CPU_Globals::Output_Stage2) FShow#(CPU_Globals::Output_Stage3) FShow#(CPU_Globals::Output_StageD) FShow#(CPU_Globals::Output_StageF) {FShow#(CPU_Globals::Pipeline_Val#(capType))   provisos (FShow#(capType))} FShow#(CPU_Globals::Stage_OStatus) FShow#(CPU_Globals::Trap_Info_Pipe) FShow#(CSR_RegFile_MSU::CSR_Write_Result) FShow#(CSR_RegFile_MSU::RF_State) FShow#(CacheCorderer::ReqRec) FShow#(CacheCorderer::TransRecord) {FShow#(CacheCore::AddrTagWay#(ways, keyBits, tagBits))} {FShow#(CacheCore::CacheAddress#(keyBits, tagBits))} FShow#(CacheCore::CacheCommit) FShow#(CacheCore::CacheState) {FShow#(CacheCore::ControlToken#(ways, keyBits, tagBits))} {FShow#(CacheCore::DataKey#(ways, keyBits))} FShow#(CacheCore::EventsCacheCore) {FShow#(CacheCore::InvalidateToken#(ways, keyBits, tagBits))} FShow#(CacheCore::LookupCommand) FShow#(CacheCore::OrderBehaviour) FShow#(CacheCore::ReqIdWithSC) {FShow#(CacheCore::RequestRecord#(ways, keyBits, tagBits))} FShow#(CacheCore::ResponseBehaviour) FShow#(CacheCore::ResponseToken) FShow#(CacheCore::TagLine#(tagBits)) {FShow#(CacheCore::TagUpdate#(ways, keyBits, tagBits))} FShow#(CacheCore::WriteMissBehaviour) FShow#(Char) {FShow#(Complex::Complex#(t))   provisos (FShow#(t))} FShow#(ConArg) {FShow#(Conc#(a))   provisos (FShow#(a))} {FShow#(ConcPoly#(a))   provisos (FShow#(a))} {FShow#(ConcPrim#(a))   provisos (FShow#(a))} {FShow#(DM_CPU_Req_Rsp::DM_CPU_Req#(a, d))} FShow#(DM_CPU_Req_Rsp::DM_CPU_Rsp#(d)) FShow#(DM_Common::DCSR_Cause) FShow#(DM_Common::DM_abstractcs_cmderr) FShow#(DM_Common::DM_command_access_reg_size) FShow#(DM_Common::DM_command_cmdtype) FShow#(DM_Common::DM_sbaccess) FShow#(DM_Common::DM_sberror) FShow#(DM_System_Bus::SB_State) FShow#(EX_ALU_functions::ALU_Inputs) FShow#(EX_ALU_functions::ALU_Outputs) FShow#(EX_ALU_functions::Output_Select) {FShow#(Either#(a, b))   provisos (FShow#(b), FShow#(a))} FShow#(FBox_Core::FBoxResult) FShow#(FBox_Core::FBoxState) {FShow#(FIFOF::FIFOF#(a))   provisos (FShow#(a))} {FShow#(FIFOF_::FIFOF_#(a))   provisos (FShow#(a))} FShow#(FPR_RegFile::RF_State) {FShow#(FixedPoint::FixedPoint#(i, f))} FShow#(FloatingPoint::Exception) {FShow#(FloatingPoint::FloatingPoint#(e, m))} FShow#(FloatingPoint::RoundMode) FShow#(Fmt) FShow#(GPR_RegFile::RF_State) FShow#(ISA_Decls::Access_RWX) FShow#(ISA_Decls::Decoded_Instr) FShow#(ISA_Decls::Fence_Ordering) FShow#(ISA_Decls::FpuOp) FShow#(ISA_Decls::ISize) FShow#(ISA_Decls::MCause) FShow#(ISA_Decls::MCounteren) FShow#(ISA_Decls::MCountinhibit) FShow#(ISA_Decls::MISA) FShow#(ISA_Decls::MTVEC_Mode) FShow#(ISA_Decls::MTVec) FShow#(ISA_Decls::Mem_Data_Size) FShow#(ISA_Decls::Trap_Info_CSR) FShow#(Int#(n)) FShow#(IntMulDiv::DivState) FShow#(IntMulDiv::MulState) FShow#(Integer) FShow#(JtagTap::DMI) FShow#(JtagTap::DTMCS) FShow#(JtagTap::JtagState) {FShow#(List#(a))   provisos (FShow#(a))} FShow#(MMU_Cache::CTagState) FShow#(MMU_Cache::Fabric_Write_Fields) FShow#(MMU_Cache::Module_State) FShow#(MMU_Cache::Requestor) FShow#(MMU_Cache::State_and_CTag) FShow#(MMU_Cache_Common::CacheOp) FShow#(MMU_Cache_Common::L1_to_L2_Req) FShow#(MMU_Cache_Common::L1_to_L2_Rsp) FShow#(MMU_Cache_Common::L2_to_L1_Req) FShow#(MMU_Cache_Common::L2_to_L1_Rsp) FShow#(MMU_Cache_Common::MMU_Cache_Req) FShow#(MMU_Cache_Common::Meta_State) FShow#(MMU_Cache_Common::Single_Req) FShow#(MMU_Cache_Common::Single_Rsp) FShow#(MMU_Cache_Common::VM_Xlate_Outcome) FShow#(MMU_Cache_Common::VM_Xlate_Result) {FShow#(Map::MapKeyIndex#(ky, ix))   provisos (FShow#(ix), FShow#(ky))} {FShow#(Map::MapKeyIndexValue#(ky, ix, vl))   provisos (FShow#(vl), FShow#(ix), FShow#(ky))} {FShow#(Map::MapKeyValue#(ky, vl))   provisos (FShow#(vl), FShow#(ky))} {FShow#(Maybe#(a))   provisos (FShow#(a))} FShow#(MemTypes::BitPO#(n)) {FShow#(MemTypes::MemReq#(addr_t, data_t))   provisos (FShow#(addr_t), Bits#(data_t, _v100), FShow#(data_t))} {FShow#(MemTypes::MemReq_$ReadReq#(addr_t, data_t))   provisos (Bits#(data_t, _v100), FShow#(addr_t))} {FShow#(MemTypes::MemReq_$WriteReq#(addr_t, data_t))   provisos (FShow#(data_t), Bits#(data_t, _v100), FShow#(addr_t))} {FShow#(MemTypes::MemRsp#(data_t))   provisos (FShow#(data_t))} FShow#(MemTypesCHERI::BytesPerFlit) FShow#(MemTypesCHERI::CacheInst) FShow#(MemTypesCHERI::CacheOperation) FShow#(MemTypesCHERI::CheriCapAddress) FShow#(MemTypesCHERI::Data#(width)) FShow#(MemTypesCHERI::DataMinusCapTags#(width)) FShow#(MemTypesCHERI::Error) {FShow#(MemTypesCHERI::MemoryRequest#(a, b, c, d))   provisos (Bits#(c, c_), Bits#(b, b_), Bits#(a, a_), FShow#(a))} {FShow#(MemTypesCHERI::MemoryResponse#(a, b, c))   provisos (Bits#(b, b_), Bits#(a, a_))} {FShow#(MemTypesCHERI::PhyBitAddress#(width, bytePerLine))} {FShow#(MemTypesCHERI::PhyByteAddress#(width, bytePerLine))} FShow#(MemTypesCHERI::ReqId) FShow#(MemTypesCHERI::WhichCache) {FShow#(Memory::MemoryRequest#(a, d))} FShow#(Memory::MemoryResponse#(d)) {FShow#(Meta#(m, r))   provisos (FShow#(r))} {FShow#(MetaConsAnon#(name, idx, nfields))} {FShow#(MetaConsNamed#(name, idx, nfields))} {FShow#(MetaData#(name, pkg, tyargs, ncons))} {FShow#(MetaField#(name, idx))} FShow#(MultiLevelTagLookup::CheriTagRequest) {FShow#(MultiLevelTagLookup::CheriTagRequest_$operation)} FShow#(MultiLevelTagLookup::CheriTagResponse) {FShow#(MultiLevelTagLookup::CheriTagResponse_$tags)} FShow#(MultiLevelTagLookup::CheriTagWrite) FShow#(MultiLevelTagLookup::State) FShow#(MultiLevelTagLookup::TableLvl) FShow#(Near_Mem_Caches::State) FShow#(Near_Mem_IFC::EventsCache) FShow#(Near_Mem_IO_AXI4::Module_State) FShow#(NumArg#(i)) FShow#(RISCV_MBox::State) FShow#(Reserved::Reserved#(n)) FShow#(Reserved::ReservedOne#(n)) FShow#(Reserved::ReservedZero#(n)) {FShow#(Routable::WithMetaInfo#(t, m_t))   provisos (FShow#(m_t), FShow#(t))} {FShow#(Routable::WithRouteInfo#(t, r_t))   provisos (FShow#(r_t), FShow#(t))} FShow#(StarArg#(i)) FShow#(StatCounters::AXI4_Master_Events) FShow#(StatCounters::AXI4_Slave_Events) FShow#(StatCounters::EventsCore) FShow#(StatCounters::EventsL1D) FShow#(StatCounters::EventsL1I) FShow#(StatCounters::EventsLL) FShow#(StatCounters::EventsTGC) FShow#(StatCounters::EventsTransExe) FShow#(StatCounters::HPMEvents) FShow#(StrArg#(i)) FShow#(String) FShow#(TLB::TLBE) FShow#(TLB::TLB_Lookup_Result) FShow#(TV_Info::Info_CPU_to_Verifier) FShow#(TV_Info::Trace_Data) FShow#(TV_Info::Trace_Op) FShow#(TagController::AddrFrame) FShow#(TagController::MemReqType) FShow#(TagController::TagReqId) {FShow#(Tuple2#(a, b))   provisos (FShow#(b), FShow#(a))} {FShow#(Tuple3#(a, b, c))   provisos (FShow#(c), FShow#(b), FShow#(a))} {FShow#(Tuple4#(a, b, c, d))   provisos (FShow#(d), FShow#(c), FShow#(b), FShow#(a))} {FShow#(Tuple5#(a, b, c, d, e))   provisos (FShow#(e), FShow#(d), FShow#(c), FShow#(b), FShow#(a))} {FShow#(Tuple6#(a, b, c, d, e, f))   provisos (FShow#(f), FShow#(e), FShow#(d), FShow#(c), FShow#(b), FShow#(a))} {FShow#(Tuple7#(a, b, c, d, e, f, g))   provisos (FShow#(g), FShow#(f), FShow#(e), FShow#(d), FShow#(c), FShow#(b), FShow#(a))} {FShow#(Tuple8#(a, b, c, d, e, f, g, h))   provisos (FShow#(h), FShow#(g), FShow#(f), FShow#(e), FShow#(d), FShow#(c), FShow#(b), FShow#(a))} FShow#(UInt#(n)) FShow#(Vector::Ascii#(n)) {FShow#(Vector::Vector#(n, a))   provisos (FShow#(a))} {FShow#(VnD::VnD#(a))   provisos (FShow#(a))} FShow#(void)}} {position {%/Libraries/Prelude.bs 4165 6 {Library Prelude}}}
Typeclass {DefaultValue#(type a)} coherent {members {{a defaultValue}}} {instances {{DefaultValue#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {DefaultValue#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} DefaultValue#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {DefaultValue#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {DefaultValue#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {DefaultValue#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {DefaultValue#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {DefaultValue#(AXI4_Types::AXI4_BFlit#(id_, user_))} DefaultValue#(AXI4_Types::AXI4_Events) {DefaultValue#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {DefaultValue#(AXI4_Types::AXI4_WFlit#(data_, user_))} {DefaultValue#(AXI_Helpers::ReqFlit#(id_, addr_, data_, tag_))} {DefaultValue#(AXI_Helpers::RspFlit#(id_, data_, tag_))} {DefaultValue#(BRAM::BRAMRequest#(addr, data))   provisos (DefaultValue#(data), DefaultValue#(addr))} {DefaultValue#(BRAM::BRAMRequestBE#(addr, data, n))   provisos (DefaultValue#(data), DefaultValue#(addr))} DefaultValue#(BRAM::BRAM_Configure) DefaultValue#(Bool) DefaultValue#(CHERICC_Fat::Bounds) DefaultValue#(CHERICC_Fat::CapFat) DefaultValue#(CommitIfc::RecvCommit#(a)) {DefaultValue#(CommitIfc::SendCommit#(a))   provisos (DefaultValue#(a))} DefaultValue#(FloatingPoint::Exception) {DefaultValue#(FloatingPoint::FloatingPoint#(e, m))} DefaultValue#(FloatingPoint::RoundMode) DefaultValue#(JtagTap::DMI) DefaultValue#(JtagTap::DTMCS) DefaultValue#(MIMO::MIMOConfiguration) DefaultValue#(Maybe#(a)) DefaultValue#(MemTypesCHERI::CacheOperation) {DefaultValue#(MemTypesCHERI::MemoryRequest#(a, b, c, d))   provisos (Bits#(c, c_), Bits#(b, b_), Bits#(a, a_))} {DefaultValue#(MemTypesCHERI::MemoryResponse#(a, b, c))   provisos (Bits#(b, b_), Bits#(a, a_))} {DefaultValue#(Memory::MemoryRequest#(a, d))} DefaultValue#(Memory::MemoryResponse#(d)) {DefaultValue#(Tuple2#(a, b))   provisos (DefaultValue#(b), DefaultValue#(a))} DefaultValue#(UnitAppendList::UAList#(a)) {DefaultValue#(Vector::Vector#(n, t))   provisos (DefaultValue#(t))} {DefaultValue#(t)   provisos (Literal#(t))} DefaultValue#(void)}} {position {%/Libraries/Prelude.bs 4268 15 {Library Prelude}}}
Typeclass {Generic#(type a, type r)} {dependencies {{a determines r}}} {members {{{function r f(a x1)} from} {{function a f(r x1)} to}}} {instances {{Generic#(AVStruct#(a), Meta#(MetaData#("AVStruct", "Prelude", StarArg#(a), 1), Meta#(MetaConsNamed#("AVStruct", 0, 3), Tuple3#(Meta#(MetaField#("avValue", 0), Conc#(a)), Meta#(MetaField#("avAction", 1), Conc#(PrimAction)), Meta#(MetaField#("avWorld", 2), Conc#(ActionWorld))))))} {Generic#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_), Meta#(MetaData#("AXI4Lite_ARFlit", "AXI4Lite_Types", Tuple2#(NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_ARFlit", 0, 3), Tuple3#(Meta#(MetaField#("araddr", 0), Conc#(Bit#(addr_))), Meta#(MetaField#("arprot", 1), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("aruser", 2), Conc#(Bit#(user_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_), Meta#(MetaData#("AXI4Lite_AR_Master_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_AR_Master_Sig", 0, 5), Tuple5#(Meta#(MetaField#("araddr", 0), Conc#(Bit#(addr_))), Meta#(MetaField#("arprot", 1), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("aruser", 2), Conc#(Bit#(user_))), Meta#(MetaField#("arvalid", 3), Conc#(Bool)), Meta#(MetaField#("arready", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_), Meta#(MetaData#("AXI4Lite_AR_Slave_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_AR_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("arflit", 0), Conc#(function Action f(Bool x1, Bit#(addr_) x2, AXI4_Common_Types::AXI4_Prot x3, Bit#(user_) x4))), Meta#(MetaField#("arready", 1), Conc#(Bool))))))} {Generic#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_), Meta#(MetaData#("AXI4Lite_AWFlit", "AXI4Lite_Types", Tuple2#(NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_AWFlit", 0, 3), Tuple3#(Meta#(MetaField#("awaddr", 0), Conc#(Bit#(addr_))), Meta#(MetaField#("awprot", 1), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("awuser", 2), Conc#(Bit#(user_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_), Meta#(MetaData#("AXI4Lite_AW_Master_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_AW_Master_Sig", 0, 5), Tuple5#(Meta#(MetaField#("awaddr", 0), Conc#(Bit#(addr_))), Meta#(MetaField#("awprot", 1), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("awuser", 2), Conc#(Bit#(user_))), Meta#(MetaField#("awvalid", 3), Conc#(Bool)), Meta#(MetaField#("awready", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_), Meta#(MetaData#("AXI4Lite_AW_Slave_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_AW_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("awflit", 0), Conc#(function Action f(Bool x1, Bit#(addr_) x2, AXI4_Common_Types::AXI4_Prot x3, Bit#(user_) x4))), Meta#(MetaField#("awready", 1), Conc#(Bool))))))} {Generic#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), Meta#(MetaData#("AXI4Lite_BFlit", "AXI4Lite_Types", NumArg#(user_), 1), Meta#(MetaConsNamed#("AXI4Lite_BFlit", 0, 2), Tuple2#(Meta#(MetaField#("bresp", 0), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("buser", 1), Conc#(Bit#(user_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_), Meta#(MetaData#("AXI4Lite_B_Master_Sig", "AXI4Lite_Types", NumArg#(user_), 1), Meta#(MetaConsNamed#("AXI4Lite_B_Master_Sig", 0, 2), Tuple2#(Meta#(MetaField#("bflit", 0), Conc#(function Action f(Bool x1, AXI4_Common_Types::AXI4_Resp x2, Bit#(user_) x3))), Meta#(MetaField#("bready", 1), Conc#(Bool))))))} {Generic#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_), Meta#(MetaData#("AXI4Lite_B_Slave_Sig", "AXI4Lite_Types", NumArg#(user_), 1), Meta#(MetaConsNamed#("AXI4Lite_B_Slave_Sig", 0, 4), Tuple4#(Meta#(MetaField#("bresp", 0), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("buser", 1), Conc#(Bit#(user_))), Meta#(MetaField#("bvalid", 2), Conc#(Bool)), Meta#(MetaField#("bready", 3), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Master", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Master", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)))), Meta#(MetaField#("w", 1), Conc#(SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)))), Meta#(MetaField#("b", 2), Conc#(SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)))), Meta#(MetaField#("ar", 3), Conc#(SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_)))), Meta#(MetaField#("r", 4), Conc#(SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Master_Sig", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Master_Sig", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_))), Meta#(MetaField#("w", 1), Conc#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_))), Meta#(MetaField#("b", 2), Conc#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_))), Meta#(MetaField#("ar", 3), Conc#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_))), Meta#(MetaField#("r", 4), Conc#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Master_Xactor#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Master_Xactor", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Master_Xactor", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("slave", 1), Conc#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))), Meta#(MetaField#("masterSig", 2), Conc#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_), Meta#(MetaData#("AXI4Lite_RFlit", "AXI4Lite_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_RFlit", 0, 3), Tuple3#(Meta#(MetaField#("rdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("rresp", 1), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("ruser", 2), Conc#(Bit#(user_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_), Meta#(MetaData#("AXI4Lite_R_Master_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_R_Master_Sig", 0, 2), Tuple2#(Meta#(MetaField#("rflit", 0), Conc#(function Action f(Bool x1, Bit#(data_) x2, AXI4_Common_Types::AXI4_Resp x3, Bit#(user_) x4))), Meta#(MetaField#("rready", 1), Conc#(Bool))))))} {Generic#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_), Meta#(MetaData#("AXI4Lite_R_Slave_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_R_Slave_Sig", 0, 5), Tuple5#(Meta#(MetaField#("rdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("rresp", 1), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("ruser", 2), Conc#(Bit#(user_))), Meta#(MetaField#("rvalid", 3), Conc#(Bool)), Meta#(MetaField#("rready", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Shim#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Shim", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Shim", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("master", 1), Conc#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))), Meta#(MetaField#("slave", 2), Conc#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Shim_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Shim_Sig", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Shim_Sig", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("master", 1), Conc#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))), Meta#(MetaField#("slave", 2), Conc#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Slave", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Slave", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)))), Meta#(MetaField#("w", 1), Conc#(SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)))), Meta#(MetaField#("b", 2), Conc#(SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)))), Meta#(MetaField#("ar", 3), Conc#(SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_)))), Meta#(MetaField#("r", 4), Conc#(SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Slave_Sig", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Slave_Sig", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_))), Meta#(MetaField#("w", 1), Conc#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_))), Meta#(MetaField#("b", 2), Conc#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_))), Meta#(MetaField#("ar", 3), Conc#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_))), Meta#(MetaField#("r", 4), Conc#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_Slave_Xactor#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4Lite_Slave_Xactor", "AXI4Lite_Types", Tuple7#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_Slave_Xactor", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("master", 1), Conc#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))), Meta#(MetaField#("slaveSig", 2), Conc#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_), Meta#(MetaData#("AXI4Lite_WFlit", "AXI4Lite_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_WFlit", 0, 3), Tuple3#(Meta#(MetaField#("wdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("wstrb", 1), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("wuser", 2), Conc#(Bit#(user_)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_), Meta#(MetaData#("AXI4Lite_W_Master_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_W_Master_Sig", 0, 5), Tuple5#(Meta#(MetaField#("wdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("wstrb", 1), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("wuser", 2), Conc#(Bit#(user_))), Meta#(MetaField#("wvalid", 3), Conc#(Bool)), Meta#(MetaField#("wready", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_), Meta#(MetaData#("AXI4Lite_W_Slave_Sig", "AXI4Lite_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Lite_W_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("wflit", 0), Conc#(function Action f(Bool x1, Bit#(data_) x2, Bit#(TDiv#(data_, 8)) x3, Bit#(user_) x4))), Meta#(MetaField#("wready", 1), Conc#(Bool))))))} {Generic#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), Meta#(MetaData#("AXI4Lite_WriteFlit", "AXI4Lite_Types", Tuple4#(NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_)), 1), Meta#(MetaConsNamed#("AXI4Lite_WriteFlit", 0, 2), Tuple2#(Meta#(MetaField#("aw", 0), Conc#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))), Meta#(MetaField#("w", 1), Conc#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)))))))} {Generic#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), Meta#(MetaData#("AXI4Stream_Flit", "AXI4Stream_Types", Tuple4#(NumArg#(id_), NumArg#(data_), NumArg#(dest_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Stream_Flit", 0, 7), Tuple7#(Meta#(MetaField#("tdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("tstrb", 1), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("tkeep", 2), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("tlast", 3), Conc#(Bool)), Meta#(MetaField#("tid", 4), Conc#(Bit#(id_))), Meta#(MetaField#("tdest", 5), Conc#(Bit#(dest_))), Meta#(MetaField#("tuser", 6), Conc#(Bit#(user_)))))))} {Generic#(AXI4Stream_Types::AXI4Stream_Master_Sig#(id_, data_, dest_, user_), Meta#(MetaData#("AXI4Stream_Master_Sig", "AXI4Stream_Types", Tuple4#(NumArg#(id_), NumArg#(data_), NumArg#(dest_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Stream_Master_Sig", 0, 9), Tuple9#(Meta#(MetaField#("tdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("tstrb", 1), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("tkeep", 2), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("tlast", 3), Conc#(Bool)), Meta#(MetaField#("tid", 4), Conc#(Bit#(id_))), Meta#(MetaField#("tdest", 5), Conc#(Bit#(dest_))), Meta#(MetaField#("tuser", 6), Conc#(Bit#(user_))), Meta#(MetaField#("tvalid", 7), Conc#(Bool)), Meta#(MetaField#("tready", 8), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4Stream_Types::AXI4Stream_Shim#(id_, data_, dest_, user_), Meta#(MetaData#("AXI4Stream_Shim", "AXI4Stream_Types", Tuple4#(NumArg#(id_), NumArg#(data_), NumArg#(dest_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Stream_Shim", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("master", 1), Conc#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))), Meta#(MetaField#("slave", 2), Conc#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_)))))))} {Generic#(AXI4Stream_Types::AXI4Stream_Slave_Sig#(id_, data_, dest_, user_), Meta#(MetaData#("AXI4Stream_Slave_Sig", "AXI4Stream_Types", Tuple4#(NumArg#(id_), NumArg#(data_), NumArg#(dest_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4Stream_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("tflit", 0), Conc#(function Action f(Bool x1, Bit#(data_) x2, Bit#(TDiv#(data_, 8)) x3, Bit#(TDiv#(data_, 8)) x4, Bool x5, Bit#(id_) x6, Bit#(dest_) x7, Bit#(user_) x8))), Meta#(MetaField#("tready", 1), Conc#(Bool))))))} {Generic#(AXI4_Common_Types::AXI4_Burst, Meta#(MetaData#("AXI4_Burst", "AXI4_Common_Types", void, 4), Either#(Meta#(MetaConsAnon#("FIXED", 0, 0), void), Either#(Meta#(MetaConsAnon#("INCR", 1, 0), void), Either#(Meta#(MetaConsAnon#("WRAP", 2, 0), void), Meta#(MetaConsAnon#("Res", 3, 0), void))))))} {Generic#(AXI4_Common_Types::AXI4_Lock, Meta#(MetaData#("AXI4_Lock", "AXI4_Common_Types", void, 2), Either#(Meta#(MetaConsAnon#("NORMAL", 0, 0), void), Meta#(MetaConsAnon#("EXCLUSIVE", 1, 0), void))))} {Generic#(AXI4_Common_Types::AXI4_Prot_0, Meta#(MetaData#("AXI4_Prot_0", "AXI4_Common_Types", void, 2), Either#(Meta#(MetaConsAnon#("UNPRIV", 0, 0), void), Meta#(MetaConsAnon#("PRIV", 1, 0), void))))} {Generic#(AXI4_Common_Types::AXI4_Prot_1, Meta#(MetaData#("AXI4_Prot_1", "AXI4_Common_Types", void, 2), Either#(Meta#(MetaConsAnon#("SECURE", 0, 0), void), Meta#(MetaConsAnon#("NONSECURE", 1, 0), void))))} {Generic#(AXI4_Common_Types::AXI4_Prot_2, Meta#(MetaData#("AXI4_Prot_2", "AXI4_Common_Types", void, 2), Either#(Meta#(MetaConsAnon#("DATA", 0, 0), void), Meta#(MetaConsAnon#("INST", 1, 0), void))))} {Generic#(AXI4_Common_Types::AXI4_Resp, Meta#(MetaData#("AXI4_Resp", "AXI4_Common_Types", void, 4), Either#(Meta#(MetaConsAnon#("OKAY", 0, 0), void), Either#(Meta#(MetaConsAnon#("EXOKAY", 1, 0), void), Either#(Meta#(MetaConsAnon#("SLVERR", 2, 0), void), Meta#(MetaConsAnon#("DECERR", 3, 0), void))))))} {Generic#(AXI4_Common_Types::AXI4_Size, Meta#(MetaData#("AXI4_Size", "AXI4_Common_Types", void, 1), Meta#(MetaConsNamed#("AXI4_Size", 0, 1), Meta#(MetaField#("val", 0), Conc#(Bit#(3))))))} {Generic#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_), Meta#(MetaData#("AXI4_ARFlit", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_ARFlit", 0, 11), Tuple11#(Meta#(MetaField#("arid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("araddr", 1), Conc#(Bit#(addr_))), Meta#(MetaField#("arlen", 2), Conc#(AXI4_Common_Types::AXI4_Len)), Meta#(MetaField#("arsize", 3), Conc#(AXI4_Common_Types::AXI4_Size)), Meta#(MetaField#("arburst", 4), Conc#(AXI4_Common_Types::AXI4_Burst)), Meta#(MetaField#("arlock", 5), Conc#(AXI4_Common_Types::AXI4_Lock)), Meta#(MetaField#("arcache", 6), Conc#(AXI4_Common_Types::AXI4_Cache)), Meta#(MetaField#("arprot", 7), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("arqos", 8), Conc#(AXI4_Common_Types::AXI4_QoS)), Meta#(MetaField#("arregion", 9), Conc#(AXI4_Common_Types::AXI4_Region)), Meta#(MetaField#("aruser", 10), Conc#(Bit#(user_)))))))} {Generic#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_), Meta#(MetaData#("AXI4_AR_Master_Sig", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_AR_Master_Sig", 0, 13), Tuple13#(Meta#(MetaField#("arid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("araddr", 1), Conc#(Bit#(addr_))), Meta#(MetaField#("arlen", 2), Conc#(AXI4_Common_Types::AXI4_Len)), Meta#(MetaField#("arsize", 3), Conc#(AXI4_Common_Types::AXI4_Size)), Meta#(MetaField#("arburst", 4), Conc#(AXI4_Common_Types::AXI4_Burst)), Meta#(MetaField#("arlock", 5), Conc#(AXI4_Common_Types::AXI4_Lock)), Meta#(MetaField#("arcache", 6), Conc#(AXI4_Common_Types::AXI4_Cache)), Meta#(MetaField#("arprot", 7), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("arqos", 8), Conc#(AXI4_Common_Types::AXI4_QoS)), Meta#(MetaField#("arregion", 9), Conc#(AXI4_Common_Types::AXI4_Region)), Meta#(MetaField#("aruser", 10), Conc#(Bit#(user_))), Meta#(MetaField#("arvalid", 11), Conc#(Bool)), Meta#(MetaField#("arready", 12), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_), Meta#(MetaData#("AXI4_AR_Slave_Sig", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_AR_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("arflit", 0), Conc#(function Action f(Bool x1, Bit#(id_) x2, Bit#(addr_) x3, AXI4_Common_Types::AXI4_Len x4, AXI4_Common_Types::AXI4_Size x5, AXI4_Common_Types::AXI4_Burst x6, AXI4_Common_Types::AXI4_Lock x7, AXI4_Common_Types::AXI4_Cache x8, AXI4_Common_Types::AXI4_Prot x9, AXI4_Common_Types::AXI4_QoS x10, AXI4_Common_Types::AXI4_Region x11, Bit#(user_) x12))), Meta#(MetaField#("arready", 1), Conc#(Bool))))))} {Generic#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_), Meta#(MetaData#("AXI4_AWFlit", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_AWFlit", 0, 11), Tuple11#(Meta#(MetaField#("awid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("awaddr", 1), Conc#(Bit#(addr_))), Meta#(MetaField#("awlen", 2), Conc#(AXI4_Common_Types::AXI4_Len)), Meta#(MetaField#("awsize", 3), Conc#(AXI4_Common_Types::AXI4_Size)), Meta#(MetaField#("awburst", 4), Conc#(AXI4_Common_Types::AXI4_Burst)), Meta#(MetaField#("awlock", 5), Conc#(AXI4_Common_Types::AXI4_Lock)), Meta#(MetaField#("awcache", 6), Conc#(AXI4_Common_Types::AXI4_Cache)), Meta#(MetaField#("awprot", 7), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("awqos", 8), Conc#(AXI4_Common_Types::AXI4_QoS)), Meta#(MetaField#("awregion", 9), Conc#(AXI4_Common_Types::AXI4_Region)), Meta#(MetaField#("awuser", 10), Conc#(Bit#(user_)))))))} {Generic#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_), Meta#(MetaData#("AXI4_AW_Master_Sig", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_AW_Master_Sig", 0, 13), Tuple13#(Meta#(MetaField#("awid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("awaddr", 1), Conc#(Bit#(addr_))), Meta#(MetaField#("awlen", 2), Conc#(AXI4_Common_Types::AXI4_Len)), Meta#(MetaField#("awsize", 3), Conc#(AXI4_Common_Types::AXI4_Size)), Meta#(MetaField#("awburst", 4), Conc#(AXI4_Common_Types::AXI4_Burst)), Meta#(MetaField#("awlock", 5), Conc#(AXI4_Common_Types::AXI4_Lock)), Meta#(MetaField#("awcache", 6), Conc#(AXI4_Common_Types::AXI4_Cache)), Meta#(MetaField#("awprot", 7), Conc#(AXI4_Common_Types::AXI4_Prot)), Meta#(MetaField#("awqos", 8), Conc#(AXI4_Common_Types::AXI4_QoS)), Meta#(MetaField#("awregion", 9), Conc#(AXI4_Common_Types::AXI4_Region)), Meta#(MetaField#("awuser", 10), Conc#(Bit#(user_))), Meta#(MetaField#("awvalid", 11), Conc#(Bool)), Meta#(MetaField#("awready", 12), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_), Meta#(MetaData#("AXI4_AW_Slave_Sig", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_AW_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("awflit", 0), Conc#(function Action f(Bool x1, Bit#(id_) x2, Bit#(addr_) x3, AXI4_Common_Types::AXI4_Len x4, AXI4_Common_Types::AXI4_Size x5, AXI4_Common_Types::AXI4_Burst x6, AXI4_Common_Types::AXI4_Lock x7, AXI4_Common_Types::AXI4_Cache x8, AXI4_Common_Types::AXI4_Prot x9, AXI4_Common_Types::AXI4_QoS x10, AXI4_Common_Types::AXI4_Region x11, Bit#(user_) x12))), Meta#(MetaField#("awready", 1), Conc#(Bool))))))} {Generic#(AXI4_Types::AXI4_BFlit#(id_, user_), Meta#(MetaData#("AXI4_BFlit", "AXI4_Types", Tuple2#(NumArg#(id_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_BFlit", 0, 3), Tuple3#(Meta#(MetaField#("bid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("bresp", 1), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("buser", 2), Conc#(Bit#(user_)))))))} {Generic#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_), Meta#(MetaData#("AXI4_B_Master_Sig", "AXI4_Types", Tuple2#(NumArg#(id_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_B_Master_Sig", 0, 2), Tuple2#(Meta#(MetaField#("bflit", 0), Conc#(function Action f(Bool x1, Bit#(id_) x2, AXI4_Common_Types::AXI4_Resp x3, Bit#(user_) x4))), Meta#(MetaField#("bready", 1), Conc#(Bool))))))} {Generic#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_), Meta#(MetaData#("AXI4_B_Slave_Sig", "AXI4_Types", Tuple2#(NumArg#(id_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_B_Slave_Sig", 0, 5), Tuple5#(Meta#(MetaField#("bid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("bresp", 1), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("buser", 2), Conc#(Bit#(user_))), Meta#(MetaField#("bvalid", 3), Conc#(Bool)), Meta#(MetaField#("bready", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4_Types::AXI4_Events, Meta#(MetaData#("AXI4_Events", "AXI4_Types", void, 1), Meta#(MetaConsNamed#("AXI4_Events", 0, 7), Tuple7#(Meta#(MetaField#("evt_AW_FLIT", 0), Conc#(Bool)), Meta#(MetaField#("evt_W_FLIT", 1), Conc#(Bool)), Meta#(MetaField#("evt_W_FLIT_FINAL", 2), Conc#(Bool)), Meta#(MetaField#("evt_B_FLIT", 3), Conc#(Bool)), Meta#(MetaField#("evt_AR_FLIT", 4), Conc#(Bool)), Meta#(MetaField#("evt_R_FLIT", 5), Conc#(Bool)), Meta#(MetaField#("evt_R_FLIT_FINAL", 6), Conc#(Bool))))))} {Generic#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4_Master", "AXI4_Types", Tuple8#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4_Master", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_)))), Meta#(MetaField#("w", 1), Conc#(SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_)))), Meta#(MetaField#("b", 2), Conc#(SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_)))), Meta#(MetaField#("ar", 3), Conc#(SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_)))), Meta#(MetaField#("r", 4), Conc#(SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))))))))} {Generic#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4_Master_Sig", "AXI4_Types", Tuple8#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4_Master_Sig", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_))), Meta#(MetaField#("w", 1), Conc#(AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_))), Meta#(MetaField#("b", 2), Conc#(AXI4_Types::AXI4_B_Master_Sig#(id_, buser_))), Meta#(MetaField#("ar", 3), Conc#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_))), Meta#(MetaField#("r", 4), Conc#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)))))))} {Generic#(AXI4_Types::AXI4_RFlit#(id_, data_, user_), Meta#(MetaData#("AXI4_RFlit", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_RFlit", 0, 5), Tuple5#(Meta#(MetaField#("rid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("rdata", 1), Conc#(Bit#(data_))), Meta#(MetaField#("rresp", 2), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("rlast", 3), Conc#(Bool)), Meta#(MetaField#("ruser", 4), Conc#(Bit#(user_)))))))} {Generic#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_), Meta#(MetaData#("AXI4_R_Master_Sig", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_R_Master_Sig", 0, 2), Tuple2#(Meta#(MetaField#("rflit", 0), Conc#(function Action f(Bool x1, Bit#(id_) x2, Bit#(data_) x3, AXI4_Common_Types::AXI4_Resp x4, Bool x5, Bit#(user_) x6))), Meta#(MetaField#("rready", 1), Conc#(Bool))))))} {Generic#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_), Meta#(MetaData#("AXI4_R_Slave_Sig", "AXI4_Types", Tuple3#(NumArg#(id_), NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_R_Slave_Sig", 0, 7), Tuple7#(Meta#(MetaField#("rid", 0), Conc#(Bit#(id_))), Meta#(MetaField#("rdata", 1), Conc#(Bit#(data_))), Meta#(MetaField#("rresp", 2), Conc#(AXI4_Common_Types::AXI4_Resp)), Meta#(MetaField#("rlast", 3), Conc#(Bool)), Meta#(MetaField#("ruser", 4), Conc#(Bit#(user_))), Meta#(MetaField#("rvalid", 5), Conc#(Bool)), Meta#(MetaField#("rready", 6), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4_Types::AXI4_Shim#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4_Shim", "AXI4_Types", Tuple8#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4_Shim", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("master", 1), Conc#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))), Meta#(MetaField#("slave", 2), Conc#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)))))))} {Generic#(AXI4_Types::AXI4_Shim_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4_Shim_Sig", "AXI4_Types", Tuple8#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4_Shim_Sig", 0, 3), Tuple3#(Meta#(MetaField#("clear", 0), Conc#(Action)), Meta#(MetaField#("master", 1), Conc#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))), Meta#(MetaField#("slave", 2), Conc#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)))))))} {Generic#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4_Slave", "AXI4_Types", Tuple8#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4_Slave", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_)))), Meta#(MetaField#("w", 1), Conc#(SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_)))), Meta#(MetaField#("b", 2), Conc#(SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_)))), Meta#(MetaField#("ar", 3), Conc#(SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_)))), Meta#(MetaField#("r", 4), Conc#(SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))))))))} {Generic#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), Meta#(MetaData#("AXI4_Slave_Sig", "AXI4_Types", Tuple8#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_), NumArg#(buser_), NumArg#(aruser_), NumArg#(ruser_)), 1), Meta#(MetaConsNamed#("AXI4_Slave_Sig", 0, 5), Tuple5#(Meta#(MetaField#("aw", 0), Conc#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_))), Meta#(MetaField#("w", 1), Conc#(AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_))), Meta#(MetaField#("b", 2), Conc#(AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_))), Meta#(MetaField#("ar", 3), Conc#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_))), Meta#(MetaField#("r", 4), Conc#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)))))))} {Generic#(AXI4_Types::AXI4_WFlit#(data_, user_), Meta#(MetaData#("AXI4_WFlit", "AXI4_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_WFlit", 0, 4), Tuple4#(Meta#(MetaField#("wdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("wstrb", 1), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("wlast", 2), Conc#(Bool)), Meta#(MetaField#("wuser", 3), Conc#(Bit#(user_)))))))} {Generic#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_), Meta#(MetaData#("AXI4_W_Master_Sig", "AXI4_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_W_Master_Sig", 0, 6), Tuple6#(Meta#(MetaField#("wdata", 0), Conc#(Bit#(data_))), Meta#(MetaField#("wstrb", 1), Conc#(Bit#(TDiv#(data_, 8)))), Meta#(MetaField#("wlast", 2), Conc#(Bool)), Meta#(MetaField#("wuser", 3), Conc#(Bit#(user_))), Meta#(MetaField#("wvalid", 4), Conc#(Bool)), Meta#(MetaField#("wready", 5), Conc#(function Action f(Bool x1)))))))} {Generic#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_), Meta#(MetaData#("AXI4_W_Slave_Sig", "AXI4_Types", Tuple2#(NumArg#(data_), NumArg#(user_)), 1), Meta#(MetaConsNamed#("AXI4_W_Slave_Sig", 0, 2), Tuple2#(Meta#(MetaField#("wflit", 0), Conc#(function Action f(Bool x1, Bit#(data_) x2, Bit#(TDiv#(data_, 8)) x3, Bool x4, Bit#(user_) x5))), Meta#(MetaField#("wready", 1), Conc#(Bool))))))} {Generic#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), Meta#(MetaData#("AXI4_WriteFlit", "AXI4_Types", Tuple5#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(awuser_), NumArg#(wuser_)), 2), Either#(Meta#(MetaConsAnon#("FirstFlit", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))))), Meta#(MetaConsAnon#("OtherFlit", 1, 1), Meta#(MetaField#("_1", 0), Conc#(AXI4_Types::AXI4_WFlit#(data_, wuser_)))))))} {Generic#(AXI4_Utils::ReadSplitOption, Meta#(MetaData#("ReadSplitOption", "AXI4_Utils", void, 3), Either#(Meta#(MetaConsAnon#("COMBINE", 0, 0), void), Either#(Meta#(MetaConsAnon#("PAD_FIRST", 1, 0), void), Meta#(MetaConsAnon#("PAD_LAST", 2, 0), void)))))} {Generic#(AXI4_Utils::SerialiserState, Meta#(MetaData#("SerialiserState", "AXI4_Utils", void, 3), Either#(Meta#(MetaConsAnon#("IDLE", 0, 0), void), Either#(Meta#(MetaConsAnon#("BURST_WRITE", 1, 0), void), Meta#(MetaConsAnon#("WAITING", 2, 0), void)))))} {Generic#(AXI_Helpers::ReqFlit#(id_, addr_, data_, tag_), Meta#(MetaData#("ReqFlit", "AXI_Helpers", Tuple4#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(tag_)), 2), Either#(Meta#(MetaConsAnon#("Write", 0, 1), Meta#(MetaField#("_1", 0), Conc#(AXI_Helpers::WriteReqFlit#(id_, addr_, data_, tag_)))), Meta#(MetaConsAnon#("Read", 1, 1), Meta#(MetaField#("_1", 0), Conc#(AXI4_Types::AXI4_ARFlit#(id_, addr_, 0)))))))} {Generic#(AXI_Helpers::RspFlit#(id_, data_, tag_), Meta#(MetaData#("RspFlit", "AXI_Helpers", Tuple3#(NumArg#(id_), NumArg#(data_), NumArg#(tag_)), 2), Either#(Meta#(MetaConsAnon#("Write", 0, 1), Meta#(MetaField#("_1", 0), Conc#(AXI4_Types::AXI4_BFlit#(id_, 0)))), Meta#(MetaConsAnon#("Read", 1, 1), Meta#(MetaField#("_1", 0), Conc#(AXI4_Types::AXI4_RFlit#(id_, data_, tag_)))))))} {Generic#(AXI_Helpers::WriteReqFlit#(id_, addr_, data_, tag_), Meta#(MetaData#("WriteReqFlit", "AXI_Helpers", Tuple4#(NumArg#(id_), NumArg#(addr_), NumArg#(data_), NumArg#(tag_)), 1), Meta#(MetaConsNamed#("WriteReqFlit", 0, 2), Tuple2#(Meta#(MetaField#("aw", 0), Conc#(AXI4_Types::AXI4_AWFlit#(id_, addr_, 0))), Meta#(MetaField#("w", 1), Conc#(AXI4_Types::AXI4_WFlit#(data_, tag_)))))))} {Generic#(ActionSeq::ActionSeq, Meta#(MetaData#("ActionSeq", "ActionSeq", void, 1), Meta#(MetaConsNamed#("ActionSeq", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(Action)), Meta#(MetaField#("done", 1), Conc#(Bool)), Meta#(MetaField#("checkDone", 2), Conc#(Action))))))} {Generic#(ActionSeq::ActionSeqN#(n), Meta#(MetaData#("ActionSeqN", "ActionSeq", NumArg#(n), 1), Meta#(MetaConsNamed#("ActionSeqN", 0, 1), Meta#(MetaField#("_actionSeq", 0), Conc#(ActionSeq::ActionSeq)))))} {Generic#(ActionValue#(a), Meta#(MetaData#("ActionValue", "Prelude", StarArg#(a), 1), Meta#(MetaConsAnon#("ActionValue", 0, 1), Meta#(MetaField#("_1", 0), Conc#(function AVStruct#(a) f(ActionWorld x1))))))} {Generic#(ActionValue_#(n), Meta#(MetaData#("ActionValue_", "Prelude", NumArg#(n), 1), Meta#(MetaConsNamed#("ActionValue_", 0, 2), Tuple2#(Meta#(MetaField#("avValue_", 0), Conc#(Bit#(n))), Meta#(MetaField#("avAction_", 1), Conc#(PrimAction))))))} {Generic#(ActionWorld, Meta#(MetaData#("ActionWorld", "Prelude", void, 1), Meta#(MetaConsAnon#("ActionWorld", 0, 0), void)))} {Generic#(AlignedFIFOs::AlignedFIFO#(a), Meta#(MetaData#("AlignedFIFO", "AlignedFIFOs", StarArg#(a), 1), Meta#(MetaConsNamed#("AlignedFIFO", 0, 9), Tuple9#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("first", 1), Conc#(a)), Meta#(MetaField#("deq", 2), Conc#(Action)), Meta#(MetaField#("dNotFull", 3), Conc#(Bool)), Meta#(MetaField#("dNotEmpty", 4), Conc#(Bool)), Meta#(MetaField#("sNotFull", 5), Conc#(Bool)), Meta#(MetaField#("sNotEmpty", 6), Conc#(Bool)), Meta#(MetaField#("dClear", 7), Conc#(Action)), Meta#(MetaField#("sClear", 8), Conc#(Action))))))} {Generic#(AlignedFIFOs::RawReg#(n), Meta#(MetaData#("RawReg", "AlignedFIFOs", NumArg#(n), 1), Meta#(MetaConsNamed#("RawReg", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(n)))))))} {Generic#(AlignedFIFOs::Store#(i, a, n), Meta#(MetaData#("Store", "AlignedFIFOs", Tuple3#(StarArg#(i), StarArg#(a), NumArg#(n)), 1), Meta#(MetaConsNamed#("Store", 0, 3), Tuple3#(Meta#(MetaField#("write", 0), Conc#(function Action f(i x1, a x2))), Meta#(MetaField#("prefetch", 1), Conc#(function Action f(i x1))), Meta#(MetaField#("read", 2), Conc#(function a f(i x1)))))))} {Generic#(AlignedFIFOs::_AlignedFIFOs.RawReg60#(_n0, _n1), Meta#(MetaData#("_AlignedFIFOs.RawReg60", "AlignedFIFOs", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_AlignedFIFOs.RawReg60", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Arbiter::ArbiterClient_IFC, Meta#(MetaData#("ArbiterClient_IFC", "Arbiter", void, 1), Meta#(MetaConsNamed#("ArbiterClient_IFC", 0, 3), Tuple3#(Meta#(MetaField#("request", 0), Conc#(Action)), Meta#(MetaField#("lock", 1), Conc#(Action)), Meta#(MetaField#("grant", 2), Conc#(Bool))))))} {Generic#(Arbiter::ArbiterRequest_IFC, Meta#(MetaData#("ArbiterRequest_IFC", "Arbiter", void, 1), Meta#(MetaConsNamed#("ArbiterRequest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("request", 0), Conc#(Bool)), Meta#(MetaField#("lock", 1), Conc#(Bool)), Meta#(MetaField#("grant", 2), Conc#(Action))))))} {Generic#(Arbiter::Arbiter_IFC#(count), Meta#(MetaData#("Arbiter_IFC", "Arbiter", NumArg#(count), 1), Meta#(MetaConsNamed#("Arbiter_IFC", 0, 2), Tuple2#(Meta#(MetaField#("clients", 0), Conc#(Vector::Vector#(count, Arbiter::ArbiterClient_IFC))), Meta#(MetaField#("grant_id", 1), Conc#(Bit#(TLog#(count))))))))} {Generic#(Arbitrate::Arbiter#(ports, request, response), Meta#(MetaData#("Arbiter", "Arbitrate", Tuple3#(NumArg#(ports), StarArg#(request), StarArg#(response)), 1), Meta#(MetaConsNamed#("Arbiter", 0, 2), Tuple2#(Meta#(MetaField#("users", 0), Conc#(Vector::Vector#(ports, ClientServer::Server#(request, response)))), Meta#(MetaField#("master", 1), Conc#(ClientServer::Client#(request, response)))))))} {Generic#(Arbitrate::Arbitrate#(size), Meta#(MetaData#("Arbitrate", "Arbitrate", NumArg#(size), 1), Meta#(MetaConsNamed#("Arbitrate", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(function Action f(Vector::Vector#(size, Bool) x1))), Meta#(MetaField#("grant", 1), Conc#(Vector::Vector#(size, Bool)))))))} {Generic#(Array#(_v100), ConcPrim#(Array#(_v100)))} {Generic#(Attributes__, ConcPrim#(Attributes__))} {Generic#(BGetPut::BClientS#(sa, sb), Meta#(MetaData#("BClientS", "BGetPut", Tuple2#(NumArg#(sa), NumArg#(sb)), 1), Meta#(MetaConsNamed#("BClientS", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(BGetPut::BGetS#(sa))), Meta#(MetaField#("response", 1), Conc#(BGetPut::BPutS#(sb)))))))} {Generic#(BGetPut::BGetS#(sa), Meta#(MetaData#("BGetS", "BGetPut", NumArg#(sa), 1), Meta#(MetaConsNamed#("BGetS", 0, 3), Tuple3#(Meta#(MetaField#("gvalue", 0), Conc#(Bit#(sa))), Meta#(MetaField#("gpresent", 1), Conc#(Bool)), Meta#(MetaField#("gcredit", 2), Conc#(function Action f(Bool x1)))))))} {Generic#(BGetPut::BPutS#(sa), Meta#(MetaData#("BPutS", "BGetPut", NumArg#(sa), 1), Meta#(MetaConsNamed#("BPutS", 0, 3), Tuple3#(Meta#(MetaField#("pvalue", 0), Conc#(function Action f(Bit#(sa) x1))), Meta#(MetaField#("ppresent", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("pcredit", 2), Conc#(Bool))))))} {Generic#(BGetPut::BServerS#(sa, sb), Meta#(MetaData#("BServerS", "BGetPut", Tuple2#(NumArg#(sa), NumArg#(sb)), 1), Meta#(MetaConsNamed#("BServerS", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(BGetPut::BPutS#(sa))), Meta#(MetaField#("response", 1), Conc#(BGetPut::BGetS#(sb)))))))} {Generic#(BRAM::BRAM1Port#(addr, data), Meta#(MetaData#("BRAM1Port", "BRAM", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM1Port", 0, 2), Tuple2#(Meta#(MetaField#("portA", 0), Conc#(BRAM::BRAMServer#(addr, data))), Meta#(MetaField#("portAClear", 1), Conc#(Action))))))} {Generic#(BRAM::BRAM1PortBE#(addr, data, n), Meta#(MetaData#("BRAM1PortBE", "BRAM", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM1PortBE", 0, 2), Tuple2#(Meta#(MetaField#("portA", 0), Conc#(BRAM::BRAMServerBE#(addr, data, n))), Meta#(MetaField#("portAClear", 1), Conc#(Action))))))} {Generic#(BRAM::BRAM2Port#(addr, data), Meta#(MetaData#("BRAM2Port", "BRAM", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM2Port", 0, 4), Tuple4#(Meta#(MetaField#("portA", 0), Conc#(BRAM::BRAMServer#(addr, data))), Meta#(MetaField#("portB", 1), Conc#(BRAM::BRAMServer#(addr, data))), Meta#(MetaField#("portAClear", 2), Conc#(Action)), Meta#(MetaField#("portBClear", 3), Conc#(Action))))))} {Generic#(BRAM::BRAM2PortBE#(addr, data, n), Meta#(MetaData#("BRAM2PortBE", "BRAM", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM2PortBE", 0, 4), Tuple4#(Meta#(MetaField#("portA", 0), Conc#(BRAM::BRAMServerBE#(addr, data, n))), Meta#(MetaField#("portB", 1), Conc#(BRAM::BRAMServerBE#(addr, data, n))), Meta#(MetaField#("portAClear", 2), Conc#(Action)), Meta#(MetaField#("portBClear", 3), Conc#(Action))))))} {Generic#(BRAM::BRAMRequest#(addr, data), Meta#(MetaData#("BRAMRequest", "BRAM", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAMRequest", 0, 4), Tuple4#(Meta#(MetaField#("write", 0), Conc#(Bool)), Meta#(MetaField#("responseOnWrite", 1), Conc#(Bool)), Meta#(MetaField#("address", 2), Conc#(addr)), Meta#(MetaField#("datain", 3), Conc#(data))))))} {Generic#(BRAM::BRAMRequestBE#(addr, data, n), Meta#(MetaData#("BRAMRequestBE", "BRAM", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAMRequestBE", 0, 4), Tuple4#(Meta#(MetaField#("writeen", 0), Conc#(Bit#(n))), Meta#(MetaField#("responseOnWrite", 1), Conc#(Bool)), Meta#(MetaField#("address", 2), Conc#(addr)), Meta#(MetaField#("datain", 3), Conc#(data))))))} {Generic#(BRAM::BRAM_Configure, Meta#(MetaData#("BRAM_Configure", "BRAM", void, 1), Meta#(MetaConsNamed#("BRAM_Configure", 0, 5), Tuple5#(Meta#(MetaField#("memorySize", 0), Conc#(Integer)), Meta#(MetaField#("latency", 1), Conc#(Integer)), Meta#(MetaField#("loadFormat", 2), Conc#(BRAM::LoadFormat)), Meta#(MetaField#("outFIFODepth", 3), Conc#(Integer)), Meta#(MetaField#("allowWriteResponseBypass", 4), Conc#(Bool))))))} {Generic#(BRAM::LoadFormat, Meta#(MetaData#("LoadFormat", "BRAM", void, 3), Either#(Meta#(MetaConsAnon#("None", 0, 0), void), Either#(Meta#(MetaConsAnon#("Hex", 1, 1), Meta#(MetaField#("_1", 0), Conc#(String))), Meta#(MetaConsAnon#("Binary", 2, 1), Meta#(MetaField#("_1", 0), Conc#(String)))))))} {Generic#(BRAM::ServerWithClear#(req, resp), Meta#(MetaData#("ServerWithClear", "BRAM", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("ServerWithClear", 0, 2), Tuple2#(Meta#(MetaField#("server", 0), Conc#(ClientServer::Server#(req, resp))), Meta#(MetaField#("clear", 1), Conc#(Action))))))} {Generic#(BRAM::SizedReg, Meta#(MetaData#("SizedReg", "BRAM", void, 1), Meta#(MetaConsNamed#("SizedReg", 0, 6), Tuple6#(Meta#(MetaField#("_write", 0), Conc#(function Action f(Integer x1))), Meta#(MetaField#("addA", 1), Conc#(function Action f(Integer x1))), Meta#(MetaField#("addB", 2), Conc#(function Action f(Integer x1))), Meta#(MetaField#("isLessThan", 3), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("isGreaterThan", 4), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("isEqualTo", 5), Conc#(function Bool f(Integer x1)))))))} {Generic#(BRAMCore::BRAM_DUAL_PORT#(addr, data), Meta#(MetaData#("BRAM_DUAL_PORT", "BRAMCore", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM_DUAL_PORT", 0, 2), Tuple2#(Meta#(MetaField#("a", 0), Conc#(BRAMCore::BRAM_PORT#(addr, data))), Meta#(MetaField#("b", 1), Conc#(BRAMCore::BRAM_PORT#(addr, data)))))))} {Generic#(BRAMCore::BRAM_DUAL_PORT_BE#(addr, data, n), Meta#(MetaData#("BRAM_DUAL_PORT_BE", "BRAMCore", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM_DUAL_PORT_BE", 0, 2), Tuple2#(Meta#(MetaField#("a", 0), Conc#(BRAMCore::BRAM_PORT_BE#(addr, data, n))), Meta#(MetaField#("b", 1), Conc#(BRAMCore::BRAM_PORT_BE#(addr, data, n)))))))} {Generic#(BRAMCore::BRAM_PORT#(addr, data), Meta#(MetaData#("BRAM_PORT", "BRAMCore", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM_PORT", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function Action f(Bool x1, addr x2, data x3))), Meta#(MetaField#("read", 1), Conc#(data))))))} {Generic#(BRAMCore::BRAM_PORT_BE#(addr, data, n), Meta#(MetaData#("BRAM_PORT_BE", "BRAMCore", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM_PORT_BE", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function Action f(Bit#(n) x1, addr x2, data x3))), Meta#(MetaField#("read", 1), Conc#(data))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_DUAL_PORT401#(_n0, _n1, _n2), Meta#(MetaData#("_BRAMCore.BRAM_DUAL_PORT401", "BRAMCore", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_DUAL_PORT401", 0, 4), Tuple4#(Meta#(MetaField#("a_put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("a_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("b_put", 2), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("b_read", 3), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_DUAL_PORT527#(_n0, _n1, _n2), Meta#(MetaData#("_BRAMCore.BRAM_DUAL_PORT527", "BRAMCore", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_DUAL_PORT527", 0, 4), Tuple4#(Meta#(MetaField#("a_put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("a_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("b_put", 2), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("b_read", 3), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_DUAL_PORT_BE643#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_BRAMCore.BRAM_DUAL_PORT_BE643", "BRAMCore", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_DUAL_PORT_BE643", 0, 4), Tuple4#(Meta#(MetaField#("a_put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("a_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("b_put", 2), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("b_read", 3), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_DUAL_PORT_BE781#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_BRAMCore.BRAM_DUAL_PORT_BE781", "BRAMCore", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_DUAL_PORT_BE781", 0, 4), Tuple4#(Meta#(MetaField#("a_put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("a_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("b_put", 2), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("b_read", 3), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_PORT149#(_n0, _n1, _n2), Meta#(MetaData#("_BRAMCore.BRAM_PORT149", "BRAMCore", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_PORT149", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_PORT196#(_n0, _n1, _n2), Meta#(MetaData#("_BRAMCore.BRAM_PORT196", "BRAMCore", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_PORT196", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_PORT_BE261#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_BRAMCore.BRAM_PORT_BE261", "BRAMCore", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_PORT_BE261", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAMCore::_BRAMCore.BRAM_PORT_BE319#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_BRAMCore.BRAM_PORT_BE319", "BRAMCore", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_BRAMCore.BRAM_PORT_BE319", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAMFIFO::IBRAMFIFOF#(log2depth, t), Meta#(MetaData#("IBRAMFIFOF", "BRAMFIFO", Tuple2#(NumArg#(log2depth), StarArg#(t)), 1), Meta#(MetaConsNamed#("IBRAMFIFOF", 0, 1), Meta#(MetaField#("fifo", 0), Conc#(FIFOF::FIFOF#(t))))))} {Generic#(BRAMFIFO::ISyncBRAMFIFOFIfc#(log2depth, t), Meta#(MetaData#("ISyncBRAMFIFOFIfc", "BRAMFIFO", Tuple2#(NumArg#(log2depth), StarArg#(t)), 1), Meta#(MetaConsNamed#("ISyncBRAMFIFOFIfc", 0, 1), Meta#(MetaField#("fifo", 0), Conc#(Clocks::SyncFIFOIfc#(t))))))} {Generic#(BRAM_Compat::BRAM#(addr, data), Meta#(MetaData#("BRAM", "BRAM_Compat", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM", 0, 2), Tuple2#(Meta#(MetaField#("portA", 0), Conc#(BRAM_Compat::BRAMServer#(addr, data))), Meta#(MetaField#("portB", 1), Conc#(BRAM_Compat::BRAMServer#(addr, data)))))))} {Generic#(BRAM_Compat::BRAM1Port#(addr, data), Meta#(MetaData#("BRAM1Port", "BRAM_Compat", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM1Port", 0, 1), Meta#(MetaField#("portA", 0), Conc#(BRAM_Compat::BRAMServer#(addr, data))))))} {Generic#(BRAM_Compat::BRAM1PortBE#(addr, data, n), Meta#(MetaData#("BRAM1PortBE", "BRAM_Compat", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM1PortBE", 0, 1), Meta#(MetaField#("portA", 0), Conc#(BRAM_Compat::BRAMServerBE#(addr, data, n))))))} {Generic#(BRAM_Compat::BRAM2Port#(addr, data), Meta#(MetaData#("BRAM2Port", "BRAM_Compat", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM2Port", 0, 2), Tuple2#(Meta#(MetaField#("portA", 0), Conc#(BRAM_Compat::BRAMServer#(addr, data))), Meta#(MetaField#("portB", 1), Conc#(BRAM_Compat::BRAMServer#(addr, data)))))))} {Generic#(BRAM_Compat::BRAM2PortBE#(addr, data, n), Meta#(MetaData#("BRAM2PortBE", "BRAM_Compat", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM2PortBE", 0, 2), Tuple2#(Meta#(MetaField#("portA", 0), Conc#(BRAM_Compat::BRAMServerBE#(addr, data, n))), Meta#(MetaField#("portB", 1), Conc#(BRAM_Compat::BRAMServerBE#(addr, data, n)))))))} {Generic#(BRAM_Compat::BRAMRequest#(addr, data), Meta#(MetaData#("BRAMRequest", "BRAM_Compat", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAMRequest", 0, 3), Tuple3#(Meta#(MetaField#("write", 0), Conc#(Bool)), Meta#(MetaField#("address", 1), Conc#(addr)), Meta#(MetaField#("datain", 2), Conc#(data))))))} {Generic#(BRAM_Compat::BRAMRequestBE#(addr, data, n), Meta#(MetaData#("BRAMRequestBE", "BRAM_Compat", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAMRequestBE", 0, 3), Tuple3#(Meta#(MetaField#("writeen", 0), Conc#(Bit#(n))), Meta#(MetaField#("address", 1), Conc#(addr)), Meta#(MetaField#("datain", 2), Conc#(data))))))} {Generic#(BRAM_Compat::BRAM_BE#(addr, data, n), Meta#(MetaData#("BRAM_BE", "BRAM_Compat", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM_BE", 0, 2), Tuple2#(Meta#(MetaField#("portA", 0), Conc#(BRAM_Compat::BRAMServerBE#(addr, data, n))), Meta#(MetaField#("portB", 1), Conc#(BRAM_Compat::BRAMServerBE#(addr, data, n)))))))} {Generic#(BRAM_Compat::BRAM_DUAL_PORT#(addr, data), Meta#(MetaData#("BRAM_DUAL_PORT", "BRAM_Compat", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM_DUAL_PORT", 0, 2), Tuple2#(Meta#(MetaField#("a", 0), Conc#(BRAM_Compat::BRAM_PORT#(addr, data))), Meta#(MetaField#("b", 1), Conc#(BRAM_Compat::BRAM_PORT#(addr, data)))))))} {Generic#(BRAM_Compat::BRAM_DUAL_PORT_BE#(addr, data, n), Meta#(MetaData#("BRAM_DUAL_PORT_BE", "BRAM_Compat", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM_DUAL_PORT_BE", 0, 2), Tuple2#(Meta#(MetaField#("a", 0), Conc#(BRAM_Compat::BRAM_PORT_BE#(addr, data, n))), Meta#(MetaField#("b", 1), Conc#(BRAM_Compat::BRAM_PORT_BE#(addr, data, n)))))))} {Generic#(BRAM_Compat::BRAM_PORT#(addr, data), Meta#(MetaData#("BRAM_PORT", "BRAM_Compat", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("BRAM_PORT", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function Action f(Bool x1, addr x2, data x3))), Meta#(MetaField#("read", 1), Conc#(data))))))} {Generic#(BRAM_Compat::BRAM_PORT_BE#(addr, data, n), Meta#(MetaData#("BRAM_PORT_BE", "BRAM_Compat", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(n)), 1), Meta#(MetaConsNamed#("BRAM_PORT_BE", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function Action f(Bit#(n) x1, addr x2, data x3))), Meta#(MetaField#("read", 1), Conc#(data))))))} {Generic#(BRAM_Compat::_BRAM_Compat.BRAM_DUAL_PORT288#(_n0, _n1, _n2), Meta#(MetaData#("_BRAM_Compat.BRAM_DUAL_PORT288", "BRAM_Compat", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAM_Compat.BRAM_DUAL_PORT288", 0, 4), Tuple4#(Meta#(MetaField#("a_put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("a_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("b_put", 2), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("b_read", 3), Conc#(Bit#(_n0)))))))} {Generic#(BRAM_Compat::_BRAM_Compat.BRAM_DUAL_PORT324#(_n0, _n1, _n2), Meta#(MetaData#("_BRAM_Compat.BRAM_DUAL_PORT324", "BRAM_Compat", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAM_Compat.BRAM_DUAL_PORT324", 0, 4), Tuple4#(Meta#(MetaField#("a_put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("a_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("b_put", 2), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("b_read", 3), Conc#(Bit#(_n0)))))))} {Generic#(BRAM_Compat::_BRAM_Compat.BRAM_PORT881#(_n0, _n1, _n2), Meta#(MetaData#("_BRAM_Compat.BRAM_PORT881", "BRAM_Compat", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAM_Compat.BRAM_PORT881", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAM_Compat::_BRAM_Compat.BRAM_PORT903#(_n0, _n1, _n2), Meta#(MetaData#("_BRAM_Compat.BRAM_PORT903", "BRAM_Compat", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_BRAM_Compat.BRAM_PORT903", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n2) f(Bit#(1) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAM_Compat::_BRAM_Compat.BRAM_PORT_BE1147#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_BRAM_Compat.BRAM_PORT_BE1147", "BRAM_Compat", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_BRAM_Compat.BRAM_PORT_BE1147", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(BRAM_Compat::_BRAM_Compat.BRAM_PORT_BE1178#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_BRAM_Compat.BRAM_PORT_BE1178", "BRAM_Compat", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_BRAM_Compat.BRAM_PORT_BE1178", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Bag::Bag#(numElems, keyType, datType), Meta#(MetaData#("Bag", "Bag", Tuple3#(NumArg#(numElems), StarArg#(keyType), StarArg#(datType)), 1), Meta#(MetaConsNamed#("Bag", 0, 11), Tuple11#(Meta#(MetaField#("isMember", 0), Conc#(function VnD::VnD#(datType) f(keyType x1))), Meta#(MetaField#("dataMatch", 1), Conc#(function Bool f(datType x1))), Meta#(MetaField#("insert", 2), Conc#(function Action f(keyType x1, datType x2))), Meta#(MetaField#("update", 3), Conc#(function Action f(keyType x1, datType x2))), Meta#(MetaField#("full", 4), Conc#(Bool)), Meta#(MetaField#("nextFull", 5), Conc#(Bool)), Meta#(MetaField#("empty", 6), Conc#(Bool)), Meta#(MetaField#("remove", 7), Conc#(function Action f(keyType x1))), Meta#(MetaField#("nextKey", 8), Conc#(VnD::VnD#(keyType))), Meta#(MetaField#("nextData", 9), Conc#(VnD::VnD#(datType))), Meta#(MetaField#("iterateNext", 10), Conc#(Action))))))} {Generic#(Bag::Entry#(keyType, datType), Meta#(MetaData#("Entry", "Bag", Tuple2#(StarArg#(keyType), StarArg#(datType)), 1), Meta#(MetaConsNamed#("Entry", 0, 2), Tuple2#(Meta#(MetaField#("key", 0), Conc#(keyType)), Meta#(MetaField#("dat", 1), Conc#(datType))))))} {Generic#(Bag::FFBag#(numElems, keyType, datType, depth), Meta#(MetaData#("FFBag", "Bag", Tuple4#(NumArg#(numElems), StarArg#(keyType), StarArg#(datType), NumArg#(depth)), 1), Meta#(MetaConsNamed#("FFBag", 0, 4), Tuple4#(Meta#(MetaField#("enq", 0), Conc#(function Action f(keyType x1, datType x2))), Meta#(MetaField#("first", 1), Conc#(function VnD::VnD#(datType) f(keyType x1))), Meta#(MetaField#("deq", 2), Conc#(function Action f(keyType x1))), Meta#(MetaField#("full", 3), Conc#(Bool))))))} {Generic#(Bit#(_v100), ConcPrim#(Bit#(_v100)))} {Generic#(Bool, Meta#(MetaData#("Bool", "Prelude", void, 2), Either#(Meta#(MetaConsAnon#("False", 0, 0), void), Meta#(MetaConsAnon#("True", 1, 0), void))))} {Generic#(Branch_Predictor::BTB_Entry, Meta#(MetaData#("BTB_Entry", "Branch_Predictor", void, 1), Meta#(MetaConsNamed#("BTB_Entry", 0, 3), Tuple3#(Meta#(MetaField#("valid", 0), Conc#(Bool)), Meta#(MetaField#("pc_tag", 1), Conc#(Branch_Predictor::BTB_Tag)), Meta#(MetaField#("predicted_pc", 2), Conc#(Branch_Predictor::Word_Addr))))))} {Generic#(Branch_Predictor::Branch_Predictor_IFC, Meta#(MetaData#("Branch_Predictor_IFC", "Branch_Predictor", void, 1), Meta#(MetaConsNamed#("Branch_Predictor_IFC", 0, 4), Tuple4#(Meta#(MetaField#("reset", 0), Conc#(Action)), Meta#(MetaField#("predict_req", 1), Conc#(function Action f(ISA_Decls::WordXL x1))), Meta#(MetaField#("predict_rsp", 2), Conc#(function ISA_Decls::WordXL f(Bool x1, ISA_Decls::Instr x2))), Meta#(MetaField#("bp_train", 3), Conc#(function Action f(ISA_Decls::WordXL x1, Bool x2, ISA_Decls::Instr x3, CPU_Globals::CF_Info x4)))))))} {Generic#(BufferMode, Meta#(MetaData#("BufferMode", "Prelude", void, 3), Either#(Meta#(MetaConsAnon#("NoBuffering", 0, 0), void), Either#(Meta#(MetaConsAnon#("LineBuffering", 1, 0), void), Meta#(MetaConsAnon#("BlockBuffering", 2, 1), Meta#(MetaField#("_1", 0), Conc#(Maybe#(Integer))))))))} {Generic#(BusDefines::BusReceiver#(a), Meta#(MetaData#("BusReceiver", "BusDefines", StarArg#(a), 1), Meta#(MetaConsNamed#("BusReceiver", 0, 2), Tuple2#(Meta#(MetaField#("in", 0), Conc#(BusDefines::BusRecv#(a))), Meta#(MetaField#("out", 1), Conc#(FIFO::FIFO#(a)))))))} {Generic#(BusDefines::BusRecv#(a), Meta#(MetaData#("BusRecv", "BusDefines", StarArg#(a), 1), Meta#(MetaConsNamed#("BusRecv", 0, 3), Tuple3#(Meta#(MetaField#("data", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("valid", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("ready", 2), Conc#(Bool))))))} {Generic#(BusDefines::BusSend#(a), Meta#(MetaData#("BusSend", "BusDefines", StarArg#(a), 1), Meta#(MetaConsNamed#("BusSend", 0, 3), Tuple3#(Meta#(MetaField#("data", 0), Conc#(a)), Meta#(MetaField#("valid", 1), Conc#(Bool)), Meta#(MetaField#("ready", 2), Conc#(function Action f(Bool x1)))))))} {Generic#(BusDefines::BusSender#(a), Meta#(MetaData#("BusSender", "BusDefines", StarArg#(a), 1), Meta#(MetaConsNamed#("BusSender", 0, 2), Tuple2#(Meta#(MetaField#("in", 0), Conc#(FIFO::FIFO#(a))), Meta#(MetaField#("out", 1), Conc#(BusDefines::BusSend#(a)))))))} {Generic#(BypassReg::WReg#(a), Meta#(MetaData#("WReg", "BypassReg", StarArg#(a), 1), Meta#(MetaConsNamed#("WReg", 0, 3), Tuple3#(Meta#(MetaField#("bypass", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("_read", 1), Conc#(a)), Meta#(MetaField#("_write", 2), Conc#(function Action f(a x1)))))))} {Generic#(CBus::CBus#(sa, sd), Meta#(MetaData#("CBus", "CBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("CBus", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function Action f(Bit#(sa) x1, Bit#(sd) x2))), Meta#(MetaField#("read", 1), Conc#(function ActionValue#(Bit#(sd)) f(Bit#(sa) x1)))))))} {Generic#(CBus::CRAddr#(sa, sd), Meta#(MetaData#("CRAddr", "CBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("CRAddr", 0, 2), Tuple2#(Meta#(MetaField#("a", 0), Conc#(Bit#(sa))), Meta#(MetaField#("o", 1), Conc#(Bit#(TLog#(sd))))))))} {Generic#(CBus::IWithCBus#(cbus_IFC, device_IFC), Meta#(MetaData#("IWithCBus", "CBus", Tuple2#(StarArg#(cbus_IFC), StarArg#(device_IFC)), 1), Meta#(MetaConsNamed#("IWithCBus", 0, 2), Tuple2#(Meta#(MetaField#("cbus_ifc", 0), Conc#(cbus_IFC)), Meta#(MetaField#("device_ifc", 1), Conc#(device_IFC))))))} {Generic#(CGetPut::CClientS#(n, a, sa, b, sb), Meta#(MetaData#("CClientS", "CGetPut", Tuple5#(NumArg#(n), StarArg#(a), NumArg#(sa), StarArg#(b), NumArg#(sb)), 1), Meta#(MetaConsNamed#("CClientS", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(CGetPut::CGetS#(n, a, sa))), Meta#(MetaField#("response", 1), Conc#(CGetPut::CPutS#(n, b, sb)))))))} {Generic#(CGetPut::CGetS#(n, a, sa), Meta#(MetaData#("CGetS", "CGetPut", Tuple3#(NumArg#(n), StarArg#(a), NumArg#(sa)), 1), Meta#(MetaConsNamed#("CGetS", 0, 3), Tuple3#(Meta#(MetaField#("gvalue", 0), Conc#(Bit#(sa))), Meta#(MetaField#("gpresent", 1), Conc#(Bool)), Meta#(MetaField#("gcredit", 2), Conc#(function Action f(Bool x1)))))))} {Generic#(CGetPut::CPutS#(n, a, sa), Meta#(MetaData#("CPutS", "CGetPut", Tuple3#(NumArg#(n), StarArg#(a), NumArg#(sa)), 1), Meta#(MetaConsNamed#("CPutS", 0, 3), Tuple3#(Meta#(MetaField#("pvalue", 0), Conc#(function Action f(Bit#(sa) x1))), Meta#(MetaField#("ppresent", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("pcredit", 2), Conc#(Bool))))))} {Generic#(CGetPut::CServerS#(n, a, sa, b, sb), Meta#(MetaData#("CServerS", "CGetPut", Tuple5#(NumArg#(n), StarArg#(a), NumArg#(sa), StarArg#(b), NumArg#(sb)), 1), Meta#(MetaConsNamed#("CServerS", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(CGetPut::CPutS#(n, a, sa))), Meta#(MetaField#("response", 1), Conc#(CGetPut::CGetS#(n, b, sb)))))))} {Generic#(CHERICC_Fat::Bounds, Meta#(MetaData#("Bounds", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("Bounds", 0, 3), Tuple3#(Meta#(MetaField#("exp", 0), Conc#(CHERICC_Fat::Exp)), Meta#(MetaField#("topBits", 1), Conc#(Bit#(CHERICC_Fat::MW))), Meta#(MetaField#("baseBits", 2), Conc#(Bit#(CHERICC_Fat::MW)))))))} {Generic#(CHERICC_Fat::BoundsEmbeddedExp, Meta#(MetaData#("BoundsEmbeddedExp", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("BoundsEmbeddedExp", 0, 5), Tuple5#(Meta#(MetaField#("embeddedExp", 0), Conc#(Bool)), Meta#(MetaField#("topUpperBits", 1), Conc#(Bit#(TSub#(CHERICC_Fat::MW, TAdd#(CHERICC_Fat::HalfExpW, 2))))), Meta#(MetaField#("expTopHalf", 2), Conc#(Bit#(CHERICC_Fat::HalfExpW))), Meta#(MetaField#("baseUpperBits", 3), Conc#(Bit#(TSub#(CHERICC_Fat::MW, CHERICC_Fat::HalfExpW)))), Meta#(MetaField#("expBotHalf", 4), Conc#(Bit#(CHERICC_Fat::HalfExpW)))))))} {Generic#(CHERICC_Fat::BoundsExp0, Meta#(MetaData#("BoundsExp0", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("BoundsExp0", 0, 3), Tuple3#(Meta#(MetaField#("embeddedExp", 0), Conc#(Bool)), Meta#(MetaField#("top", 1), Conc#(Bit#(TSub#(CHERICC_Fat::MW, 2)))), Meta#(MetaField#("base", 2), Conc#(Bit#(CHERICC_Fat::MW)))))))} {Generic#(CHERICC_Fat::CapFat, Meta#(MetaData#("CapFat", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("CapFat", 0, 9), Tuple9#(Meta#(MetaField#("isCapability", 0), Conc#(Bool)), Meta#(MetaField#("address", 1), Conc#(Bit#(CHERICC_Fat::CapAddrW))), Meta#(MetaField#("addrBits", 2), Conc#(Bit#(CHERICC_Fat::MW))), Meta#(MetaField#("perms", 3), Conc#(CHERICC_Fat::Perms)), Meta#(MetaField#("flags", 4), Conc#(Bit#(CHERICC_Fat::FlagsW))), Meta#(MetaField#("reserved", 5), Conc#(Bit#(CHERICC_Fat::ResW))), Meta#(MetaField#("otype", 6), Conc#(Bit#(CHERICC_Fat::OTypeW))), Meta#(MetaField#("format", 7), Conc#(CHERICC_Fat::Format)), Meta#(MetaField#("bounds", 8), Conc#(CHERICC_Fat::Bounds))))))} {Generic#(CHERICC_Fat::CapPipe, Meta#(MetaData#("CapPipe", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("CapPipe", 0, 2), Tuple2#(Meta#(MetaField#("capFat", 0), Conc#(CHERICC_Fat::CapFat)), Meta#(MetaField#("tempFields", 1), Conc#(CHERICC_Fat::TempFields))))))} {Generic#(CHERICC_Fat::CapabilityInMemory, Meta#(MetaData#("CapabilityInMemory", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("CapabilityInMemory", 0, 7), Tuple7#(Meta#(MetaField#("isCapability", 0), Conc#(Bool)), Meta#(MetaField#("perms", 1), Conc#(CHERICC_Fat::Perms)), Meta#(MetaField#("reserved", 2), Conc#(Bit#(CHERICC_Fat::ResW))), Meta#(MetaField#("flags", 3), Conc#(Bit#(CHERICC_Fat::FlagsW))), Meta#(MetaField#("otype", 4), Conc#(Bit#(CHERICC_Fat::OTypeW))), Meta#(MetaField#("bounds", 5), Conc#(CHERICC_Fat::CBounds)), Meta#(MetaField#("address", 6), Conc#(CHERICC_Fat::CapAddr))))))} {Generic#(CHERICC_Fat::Format, Meta#(MetaData#("Format", "CHERICC_Fat", void, 2), Either#(Meta#(MetaConsAnon#("Exp0", 0, 0), void), Meta#(MetaConsAnon#("EmbeddedExp", 1, 0), void))))} {Generic#(CHERICC_Fat::HPerms, Meta#(MetaData#("HPerms", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("HPerms", 0, 12), Tuple12#(Meta#(MetaField#("permit_set_CID", 0), Conc#(Bool)), Meta#(MetaField#("access_sys_regs", 1), Conc#(Bool)), Meta#(MetaField#("permit_unseal", 2), Conc#(Bool)), Meta#(MetaField#("permit_ccall", 3), Conc#(Bool)), Meta#(MetaField#("permit_seal", 4), Conc#(Bool)), Meta#(MetaField#("permit_store_ephemeral_cap", 5), Conc#(Bool)), Meta#(MetaField#("permit_store_cap", 6), Conc#(Bool)), Meta#(MetaField#("permit_load_cap", 7), Conc#(Bool)), Meta#(MetaField#("permit_store", 8), Conc#(Bool)), Meta#(MetaField#("permit_load", 9), Conc#(Bool)), Meta#(MetaField#("permit_execute", 10), Conc#(Bool)), Meta#(MetaField#("non_ephemeral", 11), Conc#(Bool))))))} {Generic#(CHERICC_Fat::MetaInfo, Meta#(MetaData#("MetaInfo", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("MetaInfo", 0, 6), Tuple6#(Meta#(MetaField#("repBoundTopBits", 0), Conc#(Bit#(3))), Meta#(MetaField#("topHi", 1), Conc#(Bool)), Meta#(MetaField#("baseHi", 2), Conc#(Bool)), Meta#(MetaField#("addrHi", 3), Conc#(Bool)), Meta#(MetaField#("topCorrection", 4), Conc#(Int#(2))), Meta#(MetaField#("baseCorrection", 5), Conc#(Int#(2)))))))} {Generic#(CHERICC_Fat::Perms, Meta#(MetaData#("Perms", "CHERICC_Fat", void, 1), Meta#(MetaConsNamed#("Perms", 0, 2), Tuple2#(Meta#(MetaField#("soft", 0), Conc#(Bit#(CHERICC_Fat::UPermW))), Meta#(MetaField#("hard", 1), Conc#(CHERICC_Fat::HPerms))))))} {Generic#(CHERICC_Fat::VnD#(t), Meta#(MetaData#("VnD", "CHERICC_Fat", StarArg#(t), 1), Meta#(MetaConsNamed#("VnD", 0, 2), Tuple2#(Meta#(MetaField#("v", 0), Conc#(Bool)), Meta#(MetaField#("d", 1), Conc#(t))))))} {Generic#(CHERICap::Exact#(t), Meta#(MetaData#("Exact", "CHERICap", StarArg#(t), 1), Meta#(MetaConsNamed#("Exact", 0, 2), Tuple2#(Meta#(MetaField#("exact", 0), Conc#(Bool)), Meta#(MetaField#("value", 1), Conc#(t))))))} {Generic#(CHERICap::HardPerms, Meta#(MetaData#("HardPerms", "CHERICap", void, 1), Meta#(MetaConsNamed#("HardPerms", 0, 12), Tuple12#(Meta#(MetaField#("permitSetCID", 0), Conc#(Bool)), Meta#(MetaField#("accessSysRegs", 1), Conc#(Bool)), Meta#(MetaField#("permitUnseal", 2), Conc#(Bool)), Meta#(MetaField#("permitCCall", 3), Conc#(Bool)), Meta#(MetaField#("permitSeal", 4), Conc#(Bool)), Meta#(MetaField#("permitStoreLocalCap", 5), Conc#(Bool)), Meta#(MetaField#("permitStoreCap", 6), Conc#(Bool)), Meta#(MetaField#("permitLoadCap", 7), Conc#(Bool)), Meta#(MetaField#("permitStore", 8), Conc#(Bool)), Meta#(MetaField#("permitLoad", 9), Conc#(Bool)), Meta#(MetaField#("permitExecute", 10), Conc#(Bool)), Meta#(MetaField#("global", 11), Conc#(Bool))))))} {Generic#(CHERICap::Kind#(ot), Meta#(MetaData#("Kind", "CHERICap", NumArg#(ot), 5), Either#(Meta#(MetaConsAnon#("UNSEALED", 0, 0), void), Either#(Meta#(MetaConsAnon#("SENTRY", 1, 0), void), Either#(Meta#(MetaConsAnon#("RES0", 2, 0), void), Either#(Meta#(MetaConsAnon#("RES1", 3, 0), void), Meta#(MetaConsAnon#("SEALED_WITH_TYPE", 4, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(ot))))))))))} {Generic#(CHERICap::SetBoundsReturn#(t, n), Meta#(MetaData#("SetBoundsReturn", "CHERICap", Tuple2#(StarArg#(t), NumArg#(n)), 1), Meta#(MetaConsNamed#("SetBoundsReturn", 0, 4), Tuple4#(Meta#(MetaField#("cap", 0), Conc#(t)), Meta#(MetaField#("exact", 1), Conc#(Bool)), Meta#(MetaField#("length", 2), Conc#(Bit#(n))), Meta#(MetaField#("mask", 3), Conc#(Bit#(n)))))))} {Generic#(CPU::CPU_State, Meta#(MetaData#("CPU_State", "CPU", void, 15), Either#(Meta#(MetaConsAnon#("CPU_RESET1", 0, 0), void), Either#(Meta#(MetaConsAnon#("CPU_RESET2", 1, 0), void), Either#(Meta#(MetaConsAnon#("CPU_GDB_PAUSING", 2, 0), void), Either#(Meta#(MetaConsAnon#("CPU_DEBUG_MODE", 3, 0), void), Either#(Meta#(MetaConsAnon#("CPU_RUNNING", 4, 0), void), Either#(Meta#(MetaConsAnon#("CPU_TRAP", 5, 0), void), Either#(Meta#(MetaConsAnon#("CPU_START_TRAP_HANDLER", 6, 0), void), Either#(Meta#(MetaConsAnon#("CPU_CSRRW_2", 7, 0), void), Either#(Meta#(MetaConsAnon#("CPU_CSRR_S_or_C_2", 8, 0), void), Either#(Meta#(MetaConsAnon#("CPU_SCR_W_2", 9, 0), void), Either#(Meta#(MetaConsAnon#("CPU_CSRRX_RESTART", 10, 0), void), Either#(Meta#(MetaConsAnon#("CPU_FENCE_I", 11, 0), void), Either#(Meta#(MetaConsAnon#("CPU_FENCE", 12, 0), void), Either#(Meta#(MetaConsAnon#("CPU_SFENCE_VMA", 13, 0), void), Meta#(MetaConsAnon#("CPU_WFI_PAUSED", 14, 0), void)))))))))))))))))} {Generic#(CPU_Globals::Bypass, Meta#(MetaData#("Bypass", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Bypass", 0, 3), Tuple3#(Meta#(MetaField#("bypass_state", 0), Conc#(CPU_Globals::Bypass_State)), Meta#(MetaField#("rd", 1), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("rd_val", 2), Conc#(CHERICC_Fat::CapPipe))))))} {Generic#(CPU_Globals::Bypass_State, Meta#(MetaData#("Bypass_State", "CPU_Globals", void, 3), Either#(Meta#(MetaConsAnon#("BYPASS_RD_NONE", 0, 0), void), Either#(Meta#(MetaConsAnon#("BYPASS_RD", 1, 0), void), Meta#(MetaConsAnon#("BYPASS_RD_RDVAL", 2, 0), void)))))} {Generic#(CPU_Globals::CF_Info, Meta#(MetaData#("CF_Info", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("CF_Info", 0, 5), Tuple5#(Meta#(MetaField#("cf_op", 0), Conc#(CPU_Globals::CF_Op)), Meta#(MetaField#("from_PC", 1), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("taken", 2), Conc#(Bool)), Meta#(MetaField#("fallthru_PC", 3), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("taken_PC", 4), Conc#(ISA_Decls::WordXL))))))} {Generic#(CPU_Globals::CF_Op, Meta#(MetaData#("CF_Op", "CPU_Globals", void, 4), Either#(Meta#(MetaConsAnon#("CF_BR", 0, 0), void), Either#(Meta#(MetaConsAnon#("CF_JAL", 1, 0), void), Either#(Meta#(MetaConsAnon#("CF_JALR", 2, 0), void), Meta#(MetaConsAnon#("CF_None", 3, 0), void))))))} {Generic#(CPU_Globals::Control, Meta#(MetaData#("Control", "CPU_Globals", void, 15), Either#(Meta#(MetaConsAnon#("CONTROL_DISCARD", 0, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_STRAIGHT", 1, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_BRANCH", 2, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_CSRR_W", 3, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_CAPBRANCH", 4, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_SCR_W", 5, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_CSRR_S_or_C", 6, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_FENCE", 7, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_FENCE_I", 8, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_SFENCE_VMA", 9, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_MRET", 10, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_SRET", 11, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_URET", 12, 0), void), Either#(Meta#(MetaConsAnon#("CONTROL_WFI", 13, 0), void), Meta#(MetaConsAnon#("CONTROL_TRAP", 14, 0), void)))))))))))))))))} {Generic#(CPU_Globals::Data_Stage1_to_Stage2, Meta#(MetaData#("Data_Stage1_to_Stage2", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Data_Stage1_to_Stage2", 0, 29), Tuple29#(Meta#(MetaField#("priv", 0), Conc#(ISA_Decls::Priv_Mode)), Meta#(MetaField#("pcc", 1), Conc#(CPU_Globals::PCC_T)), Meta#(MetaField#("instr", 2), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("op_stage2", 3), Conc#(CPU_Globals::Op_Stage2)), Meta#(MetaField#("rd", 4), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("addr", 5), Conc#(ISA_Decls::Addr)), Meta#(MetaField#("val1", 6), Conc#(CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapPipe))), Meta#(MetaField#("val2", 7), Conc#(CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapPipe))), Meta#(MetaField#("val1_fast", 8), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("val2_fast", 9), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("check_authority", 10), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("check_authority_idx", 11), Conc#(Bit#(6))), Meta#(MetaField#("check_address_low", 12), Conc#(Bit#(ISA_Decls::XLEN))), Meta#(MetaField#("check_address_high", 13), Conc#(Bit#(TAdd#(ISA_Decls::XLEN, 1)))), Meta#(MetaField#("check_enable", 14), Conc#(Bool)), Meta#(MetaField#("check_inclusive", 15), Conc#(Bool)), Meta#(MetaField#("check_exact_enable", 16), Conc#(Bool)), Meta#(MetaField#("check_exact_success", 17), Conc#(Bool)), Meta#(MetaField#("set_offset_in_bounds", 18), Conc#(Bool)), Meta#(MetaField#("mem_allow_cap", 19), Conc#(Bool)), Meta#(MetaField#("mem_width_code", 20), Conc#(Bit#(3))), Meta#(MetaField#("mem_unsigned", 21), Conc#(Bool)), Meta#(MetaField#("fval1", 22), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("fval2", 23), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("fval3", 24), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("rd_in_fpr", 25), Conc#(Bool)), Meta#(MetaField#("rs_frm_fpr", 26), Conc#(Bool)), Meta#(MetaField#("val1_frm_gpr", 27), Conc#(Bool)), Meta#(MetaField#("rounding_mode", 28), Conc#(Bit#(3)))))))} {Generic#(CPU_Globals::Data_Stage2_to_Stage3, Meta#(MetaData#("Data_Stage2_to_Stage3", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Data_Stage2_to_Stage3", 0, 10), Tuple10#(Meta#(MetaField#("pcc", 0), Conc#(CPU_Globals::PCC_T)), Meta#(MetaField#("instr", 1), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("priv", 2), Conc#(ISA_Decls::Priv_Mode)), Meta#(MetaField#("rd_valid", 3), Conc#(Bool)), Meta#(MetaField#("rd", 4), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("rd_val", 5), Conc#(CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapReg))), Meta#(MetaField#("upd_flags", 6), Conc#(Bool)), Meta#(MetaField#("rd_in_fpr", 7), Conc#(Bool)), Meta#(MetaField#("fpr_flags", 8), Conc#(Bit#(5))), Meta#(MetaField#("frd_val", 9), Conc#(ISA_Decls::WordFL))))))} {Generic#(CPU_Globals::Data_StageD_to_Stage1, Meta#(MetaData#("Data_StageD_to_Stage1", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Data_StageD_to_Stage1", 0, 14), Tuple14#(Meta#(MetaField#("fetch_addr", 0), Conc#(ISA_Decls::Addr)), Meta#(MetaField#("is_cap_mode", 1), Conc#(Bool)), Meta#(MetaField#("refresh_pcc", 2), Conc#(Bool)), Meta#(MetaField#("priv", 3), Conc#(ISA_Decls::Priv_Mode)), Meta#(MetaField#("epoch", 4), Conc#(CPU_Globals::Epoch)), Meta#(MetaField#("is_i32_not_i16", 5), Conc#(Bool)), Meta#(MetaField#("exc", 6), Conc#(Bool)), Meta#(MetaField#("exc_code", 7), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("tval", 8), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("instr", 9), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("instr_or_instr_C", 10), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("pred_fetch_addr", 11), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("pred_is_cap_mode", 12), Conc#(Bool)), Meta#(MetaField#("decoded_instr", 13), Conc#(ISA_Decls::Decoded_Instr))))))} {Generic#(CPU_Globals::Data_StageF_to_StageD, Meta#(MetaData#("Data_StageF_to_StageD", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Data_StageF_to_StageD", 0, 12), Tuple12#(Meta#(MetaField#("fetch_addr", 0), Conc#(ISA_Decls::Addr)), Meta#(MetaField#("is_cap_mode", 1), Conc#(Bool)), Meta#(MetaField#("refresh_pcc", 2), Conc#(Bool)), Meta#(MetaField#("epoch", 3), Conc#(CPU_Globals::Epoch)), Meta#(MetaField#("priv", 4), Conc#(ISA_Decls::Priv_Mode)), Meta#(MetaField#("is_i32_not_i16", 5), Conc#(Bool)), Meta#(MetaField#("exc", 6), Conc#(Bool)), Meta#(MetaField#("exc_code", 7), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("tval", 8), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("instr", 9), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("pred_fetch_addr", 10), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("pred_is_cap_mode", 11), Conc#(Bool))))))} {Generic#(CPU_Globals::FBypass, Meta#(MetaData#("FBypass", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("FBypass", 0, 3), Tuple3#(Meta#(MetaField#("bypass_state", 0), Conc#(CPU_Globals::Bypass_State)), Meta#(MetaField#("rd", 1), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("rd_val", 2), Conc#(ISA_Decls::WordFL))))))} {Generic#(CPU_Globals::Op_Stage2, Meta#(MetaData#("Op_Stage2", "CPU_Globals", void, 7), Either#(Meta#(MetaConsAnon#("OP_Stage2_ALU", 0, 0), void), Either#(Meta#(MetaConsAnon#("OP_Stage2_LD", 1, 0), void), Either#(Meta#(MetaConsAnon#("OP_Stage2_ST", 2, 0), void), Either#(Meta#(MetaConsAnon#("OP_Stage2_M", 3, 0), void), Either#(Meta#(MetaConsAnon#("OP_Stage2_AMO", 4, 0), void), Either#(Meta#(MetaConsAnon#("OP_Stage2_FD", 5, 0), void), Meta#(MetaConsAnon#("OP_Stage2_TestSubset", 6, 0), void)))))))))} {Generic#(CPU_Globals::Output_Stage1, Meta#(MetaData#("Output_Stage1", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Output_Stage1", 0, 7), Tuple7#(Meta#(MetaField#("ostatus", 0), Conc#(CPU_Globals::Stage_OStatus)), Meta#(MetaField#("control", 1), Conc#(CPU_Globals::Control)), Meta#(MetaField#("trap_info", 2), Conc#(CPU_Globals::Trap_Info_Pipe)), Meta#(MetaField#("redirect", 3), Conc#(Bool)), Meta#(MetaField#("next_pcc", 4), Conc#(CPU_Globals::PCC_T)), Meta#(MetaField#("cf_info", 5), Conc#(CPU_Globals::CF_Info)), Meta#(MetaField#("data_to_stage2", 6), Conc#(CPU_Globals::Data_Stage1_to_Stage2))))))} {Generic#(CPU_Globals::Output_Stage2, Meta#(MetaData#("Output_Stage2", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Output_Stage2", 0, 7), Tuple7#(Meta#(MetaField#("ostatus", 0), Conc#(CPU_Globals::Stage_OStatus)), Meta#(MetaField#("trap_info", 1), Conc#(CPU_Globals::Trap_Info_Pipe)), Meta#(MetaField#("perf", 2), Conc#(CPU_Globals::Output_Stage2_Perf)), Meta#(MetaField#("check_success", 3), Conc#(Bool)), Meta#(MetaField#("bypass", 4), Conc#(CPU_Globals::Bypass)), Meta#(MetaField#("fbypass", 5), Conc#(CPU_Globals::FBypass)), Meta#(MetaField#("data_to_stage3", 6), Conc#(CPU_Globals::Data_Stage2_to_Stage3))))))} {Generic#(CPU_Globals::Output_Stage2_Perf, Meta#(MetaData#("Output_Stage2_Perf", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Output_Stage2_Perf", 0, 5), Tuple5#(Meta#(MetaField#("sc_success", 0), Conc#(Bool)), Meta#(MetaField#("ld_cap", 1), Conc#(Bool)), Meta#(MetaField#("ld_cap_tag_set", 2), Conc#(Bool)), Meta#(MetaField#("ld_wait", 3), Conc#(Bool)), Meta#(MetaField#("st_wait", 4), Conc#(Bool))))))} {Generic#(CPU_Globals::Output_Stage3, Meta#(MetaData#("Output_Stage3", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Output_Stage3", 0, 3), Tuple3#(Meta#(MetaField#("ostatus", 0), Conc#(CPU_Globals::Stage_OStatus)), Meta#(MetaField#("bypass", 1), Conc#(CPU_Globals::Bypass)), Meta#(MetaField#("fbypass", 2), Conc#(CPU_Globals::FBypass))))))} {Generic#(CPU_Globals::Output_StageD, Meta#(MetaData#("Output_StageD", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Output_StageD", 0, 2), Tuple2#(Meta#(MetaField#("ostatus", 0), Conc#(CPU_Globals::Stage_OStatus)), Meta#(MetaField#("data_to_stage1", 1), Conc#(CPU_Globals::Data_StageD_to_Stage1))))))} {Generic#(CPU_Globals::Output_StageF, Meta#(MetaData#("Output_StageF", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Output_StageF", 0, 2), Tuple2#(Meta#(MetaField#("ostatus", 0), Conc#(CPU_Globals::Stage_OStatus)), Meta#(MetaField#("data_to_stageD", 1), Conc#(CPU_Globals::Data_StageF_to_StageD))))))} {Generic#(CPU_Globals::Pipeline_Val#(capType), Meta#(MetaData#("Pipeline_Val", "CPU_Globals", StarArg#(capType), 1), Meta#(MetaConsNamed#("Pipeline_Val", 0, 1), Meta#(MetaField#("val", 0), Conc#(capType)))))} {Generic#(CPU_Globals::Stage_OStatus, Meta#(MetaData#("Stage_OStatus", "CPU_Globals", void, 4), Either#(Meta#(MetaConsAnon#("OSTATUS_EMPTY", 0, 0), void), Either#(Meta#(MetaConsAnon#("OSTATUS_BUSY", 1, 0), void), Either#(Meta#(MetaConsAnon#("OSTATUS_PIPE", 2, 0), void), Meta#(MetaConsAnon#("OSTATUS_NONPIPE", 3, 0), void))))))} {Generic#(CPU_Globals::Trap_Info_Pipe, Meta#(MetaData#("Trap_Info_Pipe", "CPU_Globals", void, 1), Meta#(MetaConsNamed#("Trap_Info_Pipe", 0, 5), Tuple5#(Meta#(MetaField#("epcc", 0), Conc#(CPU_Globals::PCC_T)), Meta#(MetaField#("cheri_exc_code", 1), Conc#(ISA_Decls::CHERI_Exc_Code)), Meta#(MetaField#("cheri_exc_reg", 2), Conc#(Bit#(6))), Meta#(MetaField#("exc_code", 3), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("tval", 4), Conc#(ISA_Decls::Addr))))))} {Generic#(CPU_IFC::CPU_IFC, Meta#(MetaData#("CPU_IFC", "CPU_IFC", void, 1), Meta#(MetaConsNamed#("CPU_IFC", 0, 18), Tuple18#(Meta#(MetaField#("hart0_server_reset", 0), Conc#(ClientServer::Server#(Bool, Bool))), Meta#(MetaField#("imem_master", 1), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User))), Meta#(MetaField#("mem_master", 2), Conc#(Fabric_Defs::Near_Mem_Fabric_IFC)), Meta#(MetaField#("dma_server", 3), Conc#(AXI4_Types::AXI4_Slave#(Near_Mem_IFC::Wd_Id_Dma, Near_Mem_IFC::Wd_Addr_Dma, Near_Mem_IFC::Wd_Data_Dma, Near_Mem_IFC::Wd_AW_User_Dma, Near_Mem_IFC::Wd_W_User_Dma, Near_Mem_IFC::Wd_B_User_Dma, Near_Mem_IFC::Wd_AR_User_Dma, Near_Mem_IFC::Wd_R_User_Dma))), Meta#(MetaField#("m_external_interrupt_req", 4), Conc#(function Action f(Bool x1))), Meta#(MetaField#("s_external_interrupt_req", 5), Conc#(function Action f(Bool x1))), Meta#(MetaField#("software_interrupt_req", 6), Conc#(function Action f(Bool x1))), Meta#(MetaField#("timer_interrupt_req", 7), Conc#(function Action f(Bool x1))), Meta#(MetaField#("nmi_req", 8), Conc#(function Action f(Bool x1))), Meta#(MetaField#("hart0_server_run_halt", 9), Conc#(ClientServer::Server#(Bool, Bool))), Meta#(MetaField#("hart0_put_other_req", 10), Conc#(GetPut::Put#(Bit#(4)))), Meta#(MetaField#("hart0_gpr_mem_server", 11), Conc#(ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("hart0_fpr_mem_server", 12), Conc#(ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::FLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::FLEN)))), Meta#(MetaField#("hart0_csr_mem_server", 13), Conc#(ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("relay_external_events", 14), Conc#(function Action f(StatCounters::AXI4_Slave_Events x1, StatCounters::AXI4_Master_Events x2, StatCounters::EventsTGC x3))), Meta#(MetaField#("set_verbosity", 15), Conc#(function Action f(Bit#(4) x1, Bit#(64) x2))), Meta#(MetaField#("ma_ddr4_ready", 16), Conc#(Action)), Meta#(MetaField#("mv_status", 17), Conc#(Bit#(8)))))))} {Generic#(CPU_Stage1::CPU_Stage1_IFC, Meta#(MetaData#("CPU_Stage1_IFC", "CPU_Stage1", void, 1), Meta#(MetaConsNamed#("CPU_Stage1_IFC", 0, 5), Tuple5#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("out", 1), Conc#(CPU_Globals::Output_Stage1)), Meta#(MetaField#("deq", 2), Conc#(Action)), Meta#(MetaField#("enq", 3), Conc#(function Action f(CPU_Globals::Data_StageD_to_Stage1 x1))), Meta#(MetaField#("set_full", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(CPU_Stage2::CPU_Stage2_IFC, Meta#(MetaData#("CPU_Stage2_IFC", "CPU_Stage2", void, 1), Meta#(MetaConsNamed#("CPU_Stage2_IFC", 0, 5), Tuple5#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("out", 1), Conc#(CPU_Globals::Output_Stage2)), Meta#(MetaField#("deq", 2), Conc#(Action)), Meta#(MetaField#("enq", 3), Conc#(function Action f(CPU_Globals::Data_Stage1_to_Stage2 x1, Bool x2))), Meta#(MetaField#("set_full", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(CPU_Stage3::CPU_Stage3_IFC, Meta#(MetaData#("CPU_Stage3_IFC", "CPU_Stage3", void, 1), Meta#(MetaConsNamed#("CPU_Stage3_IFC", 0, 6), Tuple6#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("out", 1), Conc#(CPU_Globals::Output_Stage3)), Meta#(MetaField#("deq", 2), Conc#(Action)), Meta#(MetaField#("enq", 3), Conc#(function Action f(CPU_Globals::Data_Stage2_to_Stage3 x1))), Meta#(MetaField#("set_full", 4), Conc#(function Action f(Bool x1))), Meta#(MetaField#("show_state", 5), Conc#(Action))))))} {Generic#(CPU_StageD::CPU_StageD_IFC, Meta#(MetaData#("CPU_StageD_IFC", "CPU_StageD", void, 1), Meta#(MetaConsNamed#("CPU_StageD_IFC", 0, 5), Tuple5#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("out", 1), Conc#(CPU_Globals::Output_StageD)), Meta#(MetaField#("deq", 2), Conc#(Action)), Meta#(MetaField#("enq", 3), Conc#(function Action f(CPU_Globals::Data_StageF_to_StageD x1))), Meta#(MetaField#("set_full", 4), Conc#(function Action f(Bool x1)))))))} {Generic#(CPU_StageF::CPU_StageF_IFC, Meta#(MetaData#("CPU_StageF_IFC", "CPU_StageF", void, 1), Meta#(MetaConsNamed#("CPU_StageF_IFC", 0, 6), Tuple6#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("out", 1), Conc#(CPU_Globals::Output_StageF)), Meta#(MetaField#("deq", 2), Conc#(Action)), Meta#(MetaField#("enq", 3), Conc#(function Action f(CPU_Globals::Epoch x1, ISA_Decls::WordXL x2, Bool x3, Bool x4, ISA_Decls::Priv_Mode x5, Bit#(1) x6, Bit#(1) x7, ISA_Decls::WordXL x8))), Meta#(MetaField#("bp_train", 4), Conc#(function Action f(ISA_Decls::WordXL x1, Bool x2, ISA_Decls::Instr x3, CPU_Globals::CF_Info x4))), Meta#(MetaField#("set_full", 5), Conc#(function Action f(Bool x1)))))))} {Generic#(CRC::CRC#(n), Meta#(MetaData#("CRC", "CRC", NumArg#(n), 1), Meta#(MetaConsNamed#("CRC", 0, 4), Tuple4#(Meta#(MetaField#("add", 0), Conc#(function Action f(Bit#(8) x1))), Meta#(MetaField#("clear", 1), Conc#(Action)), Meta#(MetaField#("result", 2), Conc#(Bit#(n))), Meta#(MetaField#("complete", 3), Conc#(ActionValue#(Bit#(n))))))))} {Generic#(CReg5#(t), Meta#(MetaData#("CReg5", "PreludeBSV", StarArg#(t), 1), Meta#(MetaConsNamed#("CReg5", 0, 5), Tuple5#(Meta#(MetaField#("port0", 0), Conc#(Reg#(t))), Meta#(MetaField#("port1", 1), Conc#(Reg#(t))), Meta#(MetaField#("port2", 2), Conc#(Reg#(t))), Meta#(MetaField#("port3", 3), Conc#(Reg#(t))), Meta#(MetaField#("port4", 4), Conc#(Reg#(t)))))))} {Generic#(CSR_MIE::CSR_MIE_IFC, Meta#(MetaData#("CSR_MIE_IFC", "CSR_MIE", void, 1), Meta#(MetaConsNamed#("CSR_MIE_IFC", 0, 5), Tuple5#(Meta#(MetaField#("reset", 0), Conc#(Action)), Meta#(MetaField#("mv_read", 1), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mav_write", 2), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mv_sie_read", 3), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mav_sie_write", 4), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2)))))))} {Generic#(CSR_MIP::CSR_MIP_IFC, Meta#(MetaData#("CSR_MIP_IFC", "CSR_MIP", void, 1), Meta#(MetaConsNamed#("CSR_MIP_IFC", 0, 9), Tuple9#(Meta#(MetaField#("reset", 0), Conc#(Action)), Meta#(MetaField#("mv_read", 1), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mav_write", 2), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mv_sip_read", 3), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mav_sip_write", 4), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("m_external_interrupt_req", 5), Conc#(function Action f(Bool x1))), Meta#(MetaField#("s_external_interrupt_req", 6), Conc#(function Action f(Bool x1))), Meta#(MetaField#("software_interrupt_req", 7), Conc#(function Action f(Bool x1))), Meta#(MetaField#("timer_interrupt_req", 8), Conc#(function Action f(Bool x1)))))))} {Generic#(CSR_MSTATUS::CSR_MSTATUS_IFC, Meta#(MetaData#("CSR_MSTATUS_IFC", "CSR_MSTATUS", void, 1), Meta#(MetaConsNamed#("CSR_MSTATUS_IFC", 0, 11), Tuple11#(Meta#(MetaField#("reset", 0), Conc#(function Action f(ISA_Decls::MISA x1))), Meta#(MetaField#("mv_read", 1), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mv_write", 2), Conc#(function ISA_Decls::WordXL f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("ma_write", 3), Conc#(function Action f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mav_write", 4), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mv_ustatus_read", 5), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("ma_ustatus_write", 6), Conc#(function Action f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mav_ustatus_write", 7), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mv_sstatus_read", 8), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("ma_sstatus_write", 9), Conc#(function Action f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mav_sstatus_write", 10), Conc#(function ActionValue#(ISA_Decls::WordXL) f(ISA_Decls::MISA x1, ISA_Decls::WordXL x2)))))))} {Generic#(CSR_RegFile_MSU::AccessPerms, Meta#(MetaData#("AccessPerms", "CSR_RegFile_MSU", void, 1), Meta#(MetaConsNamed#("AccessPerms", 0, 2), Tuple2#(Meta#(MetaField#("exists", 0), Conc#(Bool)), Meta#(MetaField#("requires_asr", 1), Conc#(Bool))))))} {Generic#(CSR_RegFile_MSU::CSR_RegFile_IFC, Meta#(MetaData#("CSR_RegFile_IFC", "CSR_RegFile_MSU", void, 1), Meta#(MetaConsNamed#("CSR_RegFile_IFC", 0, 44), Tuple44#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("read_csr", 1), Conc#(function Maybe#(ISA_Decls::Word) f(ISA_Decls::CSR_Addr x1))), Meta#(MetaField#("read_csr_port2", 2), Conc#(function Maybe#(ISA_Decls::Word) f(ISA_Decls::CSR_Addr x1))), Meta#(MetaField#("read_scr", 3), Conc#(function Maybe#(CHERICC_Fat::CapReg) f(ISA_Decls::SCR_Addr x1))), Meta#(MetaField#("mav_read_csr", 4), Conc#(function ActionValue#(Maybe#(ISA_Decls::Word)) f(ISA_Decls::CSR_Addr x1))), Meta#(MetaField#("mav_csr_write", 5), Conc#(function ActionValue#(CSR_RegFile_MSU::CSR_Write_Result) f(ISA_Decls::CSR_Addr x1, ISA_Decls::WordXL x2))), Meta#(MetaField#("mav_scr_write", 6), Conc#(function ActionValue#(CHERICC_Fat::CapReg) f(ISA_Decls::SCR_Addr x1, CHERICC_Fat::CapReg x2))), Meta#(MetaField#("read_frm", 7), Conc#(Bit#(3))), Meta#(MetaField#("read_fflags", 8), Conc#(Bit#(5))), Meta#(MetaField#("mv_update_fcsr_fflags", 9), Conc#(function Bit#(5) f(Bit#(5) x1))), Meta#(MetaField#("ma_update_fcsr_fflags", 10), Conc#(function Action f(Bit#(5) x1))), Meta#(MetaField#("mv_update_mstatus_fs", 11), Conc#(function ISA_Decls::WordXL f(Bit#(2) x1))), Meta#(MetaField#("ma_update_mstatus_fs", 12), Conc#(function Action f(Bit#(2) x1))), Meta#(MetaField#("read_misa", 13), Conc#(ISA_Decls::MISA)), Meta#(MetaField#("read_mstatus", 14), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("read_sstatus", 15), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("read_ustatus", 16), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("read_satp", 17), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("csr_trap_actions", 18), Conc#(function ActionValue#(ISA_Decls::Trap_Info_CSR) f(ISA_Decls::Priv_Mode x1, CHERICC_Fat::CapPipe x2, Bool x3, Bool x4, ISA_Decls::CHERI_Exc_Code x5, Bit#(6) x6, ISA_Decls::Exc_Code x7, ISA_Decls::Word x8))), Meta#(MetaField#("csr_ret_actions", 19), Conc#(function ActionValue#(Tuple3#(CHERICC_Fat::CapPipe, ISA_Decls::Priv_Mode, ISA_Decls::Word)) f(ISA_Decls::Priv_Mode x1))), Meta#(MetaField#("read_csr_minstret", 20), Conc#(Bit#(64))), Meta#(MetaField#("csr_minstret_incr", 21), Conc#(Action)), Meta#(MetaField#("read_csr_mcycle", 22), Conc#(Bit#(64))), Meta#(MetaField#("read_csr_mtime", 23), Conc#(Bit#(64))), Meta#(MetaField#("send_performance_events", 24), Conc#(function Action f(Vector::Vector#(StatCounters::No_Of_Evts, Bit#(ISA_Decls::Report_Width)) x1))), Meta#(MetaField#("access_permitted_1", 25), Conc#(function CSR_RegFile_MSU::AccessPerms f(ISA_Decls::Priv_Mode x1, ISA_Decls::CSR_Addr x2, Bool x3))), Meta#(MetaField#("access_permitted_2", 26), Conc#(function CSR_RegFile_MSU::AccessPerms f(ISA_Decls::Priv_Mode x1, ISA_Decls::CSR_Addr x2, Bool x3))), Meta#(MetaField#("access_permitted_scr", 27), Conc#(function CSR_RegFile_MSU::AccessPerms f(ISA_Decls::Priv_Mode x1, ISA_Decls::SCR_Addr x2, Bool x3))), Meta#(MetaField#("csr_counter_read_fault", 28), Conc#(function Bool f(ISA_Decls::Priv_Mode x1, ISA_Decls::CSR_Addr x2))), Meta#(MetaField#("csr_mip_read", 29), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("m_external_interrupt_req", 30), Conc#(function Action f(Bool x1))), Meta#(MetaField#("s_external_interrupt_req", 31), Conc#(function Action f(Bool x1))), Meta#(MetaField#("timer_interrupt_req", 32), Conc#(function Action f(Bool x1))), Meta#(MetaField#("software_interrupt_req", 33), Conc#(function Action f(Bool x1))), Meta#(MetaField#("interrupt_pending", 34), Conc#(function Maybe#(ISA_Decls::Exc_Code) f(ISA_Decls::Priv_Mode x1))), Meta#(MetaField#("wfi_resume", 35), Conc#(Bool)), Meta#(MetaField#("nmi_req", 36), Conc#(function Action f(Bool x1))), Meta#(MetaField#("nmi_pending", 37), Conc#(Bool)), Meta#(MetaField#("read_dpcc", 38), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("write_dpcc", 39), Conc#(function Action f(CHERICC_Fat::CapPipe x1))), Meta#(MetaField#("dcsr_break_enters_debug", 40), Conc#(function Bool f(ISA_Decls::Priv_Mode x1))), Meta#(MetaField#("read_dcsr_step", 41), Conc#(Bool)), Meta#(MetaField#("write_dcsr_cause_priv", 42), Conc#(function Action f(DM_Common::DCSR_Cause x1, ISA_Decls::Priv_Mode x2))), Meta#(MetaField#("debug", 43), Conc#(Action))))))} {Generic#(CSR_RegFile_MSU::CSR_Write_Result, Meta#(MetaData#("CSR_Write_Result", "CSR_RegFile_MSU", void, 1), Meta#(MetaConsNamed#("CSR_Write_Result", 0, 2), Tuple2#(Meta#(MetaField#("new_csr_value", 0), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("m_new_csr_value2", 1), Conc#(Maybe#(ISA_Decls::WordXL)))))))} {Generic#(CSR_RegFile_MSU::RF_State, Meta#(MetaData#("RF_State", "CSR_RegFile_MSU", void, 2), Either#(Meta#(MetaConsAnon#("RF_RESET_START", 0, 0), void), Meta#(MetaConsAnon#("RF_RUNNING", 1, 0), void))))} {Generic#(CacheCorderer::CacheCorderer#(inFlight), Meta#(MetaData#("CacheCorderer", "CacheCorderer", NumArg#(inFlight), 1), Meta#(MetaConsNamed#("CacheCorderer", 0, 20), Tuple20#(Meta#(MetaField#("reqsEmpty", 0), Conc#(Bool)), Meta#(MetaField#("reqsFull", 1), Conc#(Bool)), Meta#(MetaField#("lookupCheckId", 2), Conc#(function Bool f(MemTypesCHERI::ReqId x1))), Meta#(MetaField#("lookupIsOngoing", 3), Conc#(Bool)), Meta#(MetaField#("lookupFlit", 4), Conc#(function MemTypesCHERI::Bank f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Bank x2))), Meta#(MetaField#("lookupReport", 5), Conc#(function Action f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Bank x2, MemTypesCHERI::Bank x3, MemTypesCHERI::Bank x4))), Meta#(MetaField#("slaveReq", 6), Conc#(function Action f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Line x2, MemTypesCHERI::Bank x3, MemTypesCHERI::Bank x4))), Meta#(MetaField#("slaveReqServeReady", 7), Conc#(function Bool f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Line x2))), Meta#(MetaField#("slaveReqExecuteReady", 8), Conc#(function ActionValue#(Bool) f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Bank x2))), Meta#(MetaField#("slaveRspIsOngoing", 9), Conc#(Bool)), Meta#(MetaField#("slaveRspLast", 10), Conc#(function Bool f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Bank x2))), Meta#(MetaField#("slaveRsp", 11), Conc#(function Action f(MemTypesCHERI::ReqId x1, Bool x2))), Meta#(MetaField#("mastReqsEmpty", 12), Conc#(Bool)), Meta#(MetaField#("mastReqsFull", 13), Conc#(Bool)), Meta#(MetaField#("mastReqsSpaces", 14), Conc#(Bit#(5))), Meta#(MetaField#("mastNextId", 15), Conc#(MemTypesCHERI::CheriTransactionID)), Meta#(MetaField#("mastCheckId", 16), Conc#(function Bool f(MemTypesCHERI::ReqId x1))), Meta#(MetaField#("mastReq", 17), Conc#(function Action f(MemTypesCHERI::ReqId x1, MemTypesCHERI::Bank x2, MemTypesCHERI::Bank x3, MemTypesCHERI::Line x4, Bool x5))), Meta#(MetaField#("mastRsp", 18), Conc#(function Action f(MemTypesCHERI::ReqId x1, Bool x2, Bool x3))), Meta#(MetaField#("nextMastRspFlit", 19), Conc#(function MemTypesCHERI::Bank f(MemTypesCHERI::ReqId x1, Bool x2)))))))} {Generic#(CacheCorderer::ReqRec, Meta#(MetaData#("ReqRec", "CacheCorderer", void, 1), Meta#(MetaConsNamed#("ReqRec", 0, 5), Tuple5#(Meta#(MetaField#("id", 0), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("line", 1), Conc#(MemTypesCHERI::Line)), Meta#(MetaField#("first", 2), Conc#(MemTypesCHERI::Bank)), Meta#(MetaField#("last", 3), Conc#(MemTypesCHERI::Bank)), Meta#(MetaField#("idBeforeMe", 4), Conc#(VnD::VnD#(MemTypesCHERI::ReqId)))))))} {Generic#(CacheCorderer::TransRecord, Meta#(MetaData#("TransRecord", "CacheCorderer", void, 1), Meta#(MetaConsNamed#("TransRecord", 0, 5), Tuple5#(Meta#(MetaField#("ongoing", 0), Conc#(Bool)), Meta#(MetaField#("id", 1), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("first", 2), Conc#(MemTypesCHERI::Bank)), Meta#(MetaField#("last", 3), Conc#(MemTypesCHERI::Bank)), Meta#(MetaField#("next", 4), Conc#(MemTypesCHERI::Bank))))))} {Generic#(CacheCore::AddrTagWay#(ways, keyBits, tagBits), Meta#(MetaData#("AddrTagWay", "CacheCore", Tuple3#(NumArg#(ways), NumArg#(keyBits), NumArg#(tagBits)), 1), Meta#(MetaConsNamed#("AddrTagWay", 0, 5), Tuple5#(Meta#(MetaField#("addr", 0), Conc#(CacheCore::CacheAddress#(keyBits, tagBits))), Meta#(MetaField#("tag", 1), Conc#(CacheCore::TagLine#(tagBits))), Meta#(MetaField#("way", 2), Conc#(CacheCore::Way#(ways))), Meta#(MetaField#("cached", 3), Conc#(Bool)), Meta#(MetaField#("reqId", 4), Conc#(MemTypesCHERI::ReqId))))))} {Generic#(CacheCore::CacheAddress#(keyBits, tagBits), Meta#(MetaData#("CacheAddress", "CacheCore", Tuple2#(NumArg#(keyBits), NumArg#(tagBits)), 1), Meta#(MetaConsNamed#("CacheAddress", 0, 4), Tuple4#(Meta#(MetaField#("tag", 0), Conc#(CacheCore::Tag#(tagBits))), Meta#(MetaField#("key", 1), Conc#(CacheCore::Key#(keyBits))), Meta#(MetaField#("bank", 2), Conc#(MemTypesCHERI::Bank)), Meta#(MetaField#("offset", 3), Conc#(CacheCore::Offset))))))} {Generic#(CacheCore::CacheCommit, Meta#(MetaData#("CacheCommit", "CacheCore", void, 1), Meta#(MetaConsNamed#("CacheCommit", 0, 2), Tuple2#(Meta#(MetaField#("id", 0), Conc#(MemTypesCHERI::CheriTransactionID)), Meta#(MetaField#("commit", 1), Conc#(Bool))))))} {Generic#(CacheCore::CacheCore#(ways, keyBits, inFlight), Meta#(MetaData#("CacheCore", "CacheCore", Tuple3#(NumArg#(ways), NumArg#(keyBits), NumArg#(inFlight)), 1), Meta#(MetaConsNamed#("CacheCore", 0, 7), Tuple7#(Meta#(MetaField#("canPut", 0), Conc#(Bool)), Meta#(MetaField#("put", 1), Conc#(function Action f(MemTypesCHERI::CheriMemRequest x1))), Meta#(MetaField#("response", 2), Conc#(MasterSlaveCHERI::CheckedGet#(MemTypesCHERI::CheriMemResponse))), Meta#(MetaField#("nextWillCommit", 3), Conc#(function Action f(Bool x1))), Meta#(MetaField#("invalidate", 4), Conc#(function Action f(MemTypesCHERI::CheriPhyAddr x1))), Meta#(MetaField#("invalidateDone", 5), Conc#(ActionValue#(Bool))), Meta#(MetaField#("events", 6), Conc#(CacheCore::EventsCacheCore))))))} {Generic#(CacheCore::CacheState, Meta#(MetaData#("CacheState", "CacheCore", void, 2), Either#(Meta#(MetaConsAnon#("Init", 0, 0), void), Meta#(MetaConsAnon#("Serving", 1, 0), void))))} {Generic#(CacheCore::ControlToken#(ways, keyBits, tagBits), Meta#(MetaData#("ControlToken", "CacheCore", Tuple3#(NumArg#(ways), NumArg#(keyBits), NumArg#(tagBits)), 1), Meta#(MetaConsNamed#("ControlToken", 0, 11), Tuple11#(Meta#(MetaField#("command", 0), Conc#(CacheCore::LookupCommand)), Meta#(MetaField#("req", 1), Conc#(MemTypesCHERI::CheriMemRequest)), Meta#(MetaField#("addr", 2), Conc#(CacheCore::CacheAddress#(keyBits, tagBits))), Meta#(MetaField#("readWidth", 3), Conc#(MemTypesCHERI::BytesPerFlit)), Meta#(MetaField#("dataKey", 4), Conc#(CacheCore::DataKey#(ways, keyBits))), Meta#(MetaField#("way", 5), Conc#(CacheCore::Way#(ways))), Meta#(MetaField#("last", 6), Conc#(Bool)), Meta#(MetaField#("fresh", 7), Conc#(Bool)), Meta#(MetaField#("invalidate", 8), Conc#(CacheCore::InvalidateToken#(ways, keyBits, tagBits))), Meta#(MetaField#("writebackTag", 9), Conc#(CacheCore::TagLine#(tagBits))), Meta#(MetaField#("rspError", 10), Conc#(MemTypesCHERI::Error))))))} {Generic#(CacheCore::DataKey#(ways, keyBits), Meta#(MetaData#("DataKey", "CacheCore", Tuple2#(NumArg#(ways), NumArg#(keyBits)), 1), Meta#(MetaConsNamed#("DataKey", 0, 2), Tuple2#(Meta#(MetaField#("key", 0), Conc#(CacheCore::Key#(keyBits))), Meta#(MetaField#("bank", 1), Conc#(MemTypesCHERI::Bank))))))} {Generic#(CacheCore::EventsCacheCore, Meta#(MetaData#("EventsCacheCore", "CacheCore", void, 1), Meta#(MetaConsNamed#("EventsCacheCore", 0, 7), Tuple7#(Meta#(MetaField#("evt_WRITE", 0), Conc#(Bool)), Meta#(MetaField#("evt_WRITE_MISS", 1), Conc#(Bool)), Meta#(MetaField#("evt_READ", 2), Conc#(Bool)), Meta#(MetaField#("evt_READ_MISS", 3), Conc#(Bool)), Meta#(MetaField#("evt_EVICT", 4), Conc#(Bool)), Meta#(MetaField#("evt_SET_TAG_WRITE", 5), Conc#(Bool)), Meta#(MetaField#("evt_SET_TAG_READ", 6), Conc#(Bool))))))} {Generic#(CacheCore::InvalidateToken#(ways, keyBits, tagBits), Meta#(MetaData#("InvalidateToken", "CacheCore", Tuple3#(NumArg#(ways), NumArg#(keyBits), NumArg#(tagBits)), 1), Meta#(MetaConsNamed#("InvalidateToken", 0, 4), Tuple4#(Meta#(MetaField#("tag", 0), Conc#(CacheCore::Tag#(tagBits))), Meta#(MetaField#("key", 1), Conc#(CacheCore::Key#(keyBits))), Meta#(MetaField#("way", 2), Conc#(CacheCore::Way#(ways))), Meta#(MetaField#("valid", 3), Conc#(Bool))))))} {Generic#(CacheCore::LookupCommand, Meta#(MetaData#("LookupCommand", "CacheCore", void, 3), Either#(Meta#(MetaConsAnon#("Serve", 0, 0), void), Either#(Meta#(MetaConsAnon#("Writeback", 1, 0), void), Meta#(MetaConsAnon#("MemResponse", 2, 0), void)))))} {Generic#(CacheCore::OrderBehaviour, Meta#(MetaData#("OrderBehaviour", "CacheCore", void, 2), Either#(Meta#(MetaConsAnon#("InOrder", 0, 0), void), Meta#(MetaConsAnon#("OutOfOrder", 1, 0), void))))} {Generic#(CacheCore::ReqIdWithSC, Meta#(MetaData#("ReqIdWithSC", "CacheCore", void, 1), Meta#(MetaConsNamed#("ReqIdWithSC", 0, 3), Tuple3#(Meta#(MetaField#("inId", 0), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("isSC", 1), Conc#(Bool)), Meta#(MetaField#("scResult", 2), Conc#(Bool))))))} {Generic#(CacheCore::RequestRecord#(ways, keyBits, tagBits), Meta#(MetaData#("RequestRecord", "CacheCore", Tuple3#(NumArg#(ways), NumArg#(keyBits), NumArg#(tagBits)), 1), Meta#(MetaConsNamed#("RequestRecord", 0, 9), Tuple9#(Meta#(MetaField#("key", 0), Conc#(CacheCore::Key#(keyBits))), Meta#(MetaField#("inId", 1), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("inDone", 2), Conc#(Bool)), Meta#(MetaField#("outId", 3), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("cached", 4), Conc#(Bool)), Meta#(MetaField#("oldTag", 5), Conc#(CacheCore::TagLine#(tagBits))), Meta#(MetaField#("oldWay", 6), Conc#(CacheCore::Way#(ways))), Meta#(MetaField#("oldDirty", 7), Conc#(Bool)), Meta#(MetaField#("write", 8), Conc#(Bool))))))} {Generic#(CacheCore::ResponseBehaviour, Meta#(MetaData#("ResponseBehaviour", "CacheCore", void, 2), Either#(Meta#(MetaConsAnon#("OnlyReadResponses", 0, 0), void), Meta#(MetaConsAnon#("RespondAll", 1, 0), void))))} {Generic#(CacheCore::ResponseToken, Meta#(MetaData#("ResponseToken", "CacheCore", void, 1), Meta#(MetaConsNamed#("ResponseToken", 0, 7), Tuple7#(Meta#(MetaField#("resp", 0), Conc#(MemTypesCHERI::CheriMemResponse)), Meta#(MetaField#("req", 1), Conc#(MemTypesCHERI::CheriMemRequest)), Meta#(MetaField#("rspId", 2), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("reportResponse", 3), Conc#(Bool)), Meta#(MetaField#("deqId", 4), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("deqReqCommits", 5), Conc#(Bool)), Meta#(MetaField#("enqRetryReq", 6), Conc#(Bool))))))} {Generic#(CacheCore::TagLine#(tagBits), Meta#(MetaData#("TagLine", "CacheCore", NumArg#(tagBits), 1), Meta#(MetaConsNamed#("TagLine", 0, 5), Tuple5#(Meta#(MetaField#("tag", 0), Conc#(CacheCore::Tag#(tagBits))), Meta#(MetaField#("dirty", 1), Conc#(Bool)), Meta#(MetaField#("valid", 2), Conc#(Vector::Vector#(MemTypesCHERI::CheriBurstSize, Bool))), Meta#(MetaField#("pendMem", 3), Conc#(Bool)), Meta#(MetaField#("capTags", 4), Conc#(CacheCore::LineCapTags))))))} {Generic#(CacheCore::TagUpdate#(ways, keyBits, tagBits), Meta#(MetaData#("TagUpdate", "CacheCore", Tuple3#(NumArg#(ways), NumArg#(keyBits), NumArg#(tagBits)), 1), Meta#(MetaConsNamed#("TagUpdate", 0, 4), Tuple4#(Meta#(MetaField#("doWrite", 0), Conc#(Bool)), Meta#(MetaField#("key", 1), Conc#(CacheCore::Key#(keyBits))), Meta#(MetaField#("newTag", 2), Conc#(CacheCore::TagLine#(tagBits))), Meta#(MetaField#("way", 3), Conc#(CacheCore::Way#(ways)))))))} {Generic#(CacheCore::WriteMissBehaviour, Meta#(MetaData#("WriteMissBehaviour", "CacheCore", void, 2), Either#(Meta#(MetaConsAnon#("WriteThrough", 0, 0), void), Meta#(MetaConsAnon#("WriteAllocate", 1, 0), void))))} {Generic#(Char, ConcPrim#(Char))} {Generic#(ClientServer::Client#(a, b), Meta#(MetaData#("Client", "ClientServer", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("Client", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(GetPut::Get#(a))), Meta#(MetaField#("response", 1), Conc#(GetPut::Put#(b)))))))} {Generic#(ClientServer::Server#(a, b), Meta#(MetaData#("Server", "ClientServer", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("Server", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(GetPut::Put#(a))), Meta#(MetaField#("response", 1), Conc#(GetPut::Get#(b)))))))} {Generic#(Clock, ConcPrim#(Clock))} {Generic#(ClockHacks::BlockIfc, Meta#(MetaData#("BlockIfc", "ClockHacks", void, 1), Meta#(MetaConsNamed#("BlockIfc", 0, 2), Tuple2#(Meta#(MetaField#("clk", 0), Conc#(Clock)), Meta#(MetaField#("rst", 1), Conc#(Reset))))))} {Generic#(ClockHacks::OutputBit, Meta#(MetaData#("OutputBit", "ClockHacks", void, 1), Meta#(MetaConsNamed#("OutputBit", 0, 1), Meta#(MetaField#("out", 0), Conc#(Bit#(1))))))} {Generic#(ClockHacks::UnpackedClock, Meta#(MetaData#("UnpackedClock", "ClockHacks", void, 1), Meta#(MetaConsNamed#("UnpackedClock", 0, 2), Tuple2#(Meta#(MetaField#("clk", 0), Conc#(Clock)), Meta#(MetaField#("in", 1), Conc#(function Action f(Bit#(1) x1)))))))} {Generic#(ClockHacks::UnpackedReset, Meta#(MetaData#("UnpackedReset", "ClockHacks", void, 1), Meta#(MetaConsNamed#("UnpackedReset", 0, 2), Tuple2#(Meta#(MetaField#("rst", 0), Conc#(Reset)), Meta#(MetaField#("in", 1), Conc#(function Action f(Bit#(1) x1)))))))} {Generic#(ClockHacks::_ClockHacks.OutputBit13, Meta#(MetaData#("_ClockHacks.OutputBit13", "ClockHacks", void, 1), Meta#(MetaConsNamed#("_ClockHacks.OutputBit13", 0, 1), Meta#(MetaField#("out", 0), Conc#(Bit#(1))))))} {Generic#(ClockHacks::_ClockHacks.OutputBit27, Meta#(MetaData#("_ClockHacks.OutputBit27", "ClockHacks", void, 1), Meta#(MetaConsNamed#("_ClockHacks.OutputBit27", 0, 1), Meta#(MetaField#("out", 0), Conc#(Bit#(1))))))} {Generic#(ClockHacks::_ClockHacks.UnpackedClock47#(_n0), Meta#(MetaData#("_ClockHacks.UnpackedClock47", "ClockHacks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_ClockHacks.UnpackedClock47", 0, 2), Tuple2#(Meta#(MetaField#("clk", 0), Conc#(Clock)), Meta#(MetaField#("in", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(ClockHacks::_ClockHacks.UnpackedReset67#(_n0), Meta#(MetaData#("_ClockHacks.UnpackedReset67", "ClockHacks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_ClockHacks.UnpackedReset67", 0, 2), Tuple2#(Meta#(MetaField#("rst", 0), Conc#(Reset)), Meta#(MetaField#("in", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(Clocks::ClockDividerIfc, Meta#(MetaData#("ClockDividerIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("ClockDividerIfc", 0, 3), Tuple3#(Meta#(MetaField#("fastClock", 0), Conc#(Clock)), Meta#(MetaField#("slowClock", 1), Conc#(Clock)), Meta#(MetaField#("clockReady", 2), Conc#(Clocks::ClkNextRdy))))))} {Generic#(Clocks::ClockDivider_internal, Meta#(MetaData#("ClockDivider_internal", "Clocks", void, 1), Meta#(MetaConsNamed#("ClockDivider_internal", 0, 2), Tuple2#(Meta#(MetaField#("slowClock", 0), Conc#(Clock)), Meta#(MetaField#("clockReady", 1), Conc#(Clocks::ClkNextRdy))))))} {Generic#(Clocks::ClockGenIfc, Meta#(MetaData#("ClockGenIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("ClockGenIfc", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(Clocks::CrossingReg#(a), Meta#(MetaData#("CrossingReg", "Clocks", StarArg#(a), 1), Meta#(MetaConsNamed#("CrossingReg", 0, 3), Tuple3#(Meta#(MetaField#("_write", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("_read", 1), Conc#(a)), Meta#(MetaField#("crossed", 2), Conc#(a))))))} {Generic#(Clocks::DualPortRamIfc#(addr_t, data_t), Meta#(MetaData#("DualPortRamIfc", "Clocks", Tuple2#(StarArg#(addr_t), StarArg#(data_t)), 1), Meta#(MetaConsNamed#("DualPortRamIfc", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function Action f(addr_t x1, data_t x2))), Meta#(MetaField#("read", 1), Conc#(function data_t f(addr_t x1)))))))} {Generic#(Clocks::FIFOF_MC#(a), Meta#(MetaData#("FIFOF_MC", "Clocks", StarArg#(a), 1), Meta#(MetaConsNamed#("FIFOF_MC", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("i_notFull", 4), Conc#(Bool)), Meta#(MetaField#("notEmpty", 5), Conc#(Bool)), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bool))))))} {Generic#(Clocks::GatedClockIfc, Meta#(MetaData#("GatedClockIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("GatedClockIfc", 0, 3), Tuple3#(Meta#(MetaField#("setGateCond", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("getGateCond", 1), Conc#(Bool)), Meta#(MetaField#("new_clk", 2), Conc#(Clock))))))} {Generic#(Clocks::JoinRstIfc, Meta#(MetaData#("JoinRstIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("JoinRstIfc", 0, 1), Meta#(MetaField#("reset_out", 0), Conc#(Reset)))))} {Generic#(Clocks::MakeClockIfc#(one_bit_type), Meta#(MetaData#("MakeClockIfc", "Clocks", StarArg#(one_bit_type), 1), Meta#(MetaConsNamed#("MakeClockIfc", 0, 5), Tuple5#(Meta#(MetaField#("setClockValue", 0), Conc#(function Action f(one_bit_type x1))), Meta#(MetaField#("getClockValue", 1), Conc#(one_bit_type)), Meta#(MetaField#("setGateCond", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("getGateCond", 3), Conc#(Bool)), Meta#(MetaField#("new_clk", 4), Conc#(Clock))))))} {Generic#(Clocks::MakeResetIfc, Meta#(MetaData#("MakeResetIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("MakeResetIfc", 0, 3), Tuple3#(Meta#(MetaField#("assertReset", 0), Conc#(Action)), Meta#(MetaField#("isAsserted", 1), Conc#(Bool)), Meta#(MetaField#("new_rst", 2), Conc#(Reset))))))} {Generic#(Clocks::MakeUngatedClockIfc#(one_bit_type), Meta#(MetaData#("MakeUngatedClockIfc", "Clocks", StarArg#(one_bit_type), 1), Meta#(MetaConsNamed#("MakeUngatedClockIfc", 0, 6), Tuple6#(Meta#(MetaField#("setClockValue", 0), Conc#(function Action f(one_bit_type x1))), Meta#(MetaField#("getClockValue", 1), Conc#(one_bit_type)), Meta#(MetaField#("setGateCond", 2), Conc#(function Action f(Bool x1))), Meta#(MetaField#("getGateCond", 3), Conc#(Bool)), Meta#(MetaField#("unused", 4), Conc#(Bool)), Meta#(MetaField#("new_clk", 5), Conc#(Clock))))))} {Generic#(Clocks::MuxClkIfc, Meta#(MetaData#("MuxClkIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("MuxClkIfc", 0, 2), Tuple2#(Meta#(MetaField#("select", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("clock_out", 1), Conc#(Clock))))))} {Generic#(Clocks::MuxRstIfc, Meta#(MetaData#("MuxRstIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("MuxRstIfc", 0, 2), Tuple2#(Meta#(MetaField#("select", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("reset_out", 1), Conc#(Reset))))))} {Generic#(Clocks::RegI#(a_type), Meta#(MetaData#("RegI", "Clocks", StarArg#(a_type), 1), Meta#(MetaConsNamed#("RegI", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("read", 1), Conc#(a_type))))))} {Generic#(Clocks::ResetGenIfc, Meta#(MetaData#("ResetGenIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("ResetGenIfc", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(Clocks::SelectClkIfc, Meta#(MetaData#("SelectClkIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("SelectClkIfc", 0, 3), Tuple3#(Meta#(MetaField#("select", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("clock_out", 1), Conc#(Clock)), Meta#(MetaField#("reset_out", 2), Conc#(Reset))))))} {Generic#(Clocks::SyncBitIfc#(one_bit_type), Meta#(MetaData#("SyncBitIfc", "Clocks", StarArg#(one_bit_type), 1), Meta#(MetaConsNamed#("SyncBitIfc", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(function Action f(one_bit_type x1))), Meta#(MetaField#("read", 1), Conc#(one_bit_type))))))} {Generic#(Clocks::SyncFIFO0Ifc, Meta#(MetaData#("SyncFIFO0Ifc", "Clocks", void, 1), Meta#(MetaConsNamed#("SyncFIFO0Ifc", 0, 4), Tuple4#(Meta#(MetaField#("enq", 0), Conc#(Action)), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("notFull", 2), Conc#(Bool)), Meta#(MetaField#("notEmpty", 3), Conc#(Bool))))))} {Generic#(Clocks::SyncFIFOIfc#(a_type), Meta#(MetaData#("SyncFIFOIfc", "Clocks", StarArg#(a_type), 1), Meta#(MetaConsNamed#("SyncFIFOIfc", 0, 5), Tuple5#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("notEmpty", 4), Conc#(Bool))))))} {Generic#(Clocks::SyncPulseIfc, Meta#(MetaData#("SyncPulseIfc", "Clocks", void, 1), Meta#(MetaConsNamed#("SyncPulseIfc", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(Action)), Meta#(MetaField#("pulse", 1), Conc#(Bool))))))} {Generic#(Clocks::_Clocks.ClockDivider_internal589, Meta#(MetaData#("_Clocks.ClockDivider_internal589", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockDivider_internal589", 0, 2), Tuple2#(Meta#(MetaField#("slowClock", 0), Conc#(Clock)), Meta#(MetaField#("clockReady", 1), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.ClockDivider_internal606, Meta#(MetaData#("_Clocks.ClockDivider_internal606", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockDivider_internal606", 0, 2), Tuple2#(Meta#(MetaField#("slowClock", 0), Conc#(Clock)), Meta#(MetaField#("clockReady", 1), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.ClockDivider_internal618, Meta#(MetaData#("_Clocks.ClockDivider_internal618", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockDivider_internal618", 0, 2), Tuple2#(Meta#(MetaField#("slowClock", 0), Conc#(Clock)), Meta#(MetaField#("clockReady", 1), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.ClockDivider_internal647, Meta#(MetaData#("_Clocks.ClockDivider_internal647", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockDivider_internal647", 0, 2), Tuple2#(Meta#(MetaField#("slowClock", 0), Conc#(Clock)), Meta#(MetaField#("clockReady", 1), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.ClockGenIfc323, Meta#(MetaData#("_Clocks.ClockGenIfc323", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc323", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(Clocks::_Clocks.ClockGenIfc43, Meta#(MetaData#("_Clocks.ClockGenIfc43", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc43", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(Clocks::_Clocks.ClockGenIfc83, Meta#(MetaData#("_Clocks.ClockGenIfc83", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ClockGenIfc83", 0, 1), Meta#(MetaField#("gen_clk", 0), Conc#(Clock)))))} {Generic#(Clocks::_Clocks.CrossingReg1804#(_n0, _n1), Meta#(MetaData#("_Clocks.CrossingReg1804", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.CrossingReg1804", 0, 3), Tuple3#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("crossed", 2), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.CrossingReg1827#(_n0, _n1), Meta#(MetaData#("_Clocks.CrossingReg1827", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.CrossingReg1827", 0, 3), Tuple3#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("crossed", 2), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.CrossingReg1850#(_n0, _n1), Meta#(MetaData#("_Clocks.CrossingReg1850", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.CrossingReg1850", 0, 3), Tuple3#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("crossed", 2), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.DualPortRamIfc1604#(_n0, _n1, _n2), Meta#(MetaData#("_Clocks.DualPortRamIfc1604", "Clocks", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_Clocks.DualPortRamIfc1604", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function ActionValue_#(_n2) f(Bit#(_n1) x1, Bit#(_n0) x2))), Meta#(MetaField#("read", 1), Conc#(function Bit#(_n0) f(Bit#(_n1) x1)))))))} {Generic#(Clocks::_Clocks.FIFOF_MC2030#(_n0, _n1), Meta#(MetaData#("_Clocks.FIFOF_MC2030", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.FIFOF_MC2030", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.FIFOF_MC2103#(_n0, _n1), Meta#(MetaData#("_Clocks.FIFOF_MC2103", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.FIFOF_MC2103", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.GatedClockIfc283#(_n0), Meta#(MetaData#("_Clocks.GatedClockIfc283", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.GatedClockIfc283", 0, 3), Tuple3#(Meta#(MetaField#("setGateCond", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("getGateCond", 1), Conc#(Bit#(1))), Meta#(MetaField#("new_clk", 2), Conc#(Clock))))))} {Generic#(Clocks::_Clocks.JoinRstIfc2568, Meta#(MetaData#("_Clocks.JoinRstIfc2568", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.JoinRstIfc2568", 0, 1), Meta#(MetaField#("reset_out", 0), Conc#(Reset)))))} {Generic#(Clocks::_Clocks.MakeClockIfc160#(_n0), Meta#(MetaData#("_Clocks.MakeClockIfc160", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MakeClockIfc160", 0, 5), Tuple5#(Meta#(MetaField#("setClockValue", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("getClockValue", 1), Conc#(Bit#(1))), Meta#(MetaField#("setGateCond", 2), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("getGateCond", 3), Conc#(Bit#(1))), Meta#(MetaField#("new_clk", 4), Conc#(Clock))))))} {Generic#(Clocks::_Clocks.MakeResetIfc2276#(_n0), Meta#(MetaData#("_Clocks.MakeResetIfc2276", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MakeResetIfc2276", 0, 3), Tuple3#(Meta#(MetaField#("assertReset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("isAsserted", 1), Conc#(Bit#(1))), Meta#(MetaField#("new_rst", 2), Conc#(Reset))))))} {Generic#(Clocks::_Clocks.MakeResetIfc2297#(_n0), Meta#(MetaData#("_Clocks.MakeResetIfc2297", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MakeResetIfc2297", 0, 3), Tuple3#(Meta#(MetaField#("assertReset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("isAsserted", 1), Conc#(Bit#(1))), Meta#(MetaField#("new_rst", 2), Conc#(Reset))))))} {Generic#(Clocks::_Clocks.MakeResetIfc2318#(_n0), Meta#(MetaData#("_Clocks.MakeResetIfc2318", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MakeResetIfc2318", 0, 3), Tuple3#(Meta#(MetaField#("assertReset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("isAsserted", 1), Conc#(Bit#(1))), Meta#(MetaField#("new_rst", 2), Conc#(Reset))))))} {Generic#(Clocks::_Clocks.MakeUngatedClockIfc220#(_n0), Meta#(MetaData#("_Clocks.MakeUngatedClockIfc220", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MakeUngatedClockIfc220", 0, 6), Tuple6#(Meta#(MetaField#("setClockValue", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("getClockValue", 1), Conc#(Bit#(1))), Meta#(MetaField#("setGateCond", 2), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("getGateCond", 3), Conc#(Bit#(1))), Meta#(MetaField#("unused", 4), Conc#(Bit#(1))), Meta#(MetaField#("new_clk", 5), Conc#(Clock))))))} {Generic#(Clocks::_Clocks.MuxClkIfc363#(_n0), Meta#(MetaData#("_Clocks.MuxClkIfc363", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MuxClkIfc363", 0, 2), Tuple2#(Meta#(MetaField#("select", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clock_out", 1), Conc#(Clock))))))} {Generic#(Clocks::_Clocks.MuxClkIfc380#(_n0), Meta#(MetaData#("_Clocks.MuxClkIfc380", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MuxClkIfc380", 0, 2), Tuple2#(Meta#(MetaField#("select", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clock_out", 1), Conc#(Clock))))))} {Generic#(Clocks::_Clocks.MuxRstIfc2545#(_n0), Meta#(MetaData#("_Clocks.MuxRstIfc2545", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.MuxRstIfc2545", 0, 2), Tuple2#(Meta#(MetaField#("select", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("reset_out", 1), Conc#(Reset))))))} {Generic#(Clocks::_Clocks.RegI1170#(_n0, _n1), Meta#(MetaData#("_Clocks.RegI1170", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.RegI1170", 0, 3), Tuple3#(Meta#(MetaField#("write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("RDY_write", 1), Conc#(Bit#(1))), Meta#(MetaField#("read", 2), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.ResetGenIfc2341, Meta#(MetaData#("_Clocks.ResetGenIfc2341", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ResetGenIfc2341", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(Clocks::_Clocks.ResetGenIfc2355, Meta#(MetaData#("_Clocks.ResetGenIfc2355", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ResetGenIfc2355", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(Clocks::_Clocks.ResetGenIfc2369, Meta#(MetaData#("_Clocks.ResetGenIfc2369", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ResetGenIfc2369", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(Clocks::_Clocks.ResetGenIfc2382, Meta#(MetaData#("_Clocks.ResetGenIfc2382", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ResetGenIfc2382", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(Clocks::_Clocks.ResetGenIfc2612, Meta#(MetaData#("_Clocks.ResetGenIfc2612", "Clocks", void, 1), Meta#(MetaConsNamed#("_Clocks.ResetGenIfc2612", 0, 1), Meta#(MetaField#("gen_rst", 0), Conc#(Reset)))))} {Generic#(Clocks::_Clocks.SelectClkIfc421#(_n0), Meta#(MetaData#("_Clocks.SelectClkIfc421", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.SelectClkIfc421", 0, 3), Tuple3#(Meta#(MetaField#("select", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clock_out", 1), Conc#(Clock)), Meta#(MetaField#("reset_out", 2), Conc#(Reset))))))} {Generic#(Clocks::_Clocks.SelectClkIfc448#(_n0), Meta#(MetaData#("_Clocks.SelectClkIfc448", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.SelectClkIfc448", 0, 3), Tuple3#(Meta#(MetaField#("select", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("clock_out", 1), Conc#(Clock)), Meta#(MetaField#("reset_out", 2), Conc#(Reset))))))} {Generic#(Clocks::_Clocks.SyncBitIfc725#(_n0, _n1), Meta#(MetaData#("_Clocks.SyncBitIfc725", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.SyncBitIfc725", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.SyncBitIfc791#(_n0, _n1), Meta#(MetaData#("_Clocks.SyncBitIfc791", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.SyncBitIfc791", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.SyncBitIfc857#(_n0, _n1), Meta#(MetaData#("_Clocks.SyncBitIfc857", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.SyncBitIfc857", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.SyncBitIfc923#(_n0, _n1), Meta#(MetaData#("_Clocks.SyncBitIfc923", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.SyncBitIfc923", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_Clocks.SyncFIFO0Ifc1376#(_n0), Meta#(MetaData#("_Clocks.SyncFIFO0Ifc1376", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.SyncFIFO0Ifc1376", 0, 6), Tuple6#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("RDY_enq", 1), Conc#(Bit#(1))), Meta#(MetaField#("deq", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("RDY_deq", 3), Conc#(Bit#(1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.SyncFIFO0Ifc1417#(_n0), Meta#(MetaData#("_Clocks.SyncFIFO0Ifc1417", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.SyncFIFO0Ifc1417", 0, 6), Tuple6#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("RDY_enq", 1), Conc#(Bit#(1))), Meta#(MetaField#("deq", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("RDY_deq", 3), Conc#(Bit#(1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.SyncFIFOIfc1293#(_n0, _n1), Meta#(MetaData#("_Clocks.SyncFIFOIfc1293", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.SyncFIFOIfc1293", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("RDY_enq", 1), Conc#(Bit#(1))), Meta#(MetaField#("deq", 2), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("RDY_deq", 3), Conc#(Bit#(1))), Meta#(MetaField#("first", 4), Conc#(Bit#(_n0))), Meta#(MetaField#("RDY_first", 5), Conc#(Bit#(1))), Meta#(MetaField#("notFull", 6), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.SyncFIFOIfc1340#(_n0, _n1), Meta#(MetaData#("_Clocks.SyncFIFOIfc1340", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Clocks.SyncFIFOIfc1340", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("RDY_enq", 1), Conc#(Bit#(1))), Meta#(MetaField#("deq", 2), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("RDY_deq", 3), Conc#(Bit#(1))), Meta#(MetaField#("first", 4), Conc#(Bit#(_n0))), Meta#(MetaField#("RDY_first", 5), Conc#(Bit#(1))), Meta#(MetaField#("notFull", 6), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.SyncPulseIfc1003#(_n0), Meta#(MetaData#("_Clocks.SyncPulseIfc1003", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.SyncPulseIfc1003", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("pulse", 1), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Clocks.SyncPulseIfc1071#(_n0), Meta#(MetaData#("_Clocks.SyncPulseIfc1071", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Clocks.SyncPulseIfc1071", 0, 3), Tuple3#(Meta#(MetaField#("send", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("RDY_send", 1), Conc#(Bit#(1))), Meta#(MetaField#("pulse", 2), Conc#(Bit#(1)))))))} {Generic#(Clocks::_Prelude.Reg1927#(_n0, _n1), Meta#(MetaData#("_Prelude.Reg1927", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Prelude.Reg1927", 0, 2), Tuple2#(Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Clocks::_PreludeBSV.ReadOnly1629#(_n0), Meta#(MetaData#("_PreludeBSV.ReadOnly1629", "Clocks", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.ReadOnly1629", 0, 1), Meta#(MetaField#("_read", 0), Conc#(Bit#(_n0))))))} {Generic#(Clocks::_PreludeBSV.ReadOnly2598, Meta#(MetaData#("_PreludeBSV.ReadOnly2598", "Clocks", void, 1), Meta#(MetaConsNamed#("_PreludeBSV.ReadOnly2598", 0, 1), Meta#(MetaField#("_read", 0), Conc#(Bit#(1))))))} {Generic#(Clocks::_PreludeBSV.VWire1654#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VWire1654", "Clocks", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VWire1654", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0)))))))} {Generic#(Cntrs::Count#(t), Meta#(MetaData#("Count", "Cntrs", StarArg#(t), 1), Meta#(MetaConsNamed#("Count", 0, 5), Tuple5#(Meta#(MetaField#("incr", 0), Conc#(function Action f(t x1))), Meta#(MetaField#("decr", 1), Conc#(function Action f(t x1))), Meta#(MetaField#("update", 2), Conc#(function Action f(t x1))), Meta#(MetaField#("_write", 3), Conc#(function Action f(t x1))), Meta#(MetaField#("_read", 4), Conc#(t))))))} {Generic#(Cntrs::UCount, Meta#(MetaData#("UCount", "Cntrs", void, 1), Meta#(MetaConsNamed#("UCount", 0, 7), Tuple7#(Meta#(MetaField#("update", 0), Conc#(function Action f(Integer x1))), Meta#(MetaField#("_write", 1), Conc#(function Action f(Integer x1))), Meta#(MetaField#("incr", 2), Conc#(function Action f(Integer x1))), Meta#(MetaField#("decr", 3), Conc#(function Action f(Integer x1))), Meta#(MetaField#("isEqual", 4), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("isLessThan", 5), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("isGreaterThan", 6), Conc#(function Bool f(Integer x1)))))))} {Generic#(Cntrs::VCount#(t), Meta#(MetaData#("VCount", "Cntrs", StarArg#(t), 1), Meta#(MetaConsNamed#("VCount", 0, 5), Tuple5#(Meta#(MetaField#("incrA", 0), Conc#(function Action f(t x1))), Meta#(MetaField#("incrB", 1), Conc#(function Action f(t x1))), Meta#(MetaField#("update", 2), Conc#(function Action f(t x1))), Meta#(MetaField#("_write", 3), Conc#(function Action f(t x1))), Meta#(MetaField#("_read", 4), Conc#(t))))))} {Generic#(Cntrs::_Cntrs.VCount63#(_n0, _n1), Meta#(MetaData#("_Cntrs.VCount63", "Cntrs", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Cntrs.VCount63", 0, 5), Tuple5#(Meta#(MetaField#("incrA", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("incrB", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("update", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_write", 3), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("_read", 4), Conc#(Bit#(_n0)))))))} {Generic#(CommitIfc::ClientCommit#(req, resp), Meta#(MetaData#("ClientCommit", "CommitIfc", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("ClientCommit", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(CommitIfc::SendCommit#(req))), Meta#(MetaField#("response", 1), Conc#(CommitIfc::RecvCommit#(resp)))))))} {Generic#(CommitIfc::RecvCommit#(a), Meta#(MetaData#("RecvCommit", "CommitIfc", StarArg#(a), 1), Meta#(MetaConsNamed#("RecvCommit", 0, 2), Tuple2#(Meta#(MetaField#("datain", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("accept", 1), Conc#(Bool))))))} {Generic#(CommitIfc::SendCommit#(a), Meta#(MetaData#("SendCommit", "CommitIfc", StarArg#(a), 1), Meta#(MetaConsNamed#("SendCommit", 0, 2), Tuple2#(Meta#(MetaField#("dataout", 0), Conc#(a)), Meta#(MetaField#("ack", 1), Conc#(Action))))))} {Generic#(CommitIfc::ServerCommit#(req, resp), Meta#(MetaData#("ServerCommit", "CommitIfc", Tuple2#(StarArg#(req), StarArg#(resp)), 1), Meta#(MetaConsNamed#("ServerCommit", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(CommitIfc::RecvCommit#(req))), Meta#(MetaField#("response", 1), Conc#(CommitIfc::SendCommit#(resp)))))))} {Generic#(CompletionBuffer::CompletionBuffer#(n, a), Meta#(MetaData#("CompletionBuffer", "CompletionBuffer", Tuple2#(NumArg#(n), StarArg#(a)), 1), Meta#(MetaConsNamed#("CompletionBuffer", 0, 3), Tuple3#(Meta#(MetaField#("reserve", 0), Conc#(GetPut::Get#(CompletionBuffer::CBToken#(n)))), Meta#(MetaField#("complete", 1), Conc#(GetPut::Put#(Tuple2#(CompletionBuffer::CBToken#(n), a)))), Meta#(MetaField#("drain", 2), Conc#(GetPut::Get#(a)))))))} {Generic#(Complex::Complex#(any_t), Meta#(MetaData#("Complex", "Complex", StarArg#(any_t), 1), Meta#(MetaConsNamed#("Complex", 0, 2), Tuple2#(Meta#(MetaField#("rel", 0), Conc#(any_t)), Meta#(MetaField#("img", 1), Conc#(any_t))))))} {Generic#(ConArg, Meta#(MetaData#("ConArg", "Prelude", void, 1), Meta#(MetaConsAnon#("ConArg", 0, 0), void)))} {Generic#(Conc#(a), Meta#(MetaData#("Conc", "Prelude", StarArg#(a), 1), Meta#(MetaConsAnon#("Conc", 0, 1), Meta#(MetaField#("_1", 0), Conc#(a)))))} {Generic#(ConcPoly#(a), Meta#(MetaData#("ConcPoly", "Prelude", StarArg#(a), 1), Meta#(MetaConsAnon#("ConcPoly", 0, 1), Meta#(MetaField#("_1", 0), Conc#(a)))))} {Generic#(ConcPrim#(a), Meta#(MetaData#("ConcPrim", "Prelude", StarArg#(a), 1), Meta#(MetaConsAnon#("ConcPrim", 0, 1), Meta#(MetaField#("_1", 0), Conc#(a)))))} {Generic#(ConfigReg::VReg#(n), Meta#(MetaData#("VReg", "ConfigReg", NumArg#(n), 1), Meta#(MetaConsNamed#("VReg", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(n)))))))} {Generic#(Core_IFC::Core_IFC#(t_n_interrupt_sources), Meta#(MetaData#("Core_IFC", "Core_IFC", NumArg#(t_n_interrupt_sources), 1), Meta#(MetaConsNamed#("Core_IFC", 0, 11), Tuple11#(Meta#(MetaField#("cpu_reset_server", 0), Conc#(ClientServer::Server#(Bool, Bool))), Meta#(MetaField#("cpu_imem_master", 1), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, 0, 0, 0, 0, 0))), Meta#(MetaField#("core_mem_master", 2), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId_ext, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, Fabric_Defs::Wd_AW_User_ext, Fabric_Defs::Wd_W_User_ext, Fabric_Defs::Wd_B_User_ext, Fabric_Defs::Wd_AR_User_ext, Fabric_Defs::Wd_R_User_ext))), Meta#(MetaField#("dma_server", 3), Conc#(AXI4_Types::AXI4_Slave#(Near_Mem_IFC::Wd_Id_Dma, Near_Mem_IFC::Wd_Addr_Dma, Near_Mem_IFC::Wd_Data_Dma, Near_Mem_IFC::Wd_AW_User_Dma, Near_Mem_IFC::Wd_W_User_Dma, Near_Mem_IFC::Wd_B_User_Dma, Near_Mem_IFC::Wd_AR_User_Dma, Near_Mem_IFC::Wd_R_User_Dma))), Meta#(MetaField#("core_external_interrupt_sources", 4), Conc#(Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC))), Meta#(MetaField#("nmi_req", 5), Conc#(function Action f(Bool x1))), Meta#(MetaField#("dm_dmi", 6), Conc#(DM_Common::DMI)), Meta#(MetaField#("ndm_reset_client", 7), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("set_verbosity", 8), Conc#(function Action f(Bit#(4) x1, Bit#(64) x2))), Meta#(MetaField#("ma_ddr4_ready", 9), Conc#(Action)), Meta#(MetaField#("mv_status", 10), Conc#(Bit#(8)))))))} {Generic#(Core_IFC::Core_IFC_Synth#(t_n_interrupt_sources), Meta#(MetaData#("Core_IFC_Synth", "Core_IFC", NumArg#(t_n_interrupt_sources), 1), Meta#(MetaConsNamed#("Core_IFC_Synth", 0, 11), Tuple11#(Meta#(MetaField#("cpu_reset_server", 0), Conc#(ClientServer::Server#(Bool, Bool))), Meta#(MetaField#("cpu_imem_master", 1), Conc#(AXI4_Types::AXI4_Master_Sig#(Fabric_Defs::Wd_MId, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, 0, 0, 0, 0, 0))), Meta#(MetaField#("core_mem_master", 2), Conc#(AXI4_Types::AXI4_Master_Sig#(Fabric_Defs::Wd_MId_ext, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, Fabric_Defs::Wd_AW_User_ext, Fabric_Defs::Wd_W_User_ext, Fabric_Defs::Wd_B_User_ext, Fabric_Defs::Wd_AR_User_ext, Fabric_Defs::Wd_R_User_ext))), Meta#(MetaField#("dma_server", 3), Conc#(AXI4_Types::AXI4_Slave_Sig#(Near_Mem_IFC::Wd_Id_Dma, Near_Mem_IFC::Wd_Addr_Dma, Near_Mem_IFC::Wd_Data_Dma, Near_Mem_IFC::Wd_AW_User_Dma, Near_Mem_IFC::Wd_W_User_Dma, Near_Mem_IFC::Wd_B_User_Dma, Near_Mem_IFC::Wd_AR_User_Dma, Near_Mem_IFC::Wd_R_User_Dma))), Meta#(MetaField#("core_external_interrupt_sources", 4), Conc#(Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC))), Meta#(MetaField#("nmi_req", 5), Conc#(function Action f(Bool x1))), Meta#(MetaField#("dm_dmi", 6), Conc#(DM_Common::DMI)), Meta#(MetaField#("ndm_reset_client", 7), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("set_verbosity", 8), Conc#(function Action f(Bit#(4) x1, Bit#(64) x2))), Meta#(MetaField#("ma_ddr4_ready", 9), Conc#(Action)), Meta#(MetaField#("mv_status", 10), Conc#(Bit#(8)))))))} {Generic#(Counter::Counter#(n), Meta#(MetaData#("Counter", "Counter", NumArg#(n), 1), Meta#(MetaConsNamed#("Counter", 0, 8), Tuple8#(Meta#(MetaField#("inc", 0), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("dec", 1), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("up", 2), Conc#(Action)), Meta#(MetaField#("down", 3), Conc#(Action)), Meta#(MetaField#("value", 4), Conc#(Bit#(n))), Meta#(MetaField#("setC", 5), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("setF", 6), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("clear", 7), Conc#(Action))))))} {Generic#(Counter::VCounter#(n), Meta#(MetaData#("VCounter", "Counter", NumArg#(n), 1), Meta#(MetaConsNamed#("VCounter", 0, 5), Tuple5#(Meta#(MetaField#("addA", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("addB", 1), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("value", 2), Conc#(Bit#(n))), Meta#(MetaField#("setC", 3), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("setF", 4), Conc#(function PrimAction f(Bit#(n) x1)))))))} {Generic#(CreditCounter::CreditCounter_IFC#(w), Meta#(MetaData#("CreditCounter_IFC", "CreditCounter", NumArg#(w), 1), Meta#(MetaConsNamed#("CreditCounter_IFC", 0, 4), Tuple4#(Meta#(MetaField#("value", 0), Conc#(UInt#(w))), Meta#(MetaField#("incr", 1), Conc#(Action)), Meta#(MetaField#("decr", 2), Conc#(Action)), Meta#(MetaField#("clear", 3), Conc#(Action))))))} {Generic#(DM_Abstract_Commands::DM_Abstract_Commands_IFC, Meta#(MetaData#("DM_Abstract_Commands_IFC", "DM_Abstract_Commands", void, 1), Meta#(MetaConsNamed#("DM_Abstract_Commands_IFC", 0, 6), Tuple6#(Meta#(MetaField#("reset", 0), Conc#(Action)), Meta#(MetaField#("av_read", 1), Conc#(function ActionValue#(DM_Common::DM_Word) f(DM_Common::DM_Addr x1))), Meta#(MetaField#("write", 2), Conc#(function Action f(DM_Common::DM_Addr x1, DM_Common::DM_Word x2))), Meta#(MetaField#("hart0_gpr_mem_client", 3), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("hart0_fpr_mem_client", 4), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::FLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::FLEN)))), Meta#(MetaField#("hart0_csr_mem_client", 5), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN))))))))} {Generic#(DM_CPU_Req_Rsp::DM_CPU_Req#(a, d), Meta#(MetaData#("DM_CPU_Req", "DM_CPU_Req_Rsp", Tuple2#(NumArg#(a), NumArg#(d)), 1), Meta#(MetaConsNamed#("DM_CPU_Req", 0, 3), Tuple3#(Meta#(MetaField#("write", 0), Conc#(Bool)), Meta#(MetaField#("address", 1), Conc#(Bit#(a))), Meta#(MetaField#("data", 2), Conc#(Bit#(d)))))))} {Generic#(DM_CPU_Req_Rsp::DM_CPU_Rsp#(d), Meta#(MetaData#("DM_CPU_Rsp", "DM_CPU_Req_Rsp", NumArg#(d), 1), Meta#(MetaConsNamed#("DM_CPU_Rsp", 0, 2), Tuple2#(Meta#(MetaField#("ok", 0), Conc#(Bool)), Meta#(MetaField#("data", 1), Conc#(Bit#(d)))))))} {Generic#(DM_Common::DCSR_Cause, Meta#(MetaData#("DCSR_Cause", "DM_Common", void, 8), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_RESERVED0", 0, 0), void), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_EBREAK", 1, 0), void), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_TRIGGER", 2, 0), void), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_HALTREQ", 3, 0), void), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_STEP", 4, 0), void), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_RESERVED5", 5, 0), void), Either#(Meta#(MetaConsAnon#("DCSR_CAUSE_RESERVED6", 6, 0), void), Meta#(MetaConsAnon#("DCSR_CAUSE_RESERVED7", 7, 0), void))))))))))} {Generic#(DM_Common::DMI, Meta#(MetaData#("DMI", "DM_Common", void, 1), Meta#(MetaConsNamed#("DMI", 0, 3), Tuple3#(Meta#(MetaField#("read_addr", 0), Conc#(function Action f(DM_Common::DM_Addr x1))), Meta#(MetaField#("read_data", 1), Conc#(ActionValue#(DM_Common::DM_Word))), Meta#(MetaField#("write", 2), Conc#(function Action f(DM_Common::DM_Addr x1, DM_Common::DM_Word x2)))))))} {Generic#(DM_Common::DM_abstractcs_cmderr, Meta#(MetaData#("DM_abstractcs_cmderr", "DM_Common", void, 8), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_NONE", 0, 0), void), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_BUSY", 1, 0), void), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_NOT_SUPPORTED", 2, 0), void), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_EXCEPTION", 3, 0), void), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_HALT_RESUME", 4, 0), void), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_UNDEF5", 5, 0), void), Either#(Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_UNDEF6", 6, 0), void), Meta#(MetaConsAnon#("DM_ABSTRACTCS_CMDERR_OTHER", 7, 0), void))))))))))} {Generic#(DM_Common::DM_command_access_reg_size, Meta#(MetaData#("DM_command_access_reg_size", "DM_Common", void, 8), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_UNDEF0", 0, 0), void), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_UNDEF1", 1, 0), void), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_LOWER32", 2, 0), void), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_LOWER64", 3, 0), void), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_LOWER128", 4, 0), void), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_UNDEF5", 5, 0), void), Either#(Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_UNDEF6", 6, 0), void), Meta#(MetaConsAnon#("DM_COMMAND_ACCESS_REG_SIZE_UNDEF7", 7, 0), void))))))))))} {Generic#(DM_Common::DM_command_cmdtype, Meta#(MetaData#("DM_command_cmdtype", "DM_Common", void, 2), Either#(Meta#(MetaConsAnon#("DM_COMMAND_CMDTYPE_ACCESS_REG", 0, 0), void), Meta#(MetaConsAnon#("DM_COMMAND_CMDTYPE_QUICK_ACCESS", 1, 0), void))))} {Generic#(DM_Common::DM_sbaccess, Meta#(MetaData#("DM_sbaccess", "DM_Common", void, 5), Either#(Meta#(MetaConsAnon#("DM_SBACCESS_8_BIT", 0, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBACCESS_16_BIT", 1, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBACCESS_32_BIT", 2, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBACCESS_64_BIT", 3, 0), void), Meta#(MetaConsAnon#("DM_SBACCESS_128_BIT", 4, 0), void)))))))} {Generic#(DM_Common::DM_sberror, Meta#(MetaData#("DM_sberror", "DM_Common", void, 8), Either#(Meta#(MetaConsAnon#("DM_SBERROR_NONE", 0, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBERROR_TIMEOUT", 1, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBERROR_BADADDR", 2, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBERROR_OTHER", 3, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBERROR_BUSY_STALE", 4, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBERROR_UNDEF5", 5, 0), void), Either#(Meta#(MetaConsAnon#("DM_SBERROR_UNDEF6", 6, 0), void), Meta#(MetaConsAnon#("DM_SBERROR_UNDEF7_W1C", 7, 0), void))))))))))} {Generic#(DM_Run_Control::DM_Run_Control_IFC, Meta#(MetaData#("DM_Run_Control_IFC", "DM_Run_Control", void, 1), Meta#(MetaConsNamed#("DM_Run_Control_IFC", 0, 8), Tuple8#(Meta#(MetaField#("dmactive", 0), Conc#(Bool)), Meta#(MetaField#("reset", 1), Conc#(Action)), Meta#(MetaField#("av_read", 2), Conc#(function ActionValue#(DM_Common::DM_Word) f(DM_Common::DM_Addr x1))), Meta#(MetaField#("write", 3), Conc#(function Action f(DM_Common::DM_Addr x1, DM_Common::DM_Word x2))), Meta#(MetaField#("hart0_reset_client", 4), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("hart0_client_run_halt", 5), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("hart0_get_other_req", 6), Conc#(GetPut::Get#(Bit#(4)))), Meta#(MetaField#("ndm_reset_client", 7), Conc#(ClientServer::Client#(Bool, Bool)))))))} {Generic#(DM_System_Bus::DM_System_Bus_IFC, Meta#(MetaData#("DM_System_Bus_IFC", "DM_System_Bus", void, 1), Meta#(MetaConsNamed#("DM_System_Bus_IFC", 0, 4), Tuple4#(Meta#(MetaField#("reset", 0), Conc#(Action)), Meta#(MetaField#("av_read", 1), Conc#(function ActionValue#(DM_Common::DM_Word) f(DM_Common::DM_Addr x1))), Meta#(MetaField#("write", 2), Conc#(function Action f(DM_Common::DM_Addr x1, DM_Common::DM_Word x2))), Meta#(MetaField#("master", 3), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId_2x3, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data_Periph, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User)))))))} {Generic#(DM_System_Bus::SB_State, Meta#(MetaData#("SB_State", "DM_System_Bus", void, 3), Either#(Meta#(MetaConsAnon#("SB_NOTBUSY", 0, 0), void), Either#(Meta#(MetaConsAnon#("SB_READ_FINISH", 1, 0), void), Meta#(MetaConsAnon#("SB_WRITE_FINISH", 2, 0), void)))))} {Generic#(DPSRAM::VSyncSRAM#(adrs, dtas), Meta#(MetaData#("VSyncSRAM", "DPSRAM", Tuple2#(NumArg#(adrs), NumArg#(dtas)), 1), Meta#(MetaConsNamed#("VSyncSRAM", 0, 4), Tuple4#(Meta#(MetaField#("execA", 0), Conc#(function PrimAction f(Bit#(adrs) x1, Bit#(dtas) x2, Bit#(1) x3, Bit#(1) x4))), Meta#(MetaField#("rdataA", 1), Conc#(Bit#(dtas))), Meta#(MetaField#("execB", 2), Conc#(function PrimAction f(Bit#(adrs) x1, Bit#(dtas) x2, Bit#(1) x3, Bit#(1) x4))), Meta#(MetaField#("rdataB", 3), Conc#(Bit#(dtas)))))))} {Generic#(Debug::Debug#(a, b), Meta#(MetaData#("Debug", "Debug", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("Debug", 0, 2), Tuple2#(Meta#(MetaField#("inf", 0), Conc#(a)), Meta#(MetaField#("debugging", 1), Conc#(b))))))} {Generic#(Debug::Display#(a), Meta#(MetaData#("Display", "Debug", StarArg#(a), 1), Meta#(MetaConsNamed#("Display", 0, 1), Meta#(MetaField#("debug_display", 0), Conc#(function Action f(a x1))))))} {Generic#(Debug_Module::Debug_Module_IFC, Meta#(MetaData#("Debug_Module_IFC", "Debug_Module", void, 1), Meta#(MetaConsNamed#("Debug_Module_IFC", 0, 9), Tuple9#(Meta#(MetaField#("dmi", 0), Conc#(DM_Common::DMI)), Meta#(MetaField#("hart0_reset_client", 1), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("hart0_client_run_halt", 2), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("hart0_get_other_req", 3), Conc#(GetPut::Get#(Bit#(4)))), Meta#(MetaField#("hart0_gpr_mem_client", 4), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("hart0_fpr_mem_client", 5), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::FLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::FLEN)))), Meta#(MetaField#("hart0_csr_mem_client", 6), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("ndm_reset_client", 7), Conc#(ClientServer::Client#(Bool, Bool))), Meta#(MetaField#("master", 8), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId_2x3, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data_Periph, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User)))))))} {Generic#(EX_ALU_functions::ALU_Inputs, Meta#(MetaData#("ALU_Inputs", "EX_ALU_functions", void, 1), Meta#(MetaConsNamed#("ALU_Inputs", 0, 20), Tuple20#(Meta#(MetaField#("cur_priv", 0), Conc#(ISA_Decls::Priv_Mode)), Meta#(MetaField#("pcc", 1), Conc#(CPU_Globals::PCC_T)), Meta#(MetaField#("ddc", 2), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("rs1_idx", 3), Conc#(Bit#(5))), Meta#(MetaField#("rs2_idx", 4), Conc#(Bit#(5))), Meta#(MetaField#("pc", 5), Conc#(ISA_Decls::Addr)), Meta#(MetaField#("is_i32_not_i16", 6), Conc#(Bool)), Meta#(MetaField#("instr", 7), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("instr_or_instr_C", 8), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("decoded_instr", 9), Conc#(ISA_Decls::Decoded_Instr)), Meta#(MetaField#("rs1_val", 10), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("rs2_val", 11), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mstatus", 12), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("frm", 13), Conc#(Bit#(3))), Meta#(MetaField#("frs1_val", 14), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("frs2_val", 15), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("frs3_val", 16), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("cap_rs1_val", 17), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("cap_rs2_val", 18), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("misa", 19), Conc#(ISA_Decls::MISA))))))} {Generic#(EX_ALU_functions::ALU_Outputs, Meta#(MetaData#("ALU_Outputs", "EX_ALU_functions", void, 1), Meta#(MetaConsNamed#("ALU_Outputs", 0, 36), Tuple36#(Meta#(MetaField#("control", 0), Conc#(CPU_Globals::Control)), Meta#(MetaField#("exc_code", 1), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("cheri_exc_code", 2), Conc#(ISA_Decls::CHERI_Exc_Code)), Meta#(MetaField#("cheri_exc_reg", 3), Conc#(Bit#(6))), Meta#(MetaField#("op_stage2", 4), Conc#(CPU_Globals::Op_Stage2)), Meta#(MetaField#("rd", 5), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("addr", 6), Conc#(ISA_Decls::Addr)), Meta#(MetaField#("val1", 7), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("val2", 8), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("val1_fast", 9), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("val2_fast", 10), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("fval1", 11), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("fval2", 12), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("fval3", 13), Conc#(ISA_Decls::WordFL)), Meta#(MetaField#("rd_in_fpr", 14), Conc#(Bool)), Meta#(MetaField#("rs_frm_fpr", 15), Conc#(Bool)), Meta#(MetaField#("val1_frm_gpr", 16), Conc#(Bool)), Meta#(MetaField#("rm", 17), Conc#(Bit#(3))), Meta#(MetaField#("mem_width_code", 18), Conc#(Bit#(3))), Meta#(MetaField#("mem_unsigned", 19), Conc#(Bool)), Meta#(MetaField#("mem_allow_cap", 20), Conc#(Bool)), Meta#(MetaField#("pcc", 21), Conc#(CPU_Globals::PCC_T)), Meta#(MetaField#("cap_val1", 22), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("cap_val2", 23), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("val1_cap_not_int", 24), Conc#(Bool)), Meta#(MetaField#("val2_cap_not_int", 25), Conc#(Bool)), Meta#(MetaField#("check_enable", 26), Conc#(Bool)), Meta#(MetaField#("check_authority", 27), Conc#(CHERICC_Fat::CapPipe)), Meta#(MetaField#("check_authority_idx", 28), Conc#(Bit#(6))), Meta#(MetaField#("check_address_low", 29), Conc#(Bit#(ISA_Decls::XLEN))), Meta#(MetaField#("check_address_high", 30), Conc#(Bit#(TAdd#(ISA_Decls::XLEN, 1)))), Meta#(MetaField#("check_inclusive", 31), Conc#(Bool)), Meta#(MetaField#("check_exact_enable", 32), Conc#(Bool)), Meta#(MetaField#("check_exact_success", 33), Conc#(Bool)), Meta#(MetaField#("set_offset_in_bounds", 34), Conc#(Bool)), Meta#(MetaField#("cf_info", 35), Conc#(CPU_Globals::CF_Info))))))} {Generic#(EX_ALU_functions::Output_Select, Meta#(MetaData#("Output_Select", "EX_ALU_functions", void, 5), Either#(Meta#(MetaConsAnon#("LITERAL", 0, 0), void), Either#(Meta#(MetaConsAnon#("MODIFY_OFFSET", 1, 0), void), Either#(Meta#(MetaConsAnon#("SET_BOUNDS", 2, 0), void), Either#(Meta#(MetaConsAnon#("SET_ADDR", 3, 0), void), Meta#(MetaConsAnon#("GET_PRECISION", 4, 0), void)))))))} {Generic#(EdgeDetect::RequestDetect, Meta#(MetaData#("RequestDetect", "EdgeDetect", void, 1), Meta#(MetaConsNamed#("RequestDetect", 0, 4), Tuple4#(Meta#(MetaField#("send", 0), Conc#(Action)), Meta#(MetaField#("pulse", 1), Conc#(Bool)), Meta#(MetaField#("pending", 2), Conc#(Bool)), Meta#(MetaField#("ack", 3), Conc#(Action))))))} {Generic#(Either#(a, b), Meta#(MetaData#("Either", "Prelude", Tuple2#(StarArg#(a), StarArg#(b)), 2), Either#(Meta#(MetaConsAnon#("Left", 0, 1), Meta#(MetaField#("_1", 0), Conc#(a))), Meta#(MetaConsAnon#("Right", 1, 1), Meta#(MetaField#("_1", 0), Conc#(b))))))} {Generic#(Empty, Meta#(MetaData#("Empty", "Prelude", void, 1), Meta#(MetaConsNamed#("Empty", 0, 0), void)))} {Generic#(FBox_Core::FBoxResult, Meta#(MetaData#("FBoxResult", "FBox_Core", void, 1), Meta#(MetaConsNamed#("FBoxResult", 0, 2), Tuple2#(Meta#(MetaField#("value", 0), Conc#(Bit#(64))), Meta#(MetaField#("flags", 1), Conc#(Bit#(5)))))))} {Generic#(FBox_Core::FBoxState, Meta#(MetaData#("FBoxState", "FBox_Core", void, 4), Either#(Meta#(MetaConsAnon#("FBOX_RST", 0, 0), void), Either#(Meta#(MetaConsAnon#("FBOX_REQ", 1, 0), void), Either#(Meta#(MetaConsAnon#("FBOX_BUSY", 2, 0), void), Meta#(MetaConsAnon#("FBOX_RSP", 3, 0), void))))))} {Generic#(FBox_Core::FBox_Core_IFC, Meta#(MetaData#("FBox_Core_IFC", "FBox_Core", void, 1), Meta#(MetaConsNamed#("FBox_Core_IFC", 0, 4), Tuple4#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("req", 1), Conc#(function Action f(ISA_Decls::Opcode x1, Bit#(7) x2, Bit#(3) x3, ISA_Decls::RegName x4, Bit#(64) x5, Bit#(64) x6, Bit#(64) x7, Bool x8))), Meta#(MetaField#("valid", 2), Conc#(Bool)), Meta#(MetaField#("word", 3), Conc#(Tuple2#(Bit#(64), Bit#(5))))))))} {Generic#(FBox_Top::FBox_Top_IFC, Meta#(MetaData#("FBox_Top_IFC", "FBox_Top", void, 1), Meta#(MetaConsNamed#("FBox_Top_IFC", 0, 4), Tuple4#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("req", 1), Conc#(function Action f(ISA_Decls::Opcode x1, Bit#(7) x2, Bit#(3) x3, ISA_Decls::RegName x4, Bit#(64) x5, Bit#(64) x6, Bit#(64) x7, Bool x8))), Meta#(MetaField#("valid", 2), Conc#(Bool)), Meta#(MetaField#("word", 3), Conc#(Tuple2#(Bit#(64), Bit#(5))))))))} {Generic#(FF::FF#(data, depth), Meta#(MetaData#("FF", "FF", Tuple2#(StarArg#(data), NumArg#(depth)), 1), Meta#(MetaConsNamed#("FF", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(function Action f(data x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(data)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("notEmpty", 4), Conc#(Bool)), Meta#(MetaField#("clear", 5), Conc#(Action)), Meta#(MetaField#("remaining", 6), Conc#(Bit#(TAdd#(TLog#(depth), 1))))))))} {Generic#(FF::FFNext#(data, depth), Meta#(MetaData#("FFNext", "FF", Tuple2#(StarArg#(data), NumArg#(depth)), 1), Meta#(MetaConsNamed#("FFNext", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function Action f(data x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(data)), Meta#(MetaField#("next", 3), Conc#(data)), Meta#(MetaField#("notFull", 4), Conc#(Bool)), Meta#(MetaField#("notEmpty", 5), Conc#(Bool)), Meta#(MetaField#("nextNotEmpty", 6), Conc#(Bool)), Meta#(MetaField#("remaining", 7), Conc#(Bit#(TAdd#(TLog#(depth), 1))))))))} {Generic#(FIFO::FIFO#(a), Meta#(MetaData#("FIFO", "FIFO", StarArg#(a), 1), Meta#(MetaConsNamed#("FIFO", 0, 4), Tuple4#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("clear", 3), Conc#(Action))))))} {Generic#(FIFOF::FIFOF#(a), Meta#(MetaData#("FIFOF", "FIFOF", StarArg#(a), 1), Meta#(MetaConsNamed#("FIFOF", 0, 6), Tuple6#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("notEmpty", 4), Conc#(Bool)), Meta#(MetaField#("clear", 5), Conc#(Action))))))} {Generic#(FIFOF_::FIFOF_#(a), Meta#(MetaData#("FIFOF_", "FIFOF_", StarArg#(a), 1), Meta#(MetaConsNamed#("FIFOF_", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("clear", 3), Conc#(Action)), Meta#(MetaField#("notFull", 4), Conc#(Bool)), Meta#(MetaField#("i_notFull", 5), Conc#(Bool)), Meta#(MetaField#("notEmpty", 6), Conc#(Bool)), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bool))))))} {Generic#(FIFOF_::VFIFOF0_, Meta#(MetaData#("VFIFOF0_", "FIFOF_", void, 1), Meta#(MetaConsNamed#("VFIFOF0_", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(Action)), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("clear", 2), Conc#(Action)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("i_notFull", 4), Conc#(Bool)), Meta#(MetaField#("notEmpty", 5), Conc#(Bool)), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bool))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_143#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_143", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_143", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_236#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_236", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_236", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_346#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_346", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_346", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_380#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_380", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_380", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_482#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_482", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_482", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_573#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_573", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_573", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_60#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_60", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_60", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.FIFOF_607#(_n0, _n1), Meta#(MetaData#("_FIFOF_.FIFOF_607", "FIFOF_", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOF_.FIFOF_607", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("clear", 3), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 5), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 6), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 7), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.VFIFOF0_171#(_n0), Meta#(MetaData#("_FIFOF_.VFIFOF0_171", "FIFOF_", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_FIFOF_.VFIFOF0_171", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("clear", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.VFIFOF0_266#(_n0), Meta#(MetaData#("_FIFOF_.VFIFOF0_266", "FIFOF_", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_FIFOF_.VFIFOF0_266", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("clear", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.VFIFOF0_424#(_n0), Meta#(MetaData#("_FIFOF_.VFIFOF0_424", "FIFOF_", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_FIFOF_.VFIFOF0_424", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("clear", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.VFIFOF0_514#(_n0), Meta#(MetaData#("_FIFOF_.VFIFOF0_514", "FIFOF_", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_FIFOF_.VFIFOF0_514", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("clear", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.VFIFOF0_641#(_n0), Meta#(MetaData#("_FIFOF_.VFIFOF0_641", "FIFOF_", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_FIFOF_.VFIFOF0_641", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("clear", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(FIFOF_::_FIFOF_.VFIFOF0_88#(_n0), Meta#(MetaData#("_FIFOF_.VFIFOF0_88", "FIFOF_", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_FIFOF_.VFIFOF0_88", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("clear", 2), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("notFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("i_notFull", 4), Conc#(Bit#(1))), Meta#(MetaField#("notEmpty", 5), Conc#(Bit#(1))), Meta#(MetaField#("i_notEmpty", 6), Conc#(Bit#(1)))))))} {Generic#(FIFOLevel::FIFOCountIfc#(a_type, fifoDepth), Meta#(MetaData#("FIFOCountIfc", "FIFOLevel", Tuple2#(StarArg#(a_type), NumArg#(fifoDepth)), 1), Meta#(MetaConsNamed#("FIFOCountIfc", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("notEmpty", 4), Conc#(Bool)), Meta#(MetaField#("count", 5), Conc#(UInt#(TLog#(TAdd#(fifoDepth, 1))))), Meta#(MetaField#("clear", 6), Conc#(Action))))))} {Generic#(FIFOLevel::FIFOLevelIfc#(a_type, fifoDepth), Meta#(MetaData#("FIFOLevelIfc", "FIFOLevel", Tuple2#(StarArg#(a_type), NumArg#(fifoDepth)), 1), Meta#(MetaConsNamed#("FIFOLevelIfc", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("clear", 3), Conc#(Action)), Meta#(MetaField#("notFull", 4), Conc#(Bool)), Meta#(MetaField#("notEmpty", 5), Conc#(Bool)), Meta#(MetaField#("isLessThan", 6), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("isGreaterThan", 7), Conc#(function Bool f(Integer x1)))))))} {Generic#(FIFOLevel::FIFOLevel_INT#(a_type, cntSize), Meta#(MetaData#("FIFOLevel_INT", "FIFOLevel", Tuple2#(StarArg#(a_type), NumArg#(cntSize)), 1), Meta#(MetaConsNamed#("FIFOLevel_INT", 0, 10), Tuple10#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("clear", 3), Conc#(Action)), Meta#(MetaField#("notFull", 4), Conc#(Bool)), Meta#(MetaField#("notEmpty", 5), Conc#(Bool)), Meta#(MetaField#("count", 6), Conc#(UInt#(cntSize))), Meta#(MetaField#("i_notFull", 7), Conc#(Bool)), Meta#(MetaField#("i_notEmpty", 8), Conc#(Bool)), Meta#(MetaField#("i_count", 9), Conc#(UInt#(cntSize)))))))} {Generic#(FIFOLevel::SyncFIFOCount0_INT#(cntSize), Meta#(MetaData#("SyncFIFOCount0_INT", "FIFOLevel", NumArg#(cntSize), 1), Meta#(MetaConsNamed#("SyncFIFOCount0_INT", 0, 8), Tuple8#(Meta#(MetaField#("enq", 0), Conc#(Action)), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("sNotFull", 2), Conc#(Bool)), Meta#(MetaField#("dNotEmpty", 3), Conc#(Bool)), Meta#(MetaField#("sCount", 4), Conc#(UInt#(cntSize))), Meta#(MetaField#("dCount", 5), Conc#(UInt#(cntSize))), Meta#(MetaField#("sClear", 6), Conc#(Action)), Meta#(MetaField#("dClear", 7), Conc#(Action))))))} {Generic#(FIFOLevel::SyncFIFOCountIfc#(a_type, fifoDepth), Meta#(MetaData#("SyncFIFOCountIfc", "FIFOLevel", Tuple2#(StarArg#(a_type), NumArg#(fifoDepth)), 1), Meta#(MetaConsNamed#("SyncFIFOCountIfc", 0, 11), Tuple11#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("sNotFull", 3), Conc#(Bool)), Meta#(MetaField#("sNotEmpty", 4), Conc#(Bool)), Meta#(MetaField#("dNotFull", 5), Conc#(Bool)), Meta#(MetaField#("dNotEmpty", 6), Conc#(Bool)), Meta#(MetaField#("sCount", 7), Conc#(UInt#(TLog#(TAdd#(fifoDepth, 1))))), Meta#(MetaField#("dCount", 8), Conc#(UInt#(TLog#(TAdd#(fifoDepth, 1))))), Meta#(MetaField#("sClear", 9), Conc#(Action)), Meta#(MetaField#("dClear", 10), Conc#(Action))))))} {Generic#(FIFOLevel::SyncFIFOCount_INT#(a_type, cntSize), Meta#(MetaData#("SyncFIFOCount_INT", "FIFOLevel", Tuple2#(StarArg#(a_type), NumArg#(cntSize)), 1), Meta#(MetaConsNamed#("SyncFIFOCount_INT", 0, 9), Tuple9#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("sNotFull", 3), Conc#(Bool)), Meta#(MetaField#("dNotEmpty", 4), Conc#(Bool)), Meta#(MetaField#("sCount", 5), Conc#(UInt#(cntSize))), Meta#(MetaField#("dCount", 6), Conc#(UInt#(cntSize))), Meta#(MetaField#("sClear", 7), Conc#(Action)), Meta#(MetaField#("dClear", 8), Conc#(Action))))))} {Generic#(FIFOLevel::SyncFIFOLevelIfc#(a_type, fifoDepth), Meta#(MetaData#("SyncFIFOLevelIfc", "FIFOLevel", Tuple2#(StarArg#(a_type), NumArg#(fifoDepth)), 1), Meta#(MetaConsNamed#("SyncFIFOLevelIfc", 0, 13), Tuple13#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a_type x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a_type)), Meta#(MetaField#("sNotFull", 3), Conc#(Bool)), Meta#(MetaField#("sNotEmpty", 4), Conc#(Bool)), Meta#(MetaField#("dNotFull", 5), Conc#(Bool)), Meta#(MetaField#("dNotEmpty", 6), Conc#(Bool)), Meta#(MetaField#("sIsLessThan", 7), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("sIsGreaterThan", 8), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("dIsLessThan", 9), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("dIsGreaterThan", 10), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("sClear", 11), Conc#(Action)), Meta#(MetaField#("dClear", 12), Conc#(Action))))))} {Generic#(FIFOLevel::_FIFOLevel.SyncFIFOCount0_INT962#(_n0, _n1), Meta#(MetaData#("_FIFOLevel.SyncFIFOCount0_INT962", "FIFOLevel", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_FIFOLevel.SyncFIFOCount0_INT962", 0, 10), Tuple10#(Meta#(MetaField#("enq", 0), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("sNotFull", 2), Conc#(Bit#(1))), Meta#(MetaField#("dNotEmpty", 3), Conc#(Bit#(1))), Meta#(MetaField#("sCount", 4), Conc#(Bit#(_n0))), Meta#(MetaField#("dCount", 5), Conc#(Bit#(_n0))), Meta#(MetaField#("sClear", 6), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("RDY_sClear", 7), Conc#(Bit#(1))), Meta#(MetaField#("dClear", 8), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("RDY_dClear", 9), Conc#(Bit#(1)))))))} {Generic#(FIFOLevel::_FIFOLevel.SyncFIFOCount_INT880#(_n0, _n1, _n2), Meta#(MetaData#("_FIFOLevel.SyncFIFOCount_INT880", "FIFOLevel", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_FIFOLevel.SyncFIFOCount_INT880", 0, 11), Tuple11#(Meta#(MetaField#("enq", 0), Conc#(function ActionValue_#(_n2) f(Bit#(_n1) x1))), Meta#(MetaField#("deq", 1), Conc#(ActionValue_#(_n2))), Meta#(MetaField#("first", 2), Conc#(Bit#(_n1))), Meta#(MetaField#("sNotFull", 3), Conc#(Bit#(1))), Meta#(MetaField#("dNotEmpty", 4), Conc#(Bit#(1))), Meta#(MetaField#("sCount", 5), Conc#(Bit#(_n0))), Meta#(MetaField#("dCount", 6), Conc#(Bit#(_n0))), Meta#(MetaField#("sClear", 7), Conc#(ActionValue_#(_n2))), Meta#(MetaField#("RDY_sClear", 8), Conc#(Bit#(1))), Meta#(MetaField#("dClear", 9), Conc#(ActionValue_#(_n2))), Meta#(MetaField#("RDY_dClear", 10), Conc#(Bit#(1)))))))} {Generic#(FPR_RegFile::FPR_RegFile_IFC, Meta#(MetaData#("FPR_RegFile_IFC", "FPR_RegFile", void, 1), Meta#(MetaConsNamed#("FPR_RegFile_IFC", 0, 6), Tuple6#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("read_rs1", 1), Conc#(function ISA_Decls::WordFL f(ISA_Decls::RegName x1))), Meta#(MetaField#("read_rs1_port2", 2), Conc#(function ISA_Decls::WordFL f(ISA_Decls::RegName x1))), Meta#(MetaField#("read_rs2", 3), Conc#(function ISA_Decls::WordFL f(ISA_Decls::RegName x1))), Meta#(MetaField#("read_rs3", 4), Conc#(function ISA_Decls::WordFL f(ISA_Decls::RegName x1))), Meta#(MetaField#("write_rd", 5), Conc#(function Action f(ISA_Decls::RegName x1, ISA_Decls::WordFL x2)))))))} {Generic#(FPR_RegFile::RF_State, Meta#(MetaData#("RF_State", "FPR_RegFile", void, 3), Either#(Meta#(MetaConsAnon#("RF_RESET_START", 0, 0), void), Either#(Meta#(MetaConsAnon#("RF_RESETTING", 1, 0), void), Meta#(MetaConsAnon#("RF_RUNNING", 2, 0), void)))))} {Generic#(FPU::FPU_IFC, Meta#(MetaData#("FPU_IFC", "FPU", void, 1), Meta#(MetaConsNamed#("FPU_IFC", 0, 2), Tuple2#(Meta#(MetaField#("server_core", 0), Conc#(ClientServer::Server#(FPU::Fpu_Req, FPU::Fpu_Rsp))), Meta#(MetaField#("server_reset", 1), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token)))))))} {Generic#(FPU::FloatU, Meta#(MetaData#("FloatU", "FPU", void, 2), Either#(Meta#(MetaConsAnon#("D", 0, 1), Meta#(MetaField#("_1", 0), Conc#(FPU::FDouble))), Meta#(MetaConsAnon#("S", 1, 1), Meta#(MetaField#("_1", 0), Conc#(FPU::FSingle))))))} {Generic#(File, Meta#(MetaData#("File", "Prelude", void, 3), Either#(Meta#(MetaConsAnon#("InvalidFile", 0, 0), void), Either#(Meta#(MetaConsAnon#("MCD", 1, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(31)))), Meta#(MetaConsAnon#("FD", 2, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(31))))))))} {Generic#(FixedPoint::FixedPoint#(isize, fsize), Meta#(MetaData#("FixedPoint", "FixedPoint", Tuple2#(NumArg#(isize), NumArg#(fsize)), 1), Meta#(MetaConsNamed#("FixedPoint", 0, 2), Tuple2#(Meta#(MetaField#("i", 0), Conc#(Bit#(isize))), Meta#(MetaField#("f", 1), Conc#(Bit#(fsize)))))))} {Generic#(FixedPoint::RoundMode, Meta#(MetaData#("RoundMode", "FixedPoint", void, 7), Either#(Meta#(MetaConsAnon#("Rnd_Plus_Inf", 0, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Zero", 1, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Minus_Inf", 2, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Inf", 3, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Conv", 4, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Truncate", 5, 0), void), Meta#(MetaConsAnon#("Rnd_Truncate_Zero", 6, 0), void)))))))))} {Generic#(FloatingPoint::CommonState#(e, m), Meta#(MetaData#("CommonState", "FloatingPoint", Tuple2#(NumArg#(e), NumArg#(m)), 1), Meta#(MetaConsNamed#("CommonState", 0, 3), Tuple3#(Meta#(MetaField#("res", 0), Conc#(Maybe#(FloatingPoint::FloatingPoint#(e, m)))), Meta#(MetaField#("exc", 1), Conc#(FloatingPoint::Exception)), Meta#(MetaField#("rmode", 2), Conc#(FloatingPoint::RoundMode))))))} {Generic#(FloatingPoint::Disorder, Meta#(MetaData#("Disorder", "FloatingPoint", void, 4), Either#(Meta#(MetaConsAnon#("LT", 0, 0), void), Either#(Meta#(MetaConsAnon#("EQ", 1, 0), void), Either#(Meta#(MetaConsAnon#("GT", 2, 0), void), Meta#(MetaConsAnon#("UO", 3, 0), void))))))} {Generic#(FloatingPoint::Exception, Meta#(MetaData#("Exception", "FloatingPoint", void, 1), Meta#(MetaConsNamed#("Exception", 0, 5), Tuple5#(Meta#(MetaField#("invalid_op", 0), Conc#(Bool)), Meta#(MetaField#("divide_0", 1), Conc#(Bool)), Meta#(MetaField#("overflow", 2), Conc#(Bool)), Meta#(MetaField#("underflow", 3), Conc#(Bool)), Meta#(MetaField#("inexact", 4), Conc#(Bool))))))} {Generic#(FloatingPoint::FloatingPoint#(e, m), Meta#(MetaData#("FloatingPoint", "FloatingPoint", Tuple2#(NumArg#(e), NumArg#(m)), 1), Meta#(MetaConsNamed#("FloatingPoint", 0, 3), Tuple3#(Meta#(MetaField#("sign", 0), Conc#(Bool)), Meta#(MetaField#("exp", 1), Conc#(Bit#(e))), Meta#(MetaField#("sfd", 2), Conc#(Bit#(m)))))))} {Generic#(FloatingPoint::RoundMode, Meta#(MetaData#("RoundMode", "FloatingPoint", void, 5), Either#(Meta#(MetaConsAnon#("Rnd_Nearest_Even", 0, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Nearest_Away_Zero", 1, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Plus_Inf", 2, 0), void), Either#(Meta#(MetaConsAnon#("Rnd_Minus_Inf", 3, 0), void), Meta#(MetaConsAnon#("Rnd_Zero", 4, 0), void)))))))} {Generic#(Fmt, ConcPrim#(Fmt))} {Generic#(FoldFIFO::FoldFIFO#(a), Meta#(MetaData#("FoldFIFO", "FoldFIFO", StarArg#(a), 1), Meta#(MetaConsNamed#("FoldFIFO", 0, 5), Tuple5#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("clear", 3), Conc#(Action)), Meta#(MetaField#("foldr", 4), ConcPoly#(FoldFIFO::FoldFIFO_foldr#(a)))))))} {Generic#(FoldFIFOF::FoldFIFO#(a), Meta#(MetaData#("FoldFIFO", "FoldFIFOF", StarArg#(a), 1), Meta#(MetaConsNamed#("FoldFIFO", 0, 7), Tuple7#(Meta#(MetaField#("enq", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(a)), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("notEmpty", 4), Conc#(Bool)), Meta#(MetaField#("clear", 5), Conc#(Action)), Meta#(MetaField#("foldr", 6), ConcPoly#(FoldFIFOF::FoldFIFO_foldr#(a)))))))} {Generic#(GPR_RegFile::GPR_RegFile_IFC, Meta#(MetaData#("GPR_RegFile_IFC", "GPR_RegFile", void, 1), Meta#(MetaConsNamed#("GPR_RegFile_IFC", 0, 5), Tuple5#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("read_rs1", 1), Conc#(function CHERICC_Fat::CapPipe f(ISA_Decls::RegName x1))), Meta#(MetaField#("read_rs1_port2", 2), Conc#(function CHERICC_Fat::CapPipe f(ISA_Decls::RegName x1))), Meta#(MetaField#("read_rs2", 3), Conc#(function CHERICC_Fat::CapPipe f(ISA_Decls::RegName x1))), Meta#(MetaField#("write_rd", 4), Conc#(function Action f(ISA_Decls::RegName x1, CHERICC_Fat::CapReg x2)))))))} {Generic#(GPR_RegFile::RF_State, Meta#(MetaData#("RF_State", "GPR_RegFile", void, 3), Either#(Meta#(MetaConsAnon#("RF_RESET_START", 0, 0), void), Either#(Meta#(MetaConsAnon#("RF_RESETTING", 1, 0), void), Meta#(MetaConsAnon#("RF_RUNNING", 2, 0), void)))))} {Generic#(Gearbox::Gearbox#(in, out, a), Meta#(MetaData#("Gearbox", "Gearbox", Tuple3#(NumArg#(in), NumArg#(out), StarArg#(a)), 1), Meta#(MetaConsNamed#("Gearbox", 0, 5), Tuple5#(Meta#(MetaField#("enq", 0), Conc#(function Action f(Vector::Vector#(in, a) x1))), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("first", 2), Conc#(Vector::Vector#(out, a))), Meta#(MetaField#("notFull", 3), Conc#(Bool)), Meta#(MetaField#("notEmpty", 4), Conc#(Bool))))))} {Generic#(GetPut::Get#(a), Meta#(MetaData#("Get", "GetPut", StarArg#(a), 1), Meta#(MetaConsNamed#("Get", 0, 1), Meta#(MetaField#("get", 0), Conc#(ActionValue#(a))))))} {Generic#(GetPut::GetS#(a), Meta#(MetaData#("GetS", "GetPut", StarArg#(a), 1), Meta#(MetaConsNamed#("GetS", 0, 2), Tuple2#(Meta#(MetaField#("first", 0), Conc#(a)), Meta#(MetaField#("deq", 1), Conc#(Action))))))} {Generic#(GetPut::Put#(a), Meta#(MetaData#("Put", "GetPut", StarArg#(a), 1), Meta#(MetaConsNamed#("Put", 0, 1), Meta#(MetaField#("put", 0), Conc#(function Action f(a x1))))))} {Generic#(GetPut::PutS#(a), Meta#(MetaData#("PutS", "GetPut", StarArg#(a), 1), Meta#(MetaConsNamed#("PutS", 0, 2), Tuple2#(Meta#(MetaField#("offer", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("accepted", 1), Conc#(Bool))))))} {Generic#(Giraffe_IFC::Core_IFC, Meta#(MetaData#("Core_IFC", "Giraffe_IFC", void, 1), Meta#(MetaConsNamed#("Core_IFC", 0, 8), Tuple8#(Meta#(MetaField#("master0", 0), Conc#(AXI4_Types::AXI4_Master_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("master1", 1), Conc#(AXI4_Types::AXI4_Master_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("master2", 2), Conc#(AXI4_Types::AXI4_Master_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("master3", 3), Conc#(AXI4_Types::AXI4_Master_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("interrupt0", 4), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("interrupt1", 5), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("interrupt2", 6), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("jtag", 7), Conc#(Giraffe_IFC::JTAG_IFC))))))} {Generic#(Giraffe_IFC::DMI_IFC, Meta#(MetaData#("DMI_IFC", "Giraffe_IFC", void, 1), Meta#(MetaConsNamed#("DMI_IFC", 0, 9), Tuple9#(Meta#(MetaField#("req_ready", 0), Conc#(Bit#(1))), Meta#(MetaField#("req_valid", 1), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("req_addr", 2), Conc#(function Action f(Bit#(7) x1))), Meta#(MetaField#("req_data", 3), Conc#(function Action f(Bit#(32) x1))), Meta#(MetaField#("req_op", 4), Conc#(function Action f(Bit#(2) x1))), Meta#(MetaField#("rsp_ready", 5), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("rsp_valid", 6), Conc#(Bit#(1))), Meta#(MetaField#("rsp_data", 7), Conc#(Bit#(32))), Meta#(MetaField#("rsp_response", 8), Conc#(Bit#(2)))))))} {Generic#(Giraffe_IFC::DMI_Master_IFC, Meta#(MetaData#("DMI_Master_IFC", "Giraffe_IFC", void, 1), Meta#(MetaConsNamed#("DMI_Master_IFC", 0, 9), Tuple9#(Meta#(MetaField#("req_ready", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("req_valid", 1), Conc#(Bit#(1))), Meta#(MetaField#("req_addr", 2), Conc#(Bit#(7))), Meta#(MetaField#("req_data", 3), Conc#(Bit#(32))), Meta#(MetaField#("req_op", 4), Conc#(Bit#(2))), Meta#(MetaField#("rsp_ready", 5), Conc#(Bit#(1))), Meta#(MetaField#("rsp_valid", 6), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("rsp_data", 7), Conc#(function Action f(Bit#(32) x1))), Meta#(MetaField#("rsp_response", 8), Conc#(function Action f(Bit#(2) x1)))))))} {Generic#(Giraffe_IFC::JTAG_IFC, Meta#(MetaData#("JTAG_IFC", "Giraffe_IFC", void, 1), Meta#(MetaConsNamed#("JTAG_IFC", 0, 5), Tuple5#(Meta#(MetaField#("tdi", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("tms", 1), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("tclk", 2), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("tdo", 3), Conc#(Bit#(1))), Meta#(MetaField#("tclk_out", 4), Conc#(Clock))))))} {Generic#(Giraffe_IFC::Platform_IFC, Meta#(MetaData#("Platform_IFC", "Giraffe_IFC", void, 1), Meta#(MetaConsNamed#("Platform_IFC", 0, 9), Tuple9#(Meta#(MetaField#("slave0", 0), Conc#(AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("slave1", 1), Conc#(AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("slave2", 2), Conc#(AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("slave3", 3), Conc#(AXI4_Types::AXI4_Slave_Sig#(4, 64, 64, 0, 0, 0, 0, 0))), Meta#(MetaField#("interrupt0", 4), Conc#(Bit#(1))), Meta#(MetaField#("interrupt1", 5), Conc#(Bit#(1))), Meta#(MetaField#("interrupt2", 6), Conc#(Bit#(1))), Meta#(MetaField#("uart_out", 7), Conc#(BusDefines::BusSend#(Bit#(8)))), Meta#(MetaField#("uart_in", 8), Conc#(BusDefines::BusRecv#(Bit#(8))))))))} {Generic#(Gray::Gray#(n), Meta#(MetaData#("Gray", "Gray", NumArg#(n), 1), Meta#(MetaConsNamed#("Gray", 0, 1), Meta#(MetaField#("code", 0), Conc#(Bit#(n))))))} {Generic#(GrayCounter::GrayCounter#(n), Meta#(MetaData#("GrayCounter", "GrayCounter", NumArg#(n), 1), Meta#(MetaConsNamed#("GrayCounter", 0, 8), Tuple8#(Meta#(MetaField#("incr", 0), Conc#(Action)), Meta#(MetaField#("decr", 1), Conc#(Action)), Meta#(MetaField#("sWriteBin", 2), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("sReadBin", 3), Conc#(Bit#(n))), Meta#(MetaField#("sWriteGray", 4), Conc#(function Action f(Gray::Gray#(n) x1))), Meta#(MetaField#("sReadGray", 5), Conc#(Gray::Gray#(n))), Meta#(MetaField#("dReadBin", 6), Conc#(Bit#(n))), Meta#(MetaField#("dReadGray", 7), Conc#(Gray::Gray#(n)))))))} {Generic#(HList::HCons#(e, l), Meta#(MetaData#("HCons", "HList", Tuple2#(StarArg#(e), StarArg#(l)), 1), Meta#(MetaConsNamed#("HCons", 0, 2), Tuple2#(Meta#(MetaField#("hd", 0), Conc#(e)), Meta#(MetaField#("tl", 1), Conc#(l))))))} {Generic#(HList::HNil, Meta#(MetaData#("HNil", "HList", void, 1), Meta#(MetaConsNamed#("HNil", 0, 0), void)))} {Generic#(Handle, ConcPrim#(Handle))} {Generic#(IOMode, Meta#(MetaData#("IOMode", "Prelude", void, 3), Either#(Meta#(MetaConsAnon#("ReadMode", 0, 0), void), Either#(Meta#(MetaConsAnon#("WriteMode", 1, 0), void), Meta#(MetaConsAnon#("AppendMode", 2, 0), void)))))} {Generic#(ISA_Decls::Access_RWX, Meta#(MetaData#("Access_RWX", "ISA_Decls", void, 3), Either#(Meta#(MetaConsAnon#("Access_RWX_R", 0, 0), void), Either#(Meta#(MetaConsAnon#("Access_RWX_W", 1, 0), void), Meta#(MetaConsAnon#("Access_RWX_X", 2, 0), void)))))} {Generic#(ISA_Decls::Decoded_Instr, Meta#(MetaData#("Decoded_Instr", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("Decoded_Instr", 0, 20), Tuple20#(Meta#(MetaField#("opcode", 0), Conc#(ISA_Decls::Opcode)), Meta#(MetaField#("rd", 1), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("rs1", 2), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("rs2", 3), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("rs3", 4), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("csr", 5), Conc#(ISA_Decls::CSR_Addr)), Meta#(MetaField#("funct3", 6), Conc#(Bit#(3))), Meta#(MetaField#("funct5", 7), Conc#(Bit#(5))), Meta#(MetaField#("funct7", 8), Conc#(Bit#(7))), Meta#(MetaField#("funct10", 9), Conc#(Bit#(10))), Meta#(MetaField#("funct5rs2", 10), Conc#(Bit#(5))), Meta#(MetaField#("funct5rd", 11), Conc#(Bit#(5))), Meta#(MetaField#("imm12_I", 12), Conc#(Bit#(12))), Meta#(MetaField#("imm12_S", 13), Conc#(Bit#(12))), Meta#(MetaField#("imm13_SB", 14), Conc#(Bit#(13))), Meta#(MetaField#("imm20_U", 15), Conc#(Bit#(20))), Meta#(MetaField#("imm21_UJ", 16), Conc#(Bit#(21))), Meta#(MetaField#("pred", 17), Conc#(Bit#(4))), Meta#(MetaField#("succ", 18), Conc#(Bit#(4))), Meta#(MetaField#("aqrl", 19), Conc#(Bit#(2)))))))} {Generic#(ISA_Decls::Fence_Ordering, Meta#(MetaData#("Fence_Ordering", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("Fence_Ordering", 0, 8), Tuple8#(Meta#(MetaField#("pi", 0), Conc#(Bool)), Meta#(MetaField#("po", 1), Conc#(Bool)), Meta#(MetaField#("pr", 2), Conc#(Bool)), Meta#(MetaField#("pw", 3), Conc#(Bool)), Meta#(MetaField#("si", 4), Conc#(Bool)), Meta#(MetaField#("so", 5), Conc#(Bool)), Meta#(MetaField#("sr", 6), Conc#(Bool)), Meta#(MetaField#("sw", 7), Conc#(Bool))))))} {Generic#(ISA_Decls::FpuOp, Meta#(MetaData#("FpuOp", "ISA_Decls", void, 9), Either#(Meta#(MetaConsAnon#("FPAdd", 0, 0), void), Either#(Meta#(MetaConsAnon#("FPSub", 1, 0), void), Either#(Meta#(MetaConsAnon#("FPMul", 2, 0), void), Either#(Meta#(MetaConsAnon#("FPDiv", 3, 0), void), Either#(Meta#(MetaConsAnon#("FPSqrt", 4, 0), void), Either#(Meta#(MetaConsAnon#("FPMAdd", 5, 0), void), Either#(Meta#(MetaConsAnon#("FPMSub", 6, 0), void), Either#(Meta#(MetaConsAnon#("FPNMAdd", 7, 0), void), Meta#(MetaConsAnon#("FPNMSub", 8, 0), void)))))))))))} {Generic#(ISA_Decls::ISize, Meta#(MetaData#("ISize", "ISA_Decls", void, 2), Either#(Meta#(MetaConsAnon#("ISIZE16BIT", 0, 0), void), Meta#(MetaConsAnon#("ISIZE32BIT", 1, 0), void))))} {Generic#(ISA_Decls::MCause, Meta#(MetaData#("MCause", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("MCause", 0, 2), Tuple2#(Meta#(MetaField#("interrupt", 0), Conc#(Bit#(1))), Meta#(MetaField#("exc_code", 1), Conc#(ISA_Decls::Exc_Code))))))} {Generic#(ISA_Decls::MCounteren, Meta#(MetaData#("MCounteren", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("MCounteren", 0, 4), Tuple4#(Meta#(MetaField#("hpm", 0), Conc#(Bit#(29))), Meta#(MetaField#("ir", 1), Conc#(Bit#(1))), Meta#(MetaField#("tm", 2), Conc#(Bit#(1))), Meta#(MetaField#("cy", 3), Conc#(Bit#(1)))))))} {Generic#(ISA_Decls::MCountinhibit, Meta#(MetaData#("MCountinhibit", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("MCountinhibit", 0, 5), Tuple5#(Meta#(MetaField#("reserved", 0), Conc#(Reserved::ReservedZero#(TSub#(29, ISA_Decls::No_Of_Ctrs)))), Meta#(MetaField#("hpm", 1), Conc#(Bit#(ISA_Decls::No_Of_Ctrs))), Meta#(MetaField#("ir", 2), Conc#(Bit#(1))), Meta#(MetaField#("reserved2", 3), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("cy", 4), Conc#(Bit#(1)))))))} {Generic#(ISA_Decls::MISA, Meta#(MetaData#("MISA", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("MISA", 0, 27), Tuple27#(Meta#(MetaField#("mxl", 0), Conc#(Bit#(2))), Meta#(MetaField#("z", 1), Conc#(Bit#(1))), Meta#(MetaField#("y", 2), Conc#(Bit#(1))), Meta#(MetaField#("x", 3), Conc#(Bit#(1))), Meta#(MetaField#("w", 4), Conc#(Bit#(1))), Meta#(MetaField#("v", 5), Conc#(Bit#(1))), Meta#(MetaField#("u", 6), Conc#(Bit#(1))), Meta#(MetaField#("t", 7), Conc#(Bit#(1))), Meta#(MetaField#("s", 8), Conc#(Bit#(1))), Meta#(MetaField#("r", 9), Conc#(Bit#(1))), Meta#(MetaField#("q", 10), Conc#(Bit#(1))), Meta#(MetaField#("p", 11), Conc#(Bit#(1))), Meta#(MetaField#("o", 12), Conc#(Bit#(1))), Meta#(MetaField#("n", 13), Conc#(Bit#(1))), Meta#(MetaField#("m", 14), Conc#(Bit#(1))), Meta#(MetaField#("l", 15), Conc#(Bit#(1))), Meta#(MetaField#("k", 16), Conc#(Bit#(1))), Meta#(MetaField#("j", 17), Conc#(Bit#(1))), Meta#(MetaField#("i", 18), Conc#(Bit#(1))), Meta#(MetaField#("h", 19), Conc#(Bit#(1))), Meta#(MetaField#("g", 20), Conc#(Bit#(1))), Meta#(MetaField#("f", 21), Conc#(Bit#(1))), Meta#(MetaField#("e", 22), Conc#(Bit#(1))), Meta#(MetaField#("d", 23), Conc#(Bit#(1))), Meta#(MetaField#("c", 24), Conc#(Bit#(1))), Meta#(MetaField#("b", 25), Conc#(Bit#(1))), Meta#(MetaField#("a", 26), Conc#(Bit#(1)))))))} {Generic#(ISA_Decls::MTVEC_Mode, Meta#(MetaData#("MTVEC_Mode", "ISA_Decls", void, 2), Either#(Meta#(MetaConsAnon#("DIRECT", 0, 0), void), Meta#(MetaConsAnon#("VECTORED", 1, 0), void))))} {Generic#(ISA_Decls::MTVec, Meta#(MetaData#("MTVec", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("MTVec", 0, 2), Tuple2#(Meta#(MetaField#("base", 0), Conc#(Bit#(ISA_Decls::XLEN_MINUS_2))), Meta#(MetaField#("mode", 1), Conc#(ISA_Decls::MTVEC_Mode))))))} {Generic#(ISA_Decls::Mem_Data_Size, Meta#(MetaData#("Mem_Data_Size", "ISA_Decls", void, 4), Either#(Meta#(MetaConsAnon#("BITS8", 0, 0), void), Either#(Meta#(MetaConsAnon#("BITS16", 1, 0), void), Either#(Meta#(MetaConsAnon#("BITS32", 2, 0), void), Meta#(MetaConsAnon#("BITS64", 3, 0), void))))))} {Generic#(ISA_Decls::RV_Version, Meta#(MetaData#("RV_Version", "ISA_Decls", void, 2), Either#(Meta#(MetaConsAnon#("RV32", 0, 0), void), Meta#(MetaConsAnon#("RV64", 1, 0), void))))} {Generic#(ISA_Decls::Trap_Info_CSR, Meta#(MetaData#("Trap_Info_CSR", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("Trap_Info_CSR", 0, 4), Tuple4#(Meta#(MetaField#("pcc", 0), Conc#(CHERICC_Fat::CapReg)), Meta#(MetaField#("mstatus", 1), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("mcause", 2), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("priv", 3), Conc#(ISA_Decls::Priv_Mode))))))} {Generic#(ISA_Decls::XCCSR, Meta#(MetaData#("XCCSR", "ISA_Decls", void, 1), Meta#(MetaConsNamed#("XCCSR", 0, 2), Tuple2#(Meta#(MetaField#("cheri_exc_reg", 0), Conc#(Bit#(6))), Meta#(MetaField#("cheri_exc_code", 1), Conc#(ISA_Decls::CHERI_Exc_Code))))))} {Generic#(IVec::IVec0#(a), Meta#(MetaData#("IVec0", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec0", 0, 0), void)))} {Generic#(IVec::IVec1#(a), Meta#(MetaData#("IVec1", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec1", 0, 1), Meta#(MetaField#("_m00", 0), Conc#(a)))))} {Generic#(IVec::IVec10#(a), Meta#(MetaData#("IVec10", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec10", 0, 10), Tuple10#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a))))))} {Generic#(IVec::IVec11#(a), Meta#(MetaData#("IVec11", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec11", 0, 11), Tuple11#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a))))))} {Generic#(IVec::IVec12#(a), Meta#(MetaData#("IVec12", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec12", 0, 12), Tuple12#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a))))))} {Generic#(IVec::IVec13#(a), Meta#(MetaData#("IVec13", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec13", 0, 13), Tuple13#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a)), Meta#(MetaField#("_m12", 12), Conc#(a))))))} {Generic#(IVec::IVec14#(a), Meta#(MetaData#("IVec14", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec14", 0, 14), Tuple14#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a)), Meta#(MetaField#("_m12", 12), Conc#(a)), Meta#(MetaField#("_m13", 13), Conc#(a))))))} {Generic#(IVec::IVec15#(a), Meta#(MetaData#("IVec15", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec15", 0, 15), Tuple15#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a)), Meta#(MetaField#("_m12", 12), Conc#(a)), Meta#(MetaField#("_m13", 13), Conc#(a)), Meta#(MetaField#("_m14", 14), Conc#(a))))))} {Generic#(IVec::IVec16#(a), Meta#(MetaData#("IVec16", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec16", 0, 16), Tuple16#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a)), Meta#(MetaField#("_m12", 12), Conc#(a)), Meta#(MetaField#("_m13", 13), Conc#(a)), Meta#(MetaField#("_m14", 14), Conc#(a)), Meta#(MetaField#("_m15", 15), Conc#(a))))))} {Generic#(IVec::IVec2#(a), Meta#(MetaData#("IVec2", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec2", 0, 2), Tuple2#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a))))))} {Generic#(IVec::IVec3#(a), Meta#(MetaData#("IVec3", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec3", 0, 3), Tuple3#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a))))))} {Generic#(IVec::IVec32#(a), Meta#(MetaData#("IVec32", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec32", 0, 32), Tuple32#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a)), Meta#(MetaField#("_m12", 12), Conc#(a)), Meta#(MetaField#("_m13", 13), Conc#(a)), Meta#(MetaField#("_m14", 14), Conc#(a)), Meta#(MetaField#("_m15", 15), Conc#(a)), Meta#(MetaField#("_m16", 16), Conc#(a)), Meta#(MetaField#("_m17", 17), Conc#(a)), Meta#(MetaField#("_m18", 18), Conc#(a)), Meta#(MetaField#("_m19", 19), Conc#(a)), Meta#(MetaField#("_m20", 20), Conc#(a)), Meta#(MetaField#("_m21", 21), Conc#(a)), Meta#(MetaField#("_m22", 22), Conc#(a)), Meta#(MetaField#("_m23", 23), Conc#(a)), Meta#(MetaField#("_m24", 24), Conc#(a)), Meta#(MetaField#("_m25", 25), Conc#(a)), Meta#(MetaField#("_m26", 26), Conc#(a)), Meta#(MetaField#("_m27", 27), Conc#(a)), Meta#(MetaField#("_m28", 28), Conc#(a)), Meta#(MetaField#("_m29", 29), Conc#(a)), Meta#(MetaField#("_m30", 30), Conc#(a)), Meta#(MetaField#("_m31", 31), Conc#(a))))))} {Generic#(IVec::IVec33#(a), Meta#(MetaData#("IVec33", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec33", 0, 33), Tuple33#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a)), Meta#(MetaField#("_m09", 9), Conc#(a)), Meta#(MetaField#("_m10", 10), Conc#(a)), Meta#(MetaField#("_m11", 11), Conc#(a)), Meta#(MetaField#("_m12", 12), Conc#(a)), Meta#(MetaField#("_m13", 13), Conc#(a)), Meta#(MetaField#("_m14", 14), Conc#(a)), Meta#(MetaField#("_m15", 15), Conc#(a)), Meta#(MetaField#("_m16", 16), Conc#(a)), Meta#(MetaField#("_m17", 17), Conc#(a)), Meta#(MetaField#("_m18", 18), Conc#(a)), Meta#(MetaField#("_m19", 19), Conc#(a)), Meta#(MetaField#("_m20", 20), Conc#(a)), Meta#(MetaField#("_m21", 21), Conc#(a)), Meta#(MetaField#("_m22", 22), Conc#(a)), Meta#(MetaField#("_m23", 23), Conc#(a)), Meta#(MetaField#("_m24", 24), Conc#(a)), Meta#(MetaField#("_m25", 25), Conc#(a)), Meta#(MetaField#("_m26", 26), Conc#(a)), Meta#(MetaField#("_m27", 27), Conc#(a)), Meta#(MetaField#("_m28", 28), Conc#(a)), Meta#(MetaField#("_m29", 29), Conc#(a)), Meta#(MetaField#("_m30", 30), Conc#(a)), Meta#(MetaField#("_m31", 31), Conc#(a)), Meta#(MetaField#("_m32", 32), Conc#(a))))))} {Generic#(IVec::IVec4#(a), Meta#(MetaData#("IVec4", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec4", 0, 4), Tuple4#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a))))))} {Generic#(IVec::IVec5#(a), Meta#(MetaData#("IVec5", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec5", 0, 5), Tuple5#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a))))))} {Generic#(IVec::IVec6#(a), Meta#(MetaData#("IVec6", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec6", 0, 6), Tuple6#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a))))))} {Generic#(IVec::IVec7#(a), Meta#(MetaData#("IVec7", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec7", 0, 7), Tuple7#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a))))))} {Generic#(IVec::IVec8#(a), Meta#(MetaData#("IVec8", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec8", 0, 8), Tuple8#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a))))))} {Generic#(IVec::IVec9#(a), Meta#(MetaData#("IVec9", "IVec", StarArg#(a), 1), Meta#(MetaConsNamed#("IVec9", 0, 9), Tuple9#(Meta#(MetaField#("_m00", 0), Conc#(a)), Meta#(MetaField#("_m01", 1), Conc#(a)), Meta#(MetaField#("_m02", 2), Conc#(a)), Meta#(MetaField#("_m03", 3), Conc#(a)), Meta#(MetaField#("_m04", 4), Conc#(a)), Meta#(MetaField#("_m05", 5), Conc#(a)), Meta#(MetaField#("_m06", 6), Conc#(a)), Meta#(MetaField#("_m07", 7), Conc#(a)), Meta#(MetaField#("_m08", 8), Conc#(a))))))} {Generic#(Inout#(_v100), ConcPrim#(Inout#(_v100)))} {Generic#(Inout::_Prelude.Empty29, Meta#(MetaData#("_Prelude.Empty29", "Inout", void, 1), Meta#(MetaConsNamed#("_Prelude.Empty29", 0, 0), void)))} {Generic#(Inout::_Prelude.Empty4, Meta#(MetaData#("_Prelude.Empty4", "Inout", void, 1), Meta#(MetaConsNamed#("_Prelude.Empty4", 0, 0), void)))} {Generic#(Inout_#(_v100), ConcPrim#(Inout_#(_v100)))} {Generic#(Int#(n), Meta#(MetaData#("Int", "Prelude", NumArg#(n), 1), Meta#(MetaConsAnon#("Int", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(n))))))} {Generic#(IntMulDiv::DivState, Meta#(MetaData#("DivState", "IntMulDiv", void, 5), Either#(Meta#(MetaConsAnon#("Div_RDY", 0, 0), void), Either#(Meta#(MetaConsAnon#("Div_START", 1, 0), void), Either#(Meta#(MetaConsAnon#("Div_LOOP1", 2, 0), void), Either#(Meta#(MetaConsAnon#("Div_LOOP2", 3, 0), void), Meta#(MetaConsAnon#("Div_DONE", 4, 0), void)))))))} {Generic#(IntMulDiv::IntDiv_IFC#(w), Meta#(MetaData#("IntDiv_IFC", "IntMulDiv", NumArg#(w), 1), Meta#(MetaConsNamed#("IntDiv_IFC", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(function Action f(Bool x1, Bool x2))), Meta#(MetaField#("result_valid", 1), Conc#(Bool)), Meta#(MetaField#("result_value", 2), Conc#(Tuple2#(Bit#(w), Bit#(w))))))))} {Generic#(IntMulDiv::IntMul_IFC#(w), Meta#(MetaData#("IntMul_IFC", "IntMulDiv", NumArg#(w), 1), Meta#(MetaConsNamed#("IntMul_IFC", 0, 3), Tuple3#(Meta#(MetaField#("put_args", 0), Conc#(function Action f(Bool x1, Bit#(w) x2, Bool x3, Bit#(w) x4))), Meta#(MetaField#("result_valid", 1), Conc#(Bool)), Meta#(MetaField#("result_value", 2), Conc#(Bit#(TAdd#(w, w))))))))} {Generic#(IntMulDiv::MulState, Meta#(MetaData#("MulState", "IntMulDiv", void, 3), Either#(Meta#(MetaConsAnon#("MUL_IDLE", 0, 0), void), Either#(Meta#(MetaConsAnon#("MUL_BUSY", 1, 0), void), Meta#(MetaConsAnon#("MUL_READY", 2, 0), void)))))} {Generic#(Integer, ConcPrim#(Integer))} {Generic#(JtagTap::DMI, Meta#(MetaData#("DMI", "JtagTap", void, 1), Meta#(MetaConsNamed#("DMI", 0, 3), Tuple3#(Meta#(MetaField#("address", 0), Conc#(Bit#(6))), Meta#(MetaField#("data", 1), Conc#(Bit#(32))), Meta#(MetaField#("op", 2), Conc#(JtagTap::DMI_OP))))))} {Generic#(JtagTap::DTMCS, Meta#(MetaData#("DTMCS", "JtagTap", void, 1), Meta#(MetaConsNamed#("DTMCS", 0, 8), Tuple8#(Meta#(MetaField#("reserved", 0), Conc#(Reserved::ReservedZero#(14))), Meta#(MetaField#("dmihardreset", 1), Conc#(Bit#(1))), Meta#(MetaField#("dmireset", 2), Conc#(Bit#(1))), Meta#(MetaField#("reserved2", 3), Conc#(Reserved::ReservedZero#(1))), Meta#(MetaField#("idle", 4), Conc#(Bit#(3))), Meta#(MetaField#("dmistat", 5), Conc#(Bit#(2))), Meta#(MetaField#("abits", 6), Conc#(Bit#(6))), Meta#(MetaField#("version", 7), Conc#(Bit#(4)))))))} {Generic#(JtagTap::JtagState, Meta#(MetaData#("JtagState", "JtagTap", void, 16), Either#(Meta#(MetaConsAnon#("TEST_LOGIC_RESET", 0, 0), void), Either#(Meta#(MetaConsAnon#("RUN_TEST_IDLE", 1, 0), void), Either#(Meta#(MetaConsAnon#("SELECT_DR_SCAN", 2, 0), void), Either#(Meta#(MetaConsAnon#("CAPTURE_DR", 3, 0), void), Either#(Meta#(MetaConsAnon#("SHIFT_DR", 4, 0), void), Either#(Meta#(MetaConsAnon#("EXIT1_DR", 5, 0), void), Either#(Meta#(MetaConsAnon#("PAUSE_DR", 6, 0), void), Either#(Meta#(MetaConsAnon#("EXIT2_DR", 7, 0), void), Either#(Meta#(MetaConsAnon#("UPDATE_DR", 8, 0), void), Either#(Meta#(MetaConsAnon#("SELECT_IR_SCAN", 9, 0), void), Either#(Meta#(MetaConsAnon#("CAPTURE_IR", 10, 0), void), Either#(Meta#(MetaConsAnon#("SHIFT_IR", 11, 0), void), Either#(Meta#(MetaConsAnon#("EXIT1_IR", 12, 0), void), Either#(Meta#(MetaConsAnon#("PAUSE_IR", 13, 0), void), Either#(Meta#(MetaConsAnon#("EXIT2_IR", 14, 0), void), Meta#(MetaConsAnon#("UPDATE_IR", 15, 0), void))))))))))))))))))} {Generic#(JtagTap::JtagTap_IFC, Meta#(MetaData#("JtagTap_IFC", "JtagTap", void, 1), Meta#(MetaConsNamed#("JtagTap_IFC", 0, 2), Tuple2#(Meta#(MetaField#("jtag", 0), Conc#(Giraffe_IFC::JTAG_IFC)), Meta#(MetaField#("dmi", 1), Conc#(Giraffe_IFC::DMI_Master_IFC))))))} {Generic#(LBus::Accum#(n), Meta#(MetaData#("Accum", "LBus", NumArg#(n), 1), Meta#(MetaConsNamed#("Accum", 0, 2), Tuple2#(Meta#(MetaField#("add", 0), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("value", 1), Conc#(Bit#(n)))))))} {Generic#(LBus::DutWithLBusIfc#(i), Meta#(MetaData#("DutWithLBusIfc", "LBus", StarArg#(i), 1), Meta#(MetaConsNamed#("DutWithLBusIfc", 0, 2), Tuple2#(Meta#(MetaField#("dutIfc", 0), Conc#(i)), Meta#(MetaField#("lbus", 1), Conc#(LBus::LBusContextIfc))))))} {Generic#(LBus::Fan#(intype, outtype), Meta#(MetaData#("Fan", "LBus", Tuple2#(StarArg#(intype), StarArg#(outtype)), 1), Meta#(MetaConsNamed#("Fan", 0, 2), Tuple2#(Meta#(MetaField#("fanin", 0), Conc#(intype)), Meta#(MetaField#("fanout", 1), Conc#(outtype))))))} {Generic#(LBus::HandlerState, Meta#(MetaData#("HandlerState", "LBus", void, 3), Either#(Meta#(MetaConsAnon#("Idle", 0, 0), void), Either#(Meta#(MetaConsAnon#("Writing", 1, 0), void), Meta#(MetaConsAnon#("Reading", 2, 0), void)))))} {Generic#(LBus::ILBus#(sa, sd), Meta#(MetaData#("ILBus", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("ILBus", 0, 4), Tuple4#(Meta#(MetaField#("req", 0), Conc#(function Action f(Bool x1, LBus::LbRWop x2, Bit#(sa) x3, Bit#(sd) x4))), Meta#(MetaField#("rdDat", 1), Conc#(Bit#(sd))), Meta#(MetaField#("ack", 2), Conc#(Bit#(1))), Meta#(MetaField#("inrpt", 3), Conc#(Bit#(1)))))))} {Generic#(LBus::ILBusDriver#(sa, sd), Meta#(MetaData#("ILBusDriver", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("ILBusDriver", 0, 7), Tuple7#(Meta#(MetaField#("valid", 0), Conc#(Bool)), Meta#(MetaField#("op", 1), Conc#(LBus::LbRWop)), Meta#(MetaField#("addr", 2), Conc#(Bit#(sa))), Meta#(MetaField#("dat", 3), Conc#(Bit#(sd))), Meta#(MetaField#("rdDat", 4), Conc#(function Action f(Bit#(sd) x1))), Meta#(MetaField#("ack", 5), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("inrpt", 6), Conc#(function Action f(Bit#(1) x1)))))))} {Generic#(LBus::ILBusHandler#(sa, sd), Meta#(MetaData#("ILBusHandler", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("ILBusHandler", 0, 4), Tuple4#(Meta#(MetaField#("driver", 0), Conc#(LBus::ILBusDriver#(sa, sd))), Meta#(MetaField#("lbserver", 1), Conc#(RAM::RAM#(Bit#(sa), Bit#(sd)))), Meta#(MetaField#("interrupting", 2), Conc#(Bool)), Meta#(MetaField#("resetInterrupt", 3), Conc#(Action))))))} {Generic#(LBus::ILbLeaf#(sa, sd), Meta#(MetaData#("ILbLeaf", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("ILbLeaf", 0, 3), Tuple3#(Meta#(MetaField#("req", 0), Conc#(GetPut::Put#(Maybe#(LBus::LbReq#(sa, sd))))), Meta#(MetaField#("ack", 1), Conc#(GetPut::Get#(Maybe#(Bit#(sd))))), Meta#(MetaField#("inrpt", 2), Conc#(GetPut::Get#(Bit#(1))))))))} {Generic#(LBus::ILbNode#(sa, sd), Meta#(MetaData#("ILbNode", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("ILbNode", 0, 3), Tuple3#(Meta#(MetaField#("req", 0), Conc#(GetPut::Get#(Maybe#(LBus::LbReq#(sa, sd))))), Meta#(MetaField#("ack", 1), Conc#(GetPut::Put#(Maybe#(Bit#(sd))))), Meta#(MetaField#("inrpt", 2), Conc#(GetPut::Put#(Bit#(1))))))))} {Generic#(LBus::IWithLBus#(busIfc, deviceIfc), Meta#(MetaData#("IWithLBus", "LBus", Tuple2#(StarArg#(busIfc), StarArg#(deviceIfc)), 1), Meta#(MetaConsNamed#("IWithLBus", 0, 2), Tuple2#(Meta#(MetaField#("bus", 0), Conc#(busIfc)), Meta#(MetaField#("device", 1), Conc#(deviceIfc))))))} {Generic#(LBus::IntFlag#(sa, sd), Meta#(MetaData#("IntFlag", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("IntFlag", 0, 1), Meta#(MetaField#("flag", 0), Conc#(Bit#(1))))))} {Generic#(LBus::Interrupt, Meta#(MetaData#("Interrupt", "LBus", void, 1), Meta#(MetaConsNamed#("Interrupt", 0, 2), Tuple2#(Meta#(MetaField#("set", 0), Conc#(Action)), Meta#(MetaField#("_read", 1), Conc#(Bool))))))} {Generic#(LBus::LBSItem#(sa, sd), Meta#(MetaData#("LBSItem", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 2), Either#(Meta#(MetaConsAnon#("Rg", 0, 1), Meta#(MetaField#("_1", 0), Conc#(LBus::LBSReg#(sa, sd)))), Meta#(MetaConsAnon#("Flg", 1, 1), Meta#(MetaField#("_1", 0), Conc#(LBus::IntFlag#(sa, sd)))))))} {Generic#(LBus::LBSReg#(sa, sd), Meta#(MetaData#("LBSReg", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("LBSReg", 0, 3), Tuple3#(Meta#(MetaField#("lbsAddr", 0), Conc#(LBus::LbAddr#(sa, sd))), Meta#(MetaField#("lbsSet", 1), Conc#(function Action f(Bit#(sd) x1))), Meta#(MetaField#("lbsGet", 2), Conc#(ActionValue#(Bit#(sd))))))))} {Generic#(LBus::LBusContextP#(sa, sd), Meta#(MetaData#("LBusContextP", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("LBusContextP", 0, 2), Tuple2#(Meta#(MetaField#("items", 0), Conc#(List#(LBus::LBSItem#(sa, sd)))), Meta#(MetaField#("leaves", 1), Conc#(List#(LBus::ILbLeaf#(sa, sd))))))))} {Generic#(LBus::LbAddr#(sa, sd), Meta#(MetaData#("LbAddr", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsAnon#("LbAddr", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(sa))))))} {Generic#(LBus::LbRWop, Meta#(MetaData#("LbRWop", "LBus", void, 2), Either#(Meta#(MetaConsAnon#("LbRead", 0, 0), void), Meta#(MetaConsAnon#("LbWrite", 1, 0), void))))} {Generic#(LBus::LbReq#(sa, sd), Meta#(MetaData#("LbReq", "LBus", Tuple2#(NumArg#(sa), NumArg#(sd)), 1), Meta#(MetaConsNamed#("LbReq", 0, 3), Tuple3#(Meta#(MetaField#("wr", 0), Conc#(LBus::LbRWop)), Meta#(MetaField#("adr", 1), Conc#(Bit#(sa))), Meta#(MetaField#("dat", 2), Conc#(Bit#(sd)))))))} {Generic#(LBus::LbState, Meta#(MetaData#("LbState", "LBus", void, 4), Either#(Meta#(MetaConsAnon#("Idle", 0, 0), void), Either#(Meta#(MetaConsAnon#("Req1", 1, 0), void), Either#(Meta#(MetaConsAnon#("Req2", 2, 0), void), Meta#(MetaConsAnon#("Req3", 3, 0), void))))))} {Generic#(LBus::RegHandler#(a, b), Meta#(MetaData#("RegHandler", "LBus", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("RegHandler", 0, 2), Tuple2#(Meta#(MetaField#("getRequest", 0), Conc#(a)), Meta#(MetaField#("storeResponse", 1), Conc#(function Action f(b x1)))))))} {Generic#(LBus::ResetType, Meta#(MetaData#("ResetType", "LBus", void, 3), Either#(Meta#(MetaConsAnon#("SYNC", 0, 0), void), Either#(Meta#(MetaConsAnon#("ASYNC", 1, 0), void), Meta#(MetaConsAnon#("NONE", 2, 0), void)))))} {Generic#(LFSR::LFSR#(a), Meta#(MetaData#("LFSR", "LFSR", StarArg#(a), 1), Meta#(MetaConsNamed#("LFSR", 0, 3), Tuple3#(Meta#(MetaField#("seed", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("value", 1), Conc#(a)), Meta#(MetaField#("next", 2), Conc#(Action))))))} {Generic#(List#(a), Meta#(MetaData#("List", "Prelude", StarArg#(a), 2), Either#(Meta#(MetaConsAnon#("Nil", 0, 0), void), Meta#(MetaConsAnon#("Cons", 1, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(a)), Meta#(MetaField#("_2", 1), Conc#(List#(a))))))))} {Generic#(ListN::ListN#(n, a), Meta#(MetaData#("ListN", "ListN", Tuple2#(NumArg#(n), StarArg#(a)), 1), Vector::Vector#(n, Conc#(a))))} {Generic#(List_$Cons#(a), Meta#(MetaData#("List_$Cons", "Prelude", StarArg#(a), 1), Meta#(MetaConsNamed#("List_$Cons", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(a)), Meta#(MetaField#("_2", 1), Conc#(List#(a)))))))} {Generic#(MEM::MEM#(addr, data), Meta#(MetaData#("MEM", "MEM", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("MEM", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(MEM::ReadIfc#(addr, data))), Meta#(MetaField#("write", 1), Conc#(function Action f(addr x1, data x2)))))))} {Generic#(MEM::MEM2#(addr, data), Meta#(MetaData#("MEM2", "MEM", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("MEM2", 0, 3), Tuple3#(Meta#(MetaField#("read", 0), Conc#(MEM::ReadIfc#(addr, data))), Meta#(MetaField#("readB", 1), Conc#(MEM::ReadIfc#(addr, data))), Meta#(MetaField#("write", 2), Conc#(function Action f(addr x1, data x2)))))))} {Generic#(MEM::MemBEVerbose#(addr, data, data_bytes), Meta#(MetaData#("MemBEVerbose", "MEM", Tuple3#(StarArg#(addr), StarArg#(data), NumArg#(data_bytes)), 1), Meta#(MetaConsNamed#("MemBEVerbose", 0, 2), Tuple2#(Meta#(MetaField#("read", 0), Conc#(MEM::ReadIfc#(addr, data))), Meta#(MetaField#("write", 1), Conc#(function Action f(addr x1, data x2, Vector::Vector#(data_bytes, Bool) x3)))))))} {Generic#(MEM::ReadIfc#(addr, data), Meta#(MetaData#("ReadIfc", "MEM", Tuple2#(StarArg#(addr), StarArg#(data)), 1), Meta#(MetaConsNamed#("ReadIfc", 0, 3), Tuple3#(Meta#(MetaField#("put", 0), Conc#(function Action f(addr x1))), Meta#(MetaField#("get", 1), Conc#(ActionValue#(data))), Meta#(MetaField#("peek", 2), Conc#(data))))))} {Generic#(MEM::_MEM.MEM304#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_MEM.MEM304", "MEM", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_MEM.MEM304", 0, 4), Tuple4#(Meta#(MetaField#("read_put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1))), Meta#(MetaField#("read_get", 1), Conc#(ActionValue_#(_n1))), Meta#(MetaField#("read_peek", 2), Conc#(Bit#(_n0))), Meta#(MetaField#("write", 3), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n0) x2)))))))} {Generic#(MIMO::MIMO#(max_in, max_out, size, t), Meta#(MetaData#("MIMO", "MIMO", Tuple4#(NumArg#(max_in), NumArg#(max_out), NumArg#(size), StarArg#(t)), 1), Meta#(MetaConsNamed#("MIMO", 0, 9), Tuple9#(Meta#(MetaField#("enq", 0), Conc#(function Action f(MIMO::LUInt#(max_in) x1, Vector::Vector#(max_in, t) x2))), Meta#(MetaField#("first", 1), Conc#(Vector::Vector#(max_out, t))), Meta#(MetaField#("deq", 2), Conc#(function Action f(MIMO::LUInt#(max_out) x1))), Meta#(MetaField#("enqReady", 3), Conc#(Bool)), Meta#(MetaField#("enqReadyN", 4), Conc#(function Bool f(MIMO::LUInt#(max_in) x1))), Meta#(MetaField#("deqReady", 5), Conc#(Bool)), Meta#(MetaField#("deqReadyN", 6), Conc#(function Bool f(MIMO::LUInt#(max_out) x1))), Meta#(MetaField#("count", 7), Conc#(MIMO::LUInt#(size))), Meta#(MetaField#("clear", 8), Conc#(Action))))))} {Generic#(MIMO::MIMOConfiguration, Meta#(MetaData#("MIMOConfiguration", "MIMO", void, 1), Meta#(MetaConsNamed#("MIMOConfiguration", 0, 2), Tuple2#(Meta#(MetaField#("unguarded", 0), Conc#(Bool)), Meta#(MetaField#("bram_based", 1), Conc#(Bool))))))} {Generic#(MMU_Cache::CTagState, Meta#(MetaData#("CTagState", "MMU_Cache", void, 2), Either#(Meta#(MetaConsAnon#("CTAG_EMPTY", 0, 0), void), Meta#(MetaConsAnon#("CTAG_CLEAN", 1, 0), void))))} {Generic#(MMU_Cache::Fabric_Write_Fields, Meta#(MetaData#("Fabric_Write_Fields", "MMU_Cache", void, 1), Meta#(MetaConsNamed#("Fabric_Write_Fields", 0, 8), Tuple8#(Meta#(MetaField#("fabric_addr", 0), Conc#(Fabric_Defs::Fabric_Addr)), Meta#(MetaField#("fabric_data", 1), Conc#(Fabric_Defs::Fabric_Data)), Meta#(MetaField#("fabric_user", 2), Conc#(Bit#(Fabric_Defs::Wd_W_User))), Meta#(MetaField#("fabric_strb", 3), Conc#(Fabric_Defs::Fabric_Strb)), Meta#(MetaField#("fabric_size", 4), Conc#(AXI4_Common_Types::AXI4_Size)), Meta#(MetaField#("fabric_2_data", 5), Conc#(Fabric_Defs::Fabric_Data)), Meta#(MetaField#("fabric_2_user", 6), Conc#(Bit#(Fabric_Defs::Wd_W_User))), Meta#(MetaField#("fabric_2_strb", 7), Conc#(Fabric_Defs::Fabric_Strb))))))} {Generic#(MMU_Cache::MMU_Cache_IFC#(mID), Meta#(MetaData#("MMU_Cache_IFC", "MMU_Cache", NumArg#(mID), 1), Meta#(MetaConsNamed#("MMU_Cache_IFC", 0, 16), Tuple16#(Meta#(MetaField#("set_verbosity", 0), Conc#(function Action f(Bit#(4) x1))), Meta#(MetaField#("server_reset", 1), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("req", 2), Conc#(function Action f(MMU_Cache_Common::CacheOp x1, Bit#(3) x2, Bool x3, Bit#(5) x4, ISA_Decls::Addr x5, Tuple2#(Bool, Bit#(ISA_Decls::XLEN_2)) x6, ISA_Decls::Priv_Mode x7, Bit#(1) x8, Bit#(1) x9, ISA_Decls::WordXL x10))), Meta#(MetaField#("commit", 3), Conc#(Action)), Meta#(MetaField#("valid", 4), Conc#(Bool)), Meta#(MetaField#("addr", 5), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("cword", 6), Conc#(Tuple2#(Bool, Cache_Decls_RV64_Sv39_8KB_2way::CWord))), Meta#(MetaField#("st_amo_val", 7), Conc#(Tuple2#(Bool, Cache_Decls_RV64_Sv39_8KB_2way::CWord))), Meta#(MetaField#("exc", 8), Conc#(Bool)), Meta#(MetaField#("exc_code", 9), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("server_flush", 10), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("tlb_flush", 11), Conc#(Action)), Meta#(MetaField#("mem_master", 12), Conc#(AXI4_Types::AXI4_Master#(mID, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User))), Meta#(MetaField#("events", 13), Conc#(Near_Mem_IFC::EventsCache)), Meta#(MetaField#("ma_ddr4_ready", 14), Conc#(Action)), Meta#(MetaField#("mv_status", 15), Conc#(Bit#(8)))))))} {Generic#(MMU_Cache::Module_State, Meta#(MetaData#("Module_State", "MMU_Cache", void, 17), Either#(Meta#(MetaConsAnon#("MODULE_PRERESET", 0, 0), void), Either#(Meta#(MetaConsAnon#("MODULE_RESETTING", 1, 0), void), Either#(Meta#(MetaConsAnon#("MODULE_READY", 2, 0), void), Either#(Meta#(MetaConsAnon#("MODULE_RUNNING", 3, 0), void), Either#(Meta#(MetaConsAnon#("MODULE_EXCEPTION_RSP", 4, 0), void), Either#(Meta#(MetaConsAnon#("PTW_START", 5, 0), void), Either#(Meta#(MetaConsAnon#("PTW_LEVEL_2", 6, 0), void), Either#(Meta#(MetaConsAnon#("PTW_LEVEL_1", 7, 0), void), Either#(Meta#(MetaConsAnon#("PTW_LEVEL_0", 8, 0), void), Either#(Meta#(MetaConsAnon#("CACHE_START_REFILL", 9, 0), void), Either#(Meta#(MetaConsAnon#("CACHE_REFILL", 10, 0), void), Either#(Meta#(MetaConsAnon#("CACHE_REREQ", 11, 0), void), Either#(Meta#(MetaConsAnon#("CACHE_ST_AMO_RSP", 12, 0), void), Either#(Meta#(MetaConsAnon#("IO_REQ", 13, 0), void), Either#(Meta#(MetaConsAnon#("IO_AWAITING_READ_RSP", 14, 0), void), Either#(Meta#(MetaConsAnon#("IO_READ_RSP", 15, 0), void), Meta#(MetaConsAnon#("IO_AWAITING_AMO_READ_RSP", 16, 0), void)))))))))))))))))))} {Generic#(MMU_Cache::Requestor, Meta#(MetaData#("Requestor", "MMU_Cache", void, 2), Either#(Meta#(MetaConsAnon#("REQUESTOR_RESET_IFC", 0, 0), void), Meta#(MetaConsAnon#("REQUESTOR_FLUSH_IFC", 1, 0), void))))} {Generic#(MMU_Cache::State_and_CTag, Meta#(MetaData#("State_and_CTag", "MMU_Cache", void, 1), Meta#(MetaConsNamed#("State_and_CTag", 0, 2), Tuple2#(Meta#(MetaField#("state", 0), Conc#(MMU_Cache::CTagState)), Meta#(MetaField#("ctag", 1), Conc#(Cache_Decls_RV64_Sv39_8KB_2way::CTag))))))} {Generic#(MMU_Cache_Common::CacheOp, Meta#(MetaData#("CacheOp", "MMU_Cache_Common", void, 3), Either#(Meta#(MetaConsAnon#("CACHE_LD", 0, 0), void), Either#(Meta#(MetaConsAnon#("CACHE_ST", 1, 0), void), Meta#(MetaConsAnon#("CACHE_AMO", 2, 0), void)))))} {Generic#(MMU_Cache_Common::L1_to_L2_Req, Meta#(MetaData#("L1_to_L2_Req", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("L1_to_L2_Req", 0, 4), Tuple4#(Meta#(MetaField#("addr", 0), Conc#(Bit#(64))), Meta#(MetaField#("from_state", 1), Conc#(MMU_Cache_Common::Meta_State)), Meta#(MetaField#("to_state", 2), Conc#(MMU_Cache_Common::Meta_State)), Meta#(MetaField#("can_up_to_E", 3), Conc#(Bool))))))} {Generic#(MMU_Cache_Common::L1_to_L2_Rsp, Meta#(MetaData#("L1_to_L2_Rsp", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("L1_to_L2_Rsp", 0, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(Bit#(64))), Meta#(MetaField#("to_state", 1), Conc#(MMU_Cache_Common::Meta_State)), Meta#(MetaField#("m_cline", 2), Conc#(Maybe#(Vector::Vector#(Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_CLine, MMU_Cache_Common::Cache_Entry))))))))} {Generic#(MMU_Cache_Common::L2_to_L1_Req, Meta#(MetaData#("L2_to_L1_Req", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("L2_to_L1_Req", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(Bit#(64))), Meta#(MetaField#("to_state", 1), Conc#(MMU_Cache_Common::Meta_State))))))} {Generic#(MMU_Cache_Common::L2_to_L1_Rsp, Meta#(MetaData#("L2_to_L1_Rsp", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("L2_to_L1_Rsp", 0, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(Bit#(64))), Meta#(MetaField#("to_state", 1), Conc#(MMU_Cache_Common::Meta_State)), Meta#(MetaField#("m_cline", 2), Conc#(Maybe#(Vector::Vector#(Cache_Decls_RV64_Sv39_8KB_2way::CWords_per_CLine, MMU_Cache_Common::Cache_Entry))))))))} {Generic#(MMU_Cache_Common::MMU_Cache_Req, Meta#(MetaData#("MMU_Cache_Req", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("MMU_Cache_Req", 0, 11), Tuple11#(Meta#(MetaField#("op", 0), Conc#(MMU_Cache_Common::CacheOp)), Meta#(MetaField#("width_code", 1), Conc#(Bit#(3))), Meta#(MetaField#("is_unsigned", 2), Conc#(Bool)), Meta#(MetaField#("is_cap", 3), Conc#(Bool)), Meta#(MetaField#("va", 4), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("st_value", 5), Conc#(Tuple2#(Bool, Cache_Decls_RV64_Sv39_8KB_2way::CWord))), Meta#(MetaField#("amo_funct5", 6), Conc#(Bit#(5))), Meta#(MetaField#("priv", 7), Conc#(ISA_Decls::Priv_Mode)), Meta#(MetaField#("sstatus_SUM", 8), Conc#(Bit#(1))), Meta#(MetaField#("mstatus_MXR", 9), Conc#(Bit#(1))), Meta#(MetaField#("satp", 10), Conc#(ISA_Decls::WordXL))))))} {Generic#(MMU_Cache_Common::Meta_State, Meta#(MetaData#("Meta_State", "MMU_Cache_Common", void, 4), Either#(Meta#(MetaConsAnon#("META_INVALID", 0, 0), void), Either#(Meta#(MetaConsAnon#("META_SHARED", 1, 0), void), Either#(Meta#(MetaConsAnon#("META_EXCLUSIVE", 2, 0), void), Meta#(MetaConsAnon#("META_MODIFIED", 3, 0), void))))))} {Generic#(MMU_Cache_Common::Single_Req, Meta#(MetaData#("Single_Req", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("Single_Req", 0, 4), Tuple4#(Meta#(MetaField#("is_read", 0), Conc#(Bool)), Meta#(MetaField#("addr", 1), Conc#(Bit#(64))), Meta#(MetaField#("width_code", 2), Conc#(Bit#(3))), Meta#(MetaField#("data", 3), Conc#(MMU_Cache_Common::Cache_Entry))))))} {Generic#(MMU_Cache_Common::Single_Rsp, Meta#(MetaData#("Single_Rsp", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("Single_Rsp", 0, 2), Tuple2#(Meta#(MetaField#("ok", 0), Conc#(Bool)), Meta#(MetaField#("data", 1), Conc#(MMU_Cache_Common::Cache_Entry))))))} {Generic#(MMU_Cache_Common::VM_Xlate_Outcome, Meta#(MetaData#("VM_Xlate_Outcome", "MMU_Cache_Common", void, 3), Either#(Meta#(MetaConsAnon#("VM_XLATE_OK", 0, 0), void), Either#(Meta#(MetaConsAnon#("VM_XLATE_TLB_MISS", 1, 0), void), Meta#(MetaConsAnon#("VM_XLATE_EXCEPTION", 2, 0), void)))))} {Generic#(MMU_Cache_Common::VM_Xlate_Result, Meta#(MetaData#("VM_Xlate_Result", "MMU_Cache_Common", void, 1), Meta#(MetaConsNamed#("VM_Xlate_Result", 0, 8), Tuple8#(Meta#(MetaField#("outcome", 0), Conc#(MMU_Cache_Common::VM_Xlate_Outcome)), Meta#(MetaField#("allow_cap", 1), Conc#(Bool)), Meta#(MetaField#("pa", 2), Conc#(ISA_Decls::PA)), Meta#(MetaField#("exc_code", 3), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("pte_modified", 4), Conc#(Bool)), Meta#(MetaField#("pte", 5), Conc#(ISA_Decls::PTE)), Meta#(MetaField#("pte_level", 6), Conc#(Bit#(2))), Meta#(MetaField#("pte_pa", 7), Conc#(ISA_Decls::PA))))))} {Generic#(Map::Map#(ky, ix, vl, as), Meta#(MetaData#("Map", "Map", Tuple4#(StarArg#(ky), StarArg#(ix), StarArg#(vl), NumArg#(as)), 1), Meta#(MetaConsNamed#("Map", 0, 5), Tuple5#(Meta#(MetaField#("update", 0), Conc#(function Action f(Map::MapKeyIndex#(ky, ix) x1, vl x2))), Meta#(MetaField#("updateWithFunc", 1), Conc#(function Action f(Map::MapKeyIndex#(ky, ix) x1, vl x2, function vl x3(vl x1, vl x2), Bool x4))), Meta#(MetaField#("lookup", 2), Conc#(function Maybe#(vl) f(Map::MapKeyIndex#(ky, ix) x1))), Meta#(MetaField#("clear", 3), Conc#(Action)), Meta#(MetaField#("clearDone", 4), Conc#(Bool))))))} {Generic#(Map::MapKeyIndex#(ky, ix), Meta#(MetaData#("MapKeyIndex", "Map", Tuple2#(StarArg#(ky), StarArg#(ix)), 1), Meta#(MetaConsNamed#("MapKeyIndex", 0, 2), Tuple2#(Meta#(MetaField#("key", 0), Conc#(ky)), Meta#(MetaField#("index", 1), Conc#(ix))))))} {Generic#(Map::MapKeyIndexValue#(ky, ix, vl), Meta#(MetaData#("MapKeyIndexValue", "Map", Tuple3#(StarArg#(ky), StarArg#(ix), StarArg#(vl)), 1), Meta#(MetaConsNamed#("MapKeyIndexValue", 0, 3), Tuple3#(Meta#(MetaField#("key", 0), Conc#(ky)), Meta#(MetaField#("index", 1), Conc#(ix)), Meta#(MetaField#("value", 2), Conc#(vl))))))} {Generic#(Map::MapKeyValue#(ky, vl), Meta#(MetaData#("MapKeyValue", "Map", Tuple2#(StarArg#(ky), StarArg#(vl)), 1), Meta#(MetaConsNamed#("MapKeyValue", 0, 2), Tuple2#(Meta#(MetaField#("key", 0), Conc#(ky)), Meta#(MetaField#("value", 1), Conc#(vl))))))} {Generic#(Map::MapSplit#(ky, ix, vl, as), Meta#(MetaData#("MapSplit", "Map", Tuple4#(StarArg#(ky), StarArg#(ix), StarArg#(vl), NumArg#(as)), 1), Meta#(MetaConsNamed#("MapSplit", 0, 5), Tuple5#(Meta#(MetaField#("update", 0), Conc#(function Action f(Map::MapKeyIndex#(ky, ix) x1, vl x2))), Meta#(MetaField#("lookupStart", 1), Conc#(function Action f(Map::MapKeyIndex#(ky, ix) x1))), Meta#(MetaField#("lookupRead", 2), Conc#(Maybe#(vl))), Meta#(MetaField#("clear", 3), Conc#(Action)), Meta#(MetaField#("clearDone", 4), Conc#(Bool))))))} {Generic#(MasterSlave::Master#(req_t, rsp_t), Meta#(MetaData#("Master", "MasterSlave", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Master", 0, 2), Tuple2#(Meta#(MetaField#("req", 0), Conc#(SourceSink::Source#(req_t))), Meta#(MetaField#("rsp", 1), Conc#(SourceSink::Sink#(rsp_t)))))))} {Generic#(MasterSlave::Slave#(req_t, rsp_t), Meta#(MetaData#("Slave", "MasterSlave", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Slave", 0, 2), Tuple2#(Meta#(MetaField#("req", 0), Conc#(SourceSink::Sink#(req_t))), Meta#(MetaField#("rsp", 1), Conc#(SourceSink::Source#(rsp_t)))))))} {Generic#(MasterSlaveCHERI::CheckedGet#(t), Meta#(MetaData#("CheckedGet", "MasterSlaveCHERI", StarArg#(t), 1), Meta#(MetaConsNamed#("CheckedGet", 0, 3), Tuple3#(Meta#(MetaField#("canGet", 0), Conc#(Bool)), Meta#(MetaField#("peek", 1), Conc#(t)), Meta#(MetaField#("get", 2), Conc#(ActionValue#(t)))))))} {Generic#(MasterSlaveCHERI::CheckedPut#(t), Meta#(MetaData#("CheckedPut", "MasterSlaveCHERI", StarArg#(t), 1), Meta#(MetaConsNamed#("CheckedPut", 0, 2), Tuple2#(Meta#(MetaField#("canPut", 0), Conc#(Bool)), Meta#(MetaField#("put", 1), Conc#(function Action f(t x1)))))))} {Generic#(MasterSlaveCHERI::Forward#(req_t, rsp_t), Meta#(MetaData#("Forward", "MasterSlaveCHERI", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Forward", 0, 2), Tuple2#(Meta#(MetaField#("slave", 0), Conc#(MasterSlaveCHERI::Slave#(req_t, rsp_t))), Meta#(MetaField#("master", 1), Conc#(MasterSlaveCHERI::Master#(req_t, rsp_t)))))))} {Generic#(MasterSlaveCHERI::ForwardPutGet#(a), Meta#(MetaData#("ForwardPutGet", "MasterSlaveCHERI", StarArg#(a), 1), Meta#(MetaConsNamed#("ForwardPutGet", 0, 2), Tuple2#(Meta#(MetaField#("cput", 0), Conc#(MasterSlaveCHERI::CheckedPut#(a))), Meta#(MetaField#("cget", 1), Conc#(MasterSlaveCHERI::CheckedGet#(a)))))))} {Generic#(MasterSlaveCHERI::Master#(req_t, rsp_t), Meta#(MetaData#("Master", "MasterSlaveCHERI", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Master", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(MasterSlaveCHERI::CheckedGet#(req_t))), Meta#(MetaField#("response", 1), Conc#(MasterSlaveCHERI::CheckedPut#(rsp_t)))))))} {Generic#(MasterSlaveCHERI::Slave#(req_t, rsp_t), Meta#(MetaData#("Slave", "MasterSlaveCHERI", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Slave", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(MasterSlaveCHERI::CheckedPut#(req_t))), Meta#(MetaField#("response", 1), Conc#(MasterSlaveCHERI::CheckedGet#(rsp_t)))))))} {Generic#(Maybe#(a), Meta#(MetaData#("Maybe", "Prelude", StarArg#(a), 2), Either#(Meta#(MetaConsAnon#("Invalid", 0, 0), void), Meta#(MetaConsAnon#("Valid", 1, 1), Meta#(MetaField#("_1", 0), Conc#(a))))))} {Generic#(Mcp::IMcpUnitF#(b), Meta#(MetaData#("IMcpUnitF", "Mcp", StarArg#(b), 1), Meta#(MetaConsNamed#("IMcpUnitF", 0, 2), Tuple2#(Meta#(MetaField#("result", 0), Conc#(b)), Meta#(MetaField#("isValid", 1), Conc#(Bool))))))} {Generic#(Mcp::VReg#(n), Meta#(MetaData#("VReg", "Mcp", NumArg#(n), 1), Meta#(MetaConsNamed#("VReg", 0, 2), Tuple2#(Meta#(MetaField#("set", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("get", 1), Conc#(Bit#(n)))))))} {Generic#(MemBRAM::BRAM#(aw, dw), Meta#(MetaData#("BRAM", "MemBRAM", Tuple2#(NumArg#(aw), NumArg#(dw)), 1), Meta#(MetaConsNamed#("BRAM", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function Action f(Bit#(TDiv#(dw, 8)) x1, Bit#(aw) x2, Bit#(dw) x3))), Meta#(MetaField#("peek", 1), Conc#(Bit#(dw)))))))} {Generic#(MemBRAM::BRAM2#(a0w, d0w, a1w, d1w), Meta#(MetaData#("BRAM2", "MemBRAM", Tuple4#(NumArg#(a0w), NumArg#(d0w), NumArg#(a1w), NumArg#(d1w)), 1), Meta#(MetaConsNamed#("BRAM2", 0, 2), Tuple2#(Meta#(MetaField#("p0", 0), Conc#(MemBRAM::BRAM#(a0w, d0w))), Meta#(MetaField#("p1", 1), Conc#(MemBRAM::BRAM#(a1w, d1w)))))))} {Generic#(MemBRAM::_MemBRAM.BRAM287#(_n0, _n1, _n2, _n3, _n4, _n5, _n6), Meta#(MetaData#("_MemBRAM.BRAM287", "MemBRAM", Tuple7#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3), NumArg#(_n4), NumArg#(_n5), NumArg#(_n6)), 1), Meta#(MetaConsNamed#("_MemBRAM.BRAM287", 0, 4), Tuple4#(Meta#(MetaField#("p0_put", 0), Conc#(function ActionValue_#(_n6) f(Bit#(_n5) x1, Bit#(_n4) x2, Bit#(_n3) x3))), Meta#(MetaField#("p0_peek", 1), Conc#(Bit#(_n3))), Meta#(MetaField#("p1_put", 2), Conc#(function ActionValue_#(_n6) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("p1_peek", 3), Conc#(Bit#(_n0)))))))} {Generic#(MemBRAM::_MemBRAM.BRAM60#(_n0, _n1, _n2, _n3), Meta#(MetaData#("_MemBRAM.BRAM60", "MemBRAM", Tuple4#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2), NumArg#(_n3)), 1), Meta#(MetaConsNamed#("_MemBRAM.BRAM60", 0, 2), Tuple2#(Meta#(MetaField#("put", 0), Conc#(function ActionValue_#(_n3) f(Bit#(_n2) x1, Bit#(_n1) x2, Bit#(_n0) x3))), Meta#(MetaField#("peek", 1), Conc#(Bit#(_n0)))))))} {Generic#(MemTypes::BitPO#(n), Meta#(MetaData#("BitPO", "MemTypes", NumArg#(n), 1), Meta#(MetaConsNamed#("BitPO", 0, 1), Meta#(MetaField#("val", 0), Conc#(Bit#(n))))))} {Generic#(MemTypes::MemReq#(addr_t, data_t), Meta#(MetaData#("MemReq", "MemTypes", Tuple2#(StarArg#(addr_t), StarArg#(data_t)), 2), Either#(Meta#(MetaConsNamed#("ReadReq", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(addr_t)), Meta#(MetaField#("numBytes", 1), Conc#(Bit#(TMax#(1, TLog#(TAdd#(1, TLog#(TDiv#(_v100, 8)))))))))), Meta#(MetaConsNamed#("WriteReq", 1, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(addr_t)), Meta#(MetaField#("byteEnable", 1), Conc#(Bit#(TDiv#(_v100, 8)))), Meta#(MetaField#("data", 2), Conc#(data_t)))))))   provisos (Bits#(data_t, _v100))} {Generic#(MemTypes::MemReq_$ReadReq#(addr_t, data_t), Meta#(MetaData#("MemReq_$ReadReq", "MemTypes", Tuple2#(StarArg#(addr_t), StarArg#(data_t)), 1), Meta#(MetaConsNamed#("MemReq_$ReadReq", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(addr_t)), Meta#(MetaField#("numBytes", 1), Conc#(Bit#(TMax#(1, TLog#(TAdd#(1, TLog#(TDiv#(_v100, 8))))))))))))   provisos (Bits#(data_t, _v100))} {Generic#(MemTypes::MemReq_$WriteReq#(addr_t, data_t), Meta#(MetaData#("MemReq_$WriteReq", "MemTypes", Tuple2#(StarArg#(addr_t), StarArg#(data_t)), 1), Meta#(MetaConsNamed#("MemReq_$WriteReq", 0, 3), Tuple3#(Meta#(MetaField#("addr", 0), Conc#(addr_t)), Meta#(MetaField#("byteEnable", 1), Conc#(Bit#(TDiv#(_v100, 8)))), Meta#(MetaField#("data", 2), Conc#(data_t))))))   provisos (Bits#(data_t, _v100))} {Generic#(MemTypes::MemRsp#(data_t), Meta#(MetaData#("MemRsp", "MemTypes", StarArg#(data_t), 3), Either#(Meta#(MetaConsAnon#("ReadRsp", 0, 1), Meta#(MetaField#("_1", 0), Conc#(data_t))), Either#(Meta#(MetaConsAnon#("WriteRsp", 1, 0), void), Meta#(MetaConsAnon#("ErrorRsp", 2, 0), void)))))} {Generic#(MemTypesCHERI::BytesPerFlit, Meta#(MetaData#("BytesPerFlit", "MemTypesCHERI", void, 8), Either#(Meta#(MetaConsAnon#("BYTE_1", 0, 0), void), Either#(Meta#(MetaConsAnon#("BYTE_2", 1, 0), void), Either#(Meta#(MetaConsAnon#("BYTE_4", 2, 0), void), Either#(Meta#(MetaConsAnon#("BYTE_8", 3, 0), void), Either#(Meta#(MetaConsAnon#("BYTE_16", 4, 0), void), Either#(Meta#(MetaConsAnon#("BYTE_32", 5, 0), void), Either#(Meta#(MetaConsAnon#("BYTE_64", 6, 0), void), Meta#(MetaConsAnon#("BYTE_128", 7, 0), void))))))))))} {Generic#(MemTypesCHERI::CacheInst, Meta#(MetaData#("CacheInst", "MemTypesCHERI", void, 9), Either#(Meta#(MetaConsAnon#("CacheInvalidate", 0, 0), void), Either#(Meta#(MetaConsAnon#("CacheInvalidateWriteback", 1, 0), void), Either#(Meta#(MetaConsAnon#("CacheWriteback", 2, 0), void), Either#(Meta#(MetaConsAnon#("CacheSync", 3, 0), void), Either#(Meta#(MetaConsAnon#("Read", 4, 0), void), Either#(Meta#(MetaConsAnon#("Write", 5, 0), void), Either#(Meta#(MetaConsAnon#("StoreConditional", 6, 0), void), Either#(Meta#(MetaConsAnon#("CacheLoadTag", 7, 0), void), Meta#(MetaConsAnon#("CacheNop", 8, 0), void)))))))))))} {Generic#(MemTypesCHERI::CacheOperation, Meta#(MetaData#("CacheOperation", "MemTypesCHERI", void, 1), Meta#(MetaConsNamed#("CacheOperation", 0, 3), Tuple3#(Meta#(MetaField#("inst", 0), Conc#(MemTypesCHERI::CacheInst)), Meta#(MetaField#("cache", 1), Conc#(MemTypesCHERI::WhichCache)), Meta#(MetaField#("indexed", 2), Conc#(Bool))))))} {Generic#(MemTypesCHERI::CheriCapAddress, Meta#(MetaData#("CheriCapAddress", "MemTypesCHERI", void, 1), Meta#(MetaConsNamed#("CheriCapAddress", 0, 2), Tuple2#(Meta#(MetaField#("capNumber", 0), Conc#(MemTypesCHERI::CapNumber)), Meta#(MetaField#("offset", 1), Conc#(Bit#(TLog#(MemTypesCHERI::CapBytes))))))))} {Generic#(MemTypesCHERI::Data#(width), Meta#(MetaData#("Data", "MemTypesCHERI", NumArg#(width), 1), Meta#(MetaConsNamed#("Data", 0, 2), Tuple2#(Meta#(MetaField#("cap", 0), Conc#(MemTypesCHERI::CapTags)), Meta#(MetaField#("data", 1), Conc#(Bit#(width)))))))} {Generic#(MemTypesCHERI::DataMinusCapTags#(width), Meta#(MetaData#("DataMinusCapTags", "MemTypesCHERI", NumArg#(width), 1), Meta#(MetaConsNamed#("DataMinusCapTags", 0, 1), Meta#(MetaField#("data", 0), Conc#(Bit#(width))))))} {Generic#(MemTypesCHERI::Error, Meta#(MetaData#("Error", "MemTypesCHERI", void, 3), Either#(Meta#(MetaConsAnon#("NoError", 0, 0), void), Either#(Meta#(MetaConsAnon#("BusError", 1, 0), void), Meta#(MetaConsAnon#("SlaveError", 2, 0), void)))))} {Generic#(MemTypesCHERI::MemoryRequest#(addr_t, masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryRequest", "MemTypesCHERI", Tuple4#(StarArg#(addr_t), StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 1), Meta#(MetaConsNamed#("MemoryRequest", 0, 5), Tuple5#(Meta#(MetaField#("addr", 0), Conc#(addr_t)), Meta#(MetaField#("masterID", 1), Conc#(masterid_t)), Meta#(MetaField#("transactionID", 2), Conc#(transactionid_t)), Meta#(MetaField#("cancelled", 3), Conc#(Bool)), Meta#(MetaField#("operation", 4), Conc#(MemTypesCHERI::MemoryRequest_$operation#(addr_t, masterid_t, transactionid_t, data_width)))))))} {Generic#(MemTypesCHERI::MemoryRequest_$operation#(addr_t, masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryRequest_$operation", "MemTypesCHERI", Tuple4#(StarArg#(addr_t), StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 3), Either#(Meta#(MetaConsNamed#("Read", 0, 5), Tuple5#(Meta#(MetaField#("uncached", 0), Conc#(Bool)), Meta#(MetaField#("linked", 1), Conc#(Bool)), Meta#(MetaField#("tagOnlyRead", 2), Conc#(Bool)), Meta#(MetaField#("noOfFlits", 3), Conc#(MemTypesCHERI::Flit)), Meta#(MetaField#("bytesPerFlit", 4), Conc#(MemTypesCHERI::BytesPerFlit)))), Either#(Meta#(MetaConsNamed#("Write", 1, 7), Tuple7#(Meta#(MetaField#("last", 0), Conc#(Bool)), Meta#(MetaField#("uncached", 1), Conc#(Bool)), Meta#(MetaField#("conditional", 2), Conc#(Bool)), Meta#(MetaField#("byteEnable", 3), Conc#(Vector::Vector#(TDiv#(data_width, 8), Bool))), Meta#(MetaField#("bitEnable", 4), Conc#(Bit#(8))), Meta#(MetaField#("data", 5), Conc#(MemTypesCHERI::Data#(data_width))), Meta#(MetaField#("length", 6), Conc#(Bit#(8))))), Meta#(MetaConsAnon#("CacheOp", 2, 1), Meta#(MetaField#("_1", 0), Conc#(MemTypesCHERI::CacheOperation)))))))} {Generic#(MemTypesCHERI::MemoryRequest_$operation_$Read#(addr_t, masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryRequest_$operation_$Read", "MemTypesCHERI", Tuple4#(StarArg#(addr_t), StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 1), Meta#(MetaConsNamed#("MemoryRequest_$operation_$Read", 0, 5), Tuple5#(Meta#(MetaField#("uncached", 0), Conc#(Bool)), Meta#(MetaField#("linked", 1), Conc#(Bool)), Meta#(MetaField#("tagOnlyRead", 2), Conc#(Bool)), Meta#(MetaField#("noOfFlits", 3), Conc#(MemTypesCHERI::Flit)), Meta#(MetaField#("bytesPerFlit", 4), Conc#(MemTypesCHERI::BytesPerFlit))))))} {Generic#(MemTypesCHERI::MemoryRequest_$operation_$Write#(addr_t, masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryRequest_$operation_$Write", "MemTypesCHERI", Tuple4#(StarArg#(addr_t), StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 1), Meta#(MetaConsNamed#("MemoryRequest_$operation_$Write", 0, 7), Tuple7#(Meta#(MetaField#("last", 0), Conc#(Bool)), Meta#(MetaField#("uncached", 1), Conc#(Bool)), Meta#(MetaField#("conditional", 2), Conc#(Bool)), Meta#(MetaField#("byteEnable", 3), Conc#(Vector::Vector#(TDiv#(data_width, 8), Bool))), Meta#(MetaField#("bitEnable", 4), Conc#(Bit#(8))), Meta#(MetaField#("data", 5), Conc#(MemTypesCHERI::Data#(data_width))), Meta#(MetaField#("length", 6), Conc#(Bit#(8)))))))} {Generic#(MemTypesCHERI::MemoryResponse#(masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryResponse", "MemTypesCHERI", Tuple3#(StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 1), Meta#(MetaConsNamed#("MemoryResponse", 0, 5), Tuple5#(Meta#(MetaField#("masterID", 0), Conc#(masterid_t)), Meta#(MetaField#("transactionID", 1), Conc#(transactionid_t)), Meta#(MetaField#("error", 2), Conc#(MemTypesCHERI::Error)), Meta#(MetaField#("operation", 3), Conc#(MemTypesCHERI::MemoryResponse_$operation#(masterid_t, transactionid_t, data_width))), Meta#(MetaField#("data", 4), Conc#(MemTypesCHERI::Data#(data_width)))))))} {Generic#(MemTypesCHERI::MemoryResponse_$operation#(masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryResponse_$operation", "MemTypesCHERI", Tuple3#(StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 3), Either#(Meta#(MetaConsNamed#("Read", 0, 2), Tuple2#(Meta#(MetaField#("last", 0), Conc#(Bool)), Meta#(MetaField#("tagOnlyRead", 1), Conc#(Bool)))), Either#(Meta#(MetaConsAnon#("Write", 1, 0), void), Meta#(MetaConsAnon#("SC", 2, 1), Meta#(MetaField#("_1", 0), Conc#(Bool)))))))} {Generic#(MemTypesCHERI::MemoryResponse_$operation_$Read#(masterid_t, transactionid_t, data_width), Meta#(MetaData#("MemoryResponse_$operation_$Read", "MemTypesCHERI", Tuple3#(StarArg#(masterid_t), StarArg#(transactionid_t), NumArg#(data_width)), 1), Meta#(MetaConsNamed#("MemoryResponse_$operation_$Read", 0, 2), Tuple2#(Meta#(MetaField#("last", 0), Conc#(Bool)), Meta#(MetaField#("tagOnlyRead", 1), Conc#(Bool))))))} {Generic#(MemTypesCHERI::PhyBitAddress#(width, bytePerLine), Meta#(MetaData#("PhyBitAddress", "MemTypesCHERI", Tuple2#(NumArg#(width), NumArg#(bytePerLine)), 1), Meta#(MetaConsNamed#("PhyBitAddress", 0, 2), Tuple2#(Meta#(MetaField#("byteAddr", 0), Conc#(MemTypesCHERI::PhyByteAddress#(width, bytePerLine))), Meta#(MetaField#("bitOffset", 1), Conc#(Bit#(3)))))))} {Generic#(MemTypesCHERI::PhyByteAddress#(width, bytePerLine), Meta#(MetaData#("PhyByteAddress", "MemTypesCHERI", Tuple2#(NumArg#(width), NumArg#(bytePerLine)), 1), Meta#(MetaConsNamed#("PhyByteAddress", 0, 2), Tuple2#(Meta#(MetaField#("lineNumber", 0), Conc#(MemTypesCHERI::PhyLineNumber#(width, bytePerLine))), Meta#(MetaField#("byteOffset", 1), Conc#(MemTypesCHERI::PhyByteOffset#(bytePerLine)))))))} {Generic#(MemTypesCHERI::ReqId, Meta#(MetaData#("ReqId", "MemTypesCHERI", void, 1), Meta#(MetaConsNamed#("ReqId", 0, 2), Tuple2#(Meta#(MetaField#("masterID", 0), Conc#(MemTypesCHERI::CheriMasterID)), Meta#(MetaField#("transactionID", 1), Conc#(MemTypesCHERI::CheriTransactionID))))))} {Generic#(MemTypesCHERI::WhichCache, Meta#(MetaData#("WhichCache", "MemTypesCHERI", void, 5), Either#(Meta#(MetaConsAnon#("ICache", 0, 0), void), Either#(Meta#(MetaConsAnon#("DCache", 1, 0), void), Either#(Meta#(MetaConsAnon#("None", 2, 0), void), Either#(Meta#(MetaConsAnon#("L2", 3, 0), void), Meta#(MetaConsAnon#("TCache", 4, 0), void)))))))} {Generic#(Memory::MemoryRequest#(a, d), Meta#(MetaData#("MemoryRequest", "Memory", Tuple2#(NumArg#(a), NumArg#(d)), 1), Meta#(MetaConsNamed#("MemoryRequest", 0, 4), Tuple4#(Meta#(MetaField#("write", 0), Conc#(Bool)), Meta#(MetaField#("byteen", 1), Conc#(Bit#(TDiv#(d, 8)))), Meta#(MetaField#("address", 2), Conc#(Bit#(a))), Meta#(MetaField#("data", 3), Conc#(Bit#(d)))))))} {Generic#(Memory::MemoryResponse#(d), Meta#(MetaData#("MemoryResponse", "Memory", NumArg#(d), 1), Meta#(MetaConsNamed#("MemoryResponse", 0, 1), Meta#(MetaField#("data", 0), Conc#(Bit#(d))))))} {Generic#(Meta#(m, r), Meta#(MetaData#("Meta", "Prelude", Tuple2#(StarArg#(m), StarArg#(r)), 1), Meta#(MetaConsAnon#("Meta", 0, 1), Meta#(MetaField#("_1", 0), Conc#(r)))))} {Generic#(MetaConsAnon#(name, idx, nfields), Meta#(MetaData#("MetaConsAnon", "Prelude", Tuple3#(StrArg#(name), NumArg#(idx), NumArg#(nfields)), 1), Meta#(MetaConsAnon#("MetaConsAnon", 0, 0), void)))} {Generic#(MetaConsNamed#(name, idx, nfields), Meta#(MetaData#("MetaConsNamed", "Prelude", Tuple3#(StrArg#(name), NumArg#(idx), NumArg#(nfields)), 1), Meta#(MetaConsAnon#("MetaConsNamed", 0, 0), void)))} {Generic#(MetaData#(name, pkg, tyargs, ncons), Meta#(MetaData#("MetaData", "Prelude", Tuple4#(StrArg#(name), StrArg#(pkg), StarArg#(tyargs), NumArg#(ncons)), 1), Meta#(MetaConsAnon#("MetaData", 0, 0), void)))} {Generic#(MetaField#(name, idx), Meta#(MetaData#("MetaField", "Prelude", Tuple2#(StrArg#(name), NumArg#(idx)), 1), Meta#(MetaConsAnon#("MetaField", 0, 0), void)))} {Generic#(Module#(_v100), ConcPrim#(Module#(_v100)))} {Generic#(ModuleCollect::IWithCollection#(a, i), Meta#(MetaData#("IWithCollection", "ModuleCollect", Tuple2#(StarArg#(a), StarArg#(i)), 1), Meta#(MetaConsNamed#("IWithCollection", 0, 2), Tuple2#(Meta#(MetaField#("device", 0), Conc#(i)), Meta#(MetaField#("collection", 1), Conc#(List#(a)))))))} {Generic#(ModuleContext::ClockContextP#(n), Meta#(MetaData#("ClockContextP", "ModuleContext", NumArg#(n), 1), Meta#(MetaConsNamed#("ClockContextP", 0, 2), Tuple2#(Meta#(MetaField#("clks", 0), Conc#(Vector::Vector#(n, Clock))), Meta#(MetaField#("rsts", 1), Conc#(Vector::Vector#(n, Reset)))))))} {Generic#(ModuleContextCore::ModuleContext#(c, i), Meta#(MetaData#("ModuleContext", "ModuleContextCore", Tuple2#(StarArg#(c), StarArg#(i)), 1), Meta#(MetaConsAnon#("M", 0, 1), Meta#(MetaField#("_1", 0), Conc#(module f#(c x1)(Tuple2#(c, i)))))))} {Generic#(Monitored::Monitored#(originalIfc, events_t), Meta#(MetaData#("Monitored", "Monitored", Tuple2#(StarArg#(originalIfc), StarArg#(events_t)), 1), Meta#(MetaConsNamed#("Monitored", 0, 2), Tuple2#(Meta#(MetaField#("ifc", 0), Conc#(originalIfc)), Meta#(MetaField#("events", 1), Conc#(ReadOnly#(events_t)))))))} {Generic#(MultiLevelTagLookup::CheriTagRequest, Meta#(MetaData#("CheriTagRequest", "MultiLevelTagLookup", void, 1), Meta#(MetaConsNamed#("CheriTagRequest", 0, 2), Tuple2#(Meta#(MetaField#("addr", 0), Conc#(MemTypesCHERI::CheriPhyAddr)), Meta#(MetaField#("operation", 1), Conc#(MultiLevelTagLookup::CheriTagRequest_$operation))))))} {Generic#(MultiLevelTagLookup::CheriTagRequest_$operation, Meta#(MetaData#("CheriTagRequest_$operation", "MultiLevelTagLookup", void, 2), Either#(Meta#(MetaConsAnon#("Read", 0, 0), void), Meta#(MetaConsAnon#("Write", 1, 1), Meta#(MetaField#("_1", 0), Conc#(MultiLevelTagLookup::CheriTagWrite))))))} {Generic#(MultiLevelTagLookup::CheriTagResponse, Meta#(MetaData#("CheriTagResponse", "MultiLevelTagLookup", void, 1), Meta#(MetaConsNamed#("CheriTagResponse", 0, 1), Meta#(MetaField#("tags", 0), Conc#(MultiLevelTagLookup::CheriTagResponse_$tags)))))} {Generic#(MultiLevelTagLookup::CheriTagResponse_$tags, Meta#(MetaData#("CheriTagResponse_$tags", "MultiLevelTagLookup", void, 2), Either#(Meta#(MetaConsAnon#("Uncovered", 0, 0), void), Meta#(MetaConsAnon#("Covered", 1, 1), Meta#(MetaField#("_1", 0), Conc#(MultiLevelTagLookup::LineTags))))))} {Generic#(MultiLevelTagLookup::CheriTagWrite, Meta#(MetaData#("CheriTagWrite", "MultiLevelTagLookup", void, 1), Meta#(MetaConsNamed#("CheriTagWrite", 0, 2), Tuple2#(Meta#(MetaField#("tags", 0), Conc#(MultiLevelTagLookup::LineTags)), Meta#(MetaField#("writeEnable", 1), Conc#(MultiLevelTagLookup::LineTags))))))} {Generic#(MultiLevelTagLookup::State, Meta#(MetaData#("State", "MultiLevelTagLookup", void, 6), Either#(Meta#(MetaConsAnon#("Init", 0, 0), void), Either#(Meta#(MetaConsAnon#("Idle", 1, 0), void), Either#(Meta#(MetaConsAnon#("ReadTag", 2, 0), void), Either#(Meta#(MetaConsAnon#("SetTag", 3, 0), void), Either#(Meta#(MetaConsAnon#("ClearTag", 4, 0), void), Meta#(MetaConsAnon#("FoldZeroes", 5, 0), void))))))))} {Generic#(MultiLevelTagLookup::TableEntry, Meta#(MetaData#("TableEntry", "MultiLevelTagLookup", void, 2), Either#(Meta#(MetaConsAnon#("Node", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bool))), Meta#(MetaConsAnon#("Leaf", 1, 1), Meta#(MetaField#("_1", 0), Conc#(MultiLevelTagLookup::LineTags))))))} {Generic#(MultiLevelTagLookup::TableLvl, Meta#(MetaData#("TableLvl", "MultiLevelTagLookup", void, 1), Meta#(MetaConsNamed#("TableLvl", 0, 5), Tuple5#(Meta#(MetaField#("startAddr", 0), Conc#(MemTypesCHERI::CheriPhyAddr)), Meta#(MetaField#("size", 1), Conc#(Integer)), Meta#(MetaField#("shiftAmnt", 2), Conc#(Integer)), Meta#(MetaField#("groupFactor", 3), Conc#(Integer)), Meta#(MetaField#("groupFactorLog", 4), Conc#(Integer))))))} {Generic#(MultiLevelTagLookup::TagLookupIfc, Meta#(MetaData#("TagLookupIfc", "MultiLevelTagLookup", void, 1), Meta#(MetaConsNamed#("TagLookupIfc", 0, 3), Tuple3#(Meta#(MetaField#("cache", 0), Conc#(MasterSlaveCHERI::Slave#(MultiLevelTagLookup::CheriTagRequest, MultiLevelTagLookup::CheriTagResponse))), Meta#(MetaField#("memory", 1), Conc#(MasterSlaveCHERI::Master#(MemTypesCHERI::CheriMemRequest, MemTypesCHERI::CheriMemResponse))), Meta#(MetaField#("events", 2), Conc#(CacheCore::EventsCacheCore))))))} {Generic#(Name__, ConcPrim#(Name__))} {Generic#(Near_Mem_Caches::State, Meta#(MetaData#("State", "Near_Mem_Caches", void, 3), Either#(Meta#(MetaConsAnon#("STATE_RESET", 0, 0), void), Either#(Meta#(MetaConsAnon#("STATE_RESETTING", 1, 0), void), Meta#(MetaConsAnon#("STATE_READY", 2, 0), void)))))} {Generic#(Near_Mem_IFC::DMem_IFC, Meta#(MetaData#("DMem_IFC", "Near_Mem_IFC", void, 1), Meta#(MetaConsNamed#("DMem_IFC", 0, 8), Tuple8#(Meta#(MetaField#("req", 0), Conc#(function Action f(MMU_Cache_Common::CacheOp x1, Bit#(3) x2, Bool x3, Bit#(5) x4, ISA_Decls::Addr x5, Tuple2#(Bool, Bit#(ISA_Decls::XLEN_2)) x6, ISA_Decls::Priv_Mode x7, Bit#(1) x8, Bit#(1) x9, ISA_Decls::WordXL x10))), Meta#(MetaField#("commit", 1), Conc#(Action)), Meta#(MetaField#("valid", 2), Conc#(Bool)), Meta#(MetaField#("word128", 3), Conc#(Tuple2#(Bool, Bit#(ISA_Decls::XLEN_2)))), Meta#(MetaField#("st_amo_val", 4), Conc#(Bit#(ISA_Decls::XLEN_2))), Meta#(MetaField#("exc", 5), Conc#(Bool)), Meta#(MetaField#("exc_code", 6), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("events", 7), Conc#(StatCounters::EventsL1D))))))} {Generic#(Near_Mem_IFC::EventsCache, Meta#(MetaData#("EventsCache", "Near_Mem_IFC", void, 1), Meta#(MetaConsNamed#("EventsCache", 0, 14), Tuple14#(Meta#(MetaField#("evt_LD", 0), Conc#(Bool)), Meta#(MetaField#("evt_LD_MISS", 1), Conc#(Bool)), Meta#(MetaField#("evt_LD_MISS_LAT", 2), Conc#(Bool)), Meta#(MetaField#("evt_ST", 3), Conc#(Bool)), Meta#(MetaField#("evt_ST_MISS", 4), Conc#(Bool)), Meta#(MetaField#("evt_ST_MISS_LAT", 5), Conc#(Bool)), Meta#(MetaField#("evt_AMO", 6), Conc#(Bool)), Meta#(MetaField#("evt_AMO_MISS", 7), Conc#(Bool)), Meta#(MetaField#("evt_AMO_MISS_LAT", 8), Conc#(Bool)), Meta#(MetaField#("evt_TLB", 9), Conc#(Bool)), Meta#(MetaField#("evt_TLB_MISS", 10), Conc#(Bool)), Meta#(MetaField#("evt_TLB_MISS_LAT", 11), Conc#(Bool)), Meta#(MetaField#("evt_TLB_FLUSH", 12), Conc#(Bool)), Meta#(MetaField#("evt_EVICT", 13), Conc#(Bool))))))} {Generic#(Near_Mem_IFC::IMem_IFC, Meta#(MetaData#("IMem_IFC", "Near_Mem_IFC", void, 1), Meta#(MetaConsNamed#("IMem_IFC", 0, 10), Tuple10#(Meta#(MetaField#("req", 0), Conc#(function Action f(Bit#(3) x1, ISA_Decls::WordXL x2, ISA_Decls::Priv_Mode x3, Bit#(1) x4, Bit#(1) x5, ISA_Decls::WordXL x6))), Meta#(MetaField#("commit", 1), Conc#(Action)), Meta#(MetaField#("valid", 2), Conc#(Bool)), Meta#(MetaField#("is_i32_not_i16", 3), Conc#(Bool)), Meta#(MetaField#("pc", 4), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("instr", 5), Conc#(ISA_Decls::Instr)), Meta#(MetaField#("exc", 6), Conc#(Bool)), Meta#(MetaField#("exc_code", 7), Conc#(ISA_Decls::Exc_Code)), Meta#(MetaField#("tval", 8), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("events", 9), Conc#(StatCounters::EventsL1I))))))} {Generic#(Near_Mem_IFC::Near_Mem_IFC, Meta#(MetaData#("Near_Mem_IFC", "Near_Mem_IFC", void, 1), Meta#(MetaConsNamed#("Near_Mem_IFC", 0, 11), Tuple11#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("imem", 1), Conc#(Near_Mem_IFC::IMem_IFC)), Meta#(MetaField#("imem_master", 2), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User))), Meta#(MetaField#("dmem", 3), Conc#(Near_Mem_IFC::DMem_IFC)), Meta#(MetaField#("mem_master", 4), Conc#(Fabric_Defs::Near_Mem_Fabric_IFC)), Meta#(MetaField#("server_fence_i", 5), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("server_fence", 6), Conc#(ClientServer::Server#(ISA_Decls::Fence_Ordering, ISA_Decls::Token))), Meta#(MetaField#("sfence_vma_server", 7), Conc#(ClientServer::Server#(ISA_Decls::Token, ISA_Decls::Token))), Meta#(MetaField#("dma_server", 8), Conc#(AXI4_Types::AXI4_Slave#(Near_Mem_IFC::Wd_Id_Dma, Near_Mem_IFC::Wd_Addr_Dma, Near_Mem_IFC::Wd_Data_Dma, Near_Mem_IFC::Wd_AW_User_Dma, Near_Mem_IFC::Wd_W_User_Dma, Near_Mem_IFC::Wd_B_User_Dma, Near_Mem_IFC::Wd_AR_User_Dma, Near_Mem_IFC::Wd_R_User_Dma))), Meta#(MetaField#("ma_ddr4_ready", 9), Conc#(Action)), Meta#(MetaField#("mv_status", 10), Conc#(Bit#(8)))))))} {Generic#(Near_Mem_IO_AXI4::Module_State, Meta#(MetaData#("Module_State", "Near_Mem_IO_AXI4", void, 2), Either#(Meta#(MetaConsAnon#("MODULE_STATE_START", 0, 0), void), Meta#(MetaConsAnon#("MODULE_STATE_READY", 1, 0), void))))} {Generic#(Near_Mem_IO_AXI4::Near_Mem_IO_AXI4_IFC, Meta#(MetaData#("Near_Mem_IO_AXI4_IFC", "Near_Mem_IO_AXI4", void, 1), Meta#(MetaConsNamed#("Near_Mem_IO_AXI4_IFC", 0, 5), Tuple5#(Meta#(MetaField#("server_reset", 0), Conc#(ClientServer::Server#(Bit#(0), Bit#(0)))), Meta#(MetaField#("set_addr_map", 1), Conc#(function Action f(Bit#(64) x1, Bit#(64) x2))), Meta#(MetaField#("axi4_slave", 2), Conc#(AXI4_Types::AXI4_Slave#(Fabric_Defs::Wd_SId_2x3, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, 0, 0, 0, 0, 0))), Meta#(MetaField#("get_timer_interrupt_req", 3), Conc#(GetPut::Get#(Bool))), Meta#(MetaField#("get_sw_interrupt_req", 4), Conc#(GetPut::Get#(Bool)))))))} {Generic#(NullCrossingFIFOF::CrossingFIFOF#(a), Meta#(MetaData#("CrossingFIFOF", "NullCrossingFIFOF", StarArg#(a), 1), Meta#(MetaConsNamed#("CrossingFIFOF", 0, 2), Tuple2#(Meta#(MetaField#("fifo", 0), Conc#(FIFOF::FIFOF#(a))), Meta#(MetaField#("allowCclock", 1), Conc#(Bool))))))} {Generic#(NullCrossingFIFOF::SceMiCrossingReg#(a), Meta#(MetaData#("SceMiCrossingReg", "NullCrossingFIFOF", StarArg#(a), 1), Meta#(MetaConsNamed#("SceMiCrossingReg", 0, 4), Tuple4#(Meta#(MetaField#("regifc", 0), Conc#(Reg#(a))), Meta#(MetaField#("writtenPulse", 1), Conc#(Bool)), Meta#(MetaField#("readPulse", 2), Conc#(Bool)), Meta#(MetaField#("allowCclock", 3), Conc#(Bool))))))} {Generic#(NumArg#(i), Meta#(MetaData#("NumArg", "Prelude", NumArg#(i), 1), Meta#(MetaConsAnon#("NumArg", 0, 0), void)))} {Generic#(NumberTypes::BuffIndex#(sz, ln), Meta#(MetaData#("BuffIndex", "NumberTypes", Tuple2#(NumArg#(sz), NumArg#(ln)), 1), Meta#(MetaConsNamed#("BuffIndex", 0, 1), Meta#(MetaField#("bix", 0), Conc#(UInt#(sz))))))} {Generic#(NumberTypes::WrapNumber#(sz), Meta#(MetaData#("WrapNumber", "NumberTypes", NumArg#(sz), 1), Meta#(MetaConsNamed#("WrapNumber", 0, 1), Meta#(MetaField#("n", 0), Conc#(UInt#(sz))))))} {Generic#(OInt::OInt#(n), Meta#(MetaData#("OInt", "OInt", NumArg#(n), 1), Meta#(MetaConsAnon#("O", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Vector::Vector#(n, Bool))))))} {Generic#(OVLAssertions::AssertFifoTest_IFC#(a, b), Meta#(MetaData#("AssertFifoTest_IFC", "OVLAssertions", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("AssertFifoTest_IFC", 0, 2), Tuple2#(Meta#(MetaField#("push", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("pop", 1), Conc#(function Action f(b x1)))))))} {Generic#(OVLAssertions::AssertQuiescentTest_IFC#(a), Meta#(MetaData#("AssertQuiescentTest_IFC", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("AssertQuiescentTest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("sample", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("state", 1), Conc#(function Action f(a x1))), Meta#(MetaField#("check", 2), Conc#(function Action f(a x1)))))))} {Generic#(OVLAssertions::AssertSampleTest_IFC#(a), Meta#(MetaData#("AssertSampleTest_IFC", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("AssertSampleTest_IFC", 0, 2), Tuple2#(Meta#(MetaField#("sample", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("test", 1), Conc#(function Action f(a x1)))))))} {Generic#(OVLAssertions::AssertStartStopTest_IFC#(a), Meta#(MetaData#("AssertStartStopTest_IFC", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("AssertStartStopTest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("stop", 1), Conc#(function Action f(Bool x1))), Meta#(MetaField#("test", 2), Conc#(function Action f(a x1)))))))} {Generic#(OVLAssertions::AssertStartTest_IFC#(a), Meta#(MetaData#("AssertStartTest_IFC", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("AssertStartTest_IFC", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function Action f(Bool x1))), Meta#(MetaField#("test", 1), Conc#(function Action f(a x1)))))))} {Generic#(OVLAssertions::AssertTest_IFC#(a), Meta#(MetaData#("AssertTest_IFC", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("AssertTest_IFC", 0, 1), Meta#(MetaField#("test", 0), Conc#(function Action f(a x1))))))} {Generic#(OVLAssertions::AssertTransitionTest_IFC#(a), Meta#(MetaData#("AssertTransitionTest_IFC", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("AssertTransitionTest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("test", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("start", 1), Conc#(function Action f(a x1))), Meta#(MetaField#("next", 2), Conc#(function Action f(a x1)))))))} {Generic#(OVLAssertions::OVLActionOnNewStart, Meta#(MetaData#("OVLActionOnNewStart", "OVLAssertions", void, 5), Either#(Meta#(MetaConsAnon#("OVL_IGNORE_NEW_START", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_RESET_ON_NEW_START", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_ERROR_ON_NEW_START", 2, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 3, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 4, 0), void)))))))} {Generic#(OVLAssertions::OVLCoverageLevel, Meta#(MetaData#("OVLCoverageLevel", "OVLAssertions", void, 8), Either#(Meta#(MetaConsAnon#("OVL_COVER_NONE", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_COVER_ALL", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_COVER_SANITY", 2, 0), void), Either#(Meta#(MetaConsAnon#("OVL_COVER_BASIC", 3, 0), void), Either#(Meta#(MetaConsAnon#("OVL_COVER_CORNER", 4, 0), void), Either#(Meta#(MetaConsAnon#("OVL_COVER_STATISTIC", 5, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 6, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 7, 0), void))))))))))} {Generic#(OVLAssertions::OVLDefaults#(a), Meta#(MetaData#("OVLDefaults", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("OVLDefaults", 0, 23), Tuple23#(Meta#(MetaField#("severity_level", 0), Conc#(OVLAssertions::OVLSeverityLevel)), Meta#(MetaField#("property_type", 1), Conc#(OVLAssertions::OVLPropertyType)), Meta#(MetaField#("msg", 2), Conc#(String)), Meta#(MetaField#("coverage_level", 3), Conc#(OVLAssertions::OVLCoverageLevel)), Meta#(MetaField#("action_on_new_start", 4), Conc#(OVLAssertions::OVLActionOnNewStart)), Meta#(MetaField#("edge_type", 5), Conc#(OVLAssertions::OVLEdgeType)), Meta#(MetaField#("necessary_condition", 6), Conc#(OVLAssertions::OVLNecessaryCondition)), Meta#(MetaField#("inactive", 7), Conc#(OVLAssertions::OVLInactive)), Meta#(MetaField#("num_cks", 8), Conc#(Int#(32))), Meta#(MetaField#("min_cks", 9), Conc#(Int#(32))), Meta#(MetaField#("max_cks", 10), Conc#(Int#(32))), Meta#(MetaField#("min_ack_cycle", 11), Conc#(Int#(32))), Meta#(MetaField#("max_ack_cycle", 12), Conc#(Int#(32))), Meta#(MetaField#("max_ack_length", 13), Conc#(Int#(32))), Meta#(MetaField#("req_drop", 14), Conc#(Int#(32))), Meta#(MetaField#("deassert_count", 15), Conc#(Int#(32))), Meta#(MetaField#("depth", 16), Conc#(Int#(32))), Meta#(MetaField#("value", 17), Conc#(a)), Meta#(MetaField#("min", 18), Conc#(a)), Meta#(MetaField#("max", 19), Conc#(a)), Meta#(MetaField#("check_overlapping", 20), Conc#(Bool)), Meta#(MetaField#("check_missing_start", 21), Conc#(Bool)), Meta#(MetaField#("simultaneous_push_pop", 22), Conc#(Bool))))))} {Generic#(OVLAssertions::OVLDefaultsTemplate#(a), Meta#(MetaData#("OVLDefaultsTemplate", "OVLAssertions", StarArg#(a), 1), Meta#(MetaConsNamed#("OVLDefaultsTemplate", 0, 23), Tuple23#(Meta#(MetaField#("severity_level", 0), Conc#(Maybe#(OVLAssertions::OVLSeverityLevel))), Meta#(MetaField#("property_type", 1), Conc#(Maybe#(OVLAssertions::OVLPropertyType))), Meta#(MetaField#("msg", 2), Conc#(Maybe#(String))), Meta#(MetaField#("coverage_level", 3), Conc#(Maybe#(OVLAssertions::OVLCoverageLevel))), Meta#(MetaField#("action_on_new_start", 4), Conc#(Maybe#(OVLAssertions::OVLActionOnNewStart))), Meta#(MetaField#("edge_type", 5), Conc#(Maybe#(OVLAssertions::OVLEdgeType))), Meta#(MetaField#("necessary_condition", 6), Conc#(Maybe#(OVLAssertions::OVLNecessaryCondition))), Meta#(MetaField#("inactive", 7), Conc#(Maybe#(OVLAssertions::OVLInactive))), Meta#(MetaField#("num_cks", 8), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("min_cks", 9), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("max_cks", 10), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("min_ack_cycle", 11), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("max_ack_cycle", 12), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("max_ack_length", 13), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("req_drop", 14), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("deassert_count", 15), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("depth", 16), Conc#(Maybe#(Int#(32)))), Meta#(MetaField#("value", 17), Conc#(Maybe#(a))), Meta#(MetaField#("min", 18), Conc#(Maybe#(a))), Meta#(MetaField#("max", 19), Conc#(Maybe#(a))), Meta#(MetaField#("check_overlapping", 20), Conc#(Maybe#(Bool))), Meta#(MetaField#("check_missing_start", 21), Conc#(Maybe#(Bool))), Meta#(MetaField#("simultaneous_push_pop", 22), Conc#(Maybe#(Bool)))))))} {Generic#(OVLAssertions::OVLEdgeType, Meta#(MetaData#("OVLEdgeType", "OVLAssertions", void, 6), Either#(Meta#(MetaConsAnon#("OVL_NOEDGE", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_POSEDGE", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_NEGEDGE", 2, 0), void), Either#(Meta#(MetaConsAnon#("OVL_ANYEDGE", 3, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 4, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 5, 0), void))))))))} {Generic#(OVLAssertions::OVLInactive, Meta#(MetaData#("OVLInactive", "OVLAssertions", void, 5), Either#(Meta#(MetaConsAnon#("OVL_ALL_ZEROS", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_ALL_ONES", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_ONE_COLD", 2, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 3, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 4, 0), void)))))))} {Generic#(OVLAssertions::OVLNecessaryCondition, Meta#(MetaData#("OVLNecessaryCondition", "OVLAssertions", void, 5), Either#(Meta#(MetaConsAnon#("OVL_TRIGGER_ON_MOST_PIPE", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_TRIGGER_ON_FIRST_PIPE", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_TRIGGER_ON_FIRST_NOPIPE", 2, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 3, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 4, 0), void)))))))} {Generic#(OVLAssertions::OVLPropertyType, Meta#(MetaData#("OVLPropertyType", "OVLAssertions", void, 5), Either#(Meta#(MetaConsAnon#("OVL_ASSERT", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_ASSUME", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_IGNORE", 2, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 3, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 4, 0), void)))))))} {Generic#(OVLAssertions::OVLSeverityLevel, Meta#(MetaData#("OVLSeverityLevel", "OVLAssertions", void, 6), Either#(Meta#(MetaConsAnon#("OVL_FATAL", 0, 0), void), Either#(Meta#(MetaConsAnon#("OVL_ERROR", 1, 0), void), Either#(Meta#(MetaConsAnon#("OVL_WARNING", 2, 0), void), Either#(Meta#(MetaConsAnon#("OVL_INFO", 3, 0), void), Either#(Meta#(MetaConsAnon#("DEFAULT", 4, 0), void), Meta#(MetaConsAnon#("ILLEGAL", 5, 0), void))))))))} {Generic#(OVLAssertions::VAssertFifoTest_IFC#(n, m), Meta#(MetaData#("VAssertFifoTest_IFC", "OVLAssertions", Tuple2#(NumArg#(n), NumArg#(m)), 1), Meta#(MetaConsNamed#("VAssertFifoTest_IFC", 0, 2), Tuple2#(Meta#(MetaField#("push", 0), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("pop", 1), Conc#(function Action f(Bit#(m) x1)))))))} {Generic#(OVLAssertions::VAssertQuiescentTest_IFC#(n), Meta#(MetaData#("VAssertQuiescentTest_IFC", "OVLAssertions", NumArg#(n), 1), Meta#(MetaConsNamed#("VAssertQuiescentTest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("sample", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("state", 1), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("check", 2), Conc#(function Action f(Bit#(n) x1)))))))} {Generic#(OVLAssertions::VAssertSampleTest_IFC#(n), Meta#(MetaData#("VAssertSampleTest_IFC", "OVLAssertions", NumArg#(n), 1), Meta#(MetaConsNamed#("VAssertSampleTest_IFC", 0, 2), Tuple2#(Meta#(MetaField#("sample", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function Action f(Bit#(n) x1)))))))} {Generic#(OVLAssertions::VAssertStartStopTest_IFC#(n), Meta#(MetaData#("VAssertStartStopTest_IFC", "OVLAssertions", NumArg#(n), 1), Meta#(MetaConsNamed#("VAssertStartStopTest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("stop", 1), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("test", 2), Conc#(function Action f(Bit#(n) x1)))))))} {Generic#(OVLAssertions::VAssertStartTest_IFC#(n), Meta#(MetaData#("VAssertStartTest_IFC", "OVLAssertions", NumArg#(n), 1), Meta#(MetaConsNamed#("VAssertStartTest_IFC", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function Action f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function Action f(Bit#(n) x1)))))))} {Generic#(OVLAssertions::VAssertTest_IFC#(n), Meta#(MetaData#("VAssertTest_IFC", "OVLAssertions", NumArg#(n), 1), Meta#(MetaConsNamed#("VAssertTest_IFC", 0, 1), Meta#(MetaField#("test", 0), Conc#(function Action f(Bit#(n) x1))))))} {Generic#(OVLAssertions::VAssertTransitionTest_IFC#(n), Meta#(MetaData#("VAssertTransitionTest_IFC", "OVLAssertions", NumArg#(n), 1), Meta#(MetaConsNamed#("VAssertTransitionTest_IFC", 0, 3), Tuple3#(Meta#(MetaField#("test", 0), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("start", 1), Conc#(function Action f(Bit#(n) x1))), Meta#(MetaField#("next", 2), Conc#(function Action f(Bit#(n) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertFifoTest_IFC2830#(_n0, _n1, _n2), Meta#(MetaData#("_OVLAssertions.VAssertFifoTest_IFC2830", "OVLAssertions", Tuple3#(NumArg#(_n0), NumArg#(_n1), NumArg#(_n2)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertFifoTest_IFC2830", 0, 2), Tuple2#(Meta#(MetaField#("push", 0), Conc#(function ActionValue_#(_n2) f(Bit#(_n1) x1))), Meta#(MetaField#("pop", 1), Conc#(function ActionValue_#(_n2) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertQuiescentTest_IFC2691#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertQuiescentTest_IFC2691", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertQuiescentTest_IFC2691", 0, 3), Tuple3#(Meta#(MetaField#("sample", 0), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("state", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("check", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertSampleTest_IFC804#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertSampleTest_IFC804", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertSampleTest_IFC804", 0, 2), Tuple2#(Meta#(MetaField#("sample", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartStopTest_IFC2147#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertStartStopTest_IFC2147", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartStopTest_IFC2147", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("stop", 1), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("test", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartStopTest_IFC2214#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertStartStopTest_IFC2214", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartStopTest_IFC2214", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("stop", 1), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("test", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartStopTest_IFC2280#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertStartStopTest_IFC2280", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartStopTest_IFC2280", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("stop", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 2), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC1123#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC1123", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC1123", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC1193#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC1193", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC1193", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC1260#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC1260", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC1260", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC1505#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC1505", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC1505", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC1950#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC1950", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC1950", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC2016#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC2016", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC2016", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC2463#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC2463", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC2463", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertStartTest_IFC868#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertStartTest_IFC868", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertStartTest_IFC868", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(function ActionValue_#(_n1) f(Bit#(1) x1))), Meta#(MetaField#("test", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1057#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1057", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1057", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1321#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1321", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1321", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1379#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1379", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1379", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1436#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1436", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1436", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1572#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1572", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1572", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1641#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1641", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1641", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1705#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1705", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1705", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1765#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1765", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1765", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1819#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1819", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1819", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC1881#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC1881", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC1881", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC2081#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC2081", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC2081", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC2339#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC2339", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC2339", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC2400#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC2400", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC2400", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC2753#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC2753", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC2753", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC744#(_n0), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC744", "OVLAssertions", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC744", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n0) f(Bit#(1) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC932#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC932", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC932", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTest_IFC995#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTest_IFC995", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTest_IFC995", 0, 1), Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTransitionTest_IFC2541#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTransitionTest_IFC2541", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTransitionTest_IFC2541", 0, 3), Tuple3#(Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("start", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("next", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(OVLAssertions::_OVLAssertions.VAssertTransitionTest_IFC2609#(_n0, _n1), Meta#(MetaData#("_OVLAssertions.VAssertTransitionTest_IFC2609", "OVLAssertions", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_OVLAssertions.VAssertTransitionTest_IFC2609", 0, 3), Tuple3#(Meta#(MetaField#("test", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("start", 1), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("next", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1)))))))} {Generic#(Once::Once, Meta#(MetaData#("Once", "Once", void, 1), Meta#(MetaConsNamed#("Once", 0, 2), Tuple2#(Meta#(MetaField#("start", 0), Conc#(Action)), Meta#(MetaField#("clear", 1), Conc#(Action))))))} {Generic#(OneHotArbiter::OneHotArbiter, Meta#(MetaData#("OneHotArbiter", "OneHotArbiter", void, 1), Meta#(MetaConsNamed#("OneHotArbiter", 0, 1), Meta#(MetaField#("next", 0), Conc#(ActionValue#(List#(Bool)))))))} {Generic#(Ordering, Meta#(MetaData#("Ordering", "Prelude", void, 3), Either#(Meta#(MetaConsAnon#("LT", 0, 0), void), Either#(Meta#(MetaConsAnon#("EQ", 1, 0), void), Meta#(MetaConsAnon#("GT", 2, 0), void)))))} {Generic#(P2_Core::P2_Core_IFC, Meta#(MetaData#("P2_Core_IFC", "P2_Core", void, 1), Meta#(MetaConsNamed#("P2_Core_IFC", 0, 4), Tuple4#(Meta#(MetaField#("master0", 0), Conc#(AXI4_Types::AXI4_Master_Sig#(Fabric_Defs::Wd_MId, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, 0, 0, 0, 0, 0))), Meta#(MetaField#("master1", 1), Conc#(AXI4_Types::AXI4_Master_Sig#(Fabric_Defs::Wd_MId_ext, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, Fabric_Defs::Wd_AW_User_ext, Fabric_Defs::Wd_W_User_ext, Fabric_Defs::Wd_B_User_ext, Fabric_Defs::Wd_AR_User_ext, Fabric_Defs::Wd_R_User_ext))), Meta#(MetaField#("interrupt_reqs", 2), Conc#(function Action f(Bit#(SoC_Map::N_External_Interrupt_Sources) x1))), Meta#(MetaField#("jtag", 3), Conc#(Giraffe_IFC::JTAG_IFC))))))} {Generic#(PAClib::PipeOut#(t), Meta#(MetaData#("PipeOut", "PAClib", StarArg#(t), 1), Meta#(MetaConsNamed#("PipeOut", 0, 3), Tuple3#(Meta#(MetaField#("first", 0), Conc#(t)), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("notEmpty", 2), Conc#(Bool))))))} {Generic#(PLIC::PLIC_IFC#(t_n_external_sources, t_n_targets, t_max_priority), Meta#(MetaData#("PLIC_IFC", "PLIC", Tuple3#(NumArg#(t_n_external_sources), NumArg#(t_n_targets), NumArg#(t_max_priority)), 1), Meta#(MetaConsNamed#("PLIC_IFC", 0, 7), Tuple7#(Meta#(MetaField#("set_verbosity", 0), Conc#(function Action f(Bit#(4) x1))), Meta#(MetaField#("show_PLIC_state", 1), Conc#(Action)), Meta#(MetaField#("server_reset", 2), Conc#(ClientServer::Server#(Bit#(0), Bit#(0)))), Meta#(MetaField#("set_addr_map", 3), Conc#(function Action f(Bit#(64) x1, Bit#(64) x2))), Meta#(MetaField#("axi4_slave", 4), Conc#(AXI4_Types::AXI4_Slave#(Fabric_Defs::Wd_SId_2x3, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data, 0, 0, 0, 0, 0))), Meta#(MetaField#("v_sources", 5), Conc#(Vector::Vector#(t_n_external_sources, PLIC::PLIC_Source_IFC))), Meta#(MetaField#("v_targets", 6), Conc#(Vector::Vector#(t_n_targets, PLIC::PLIC_Target_IFC)))))))} {Generic#(PLIC::PLIC_Source_IFC, Meta#(MetaData#("PLIC_Source_IFC", "PLIC", void, 1), Meta#(MetaConsNamed#("PLIC_Source_IFC", 0, 1), Meta#(MetaField#("m_interrupt_req", 0), Conc#(function Action f(Bool x1))))))} {Generic#(PLIC::PLIC_Target_IFC, Meta#(MetaData#("PLIC_Target_IFC", "PLIC", void, 1), Meta#(MetaConsNamed#("PLIC_Target_IFC", 0, 1), Meta#(MetaField#("m_eip", 0), Conc#(Bool)))))} {Generic#(PerformanceMonitor::PerfCounters_IFC#(ctrs, ctrW, rptW, evts), Meta#(MetaData#("PerfCounters_IFC", "PerformanceMonitor", Tuple4#(NumArg#(ctrs), NumArg#(ctrW), NumArg#(rptW), NumArg#(evts)), 1), Meta#(MetaConsNamed#("PerfCounters_IFC", 0, 8), Tuple8#(Meta#(MetaField#("send_performance_events", 0), Conc#(function Action f(Vector::Vector#(evts, Bit#(rptW)) x1))), Meta#(MetaField#("read_counters", 1), Conc#(Vector::Vector#(ctrs, ReadOnly#(Bit#(ctrW))))), Meta#(MetaField#("read_ctr_sels", 2), Conc#(Vector::Vector#(ctrs, ReadOnly#(Bit#(TLog#(evts)))))), Meta#(MetaField#("read_ctr_inhibit", 3), Conc#(ReadOnly#(Bit#(ctrs)))), Meta#(MetaField#("read_ctr_overflow", 4), Conc#(ReadOnly#(Bit#(ctrs)))), Meta#(MetaField#("write_counter", 5), Conc#(function Action f(Bit#(TLog#(ctrs)) x1, Bit#(ctrW) x2))), Meta#(MetaField#("write_ctr_sel", 6), Conc#(function Action f(Bit#(TLog#(ctrs)) x1, Bit#(TLog#(evts)) x2))), Meta#(MetaField#("write_ctr_inhibit", 7), Conc#(function Action f(Bit#(ctrs) x1)))))))} {Generic#(Position__, ConcPrim#(Position__))} {Generic#(Power, ConcPrim#(Power))} {Generic#(Pred__, ConcPrim#(Pred__))} {Generic#(PrimAction, ConcPrim#(PrimAction))} {Generic#(Printf::RealFormat, Meta#(MetaData#("RealFormat", "Printf", void, 3), Either#(Meta#(MetaConsAnon#("RFGeneric", 0, 0), void), Either#(Meta#(MetaConsAnon#("RFExponent", 1, 0), void), Meta#(MetaConsAnon#("RFFixed", 2, 0), void)))))} {Generic#(Printf::UPrintf, Meta#(MetaData#("UPrintf", "Printf", void, 4), Either#(Meta#(MetaConsAnon#("UChar", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Char))), Either#(Meta#(MetaConsAnon#("UString", 1, 1), Meta#(MetaField#("_1", 0), Conc#(String))), Either#(Meta#(MetaConsAnon#("UInteger", 2, 1), Meta#(MetaField#("_1", 0), Conc#(Tuple2#(Integer, Integer)))), Meta#(MetaConsAnon#("UReal", 3, 1), Meta#(MetaField#("_1", 0), Conc#(Real))))))))} {Generic#(Probe::Probe#(a), Meta#(MetaData#("Probe", "Probe", StarArg#(a), 1), Meta#(MetaConsNamed#("Probe", 0, 1), Meta#(MetaField#("_write", 0), Conc#(function Action f(a x1))))))} {Generic#(Probe::_Probe.Probe48#(_n0, _n1), Meta#(MetaData#("_Probe.Probe48", "Probe", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_Probe.Probe48", 0, 1), Meta#(MetaField#("_write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))))))} {Generic#(ProbeWire::ProbeWire#(a), Meta#(MetaData#("ProbeWire", "ProbeWire", StarArg#(a), 1), Meta#(MetaConsNamed#("ProbeWire", 0, 1), Meta#(MetaField#("id", 0), Conc#(function a f(a x1))))))} {Generic#(ProbeWire::_ProbeWire.ProbeWire42#(_n0), Meta#(MetaData#("_ProbeWire.ProbeWire42", "ProbeWire", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_ProbeWire.ProbeWire42", 0, 1), Meta#(MetaField#("id", 0), Conc#(function Bit#(_n0) f(Bit#(_n0) x1))))))} {Generic#(Pull::Pull#(a), Meta#(MetaData#("Pull", "Pull", StarArg#(a), 1), Meta#(MetaConsNamed#("Pull", 0, 1), Meta#(MetaField#("pull", 0), Conc#(ActionValue#(a))))))} {Generic#(PulseWire, Meta#(MetaData#("PulseWire", "PreludeBSV", void, 1), Meta#(MetaConsNamed#("PulseWire", 0, 2), Tuple2#(Meta#(MetaField#("send", 0), Conc#(Action)), Meta#(MetaField#("_read", 1), Conc#(Bool))))))} {Generic#(Push::Push#(a), Meta#(MetaData#("Push", "Push", StarArg#(a), 1), Meta#(MetaConsNamed#("Push", 0, 1), Meta#(MetaField#("push", 0), Conc#(function Action f(a x1))))))} {Generic#(RAM::RAMreq#(adr, dta), Meta#(MetaData#("RAMreq", "RAM", Tuple2#(StarArg#(adr), StarArg#(dta)), 2), Either#(Meta#(MetaConsAnon#("Read", 0, 1), Meta#(MetaField#("_1", 0), Conc#(adr))), Meta#(MetaConsAnon#("Write", 1, 1), Meta#(MetaField#("_1", 0), Conc#(Tuple2#(adr, dta)))))))} {Generic#(RISCV_MBox::RISCV_MBox_IFC, Meta#(MetaData#("RISCV_MBox_IFC", "RISCV_MBox", void, 1), Meta#(MetaConsNamed#("RISCV_MBox_IFC", 0, 6), Tuple6#(Meta#(MetaField#("set_verbosity", 0), Conc#(function Action f(Bit#(4) x1))), Meta#(MetaField#("req_reset", 1), Conc#(Action)), Meta#(MetaField#("rsp_reset", 2), Conc#(ActionValue#(Bit#(0)))), Meta#(MetaField#("req", 3), Conc#(function Action f(Bool x1, Bit#(3) x2, ISA_Decls::WordXL x3, ISA_Decls::WordXL x4))), Meta#(MetaField#("valid", 4), Conc#(Bool)), Meta#(MetaField#("word", 5), Conc#(ISA_Decls::WordXL))))))} {Generic#(RISCV_MBox::State, Meta#(MetaData#("State", "RISCV_MBox", void, 3), Either#(Meta#(MetaConsAnon#("STATE_MUL1", 0, 0), void), Either#(Meta#(MetaConsAnon#("STATE_MUL2", 1, 0), void), Meta#(MetaConsAnon#("STATE_DIV_REM", 2, 0), void)))))} {Generic#(RPush::RPush#(a), Meta#(MetaData#("RPush", "RPush", StarArg#(a), 1), Meta#(MetaConsNamed#("RPush", 0, 2), Tuple2#(Meta#(MetaField#("push", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("clear", 1), Conc#(Action))))))} {Generic#(RWire#(a), Meta#(MetaData#("RWire", "PreludeBSV", StarArg#(a), 1), Meta#(MetaConsNamed#("RWire", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("wget", 1), Conc#(Maybe#(a)))))))} {Generic#(Randomizable::Control, Meta#(MetaData#("Control", "Randomizable", void, 1), Meta#(MetaConsNamed#("Control", 0, 1), Meta#(MetaField#("init", 0), Conc#(Action)))))} {Generic#(Randomizable::Randomize#(a), Meta#(MetaData#("Randomize", "Randomizable", StarArg#(a), 1), Meta#(MetaConsNamed#("Randomize", 0, 2), Tuple2#(Meta#(MetaField#("cntrl", 0), Conc#(Randomizable::Control)), Meta#(MetaField#("next", 1), Conc#(ActionValue#(a)))))))} {Generic#(Randomizable::VRandomize#(n), Meta#(MetaData#("VRandomize", "Randomizable", NumArg#(n), 1), Meta#(MetaConsNamed#("VRandomize", 0, 1), Meta#(MetaField#("next", 0), Conc#(ActionValue#(Bit#(n)))))))} {Generic#(Randomizable::_Randomizable.VRandomize27#(_n0), Meta#(MetaData#("_Randomizable.VRandomize27", "Randomizable", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_Randomizable.VRandomize27", 0, 1), Meta#(MetaField#("next", 0), Conc#(ActionValue_#(_n0))))))} {Generic#(ReadOnly#(a_type), Meta#(MetaData#("ReadOnly", "PreludeBSV", StarArg#(a_type), 1), Meta#(MetaConsNamed#("ReadOnly", 0, 1), Meta#(MetaField#("_read", 0), Conc#(a_type)))))} {Generic#(Real, ConcPrim#(Real))} {Generic#(Reg#(a), Meta#(MetaData#("Reg", "Prelude", StarArg#(a), 1), Meta#(MetaConsNamed#("Reg", 0, 2), Tuple2#(Meta#(MetaField#("_write", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("_read", 1), Conc#(a))))))} {Generic#(RegFile::RegFile#(i, a), Meta#(MetaData#("RegFile", "RegFile", Tuple2#(StarArg#(i), StarArg#(a)), 1), Meta#(MetaConsNamed#("RegFile", 0, 2), Tuple2#(Meta#(MetaField#("upd", 0), Conc#(function Action f(i x1, a x2))), Meta#(MetaField#("sub", 1), Conc#(function a f(i x1)))))))} {Generic#(RegFile::VRegFile#(ni, na), Meta#(MetaData#("VRegFile", "RegFile", Tuple2#(NumArg#(ni), NumArg#(na)), 1), Meta#(MetaConsNamed#("VRegFile", 0, 2), Tuple2#(Meta#(MetaField#("upd", 0), Conc#(function PrimAction f(Bit#(ni) x1, Bit#(na) x2))), Meta#(MetaField#("sub", 1), Conc#(function Bit#(na) f(Bit#(ni) x1)))))))} {Generic#(RegTwo::RegTwo#(a), Meta#(MetaData#("RegTwo", "RegTwo", StarArg#(a), 1), Meta#(MetaConsNamed#("RegTwo", 0, 3), Tuple3#(Meta#(MetaField#("setA", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("setB", 1), Conc#(function Action f(a x1))), Meta#(MetaField#("get", 2), Conc#(a))))))} {Generic#(RegTwo::VRegTwo#(n), Meta#(MetaData#("VRegTwo", "RegTwo", NumArg#(n), 1), Meta#(MetaConsNamed#("VRegTwo", 0, 3), Tuple3#(Meta#(MetaField#("setA", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("setB", 1), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("get", 2), Conc#(Bit#(n)))))))} {Generic#(Reserved::Reserved#(n), Meta#(MetaData#("Reserved", "Reserved", NumArg#(n), 1), Meta#(MetaConsAnon#("Reserved", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(n))))))} {Generic#(Reserved::ReservedOne#(n), Meta#(MetaData#("ReservedOne", "Reserved", NumArg#(n), 1), Meta#(MetaConsAnon#("ReservedOne", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(n))))))} {Generic#(Reserved::ReservedZero#(n), Meta#(MetaData#("ReservedZero", "Reserved", NumArg#(n), 1), Meta#(MetaConsAnon#("ReservedZero", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(n))))))} {Generic#(Reset, ConcPrim#(Reset))} {Generic#(RevertingVirtualReg::VReg#(n), Meta#(MetaData#("VReg", "RevertingVirtualReg", NumArg#(n), 1), Meta#(MetaConsNamed#("VReg", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(n)))))))} {Generic#(Routable::Range#(n), Meta#(MetaData#("Range", "Routable", NumArg#(n), 1), Meta#(MetaConsNamed#("Range", 0, 2), Tuple2#(Meta#(MetaField#("base", 0), Conc#(Bit#(n))), Meta#(MetaField#("size", 1), Conc#(Bit#(n)))))))} {Generic#(Routable::WithMetaInfo#(t, m_t), Meta#(MetaData#("WithMetaInfo", "Routable", Tuple2#(StarArg#(t), StarArg#(m_t)), 1), Meta#(MetaConsNamed#("WithMetaInfo", 0, 2), Tuple2#(Meta#(MetaField#("payload", 0), Conc#(t)), Meta#(MetaField#("metaInfo", 1), Conc#(m_t))))))} {Generic#(Routable::WithRouteInfo#(t, r_t), Meta#(MetaData#("WithRouteInfo", "Routable", Tuple2#(StarArg#(t), StarArg#(r_t)), 1), Meta#(MetaConsNamed#("WithRouteInfo", 0, 2), Tuple2#(Meta#(MetaField#("payload", 0), Conc#(t)), Meta#(MetaField#("routeInfo", 1), Conc#(r_t))))))} {Generic#(Rules, ConcPrim#(Rules))} {Generic#(SPSRAM::VSyncSRAM#(adrs, dtas), Meta#(MetaData#("VSyncSRAM", "SPSRAM", Tuple2#(NumArg#(adrs), NumArg#(dtas)), 1), Meta#(MetaConsNamed#("VSyncSRAM", 0, 2), Tuple2#(Meta#(MetaField#("exec", 0), Conc#(function PrimAction f(Bit#(adrs) x1, Bit#(dtas) x2, Bit#(1) x3, Bit#(1) x4))), Meta#(MetaField#("rdata", 1), Conc#(Bit#(dtas)))))))} {Generic#(SRAM::ShiftReg#(n, a), Meta#(MetaData#("ShiftReg", "SRAM", Tuple2#(NumArg#(n), StarArg#(a)), 1), Meta#(MetaConsNamed#("ShiftReg", 0, 2), Tuple2#(Meta#(MetaField#("output", 0), Conc#(a)), Meta#(MetaField#("shift", 1), Conc#(function Action f(a x1)))))))} {Generic#(SVA::AssertRes, Meta#(MetaData#("AssertRes", "SVA", void, 2), Either#(Meta#(MetaConsAnon#("AssertOkay", 0, 0), void), Meta#(MetaConsAnon#("AssertFail", 1, 0), void))))} {Generic#(SVA::Assertion, Meta#(MetaData#("Assertion", "SVA", void, 1), Meta#(MetaConsNamed#("Assertion", 0, 1), Meta#(MetaField#("advance", 0), Conc#(ActionValue#(SVA::AssertRes))))))} {Generic#(SVA::PropRes, Meta#(MetaData#("PropRes", "SVA", void, 4), Either#(Meta#(MetaConsAnon#("PropTrue", 0, 0), void), Either#(Meta#(MetaConsAnon#("PropUndetermined", 1, 0), void), Either#(Meta#(MetaConsAnon#("PropFalse", 2, 0), void), Meta#(MetaConsAnon#("PropVacuous", 3, 0), void))))))} {Generic#(SVA::Property, Meta#(MetaData#("Property", "SVA", void, 1), Meta#(MetaConsNamed#("Property", 0, 1), Meta#(MetaField#("advance", 0), Conc#(ActionValue#(SVA::PropRes))))))} {Generic#(SVA::SeqRes, Meta#(MetaData#("SeqRes", "SVA", void, 4), Either#(Meta#(MetaConsAnon#("SeqFail", 0, 0), void), Either#(Meta#(MetaConsAnon#("SeqPending", 1, 0), void), Either#(Meta#(MetaConsAnon#("SeqHold", 2, 0), void), Meta#(MetaConsAnon#("SeqHoldStrong", 3, 0), void))))))} {Generic#(SVA::Sequence, Meta#(MetaData#("Sequence", "SVA", void, 1), Meta#(MetaConsNamed#("Sequence", 0, 2), Tuple2#(Meta#(MetaField#("running", 0), Conc#(Bool)), Meta#(MetaField#("advance", 1), Conc#(ActionValue#(SVA::SeqRes)))))))} {Generic#(SVA::Wrap1, Meta#(MetaData#("Wrap1", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap1", 0, 1), Meta#(MetaField#("f", 0), Conc#(function SVA::SeqRes f(Bool x1))))))} {Generic#(SVA::Wrap2, Meta#(MetaData#("Wrap2", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap2", 0, 1), Meta#(MetaField#("f", 0), Conc#(function Tuple3#(Bool, Bool, SVA::SeqRes) f(SVA::SeqRes x1))))))} {Generic#(SVA::Wrap3, Meta#(MetaData#("Wrap3", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap3", 0, 1), Meta#(MetaField#("f", 0), Conc#(function Bool f(SVA::SeqRes x1))))))} {Generic#(SVA::Wrap4, Meta#(MetaData#("Wrap4", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap4", 0, 1), Meta#(MetaField#("f", 0), Conc#(function SVA::SeqRes f(Bool x1, Bool x2, SVA::SeqRes x3, SVA::SeqRes x4))))))} {Generic#(SVA::Wrap5, Meta#(MetaData#("Wrap5", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap5", 0, 1), Meta#(MetaField#("f", 0), Conc#(function SVA::SeqRes f(SVA::SeqRes x1, SVA::SeqRes x2))))))} {Generic#(SVA::Wrap6, Meta#(MetaData#("Wrap6", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap6", 0, 1), Meta#(MetaField#("f", 0), Conc#(function Tuple2#(Bool, SVA::SeqRes) f(SVA::SeqRes x1))))))} {Generic#(SVA::Wrap7, Meta#(MetaData#("Wrap7", "SVA", void, 1), Meta#(MetaConsNamed#("Wrap7", 0, 1), Meta#(MetaField#("f", 0), Conc#(function Tuple3#(Bool, Maybe#(SVA::SeqRes), SVA::SeqRes) f(SVA::SeqRes x1, SVA::SeqRes x2))))))} {Generic#(SaturationMode, Meta#(MetaData#("SaturationMode", "PreludeBSV", void, 4), Either#(Meta#(MetaConsAnon#("Sat_Wrap", 0, 0), void), Either#(Meta#(MetaConsAnon#("Sat_Bound", 1, 0), void), Either#(Meta#(MetaConsAnon#("Sat_Zero", 2, 0), void), Meta#(MetaConsAnon#("Sat_Symmetric", 3, 0), void))))))} {Generic#(SchedPragma, ConcPrim#(SchedPragma))} {Generic#(Semi_FIFOF::Client_Semi_FIFOF#(req_t, rsp_t), Meta#(MetaData#("Client_Semi_FIFOF", "Semi_FIFOF", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Client_Semi_FIFOF", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(Semi_FIFOF::FIFOF_O#(req_t))), Meta#(MetaField#("response", 1), Conc#(Semi_FIFOF::FIFOF_I#(rsp_t)))))))} {Generic#(Semi_FIFOF::FIFOF_I#(t), Meta#(MetaData#("FIFOF_I", "Semi_FIFOF", StarArg#(t), 1), Meta#(MetaConsNamed#("FIFOF_I", 0, 2), Tuple2#(Meta#(MetaField#("enq", 0), Conc#(function Action f(t x1))), Meta#(MetaField#("notFull", 1), Conc#(Bool))))))} {Generic#(Semi_FIFOF::FIFOF_O#(t), Meta#(MetaData#("FIFOF_O", "Semi_FIFOF", StarArg#(t), 1), Meta#(MetaConsNamed#("FIFOF_O", 0, 3), Tuple3#(Meta#(MetaField#("first", 0), Conc#(t)), Meta#(MetaField#("deq", 1), Conc#(Action)), Meta#(MetaField#("notEmpty", 2), Conc#(Bool))))))} {Generic#(Semi_FIFOF::Server_Semi_FIFOF#(req_t, rsp_t), Meta#(MetaData#("Server_Semi_FIFOF", "Semi_FIFOF", Tuple2#(StarArg#(req_t), StarArg#(rsp_t)), 1), Meta#(MetaConsNamed#("Server_Semi_FIFOF", 0, 2), Tuple2#(Meta#(MetaField#("request", 0), Conc#(Semi_FIFOF::FIFOF_I#(req_t))), Meta#(MetaField#("response", 1), Conc#(Semi_FIFOF::FIFOF_O#(rsp_t)))))))} {Generic#(SimpleUtils::ArchReg#(t), Meta#(MetaData#("ArchReg", "SimpleUtils", StarArg#(t), 1), Meta#(MetaConsNamed#("ArchReg", 0, 7), Tuple7#(Meta#(MetaField#("_read", 0), Conc#(t)), Meta#(MetaField#("_write", 1), Conc#(function Action f(t x1))), Meta#(MetaField#("early", 2), Conc#(WriteOnly#(t))), Meta#(MetaField#("late", 3), Conc#(Reg#(t))), Meta#(MetaField#("needCommit", 4), Conc#(Bool)), Meta#(MetaField#("commitVal", 5), Conc#(t)), Meta#(MetaField#("commit", 6), Conc#(Action))))))} {Generic#(SimpleUtils::ArchRegFile#(n, a), Meta#(MetaData#("ArchRegFile", "SimpleUtils", Tuple2#(NumArg#(n), StarArg#(a)), 1), Meta#(MetaConsNamed#("ArchRegFile", 0, 5), Tuple5#(Meta#(MetaField#("r", 0), Conc#(Vector::Vector#(n, SimpleUtils::ArchReg#(a)))), Meta#(MetaField#("commit", 1), Conc#(Action)), Meta#(MetaField#("rd_idx", 2), Conc#(Bit#(TLog#(n)))), Meta#(MetaField#("rd_old_val", 3), Conc#(a)), Meta#(MetaField#("rd_new_val", 4), Conc#(a))))))} {Generic#(SoC_Map::SoC_Map_IFC, Meta#(MetaData#("SoC_Map_IFC", "SoC_Map", void, 1), Meta#(MetaConsNamed#("SoC_Map_IFC", 0, 25), Tuple25#(Meta#(MetaField#("m_plic_addr_range", 0), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_near_mem_io_addr_range", 1), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_ethernet_0_addr_range", 2), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_dma_0_addr_range", 3), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_uart16550_0_addr_range", 4), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_uart16550_1_addr_range", 5), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_iic_0_addr_range", 6), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_axi_quad_spi_0_full_addr_range", 7), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_axi_quad_spi_0_lite_addr_range", 8), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_axi_quad_spi_1_addr_range", 9), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_gpio_0_addr_range", 10), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_gpio_1_addr_range", 11), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_boot_rom_addr_range", 12), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_ddr4_0_uncached_addr_range", 13), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_ddr4_0_cached_addr_range", 14), Conc#(Routable::Range#(Fabric_Defs::Wd_Addr))), Meta#(MetaField#("m_is_mem_addr", 15), Conc#(function Bool f(Fabric_Defs::Fabric_Addr x1))), Meta#(MetaField#("m_is_IO_addr", 16), Conc#(function Bool f(Fabric_Defs::Fabric_Addr x1))), Meta#(MetaField#("m_is_near_mem_IO_addr", 17), Conc#(function Bool f(Fabric_Defs::Fabric_Addr x1))), Meta#(MetaField#("m_pc_reset_value", 18), Conc#(Bit#(ISA_Decls::XLEN))), Meta#(MetaField#("m_pcc_reset_value", 19), Conc#(CHERICC_Fat::CapReg)), Meta#(MetaField#("m_ddc_reset_value", 20), Conc#(CHERICC_Fat::CapReg)), Meta#(MetaField#("m_mtcc_reset_value", 21), Conc#(CHERICC_Fat::CapReg)), Meta#(MetaField#("m_mepcc_reset_value", 22), Conc#(CHERICC_Fat::CapReg)), Meta#(MetaField#("m_mtvec_reset_value", 23), Conc#(Bit#(ISA_Decls::XLEN))), Meta#(MetaField#("m_nmivec_reset_value", 24), Conc#(Bit#(ISA_Decls::XLEN)))))))} {Generic#(SourceSink::Sink#(t), Meta#(MetaData#("Sink", "SourceSink", StarArg#(t), 1), Meta#(MetaConsNamed#("Sink", 0, 2), Tuple2#(Meta#(MetaField#("canPut", 0), Conc#(Bool)), Meta#(MetaField#("put", 1), Conc#(function Action f(t x1)))))))} {Generic#(SourceSink::Source#(t), Meta#(MetaData#("Source", "SourceSink", StarArg#(t), 1), Meta#(MetaConsNamed#("Source", 0, 3), Tuple3#(Meta#(MetaField#("canPeek", 0), Conc#(Bool)), Meta#(MetaField#("peek", 1), Conc#(t)), Meta#(MetaField#("drop", 2), Conc#(Action))))))} {Generic#(SourceSink::SourceSink#(t), Meta#(MetaData#("SourceSink", "SourceSink", StarArg#(t), 1), Meta#(MetaConsNamed#("SourceSink", 0, 2), Tuple2#(Meta#(MetaField#("source", 0), Conc#(SourceSink::Source#(t))), Meta#(MetaField#("sink", 1), Conc#(SourceSink::Sink#(t)))))))} {Generic#(SpecialFIFOs::SCounter, Meta#(MetaData#("SCounter", "SpecialFIFOs", void, 1), Meta#(MetaConsNamed#("SCounter", 0, 6), Tuple6#(Meta#(MetaField#("incr", 0), Conc#(Action)), Meta#(MetaField#("decr", 1), Conc#(Action)), Meta#(MetaField#("isEq", 2), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("setNext", 3), ConcPoly#(SpecialFIFOs::SCounter_setNext)), Meta#(MetaField#("set", 4), ConcPoly#(SpecialFIFOs::SCounter_set)), Meta#(MetaField#("clear", 5), Conc#(Action))))))} {Generic#(StarArg#(i), Meta#(MetaData#("StarArg", "Prelude", StarArg#(i), 1), Meta#(MetaConsAnon#("StarArg", 0, 0), void)))} {Generic#(StatCounters::AXI4_Master_Events, Meta#(MetaData#("AXI4_Master_Events", "StatCounters", void, 1), Meta#(MetaConsNamed#("AXI4_Master_Events", 0, 7), Tuple7#(Meta#(MetaField#("evt_AW_FLIT", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_W_FLIT", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_W_FLIT_FINAL", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_B_FLIT", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AR_FLIT", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_R_FLIT", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_R_FLIT_FINAL", 6), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::AXI4_Slave_Events, Meta#(MetaData#("AXI4_Slave_Events", "StatCounters", void, 1), Meta#(MetaConsNamed#("AXI4_Slave_Events", 0, 7), Tuple7#(Meta#(MetaField#("evt_AW_FLIT", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_W_FLIT", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_W_FLIT_FINAL", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_B_FLIT", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AR_FLIT", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_R_FLIT", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_R_FLIT_FINAL", 6), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::EventsCore, Meta#(MetaData#("EventsCore", "StatCounters", void, 1), Meta#(MetaConsNamed#("EventsCore", 0, 31), Tuple31#(Meta#(MetaField#("evt_NO_EV", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_REDIRECT", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TRAP", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_BRANCH", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_JAL", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_JALR", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AUIPC", 6), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LOAD", 7), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_STORE", 8), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LR", 9), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_SC", 10), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AMO", 11), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_SERIAL_SHIFT", 12), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_INT_MUL_DIV_REM", 13), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_FP", 14), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_SC_SUCCESS", 15), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LOAD_WAIT", 16), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_STORE_WAIT", 17), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_FENCE", 18), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_F_BUSY_NO_CONSUME", 19), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_D_BUSY_NO_CONSUME", 20), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_1_BUSY_NO_CONSUME", 21), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_2_BUSY_NO_CONSUME", 22), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_3_BUSY_NO_CONSUME", 23), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_IMPRECISE_SETBOUND", 24), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_UNREPRESENTABLE_CAP", 25), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_MEM_CAP_LOAD", 26), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_MEM_CAP_STORE", 27), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_MEM_CAP_LOAD_TAG_SET", 28), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_MEM_CAP_STORE_TAG_SET", 29), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_INTERRUPT", 30), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::EventsL1D, Meta#(MetaData#("EventsL1D", "StatCounters", void, 1), Meta#(MetaConsNamed#("EventsL1D", 0, 14), Tuple14#(Meta#(MetaField#("evt_LD", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LD_MISS", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LD_MISS_LAT", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_ST", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_ST_MISS", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_ST_MISS_LAT", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AMO", 6), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AMO_MISS", 7), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_AMO_MISS_LAT", 8), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB", 9), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_MISS", 10), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_MISS_LAT", 11), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_FLUSH", 12), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_EVICT", 13), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::EventsL1I, Meta#(MetaData#("EventsL1I", "StatCounters", void, 1), Meta#(MetaConsNamed#("EventsL1I", 0, 7), Tuple7#(Meta#(MetaField#("evt_LD", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LD_MISS", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LD_MISS_LAT", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_MISS", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_MISS_LAT", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_FLUSH", 6), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::EventsLL, Meta#(MetaData#("EventsLL", "StatCounters", void, 1), Meta#(MetaConsNamed#("EventsLL", 0, 9), Tuple9#(Meta#(MetaField#("evt_LD", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LD_MISS", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_LD_MISS_LAT", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_ST", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_ST_MISS", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_MISS", 6), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_TLB_FLUSH", 7), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_EVICT", 8), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::EventsTGC, Meta#(MetaData#("EventsTGC", "StatCounters", void, 1), Meta#(MetaConsNamed#("EventsTGC", 0, 7), Tuple7#(Meta#(MetaField#("evt_WRITE", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_WRITE_MISS", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_READ", 2), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_READ_MISS", 3), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_EVICT", 4), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_SET_TAG_WRITE", 5), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_SET_TAG_READ", 6), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::EventsTransExe, Meta#(MetaData#("EventsTransExe", "StatCounters", void, 1), Meta#(MetaConsNamed#("EventsTransExe", 0, 3), Tuple3#(Meta#(MetaField#("evt_RENAMED_INST", 0), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_WILD_JUMP", 1), Conc#(Bit#(ISA_Decls::Report_Width))), Meta#(MetaField#("evt_WILD_EXCEPTION", 2), Conc#(Bit#(ISA_Decls::Report_Width)))))))} {Generic#(StatCounters::HPMEvents, Meta#(MetaData#("HPMEvents", "StatCounters", void, 1), Meta#(MetaConsNamed#("HPMEvents", 0, 8), Tuple8#(Meta#(MetaField#("mab_EventsCore", 0), Conc#(Maybe#(StatCounters::EventsCore))), Meta#(MetaField#("mab_EventsL1I", 1), Conc#(Maybe#(StatCounters::EventsL1I))), Meta#(MetaField#("mab_EventsL1D", 2), Conc#(Maybe#(StatCounters::EventsL1D))), Meta#(MetaField#("mab_EventsTGC", 3), Conc#(Maybe#(StatCounters::EventsTGC))), Meta#(MetaField#("mab_AXI4_Slave_Events", 4), Conc#(Maybe#(StatCounters::AXI4_Slave_Events))), Meta#(MetaField#("mab_AXI4_Master_Events", 5), Conc#(Maybe#(StatCounters::AXI4_Master_Events))), Meta#(MetaField#("mab_EventsLL", 6), Conc#(Maybe#(StatCounters::EventsLL))), Meta#(MetaField#("mab_EventsTransExe", 7), Conc#(Maybe#(StatCounters::EventsTransExe)))))))} {Generic#(StmtFSM::ActionType, Meta#(MetaData#("ActionType", "StmtFSM", void, 5), Either#(Meta#(MetaConsAnon#("Default", 0, 0), void), Either#(Meta#(MetaConsAnon#("Update", 1, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::Freedom))), Either#(Meta#(MetaConsAnon#("Jump", 2, 1), Meta#(MetaField#("_1", 0), Conc#(String))), Either#(Meta#(MetaConsAnon#("Wait", 3, 0), void), Meta#(MetaConsAnon#("NoME", 4, 0), void)))))))} {Generic#(StmtFSM::FSM, Meta#(MetaData#("FSM", "StmtFSM", void, 1), Meta#(MetaConsNamed#("FSM", 0, 4), Tuple4#(Meta#(MetaField#("start", 0), Conc#(Action)), Meta#(MetaField#("done", 1), Conc#(Bool)), Meta#(MetaField#("waitTillDone", 2), Conc#(Action)), Meta#(MetaField#("abort", 3), Conc#(Action))))))} {Generic#(StmtFSM::FSMAbort, Meta#(MetaData#("FSMAbort", "StmtFSM", void, 1), Meta#(MetaConsNamed#("FSMAbort", 0, 1), Meta#(MetaField#("abort", 0), Conc#(Action)))))} {Generic#(StmtFSM::FSMServer#(a, b), Meta#(MetaData#("FSMServer", "StmtFSM", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("FSMServer", 0, 2), Tuple2#(Meta#(MetaField#("server", 0), Conc#(ClientServer::Server#(a, b))), Meta#(MetaField#("abort", 1), Conc#(Action))))))} {Generic#(StmtFSM::Freedom, Meta#(MetaData#("Freedom", "StmtFSM", void, 2), Either#(Meta#(MetaConsAnon#("Early", 0, 1), Meta#(MetaField#("_1", 0), Conc#(String))), Meta#(MetaConsAnon#("Overlap", 1, 0), void))))} {Generic#(StmtFSM::LabelState#(a), Meta#(MetaData#("LabelState", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("LabelState", 0, 5), Tuple5#(Meta#(MetaField#("state_num", 0), Conc#(Integer)), Meta#(MetaField#("return_label", 1), Conc#(String)), Meta#(MetaField#("label_names", 2), Conc#(List#(String))), Meta#(MetaField#("loop_labels", 3), Conc#(Maybe#(Tuple2#(String, String)))), Meta#(MetaField#("ifc", 4), Conc#(GetPut::Put#(a)))))))} {Generic#(StmtFSM::NCount'#(n), Meta#(MetaData#("NCount'", "StmtFSM", NumArg#(n), 1), Meta#(MetaConsNamed#("NCount'", 0, 3), Tuple3#(Meta#(MetaField#("is'", 0), Conc#(function Bool f(Nat x1))), Meta#(MetaField#("reset'", 1), Conc#(Action)), Meta#(MetaField#("incr'", 2), Conc#(Action))))))} {Generic#(StmtFSM::NCount, Meta#(MetaData#("NCount", "StmtFSM", void, 1), Meta#(MetaConsNamed#("NCount", 0, 3), Tuple3#(Meta#(MetaField#("is", 0), Conc#(function Bool f(Nat x1))), Meta#(MetaField#("reset", 1), Conc#(Action)), Meta#(MetaField#("incr", 2), Conc#(Action))))))} {Generic#(StmtFSM::Once, Meta#(MetaData#("Once", "StmtFSM", void, 1), Meta#(MetaConsNamed#("Once", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(Action)), Meta#(MetaField#("clear", 1), Conc#(Action)), Meta#(MetaField#("done", 2), Conc#(Bool))))))} {Generic#(StmtFSM::RFSM#(a), Meta#(MetaData#("RFSM", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("RFSM", 0, 3), Tuple3#(Meta#(MetaField#("start", 0), Conc#(Action)), Meta#(MetaField#("abort", 1), Conc#(Action)), Meta#(MetaField#("ready", 2), Conc#(Bool))))))} {Generic#(StmtFSM::RuleSet, Meta#(MetaData#("RuleSet", "StmtFSM", void, 1), Meta#(MetaConsNamed#("RuleSet", 0, 3), Tuple3#(Meta#(MetaField#("me_local", 0), Conc#(Rules)), Meta#(MetaField#("me_parents", 1), Conc#(Rules)), Meta#(MetaField#("no_me", 2), Conc#(Rules))))))} {Generic#(StmtFSM::State'#(n), Meta#(MetaData#("State'", "StmtFSM", NumArg#(n), 1), Meta#(MetaConsNamed#("State'", 0, 2), Tuple2#(Meta#(MetaField#("is'", 0), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("set'", 1), Conc#(function Action f(Integer x1)))))))} {Generic#(StmtFSM::State, Meta#(MetaData#("State", "StmtFSM", void, 1), Meta#(MetaConsNamed#("State", 0, 4), Tuple4#(Meta#(MetaField#("is", 0), Conc#(function Bool f(Integer x1))), Meta#(MetaField#("set", 1), Conc#(function Action f(Integer x1))), Meta#(MetaField#("overlap", 2), Conc#(Action)), Meta#(MetaField#("fired_last", 3), Conc#(Bool))))))} {Generic#(StmtFSM::StmtFT#(a), Meta#(MetaData#("StmtFT", "StmtFSM", StarArg#(a), 13), Either#(Meta#(MetaConsAnon#("SFAction", 0, 7), Tuple7#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Integer)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::NextStateDescriptors)), Meta#(MetaField#("_4", 3), Conc#(Action)), Meta#(MetaField#("_5", 4), Conc#(Action)), Meta#(MetaField#("_6", 5), Conc#(Maybe#(StmtFSM::ActionType))), Meta#(MetaField#("_7", 6), Conc#(Maybe#(StmtFSM::RuleSet))))), Either#(Meta#(MetaConsAnon#("SFLabel", 1, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::NextStateDescriptors)), Meta#(MetaField#("_4", 3), Conc#(Maybe#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SFNamed", 2, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(List#(StmtFSM::StmtFT#(a)))))), Either#(Meta#(MetaConsAnon#("SFUntil", 3, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)))), Either#(Meta#(MetaConsAnon#("SFIf1", 4, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtFT#(a))))), Either#(Meta#(MetaConsAnon#("SFIf2", 5, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtFT#(a))))), Either#(Meta#(MetaConsAnon#("SFFor", 6, 5), Tuple5#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_3", 2), Conc#(Bool)), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_5", 4), Conc#(StmtFSM::StmtFT#(a))))), Either#(Meta#(MetaConsAnon#("SFSeq", 7, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(List#(StmtFSM::StmtFT#(a)))))), Either#(Meta#(MetaConsAnon#("SFPar", 8, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_3", 2), Conc#(List#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SFSkip", 9, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Either#(Meta#(MetaConsAnon#("SFDelay", 10, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Either#(Meta#(MetaConsAnon#("SFReturn", 11, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Meta#(MetaConsAnon#("SFWhile", 12, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtFT#(a)))))))))))))))))))} {Generic#(StmtFSM::StmtFT_$SFAction#(a), Meta#(MetaData#("StmtFT_$SFAction", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFAction", 0, 7), Tuple7#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Integer)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::NextStateDescriptors)), Meta#(MetaField#("_4", 3), Conc#(Action)), Meta#(MetaField#("_5", 4), Conc#(Action)), Meta#(MetaField#("_6", 5), Conc#(Maybe#(StmtFSM::ActionType))), Meta#(MetaField#("_7", 6), Conc#(Maybe#(StmtFSM::RuleSet)))))))} {Generic#(StmtFSM::StmtFT_$SFFor#(a), Meta#(MetaData#("StmtFT_$SFFor", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFFor", 0, 5), Tuple5#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_3", 2), Conc#(Bool)), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_5", 4), Conc#(StmtFSM::StmtFT#(a)))))))} {Generic#(StmtFSM::StmtFT_$SFIf1#(a), Meta#(MetaData#("StmtFT_$SFIf1", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFIf1", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtFT#(a)))))))} {Generic#(StmtFSM::StmtFT_$SFIf2#(a), Meta#(MetaData#("StmtFT_$SFIf2", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFIf2", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtFT#(a)))))))} {Generic#(StmtFSM::StmtFT_$SFLabel#(a), Meta#(MetaData#("StmtFT_$SFLabel", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFLabel", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::NextStateDescriptors)), Meta#(MetaField#("_4", 3), Conc#(Maybe#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::StmtFT_$SFNamed#(a), Meta#(MetaData#("StmtFT_$SFNamed", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFNamed", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(List#(StmtFSM::StmtFT#(a))))))))} {Generic#(StmtFSM::StmtFT_$SFPar#(a), Meta#(MetaData#("StmtFT_$SFPar", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFPar", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::StmtFT#(a))), Meta#(MetaField#("_3", 2), Conc#(List#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::StmtFT_$SFSeq#(a), Meta#(MetaData#("StmtFT_$SFSeq", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFSeq", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(List#(StmtFSM::StmtFT#(a))))))))} {Generic#(StmtFSM::StmtFT_$SFUntil#(a), Meta#(MetaData#("StmtFT_$SFUntil", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFUntil", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool))))))} {Generic#(StmtFSM::StmtFT_$SFWhile#(a), Meta#(MetaData#("StmtFT_$SFWhile", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtFT_$SFWhile", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtFT#(a)))))))} {Generic#(StmtFSM::StmtM#(a, b), Meta#(MetaData#("StmtM", "StmtFSM", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsAnon#("S", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Module#(Tuple2#(b, StmtFSM::RStmts#(a))))))))} {Generic#(StmtFSM::StmtT#(a), Meta#(MetaData#("StmtT", "StmtFSM", StarArg#(a), 20), Either#(Meta#(MetaConsAnon#("SAction", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Action)), Meta#(MetaField#("_3", 2), Conc#(Maybe#(StmtFSM::ActionType))))), Either#(Meta#(MetaConsAnon#("SActionValue", 1, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(ActionValue#(a))))), Either#(Meta#(MetaConsAnon#("SNamed", 2, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(List#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SLabel", 3, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(Bool)), Meta#(MetaField#("_4", 3), Conc#(Maybe#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SJump", 4, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)))), Either#(Meta#(MetaConsAnon#("SCall", 5, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Action)), Meta#(MetaField#("_3", 2), Conc#(Action)), Meta#(MetaField#("_4", 3), Conc#(Action)))), Either#(Meta#(MetaConsAnon#("SUntil", 6, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)))), Either#(Meta#(MetaConsAnon#("SIf1", 7, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a))))), Either#(Meta#(MetaConsAnon#("SIf2", 8, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtT#(a))))), Either#(Meta#(MetaConsAnon#("SWhile", 9, 6), Tuple6#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_4", 3), Conc#(Maybe#(StmtFSM::StmtT#(a)))), Meta#(MetaField#("_5", 4), Conc#(Maybe#(StmtFSM::StmtT#(a)))), Meta#(MetaField#("_6", 5), Conc#(Maybe#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SFor", 10, 5), Tuple5#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_3", 2), Conc#(Bool)), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_5", 4), Conc#(StmtFSM::StmtT#(a))))), Either#(Meta#(MetaConsAnon#("SSeq", 11, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(List#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SPar", 12, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(List#(StmtFSM::StmtT#(a)))))), Either#(Meta#(MetaConsAnon#("SSkip", 13, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Either#(Meta#(MetaConsAnon#("SRepeat", 14, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Nat)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a))))), Either#(Meta#(MetaConsAnon#("SDelay", 15, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Nat)))), Either#(Meta#(MetaConsAnon#("SReturn", 16, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Either#(Meta#(MetaConsAnon#("SBreak", 17, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Either#(Meta#(MetaConsAnon#("SContinue", 18, 1), Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo))), Meta#(MetaConsAnon#("SExprS", 19, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::RStmt#(a))))))))))))))))))))))))))} {Generic#(StmtFSM::StmtT_$SAction#(a), Meta#(MetaData#("StmtT_$SAction", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SAction", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Action)), Meta#(MetaField#("_3", 2), Conc#(Maybe#(StmtFSM::ActionType)))))))} {Generic#(StmtFSM::StmtT_$SActionValue#(a), Meta#(MetaData#("StmtT_$SActionValue", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SActionValue", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(ActionValue#(a)))))))} {Generic#(StmtFSM::StmtT_$SCall#(a), Meta#(MetaData#("StmtT_$SCall", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SCall", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Action)), Meta#(MetaField#("_3", 2), Conc#(Action)), Meta#(MetaField#("_4", 3), Conc#(Action))))))} {Generic#(StmtFSM::StmtT_$SDelay#(a), Meta#(MetaData#("StmtT_$SDelay", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SDelay", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Nat))))))} {Generic#(StmtFSM::StmtT_$SExprS#(a), Meta#(MetaData#("StmtT_$SExprS", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SExprS", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::RStmt#(a)))))))} {Generic#(StmtFSM::StmtT_$SFor#(a), Meta#(MetaData#("StmtT_$SFor", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SFor", 0, 5), Tuple5#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_3", 2), Conc#(Bool)), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_5", 4), Conc#(StmtFSM::StmtT#(a)))))))} {Generic#(StmtFSM::StmtT_$SIf1#(a), Meta#(MetaData#("StmtT_$SIf1", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SIf1", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a)))))))} {Generic#(StmtFSM::StmtT_$SIf2#(a), Meta#(MetaData#("StmtT_$SIf2", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SIf2", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::StmtT#(a)))))))} {Generic#(StmtFSM::StmtT_$SJump#(a), Meta#(MetaData#("StmtT_$SJump", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SJump", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String))))))} {Generic#(StmtFSM::StmtT_$SLabel#(a), Meta#(MetaData#("StmtT_$SLabel", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SLabel", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(Bool)), Meta#(MetaField#("_4", 3), Conc#(Maybe#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::StmtT_$SNamed#(a), Meta#(MetaData#("StmtT_$SNamed", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SNamed", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(String)), Meta#(MetaField#("_3", 2), Conc#(List#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::StmtT_$SPar#(a), Meta#(MetaData#("StmtT_$SPar", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SPar", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(List#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::StmtT_$SRepeat#(a), Meta#(MetaData#("StmtT_$SRepeat", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SRepeat", 0, 3), Tuple3#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Nat)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a)))))))} {Generic#(StmtFSM::StmtT_$SSeq#(a), Meta#(MetaData#("StmtT_$SSeq", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SSeq", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(List#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::StmtT_$SUntil#(a), Meta#(MetaData#("StmtT_$SUntil", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SUntil", 0, 2), Tuple2#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool))))))} {Generic#(StmtFSM::StmtT_$SWhile#(a), Meta#(MetaData#("StmtT_$SWhile", "StmtFSM", StarArg#(a), 1), Meta#(MetaConsNamed#("StmtT_$SWhile", 0, 6), Tuple6#(Meta#(MetaField#("_1", 0), Conc#(StmtFSM::PosInfo)), Meta#(MetaField#("_2", 1), Conc#(Bool)), Meta#(MetaField#("_3", 2), Conc#(StmtFSM::StmtT#(a))), Meta#(MetaField#("_4", 3), Conc#(Maybe#(StmtFSM::StmtT#(a)))), Meta#(MetaField#("_5", 4), Conc#(Maybe#(StmtFSM::StmtT#(a)))), Meta#(MetaField#("_6", 5), Conc#(Maybe#(StmtFSM::StmtT#(a))))))))} {Generic#(StmtFSM::TSDType, Meta#(MetaData#("TSDType", "StmtFSM", void, 3), Either#(Meta#(MetaConsAnon#("Default", 0, 0), void), Either#(Meta#(MetaConsAnon#("Start", 1, 0), void), Meta#(MetaConsAnon#("End", 2, 0), void)))))} {Generic#(StmtFSM::TwoStateDescriptor, Meta#(MetaData#("TwoStateDescriptor", "StmtFSM", void, 1), Meta#(MetaConsAnon#("TSD", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(Bool)), Meta#(MetaField#("_2", 1), Conc#(Integer)), Meta#(MetaField#("_3", 2), Conc#(Integer)), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::TSDType))))))} {Generic#(StmtFSM::TwoStateDescriptor_$TSD, Meta#(MetaData#("TwoStateDescriptor_$TSD", "StmtFSM", void, 1), Meta#(MetaConsNamed#("TwoStateDescriptor_$TSD", 0, 4), Tuple4#(Meta#(MetaField#("_1", 0), Conc#(Bool)), Meta#(MetaField#("_2", 1), Conc#(Integer)), Meta#(MetaField#("_3", 2), Conc#(Integer)), Meta#(MetaField#("_4", 3), Conc#(StmtFSM::TSDType))))))} {Generic#(StmtFSM::Waiter, Meta#(MetaData#("Waiter", "StmtFSM", void, 1), Meta#(MetaConsNamed#("Waiter", 0, 1), Meta#(MetaField#("wait", 0), Conc#(Action)))))} {Generic#(StmtFSMUtil::MEState, Meta#(MetaData#("MEState", "StmtFSMUtil", void, 1), Meta#(MetaConsNamed#("MEState", 0, 5), Tuple5#(Meta#(MetaField#("set", 0), Conc#(function Action f(Integer x1))), Meta#(MetaField#("set_delayed", 1), Conc#(function Action f(Integer x1))), Meta#(MetaField#("reset", 2), Conc#(Action)), Meta#(MetaField#("reset_delayed", 3), Conc#(Action)), Meta#(MetaField#("is", 4), Conc#(function Bool f(Integer x1)))))))} {Generic#(StmtFSMUtil::MEStateInternal#(a), Meta#(MetaData#("MEStateInternal", "StmtFSMUtil", StarArg#(a), 1), Meta#(MetaConsNamed#("MEStateInternal", 0, 5), Tuple5#(Meta#(MetaField#("set", 0), Conc#(function Action f(Integer x1))), Meta#(MetaField#("set_delayed", 1), Conc#(function Action f(Integer x1))), Meta#(MetaField#("reset", 2), Conc#(Action)), Meta#(MetaField#("reset_delayed", 3), Conc#(Action)), Meta#(MetaField#("is", 4), Conc#(function Bool f(Integer x1)))))))} {Generic#(StrArg#(i), Meta#(MetaData#("StrArg", "Prelude", StrArg#(i), 1), Meta#(MetaConsAnon#("StrArg", 0, 0), void)))} {Generic#(String, ConcPrim#(String))} {Generic#(StringProxy#(s), Meta#(MetaData#("StringProxy", "Prelude", StrArg#(s), 1), Meta#(MetaConsAnon#("StringProxy", 0, 0), void)))} {Generic#(SvaParam, Meta#(MetaData#("SvaParam", "Prelude", void, 2), Either#(Meta#(MetaConsAnon#("SvaBool", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bool))), Meta#(MetaConsAnon#("SvaNumber", 1, 1), Meta#(MetaField#("_1", 0), Conc#(UInt#(32)))))))} {Generic#(SyncSRAM::SyncSRAMrequest#(lat, adrs, dtas), Meta#(MetaData#("SyncSRAMrequest", "SyncSRAM", Tuple3#(NumArg#(lat), NumArg#(adrs), NumArg#(dtas)), 1), Meta#(MetaConsNamed#("SyncSRAMrequest", 0, 4), Tuple4#(Meta#(MetaField#("addr", 0), Conc#(Bit#(adrs))), Meta#(MetaField#("wdata", 1), Conc#(Bit#(dtas))), Meta#(MetaField#("we", 2), Conc#(Bit#(1))), Meta#(MetaField#("ena", 3), Conc#(Bit#(1)))))))} {Generic#(TLB::TLBE, Meta#(MetaData#("TLBE", "TLB", void, 1), Meta#(MetaConsNamed#("TLBE", 0, 3), Tuple3#(Meta#(MetaField#("asid_tag", 0), Conc#(ISA_Decls::ASID)), Meta#(MetaField#("pte", 1), Conc#(ISA_Decls::PTE)), Meta#(MetaField#("pte_pa", 2), Conc#(ISA_Decls::PA))))))} {Generic#(TLB::TLB_IFC, Meta#(MetaData#("TLB_IFC", "TLB", void, 1), Meta#(MetaConsNamed#("TLB_IFC", 0, 4), Tuple4#(Meta#(MetaField#("mv_vm_put_va", 0), Conc#(function Action f(ISA_Decls::WordXL x1))), Meta#(MetaField#("mv_vm_get_xlate", 1), Conc#(function MMU_Cache_Common::VM_Xlate_Result f(ISA_Decls::WordXL x1, Bool x2, Bool x3, ISA_Decls::Priv_Mode x4, Bit#(1) x5, Bit#(1) x6))), Meta#(MetaField#("ma_insert", 2), Conc#(function Action f(ISA_Decls::ASID x1, ISA_Decls::VPN x2, ISA_Decls::PTE x3, Bit#(2) x4, ISA_Decls::PA x5))), Meta#(MetaField#("ma_flush", 3), Conc#(Action))))))} {Generic#(TLB::TLB_Lookup_Result, Meta#(MetaData#("TLB_Lookup_Result", "TLB", void, 1), Meta#(MetaConsNamed#("TLB_Lookup_Result", 0, 4), Tuple4#(Meta#(MetaField#("hit", 0), Conc#(Bool)), Meta#(MetaField#("pte", 1), Conc#(ISA_Decls::PTE)), Meta#(MetaField#("pte_level", 2), Conc#(Bit#(2))), Meta#(MetaField#("pte_pa", 3), Conc#(ISA_Decls::PA))))))} {Generic#(TRAM::TRAMreq#(tg, adr, dta), Meta#(MetaData#("TRAMreq", "TRAM", Tuple3#(StarArg#(tg), StarArg#(adr), StarArg#(dta)), 2), Either#(Meta#(MetaConsAnon#("Read", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Tuple2#(tg, adr)))), Meta#(MetaConsAnon#("Write", 1, 1), Meta#(MetaField#("_1", 0), Conc#(Tuple2#(adr, dta)))))))} {Generic#(TV_Info::Info_CPU_to_Verifier, Meta#(MetaData#("Info_CPU_to_Verifier", "TV_Info", void, 1), Meta#(MetaConsNamed#("Info_CPU_to_Verifier", 0, 2), Tuple2#(Meta#(MetaField#("num_bytes", 0), Conc#(Bit#(32))), Meta#(MetaField#("vec_bytes", 1), Conc#(TV_Info::TV_Vec_Bytes))))))} {Generic#(TV_Info::Trace_Data, Meta#(MetaData#("Trace_Data", "TV_Info", void, 1), Meta#(MetaConsNamed#("Trace_Data", 0, 10), Tuple10#(Meta#(MetaField#("op", 0), Conc#(TV_Info::Trace_Op)), Meta#(MetaField#("pc", 1), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("instr_sz", 2), Conc#(ISA_Decls::ISize)), Meta#(MetaField#("instr", 3), Conc#(Bit#(32))), Meta#(MetaField#("rd", 4), Conc#(ISA_Decls::RegName)), Meta#(MetaField#("word1", 5), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("word2", 6), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("word3", 7), Conc#(Bit#(64))), Meta#(MetaField#("word4", 8), Conc#(ISA_Decls::WordXL)), Meta#(MetaField#("word5", 9), Conc#(Bit#(64)))))))} {Generic#(TV_Info::Trace_Op, Meta#(MetaData#("Trace_Op", "TV_Info", void, 18), Either#(Meta#(MetaConsAnon#("TRACE_RESET", 0, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_GPR_WRITE", 1, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_FPR_WRITE", 2, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_CSR_WRITE", 3, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_MEM_WRITE", 4, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_OTHER", 5, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_I_RD", 6, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_F_GRD", 7, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_F_FRD", 8, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_I_LOAD", 9, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_F_LOAD", 10, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_I_STORE", 11, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_F_STORE", 12, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_AMO", 13, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_TRAP", 14, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_RET", 15, 0), void), Either#(Meta#(MetaConsAnon#("TRACE_CSRRX", 16, 0), void), Meta#(MetaConsAnon#("TRACE_INTR", 17, 0), void))))))))))))))))))))} {Generic#(TV_Taps::DM_CSR_Tap_IFC, Meta#(MetaData#("DM_CSR_Tap_IFC", "TV_Taps", void, 1), Meta#(MetaConsNamed#("DM_CSR_Tap_IFC", 0, 3), Tuple3#(Meta#(MetaField#("client", 0), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("server", 1), Conc#(ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("trace_data_out", 2), Conc#(GetPut::Get#(TV_Info::Trace_Data)))))))} {Generic#(TV_Taps::DM_FPR_Tap_IFC, Meta#(MetaData#("DM_FPR_Tap_IFC", "TV_Taps", void, 1), Meta#(MetaConsNamed#("DM_FPR_Tap_IFC", 0, 3), Tuple3#(Meta#(MetaField#("client", 0), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("server", 1), Conc#(ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("trace_data_out", 2), Conc#(GetPut::Get#(TV_Info::Trace_Data)))))))} {Generic#(TV_Taps::DM_GPR_Tap_IFC, Meta#(MetaData#("DM_GPR_Tap_IFC", "TV_Taps", void, 1), Meta#(MetaConsNamed#("DM_GPR_Tap_IFC", 0, 3), Tuple3#(Meta#(MetaField#("client", 0), Conc#(ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("server", 1), Conc#(ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, ISA_Decls::XLEN), DM_CPU_Req_Rsp::DM_CPU_Rsp#(ISA_Decls::XLEN)))), Meta#(MetaField#("trace_data_out", 2), Conc#(GetPut::Get#(TV_Info::Trace_Data)))))))} {Generic#(TV_Taps::DM_Mem_Tap_IFC, Meta#(MetaData#("DM_Mem_Tap_IFC", "TV_Taps", void, 1), Meta#(MetaConsNamed#("DM_Mem_Tap_IFC", 0, 3), Tuple3#(Meta#(MetaField#("slave", 0), Conc#(AXI4_Types::AXI4_Slave#(Fabric_Defs::Wd_MId_2x3, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data_Periph, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User))), Meta#(MetaField#("master", 1), Conc#(AXI4_Types::AXI4_Master#(Fabric_Defs::Wd_MId_2x3, Fabric_Defs::Wd_Addr, Fabric_Defs::Wd_Data_Periph, Fabric_Defs::Wd_AW_User, Fabric_Defs::Wd_W_User, Fabric_Defs::Wd_B_User, Fabric_Defs::Wd_AR_User, Fabric_Defs::Wd_R_User))), Meta#(MetaField#("trace_data_out", 2), Conc#(GetPut::Get#(TV_Info::Trace_Data)))))))} {Generic#(TagController::AddrFrame, Meta#(MetaData#("AddrFrame", "TagController", void, 1), Meta#(MetaConsNamed#("AddrFrame", 0, 4), Tuple4#(Meta#(MetaField#("tagOnlyRead", 0), Conc#(Bool)), Meta#(MetaField#("bank", 1), Conc#(MemTypesCHERI::CapOffsetInLine)), Meta#(MetaField#("masterID", 2), Conc#(MemTypesCHERI::CheriMasterID)), Meta#(MetaField#("transactionID", 3), Conc#(MemTypesCHERI::CheriTransactionID))))))} {Generic#(TagController::MemReqType, Meta#(MetaData#("MemReqType", "TagController", void, 2), Either#(Meta#(MetaConsAnon#("TagLookupReq", 0, 0), void), Meta#(MetaConsAnon#("StdReq", 1, 0), void))))} {Generic#(TagController::TagControllerIfc, Meta#(MetaData#("TagControllerIfc", "TagController", void, 1), Meta#(MetaConsNamed#("TagControllerIfc", 0, 3), Tuple3#(Meta#(MetaField#("cache", 0), Conc#(MasterSlaveCHERI::Slave#(MemTypesCHERI::CheriMemRequest, MemTypesCHERI::CheriMemResponse))), Meta#(MetaField#("memory", 1), Conc#(MasterSlaveCHERI::Master#(MemTypesCHERI::CheriMemRequest, MemTypesCHERI::CheriMemResponse))), Meta#(MetaField#("events", 2), Conc#(CacheCore::EventsCacheCore))))))} {Generic#(TagController::TagReqId, Meta#(MetaData#("TagReqId", "TagController", void, 1), Meta#(MetaConsNamed#("TagReqId", 0, 2), Tuple2#(Meta#(MetaField#("reqId", 0), Conc#(MemTypesCHERI::ReqId)), Meta#(MetaField#("count", 1), Conc#(TagController::ReqIdCount))))))} {Generic#(TagControllerAXI::TagControllerAXI#(id_, addr_, data_), Meta#(MetaData#("TagControllerAXI", "TagControllerAXI", Tuple3#(NumArg#(id_), NumArg#(addr_), NumArg#(data_)), 1), Meta#(MetaConsNamed#("TagControllerAXI", 0, 4), Tuple4#(Meta#(MetaField#("master", 0), Conc#(AXI4_Types::AXI4_Master#(6, addr_, data_, 0, 0, 0, 0, 0))), Meta#(MetaField#("slave", 1), Conc#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, 0, TagController::CapsPerFlit, 0, 0, TagController::CapsPerFlit))), Meta#(MetaField#("clear", 2), Conc#(Action)), Meta#(MetaField#("events", 3), Conc#(CacheCore::EventsCacheCore))))))} {Generic#(TriState::TriState#(t), Meta#(MetaData#("TriState", "TriState", StarArg#(t), 1), Meta#(MetaConsNamed#("TriState", 0, 2), Tuple2#(Meta#(MetaField#("io", 0), Conc#(Inout#(t))), Meta#(MetaField#("_read", 1), Conc#(t))))))} {Generic#(TriState::_TriState.TriState37#(_n0, _n1), Meta#(MetaData#("_TriState.TriState37", "TriState", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_TriState.TriState37", 0, 2), Tuple2#(Meta#(MetaField#("io", 0), Conc#(Inout_#(_n1))), Meta#(MetaField#("_read", 1), Conc#(Bit#(_n0)))))))} {Generic#(Tuple2#(a, b), Meta#(MetaData#("PrimPair", "Prelude", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("PrimPair", 0, 2), Tuple2#(Meta#(MetaField#("fst", 0), Conc#(a)), Meta#(MetaField#("snd", 1), Conc#(b))))))} {Generic#(Type, ConcPrim#(Type))} {Generic#(UInt#(n), Meta#(MetaData#("UInt", "Prelude", NumArg#(n), 1), Meta#(MetaConsAnon#("UInt", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(n))))))} {Generic#(UIntRange::UIntRange#(lo, hi), Meta#(MetaData#("UIntRange", "UIntRange", Tuple2#(NumArg#(lo), NumArg#(hi)), 1), Meta#(MetaConsAnon#("U", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Bit#(TLog#(TAdd#(hi, 1))))))))} {Generic#(UniqueWrappers::Wrapper#(a, b), Meta#(MetaData#("Wrapper", "UniqueWrappers", Tuple2#(StarArg#(a), StarArg#(b)), 1), Meta#(MetaConsNamed#("Wrapper", 0, 1), Meta#(MetaField#("func", 0), Conc#(function ActionValue#(b) f(a x1))))))} {Generic#(UniqueWrappers::Wrapper2#(a1, a2, b), Meta#(MetaData#("Wrapper2", "UniqueWrappers", Tuple3#(StarArg#(a1), StarArg#(a2), StarArg#(b)), 1), Meta#(MetaConsNamed#("Wrapper2", 0, 1), Meta#(MetaField#("func", 0), Conc#(function ActionValue#(b) f(a1 x1, a2 x2))))))} {Generic#(UniqueWrappers::Wrapper3#(a1, a2, a3, b), Meta#(MetaData#("Wrapper3", "UniqueWrappers", Tuple4#(StarArg#(a1), StarArg#(a2), StarArg#(a3), StarArg#(b)), 1), Meta#(MetaConsNamed#("Wrapper3", 0, 1), Meta#(MetaField#("func", 0), Conc#(function ActionValue#(b) f(a1 x1, a2 x2, a3 x3))))))} {Generic#(UnitAppendList::UAList#(a), Meta#(MetaData#("UAList", "UnitAppendList", StarArg#(a), 3), Either#(Meta#(MetaConsAnon#("NoItems", 0, 0), void), Either#(Meta#(MetaConsAnon#("One", 1, 1), Meta#(MetaField#("_1", 0), Conc#(a))), Meta#(MetaConsAnon#("Append", 2, 1), Meta#(MetaField#("_1", 0), Conc#(Tuple2#(UnitAppendList::UAList#(a), UnitAppendList::UAList#(a)))))))))} {Generic#(VRWire#(a), Meta#(MetaData#("VRWire", "PreludeBSV", StarArg#(a), 1), Meta#(MetaConsNamed#("VRWire", 0, 3), Tuple3#(Meta#(MetaField#("wset", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("wget", 1), Conc#(a)), Meta#(MetaField#("whas", 2), Conc#(Bool))))))} {Generic#(VRWire0, Meta#(MetaData#("VRWire0", "PreludeBSV", void, 1), Meta#(MetaConsNamed#("VRWire0", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(Action)), Meta#(MetaField#("whas", 1), Conc#(Bool))))))} {Generic#(VRWireN#(n), Meta#(MetaData#("VRWireN", "PreludeBSV", NumArg#(n), 1), Meta#(MetaConsNamed#("VRWireN", 0, 3), Tuple3#(Meta#(MetaField#("wset", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(n))), Meta#(MetaField#("whas", 2), Conc#(Bit#(1)))))))} {Generic#(VReg#(n), Meta#(MetaData#("VReg", "Prelude", NumArg#(n), 1), Meta#(MetaConsNamed#("VReg", 0, 2), Tuple2#(Meta#(MetaField#("write", 0), Conc#(function PrimAction f(Bit#(n) x1))), Meta#(MetaField#("read", 1), Conc#(Bit#(n)))))))} {Generic#(VWire#(a), Meta#(MetaData#("VWire", "PreludeBSV", StarArg#(a), 1), Meta#(MetaConsNamed#("VWire", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(function Action f(a x1))), Meta#(MetaField#("wget", 1), Conc#(a))))))} {Generic#(VWire0, Meta#(MetaData#("VWire0", "PreludeBSV", void, 1), Meta#(MetaConsNamed#("VWire0", 0, 1), Meta#(MetaField#("wset", 0), Conc#(Action)))))} {Generic#(Vector::Ascii#(n), Meta#(MetaData#("Ascii", "Vector", NumArg#(n), 1), Meta#(MetaConsAnon#("Ascii", 0, 1), Meta#(MetaField#("_1", 0), Conc#(Vector::Vector#(n, Bit#(8)))))))} {Generic#(Vector::Vector#(n, a), Meta#(MetaData#("Vector", "Vector", Tuple2#(NumArg#(n), StarArg#(a)), 1), Vector::Vector#(n, Conc#(a))))} {Generic#(VnD::VnD#(a), Meta#(MetaData#("VnD", "VnD", StarArg#(a), 1), Meta#(MetaConsNamed#("VnD", 0, 2), Tuple2#(Meta#(MetaField#("v", 0), Conc#(Bool)), Meta#(MetaField#("d", 1), Conc#(a))))))} {Generic#(WriteOnly#(a_type), Meta#(MetaData#("WriteOnly", "PreludeBSV", StarArg#(a_type), 1), Meta#(MetaConsNamed#("WriteOnly", 0, 1), Meta#(MetaField#("_write", 0), Conc#(function Action f(a_type x1))))))} {Generic#(ZBus::BState, Meta#(MetaData#("BState", "ZBus", void, 3), Either#(Meta#(MetaConsAnon#("HiZN", 0, 0), void), Either#(Meta#(MetaConsAnon#("HiZ", 1, 0), void), Meta#(MetaConsAnon#("Nothing", 2, 0), void)))))} {Generic#(ZBus::ZBusBusIFC#(t), Meta#(MetaData#("ZBusBusIFC", "ZBus", StarArg#(t), 1), Meta#(MetaConsNamed#("ZBusBusIFC", 0, 3), Tuple3#(Meta#(MetaField#("fromBusSample", 0), Conc#(function Action f(ZBusUtil::ZBit#(t) x1, Bool x2))), Meta#(MetaField#("toBusValue", 1), Conc#(ZBusUtil::ZBit#(t))), Meta#(MetaField#("toBusCtl", 2), Conc#(Bool))))))} {Generic#(ZBus::ZBusClientIFC#(t), Meta#(MetaData#("ZBusClientIFC", "ZBus", StarArg#(t), 1), Meta#(MetaConsNamed#("ZBusClientIFC", 0, 3), Tuple3#(Meta#(MetaField#("drive", 0), Conc#(function Action f(t x1))), Meta#(MetaField#("get", 1), Conc#(t)), Meta#(MetaField#("fromBusValid", 2), Conc#(Bool))))))} {Generic#(ZBus::ZBusDualIFC#(t), Meta#(MetaData#("ZBusDualIFC", "ZBus", StarArg#(t), 1), Meta#(MetaConsNamed#("ZBusDualIFC", 0, 2), Tuple2#(Meta#(MetaField#("busIFC", 0), Conc#(ZBus::ZBusBusIFC#(t))), Meta#(MetaField#("clientIFC", 1), Conc#(ZBus::ZBusClientIFC#(t)))))))} {Generic#(ZBus::ZBusInternalIFC#(t), Meta#(MetaData#("ZBusInternalIFC", "ZBus", StarArg#(t), 1), Meta#(MetaConsNamed#("ZBusInternalIFC", 0, 1), Meta#(MetaField#("zout", 0), Conc#(ZBusUtil::ZBit#(t))))))} {Generic#(ZBusUtil::ConvertFromZ#(i), Meta#(MetaData#("ConvertFromZ", "ZBusUtil", StarArg#(i), 1), Meta#(MetaConsNamed#("ConvertFromZ", 0, 1), Meta#(MetaField#("convert", 0), Conc#(function i f(ZBusUtil::ZBit#(i) x1))))))} {Generic#(ZBusUtil::ConvertToZ#(i), Meta#(MetaData#("ConvertToZ", "ZBusUtil", StarArg#(i), 1), Meta#(MetaConsNamed#("ConvertToZ", 0, 1), Meta#(MetaField#("convert", 0), Conc#(function ZBusUtil::ZBit#(i) f(i x1, Bool x2))))))} {Generic#(ZBusUtil::ResolveZ#(i), Meta#(MetaData#("ResolveZ", "ZBusUtil", StarArg#(i), 1), Meta#(MetaConsNamed#("ResolveZ", 0, 1), Meta#(MetaField#("resolve", 0), Conc#(function ZBusUtil::ZBit#(i) f(ZBusUtil::ZBit#(i) x1, ZBusUtil::ZBit#(i) x2))))))} {Generic#(ZBusUtil::ZBit#(t), Meta#(MetaData#("ZBit", "ZBusUtil", StarArg#(t), 1), Meta#(MetaConsNamed#("ZBit", 0, 1), Meta#(MetaField#("word", 0), Conc#(t)))))} {Generic#(ZBusUtil::_ZBusUtil.ConvertFromZ95#(_n0, _n1), Meta#(MetaData#("_ZBusUtil.ConvertFromZ95", "ZBusUtil", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_ZBusUtil.ConvertFromZ95", 0, 1), Meta#(MetaField#("convert", 0), Conc#(function Bit#(_n1) f(Bit#(_n0) x1))))))} {Generic#(ZBusUtil::_ZBusUtil.ConvertToZ56#(_n0, _n1), Meta#(MetaData#("_ZBusUtil.ConvertToZ56", "ZBusUtil", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_ZBusUtil.ConvertToZ56", 0, 1), Meta#(MetaField#("convert", 0), Conc#(function Bit#(_n1) f(Bit#(_n0) x1, Bit#(1) x2))))))} {Generic#(ZBusUtil::_ZBusUtil.ResolveZ134#(_n0), Meta#(MetaData#("_ZBusUtil.ResolveZ134", "ZBusUtil", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_ZBusUtil.ResolveZ134", 0, 1), Meta#(MetaField#("resolve", 0), Conc#(function Bit#(_n0) f(Bit#(_n0) x1, Bit#(_n0) x2))))))} {Generic#(_PreludeBSV.CReg5712#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.CReg5712", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.CReg5712", 0, 10), Tuple10#(Meta#(MetaField#("port0__write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port0__read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("port1__write", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port1__read", 3), Conc#(Bit#(_n0))), Meta#(MetaField#("port2__write", 4), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port2__read", 5), Conc#(Bit#(_n0))), Meta#(MetaField#("port3__write", 6), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port3__read", 7), Conc#(Bit#(_n0))), Meta#(MetaField#("port4__write", 8), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port4__read", 9), Conc#(Bit#(_n0)))))))} {Generic#(_PreludeBSV.CReg5808#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.CReg5808", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.CReg5808", 0, 10), Tuple10#(Meta#(MetaField#("port0__write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port0__read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("port1__write", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port1__read", 3), Conc#(Bit#(_n0))), Meta#(MetaField#("port2__write", 4), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port2__read", 5), Conc#(Bit#(_n0))), Meta#(MetaField#("port3__write", 6), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port3__read", 7), Conc#(Bit#(_n0))), Meta#(MetaField#("port4__write", 8), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port4__read", 9), Conc#(Bit#(_n0)))))))} {Generic#(_PreludeBSV.CReg5903#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.CReg5903", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.CReg5903", 0, 10), Tuple10#(Meta#(MetaField#("port0__write", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port0__read", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("port1__write", 2), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port1__read", 3), Conc#(Bit#(_n0))), Meta#(MetaField#("port2__write", 4), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port2__read", 5), Conc#(Bit#(_n0))), Meta#(MetaField#("port3__write", 6), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port3__read", 7), Conc#(Bit#(_n0))), Meta#(MetaField#("port4__write", 8), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("port4__read", 9), Conc#(Bit#(_n0)))))))} {Generic#(_PreludeBSV.VRWire0128#(_n0), Meta#(MetaData#("_PreludeBSV.VRWire0128", "PreludeBSV", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire0128", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("whas", 1), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire0162#(_n0), Meta#(MetaData#("_PreludeBSV.VRWire0162", "PreludeBSV", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire0162", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("whas", 1), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire0449#(_n0), Meta#(MetaData#("_PreludeBSV.VRWire0449", "PreludeBSV", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire0449", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("whas", 1), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire0483#(_n0), Meta#(MetaData#("_PreludeBSV.VRWire0483", "PreludeBSV", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire0483", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(ActionValue_#(_n0))), Meta#(MetaField#("whas", 1), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire109#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VRWire109", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire109", 0, 3), Tuple3#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("whas", 2), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire143#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VRWire143", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire143", 0, 3), Tuple3#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("whas", 2), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire430#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VRWire430", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire430", 0, 3), Tuple3#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("whas", 2), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VRWire464#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VRWire464", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VRWire464", 0, 3), Tuple3#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0))), Meta#(MetaField#("whas", 2), Conc#(Bit#(1)))))))} {Generic#(_PreludeBSV.VWire0314#(_n0), Meta#(MetaData#("_PreludeBSV.VWire0314", "PreludeBSV", NumArg#(_n0), 1), Meta#(MetaConsNamed#("_PreludeBSV.VWire0314", 0, 1), Meta#(MetaField#("wset", 0), Conc#(ActionValue_#(_n0))))))} {Generic#(_PreludeBSV.VWire297#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VWire297", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VWire297", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0)))))))} {Generic#(_PreludeBSV.VWire607#(_n0, _n1), Meta#(MetaData#("_PreludeBSV.VWire607", "PreludeBSV", Tuple2#(NumArg#(_n0), NumArg#(_n1)), 1), Meta#(MetaConsNamed#("_PreludeBSV.VWire607", 0, 2), Tuple2#(Meta#(MetaField#("wset", 0), Conc#(function ActionValue_#(_n1) f(Bit#(_n0) x1))), Meta#(MetaField#("wget", 1), Conc#(Bit#(_n0)))))))} {Generic#(void, Meta#(MetaData#("PrimUnit", "Prelude", void, 1), Meta#(MetaConsNamed#("PrimUnit", 0, 0), void)))}}} {position {%/Libraries/Prelude.bs 4303 6 {Library Prelude}}}
TaggedUnion {Conc#(type a)} polymorphic {members {{a Conc}}} {position {%/Libraries/Prelude.bs 4317 5 {Library Prelude}}}
TaggedUnion {ConcPrim#(type a)} polymorphic {members {{a ConcPrim}}} {position {%/Libraries/Prelude.bs 4323 5 {Library Prelude}}}
TaggedUnion {ConcPoly#(type a)} polymorphic {members {{a ConcPoly}}} {position {%/Libraries/Prelude.bs 4330 5 {Library Prelude}}}
TaggedUnion {Meta#(type m, type r)} polymorphic {members {{r Meta}}} {position {%/Libraries/Prelude.bs 4334 5 {Library Prelude}}}
Enum MetaData {members MetaData} {position {%/Libraries/Prelude.bs 4341 6 {Library Prelude}}}
Enum StarArg {members StarArg} {position {%/Libraries/Prelude.bs 4346 6 {Library Prelude}}}
Enum NumArg {members NumArg} {position {%/Libraries/Prelude.bs 4348 6 {Library Prelude}}}
Enum StrArg {members StrArg} {position {%/Libraries/Prelude.bs 4350 6 {Library Prelude}}}
Enum ConArg {members ConArg} {position {%/Libraries/Prelude.bs 4352 5 {Library Prelude}}}
Enum MetaConsNamed {members MetaConsNamed} {position {%/Libraries/Prelude.bs 4357 6 {Library Prelude}}}
Enum MetaConsAnon {members MetaConsAnon} {position {%/Libraries/Prelude.bs 4362 6 {Library Prelude}}}
Enum MetaField {members MetaField} {position {%/Libraries/Prelude.bs 4368 6 {Library Prelude}}}
Enum SVA::SeqRes {members {SeqFail SeqPending SeqHold SeqHoldStrong}} {width 2} {position {%/Libraries/SVA.bsv 79 48 {Library SVA}}}
Interface SVA::Sequence {members {{method {Bool running {} {{(* ports = [] *)}}}} {method {ActionValue#(SVA::SeqRes) advance {} {{(* ports = [] *)}}}}}} {position {%/Libraries/SVA.bsv 81 11 {Library SVA}}}
Interface SVA::Wrap1 {members {{method {SVA::SeqRes f Bool {{(* ports = ["b"] *)}}}}}} {position {%/Libraries/SVA.bsv 108 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap2 {members {{method {{Tuple3#(Bool, Bool, SVA::SeqRes)} f SVA::SeqRes {{(* ports = ["r"] *)}}}}}} {position {%/Libraries/SVA.bsv 156 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap3 {members {{method {Bool f SVA::SeqRes {{(* ports = ["r"] *)}}}}}} {position {%/Libraries/SVA.bsv 304 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap4 {members {{method {SVA::SeqRes f {Bool Bool SVA::SeqRes SVA::SeqRes} {{(* ports = ["run_1", "run_2", "res_l", "res_r"] *)}}}}}} {position {%/Libraries/SVA.bsv 339 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap5 {members {{method {SVA::SeqRes f {SVA::SeqRes SVA::SeqRes} {{(* ports = ["res_l", "res_r"] *)}}}}}} {position {%/Libraries/SVA.bsv 414 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap6 {members {{method {{Tuple2#(Bool, SVA::SeqRes)} f SVA::SeqRes {{(* ports = ["r"] *)}}}}}} {position {%/Libraries/SVA.bsv 486 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Interface SVA::Wrap7 {members {{method {{Tuple3#(Bool, Maybe#(SVA::SeqRes), SVA::SeqRes)} f {SVA::SeqRes SVA::SeqRes} {{(* ports = ["r", "ff"] *)}}}}}} {position {%/Libraries/SVA.bsv 545 11 {Library SVA}}} {attributes {{(* always_ready  *)}}}
Enum SVA::PropRes {members {PropTrue PropUndetermined PropFalse PropVacuous}} {width 2} {position {%/Libraries/SVA.bsv 735 55 {Library SVA}}}
Interface SVA::Property {members {{method {ActionValue#(SVA::PropRes) advance {} {{(* ports = [] *)}}}}}} {position {%/Libraries/SVA.bsv 737 11 {Library SVA}}}
Enum SVA::AssertRes {members {AssertOkay AssertFail}} {width 1} {position {%/Libraries/SVA.bsv 904 28 {Library SVA}}}
Interface SVA::Assertion {members {{method {ActionValue#(SVA::AssertRes) advance {} {{(* ports = [] *)}}}}}} {position {%/Libraries/SVA.bsv 906 11 {Library SVA}}}
Struct {Memory::MemoryRequest#(numeric type a, numeric type d)} polymorphic {members {{Bool write {width 1}} {{Bit#(TDiv#(d, 8))} byteen} {Bit#(a) address} {Bit#(d) data}}} {position {%/Libraries/Memory.bsv 31 3 {Library Memory}}}
Struct {Memory::MemoryResponse#(numeric type d)} polymorphic {members {{Bit#(d) data}}} {position {%/Libraries/Memory.bsv 35 3 {Library Memory}}}
Alias {Memory::MemoryServer#(numeric type a, numeric type d)} {ClientServer::Server#(Memory::MemoryRequest#(a, d), Memory::MemoryResponse#(d))} {position {%/Libraries/Memory.bsv 37 60 {Library Memory}}}
Alias {Memory::MemoryClient#(numeric type a, numeric type d)} {ClientServer::Client#(Memory::MemoryRequest#(a, d), Memory::MemoryResponse#(d))} {position {%/Libraries/Memory.bsv 38 60 {Library Memory}}}
Typeclass {CShow::CShow#(type a)} {members {{{function Fmt f(a x1)} cshow} {{function Fmt f(a x1)} cshowP}}} {instances {CShow::CShow#(Bit#(n)) CShow::CShow#(Char) CShow::CShow#(Fmt) CShow::CShow#(Int#(a)) CShow::CShow#(Real) CShow::CShow#(String) {CShow::CShow#(Tuple2#(a, b))   provisos (CShow::CShowTuple#(b), CShow::CShow#(a))} CShow::CShow#(UInt#(a)) {CShow::CShow#(a)   provisos (CShow::CShow'#(r), Generic#(a, r))} CShow::CShow#(void)}} {position {%/Libraries/CShow.bs 12 6 {Library CShow}}}
Typeclass {CShow::CShowTuple#(type a)} {members {{{function Fmt f(a x1)} cshowTuple}}} {instances {{CShow::CShowTuple#(Tuple2#(a, b))   provisos (CShow::CShowTuple#(b), CShow::CShow#(a))} {CShow::CShowTuple#(a)   provisos (CShow::CShow#(a))}}} {position {%/Libraries/CShow.bs 49 6 {Library CShow}}}

Typeclass {CShow::CShowSummand#(type a)} {members {{{function Fmt f(a x1)} cshowSummandNamed} {{function Fmt f(a x1)} cshowSummandAnon}}} {instances {{CShow::CShowSummand#(Meta#(MetaField#(name, idx), a))   provisos (CShow::CShow'#(a))} {CShow::CShowSummand#(Tuple2#(a, b))   provisos (CShow::CShowSummand#(b), CShow::CShowSummand#(a))} CShow::CShowSummand#(void)}} {position {%/Libraries/CShow.bs 101 6 {Library CShow}}}
Typeclass {IVec::IVec#(numeric type n, type t)} {dependencies {{t determines n} {n determines t}}} {members {{{function t#(a) f(Vector::Vector#(n, a) x1)} toIVec} {{function Vector::Vector#(n, a) f(t#(a) x1)} fromIVec}}} {instances {{IVec::IVec#(0, IVec::IVec0)} {IVec::IVec#(1, IVec::IVec1)} {IVec::IVec#(10, IVec::IVec10)} {IVec::IVec#(11, IVec::IVec11)} {IVec::IVec#(12, IVec::IVec12)} {IVec::IVec#(13, IVec::IVec13)} {IVec::IVec#(14, IVec::IVec14)} {IVec::IVec#(15, IVec::IVec15)} {IVec::IVec#(16, IVec::IVec16)} {IVec::IVec#(2, IVec::IVec2)} {IVec::IVec#(3, IVec::IVec3)} {IVec::IVec#(32, IVec::IVec32)} {IVec::IVec#(33, IVec::IVec33)} {IVec::IVec#(4, IVec::IVec4)} {IVec::IVec#(5, IVec::IVec5)} {IVec::IVec#(6, IVec::IVec6)} {IVec::IVec#(7, IVec::IVec7)} {IVec::IVec#(8, IVec::IVec8)} {IVec::IVec#(9, IVec::IVec9)}}} {position {%/Libraries/IVec.bs 28 6 {Library IVec}}}
Interface {IVec::IVec0#(type a)} polymorphic {members {}} {position {%/Libraries/IVec.bs 33 10 {Library IVec}}}
Interface {IVec::IVec1#(type a)} polymorphic {members {{method {a _m00 {} {}}}}} {position {%/Libraries/IVec.bs 45 10 {Library IVec}}}
Interface {IVec::IVec2#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}}}} {position {%/Libraries/IVec.bs 60 10 {Library IVec}}}
Interface {IVec::IVec3#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}}}} {position {%/Libraries/IVec.bs 78 10 {Library IVec}}}
Interface {IVec::IVec4#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}}}} {position {%/Libraries/IVec.bs 99 10 {Library IVec}}}
Interface {IVec::IVec5#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}}}} {position {%/Libraries/IVec.bs 123 10 {Library IVec}}}
Interface {IVec::IVec6#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}}}} {position {%/Libraries/IVec.bs 150 10 {Library IVec}}}
Interface {IVec::IVec7#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}}}} {position {%/Libraries/IVec.bs 180 10 {Library IVec}}}
Interface {IVec::IVec8#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}}}} {position {%/Libraries/IVec.bs 213 10 {Library IVec}}}
Interface {IVec::IVec9#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}}}} {position {%/Libraries/IVec.bs 249 10 {Library IVec}}}
Interface {IVec::IVec10#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}}}} {position {%/Libraries/IVec.bs 288 10 {Library IVec}}}
Interface {IVec::IVec11#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}}}} {position {%/Libraries/IVec.bs 330 10 {Library IVec}}}
Interface {IVec::IVec12#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}}}} {position {%/Libraries/IVec.bs 375 10 {Library IVec}}}
Interface {IVec::IVec13#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}}}} {position {%/Libraries/IVec.bs 423 10 {Library IVec}}}
Interface {IVec::IVec14#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}}}} {position {%/Libraries/IVec.bs 474 10 {Library IVec}}}
Interface {IVec::IVec15#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}} {method {a _m14 {} {}}}}} {position {%/Libraries/IVec.bs 528 10 {Library IVec}}}
Interface {IVec::IVec16#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}} {method {a _m14 {} {}}} {method {a _m15 {} {}}}}} {position {%/Libraries/IVec.bs 585 10 {Library IVec}}}
Interface {IVec::IVec32#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}} {method {a _m14 {} {}}} {method {a _m15 {} {}}} {method {a _m16 {} {}}} {method {a _m17 {} {}}} {method {a _m18 {} {}}} {method {a _m19 {} {}}} {method {a _m20 {} {}}} {method {a _m21 {} {}}} {method {a _m22 {} {}}} {method {a _m23 {} {}}} {method {a _m24 {} {}}} {method {a _m25 {} {}}} {method {a _m26 {} {}}} {method {a _m27 {} {}}} {method {a _m28 {} {}}} {method {a _m29 {} {}}} {method {a _m30 {} {}}} {method {a _m31 {} {}}}}} {position {%/Libraries/IVec.bs 645 10 {Library IVec}}}
Interface {IVec::IVec33#(type a)} polymorphic {members {{method {a _m00 {} {}}} {method {a _m01 {} {}}} {method {a _m02 {} {}}} {method {a _m03 {} {}}} {method {a _m04 {} {}}} {method {a _m05 {} {}}} {method {a _m06 {} {}}} {method {a _m07 {} {}}} {method {a _m08 {} {}}} {method {a _m09 {} {}}} {method {a _m10 {} {}}} {method {a _m11 {} {}}} {method {a _m12 {} {}}} {method {a _m13 {} {}}} {method {a _m14 {} {}}} {method {a _m15 {} {}}} {method {a _m16 {} {}}} {method {a _m17 {} {}}} {method {a _m18 {} {}}} {method {a _m19 {} {}}} {method {a _m20 {} {}}} {method {a _m21 {} {}}} {method {a _m22 {} {}}} {method {a _m23 {} {}}} {method {a _m24 {} {}}} {method {a _m25 {} {}}} {method {a _m26 {} {}}} {method {a _m27 {} {}}} {method {a _m28 {} {}}} {method {a _m29 {} {}}} {method {a _m30 {} {}}} {method {a _m31 {} {}}} {method {a _m32 {} {}}}}} {position {%/Libraries/IVec.bs 754 10 {Library IVec}}}
Interface {Randomizable::Randomize#(type a)} polymorphic {members {{interface Randomizable::Control cntrl {}} {method {ActionValue#(a) next {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Randomizable.bsv 13 11 {Library Randomizable}}}
Interface {Randomizable::VRandomize#(numeric type n)} polymorphic {members {{method {ActionValue#(Bit#(n)) next {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Randomizable.bsv 18 11 {Library Randomizable}}}
Enum CPU_Globals::Control {members {CONTROL_DISCARD CONTROL_STRAIGHT CONTROL_BRANCH CONTROL_CSRR_W CONTROL_CAPBRANCH CONTROL_SCR_W CONTROL_CSRR_S_or_C CONTROL_FENCE CONTROL_FENCE_I CONTROL_SFENCE_VMA CONTROL_MRET CONTROL_SRET CONTROL_URET CONTROL_WFI CONTROL_TRAP}} {width 4} {position {../src_Core/CPU/CPU_Globals.bsv 443 6}}
Typeclass {Randomizable::Randomizable#(type t)} {members {{{a#(Randomizable::Randomize#(t))   provisos (IsModule#(a, b))} mkRandomizer}}} {position {%/Libraries/Randomizable.bsv 180 11 {Library Randomizable}}}
Interface {GrayCounter::GrayCounter#(numeric type n)} polymorphic {members {{method {Action incr {} {{(* ports = [] *)}}}} {method {Action decr {} {{(* ports = [] *)}}}} {method {Action sWriteBin Bit#(n) {{(* ports = ["value"] *)}}}} {method {Bit#(n) sReadBin {} {{(* ports = [] *)}}}} {method {Action sWriteGray Gray::Gray#(n) {{(* ports = ["value"] *)}}}} {method {Gray::Gray#(n) sReadGray {} {{(* ports = [] *)}}}} {method {Bit#(n) dReadBin {} {{(* ports = [] *)}}}} {method {Gray::Gray#(n) dReadGray {} {{(* ports = [] *)}}}}}} {position {%/Libraries/GrayCounter.bsv 20 11 {Library GrayCounter}}}
Interface {BRAM_Compat::BRAM_PORT#(type addr, type data)} polymorphic {members {{method {Action put {Bool addr data} {{(* ports = ["write", "address", "datain"] *)}}}} {method {data read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/BRAM_Compat.bsv 46 11 {Library BRAM_Compat}}} {attributes {{(* always_ready  *)}}}
Interface {BRAM_Compat::BRAM_DUAL_PORT#(type addr, type data)} polymorphic {members {{interface {BRAM_Compat::BRAM_PORT#(addr, data)} a {}} {interface {BRAM_Compat::BRAM_PORT#(addr, data)} b {}}}} {position {%/Libraries/BRAM_Compat.bsv 56 11 {Library BRAM_Compat}}}
Interface {BRAM_Compat::BRAM_PORT_BE#(type addr, type data, numeric type n)} polymorphic {members {{method {Action put {Bit#(n) addr data} {{(* ports = ["writeen", "address", "datain"] *)}}}} {method {data read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/BRAM_Compat.bsv 74 11 {Library BRAM_Compat}}} {attributes {{(* always_ready  *)}}}
Interface {BRAM_Compat::BRAM_DUAL_PORT_BE#(type addr, type data, numeric type n)} polymorphic {members {{interface {BRAM_Compat::BRAM_PORT_BE#(addr, data, n)} a {}} {interface {BRAM_Compat::BRAM_PORT_BE#(addr, data, n)} b {}}}} {position {%/Libraries/BRAM_Compat.bsv 79 11 {Library BRAM_Compat}}}
TaggedUnion {UIntRange::UIntRange#(numeric type lo, numeric type hi)} polymorphic {members {{{Bit#(TLog#(TAdd#(hi, 1)))} U}}} {position {%/Libraries/UIntRange.bs 24 6 {Library UIntRange}}}

Struct {FloatingPoint::FloatingPoint#(numeric type e, numeric type m)} polymorphic {members {{Bool sign {width 1}} {Bit#(e) exp} {Bit#(m) sfd}}} {position {%/Libraries/FloatingPoint.bsv 69 3 {Library FloatingPoint}}}
Enum FloatingPoint::Disorder {members {LT EQ GT UO}} {width 2} {position {%/Libraries/FloatingPoint.bsv 84 6 {Library FloatingPoint}}}
Enum FloatingPoint::RoundMode {members {Rnd_Nearest_Even Rnd_Nearest_Away_Zero Rnd_Plus_Inf Rnd_Minus_Inf Rnd_Zero}} {width 3} {position {%/Libraries/FloatingPoint.bsv 126 3 {Library FloatingPoint}}}
Struct FloatingPoint::Exception {members {{Bool invalid_op {width 1}} {Bool divide_0 {width 1}} {Bool overflow {width 1}} {Bool underflow {width 1}} {Bool inexact {width 1}}}} {width 5} {position {%/Libraries/FloatingPoint.bsv 150 3 {Library FloatingPoint}}}
Alias FloatingPoint::Half {FloatingPoint::FloatingPoint#(5, 10)} {position {%/Libraries/FloatingPoint.bsv 212 31 {Library FloatingPoint}}}
Alias FloatingPoint::Float {FloatingPoint::FloatingPoint#(8, 23)} {position {%/Libraries/FloatingPoint.bsv 213 31 {Library FloatingPoint}}}
Alias FloatingPoint::SingleExtended {FloatingPoint::FloatingPoint#(11, 32)} {position {%/Libraries/FloatingPoint.bsv 214 31 {Library FloatingPoint}}}
Alias FloatingPoint::Double {FloatingPoint::FloatingPoint#(11, 52)} {position {%/Libraries/FloatingPoint.bsv 215 31 {Library FloatingPoint}}}
Alias FloatingPoint::DoubleExtended {FloatingPoint::FloatingPoint#(15, 64)} {position {%/Libraries/FloatingPoint.bsv 216 31 {Library FloatingPoint}}}
Struct {FloatingPoint::CommonState#(numeric type e, numeric type m)} polymorphic {members {{{Maybe#(FloatingPoint::FloatingPoint#(e, m))} res} {FloatingPoint::Exception exc {width 5}} {FloatingPoint::RoundMode rmode {width 3}}}} {position {%/Libraries/FloatingPoint.bsv 1824 6 {Library FloatingPoint}}}
Typeclass {FloatingPoint::FixedFloatCVT#(type tfl, type tfx)} {members {{{function Tuple2#(tfl, FloatingPoint::Exception) f(tfx x1, UInt#(a) x2, FloatingPoint::RoundMode x3)} vFixedToFloat} {{function Tuple2#(tfx, FloatingPoint::Exception) f(UInt#(a) x1, tfl x2, FloatingPoint::RoundMode x3)} vFloatToFixed}}} {instances {{FloatingPoint::FixedFloatCVT#(FloatingPoint::FloatingPoint#(e, m), FixedPoint::FixedPoint#(isize, fsize))   provisos (Add#(m, c__, TMax#(n, TAdd#(3, m))), Add#(1, b__, TMax#(n, TAdd#(3, m))), Add#(1, a__, n), Add#(isize, fsize, n))} {FloatingPoint::FixedFloatCVT#(FloatingPoint::FloatingPoint#(e, m), Int#(n))   provisos (Add#(m, c__, TMax#(n, TAdd#(3, m))), Add#(1, b__, TMax#(n, TAdd#(3, m))), Add#(1, a__, n))} {FloatingPoint::FixedFloatCVT#(FloatingPoint::FloatingPoint#(e, m), UInt#(n))   provisos (Add#(1, c__, TMax#(n, TAdd#(3, m))), Add#(m, b__, TMax#(n, TAdd#(3, m))), Add#(1, a__, TMax#(n, TAdd#(m, 2))))}}} {position {%/Libraries/FloatingPoint.bsv 3051 11 {Library FloatingPoint}}}
Struct {NumberTypes::WrapNumber#(numeric type sz)} polymorphic {members {{UInt#(sz) n}}} {position {%/Libraries/NumberTypes.bsv 12 33 {Library NumberTypes}}}
Struct {NumberTypes::BuffIndex#(numeric type sz, numeric type ln)} polymorphic {members {{UInt#(sz) bix}}} {position {%/Libraries/NumberTypes.bsv 47 35 {Library NumberTypes}}}
Typeclass {BuildVector::BuildVector#(type a, type r, numeric type n)} {dependencies {{r determines (a, n)}}} {members {{{function r f(Vector::Vector#(n, a) x1, a x2)} buildVec_}}} {instances {{BuildVector::BuildVector#(a, Vector::Vector#(m, a), n)   provisos (Add#(n, 1, m))} {BuildVector::BuildVector#(a, function r f(a x1), n)   provisos (Add#(n, 1, m), BuildVector::BuildVector#(a, r, m))}}} {position {%/Libraries/BuildVector.bsv 46 11 {Library BuildVector}}}
Interface {RevertingVirtualReg::VReg#(numeric type n)} polymorphic {members {{method {PrimAction write Bit#(n) {}}} {method {Bit#(n) read {} {}}}}} {position {%/Libraries/RevertingVirtualReg.bs 3 10 {Library RevertingVirtualReg}}}
Alias StmtFSM::PosInfo String {position {%/Libraries/StmtFSM.bs 39 5 {Library StmtFSM}}}
TaggedUnion StmtFSM::Freedom {members {{String Early} {void Overlap {width 0}}}} {position {%/Libraries/StmtFSM.bs 56 5 {Library StmtFSM}}}
TaggedUnion StmtFSM::ActionType {members {{void Default {width 0}} {StmtFSM::Freedom Update} {String Jump} {void Wait {width 0}} {void NoME {width 0}}}} {position {%/Libraries/StmtFSM.bs 61 5 {Library StmtFSM}}}
Struct StmtFSM::RuleSet {members {{Rules me_local} {Rules me_parents} {Rules no_me}}} {position {%/Libraries/StmtFSM.bs 82 7 {Library StmtFSM}}}
TaggedUnion {StmtFSM::StmtT#(type a)} polymorphic {members {{{StmtFSM::StmtT_$SAction#(a)} SAction} {{StmtFSM::StmtT_$SActionValue#(a)} SActionValue} {{StmtFSM::StmtT_$SNamed#(a)} SNamed} {{StmtFSM::StmtT_$SLabel#(a)} SLabel} {{StmtFSM::StmtT_$SJump#(a)} SJump} {{StmtFSM::StmtT_$SCall#(a)} SCall} {{StmtFSM::StmtT_$SUntil#(a)} SUntil} {{StmtFSM::StmtT_$SIf1#(a)} SIf1} {{StmtFSM::StmtT_$SIf2#(a)} SIf2} {{StmtFSM::StmtT_$SWhile#(a)} SWhile} {{StmtFSM::StmtT_$SFor#(a)} SFor} {{StmtFSM::StmtT_$SSeq#(a)} SSeq} {{StmtFSM::StmtT_$SPar#(a)} SPar} {String SSkip} {{StmtFSM::StmtT_$SRepeat#(a)} SRepeat} {{StmtFSM::StmtT_$SDelay#(a)} SDelay} {String SReturn} {String SBreak} {String SContinue} {{StmtFSM::StmtT_$SExprS#(a)} SExprS}}} {position {%/Libraries/StmtFSM.bs 110 5 {Library StmtFSM}}}
















Typeclass {StmtFSM::StmtTifiable#(type t, type a)} {dependencies {{t determines a}}} {members {{{function StmtFSM::StmtT#(a) f(String x1, t x2)} stmtify}}} {instances {{StmtFSM::StmtTifiable#(Action, t)} {StmtFSM::StmtTifiable#(StmtFSM::RStmt#(a), a)}}} {position {%/Libraries/StmtFSM.bs 132 6 {Library StmtFSM}}}
Alias {StmtFSM::RStmts#(type a)} List#(StmtFSM::StmtT#(a)) {position {%/Libraries/StmtFSM.bs 144 5 {Library StmtFSM}}}
Alias {StmtFSM::RStmt#(type a)} {StmtFSM::StmtM#(a, void)} {position {%/Libraries/StmtFSM.bs 146 5 {Library StmtFSM}}}
TaggedUnion {StmtFSM::StmtM#(type a, type b)} polymorphic {members {{{Module#(Tuple2#(b, List#(StmtFSM::StmtT#(a))))} S}}} {position {%/Libraries/StmtFSM.bs 148 5 {Library StmtFSM}}}
Alias StmtFSM::Stmt {StmtFSM::StmtM#(Bit#(0), void)} {position {%/Libraries/StmtFSM.bs 171 5 {Library StmtFSM}}}
Interface StmtFSM::Waiter {members {{method {Action wait {} {}}}}} {position {%/Libraries/StmtFSM.bs 278 10 {Library StmtFSM}}}
Interface StmtFSM::Once {members {{method {Action start {} {}}} {method {Action clear {} {}}} {method {Bool done {} {}}}}} {position {%/Libraries/StmtFSM.bs 293 10 {Library StmtFSM}}}
Interface {StmtFSM::RFSM#(type a)} polymorphic {members {{method {Action start {} {}}} {method {Action abort {} {}}} {method {Bool ready {} {}}}}} {position {%/Libraries/StmtFSM.bs 317 10 {Library StmtFSM}}}
Interface StmtFSM::FSMAbort {members {{method {Action abort {} {}}}}} {position {%/Libraries/StmtFSM.bs 322 10 {Library StmtFSM}}}
Interface StmtFSM::FSM {members {{method {Action start {} {}}} {method {Bool done {} {}}} {method {Action waitTillDone {} {}}} {method {Action abort {} {}}}}} {position {%/Libraries/StmtFSM.bs 325 10 {Library StmtFSM}}}
Interface {StmtFSM::FSMServer#(type a, type b)} polymorphic {members {{interface {ClientServer::Server#(a, b)} server {}} {method {Action abort {} {}}}}} {position {%/Libraries/StmtFSM.bs 331 10 {Library StmtFSM}}}
Alias StmtFSM::NextStateDescriptor {Tuple2#(Bool, Integer)} {position {%/Libraries/StmtFSM.bs 339 5 {Library StmtFSM}}}
Alias StmtFSM::NextStateDescriptors {List#(Tuple2#(Bool, Integer))} {position {%/Libraries/StmtFSM.bs 342 5 {Library StmtFSM}}}
Alias StmtFSM::TwoStateDescriptor_orig {Tuple3#(Bool, Integer, Integer)} {position {%/Libraries/StmtFSM.bs 345 5 {Library StmtFSM}}}
TaggedUnion StmtFSM::TwoStateDescriptor {members {{{StmtFSM::TwoStateDescriptor_$TSD} TSD}}} {position {%/Libraries/StmtFSM.bs 348 5 {Library StmtFSM}}}

Enum StmtFSM::TSDType {members {Default Start End}} {position {%/Libraries/StmtFSM.bs 351 5 {Library StmtFSM}}}
Alias StmtFSM::TwoStateDescriptors List#(StmtFSM::TwoStateDescriptor) {position {%/Libraries/StmtFSM.bs 364 5 {Library StmtFSM}}}
Typeclass {StmtFSM::ServerCallToStmtT#(type t)} {members {{{function StmtFSM::StmtM#(d, void) f(t#(c, b) x1, c x2, a x3, String x4)   provisos (GetPut::ToPut#(a, b))} callServer}}} {instances {StmtFSM::ServerCallToStmtT#(ClientServer::Server) StmtFSM::ServerCallToStmtT#(StmtFSM::FSMServer)}} {position {%/Libraries/StmtFSM.bs 400 6 {Library StmtFSM}}}
TaggedUnion {StmtFSM::StmtFT#(type a)} polymorphic {members {{{StmtFSM::StmtFT_$SFAction#(a)} SFAction} {{StmtFSM::StmtFT_$SFLabel#(a)} SFLabel} {{StmtFSM::StmtFT_$SFNamed#(a)} SFNamed} {{StmtFSM::StmtFT_$SFUntil#(a)} SFUntil} {{StmtFSM::StmtFT_$SFIf1#(a)} SFIf1} {{StmtFSM::StmtFT_$SFIf2#(a)} SFIf2} {{StmtFSM::StmtFT_$SFFor#(a)} SFFor} {{StmtFSM::StmtFT_$SFSeq#(a)} SFSeq} {{StmtFSM::StmtFT_$SFPar#(a)} SFPar} {String SFSkip} {String SFDelay} {String SFReturn} {{StmtFSM::StmtFT_$SFWhile#(a)} SFWhile}}} {position {%/Libraries/StmtFSM.bs 421 5 {Library StmtFSM}}}










Struct {StmtFSM::LabelState#(type a)} polymorphic {members {{Integer state_num} {String return_label} {List#(String) label_names} {{Maybe#(Tuple2#(String, String))} loop_labels} {GetPut::Put#(a) ifc}}} {position {%/Libraries/StmtFSM.bs 440 7 {Library StmtFSM}}}
Enum MultiLevelTagLookup::State {members {Init Idle ReadTag SetTag ClearTag FoldZeroes}} {width 3} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 81 66}}

Interface StmtFSM::NCount {members {{method {Bool is Bit#(32) {}}} {method {Action reset {} {}}} {method {Action incr {} {}}}}} {position {%/Libraries/StmtFSM.bs 2235 10 {Library StmtFSM}}}

Interface {TriState::TriState#(type t)} polymorphic {members {{interface Inout#(t) io {}} {method {t _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/TriState.bsv 16 11 {Library TriState}}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Typeclass {TieOff::TieOff#(type t)} {members {{{function a#(Empty) f(t x1)   provisos (IsModule#(a, b))} mkTieOff}}} {instances {{TieOff::TieOff#(Memory::MemoryClient#(a, d))} {TieOff::TieOff#(Vector::Vector#(n, t))   provisos (TieOff::TieOff#(t))}}} {position {%/Libraries/TieOff.bsv 26 11 {Library TieOff}}}
Interface {RPush::RPush#(type a)} polymorphic {members {{method {Action push a {}}} {method {Action clear {} {}}}}} {position {%/Libraries/RPush.bs 29 10 {Library RPush}}}
Struct HList::HNil {members {}} {position {%/Libraries/HList.bsv 3 19 {Library HList}}}
Struct {HList::HCons#(type e, type l)} polymorphic {members {{e hd} {l tl}}} {position {%/Libraries/HList.bsv 9 19 {Library HList}}}
Typeclass {HList::HList#(type l)} {members {}} {instances {{HList::HList#(HList::HCons#(e, l))   provisos (HList::HList#(l))} HList::HList#(HList::HNil)}} {position {%/Libraries/HList.bsv 13 11 {Library HList}}}
Typeclass {HList::HHead#(type l, type h)} {dependencies {{l determines h}}} {members {{{function h f(l x1)} hHead}}} {instances {{HList::HHead#(HList::HCons#(e, l), e)}}} {position {%/Libraries/HList.bsv 23 11 {Library HList}}}
Typeclass {HList::HTail#(type l, type lt)} {dependencies {{l determines lt}}} {members {{{function lt f(l x1)} hTail}}} {instances {{HList::HTail#(HList::HCons#(e, l), l)}}} {position {%/Libraries/HList.bsv 32 11 {Library HList}}}
Typeclass {HList::HLength#(type l, numeric type n)} {dependencies {{l determines n}}} {members {}} {instances {{HList::HLength#(HList::HCons#(e, l), nPlus1)   provisos (Add#(n, 1, nPlus1), HList::HLength#(l, n))} {HList::HLength#(HList::HNil, 0)}}} {position {%/Libraries/HList.bsv 41 11 {Library HList}}}
Typeclass {HList::HAppend#(type l, type l1, type l2)} {dependencies {{(l, l1) determines l2}}} {members {{{function l2 f(l x1, l1 x2)} hAppend}}} {instances {{HList::HAppend#(HList::HCons#(e, l), l1, HList::HCons#(e, l2))   provisos (HList::HAppend#(l, l1, l2), HList::HList#(l))} {HList::HAppend#(HList::HNil, l, l)}}} {position {%/Libraries/HList.bsv 61 11 {Library HList}}}
Typeclass {HList::HSplit#(type l, type l1, type l2)} {members {{{function Tuple2#(l1, l2) f(l x1)} hSplit}}} {instances {{HList::HSplit#(HList::HCons#(hd, tl), HList::HCons#(hd, l3), l2)   provisos (HList::HSplit#(tl, l3, l2))} {HList::HSplit#(HList::HNil, HList::HNil, HList::HNil)} {HList::HSplit#(l, HList::HNil, l)}}} {position {%/Libraries/HList.bsv 80 11 {Library HList}}}
Typeclass {HList::Gettable#(type c1, type c2)} {members {{{function c2 f(c1 x1)} getIt} {{function c1 f(c1 x1, c2 x2)} putIt}}} {instances {{HList::Gettable#(HList::HCons#(t1, t2), t1)} {HList::Gettable#(HList::HCons#(t1, t2), t3)   provisos (HList::Gettable#(t2, t3))}}} {position {%/Libraries/HList.bsv 106 11 {Library HList}}}
Alias {HList::HList1#(type t)} {HList::HCons#(t, HList::HNil)} {position {%/Libraries/HList.bsv 127 62 {Library HList}}}
Alias {HList::HList2#(type t1, type t2)} {HList::HCons#(t1, HList::HCons#(t2, HList::HNil))} {position {%/Libraries/HList.bsv 128 62 {Library HList}}}
Alias {HList::HList3#(type t1, type t2, type t3)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HNil)))} {position {%/Libraries/HList.bsv 129 62 {Library HList}}}
Alias {HList::HList4#(type t1, type t2, type t3, type t4)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HNil))))} {position {%/Libraries/HList.bsv 130 62 {Library HList}}}
Alias {HList::HList5#(type t1, type t2, type t3, type t4, type t5)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HCons#(t5, HList::HNil)))))} {position {%/Libraries/HList.bsv 134 15 {Library HList}}}
Alias {HList::HList6#(type t1, type t2, type t3, type t4, type t5, type t6)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HCons#(t5, HList::HCons#(t6, HList::HNil))))))} {position {%/Libraries/HList.bsv 138 15 {Library HList}}}
Alias {HList::HList7#(type t1, type t2, type t3, type t4, type t5, type t6, type t7)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HCons#(t5, HList::HCons#(t6, HList::HCons#(t7, HList::HNil)))))))} {position {%/Libraries/HList.bsv 142 15 {Library HList}}}
Alias {HList::HList8#(type t1, type t2, type t3, type t4, type t5, type t6, type t7, type t8)} {HList::HCons#(t1, HList::HCons#(t2, HList::HCons#(t3, HList::HCons#(t4, HList::HCons#(t5, HList::HCons#(t6, HList::HCons#(t7, HList::HCons#(t8, HList::HNil))))))))} {position {%/Libraries/HList.bsv 146 15 {Library HList}}}
Alias {MIMO::LUInt#(numeric type n)} {UInt#(TLog#(TAdd#(n, 1)))} {position {%/Libraries/MIMO.bsv 35 39 {Library MIMO}}}
Struct MIMO::MIMOConfiguration {members {{Bool unguarded {width 1}} {Bool bram_based {width 1}}}} {position {%/Libraries/MIMO.bsv 40 3 {Library MIMO}}}
Interface {MIMO::MIMO#(numeric type max_in, numeric type max_out, numeric type size, type t)} polymorphic {members {{method {Action enq {{UInt#(TLog#(TAdd#(max_in, 1)))} {Vector::Vector#(max_in, t)}} {{(* ports = ["count", "data"] *)}}}} {method {{Vector::Vector#(max_out, t)} first {} {{(* ports = [] *)}}}} {method {Action deq {{UInt#(TLog#(TAdd#(max_out, 1)))}} {{(* ports = ["count"] *)}}}} {method {Bool enqReady {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool enqReadyN {{UInt#(TLog#(TAdd#(max_in, 1)))}} {{(* ports = ["count"] *)} {(* always_ready  *)}}}} {method {Bool deqReady {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool deqReadyN {{UInt#(TLog#(TAdd#(max_out, 1)))}} {{(* ports = ["count"] *)} {(* always_ready  *)}}}} {method {{UInt#(TLog#(TAdd#(size, 1)))} count {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/MIMO.bsv 52 11 {Library MIMO}}}
Interface {FIFOF::FIFOF#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Bool notFull {} {}}} {method {Bool notEmpty {} {}}} {method {Action clear {} {}}}}} {position {%/Libraries/FIFOF.bs 31 10 {Library FIFOF}}}

Interface {CompletionBuffer::CompletionBuffer#(numeric type n, type a)} polymorphic {members {{interface GetPut::Get#(Bit#(TLog#(n))) reserve {}} {interface {GetPut::Put#(Tuple2#(Bit#(TLog#(n)), a))} complete {}} {interface GetPut::Get#(a) drain {}}}} {position {%/Libraries/CompletionBuffer.bsv 24 11 {Library CompletionBuffer}}}
Alias {CompletionBuffer::CBToken#(numeric type n)} Bit#(TLog#(n)) {position {%/Libraries/CompletionBuffer.bsv 34 24 {Library CompletionBuffer}}}
Typeclass {ToString::ToString#(type a)} {members {{{function String f(a x1)} toString}}} {instances {{ToString::ToString#(Array#(a))   provisos (ToString::ToString#(a))} ToString::ToString#(Integer) {ToString::ToString#(List#(a))   provisos (ToString::ToString#(a))} ToString::ToString#(StmtFSM::TwoStateDescriptor) ToString::ToString#(String) {ToString::ToString#(Tuple2#(a, b))   provisos (ToString::ToString#(b), ToString::ToString#(a))} {ToString::ToString#(Tuple3#(a, b, c))   provisos (ToString::ToString#(c), ToString::ToString#(b), ToString::ToString#(a))} {ToString::ToString#(Vector::Vector#(n, a))   provisos (ToString::ToString#(a))}}} {position {%/Libraries/ToString.bs 10 6 {Library ToString}}}
Typeclass {ToString::ToStringM#(type a)} {members {{{function b#(String) f(a x1)   provisos (Monad#(b))} toStringM}}} {instances {{ToString::ToStringM#(Array#(a))   provisos (ToString::ToStringM#(a))} ToString::ToStringM#(Integer) {ToString::ToStringM#(List#(a))   provisos (ToString::ToStringM#(a))} ToString::ToStringM#(String) {ToString::ToStringM#(Tuple2#(a, b))   provisos (ToString::ToStringM#(b), ToString::ToStringM#(a))} {ToString::ToStringM#(Tuple3#(a, b, c))   provisos (ToString::ToStringM#(c), ToString::ToStringM#(b), ToString::ToStringM#(a))} {ToString::ToStringM#(Vector::Vector#(n, a))   provisos (ToString::ToStringM#(a))}}} {position {%/Libraries/ToString.bs 13 6 {Library ToString}}}
Interface SpecialFIFOs::SCounter {members {{method {Action incr {} {{(* ports = [] *)}}}} {method {Action decr {} {{(* ports = [] *)}}}} {method {Bool isEq Integer {{(* ports = ["n"] *)}}}} {method {Action setNext {a Array#(Reg#(a))} {{(* ports = ["value", "as"] *)}}}} {method {Action set {a Array#(Reg#(a))} {{(* ports = ["value", "as"] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}}}} {position {%/Libraries/SpecialFIFOs.bsv 230 11 {Library SpecialFIFOs}}}
Struct {FixedPoint::FixedPoint#(numeric type isize, numeric type fsize)} polymorphic {members {{Bit#(isize) i} {Bit#(fsize) f}}} {position {%/Libraries/FixedPoint.bsv 29 1 {Library FixedPoint}}}
Enum FloatingPoint::RoundMode {members {Rnd_Nearest_Even Rnd_Nearest_Away_Zero Rnd_Plus_Inf Rnd_Minus_Inf Rnd_Zero}} {width 3} {position {%/Libraries/FloatingPoint.bsv 126 3 {Library FloatingPoint}}}
Interface {ClientServer::Client#(type a, type b)} polymorphic {members {{interface GetPut::Get#(a) request {}} {interface GetPut::Put#(b) response {}}}} {position {%/Libraries/ClientServer.bs 34 10 {Library ClientServer}}}
Interface {ClientServer::Server#(type a, type b)} polymorphic {members {{interface GetPut::Put#(a) request {}} {interface GetPut::Get#(b) response {}}}} {position {%/Libraries/ClientServer.bs 45 10 {Library ClientServer}}}
Alias {ClientServer::ClientServer#(type a, type b)} {Tuple2#(ClientServer::Client#(a, b), ClientServer::Server#(a, b))} {position {%/Libraries/ClientServer.bs 100 5 {Library ClientServer}}}
Alias ClientServer::MaxLat 8 {position {%/Libraries/ClientServer.bs 263 5 {Library ClientServer}}}

Interface {NullCrossingFIFOF::CrossingFIFOF#(type a)} polymorphic {members {{interface FIFOF::FIFOF#(a) fifo {}} {method {Bool allowCclock {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/NullCrossingFIFOF.bsv 7 11 {Library NullCrossingFIFOF}}}
Interface {NullCrossingFIFOF::SceMiCrossingReg#(type a)} polymorphic {members {{interface Reg#(a) regifc {}} {method {Bool writtenPulse {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool readPulse {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool allowCclock {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {%/Libraries/NullCrossingFIFOF.bsv 120 11 {Library NullCrossingFIFOF}}}
TaggedUnion {ModuleContextCore::ModuleContext#(type c, type i)} polymorphic {members {{{module f#(c x1)(Tuple2#(c, i))} M}}} {position {%/Libraries/ModuleContextCore.bs 4 5 {Library ModuleContextCore}}}
Alias ModuleContext::CLOCKCONTEXTSIZE 9 {position {%/Libraries/ModuleContext.bsv 11 11 {Library ModuleContext}}}
Typeclass {ModuleContext::Context#(type mc1, type c2)} {members {{{mc1#(c2)   provisos (IsModule#(mc1, a))} getContext} {{function mc1#(Empty) f(c2 x1)   provisos (IsModule#(mc1, a))} putContext}}} {instances {{ModuleContext::Context#(Module, void)} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(st1), st1)} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(st1), st2)   provisos (HList::Gettable#(st1, st2))}}} {position {%/Libraries/ModuleContext.bsv 13 11 {Library ModuleContext}}}
Struct {ModuleContext::ClockContextP#(numeric type n)} polymorphic {members {{{Vector::Vector#(n, Clock)} clks} {{Vector::Vector#(n, Reset)} rsts}}} {position {%/Libraries/ModuleContext.bsv 70 19 {Library ModuleContext}}}
Alias ModuleContext::ClockContext ModuleContext::ClockContextP#(9) {position {%/Libraries/ModuleContext.bsv 75 42 {Library ModuleContext}}}
Alias ModuleContext::ClockContextIfc Empty {position {%/Libraries/ModuleContext.bsv 76 15 {Library ModuleContext}}}
Alias {ModuleContext::ClockModule#(type a)} {ModuleContextCore::ModuleContext#(HList::HCons#(ModuleContext::ClockContextP#(9), HList::HNil), a)} {position {%/Libraries/ModuleContext.bsv 77 51 {Library ModuleContext}}}
Typeclass {ModuleContext::Expose#(type c, type ifc, numeric type n)} {dependencies {{c determines (ifc, n)}}} {members {{{function a#(ifc) f(c x1)   provisos (IsModule#(a, b))} unburyContext} {{function a#(ifc) f(c x1, ModuleContext::ClockContextP#(n) x2)   provisos (IsModule#(a, b))} unburyContextWithClocks}}} {instances {{ModuleContext::Expose#(HList::HCons#(c1, c2), Tuple2#(ifc1, ifc2), n)   provisos (ModuleContext::Expose#(c2, ifc2, n), ModuleContext::Expose#(c1, ifc1, n))} {ModuleContext::Expose#(HList::HList1#(ct1), ifc1, n)   provisos (ModuleContext::Expose#(ct1, ifc1, n))} {ModuleContext::Expose#(LBus::LBusContextP#(sa, sd), LBus::LBusContextIfcP#(sa, sd), ModuleContext::CLOCKCONTEXTSIZE)} {ModuleContext::Expose#(ModuleContext::ClockContextP#(n), Empty, n)}}} {position {%/Libraries/ModuleContext.bsv 86 11 {Library ModuleContext}}}
Typeclass {ModuleContext::Hide#(type mc, type ifc)} {members {{{function mc#(Empty) f(ifc x1)} reburyContext}}} {instances {{ModuleContext::Hide#(mc, Empty)   provisos (IsModule#(mc, a))} {ModuleContext::Hide#(mc, LBus::LBusContextIfcP#(sa, sd))   provisos (ModuleContext::Context#(mc, LBus::LBusContextP#(sa, sd)), IsModule#(mc, _a))} {ModuleContext::Hide#(mc, Tuple2#(ifc1, ifc2))   provisos (ModuleContext::Hide#(mc, ifc2), ModuleContext::Hide#(mc, ifc1), IsModule#(mc, a))}}} {position {%/Libraries/ModuleContext.bsv 135 11 {Library ModuleContext}}}
Typeclass {ModuleContext::ContextRun#(type m, type c1, type ctx2)} {dependencies {{(m, c1) determines ctx2}}} {members {{{function m#(Tuple2#(c1, a)) f(c1 x1, ModuleContextCore::ModuleContext#(ctx2, a) x2)} runWithContext}}} {instances {{ModuleContext::ContextRun#(Module, c1, c1)} {ModuleContext::ContextRun#(ModuleContextCore::ModuleContext#(ctx), c1, HList::HCons#(c1, ctx))}}} {position {%/Libraries/ModuleContext.bsv 158 11 {Library ModuleContext}}}
Typeclass {ModuleContext::ContextsRun#(type m, type c1, type ctx2)} {dependencies {{(m, c1) determines ctx2}}} {members {{{function m#(Tuple2#(c1, a)) f(c1 x1, ModuleContextCore::ModuleContext#(ctx2, a) x2)} runWithContexts}}} {instances {{ModuleContext::ContextsRun#(Module, c1, c1)} {ModuleContext::ContextsRun#(ModuleContextCore::ModuleContext#(ctx), c1, ctx2)   provisos (HList::HSplit#(ctx2, c1, ctx), HList::HAppend#(c1, ctx, ctx2))}}} {position {%/Libraries/ModuleContext.bsv 164 11 {Library ModuleContext}}}
Alias {ModuleCollect::ModuleCollect#(type a, type b)} {ModuleContextCore::ModuleContext#(HList::HCons#(UnitAppendList::UAList#(a), HList::HNil), b)} {position {%/Libraries/ModuleCollect.bsv 14 45 {Library ModuleCollect}}}
Interface {ModuleCollect::IWithCollection#(type a, type i)} polymorphic {members {{method {i device {} {{(* ports = [] *)}}}} {method {List#(a) collection {} {{(* ports = [] *)}}}}}} {position {%/Libraries/ModuleCollect.bsv 36 11 {Library ModuleCollect}}}


Typeclass {Boolify::Boolify#(type a)} {members {{{function a f(a x1)} boolify}}} {instances {{Boolify::Boolify#(function b f(a x1))   provisos (Bits#(b, sb), Bits#(a, sa), Bounded#(a))} {Boolify::Boolify#(function c f(a x1, b x2))   provisos (Boolify::Boolify#(function c f(Tuple2#(a, b) x1)))}}} {position {%/Libraries/Boolify.bs 20 6 {Library Boolify}}}
Interface {Cntrs::Count#(type t)} polymorphic {members {{method {Action incr t {{(* ports = ["val"] *)}}}} {method {Action decr t {{(* ports = ["val"] *)}}}} {method {Action update t {{(* ports = ["val"] *)}}}} {method {Action _write t {{(* ports = ["val"] *)}}}} {method {t _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Cntrs.bsv 12 11 {Library Cntrs}}}
Interface {Cntrs::VCount#(type t)} polymorphic {members {{method {Action incrA t {{(* ports = ["val"] *)}}}} {method {Action incrB t {{(* ports = ["val"] *)}}}} {method {Action update t {{(* ports = ["val"] *)}}}} {method {Action _write t {{(* ports = ["val"] *)}}}} {method {t _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Cntrs.bsv 42 11 {Library Cntrs}}}
Typeclass {Cntrs::ModArith#(type t)} {members {}} {instances {Cntrs::ModArith#(Bit#(n)) Cntrs::ModArith#(Int#(n)) Cntrs::ModArith#(UInt#(n))}} {position {%/Libraries/Cntrs.bsv 95 11 {Library Cntrs}}}
Interface Cntrs::UCount {members {{method {Action update Integer {{(* ports = ["val"] *)}}}} {method {Action _write Integer {{(* ports = ["val"] *)}}}} {method {Action incr Integer {{(* ports = ["val"] *)}}}} {method {Action decr Integer {{(* ports = ["val"] *)}}}} {method {Bool isEqual Integer {{(* ports = ["val"] *)}}}} {method {Bool isLessThan Integer {{(* ports = ["val"] *)}}}} {method {Bool isGreaterThan Integer {{(* ports = ["val"] *)}}}}}} {position {%/Libraries/Cntrs.bsv 109 11 {Library Cntrs}}}
Interface {LFSR::LFSR#(type a)} polymorphic {members {{method {Action seed a {}}} {method {a value {} {}}} {method {Action next {} {}}}}} {position {%/Libraries/LFSR.bs 28 10 {Library LFSR}}}
Interface {FoldFIFOF::FoldFIFO#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Bool notFull {} {}}} {method {Bool notEmpty {} {}}} {method {Action clear {} {}}} {method {b foldr {{function b f(a x1, b x2)} b} {}}}}} {position {%/Libraries/FoldFIFOF.bs 12 10 {Library FoldFIFOF}}}
Interface {Probe::Probe#(type a)} polymorphic {members {{method {Action _write a {{(* ports = ["value"] *)}}}}}} {position {%/Libraries/Probe.bsv 34 11 {Library Probe}}}
Alias ModuleContext::CLOCKCONTEXTSIZE 9 {position {%/Libraries/ModuleContext.bsv 11 11 {Library ModuleContext}}}
Typeclass {ModuleContext::Context#(type mc1, type c2)} {members {{{mc1#(c2)   provisos (IsModule#(mc1, a))} getContext} {{function mc1#(Empty) f(c2 x1)   provisos (IsModule#(mc1, a))} putContext}}} {instances {{ModuleContext::Context#(Module, void)} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(st1), st1)} {ModuleContext::Context#(ModuleContextCore::ModuleContext#(st1), st2)   provisos (HList::Gettable#(st1, st2))}}} {position {%/Libraries/ModuleContext.bsv 13 11 {Library ModuleContext}}}
Struct {ModuleContext::ClockContextP#(numeric type n)} polymorphic {members {{{Vector::Vector#(n, Clock)} clks} {{Vector::Vector#(n, Reset)} rsts}}} {position {%/Libraries/ModuleContext.bsv 70 19 {Library ModuleContext}}}
Alias ModuleContext::ClockContext ModuleContext::ClockContextP#(9) {position {%/Libraries/ModuleContext.bsv 75 42 {Library ModuleContext}}}
Alias ModuleContext::ClockContextIfc Empty {position {%/Libraries/ModuleContext.bsv 76 15 {Library ModuleContext}}}
Alias {ModuleContext::ClockModule#(type a)} {ModuleContextCore::ModuleContext#(HList::HCons#(ModuleContext::ClockContextP#(9), HList::HNil), a)} {position {%/Libraries/ModuleContext.bsv 77 51 {Library ModuleContext}}}
Typeclass {ModuleContext::Expose#(type c, type ifc, numeric type n)} {dependencies {{c determines (ifc, n)}}} {members {{{function a#(ifc) f(c x1)   provisos (IsModule#(a, b))} unburyContext} {{function a#(ifc) f(c x1, ModuleContext::ClockContextP#(n) x2)   provisos (IsModule#(a, b))} unburyContextWithClocks}}} {instances {{ModuleContext::Expose#(HList::HCons#(c1, c2), Tuple2#(ifc1, ifc2), n)   provisos (ModuleContext::Expose#(c2, ifc2, n), ModuleContext::Expose#(c1, ifc1, n))} {ModuleContext::Expose#(HList::HList1#(ct1), ifc1, n)   provisos (ModuleContext::Expose#(ct1, ifc1, n))} {ModuleContext::Expose#(LBus::LBusContextP#(sa, sd), LBus::LBusContextIfcP#(sa, sd), ModuleContext::CLOCKCONTEXTSIZE)} {ModuleContext::Expose#(ModuleContext::ClockContextP#(n), Empty, n)}}} {position {%/Libraries/ModuleContext.bsv 86 11 {Library ModuleContext}}}
Typeclass {ModuleContext::Hide#(type mc, type ifc)} {members {{{function mc#(Empty) f(ifc x1)} reburyContext}}} {instances {{ModuleContext::Hide#(mc, Empty)   provisos (IsModule#(mc, a))} {ModuleContext::Hide#(mc, LBus::LBusContextIfcP#(sa, sd))   provisos (ModuleContext::Context#(mc, LBus::LBusContextP#(sa, sd)), IsModule#(mc, _a))} {ModuleContext::Hide#(mc, Tuple2#(ifc1, ifc2))   provisos (ModuleContext::Hide#(mc, ifc2), ModuleContext::Hide#(mc, ifc1), IsModule#(mc, a))}}} {position {%/Libraries/ModuleContext.bsv 135 11 {Library ModuleContext}}}
Typeclass {ModuleContext::ContextRun#(type m, type c1, type ctx2)} {dependencies {{(m, c1) determines ctx2}}} {members {{{function m#(Tuple2#(c1, a)) f(c1 x1, ModuleContextCore::ModuleContext#(ctx2, a) x2)} runWithContext}}} {instances {{ModuleContext::ContextRun#(Module, c1, c1)} {ModuleContext::ContextRun#(ModuleContextCore::ModuleContext#(ctx), c1, HList::HCons#(c1, ctx))}}} {position {%/Libraries/ModuleContext.bsv 158 11 {Library ModuleContext}}}
Typeclass {ModuleContext::ContextsRun#(type m, type c1, type ctx2)} {dependencies {{(m, c1) determines ctx2}}} {members {{{function m#(Tuple2#(c1, a)) f(c1 x1, ModuleContextCore::ModuleContext#(ctx2, a) x2)} runWithContexts}}} {instances {{ModuleContext::ContextsRun#(Module, c1, c1)} {ModuleContext::ContextsRun#(ModuleContextCore::ModuleContext#(ctx), c1, ctx2)   provisos (HList::HSplit#(ctx2, c1, ctx), HList::HAppend#(c1, ctx, ctx2))}}} {position {%/Libraries/ModuleContext.bsv 164 11 {Library ModuleContext}}}
TaggedUnion {ModuleContextCore::ModuleContext#(type c, type i)} polymorphic {members {{{module f#(c x1)(Tuple2#(c, i))} M}}} {position {%/Libraries/ModuleContextCore.bs 4 5 {Library ModuleContextCore}}}
TaggedUnion {OInt::OInt#(numeric type n)} polymorphic {members {{{Vector::Vector#(n, Bool)} O}}} {position {%/Libraries/OInt.bs 22 5 {Library OInt}}}

Interface {Mcp::IMcpUnitF#(type b)} polymorphic {members {{method {b result {} {}}} {method {Bool isValid {} {}}}}} {position {%/Libraries/Mcp.bs 8 10 {Library Mcp}}}
Interface {RevertingVirtualReg::VReg#(numeric type n)} polymorphic {members {{method {PrimAction write Bit#(n) {}}} {method {Bit#(n) read {} {}}}}} {position {%/Libraries/RevertingVirtualReg.bs 3 10 {Library RevertingVirtualReg}}}
Typeclass {Connectable::Connectable#(type a, type b)} {members {{{function c#(Empty) f(a x1, b x2)   provisos (IsModule#(c, d))} mkConnection}}} {instances {{Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(a, b), AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(a, b), AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(a, b), AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(a, b), AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(a), AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(a))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(a), AXI4Lite_Types::AXI4Lite_B_Master_Sig#(a))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_Master#(a, b, c, d, e, f, g), AXI4Lite_Types::AXI4Lite_Slave#(a, b, c, d, e, f, g))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_Master_Sig#(a, b, c, d, e, f, g), AXI4Lite_Types::AXI4Lite_Slave_Sig#(a, b, c, d, e, f, g))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(a, b), AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(a, b), AXI4Lite_Types::AXI4Lite_R_Master_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_Slave#(a, b, c, d, e, f, g), AXI4Lite_Types::AXI4Lite_Master#(a, b, c, d, e, f, g))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(a, b, c, d, e, f, g), AXI4Lite_Types::AXI4Lite_Master_Sig#(a, b, c, d, e, f, g))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(a, b), AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(a, b), AXI4Lite_Types::AXI4Lite_W_Master_Sig#(a, b))} {Connectable::Connectable#(AXI4_Types::AXI4_AR_Master_Sig#(a, b, c), AXI4_Types::AXI4_AR_Slave_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_AR_Slave_Sig#(a, b, c), AXI4_Types::AXI4_AR_Master_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_AW_Master_Sig#(a, b, c), AXI4_Types::AXI4_AW_Slave_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_AW_Slave_Sig#(a, b, c), AXI4_Types::AXI4_AW_Master_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_B_Master_Sig#(a, b), AXI4_Types::AXI4_B_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4_Types::AXI4_B_Slave_Sig#(a, b), AXI4_Types::AXI4_B_Master_Sig#(a, b))} {Connectable::Connectable#(AXI4_Types::AXI4_Master#(a, b, c, d, e, f, g, h), AXI4_Types::AXI4_Slave#(a, b, c, d, e, f, g, h))} {Connectable::Connectable#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {Connectable::Connectable#(AXI4_Types::AXI4_Master_Sig#(a, b, c, d, e, f, g, h), AXI4_Types::AXI4_Slave_Sig#(a, b, c, d, e, f, g, h))} {Connectable::Connectable#(AXI4_Types::AXI4_R_Master_Sig#(a, b, c), AXI4_Types::AXI4_R_Slave_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_R_Slave_Sig#(a, b, c), AXI4_Types::AXI4_R_Master_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_Slave#(a, b, c, d, e, f, g, h), AXI4_Types::AXI4_Master#(a, b, c, d, e, f, g, h))} {Connectable::Connectable#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {Connectable::Connectable#(AXI4_Types::AXI4_Slave_Sig#(a, b, c, d, e, f, g, h), AXI4_Types::AXI4_Master_Sig#(a, b, c, d, e, f, g, h))} {Connectable::Connectable#(AXI4_Types::AXI4_W_Master_Sig#(a, b), AXI4_Types::AXI4_W_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4_Types::AXI4_W_Slave_Sig#(a, b), AXI4_Types::AXI4_W_Master_Sig#(a, b))} {Connectable::Connectable#(Action, Action)} {Connectable::Connectable#(ActionValue#(a), function Action f(a x1))} {Connectable::Connectable#(Arbiter::ArbiterClient_IFC, Arbiter::ArbiterRequest_IFC)} {Connectable::Connectable#(BGetPut::BClientS#(sa, sb), BGetPut::BServerS#(sa, sb))} {Connectable::Connectable#(BGetPut::BGetS#(sa), BGetPut::BPutS#(sa))} {Connectable::Connectable#(BGetPut::BPutS#(sa), BGetPut::BGetS#(sa))} {Connectable::Connectable#(BGetPut::BServerS#(sa, sb), BGetPut::BClientS#(sa, sb))} {Connectable::Connectable#(BusDefines::BusSend#(td), BusDefines::BusRecv#(td))} {Connectable::Connectable#(CGetPut::CClientS#(n, a, sa, b, sb), CGetPut::CServerS#(n, a, sa, b, sb))} {Connectable::Connectable#(CGetPut::CGetS#(n, a, sa), CGetPut::CPutS#(n, a, sa))} {Connectable::Connectable#(CGetPut::CPutS#(n, a, sa), CGetPut::CGetS#(n, a, sa))} {Connectable::Connectable#(CGetPut::CServerS#(n, a, sa, b, sb), CGetPut::CClientS#(n, a, sa, b, sb))} {Connectable::Connectable#(ClientServer::Client#(a, b), ClientServer::Server#(a, b))} {Connectable::Connectable#(ClientServer::Client#(req, resp), CommitIfc::ServerCommit#(req, resp))   provisos (Bits#(req, _y), Bits#(resp, _x))} {Connectable::Connectable#(ClientServer::Client#(req_t, rsp_t), MasterSlaveCHERI::Slave#(req_t, rsp_t))} {Connectable::Connectable#(ClientServer::Server#(a, b), ClientServer::Client#(a, b))} {Connectable::Connectable#(ClientServer::Server#(req, resp), CommitIfc::ClientCommit#(req, resp))   provisos (Bits#(req, _y), Bits#(resp, _x))} {Connectable::Connectable#(ClientServer::Server#(req_t, rsp_t), MasterSlaveCHERI::Master#(req_t, rsp_t))} {Connectable::Connectable#(Clocks::SyncFIFOIfc#(a), CommitIfc::RecvCommit#(a))   provisos (Bits#(a, sa))} {Connectable::Connectable#(Clocks::SyncFIFOIfc#(a), CommitIfc::SendCommit#(a))   provisos (Bits#(a, sa))} {Connectable::Connectable#(CommitIfc::ClientCommit#(req, resp), ClientServer::Server#(req, resp))   provisos (Bits#(req, _y), Bits#(resp, _x))} {Connectable::Connectable#(CommitIfc::ClientCommit#(req, resp), CommitIfc::ServerCommit#(req, resp))} {Connectable::Connectable#(CommitIfc::RecvCommit#(a), Clocks::SyncFIFOIfc#(a))   provisos (Bits#(a, sa))} {Connectable::Connectable#(CommitIfc::RecvCommit#(a), CommitIfc::SendCommit#(a))} {Connectable::Connectable#(CommitIfc::RecvCommit#(a), FIFOF::FIFOF#(a))   provisos (Bits#(a, sa))} {Connectable::Connectable#(CommitIfc::RecvCommit#(a), GetPut::Get#(a))   provisos (Bits#(a, _v100))} {Connectable::Connectable#(CommitIfc::SendCommit#(a), Clocks::SyncFIFOIfc#(a))   provisos (Bits#(a, sa))} {Connectable::Connectable#(CommitIfc::SendCommit#(a), CommitIfc::RecvCommit#(a))} {Connectable::Connectable#(CommitIfc::SendCommit#(a), FIFOF::FIFOF#(a))   provisos (Bits#(a, sa))} {Connectable::Connectable#(CommitIfc::SendCommit#(a), GetPut::Put#(a))   provisos (Bits#(a, _v100))} {Connectable::Connectable#(CommitIfc::ServerCommit#(req, resp), ClientServer::Client#(req, resp))   provisos (Bits#(req, _y), Bits#(resp, _x))} {Connectable::Connectable#(CommitIfc::ServerCommit#(req, resp), CommitIfc::ClientCommit#(req, resp))} {Connectable::Connectable#(FIFOF::FIFOF#(a), CommitIfc::RecvCommit#(a))   provisos (Bits#(a, sa))} {Connectable::Connectable#(FIFOF::FIFOF#(a), CommitIfc::SendCommit#(a))   provisos (Bits#(a, sa))} {Connectable::Connectable#(FIFOF::FIFOF#(t), Semi_FIFOF::FIFOF_I#(t))} {Connectable::Connectable#(GetPut::Get#(a), CommitIfc::RecvCommit#(a))   provisos (Bits#(a, _v100))} {Connectable::Connectable#(GetPut::Get#(a), GetPut::Put#(a))} {Connectable::Connectable#(GetPut::Get#(data_t), MasterSlaveCHERI::CheckedPut#(data_t))} {Connectable::Connectable#(GetPut::GetS#(a), GetPut::Put#(a))} {Connectable::Connectable#(GetPut::GetS#(a), GetPut::PutS#(a))} {Connectable::Connectable#(GetPut::Put#(a), CommitIfc::SendCommit#(a))   provisos (Bits#(a, _v100))} {Connectable::Connectable#(GetPut::Put#(a), GetPut::Get#(a))} {Connectable::Connectable#(GetPut::Put#(a), GetPut::GetS#(a))} {Connectable::Connectable#(GetPut::Put#(data_t), MasterSlaveCHERI::CheckedGet#(data_t))} {Connectable::Connectable#(GetPut::PutS#(a), GetPut::GetS#(a))} {Connectable::Connectable#(Giraffe_IFC::DMI_IFC, Giraffe_IFC::DMI_Master_IFC)} {Connectable::Connectable#(Giraffe_IFC::DMI_Master_IFC, Giraffe_IFC::DMI_IFC)} {Connectable::Connectable#(Inout#(a), Inout#(a))   provisos (Bits#(a, sa))} {Connectable::Connectable#(LBus::ILBus#(sa, sd), LBus::ILBusDriver#(sa, sd))} {Connectable::Connectable#(LBus::ILBusDriver#(sa, sd), LBus::ILBus#(sa, sd))} {Connectable::Connectable#(LBus::ILbLeaf#(sa, sd), LBus::ILbNode#(sa, sd))} {Connectable::Connectable#(ListN::ListN#(n, a), ListN::ListN#(n, b))   provisos (Connectable::Connectable#(a, b))} {Connectable::Connectable#(MasterSlave::Master#(req_t, rsp_t), MasterSlave::Slave#(req_t, rsp_t))   provisos (Bits#(rsp_t, _b), Bits#(req_t, _a))} {Connectable::Connectable#(MasterSlave::Slave#(req_t, rsp_t), MasterSlave::Master#(req_t, rsp_t))   provisos (Bits#(rsp_t, _b), Bits#(req_t, _a))} {Connectable::Connectable#(MasterSlaveCHERI::CheckedGet#(data_t), GetPut::Put#(data_t))} {Connectable::Connectable#(MasterSlaveCHERI::CheckedGet#(data_t), MasterSlaveCHERI::CheckedPut#(data_t))} {Connectable::Connectable#(MasterSlaveCHERI::CheckedPut#(data_t), GetPut::Get#(data_t))} {Connectable::Connectable#(MasterSlaveCHERI::CheckedPut#(data_t), MasterSlaveCHERI::CheckedGet#(data_t))} {Connectable::Connectable#(MasterSlaveCHERI::Master#(req_t, rsp_t), ClientServer::Server#(req_t, rsp_t))} {Connectable::Connectable#(MasterSlaveCHERI::Master#(req_t, rsp_t), MasterSlaveCHERI::Slave#(req_t, rsp_t))} {Connectable::Connectable#(MasterSlaveCHERI::Slave#(req_t, rsp_t), ClientServer::Client#(req_t, rsp_t))} {Connectable::Connectable#(MasterSlaveCHERI::Slave#(req_t, rsp_t), MasterSlaveCHERI::Master#(req_t, rsp_t))} {Connectable::Connectable#(Memory::MemoryClient#(a, d), RegFile::RegFile#(Bit#(ars), Bit#(d)))   provisos (Mul#(TDiv#(d, 8), 8, d), Add#(ars, __x, a))} {Connectable::Connectable#(RWire#(a), RWire#(a))} {Connectable::Connectable#(RegFile::RegFile#(Bit#(ars), Bit#(d)), Memory::MemoryClient#(a, d))   provisos (Mul#(TDiv#(d, 8), 8, d), Add#(ars, __x, a))} {Connectable::Connectable#(Semi_FIFOF::FIFOF_I#(t), Semi_FIFOF::FIFOF_O#(t))} {Connectable::Connectable#(Semi_FIFOF::FIFOF_O#(t), FIFOF::FIFOF#(t))} {Connectable::Connectable#(Semi_FIFOF::FIFOF_O#(t), Semi_FIFOF::FIFOF_I#(t))} {Connectable::Connectable#(SourceSink::Sink#(t), SourceSink::Source#(t))   provisos (Bits#(t, t_sz))} {Connectable::Connectable#(SourceSink::Source#(t), SourceSink::Sink#(t))   provisos (Bits#(t, t_sz))} {Connectable::Connectable#(Tuple2#(a, c), Tuple2#(b, d))   provisos (Connectable::Connectable#(c, d), Connectable::Connectable#(a, b))} {Connectable::Connectable#(Vector::Vector#(n, a), Vector::Vector#(n, b))   provisos (Connectable::Connectable#(a, b))} {Connectable::Connectable#(a, function Action f(a x1))} {Connectable::Connectable#(function Action f(a x1), ActionValue#(a))} {Connectable::Connectable#(function Action f(a x1), a)}}} {position {%/Libraries/Connectable.bs 20 6 {Library Connectable}}}
Alias PopCount::K 8 {position {%/Libraries/PopCount.bs 61 5 {Library PopCount}}}
Alias PopCount::LogK 4 {position {%/Libraries/PopCount.bs 62 5 {Library PopCount}}}
Interface {Push::Push#(type a)} polymorphic {members {{method {Action push a {}}}}} {position {%/Libraries/Push.bs 26 10 {Library Push}}}
Interface {RegFile::RegFile#(type i, type a)} polymorphic {members {{method {Action upd {i a} {}}} {method {a sub i {}}}}} {position {%/Libraries/RegFile.bs 34 10 {Library RegFile}}}
Interface {RegFile::VRegFile#(numeric type ni, numeric type na)} polymorphic {members {{method {PrimAction upd {Bit#(ni) Bit#(na)} {}}} {method {Bit#(na) sub Bit#(ni) {}}}}} {position {%/Libraries/RegFile.bs 45 10 {Library RegFile}}}
Typeclass {Arbitrate::ArbRequestTC#(type a)} {members {{{function Bool f(a x1)} isReadRequest} {{function Bool f(a x1)} isWriteRequest}}} {position {%/Libraries/Arbitrate.bsv 25 11 {Library Arbitrate}}}
Interface {Arbitrate::Arbitrate#(numeric type size)} polymorphic {members {{method {Action request {{Vector::Vector#(size, Bool)}} {{(* ports = ["req"] *)}}}} {method {{Vector::Vector#(size, Bool)} grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbitrate.bsv 63 11 {Library Arbitrate}}}
Interface {Arbitrate::Arbiter#(numeric type ports, type request, type response)} polymorphic {members {{method {{Vector::Vector#(ports, ClientServer::Server#(request, response))} users {} {}}} {interface {ClientServer::Client#(request, response)} master {}}}} {position {%/Libraries/Arbitrate.bsv 68 11 {Library Arbitrate}}}
Interface {CGetPut::CGetS#(numeric type n, type a, numeric type sa)} polymorphic {members {{method {Bit#(sa) gvalue {} {}}} {method {Bool gpresent {} {}}} {method {Action gcredit Bool {}}}}} {position {%/Libraries/CGetPut.bs 23 11 {Library CGetPut}}}
Interface {CGetPut::CPutS#(numeric type n, type a, numeric type sa)} polymorphic {members {{method {Action pvalue Bit#(sa) {}}} {method {Action ppresent Bool {}}} {method {Bool pcredit {} {}}}}} {position {%/Libraries/CGetPut.bs 28 11 {Library CGetPut}}}
Alias {CGetPut::CGet#(numeric type n, type a)} {CGetPut::CGetS#(n, a, SizeOf#(a))} {position {%/Libraries/CGetPut.bs 53 5 {Library CGetPut}}}
Alias {CGetPut::CPut#(numeric type n, type a)} {CGetPut::CPutS#(n, a, SizeOf#(a))} {position {%/Libraries/CGetPut.bs 59 5 {Library CGetPut}}}
Alias {CGetPut::CGetPut#(numeric type n, type a)} {Tuple2#(CGetPut::CGetS#(n, a, SizeOf#(a)), GetPut::Put#(a))} {position {%/Libraries/CGetPut.bs 61 5 {Library CGetPut}}}
Alias {CGetPut::GetCPut#(numeric type n, type a)} {Tuple2#(GetPut::Get#(a), CGetPut::CPutS#(n, a, SizeOf#(a)))} {position {%/Libraries/CGetPut.bs 62 5 {Library CGetPut}}}
Interface {CGetPut::CClientS#(numeric type n, type a, numeric type sa, type b, numeric type sb)} polymorphic {members {{interface {CGetPut::CGetS#(n, a, sa)} request {}} {interface {CGetPut::CPutS#(n, b, sb)} response {}}}} {position {%/Libraries/CGetPut.bs 267 10 {Library CGetPut}}}
Interface {CGetPut::CServerS#(numeric type n, type a, numeric type sa, type b, numeric type sb)} polymorphic {members {{interface {CGetPut::CPutS#(n, a, sa)} request {}} {interface {CGetPut::CGetS#(n, b, sb)} response {}}}} {position {%/Libraries/CGetPut.bs 271 10 {Library CGetPut}}}
Alias {CGetPut::CClient#(numeric type n, type a, type b)} {CGetPut::CClientS#(n, a, SizeOf#(a), b, SizeOf#(b))} {position {%/Libraries/CGetPut.bs 281 5 {Library CGetPut}}}
Alias {CGetPut::CServer#(numeric type n, type a, type b)} {CGetPut::CServerS#(n, a, SizeOf#(a), b, SizeOf#(b))} {position {%/Libraries/CGetPut.bs 282 5 {Library CGetPut}}}
Alias {CGetPut::CClientServer#(numeric type n, type a, type b)} {Tuple2#(CGetPut::CClientS#(n, a, SizeOf#(a), b, SizeOf#(b)), ClientServer::Server#(a, b))} {position {%/Libraries/CGetPut.bs 284 5 {Library CGetPut}}}
Alias {CGetPut::ClientCServer#(numeric type n, type a, type b)} {Tuple2#(ClientServer::Client#(a, b), CGetPut::CServerS#(n, a, SizeOf#(a), b, SizeOf#(b)))} {position {%/Libraries/CGetPut.bs 285 5 {Library CGetPut}}}

Typeclass {Printf::SPrintfType#(type t)} {members {{{function t f(String x1, List#(Printf::UPrintf) x2)} spr}}} {instances {Printf::SPrintfType#(String) {Printf::SPrintfType#(function r f(a x1))   provisos (Printf::SPrintfType#(r), Printf::PrintfArg#(a))}}} {position {%/Libraries/Printf.bsv 17 11 {Library Printf}}}
Typeclass {Printf::PrintfArg#(type t)} {members {{{function Printf::UPrintf f(t x1)} toUPrintf}}} {instances {Printf::PrintfArg#(Bit#(n)) Printf::PrintfArg#(Char) Printf::PrintfArg#(Int#(n)) Printf::PrintfArg#(Integer) Printf::PrintfArg#(Real) Printf::PrintfArg#(String) Printf::PrintfArg#(UInt#(n))}} {position {%/Libraries/Printf.bsv 34 11 {Library Printf}}}
TaggedUnion Printf::UPrintf {members {{Char UChar} {String UString} {{Tuple2#(Integer, Integer)} UInteger} {Real UReal}}} {position {%/Libraries/Printf.bsv 80 3 {Library Printf}}}
Enum Printf::RealFormat {members {RFGeneric RFExponent RFFixed}} {position {%/Libraries/Printf.bsv 402 49 {Library Printf}}}
Interface StmtFSM::Once {members {{method {Action start {} {}}} {method {Action clear {} {}}} {method {Bool done {} {}}}}} {position {%/Libraries/StmtFSM.bs 293 10 {Library StmtFSM}}}
Interface Arbiter::ArbiterClient_IFC {members {{method {Action request {} {{(* ports = [] *)}}}} {method {Action lock {} {{(* ports = [] *)}}}} {method {Bool grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 11 11 {Library Arbiter}}}
Interface Arbiter::ArbiterRequest_IFC {members {{method {Bool request {} {{(* ports = [] *)}}}} {method {Bool lock {} {{(* ports = [] *)}}}} {method {Action grant {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 17 11 {Library Arbiter}}}
Interface {Arbiter::Arbiter_IFC#(numeric type count)} polymorphic {members {{method {{Vector::Vector#(count, Arbiter::ArbiterClient_IFC)} clients {} {}}} {method {Bit#(TLog#(count)) grant_id {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Arbiter.bsv 23 11 {Library Arbiter}}}
Typeclass {Arbiter::Arbitable#(type a)} {members {{{function b#(Arbiter::ArbiterRequest_IFC) f(a x1)   provisos (IsModule#(b, c))} mkArbiterRequest}}} {instances Arbiter::Arbitable#(BusDefines::BusSend#(a))} {position {%/Libraries/Arbiter.bsv 340 11 {Library Arbiter}}}

Interface {FIFO::FIFO#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Action clear {} {}}}}} {position {%/Libraries/FIFO.bs 20 10 {Library FIFO}}}
Interface {Gearbox::Gearbox#(numeric type in, numeric type out, type a)} polymorphic {members {{method {Action enq {{Vector::Vector#(in, a)}} {{(* ports = ["din"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {{Vector::Vector#(out, a)} first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/Gearbox.bsv 35 11 {Library Gearbox}}}

Alias {ActionSeq::ActionList#(numeric type n)} {Vector::Vector#(n, Action)} {position {%/Libraries/ActionSeq.bs 41 5 {Library ActionSeq}}}
Typeclass {ActionSeq::ActionJoin#(type a, type c)} {dependencies {{a determines c}}} {members {{{function c f(Action x1, a x2)} |>}}} {instances {{ActionSeq::ActionJoin#(Action, ActionSeq::ActionList#(2))} {ActionSeq::ActionJoin#(ActionSeq::ActionList#(n), ActionSeq::ActionList#(m))   provisos (Add#(1, n, m))}}} {position {%/Libraries/ActionSeq.bs 44 6 {Library ActionSeq}}}
Interface ActionSeq::ActionSeq {members {{method {Action start {} {}}} {method {Bool done {} {}}} {method {Action checkDone {} {}}}}} {position {%/Libraries/ActionSeq.bs 68 10 {Library ActionSeq}}}
Alias {ActionSeq::RegB#(numeric type k)} Reg#(Bit#(k)) {position {%/Libraries/ActionSeq.bs 73 5 {Library ActionSeq}}}
Interface {ActionSeq::ActionSeqN#(numeric type n)} polymorphic {members {{interface ActionSeq::ActionSeq _actionSeq {}}}} {position {%/Libraries/ActionSeq.bs 98 11 {Library ActionSeq}}}
Alias {ActionSeq::SeqList#(numeric type n)} {Vector::Vector#(n, ActionSeq::ActionSeq)} {position {%/Libraries/ActionSeq.bs 183 5 {Library ActionSeq}}}
Interface {RWire#(type a)} polymorphic {members {{method {Action wset a {{(* ports = ["datain"] *)}}}} {method {Maybe#(a) wget {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 73 11 {Library PreludeBSV}}}
Interface {VRWire#(type a)} polymorphic {members {{method {Action wset a {{(* ports = ["x1"] *)}}}} {method {a wget {} {{(* ports = [] *)}}}} {method {Bool whas {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 78 11 {Library PreludeBSV}}}
Interface {VRWireN#(numeric type n)} polymorphic {members {{method {PrimAction wset Bit#(n) {{(* ports = ["datain"] *)}}}} {method {Bit#(n) wget {} {{(* ports = [] *)}}}} {method {Bit#(1) whas {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 84 11 {Library PreludeBSV}}}
Interface VRWire0 {members {{method {Action wset {} {{(* ports = [] *)}}}} {method {Bool whas {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 103 11 {Library PreludeBSV}}}
Alias {Wire#(type data_t)} Reg#(data_t) {position {%/Libraries/PreludeBSV.bsv 273 22 {Library PreludeBSV}}}
Interface {VWire#(type a)} polymorphic {members {{method {Action wset a {{(* ports = ["x1"] *)}}}} {method {a wget {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 287 11 {Library PreludeBSV}}}
Interface VWire0 {members {{method {Action wset {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 292 11 {Library PreludeBSV}}}
Interface PulseWire {members {{method {Action send {} {{(* ports = [] *)}}}} {method {Bool _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 387 11 {Library PreludeBSV}}}
Interface {CReg5#(type t)} polymorphic {members {{interface Reg#(t) port0 {}} {interface Reg#(t) port1 {}} {interface Reg#(t) port2 {}} {interface Reg#(t) port3 {}} {interface Reg#(t) port4 {}}}} {position {%/Libraries/PreludeBSV.bsv 703 11 {Library PreludeBSV}}}
Interface {ReadOnly#(type a_type)} polymorphic {members {{method {a_type _read {} {{(* ports = [] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 1061 11 {Library PreludeBSV}}}
Interface {WriteOnly#(type a_type)} polymorphic {members {{method {Action _write a_type {{(* ports = ["x"] *)}}}}}} {position {%/Libraries/PreludeBSV.bsv 1081 11 {Library PreludeBSV}}}
Typeclass {Alias#(type a, type b)} {dependencies {{a determines b} {b determines a}}} {members {}} {instances {{Alias#(a, a)}}} {position {%/Libraries/PreludeBSV.bsv 1117 11 {Library PreludeBSV}}}
Typeclass {NumAlias#(numeric type a, numeric type b)} {dependencies {{a determines b} {b determines a}}} {members {}} {instances {{NumAlias#(a, a)}}} {position {%/Libraries/PreludeBSV.bsv 1125 11 {Library PreludeBSV}}}
Enum SaturationMode {members {Sat_Wrap Sat_Bound Sat_Zero Sat_Symmetric}} {width 2} {position {%/Libraries/PreludeBSV.bsv 1141 6 {Library PreludeBSV}}}
Typeclass {SaturatingArith#(type t)} {members {{{function t f(SaturationMode x1, t x2, t x3)} satPlus} {{function t f(SaturationMode x1, t x2, t x3)} satMinus} {{function t f(t x1, t x2)} boundedPlus} {{function t f(t x1, t x2)} boundedMinus}}} {instances {{SaturatingArith#(Complex::Complex#(any_type))   provisos (SaturatingArith#(any_type))} {SaturatingArith#(FixedPoint::FixedPoint#(i, f))} SaturatingArith#(Int#(n)) SaturatingArith#(UInt#(n))}} {position {%/Libraries/PreludeBSV.bsv 1144 11 {Library PreludeBSV}}}

Alias {RAM::RAM#(type adr, type dta)} {ClientServer::Server#(RAM::RAMreq#(adr, dta), dta)} {position {%/Libraries/RAM.bs 19 5 {Library RAM}}}
Alias {RAM::RAMclient#(type adr, type dta)} {ClientServer::Client#(RAM::RAMreq#(adr, dta), dta)} {position {%/Libraries/RAM.bs 25 5 {Library RAM}}}
TaggedUnion {RAM::RAMreq#(type adr, type dta)} polymorphic {members {{adr Read} {{Tuple2#(adr, dta)} Write}}} {position {%/Libraries/RAM.bs 34 5 {Library RAM}}}
Interface EdgeDetect::RequestDetect {members {{method {Action send {} {{(* ports = [] *)}}}} {method {Bool pulse {} {{(* ports = [] *)}}}} {method {Bool pending {} {{(* ports = [] *)}}}} {method {Action ack {} {{(* ports = [] *)}}}}}} {position {%/Libraries/EdgeDetect.bsv 3 11 {Library EdgeDetect}}}

Interface {FIFOF_::FIFOF_#(type a)} polymorphic {members {{method {Action enq a {{(* ports = ["x1"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {a first {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool i_notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool i_notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOF_.bsv 21 11 {Library FIFOF_}}}
Interface FIFOF_::VFIFOF0_ {members {{method {Action enq {} {{(* ports = [] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool i_notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool i_notEmpty {} {{(* ports = [] *)}}}}}} {position {%/Libraries/FIFOF_.bsv 48 11 {Library FIFOF_}}}
Interface {GetPut::Get#(type a)} polymorphic {members {{method {ActionValue#(a) get {} {}}}}} {position {%/Libraries/GetPut.bs 88 10 {Library GetPut}}}
Interface {GetPut::GetS#(type a)} polymorphic {members {{method {a first {} {}}} {method {Action deq {} {}}}}} {position {%/Libraries/GetPut.bs 91 10 {Library GetPut}}}
Interface {GetPut::Put#(type a)} polymorphic {members {{method {Action put a {{(* prefix = "" *)} {(* result = "UNUSED" *)} {(* ports = ["put"] *)}}}}}} {position {%/Libraries/GetPut.bs 115 10 {Library GetPut}}}
Interface {GetPut::PutS#(type a)} polymorphic {members {{method {Action offer a {}}} {method {Bool accepted {} {}}}}} {position {%/Libraries/GetPut.bs 118 10 {Library GetPut}}}
Alias {GetPut::GetPut#(type a)} {Tuple2#(GetPut::Get#(a), GetPut::Put#(a))} {position {%/Libraries/GetPut.bs 127 5 {Library GetPut}}}
Typeclass {GetPut::ToGet#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Get#(b) f(a x1)} toGet}}} {instances {{GetPut::ToGet#(ActionValue#(a), a)} {GetPut::ToGet#(AlignedFIFOs::AlignedFIFO#(t), t)} {GetPut::ToGet#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToGet#(CommitIfc::SendCommit#(a), a)} {GetPut::ToGet#(FIFO::FIFO#(a), a)} {GetPut::ToGet#(FIFOF::FIFOF#(a), a)} {GetPut::ToGet#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(GetPut::Get#(a), a)} {GetPut::ToGet#(MasterSlaveCHERI::CheckedGet#(data_t), data_t)} {GetPut::ToGet#(NullCrossingFIFOF::CrossingFIFOF#(t), t)} {GetPut::ToGet#(PAClib::PipeOut#(a), a)} {GetPut::ToGet#(RWire#(a), a)} {GetPut::ToGet#(ReadOnly#(a), a)} {GetPut::ToGet#(Reg#(a), a)} {GetPut::ToGet#(Semi_FIFOF::FIFOF_O#(t), t)} {GetPut::ToGet#(SourceSink::Source#(t), t)} {GetPut::ToGet#(a, a)}}} {position {%/Libraries/GetPut.bs 417 6 {Library GetPut}}}
Typeclass {GetPut::ToPut#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Put#(b) f(a x1)} toPut}}} {instances {{GetPut::ToPut#(AlignedFIFOs::AlignedFIFO#(t), t)} {GetPut::ToPut#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToPut#(CommitIfc::RecvCommit#(a), a)} {GetPut::ToPut#(FIFO::FIFO#(a), a)} {GetPut::ToPut#(FIFOF::FIFOF#(a), a)} {GetPut::ToPut#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(GetPut::Put#(a), a)} {GetPut::ToPut#(MasterSlaveCHERI::CheckedPut#(data_t), data_t)} {GetPut::ToPut#(NullCrossingFIFOF::CrossingFIFOF#(t), t)} {GetPut::ToPut#(RWire#(a), a)} {GetPut::ToPut#(Reg#(a), a)} {GetPut::ToPut#(Semi_FIFOF::FIFOF_I#(t), t)} {GetPut::ToPut#(SourceSink::Sink#(t), t)} {GetPut::ToPut#(function Action f(a x1), a)}}} {position {%/Libraries/GetPut.bs 420 6 {Library GetPut}}}
Alias Divide::MBits 11 {position {%/Libraries/Divide.bsv 259 12 {Library Divide}}}
Alias Divide::NBits 22 {position {%/Libraries/Divide.bsv 260 12 {Library Divide}}}
