{function CRC::reflect {result Bit#(a)} {arguments {Bool Bit#(a)}} {position {%/Libraries/CRC.bsv 12 18 {Library CRC}}}} {module CRC::mkCRC {interface CRC::CRC#(n)} {arguments {Bit#(n) Bit#(n) Bit#(n) Bool Bool}} {provisos {{Add#(8, n8, n)}}} {position {%/Libraries/CRC.bsv 33 8 {Library CRC}}}} {module CRC::mkCRC_CCITT {interface CRC::CRC#(16)} {position {%/Libraries/CRC.bsv 97 8 {Library CRC}}}} {module CRC::mkCRC16 {interface CRC::CRC#(16)} {position {%/Libraries/CRC.bsv 111 8 {Library CRC}}}} {module CRC::mkCRC32 {interface CRC::CRC#(32)} {position {%/Libraries/CRC.bsv 126 8 {Library CRC}}}}


{module BRAM::mkBRAM {interface {{BRAM::BRAM2Port#(addr, data)}}} {arguments Bool} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 159 8 {Library BRAM}}}} {module BRAM::mkBRAMLoad {interface {{BRAM::BRAM2Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 175 8 {Library BRAM}}}} {module BRAM::mkBRAM1 {interface {{BRAM::BRAM1Port#(addr, data)}}} {arguments Bool} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 192 8 {Library BRAM}}}} {module BRAM::mkBRAM1Load {interface {{BRAM::BRAM1Port#(addr, data)}}} {arguments {Bool String}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 208 8 {Library BRAM}}}} {module BRAM::mkBRAM1BE {interface {{BRAM::BRAM1PortBE#(addr, data, n)}}} {arguments Bool} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 224 8 {Library BRAM}}}} {module BRAM::mkBRAM1BELoad {interface {{BRAM::BRAM1PortBE#(addr, data, n)}}} {arguments {Bool String}} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 241 8 {Library BRAM}}}} {module BRAM::mkSyncBRAM {interface {{BRAM::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 259 8 {Library BRAM}}}} {module BRAM::mkSyncBRAMLoad {interface {{BRAM::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 274 8 {Library BRAM}}}} {module BRAM::mkBRAM1Port {interface {{BRAMCore::BRAM_PORT#(addr, data)}}} {arguments BRAM::BRAM_Configure} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 293 8 {Library BRAM}}}} {module BRAM::mkBRAM1PortBE {interface {{BRAMCore::BRAM_PORT_BE#(addr, data, n)}}} {arguments BRAM::BRAM_Configure} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 324 8 {Library BRAM}}}} {module BRAM::mkSyncBRAM2Port {interface {{BRAMCore::BRAM_DUAL_PORT#(addr, data)}}} {arguments {BRAM::BRAM_Configure Clock Reset Clock Reset}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 359 8 {Library BRAM}}}} {module BRAM::mkSyncBRAM2PortBE {interface {{BRAMCore::BRAM_DUAL_PORT_BE#(addr, data, n)}}} {arguments {BRAM::BRAM_Configure Clock Reset Clock Reset}} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 392 8 {Library BRAM}}}} {module BRAM::mkBRAMAdapter {interface {{BRAM::ServerWithClear#(bramreq_t, bramresp_t)}}} {arguments {BRAM::BRAM_Configure bramifc_t}} {provisos {{BRAM::BRAMToResponse#(bramifc_t, bramresp_t)} BRAM::RequestToResponse#(bramreq_t) {BRAM::RequestToBRAM#(bramreq_t, bramifc_t)} {Bits#(bramresp_t, sresp)}}} {position {%/Libraries/BRAM.bsv 455 8 {Library BRAM}}}} {module BRAM::mkBRAM1Server {interface {{BRAM::BRAM1Port#(addr, data)}}} {arguments BRAM::BRAM_Configure} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 638 8 {Library BRAM}}}} {module BRAM::mkBRAM1ServerBE {interface {{BRAM::BRAM1PortBE#(addr, data, n)}}} {arguments BRAM::BRAM_Configure} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 657 8 {Library BRAM}}}} {module BRAM::mkBRAM2Server {interface {{BRAM::BRAM2Port#(addr, data)}}} {arguments BRAM::BRAM_Configure} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 678 8 {Library BRAM}}}} {module BRAM::mkBRAM2ServerBE {interface {{BRAM::BRAM2PortBE#(addr, data, n)}}} {arguments BRAM::BRAM_Configure} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 707 8 {Library BRAM}}}} {module BRAM::mkSyncBRAM2Server {interface {{BRAM::BRAM2Port#(addr, data)}}} {arguments {BRAM::BRAM_Configure Clock Reset Clock Reset}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 738 8 {Library BRAM}}}} {module BRAM::mkSyncBRAM2ServerBE {interface {{BRAM::BRAM2PortBE#(addr, data, n)}}} {arguments {BRAM::BRAM_Configure Clock Reset Clock Reset}} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM.bsv 768 8 {Library BRAM}}}} {module BRAM::checkSizes {interface Empty} {arguments {BRAM::BRAM_Configure addr_t String}} {provisos {{Bits#(addr_t, addr_sz)}}} {position {%/Libraries/BRAM.bsv 796 8 {Library BRAM}}}} {module BRAM::mkBypassFIFOAdapter {interface FIFOF::FIFOF#(a)} {arguments FIFOF::FIFOF#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BRAM.bsv 819 8 {Library BRAM}}}} {module BRAM::mkSizedReg {interface BRAM::SizedReg} {arguments {Integer Integer}} {position {%/Libraries/BRAM.bsv 890 8 {Library BRAM}}}} {module BRAM::mkSizedRegInt {interface BRAM::SizedReg} {arguments a} {provisos {Ord#(a) Eq#(a) Arith#(a) {Bits#(a, sa)}}} {position {%/Libraries/BRAM.bsv 944 8 {Library BRAM}}}} {function GetPut::peekGet {result a} {arguments GetPut::Get#(a)} {position {%/Libraries/GetPut.bs 142 0 {Library GetPut}}}} {function GetPut::fifoToGet {result GetPut::Get#(a)} {arguments FIFO::FIFO#(a)} {position {%/Libraries/GetPut.bs 162 0 {Library GetPut}}}} {function GetPut::fifoToGetS {result GetPut::GetS#(a)} {arguments FIFO::FIFO#(a)} {position {%/Libraries/GetPut.bs 169 0 {Library GetPut}}}} {function GetPut::fifoToPut {result GetPut::Put#(a)} {arguments FIFO::FIFO#(a)} {position {%/Libraries/GetPut.bs 229 0 {Library GetPut}}}} {module GetPut::mkGetPut {interface GetPut::GetPut#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/GetPut.bs 241 0 {Library GetPut}}}} {module GetPut::mkGPFIFO {interface GetPut::GetPut#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/GetPut.bs 272 0 {Library GetPut}}}} {module GetPut::mkGPFIFO1 {interface GetPut::GetPut#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/GetPut.bs 284 0 {Library GetPut}}}} {module GetPut::mkGPSizedFIFO {interface GetPut::GetPut#(a)} {arguments Integer} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/GetPut.bs 296 0 {Library GetPut}}}} {module ClientServer::mkRequestResponseBuffer {interface {{ClientServer::ClientServer#(a, b)}}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/ClientServer.bs 109 0 {Library ClientServer}}}} {module ClientServer::mkRequestResponseBuffer1 {interface {{ClientServer::ClientServer#(a, b)}}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/ClientServer.bs 130 0 {Library ClientServer}}}} {module ClientServer::mkSizedRequestResponseBuffer {interface {{ClientServer::ClientServer#(a, b)}}} {arguments Integer} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/ClientServer.bs 149 0 {Library ClientServer}}}} {module ClientServer::mkRequestBuffer {interface {{ClientServer::Server#(a, b)}}} {arguments {{ClientServer::Server#(a, b)}}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ClientServer.bs 169 0 {Library ClientServer}}}} {module ClientServer::mkResponseBuffer {interface {{ClientServer::Server#(a, b)}}} {arguments {{ClientServer::Server#(a, b)}}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/ClientServer.bs 190 0 {Library ClientServer}}}} {module ClientServer::joinServersBC {interface {{ClientServer::Server#(a, b)}}} {arguments {{List#(ClientServer::Server#(a, b))}}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/ClientServer.bs 212 0 {Library ClientServer}}}} {module ClientServer::joinServers {interface {{ClientServer::Server#(a, b)}}} {arguments {{List#(Tuple2#(function Maybe#(a') f(a x1), ClientServer::Server#(a', b)))}}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/ClientServer.bs 241 0 {Library ClientServer}}}} {module ClientServer::splitServer {interface {{Vector::Vector#(n, ClientServer::Server#(a, b))}}} {arguments {Integer {ClientServer::Server#(a, b)}}} {provisos {{Log#(n, ln)} {Bits#(b, sb)}}} {position {%/Libraries/ClientServer.bs 274 0 {Library ClientServer}}}} {function ClientServer::fifosToServer {result {{ClientServer::Server#(rq, rs)}}} {arguments {FIFO::FIFO#(rq) FIFO::FIFO#(rs)}} {position {%/Libraries/ClientServer.bs 309 0 {Library ClientServer}}}} {function ClientServer::fifosToClient {result {{ClientServer::Client#(rq, rs)}}} {arguments {FIFO::FIFO#(rq) FIFO::FIFO#(rs)}} {position {%/Libraries/ClientServer.bs 315 0 {Library ClientServer}}}} {function ClientServer::fifosToClientServer {result {{ClientServer::ClientServer#(rq, rs)}}} {arguments {FIFO::FIFO#(rq) FIFO::FIFO#(rs)}} {position {%/Libraries/ClientServer.bs 321 0 {Library ClientServer}}}} {function ClientServer::toGPClient {result {{ClientServer::Client#(rq, rs)}}} {arguments {rq_ifc rs_ifc}} {provisos {{GetPut::ToPut#(rs_ifc, rs)} {GetPut::ToGet#(rq_ifc, rq)}}} {position {%/Libraries/ClientServer.bs 326 0 {Library ClientServer}}}} {function ClientServer::toGPServer {result {{ClientServer::Server#(rq, rs)}}} {arguments {rq_ifc rs_ifc}} {provisos {{GetPut::ToGet#(rs_ifc, rs)} {GetPut::ToPut#(rq_ifc, rq)}}} {position {%/Libraries/ClientServer.bs 333 0 {Library ClientServer}}}}
{function ModuleContextCore::unM {result {{Module#(Tuple2#(c, i))}}} {arguments {{ModuleContextCore::ModuleContext#(c, i)} c}} {position {%/Libraries/ModuleContextCore.bs 6 0 {Library ModuleContextCore}}}} {function ModuleContextCore::getCompleteContext {result {{ModuleContextCore::ModuleContext#(c, c)}}} {position {%/Libraries/ModuleContextCore.bs 16 0 {Library ModuleContextCore}}}} {function ModuleContextCore::putCompleteContext {result {{ModuleContextCore::ModuleContext#(c, void)}}} {arguments c} {position {%/Libraries/ModuleContextCore.bs 19 0 {Library ModuleContextCore}}}} {function ModuleContextCore::runWithCompleteContext {result {{Module#(Tuple2#(c, i))}}} {arguments {c {ModuleContextCore::ModuleContext#(c, i)}}} {position {%/Libraries/ModuleContextCore.bs 22 0 {Library ModuleContextCore}}}}
{module ListReg::mkListReg {interface Reg#(List#(a))} {arguments List#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ListReg.bs 15 0 {Library ListReg}}}}
{function Complex::cmplx {result Complex::Complex#(a_type)} {arguments {a_type a_type}} {position {%/Libraries/Complex.bsv 159 27 {Library Complex}}}} {function Complex::cmplxMap {result Complex::Complex#(b_type)} {arguments {{function b_type f(a_type x1)} Complex::Complex#(a_type)}} {position {%/Libraries/Complex.bsv 168 27 {Library Complex}}}} {function Complex::cmplxSwap {result Complex::Complex#(a_type)} {arguments Complex::Complex#(a_type)} {position {%/Libraries/Complex.bsv 178 27 {Library Complex}}}} {function Complex::cmplxWrite {result Action} {arguments {String String String {function Action f(a_type x1)} Complex::Complex#(a_type)}} {position {%/Libraries/Complex.bsv 199 17 {Library Complex}}}} {function Complex::writeInt {result Action} {arguments Int#(n)} {position {%/Libraries/Complex.bsv 214 17 {Library Complex}}}} {function Complex::printComplex {result Action} {arguments {String Complex::Complex#(any_type)}} {provisos {{Bits#(any_type, pa)}}} {position {%/Libraries/Complex.bsv 228 17 {Library Complex}}}}
{function Assert::assertMessage {result String} {arguments {String String}} {position {%/Libraries/Assert.bs 3 0 {Library Assert}}}} {function Assert::empty {result Empty} {position {%/Libraries/Assert.bs 15 0 {Library Assert}}}} {module Assert::staticAssert {interface Empty} {arguments {Bool String}} {position {%/Libraries/Assert.bs 23 0 {Library Assert}}}} {function Assert::dynamicAssert {result Action} {arguments {Bool String}} {position {%/Libraries/Assert.bs 34 0 {Library Assert}}}} {module Assert::nullModule {interface Empty} {position {%/Libraries/Assert.bs 42 0 {Library Assert}}}} {module Assert::continuousAssert {interface Empty} {arguments {Bool String}} {position {%/Libraries/Assert.bs 53 0 {Library Assert}}}}
{module ListFIFO::mkListFIFOF {interface FIFOF::FIFOF#(List#(a))} {arguments Integer} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ListFIFO.bs 16 0 {Library ListFIFO}}}} {module ListFIFO::mkListFIFO {interface FIFO::FIFO#(List#(a))} {arguments Integer} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ListFIFO.bs 35 0 {Library ListFIFO}}}}
{function BitonicSort::pairs {result {{List#(Tuple2#(a, a))}}} {arguments List#(a)} {position {%/Libraries/BitonicSort.bs 14 0 {Library BitonicSort}}}} {function BitonicSort::unpairs {result List#(a)} {arguments {{List#(Tuple2#(a, a))}}} {position {%/Libraries/BitonicSort.bs 19 0 {Library BitonicSort}}}} {function BitonicSort::halve {result {{Tuple2#(List#(a), List#(a))}}} {arguments List#(a)} {position {%/Libraries/BitonicSort.bs 23 0 {Library BitonicSort}}}} {function BitonicSort::unhalve {result List#(a)} {arguments {{Tuple2#(List#(a), List#(a))}}} {position {%/Libraries/BitonicSort.bs 26 0 {Library BitonicSort}}}} {function BitonicSort::riffle {result List#(a)} {arguments List#(a)} {position {%/Libraries/BitonicSort.bs 29 0 {Library BitonicSort}}}} {function BitonicSort::unriffle {result List#(a)} {arguments List#(a)} {position {%/Libraries/BitonicSort.bs 32 0 {Library BitonicSort}}}} {function BitonicSort::papply {result {{Tuple2#(b, d)}}} {arguments {{Tuple2#(function b f(a x1), function d f(c x1))} {Tuple2#(a, c)}}} {position {%/Libraries/BitonicSort.bs 35 0 {Library BitonicSort}}}} {function BitonicSort::two {result List#(b)} {arguments {{function List#(b) f(List#(a) x1)} List#(a)}} {position {%/Libraries/BitonicSort.bs 38 0 {Library BitonicSort}}}} {function BitonicSort::ilv {result List#(b)} {arguments {{function List#(b) f(List#(a) x1)} List#(a)}} {position {%/Libraries/BitonicSort.bs 41 0 {Library BitonicSort}}}} {function BitonicSort::evens {result List#(b)} {arguments {{function Tuple2#(b, b) f(Tuple2#(a, a) x1)} List#(a)}} {position {%/Libraries/BitonicSort.bs 44 0 {Library BitonicSort}}}} {function BitonicSort::bfly {result List#(a)} {arguments {{function Tuple2#(a, a) f(Tuple2#(a, a) x1)} Integer List#(a)}} {position {%/Libraries/BitonicSort.bs 47 0 {Library BitonicSort}}}} {function BitonicSort::sndList {result List#(a)} {arguments {{function List#(a) f(List#(a) x1)} List#(a)}} {position {%/Libraries/BitonicSort.bs 51 0 {Library BitonicSort}}}} {function BitonicSort::sorter {result List#(a)} {arguments {{function Tuple2#(a, a) f(Tuple2#(a, a) x1)} Integer List#(a)}} {position {%/Libraries/BitonicSort.bs 54 0 {Library BitonicSort}}}} {function BitonicSort::cmpSwap {result {{Tuple2#(a, a)}}} {arguments {{function Bool f(a x1, a x2)} {Tuple2#(a, a)}}} {position {%/Libraries/BitonicSort.bs 58 0 {Library BitonicSort}}}} {function BitonicSort::sortLe {result {{Vector::Vector#(n, a)}}} {arguments {{function Bool f(a x1, a x2)} {Vector::Vector#(n, a)}}} {provisos {{Log#(n, k)}}} {position {%/Libraries/BitonicSort.bs 69 0 {Library BitonicSort}}}}
{function Enum::enumAll {result List#(a)} {provisos {Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/Enum.bs 16 0 {Library Enum}}}} {function Enum::enumFromTo {result List#(a)} {arguments {a a}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Enum.bs 27 0 {Library Enum}}}} {function Enum::enumB {result List#(Bit#(n))} {arguments {Bit#(n) Bit#(n)}} {position {%/Libraries/Enum.bs 30 0 {Library Enum}}}}
{module FoldFIFOF::mkFoldFIFO1 {interface FoldFIFOF::FoldFIFO#(a)} {provisos {{Bits#(a, k)}}} {position {%/Libraries/FoldFIFOF.bs 21 0 {Library FoldFIFOF}}}} {module FoldFIFOF::mkFoldFIFO {interface FoldFIFOF::FoldFIFO#(a)} {provisos {{Bits#(a, k)}}} {position {%/Libraries/FoldFIFOF.bs 39 0 {Library FoldFIFOF}}}}
{function BitUtils::genLowestIndexes {result {{Vector::Vector#(m, Maybe#(UInt#(idxs_t)))}}} {arguments Bit#(n)} {provisos {{Add#(xxx, 1, m)} {Log#(n, idxs_t)}}} {position {%/Libraries/BitUtils.bsv 25 1 {Library BitUtils}}}} {function BitUtils::copyLowestNBits {result Bit#(n)} {arguments {UInt#(idxs_t) Bit#(n)}} {provisos {{Add#(xxy, 1, idxs_t)} {Add#(xxx, 1, n)}}} {position {%/Libraries/BitUtils.bsv 53 1 {Library BitUtils}}}} {function BitUtils::copyLowestNBits_static {result Bit#(n)} {arguments {Integer Bit#(n)}} {position {%/Libraries/BitUtils.bsv 84 1 {Library BitUtils}}}} {function BitUtils::countLeadingZeros {result UInt#(idxs_t)} {arguments Bit#(n)} {provisos {{Add#(k, 1, idxs_t)} {Log#(n, k)}}} {position {%/Libraries/BitUtils.bsv 110 1 {Library BitUtils}}}}

{module DPSRAM::mkDPSRAM {interface {{Tuple2#(SyncSRAM::SyncSRAMS#(1, adrs, dtas), SyncSRAM::SyncSRAMS#(1, adrs, dtas))}}} {arguments Integer} {position {%/Libraries/DPSRAM.bs 18 0 {Library DPSRAM}}}} {function DPSRAM::mkDPSRAM_C {result {{Module#(Tuple2#(SyncSRAM::SyncSRAMS#(1, adrs, dtas), SyncSRAM::SyncSRAMS#(1, adrs, dtas)))}}} {arguments Integer} {position {%/Libraries/DPSRAM.bs 60 0 {Library DPSRAM}}}} {function DPSRAM::mkDPSRAM_V {result {{Module#(DPSRAM::VSyncSRAM#(adrs, dtas))}}} {arguments Integer} {position {%/Libraries/DPSRAM.bs 106 0 {Library DPSRAM}}}}
{module BRAMFIFO::mkSizedBRAMFIFOF {interface FIFOF::FIFOF#(t)} {arguments Integer} {provisos {{Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 47 8 {Library BRAMFIFO}}}} {module BRAMFIFO::mkSzBRAMFIFOF {interface {{BRAMFIFO::IBRAMFIFOF#(l, t)}}} {arguments Integer} {provisos {{Add#(1, x, l)} {Add#(1, l, d)} {Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 98 8 {Library BRAMFIFO}}}} {module BRAMFIFO::mkSizedBRAMFIFO {interface FIFO::FIFO#(t)} {arguments Integer} {provisos {{Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 205 8 {Library BRAMFIFO}}}} {module BRAMFIFO::mkSyncBRAMFIFO {interface Clocks::SyncFIFOIfc#(t)} {arguments {Integer Clock Reset Clock Reset}} {provisos {{Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 224 8 {Library BRAMFIFO}}}} {module BRAMFIFO::mkSncBRAMFIFOF {interface {{BRAMFIFO::ISyncBRAMFIFOFIfc#(l, t)}}} {arguments {Integer Clock Reset Clock Reset}} {provisos {{Add#(1, x, l)} {Add#(1, l, d)} {Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 269 8 {Library BRAMFIFO}}}} {module BRAMFIFO::mkSyncBRAMFIFOToCC {interface Clocks::SyncFIFOIfc#(t)} {arguments {Integer Clock Reset}} {provisos {{Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 355 8 {Library BRAMFIFO}}}} {module BRAMFIFO::mkSyncBRAMFIFOFromCC {interface Clocks::SyncFIFOIfc#(t)} {arguments {Integer Clock Reset}} {provisos {{Add#(1, z, st)} {Bits#(t, st)}}} {position {%/Libraries/BRAMFIFO.bsv 375 8 {Library BRAMFIFO}}}}
{module AlignedFIFOs::vMkRegU {interface AlignedFIFOs::RawReg#(_sn0)} {arguments Clock} {position {%/Libraries/AlignedFIFOs.bsv 60 11 {Library AlignedFIFOs}}}} {module AlignedFIFOs::mkRegStore {interface {{AlignedFIFOs::Store#(UInt#(0), a, 0)}}} {arguments {Clock Clock}} {provisos {{Bits#(a, a_sz)}}} {position {%/Libraries/AlignedFIFOs.bsv 73 8 {Library AlignedFIFOs}}}} {module AlignedFIFOs::mkRegVectorStore {interface {{AlignedFIFOs::Store#(UInt#(w), a, 0)}}} {arguments {Clock Clock}} {provisos {{Bits#(a, a_sz)}}} {position {%/Libraries/AlignedFIFOs.bsv 94 8 {Library AlignedFIFOs}}}} {module AlignedFIFOs::mkBRAMStore2W1R {interface {{AlignedFIFOs::Store#(i, a, 1)}}} {arguments {Clock Reset Clock Reset}} {provisos {Eq#(i) {Bits#(i, w)} {Bits#(a, a_sz)}}} {position {%/Libraries/AlignedFIFOs.bsv 115 8 {Library AlignedFIFOs}}}} {module AlignedFIFOs::mkBRAMStore1W2R {interface {{AlignedFIFOs::Store#(i, a, 1)}}} {arguments {Clock Reset Clock Reset}} {provisos {Eq#(i) {Bits#(i, w)} {Bits#(a, a_sz)}}} {position {%/Libraries/AlignedFIFOs.bsv 181 8 {Library AlignedFIFOs}}}} {module AlignedFIFOs::mkUGAlignedFIFO {interface AlignedFIFOs::AlignedFIFO#(a)} {arguments {Bool Bool Clock Reset Clock Reset {AlignedFIFOs::Store#(i, a, n)} Bool Bool}} {provisos {Arith#(i) Eq#(i) {Bits#(i, w)} {Bits#(a, sz_a)}}} {position {%/Libraries/AlignedFIFOs.bsv 264 8 {Library AlignedFIFOs}}}} {module AlignedFIFOs::mkAlignedFIFO {interface AlignedFIFOs::AlignedFIFO#(a)} {arguments {Clock Reset Clock Reset {AlignedFIFOs::Store#(i, a, n)} Bool Bool}} {provisos {Arith#(i) Eq#(i) {Bits#(i, w)} {Bits#(a, sz_a)}}} {position {%/Libraries/AlignedFIFOs.bsv 454 8 {Library AlignedFIFOs}}}}
{function Pull::apply {result Pull::Pull#(b)} {arguments {{function b f(a x1)} Pull::Pull#(a)}} {position {%/Libraries/Pull.bs 28 0 {Library Pull}}}} {function Pull::tee {result Pull::Pull#(a)} {arguments {{function Action f(a x1)} Pull::Pull#(a)}} {position {%/Libraries/Pull.bs 35 0 {Library Pull}}}} {module Pull::pass {interface Pull::Pull#(a)} {arguments Pull::Pull#(a)} {position {%/Libraries/Pull.bs 47 0 {Library Pull}}}} {module Pull::passed {interface Pull::Pull#(b)} {arguments {{function b f(a x1)} Pull::Pull#(a)}} {position {%/Libraries/Pull.bs 58 0 {Library Pull}}}} {module Pull::buffer {interface Pull::Pull#(a)} {arguments {a Pull::Pull#(a)}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Pull.bs 67 0 {Library Pull}}}} {module Pull::buffered {interface Pull::Pull#(b)} {arguments {{function b f(a x1)} Pull::Pull#(a)}} {provisos {{Bits#(b, sb)}}} {position {%/Libraries/Pull.bs 85 0 {Library Pull}}}} {module Pull::sink {interface Empty} {arguments Pull::Pull#(a)} {position {%/Libraries/Pull.bs 93 0 {Library Pull}}}} {module Pull::spew {interface Pull::Pull#(a)} {position {%/Libraries/Pull.bs 101 0 {Library Pull}}}} {function » {result m#(b)} {arguments {m#(a) {function m#(b) f(a x1)}}} {provisos Monad#(m)} {position {%/Libraries/Pull.bs 111 1 {Library Pull}}}} {function Pull::pipe {result m#(b)} {arguments {m#(a) {function m#(b) f(a x1)}}} {provisos Monad#(m)} {position {%/Libraries/Pull.bs 114 0 {Library Pull}}}}
{function Counter::vMkUnsafeCounter {result Module#(Counter::VCounter#(n))} {arguments Bit#(n)} {position {%/Libraries/Counter.bs 22 0 {Library Counter}}}} {module Counter::mkUnsafeCounter {interface Counter::Counter#(n)} {arguments Bit#(n)} {position {%/Libraries/Counter.bs 38 0 {Library Counter}}}} {function Counter::vMkCounter {result Module#(Counter::VCounter#(n))} {arguments Bit#(n)} {position {%/Libraries/Counter.bs 63 0 {Library Counter}}}} {module Counter::mkCounter {interface Counter::Counter#(n)} {arguments Bit#(n)} {position {%/Libraries/Counter.bs 79 0 {Library Counter}}}}
{module SRAM::mkWrapSRAM {interface {{RAM::RAM#(adr, dta)}}} {arguments {{m#(SyncSRAM::SyncSRAMS#(lat, adrs, dtas))}}} {provisos {{Log#(lat4, llat)} {Add#(4, lat, lat4)} {Add#(1, lat, lat1)} {Bits#(dta, dtas)} {Bits#(adr, adrs)}}} {position {%/Libraries/SRAM.bs 30 0 {Library SRAM}}}} {module SRAM::wrapSRAM {interface {{Tuple2#(SyncSRAM::SyncSRAMC#(lat, adrs, dtas), RAM::RAM#(adr, dta))}}} {provisos {{Log#(lat4, llat)} {Add#(4, lat, lat4)} {Add#(1, lat, lat1)} {Bits#(dta, dtas)} {Bits#(adr, adrs)}}} {position {%/Libraries/SRAM.bs 51 0 {Library SRAM}}}} {module SRAM::mkShiftReg {interface {{SRAM::ShiftReg#(n, a)}}} {arguments a} {provisos {{Bits#(a, sa)} {Add#(1, n1, n)}}} {position {%/Libraries/SRAM.bs 139 0 {Library SRAM}}}}
{function StmtFSMUtil::setMEState {result Action} {arguments {StmtFSMUtil::MEState Integer}} {position {%/Libraries/StmtFSMUtil.bsv 27 17 {Library StmtFSMUtil}}}} {function StmtFSMUtil::set_delayedMEState {result Action} {arguments {StmtFSMUtil::MEState Integer}} {position {%/Libraries/StmtFSMUtil.bsv 31 17 {Library StmtFSMUtil}}}} {function StmtFSMUtil::resetMEState {result Action} {arguments StmtFSMUtil::MEState} {position {%/Libraries/StmtFSMUtil.bsv 35 17 {Library StmtFSMUtil}}}} {function StmtFSMUtil::reset_delayedMEState {result Action} {arguments StmtFSMUtil::MEState} {position {%/Libraries/StmtFSMUtil.bsv 39 17 {Library StmtFSMUtil}}}} {module StmtFSMUtil::mkMEState {interface StmtFSMUtil::MEState} {arguments Integer} {position {%/Libraries/StmtFSMUtil.bsv 47 8 {Library StmtFSMUtil}}}} {module StmtFSMUtil::mkMEStateInternal {interface StmtFSMUtil::MEStateInternal#(a)} {provisos {Literal#(a) Eq#(a) Bitwise#(a) {Bits#(a, sa)} Bounded#(a)}} {position {%/Libraries/StmtFSMUtil.bsv 139 8 {Library StmtFSMUtil}}}}

{module SquareRoot::mkSquareRooter {interface {{ClientServer::Server#(UInt#(m), Tuple2#(UInt#(m), Bool))}}} {arguments Integer} {provisos {{Mul#(m2, 2, m)} {Div#(m, 2, m2)}}} {position {%/Libraries/SquareRoot.bsv 17 8 {Library SquareRoot}}}} {module SquareRoot::mkFixedPointSquareRooter {interface {{ClientServer::Server#(FixedPoint::FixedPoint#(isize, fsize), Tuple2#(FixedPoint::FixedPoint#(isize, fsize), Bool))}}} {arguments Integer} {provisos {{Add#(a__, 1, TLog#(TAdd#(1, m)))} {Mul#(TDiv#(m, 2), 2, m)} {Add#(isize, fsize, m)}}} {position {%/Libraries/SquareRoot.bsv 99 8 {Library SquareRoot}}}} {module SquareRoot::mkNonPipelinedSquareRooter {interface {{ClientServer::Server#(UInt#(m), Tuple2#(UInt#(m), Bool))}}} {arguments Integer} {provisos {{Log#(TAdd#(1, m), TLog#(TAdd#(m, 1)))} {Add#(a__, 2, m)}}} {position {%/Libraries/SquareRoot.bsv 161 8 {Library SquareRoot}}}} {module SquareRoot::mkTb {interface Empty} {position {%/Libraries/SquareRoot.bsv 259 8 {Library SquareRoot}}}}
{function Real::sin {result Real} {arguments Real} {position {%/Libraries/Real.bs 24 0 {Library Real}}}} {function Real::cos {result Real} {arguments Real} {position {%/Libraries/Real.bs 27 0 {Library Real}}}} {function Real::tan {result Real} {arguments Real} {position {%/Libraries/Real.bs 30 0 {Library Real}}}} {function Real::sinh {result Real} {arguments Real} {position {%/Libraries/Real.bs 33 0 {Library Real}}}} {function Real::cosh {result Real} {arguments Real} {position {%/Libraries/Real.bs 36 0 {Library Real}}}} {function Real::tanh {result Real} {arguments Real} {position {%/Libraries/Real.bs 39 0 {Library Real}}}} {function Real::asin {result Real} {arguments Real} {position {%/Libraries/Real.bs 42 0 {Library Real}}}} {function Real::acos {result Real} {arguments Real} {position {%/Libraries/Real.bs 45 0 {Library Real}}}} {function Real::atan {result Real} {arguments Real} {position {%/Libraries/Real.bs 48 0 {Library Real}}}} {function Real::asinh {result Real} {arguments Real} {position {%/Libraries/Real.bs 51 0 {Library Real}}}} {function Real::acosh {result Real} {arguments Real} {position {%/Libraries/Real.bs 54 0 {Library Real}}}} {function Real::atanh {result Real} {arguments Real} {position {%/Libraries/Real.bs 57 0 {Library Real}}}} {function Real::atan2 {result Real} {arguments {Real Real}} {position {%/Libraries/Real.bs 60 0 {Library Real}}}} {function Real::pow {result Real} {arguments {Real Real}} {position {%/Libraries/Real.bs 66 0 {Library Real}}}} {function Real::sqrt {result Real} {arguments Real} {position {%/Libraries/Real.bs 72 0 {Library Real}}}} {function Real::pi {result Real} {position {%/Libraries/Real.bs 78 0 {Library Real}}}} {function Real::trunc {result Integer} {arguments Real} {position {%/Libraries/Real.bs 84 0 {Library Real}}}} {function Real::ceil {result Integer} {arguments Real} {position {%/Libraries/Real.bs 87 0 {Library Real}}}} {function Real::floor {result Integer} {arguments Real} {position {%/Libraries/Real.bs 90 0 {Library Real}}}} {function Real::round {result Integer} {arguments Real} {position {%/Libraries/Real.bs 93 0 {Library Real}}}} {function Real::splitReal {result {{Tuple2#(Integer, Real)}}} {arguments Real} {position {%/Libraries/Real.bs 99 0 {Library Real}}}} {function Real::decodeReal {result {{Tuple3#(Bool, Integer, Integer)}}} {arguments Real} {position {%/Libraries/Real.bs 102 0 {Library Real}}}} {function Real::realToDigits {result {{Tuple2#(List#(Integer), Integer)}}} {arguments {Integer Real}} {position {%/Libraries/Real.bs 107 0 {Library Real}}}} {function Real::isInfinite {result Bool} {arguments Real} {position {%/Libraries/Real.bs 110 0 {Library Real}}}} {function Real::isNegativeZero {result Bool} {arguments Real} {position {%/Libraries/Real.bs 113 0 {Library Real}}}}
{module CommitIfc::mkNullSendCommit {interface CommitIfc::SendCommit#(a)} {provisos DefaultValue#(a)} {position {%/Libraries/CommitIfc.bsv 39 8 {Library CommitIfc}}}} {module CommitIfc::mkNullRecvCommit {interface CommitIfc::RecvCommit#(a)} {provisos DefaultValue#(a)} {position {%/Libraries/CommitIfc.bsv 51 8 {Library CommitIfc}}}} {module CommitIfc::mkClientFromClientCommit {interface {{ClientServer::Client#(req, resp)}}} {arguments {{CommitIfc::ClientCommit#(req, resp)}}} {provisos {{Bits#(req, _y)} {Bits#(resp, _x)}}} {position {%/Libraries/CommitIfc.bsv 364 8 {Library CommitIfc}}}}
{function ListN::unL {result List#(a)} {arguments {{ListN::ListN#(n, a)}}} {position {%/Libraries/ListN.bs 60 0 {Library ListN}}}} {function ListN::flatN {result Bit#(m)} {arguments {Integer List#(Bit#(k))}} {position {%/Libraries/ListN.bs 91 0 {Library ListN}}}} {function ListN::grabN {result List#(Bit#(k))} {arguments {Integer Integer Bit#(m)}} {position {%/Libraries/ListN.bs 95 0 {Library ListN}}}} {function ListN::newListN {result {{ListN::ListN#(n, a)}}} {position {%/Libraries/ListN.bs 121 0 {Library ListN}}}} {function ListN::genListN {result {{ListN::ListN#(n, Integer)}}} {position {%/Libraries/ListN.bs 130 0 {Library ListN}}}} {function ListN::genList {result {{ListN::ListN#(n, Integer)}}} {position {%/Libraries/ListN.bs 132 0 {Library ListN}}}} {function ListN::replicate {result {{ListN::ListN#(n, a)}}} {arguments a} {position {%/Libraries/ListN.bs 141 0 {Library ListN}}}} {function ListN::genWith {result {{ListN::ListN#(n, a)}}} {arguments {{function a f(Integer x1)}}} {position {%/Libraries/ListN.bs 150 0 {Library ListN}}}} {function ListN::cons {result {{ListN::ListN#(n1, a)}}} {arguments {a {ListN::ListN#(n, a)}}} {provisos {{Add#(1, n, n1)}}} {position {%/Libraries/ListN.bs 164 0 {Library ListN}}}} {function :> {result {{ListN::ListN#(n1, a)}}} {arguments {a {ListN::ListN#(n, a)}}} {provisos {{Add#(1, n, n1)}}} {position {%/Libraries/ListN.bs 172 1 {Library ListN}}}} {function ListN::nil {result {{ListN::ListN#(0, a)}}} {position {%/Libraries/ListN.bs 180 0 {Library ListN}}}} {function ListN::append {result {{ListN::ListN#(mn, a)}}} {arguments {{ListN::ListN#(m, a)} {ListN::ListN#(n, a)}}} {provisos {{Add#(m, n, mn)}}} {position {%/Libraries/ListN.bs 193 0 {Library ListN}}}} {function ListN::concat {result {{ListN::ListN#(mn, a)}}} {arguments {{ListN::ListN#(m, ListN::ListN#(n, a))}}} {provisos {{Mul#(m, n, mn)}}} {position {%/Libraries/ListN.bs 202 0 {Library ListN}}}} {function !! {result a} {arguments {{ListN::ListN#(n, a)} Integer}} {position {%/Libraries/ListN.bs 231 1 {Library ListN}}}} {function ListN::select {result a} {arguments {{ListN::ListN#(n, a)} ix}} {provisos {{PrimIndex#(ix, dx)}}} {position {%/Libraries/ListN.bs 242 0 {Library ListN}}}} {function ListN::update {result {{ListN::ListN#(n, a)}}} {arguments {{ListN::ListN#(n, a)} ix a}} {provisos {{PrimIndex#(ix, dx)}}} {position {%/Libraries/ListN.bs 253 0 {Library ListN}}}} {function ListN::head {result a} {arguments {{ListN::ListN#(n, a)}}} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/ListN.bs 264 0 {Library ListN}}}} {function ListN::last {result a} {arguments {{ListN::ListN#(n, a)}}} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/ListN.bs 272 0 {Library ListN}}}} {function ListN::tail {result {{ListN::ListN#(m, a)}}} {arguments {{ListN::ListN#(n, a)}}} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/ListN.bs 284 0 {Library ListN}}}} {function ListN::init {result {{ListN::ListN#(m, a)}}} {arguments {{ListN::ListN#(n, a)}}} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/ListN.bs 293 0 {Library ListN}}}} {function ListN::take {result {{ListN::ListN#(m, a)}}} {arguments {{ListN::ListN#(n, a)}}} {provisos {{Add#(m, k, n)}}} {position {%/Libraries/ListN.bs 302 0 {Library ListN}}}} {function ListN::zip {result {{ListN::ListN#(n, Tuple2#(a, b))}}} {arguments {{ListN::ListN#(n, a)} {ListN::ListN#(n, b)}}} {position {%/Libraries/ListN.bs 321 0 {Library ListN}}}} {function ListN::zip3 {result {{ListN::ListN#(n, Tuple3#(a, b, c))}}} {arguments {{ListN::ListN#(n, a)} {ListN::ListN#(n, b)} {ListN::ListN#(n, c)}}} {position {%/Libraries/ListN.bs 332 0 {Library ListN}}}} {function ListN::zip4 {result {{ListN::ListN#(n, Tuple4#(a, b, c, d))}}} {arguments {{ListN::ListN#(n, a)} {ListN::ListN#(n, b)} {ListN::ListN#(n, c)} {ListN::ListN#(n, d)}}} {position {%/Libraries/ListN.bs 344 0 {Library ListN}}}} {function ListN::zipAny {result {{ListN::ListN#(mn, Tuple2#(a, b))}}} {arguments {{ListN::ListN#(m, a)} {ListN::ListN#(n, b)}}} {provisos {{Max#(n, mn, n)} {Max#(m, mn, m)}}} {position {%/Libraries/ListN.bs 356 0 {Library ListN}}}} {function ListN::unzip {result {{Tuple2#(ListN::ListN#(n, a), ListN::ListN#(n, b))}}} {arguments {{ListN::ListN#(n, Tuple2#(a, b))}}} {position {%/Libraries/ListN.bs 366 0 {Library ListN}}}} {function ListN::map {result {{ListN::ListN#(n, b)}}} {arguments {{function b f(a x1)} {ListN::ListN#(n, a)}}} {position {%/Libraries/ListN.bs 395 0 {Library ListN}}}} {function ListN::foldr {result b} {arguments {{function b f(a x1, b x2)} b {ListN::ListN#(n, a)}}} {position {%/Libraries/ListN.bs 415 0 {Library ListN}}}} {function ListN::foldl {result b} {arguments {{function b f(b x1, a x2)} b {ListN::ListN#(n, a)}}} {position {%/Libraries/ListN.bs 425 0 {Library ListN}}}} {function ListN::foldr1 {result a} {arguments {{function a f(a x1, a x2)} {ListN::ListN#(n, a)}}} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/ListN.bs 439 0 {Library ListN}}}} {function ListN::foldl1 {result a} {arguments {{function a f(a x1, a x2)} {ListN::ListN#(n, a)}}} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/ListN.bs 450 0 {Library ListN}}}} {function ListN::fold {result a} {arguments {{function a f(a x1, a x2)} {ListN::ListN#(n, a)}}} {provisos {{Add#(1, n1, n)}}} {position {%/Libraries/ListN.bs 463 0 {Library ListN}}}} {function ListN::scanr {result {{ListN::ListN#(n1, b)}}} {arguments {{function b f(a x1, b x2)} b {ListN::ListN#(n, a)}}} {provisos {{Add#(1, n, n1)}}} {position {%/Libraries/ListN.bs 498 0 {Library ListN}}}} {function ListN::sscanr {result {{ListN::ListN#(n, b)}}} {arguments {{function b f(a x1, b x2)} b {ListN::ListN#(n, a)}}} {position {%/Libraries/ListN.bs 508 0 {Library ListN}}}} {function ListN::scanl {result {{ListN::ListN#(n1, a)}}} {arguments {{function a f(a x1, b x2)} a {ListN::ListN#(n, b)}}} {provisos {{Add#(1, n, n1)}}} {position {%/Libraries/ListN.bs 536 0 {Library ListN}}}} {function ListN::sscanl {result {{ListN::ListN#(n, a)}}} {arguments {{function a f(a x1, b x2)} a {ListN::ListN#(n, b)}}} {position {%/Libraries/ListN.bs 546 0 {Library ListN}}}} {function ListN::zipWith {result {{ListN::ListN#(n, c)}}} {arguments {{function c f(a x1, b x2)} {ListN::ListN#(n, a)} {ListN::ListN#(n, b)}}} {position {%/Libraries/ListN.bs 559 0 {Library ListN}}}} {function ListN::zipWithAny {result {{ListN::ListN#(mn, c)}}} {arguments {{function c f(a x1, b x2)} {ListN::ListN#(n, a)} {ListN::ListN#(m, b)}}} {provisos {{Max#(m, mn, m)} {Max#(n, mn, n)}}} {position {%/Libraries/ListN.bs 571 0 {Library ListN}}}} {function ListN::zipWith3 {result {{ListN::ListN#(n, d)}}} {arguments {{function d f(a x1, b x2, c x3)} {ListN::ListN#(n, a)} {ListN::ListN#(n, b)} {ListN::ListN#(n, c)}}} {position {%/Libraries/ListN.bs 584 0 {Library ListN}}}} {function ListN::zipWithAny3 {result {{ListN::ListN#(mn, d)}}} {arguments {{function d f(a x1, b x2, c x3)} {ListN::ListN#(n, a)} {ListN::ListN#(m, b)} {ListN::ListN#(o, c)}}} {provisos {{Max#(o, mn, o)} {Max#(n, mn, n)} {Max#(m, mn, m)}}} {position {%/Libraries/ListN.bs 597 0 {Library ListN}}}} {function ListN::rotate {result {{ListN::ListN#(n, a)}}} {arguments {{ListN::ListN#(n, a)}}} {position {%/Libraries/ListN.bs 612 0 {Library ListN}}}} {function ListN::rotateR {result {{ListN::ListN#(n, a)}}} {arguments {{ListN::ListN#(n, a)}}} {position {%/Libraries/ListN.bs 620 0 {Library ListN}}}} {function ListN::reverse {result {{ListN::ListN#(n, a)}}} {arguments {{ListN::ListN#(n, a)}}} {position {%/Libraries/ListN.bs 628 0 {Library ListN}}}} {function ListN::transpose {result {{ListN::ListN#(n, ListN::ListN#(m, a))}}} {arguments {{ListN::ListN#(m, ListN::ListN#(n, a))}}} {position {%/Libraries/ListN.bs 637 0 {Library ListN}}}} {function ListN::transposeLN {result {{ListN::ListN#(n, List#(a))}}} {arguments {{List#(ListN::ListN#(n, a))}}} {position {%/Libraries/ListN.bs 646 0 {Library ListN}}}} {function ListN::mapM {result {{m#(ListN::ListN#(n, b))}}} {arguments {{function m#(b) f(a x1)} {ListN::ListN#(n, a)}}} {provisos Monad#(m)} {position {%/Libraries/ListN.bs 686 0 {Library ListN}}}} {function ListN::mapM_ {result m#(void)} {arguments {{function m#(b) f(a x1)} {ListN::ListN#(n, a)}}} {provisos Monad#(m)} {position {%/Libraries/ListN.bs 702 0 {Library ListN}}}} {function ListN::zipWithM {result {{m#(ListN::ListN#(n, c))}}} {arguments {{function m#(c) f(a x1, b x2)} {ListN::ListN#(n, a)} {ListN::ListN#(n, b)}}} {provisos Monad#(m)} {position {%/Libraries/ListN.bs 722 0 {Library ListN}}}} {function ListN::zipWithM_ {result m#(void)} {arguments {{function m#(c) f(a x1, b x2)} {ListN::ListN#(n, a)} {ListN::ListN#(n, b)}}} {provisos Monad#(m)} {position {%/Libraries/ListN.bs 738 0 {Library ListN}}}} {function ListN::zipWith3M {result {{m#(ListN::ListN#(n, d))}}} {arguments {{function m#(d) f(a x1, b x2, c x3)} {ListN::ListN#(n, a)} {ListN::ListN#(n, b)} {ListN::ListN#(n, c)}}} {provisos Monad#(m)} {position {%/Libraries/ListN.bs 758 0 {Library ListN}}}} {function ListN::genWithM {result {{m#(ListN::ListN#(n, a))}}} {arguments {{function m#(a) f(Integer x1)}}} {provisos Monad#(m)} {position {%/Libraries/ListN.bs 772 0 {Library ListN}}}} {function ListN::replicateM {result {{m#(ListN::ListN#(n, a))}}} {arguments m#(a)} {provisos Monad#(m)} {position {%/Libraries/ListN.bs 782 0 {Library ListN}}}} {function ListN::foldlM {result m#(a)} {arguments {{function m#(a) f(a x1, b x2)} a {ListN::ListN#(n, b)}}} {provisos Monad#(m)} {position {%/Libraries/ListN.bs 793 0 {Library ListN}}}} {function ListN::foldM {result m#(a)} {arguments {{function m#(a) f(a x1, a x2)} {ListN::ListN#(n, a)}}} {provisos {{Add#(1, k, n)} Monad#(m)}} {position {%/Libraries/ListN.bs 803 0 {Library ListN}}}} {function ListN::foldrM {result m#(b)} {arguments {{function m#(b) f(a x1, b x2)} b {ListN::ListN#(n, a)}}} {provisos Monad#(m)} {position {%/Libraries/ListN.bs 815 0 {Library ListN}}}} {function ListN::sequence {result {{m#(ListN::ListN#(n, a))}}} {arguments {{ListN::ListN#(n, m#(a))}}} {provisos Monad#(m)} {position {%/Libraries/ListN.bs 826 0 {Library ListN}}}} {function ListN::elem {result Bool} {arguments {a {ListN::ListN#(n, a)}}} {provisos Eq#(a)} {position {%/Libraries/ListN.bs 841 0 {Library ListN}}}} {function ListN::any {result Bool} {arguments {{function Bool f(a x1)} {ListN::ListN#(n, a)}}} {position {%/Libraries/ListN.bs 852 0 {Library ListN}}}} {function ListN::all {result Bool} {arguments {{function Bool f(a x1)} {ListN::ListN#(n, a)}}} {position {%/Libraries/ListN.bs 860 0 {Library ListN}}}} {function ListN::toList {result List#(a)} {arguments {{ListN::ListN#(n, a)}}} {position {%/Libraries/ListN.bs 874 0 {Library ListN}}}} {function ListN::toListN {result {{ListN::ListN#(n, a)}}} {arguments List#(a)} {position {%/Libraries/ListN.bs 882 0 {Library ListN}}}} {function ListN::joinActions {result Action} {arguments {{ListN::ListN#(n, Action)}}} {position {%/Libraries/ListN.bs 898 0 {Library ListN}}}} {function ListN::joinRules {result Rules} {arguments {{ListN::ListN#(n, Rules)}}} {position {%/Libraries/ListN.bs 906 0 {Library ListN}}}} {function ListN::mapAccumL {result {{Tuple2#(a, ListN::ListN#(n, c))}}} {arguments {{function Tuple2#(a, c) f(a x1, b x2)} a {ListN::ListN#(n, b)}}} {position {%/Libraries/ListN.bs 917 0 {Library ListN}}}} {function ListN::mapAccumR {result {{Tuple2#(a, ListN::ListN#(n, c))}}} {arguments {{function Tuple2#(a, c) f(a x1, b x2)} a {ListN::ListN#(n, b)}}} {position {%/Libraries/ListN.bs 930 0 {Library ListN}}}} {function ListN::mapPairs {result {{ListN::ListN#(n2, b)}}} {arguments {{function b f(a x1, a x2)} {function b f(a x1)} {ListN::ListN#(n, a)}}} {provisos {{Div#(n, 2, n2)}}} {position {%/Libraries/ListN.bs 946 0 {Library ListN}}}}
{function CBus::collectCBusIFC {result {{CBus::ModWithCBus#(sa, sd, i)}}} {arguments {{Module#(CBus::IWithCBus#(CBus::CBus#(sa, sd), i))}}} {position {%/Libraries/CBus.bsv 95 31 {Library CBus}}}} {function CBus::exposeCBusIFC {result {{Module#(CBus::IWithCBus#(CBus::CBus#(sa, sd), i))}}} {arguments {{CBus::ModWithCBus#(sa, sd, i)}}} {position {%/Libraries/CBus.bsv 111 17 {Library CBus}}}} {module CBus::regRW {interface {{CBus::IWithCBus#(CBus::CBus#(sa, sd), Reg#(r))}}} {arguments {Bit#(sa) Bit#(TLog#(sd)) r}} {provisos {{Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 161 8 {Library CBus}}}} {function CBus::mkCBRegRW {result {{CBus::ModWithCBus#(sa, sd, Reg#(r))}}} {arguments {{CBus::CRAddr#(sa2, sd)} r}} {provisos {{Add#(ignore, sa2, sa)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 206 31 {Library CBus}}}} {module CBus::regR {interface {{CBus::IWithCBus#(CBus::CBus#(sa, sd), Reg#(r))}}} {arguments {Bit#(sa) Bit#(TLog#(sd)) r}} {provisos {{Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 219 8 {Library CBus}}}} {function CBus::mkCBRegR {result {{CBus::ModWithCBus#(sa, sd, Reg#(r))}}} {arguments {{CBus::CRAddr#(sa2, sd)} r}} {provisos {{Add#(ignore, sa2, sa)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 252 31 {Library CBus}}}} {module CBus::regW {interface {{CBus::IWithCBus#(CBus::CBus#(sa, sd), Reg#(r))}}} {arguments {Bit#(sa) Bit#(TLog#(sd)) r}} {provisos {{Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 264 8 {Library CBus}}}} {function CBus::mkCBRegW {result {{CBus::ModWithCBus#(sa, sd, Reg#(r))}}} {arguments {{CBus::CRAddr#(sa2, sd)} r}} {provisos {{Add#(ignore, sa2, sa)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 303 31 {Library CBus}}}} {module CBus::regRC {interface {{CBus::IWithCBus#(CBus::CBus#(sa, sd), Reg#(r))}}} {arguments {Bit#(sa) Bit#(TLog#(sd)) r}} {provisos {{Add#(k, sr, sd)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 313 8 {Library CBus}}}} {function CBus::mkCBRegRC {result {{CBus::ModWithCBus#(sa, sd, Reg#(r))}}} {arguments {{CBus::CRAddr#(sa2, sd)} r}} {provisos {{Add#(ignore, sa2, sa)} {Add#(k, sr, sd)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 356 31 {Library CBus}}}} {module CBus::regFile {interface {{CBus::IWithCBus#(CBus::CBus#(sa, sd), RegFile::RegFile#(Bit#(sa), r))}}} {arguments {Bit#(sa) Bit#(sa)}} {provisos {{Add#(k, sr, sd)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 369 8 {Library CBus}}}} {function CBus::mkCBRegFile {result {{CBus::ModWithCBus#(sa, sd, RegFile::RegFile#(Bit#(sa), r))}}} {arguments {Bit#(sa) Bit#(sa)}} {provisos {{Add#(k, sr, sd)} {Bits#(r, sr)}}} {position {%/Libraries/CBus.bsv 406 31 {Library CBus}}}} {function CBus::foldt {result a} {arguments {{function a f(a x1, a x2)} a List#(a)}} {position {%/Libraries/CBus.bsv 421 12 {Library CBus}}}} {function CBus::bit_or {result Bit#(n)} {arguments {Bit#(n) Bit#(n)}} {position {%/Libraries/CBus.bsv 428 18 {Library CBus}}}} {function CBus::fold_maybes {result Maybe#(Bit#(n))} {arguments {Maybe#(Bit#(n)) Maybe#(Bit#(n))}} {position {%/Libraries/CBus.bsv 434 26 {Library CBus}}}} {function CBus::grab_left {result a} {arguments b} {provisos {{Add#(x, sa, sb)} {Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/CBus.bsv 441 12 {Library CBus}}}} {function CBus::zeroExtendNPBits {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(m, n, mn)}}} {position {%/Libraries/CBus.bsv 488 18 {Library CBus}}}} {function CBus::signExtendNPBits {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(m, n, mn)}}} {position {%/Libraries/CBus.bsv 498 18 {Library CBus}}}} {function CBus::truncateNPBits {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(m, n, mn)}}} {position {%/Libraries/CBus.bsv 508 18 {Library CBus}}}} {function CBus::truncateLSBNPBits {result Bit#(m)} {arguments Bit#(n)} {position {%/Libraries/CBus.bsv 518 18 {Library CBus}}}}

{module TurboFIFO::mkTurboFIFO {interface FIFO::FIFO#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/TurboFIFO.bsv 7 8 {Library TurboFIFO}}}} {module TurboFIFO::mkTurboFIFOF {interface FIFOF::FIFOF#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/TurboFIFO.bsv 63 8 {Library TurboFIFO}}}}
{module ConfigReg::mkConfigReg {interface Reg#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ConfigReg.bs 33 0 {Library ConfigReg}}}} {module ConfigReg::mkConfigRegU {interface Reg#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ConfigReg.bs 60 0 {Library ConfigReg}}}} {module ConfigReg::mkConfigRegA {interface Reg#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ConfigReg.bs 87 0 {Library ConfigReg}}}} {function ConfigReg::vMkConfigReg {result Module#(ConfigReg::VReg#(width))} {arguments Bit#(width)} {position {%/Libraries/ConfigReg.bs 116 0 {Library ConfigReg}}}} {function ConfigReg::vMkConfigRegU {result Module#(ConfigReg::VReg#(width))} {position {%/Libraries/ConfigReg.bs 125 0 {Library ConfigReg}}}} {function ConfigReg::vMkConfigRegA {result Module#(ConfigReg::VReg#(width))} {arguments Bit#(width)} {position {%/Libraries/ConfigReg.bs 134 0 {Library ConfigReg}}}}
{module BGetPut::mkBGetPut {interface {{Tuple2#(BGetPut::BGetS#(sa), GetPut::Put#(a))}}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BGetPut.bs 72 0 {Library BGetPut}}}} {module BGetPut::mkGetBPut {interface {{Tuple2#(GetPut::Get#(a), BGetPut::BPutS#(sa))}}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BGetPut.bs 113 0 {Library BGetPut}}}} {module BGetPut::mkClientBServer {interface {{Tuple2#(ClientServer::Client#(a, b), BGetPut::BServerS#(sa, sb))}}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/BGetPut.bs 246 0 {Library BGetPut}}}} {module BGetPut::mkBClientServer {interface {{Tuple2#(BGetPut::BClientS#(sa, sb), ClientServer::Server#(a, b))}}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/BGetPut.bs 267 0 {Library BGetPut}}}}
{function ZBusUtil::mkZBit {result ZBusUtil::ZBit#(t)} {arguments t} {position {%/Libraries/ZBusUtil.bsv 40 19 {Library ZBusUtil}}}} {function ZBusUtil::zBitGetWord {result t} {arguments ZBusUtil::ZBit#(t)} {position {%/Libraries/ZBusUtil.bsv 44 12 {Library ZBusUtil}}}} {module ZBusUtil::vMkConvertToZ {interface ZBusUtil::ConvertToZ#(i)} {provisos {{Bits#(i, si)}}} {position {%/Libraries/ZBusUtil.bsv 56 34 {Library ZBusUtil}}}} {module ZBusUtil::mkConvertToZ {interface ZBusUtil::ConvertToZ#(i)} {provisos {{Bits#(i, si)} Eq#(i)}} {position {%/Libraries/ZBusUtil.bsv 65 8 {Library ZBusUtil}}}} {function ZBusUtil::bitToZBit {result ZBusUtil::ZBit#(i)} {arguments {i Bool}} {provisos {{Bits#(i, si)} Eq#(i)}} {position {%/Libraries/ZBusUtil.bsv 82 19 {Library ZBusUtil}}}} {module ZBusUtil::vMkConvertFromZ {interface ZBusUtil::ConvertFromZ#(i)} {provisos {{Bits#(i, si)}}} {position {%/Libraries/ZBusUtil.bsv 95 36 {Library ZBusUtil}}}} {module ZBusUtil::mkConvertFromZ {interface ZBusUtil::ConvertFromZ#(i)} {provisos {{Bits#(i, sz)} Eq#(i)}} {position {%/Libraries/ZBusUtil.bsv 104 8 {Library ZBusUtil}}}} {function ZBusUtil::zBitToBit {result i} {arguments ZBusUtil::ZBit#(i)} {provisos Eq#(i)} {position {%/Libraries/ZBusUtil.bsv 121 12 {Library ZBusUtil}}}} {module ZBusUtil::vMkResolveZ {interface ZBusUtil::ResolveZ#(i)} {provisos {{Bits#(i, _sn0)}}} {position {%/Libraries/ZBusUtil.bsv 134 32 {Library ZBusUtil}}}} {module ZBusUtil::mkResolveZ {interface ZBusUtil::ResolveZ#(i)} {provisos {{Bits#(i, si)} Eq#(i)}} {position {%/Libraries/ZBusUtil.bsv 143 8 {Library ZBusUtil}}}} {function ZBusUtil::resolveZ {result ZBusUtil::ZBit#(i)} {arguments {ZBusUtil::ZBit#(i) ZBusUtil::ZBit#(i)}} {provisos {{Bits#(i, si)} Eq#(i)}} {position {%/Libraries/ZBusUtil.bsv 160 19 {Library ZBusUtil}}}}
{module ZBus::mkZBus {interface Empty} {arguments List#(ZBus::ZBusBusIFC#(t))} {provisos {{Bits#(t, st)} Eq#(t)}} {position {%/Libraries/ZBus.bsv 34 8 {Library ZBus}}}} {function ZBus::updateFromBus {result Action} {arguments {List#(ZBus::ZBusBusIFC#(t)) ZBusUtil::ZBit#(t) Bool}} {position {%/Libraries/ZBus.bsv 52 17 {Library ZBus}}}} {function ZBus::updateZBusBusIFCFromBus {result Action} {arguments {ZBus::ZBusBusIFC#(t) ZBusUtil::ZBit#(t) Bool}} {position {%/Libraries/ZBus.bsv 66 17 {Library ZBus}}}} {function ZBus::bStateToValid {result Bool} {arguments ZBus::BState} {position {%/Libraries/ZBus.bsv 76 15 {Library ZBus}}}} {module ZBus::mkZBusInternal {interface ZBus::ZBusInternalIFC#(t)} {arguments List#(ZBus::ZBusBusIFC#(t))} {provisos {{Bits#(t, st)} Eq#(t)}} {position {%/Libraries/ZBus.bsv 92 8 {Library ZBus}}}} {function ZBus::zBusIFCGetToBusValue {result ZBusUtil::ZBit#(t)} {arguments ZBus::ZBusBusIFC#(t)} {position {%/Libraries/ZBus.bsv 129 19 {Library ZBus}}}} {function ZBus::resolveBusBState {result ZBus::BState} {arguments List#(ZBus::ZBusBusIFC#(t))} {position {%/Libraries/ZBus.bsv 234 17 {Library ZBus}}}} {function ZBus::getBStateFromZBusIFC {result ZBus::BState} {arguments ZBus::ZBusBusIFC#(t)} {position {%/Libraries/ZBus.bsv 247 17 {Library ZBus}}}} {function ZBus::createBState {result ZBus::BState} {arguments Bool} {position {%/Libraries/ZBus.bsv 255 17 {Library ZBus}}}} {function ZBus::resolveBState {result ZBus::BState} {arguments {ZBus::BState ZBus::BState}} {position {%/Libraries/ZBus.bsv 266 17 {Library ZBus}}}} {module ZBus::mkZBusBuffer {interface ZBus::ZBusDualIFC#(t)} {provisos {{Bits#(t, st)} Eq#(t)}} {position {%/Libraries/ZBus.bsv 328 8 {Library ZBus}}}}
{module ProbeWire::mkProbeWire {interface ProbeWire::ProbeWire#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ProbeWire.bsv 32 8 {Library ProbeWire}}}} {module ProbeWire::vMkProbeWire {interface ProbeWire::ProbeWire#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ProbeWire.bsv 42 10 {Library ProbeWire}}}} {function ProbeWire::keepType {result a} {arguments a} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/ProbeWire.bsv 51 12 {Library ProbeWire}}}}
{module SRAMFile::mkSRAMFile {interface {{SyncSRAM::SyncSRAMS#(1, adrs, dtas)}}} {arguments {String Integer}} {position {%/Libraries/SRAMFile.bs 16 0 {Library SRAMFile}}}} {function SRAMFile::mkSRAMFile_C {result {{Module#(SyncSRAM::SyncSRAMS#(1, adrs, dtas))}}} {arguments {String Integer}} {position {%/Libraries/SRAMFile.bs 21 0 {Library SRAMFile}}}}
{module SPSRAM::mkSPSRAM {interface {{SyncSRAM::SyncSRAMS#(1, adrs, dtas)}}} {arguments Integer} {position {%/Libraries/SPSRAM.bs 18 0 {Library SPSRAM}}}} {function SPSRAM::mkSPSRAM_C {result {{Module#(SyncSRAM::SyncSRAMS#(1, adrs, dtas))}}} {arguments Integer} {position {%/Libraries/SPSRAM.bs 45 0 {Library SPSRAM}}}} {function SPSRAM::mkSPSRAM_V {result {{Module#(SPSRAM::VSyncSRAM#(adrs, dtas))}}} {arguments Integer} {position {%/Libraries/SPSRAM.bs 71 0 {Library SPSRAM}}}}
{module Clocks::mkAbsoluteClock {interface Clock} {arguments {Integer Integer}} {position {%/Libraries/Clocks.bsv 34 8 {Library Clocks}}}} {module Clocks::vMkAbsoluteClock {interface Clocks::ClockGenIfc} {arguments {Integer Integer}} {position {%/Libraries/Clocks.bsv 43 8 {Library Clocks}}}} {module Clocks::mkAbsoluteClockFull {interface Clock} {arguments {Integer Bit#(1) Integer Integer}} {position {%/Libraries/Clocks.bsv 69 8 {Library Clocks}}}} {module Clocks::vMkAbsoluteClockFull {interface Clocks::ClockGenIfc} {arguments {Integer Bit#(1) Integer Integer}} {position {%/Libraries/Clocks.bsv 83 8 {Library Clocks}}}} {module Clocks::mkClock {interface Clocks::MakeClockIfc#(one_bit_type)} {arguments {one_bit_type Bool}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 138 8 {Library Clocks}}}} {module Clocks::vMkClock {interface Clocks::MakeClockIfc#(Bit#(1))} {arguments {Bit#(1) Bool}} {position {%/Libraries/Clocks.bsv 160 8 {Library Clocks}}}} {module Clocks::mkUngatedClock {interface Clocks::MakeClockIfc#(one_bit_type)} {arguments one_bit_type} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 195 8 {Library Clocks}}}} {module Clocks::vMkUngatedClock {interface Clocks::MakeUngatedClockIfc#(Bit#(1))} {arguments Bit#(1)} {position {%/Libraries/Clocks.bsv 220 8 {Library Clocks}}}} {module Clocks::mkGatedClock {interface Clocks::GatedClockIfc} {arguments {Bool Clock}} {position {%/Libraries/Clocks.bsv 283 8 {Library Clocks}}}} {module Clocks::mkGatedClockFromCC {interface Clocks::GatedClockIfc} {arguments Bool} {position {%/Libraries/Clocks.bsv 306 8 {Library Clocks}}}} {module Clocks::mkJoinedClock {interface Clock} {arguments Clock} {position {%/Libraries/Clocks.bsv 316 8 {Library Clocks}}}} {module Clocks::vMkJoinedClock {interface Clocks::ClockGenIfc} {arguments Clock} {position {%/Libraries/Clocks.bsv 323 8 {Library Clocks}}}} {module Clocks::mkClockMux {interface Clocks::MuxClkIfc} {arguments {Clock Clock}} {position {%/Libraries/Clocks.bsv 363 8 {Library Clocks}}}} {module Clocks::mkUngatedClockMux {interface Clocks::MuxClkIfc} {arguments {Clock Clock}} {position {%/Libraries/Clocks.bsv 380 8 {Library Clocks}}}} {module Clocks::mkClockSelect {interface Clocks::SelectClkIfc} {arguments {Integer Clock Clock}} {position {%/Libraries/Clocks.bsv 421 8 {Library Clocks}}}} {module Clocks::mkUngatedClockSelect {interface Clocks::SelectClkIfc} {arguments {Integer Clock Clock}} {position {%/Libraries/Clocks.bsv 448 8 {Library Clocks}}}} {module Clocks::mkClockDivider {interface Clocks::ClockDividerIfc} {arguments Integer} {position {%/Libraries/Clocks.bsv 519 8 {Library Clocks}}}} {module Clocks::mkGatedClockDivider {interface Clocks::ClockDividerIfc} {arguments Integer} {position {%/Libraries/Clocks.bsv 531 8 {Library Clocks}}}} {module Clocks::mkClockDividerOffset {interface Clocks::ClockDividerIfc} {arguments {Integer Integer}} {position {%/Libraries/Clocks.bsv 544 8 {Library Clocks}}}} {module Clocks::mkClockInverter {interface Clocks::ClockDividerIfc} {position {%/Libraries/Clocks.bsv 560 8 {Library Clocks}}}} {module Clocks::mkGatedClockInverter {interface Clocks::ClockDividerIfc} {position {%/Libraries/Clocks.bsv 571 8 {Library Clocks}}}} {module Clocks::vClockInverter {interface Clocks::ClockDivider_internal} {position {%/Libraries/Clocks.bsv 589 8 {Library Clocks}}}} {module Clocks::invertCurrentClock {interface Clock} {position {%/Libraries/Clocks.bsv 599 8 {Library Clocks}}}} {module Clocks::vGatedClockInverter {interface Clocks::ClockDivider_internal} {position {%/Libraries/Clocks.bsv 606 8 {Library Clocks}}}} {module Clocks::vClockDivider {interface Clocks::ClockDivider_internal} {arguments {Integer Integer}} {position {%/Libraries/Clocks.bsv 618 8 {Library Clocks}}}} {module Clocks::vGatedClockDivider {interface Clocks::ClockDivider_internal} {arguments {Integer Integer}} {position {%/Libraries/Clocks.bsv 647 8 {Library Clocks}}}} {module Clocks::vSyncBit {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments {Clock Reset Clock}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 725 8 {Library Clocks}}}} {module Clocks::mkSyncBit {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments {Clock Reset Clock}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 750 8 {Library Clocks}}}} {module Clocks::mkSyncBitFromCC {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments Clock} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 763 8 {Library Clocks}}}} {module Clocks::mkSyncBitToCC {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments {Clock Reset}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 777 8 {Library Clocks}}}} {module Clocks::vSyncBit15 {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments {Clock Reset Clock}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 791 8 {Library Clocks}}}} {module Clocks::mkSyncBit15 {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments {Clock Reset Clock}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 816 8 {Library Clocks}}}} {module Clocks::mkSyncBit15FromCC {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments Clock} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 829 8 {Library Clocks}}}} {module Clocks::mkSyncBit15ToCC {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments {Clock Reset}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 843 8 {Library Clocks}}}} {module Clocks::vSyncBit1 {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments {Clock Reset Clock}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 857 8 {Library Clocks}}}} {module Clocks::mkSyncBit1 {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments {Clock Reset Clock}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 882 8 {Library Clocks}}}} {module Clocks::mkSyncBit1FromCC {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments Clock} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 895 8 {Library Clocks}}}} {module Clocks::mkSyncBit1ToCC {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments {Clock Reset}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 909 8 {Library Clocks}}}} {module Clocks::vSyncBit05 {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments {Clock Reset Clock}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 923 8 {Library Clocks}}}} {module Clocks::mkSyncBit05 {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments {Clock Reset Clock}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 948 8 {Library Clocks}}}} {module Clocks::mkSyncBit05FromCC {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments Clock} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 961 8 {Library Clocks}}}} {module Clocks::mkSyncBit05ToCC {interface Clocks::SyncBitIfc#(one_bit_type)} {arguments {Clock Reset}} {provisos {{Bits#(one_bit_type, 1)}}} {position {%/Libraries/Clocks.bsv 975 8 {Library Clocks}}}} {module Clocks::vSyncPulse {interface Clocks::SyncPulseIfc} {arguments {Clock Reset Clock}} {position {%/Libraries/Clocks.bsv 1003 8 {Library Clocks}}}} {module Clocks::mkSyncPulse {interface Clocks::SyncPulseIfc} {arguments {Clock Reset Clock}} {position {%/Libraries/Clocks.bsv 1036 8 {Library Clocks}}}} {module Clocks::mkSyncPulseFromCC {interface Clocks::SyncPulseIfc} {arguments Clock} {position {%/Libraries/Clocks.bsv 1047 8 {Library Clocks}}}} {module Clocks::mkSyncPulseToCC {interface Clocks::SyncPulseIfc} {arguments {Clock Reset}} {position {%/Libraries/Clocks.bsv 1059 8 {Library Clocks}}}} {module Clocks::vSyncHandshake {interface Clocks::SyncPulseIfc} {arguments {Clock Reset Clock}} {position {%/Libraries/Clocks.bsv 1071 8 {Library Clocks}}}} {module Clocks::mkSyncHandshake {interface Clocks::SyncPulseIfc} {arguments {Clock Reset Clock}} {position {%/Libraries/Clocks.bsv 1105 8 {Library Clocks}}}} {module Clocks::mkSyncHandshakeFromCC {interface Clocks::SyncPulseIfc} {arguments Clock} {position {%/Libraries/Clocks.bsv 1115 8 {Library Clocks}}}} {module Clocks::mkSyncHandshakeToCC {interface Clocks::SyncPulseIfc} {arguments {Clock Reset}} {position {%/Libraries/Clocks.bsv 1128 8 {Library Clocks}}}} {module Clocks::vSyncReg {interface Clocks::RegI#(a)} {arguments {a Clock Reset Clock}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Clocks.bsv 1170 8 {Library Clocks}}}} {module Clocks::mkSyncReg {interface Reg#(a_type)} {arguments {a_type Clock Reset Clock}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/Clocks.bsv 1206 8 {Library Clocks}}}} {module Clocks::mkSyncRegFromCC {interface Reg#(a_type)} {arguments {a_type Clock}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/Clocks.bsv 1226 8 {Library Clocks}}}} {module Clocks::mkSyncRegToCC {interface Reg#(a_type)} {arguments {a_type Clock Reset}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/Clocks.bsv 1249 8 {Library Clocks}}}} {module Clocks::vSyncFIFO {interface Clocks::SyncFIFOIfc#(a)} {arguments {Integer Clock Reset Clock}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Clocks.bsv 1293 8 {Library Clocks}}}} {module Clocks::vSyncFIFO1 {interface Clocks::SyncFIFOIfc#(a)} {arguments {Clock Reset Clock}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Clocks.bsv 1340 8 {Library Clocks}}}} {module Clocks::vSyncFIFO0 {interface Clocks::SyncFIFO0Ifc} {arguments {Integer Clock Reset Clock}} {position {%/Libraries/Clocks.bsv 1376 8 {Library Clocks}}}} {module Clocks::vSyncFIFO10 {interface Clocks::SyncFIFO0Ifc} {arguments {Clock Reset Clock}} {position {%/Libraries/Clocks.bsv 1417 8 {Library Clocks}}}} {module Clocks::mkSyncFIFO {interface Clocks::SyncFIFOIfc#(a_type)} {arguments {Integer Clock Reset Clock}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/Clocks.bsv 1459 8 {Library Clocks}}}} {module Clocks::mkSyncFIFOFull {interface Clocks::SyncFIFOIfc#(a_type)} {arguments {Integer Bool Bool Clock Reset Clock}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/Clocks.bsv 1497 8 {Library Clocks}}}} {module Clocks::mkSyncFIFOFromCC {interface Clocks::SyncFIFOIfc#(a_type)} {arguments {Integer Clock}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/Clocks.bsv 1517 8 {Library Clocks}}}} {module Clocks::mkSyncFIFOToCC {interface Clocks::SyncFIFOIfc#(a_type)} {arguments {Integer Clock Reset}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/Clocks.bsv 1533 8 {Library Clocks}}}} {module Clocks::mkSyncFIFOFromCCFull {interface Clocks::SyncFIFOIfc#(a_type)} {arguments {Integer Bool Bool Clock}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/Clocks.bsv 1548 8 {Library Clocks}}}} {module Clocks::mkSyncFIFOToCCFull {interface Clocks::SyncFIFOIfc#(a_type)} {arguments {Integer Bool Bool Clock Reset}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/Clocks.bsv 1571 8 {Library Clocks}}}} {module Clocks::mkDualRam {interface {{Clocks::DualPortRamIfc#(addr_t, data_t)}}} {provisos {{Bits#(addr_t, sa)} {Bits#(data_t, da)}}} {position {%/Libraries/Clocks.bsv 1604 8 {Library Clocks}}}} {module Clocks::mkNullCrossing {interface ReadOnly#(a_type)} {arguments {Clock a_type}} {provisos {{Bits#(a_type, sizeOfa)}}} {position {%/Libraries/Clocks.bsv 1629 8 {Library Clocks}}}} {module Clocks::vMkCrossingBypassWire {interface VWire#(a)} {arguments Clock} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Clocks.bsv 1654 11 {Library Clocks}}}} {module Clocks::mkBypassCrossingWire {interface {{Tuple2#(Wire#(data_t), Maybe#(Name__))}}} {arguments Clock} {provisos {{Bits#(data_t, data_t_size)}}} {position {%/Libraries/Clocks.bsv 1668 8 {Library Clocks}}}} {module Clocks::mkNullCrossingWire {interface ReadOnly#(a_type)} {arguments {Clock a_type}} {provisos {{Bits#(a_type, sizeOfa)}}} {position {%/Libraries/Clocks.bsv 1703 8 {Library Clocks}}}} {function Clocks::readCrossingRegSrc {result a} {arguments Clocks::CrossingReg#(a)} {position {%/Libraries/Clocks.bsv 1759 12 {Library Clocks}}}} {function Clocks::readCrossingRegDst {result a} {arguments Clocks::CrossingReg#(a)} {position {%/Libraries/Clocks.bsv 1763 12 {Library Clocks}}}} {function Clocks::writeCrossingReg {result Action} {arguments {Clocks::CrossingReg#(a) a}} {position {%/Libraries/Clocks.bsv 1767 17 {Library Clocks}}}} {function Clocks::crossingRegToReg {result Reg#(a)} {arguments Clocks::CrossingReg#(a)} {position {%/Libraries/Clocks.bsv 1773 18 {Library Clocks}}}} {function Clocks::crossingRegSrcToReadOnly {result ReadOnly#(a)} {arguments Clocks::CrossingReg#(a)} {position {%/Libraries/Clocks.bsv 1780 23 {Library Clocks}}}} {function Clocks::crossingRegDstToReadOnly {result ReadOnly#(a)} {arguments Clocks::CrossingReg#(a)} {position {%/Libraries/Clocks.bsv 1786 23 {Library Clocks}}}} {module Clocks::vMkNullCrossing0 {interface Clocks::CrossingReg#(a)} {arguments Clock} {provisos {{Bits#(a, sz_a)}}} {position {%/Libraries/Clocks.bsv 1794 8 {Library Clocks}}}} {module Clocks::vMkNullCrossingReg {interface Clocks::CrossingReg#(a)} {arguments {Clock a}} {provisos {{Bits#(a, sz_a)}}} {position {%/Libraries/Clocks.bsv 1804 8 {Library Clocks}}}} {module Clocks::vMkNullCrossingRegA {interface Clocks::CrossingReg#(a)} {arguments {Clock a}} {provisos {{Bits#(a, sz_a)}}} {position {%/Libraries/Clocks.bsv 1827 8 {Library Clocks}}}} {module Clocks::vMkNullCrossingRegU {interface Clocks::CrossingReg#(a)} {arguments Clock} {provisos {{Bits#(a, sz_a)}}} {position {%/Libraries/Clocks.bsv 1850 8 {Library Clocks}}}} {module Clocks::mkNullCrossingReg {interface Clocks::CrossingReg#(a)} {arguments {Clock a}} {provisos {{Bits#(a, sz_a)}}} {position {%/Libraries/Clocks.bsv 1870 8 {Library Clocks}}}} {module Clocks::mkNullCrossingRegA {interface Clocks::CrossingReg#(a)} {arguments {Clock a}} {provisos {{Bits#(a, sz_a)}}} {position {%/Libraries/Clocks.bsv 1885 8 {Library Clocks}}}} {module Clocks::mkNullCrossingRegU {interface Clocks::CrossingReg#(a)} {arguments Clock} {provisos {{Bits#(a, sz_a)}}} {position {%/Libraries/Clocks.bsv 1900 8 {Library Clocks}}}} {module Clocks::vSyncRegAligned {interface Reg#(a_type)} {arguments {a_type Clock Reset Clock Reset Clock Reset}} {provisos {{Bits#(a_type, sizea)}}} {position {%/Libraries/Clocks.bsv 1927 8 {Library Clocks}}}} {module Clocks::mkSyncRegToSlow {interface Reg#(a_type)} {arguments {a_type Clocks::ClockDividerIfc Reset}} {provisos {{Bits#(a_type, sizea)}}} {position {%/Libraries/Clocks.bsv 1968 8 {Library Clocks}}}} {module Clocks::mkSyncRegToFast {interface Reg#(a_type)} {arguments {a_type Clocks::ClockDividerIfc Reset}} {provisos {{Bits#(a_type, sizea)}}} {position {%/Libraries/Clocks.bsv 1991 8 {Library Clocks}}}} {module Clocks::vFIFOFS_MC {interface Clocks::FIFOF_MC#(a)} {arguments {Integer Clock Reset Clock Reset Clock Reset}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Clocks.bsv 2030 8 {Library Clocks}}}} {module Clocks::vFIFOF2_MC {interface Clocks::FIFOF_MC#(a)} {arguments {Clock Reset Clock Reset Clock Reset}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Clocks.bsv 2103 8 {Library Clocks}}}} {module Clocks::vFIFOF_MC {interface Clocks::FIFOF_MC#(a)} {arguments {Integer Clock Reset Clock Reset Clock Reset}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/Clocks.bsv 2159 8 {Library Clocks}}}} {module Clocks::mkSyncFIFOToSlow {interface Clocks::SyncFIFOIfc#(a_type)} {arguments {Integer Clocks::ClockDividerIfc Reset}} {provisos {{Bits#(a_type, sizea)}}} {position {%/Libraries/Clocks.bsv 2188 8 {Library Clocks}}}} {module Clocks::mkSyncFIFOToFast {interface Clocks::SyncFIFOIfc#(a_type)} {arguments {Integer Clocks::ClockDividerIfc Reset}} {provisos {{Bits#(a_type, sizea)}}} {position {%/Libraries/Clocks.bsv 2221 8 {Library Clocks}}}} {module Clocks::vMkReset {interface Clocks::MakeResetIfc} {arguments {Integer Bool Clock}} {position {%/Libraries/Clocks.bsv 2276 8 {Library Clocks}}}} {module Clocks::vMkResetA {interface Clocks::MakeResetIfc} {arguments {Integer Bool Clock}} {position {%/Libraries/Clocks.bsv 2297 8 {Library Clocks}}}} {module Clocks::vMkReset0 {interface Clocks::MakeResetIfc} {arguments {Bool Clock}} {position {%/Libraries/Clocks.bsv 2318 8 {Library Clocks}}}} {module Clocks::vSyncResetA {interface Clocks::ResetGenIfc} {arguments {Integer Reset}} {position {%/Libraries/Clocks.bsv 2341 8 {Library Clocks}}}} {module Clocks::vSyncReset {interface Clocks::ResetGenIfc} {arguments {Integer Reset}} {position {%/Libraries/Clocks.bsv 2355 8 {Library Clocks}}}} {module Clocks::vSyncReset0 {interface Clocks::ResetGenIfc} {arguments Reset} {position {%/Libraries/Clocks.bsv 2369 8 {Library Clocks}}}} {module Clocks::vInitialReset {interface Clocks::ResetGenIfc} {arguments Integer} {position {%/Libraries/Clocks.bsv 2382 8 {Library Clocks}}}} {module Clocks::mkReset {interface Clocks::MakeResetIfc} {arguments {Integer Bool Clock}} {position {%/Libraries/Clocks.bsv 2421 8 {Library Clocks}}}} {module Clocks::mkResetSync {interface Clocks::MakeResetIfc} {arguments {Integer Bool Clock}} {position {%/Libraries/Clocks.bsv 2434 8 {Library Clocks}}}} {module Clocks::mkAsyncReset {interface Reset} {arguments {Integer Reset Clock}} {position {%/Libraries/Clocks.bsv 2452 8 {Library Clocks}}}} {module Clocks::mkAsyncResetFromCR {interface Reset} {arguments {Integer Clock}} {position {%/Libraries/Clocks.bsv 2465 8 {Library Clocks}}}} {module Clocks::mkSyncReset {interface Reset} {arguments {Integer Reset Clock}} {position {%/Libraries/Clocks.bsv 2480 8 {Library Clocks}}}} {module Clocks::mkSyncResetFromCR {interface Reset} {arguments {Integer Clock}} {position {%/Libraries/Clocks.bsv 2496 8 {Library Clocks}}}} {module Clocks::mkInitialReset {interface Reset} {arguments Integer} {position {%/Libraries/Clocks.bsv 2524 8 {Library Clocks}}}} {module Clocks::mkResetMux {interface Clocks::MuxRstIfc} {arguments {Reset Reset}} {position {%/Libraries/Clocks.bsv 2545 8 {Library Clocks}}}} {module Clocks::vMkResetEither {interface Clocks::JoinRstIfc} {arguments {Reset Reset}} {position {%/Libraries/Clocks.bsv 2568 8 {Library Clocks}}}} {module Clocks::mkResetEither {interface Reset} {arguments {Reset Reset}} {position {%/Libraries/Clocks.bsv 2580 8 {Library Clocks}}}} {module Clocks::isResetAsserted {interface ReadOnly#(Bool)} {position {%/Libraries/Clocks.bsv 2589 8 {Library Clocks}}}} {module Clocks::isResetAssertedDirect {interface ReadOnly#(Bool)} {position {%/Libraries/Clocks.bsv 2598 8 {Library Clocks}}}} {module Clocks::mkResetInverter {interface Reset} {arguments Reset} {position {%/Libraries/Clocks.bsv 2606 8 {Library Clocks}}}} {module Clocks::vResetInverter {interface Clocks::ResetGenIfc} {arguments Reset} {position {%/Libraries/Clocks.bsv 2612 8 {Library Clocks}}}} {module Clocks::invertCurrentReset {interface Reset} {position {%/Libraries/Clocks.bsv 2620 8 {Library Clocks}}}} {module Clocks::primMakeDisabledClockM {interface Clock} {position {%/Libraries/Clocks.bsv 2660 8 {Library Clocks}}}} {function Clocks::primMakeDisabledClock {result Clock} {position {%/Libraries/Clocks.bsv 2669 7 {Library Clocks}}}}
{module TRAM::tagRAM {interface {{TRAM::TRAM#(tg, adr, dta)}}} {arguments {Integer {m#(RAM::RAM#(adr, dta))}}} {provisos {{Bits#(tg, stg)}}} {position {%/Libraries/TRAM.bs 68 0 {Library TRAM}}}}
{function LBus::initLBusContext {result LBus::LBusContext} {position {%/Libraries/LBus.bsv 25 13 {Library LBus}}}} {function LBus::unLbAddr {result Bit#(sa)} {arguments {{LBus::LbAddr#(sa, sd)}}} {position {%/Libraries/LBus.bsv 64 19 {Library LBus}}}} {function LBus::lbB2W {result {{LBus::LbAddr#(sa, sd)}}} {arguments {{LBus::LbAddr#(sa, sd)}}} {position {%/Libraries/LBus.bsv 71 25 {Library LBus}}}} {module LBus::lbs {interface i} {arguments {{Module#(LBus::LBReg#(sa, sd, i))}}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(sa, sd))}}} {position {%/Libraries/LBus.bsv 97 13 {Library LBus}}}} {module LBus::lbsInt {interface i} {arguments {{mc#(LBus::IWithLBus#(LBus::IntFlag#(sa, sd), i))}}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(sa, sd))}}} {position {%/Libraries/LBus.bsv 109 13 {Library LBus}}}} {module LBus::regRW {interface {{LBus::LBReg#(sa, sd, Reg#(r))}}} {arguments {LBus::ResetType {LBus::LbAddr#(sa, sd)} Integer r}} {provisos {{Add#(k, sr, sd)} {Bits#(r, sr)}}} {position {%/Libraries/LBus.bsv 125 8 {Library LBus}}}} {module LBus::mkLbRegRW {interface Reg#(r_type)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer r_type}} {provisos {{Add#(k, sr, 32)} {Bits#(r_type, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 173 13 {Library LBus}}}} {module LBus::mkLbWdRW {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} r}} {provisos {{Bits#(r, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 182 13 {Library LBus}}}} {module LBus::mkLbRegRWA {interface Reg#(r_type)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer r_type}} {provisos {{Add#(k, sr, 32)} {Bits#(r_type, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 189 13 {Library LBus}}}} {module LBus::mkLbWdRWA {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} r}} {provisos {{Bits#(r, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 198 13 {Library LBus}}}} {module LBus::mkLbRegRWU {interface Reg#(r_type)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer}} {provisos {{Add#(k, sr, 32)} {Bits#(r_type, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 205 13 {Library LBus}}}} {module LBus::mkLbWdRWU {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)}}} {provisos {{Bits#(r, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 214 13 {Library LBus}}}} {module LBus::regW1tC {interface {{LBus::LBReg#(sa, sd, Reg#(Bit#(1)))}}} {arguments {{LBus::LbAddr#(sa, sd)} Integer Bit#(1)}} {provisos {{Add#(k, 1, sd)}}} {position {%/Libraries/LBus.bsv 221 8 {Library LBus}}}} {module LBus::mkLbRegW1tC {interface Reg#(Bit#(1))} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer Bit#(1)}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 251 13 {Library LBus}}}} {module LBus::regRO {interface {{LBus::LBReg#(sa, sd, Reg#(r))}}} {arguments {LBus::ResetType {LBus::LbAddr#(sa, sd)} Integer r}} {provisos {{Add#(k, sr, sd)} {Bits#(r, sr)}}} {position {%/Libraries/LBus.bsv 258 8 {Library LBus}}}} {module LBus::mkLbRegRO {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer r}} {provisos {{Add#(k, sr, 32)} {Bits#(r, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 297 13 {Library LBus}}}} {module LBus::mkLbWdRO {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} r}} {provisos {{Bits#(r, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 304 13 {Library LBus}}}} {module LBus::mkLbRegROA {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer r}} {provisos {{Add#(k, sr, 32)} {Bits#(r, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 311 13 {Library LBus}}}} {module LBus::mkLbWdROA {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} r}} {provisos {{Bits#(r, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 318 13 {Library LBus}}}} {module LBus::mkLbRegROU {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer}} {provisos {{Add#(k, sr, 32)} {Bits#(r, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 325 13 {Library LBus}}}} {module LBus::mkLbWdROU {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)}}} {provisos {{Bits#(r, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 332 13 {Library LBus}}}} {module LBus::mkLbConfigRegRO {interface Reg#(r)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer r}} {provisos {{Add#(k, sr, 32)} {Bits#(r, sr)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 339 13 {Library LBus}}}} {module LBus::accum {interface {{LBus::LBReg#(sa, sd, LBus::Accum#(k))}}} {arguments {{LBus::LbAddr#(sa, sd)} Integer Bit#(k)}} {provisos {{Add#(k, i, sd)}}} {position {%/Libraries/LBus.bsv 354 8 {Library LBus}}}} {module LBus::mkLbAccum {interface LBus::Accum#(k)} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer Bit#(k)}} {provisos {{Add#(k, i, 32)} {ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 390 13 {Library LBus}}}} {module LBus::w1tc {interface {{LBus::LBReg#(sa, sd, Reg#(Bit#(1)))}}} {arguments {{LBus::LbAddr#(sa, sd)} Integer}} {provisos {{Add#(k, 1, sd)}}} {position {%/Libraries/LBus.bsv 402 8 {Library LBus}}}} {module LBus::mkLbW1tC {interface Reg#(Bit#(1))} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 446 13 {Library LBus}}}} {module LBus::interrupt {interface {{LBus::IWithLBus#(LBus::IntFlag#(LBus::SA, LBus::SD), LBus::Interrupt)}}} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer {LBus::LbAddr#(LBus::SA, LBus::SD)} Integer}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 453 13 {Library LBus}}}} {module LBus::mkLbInterrupt {interface LBus::Interrupt} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer {LBus::LbAddr#(LBus::SA, LBus::SD)} Integer}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 476 4 {Library LBus}}}} {module LBus::mkLbClient {interface {{ClientServer::Client#(a, b)}}} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} Integer {LBus::LbAddr#(LBus::SA, LBus::SD)} Integer {mc#(LBus::RegHandler#(a, b))}}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 490 13 {Library LBus}}}} {module LBus::mkLbOffset {interface i} {arguments {{LBus::LbAddr#(LBus::SA, LBus::SD)} mc#(i)}} {provisos {{ModuleContext::Context#(mc, LBus::LBusContextP#(24, 32))}}} {position {%/Libraries/LBus.bsv 530 13 {Library LBus}}}} {function LBus::mkLbTop {result {{Module#(LBus::IWithLBus#(LBus::ILBus#(LBus::SA, LBus::SD), i))}}} {arguments {{Module#(LBus::Fan#(LBus::ILBus#(LBus::SA, LBus::SD), Vector::Vector#(1, LBus::ILbNode#(LBus::SA, LBus::SD))))} {ModuleContextCore::ModuleContext#(LBus::LBusContext, i)}}} {position {%/Libraries/LBus.bsv 897 17 {Library LBus}}}} {function LBus::mkLbFanout {result {{Module#(LBus::Fan#(LBus::ILBus#(LBus::SA, LBus::SD), Vector::Vector#(n, LBus::ILbNode#(LBus::SA, LBus::SD))))}}} {position {%/Libraries/LBus.bsv 910 17 {Library LBus}}}} {module LBus::mkLbHandler {interface {{LBus::ILBusHandler#(sa, sd)}}} {position {%/Libraries/LBus.bsv 1072 8 {Library LBus}}}} {function LBus::foldt {result a} {arguments {{function a f(a x1, a x2)} a List#(a)}} {position {%/Libraries/LBus.bsv 1162 12 {Library LBus}}}} {function LBus::or_f {result Bit#(n)} {arguments {Bit#(n) Bit#(n)}} {position {%/Libraries/LBus.bsv 1172 18 {Library LBus}}}} {function LBus::and_f {result Bool} {arguments {Bool Bool}} {position {%/Libraries/LBus.bsv 1173 15 {Library LBus}}}}
{function Wallace::wallaceAddBags {result Bit#(n)} {arguments {{Vector::Vector#(n, List#(Bit#(1)))}}} {position {%/Libraries/Wallace.bs 32 0 {Library Wallace}}}} {function Wallace::wallaceAdd {result Bit#(n)} {arguments List#(Bit#(m))} {provisos {{Add#(m, k, n)}}} {position {%/Libraries/Wallace.bs 41 0 {Library Wallace}}}} {function Wallace::wallaceStep {result {{Vector::Vector#(n, Wallace::BitBag)}}} {arguments {{Vector::Vector#(n, Wallace::BitBag)}}} {position {%/Libraries/Wallace.bs 44 0 {Library Wallace}}}} {function Wallace::combine {result {{Vector::Vector#(n, Wallace::BitBag)}}} {arguments {{Vector::Vector#(n, Tuple2#(Wallace::BitBag, Wallace::BitBag))}}} {position {%/Libraries/Wallace.bs 47 0 {Library Wallace}}}} {function Wallace::step {result {{Tuple2#(Wallace::BitBag, Wallace::BitBag)}}} {arguments {Wallace::BitBag Wallace::BitBag Wallace::BitBag}} {position {%/Libraries/Wallace.bs 50 0 {Library Wallace}}}} {function Wallace::head0 {result Wallace::Bit1} {arguments Wallace::BitBag} {position {%/Libraries/Wallace.bs 56 0 {Library Wallace}}}} {function Wallace::padWith {result {{Vector::Vector#(n, a)}}} {arguments {a {Vector::Vector#(m, a)}}} {provisos {{Add#(m, k, n)}}} {position {%/Libraries/Wallace.bs 60 0 {Library Wallace}}}} {function Wallace::padToKBits {result {{Vector::Vector#(k, Bit#(1))}}} {arguments List#(Bit#(1))} {position {%/Libraries/Wallace.bs 63 0 {Library Wallace}}}} {function Wallace::fullAdd {result {{Tuple2#(Wallace::Bit1, Wallace::Bit1)}}} {arguments {Wallace::Bit1 Wallace::Bit1 Wallace::Bit1}} {position {%/Libraries/Wallace.bs 84 0 {Library Wallace}}}} {function Wallace::halfAdd {result {{Tuple2#(Wallace::Bit1, Wallace::Bit1)}}} {arguments {Wallace::Bit1 Wallace::Bit1}} {position {%/Libraries/Wallace.bs 112 0 {Library Wallace}}}}

{function RegTwo::vMkRegTwo {result Module#(RegTwo::VRegTwo#(n))} {arguments Bit#(n)} {position {%/Libraries/RegTwo.bs 18 0 {Library RegTwo}}}} {module RegTwo::mkRegTwo {interface RegTwo::RegTwo#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/RegTwo.bs 30 0 {Library RegTwo}}}} {function RegTwo::vMkRegTwoA {result Module#(RegTwo::VRegTwo#(n))} {arguments Bit#(n)} {position {%/Libraries/RegTwo.bs 55 0 {Library RegTwo}}}} {module RegTwo::mkRegTwoA {interface RegTwo::RegTwo#(a)} {arguments a} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/RegTwo.bs 67 0 {Library RegTwo}}}} {function RegTwo::vMkRegTwoU {result Module#(RegTwo::VRegTwo#(n))} {position {%/Libraries/RegTwo.bs 92 0 {Library RegTwo}}}} {module RegTwo::mkRegTwoU {interface RegTwo::RegTwo#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/RegTwo.bs 104 0 {Library RegTwo}}}}
{module ModuleCollect::addToCollection {interface Empty} {arguments a} {provisos {{ModuleContext::Context#(mc, UnitAppendList::UAList#(a))}}} {position {%/Libraries/ModuleCollect.bsv 16 13 {Library ModuleCollect}}}} {module ModuleCollect::mapCollection {interface i} {arguments {{function a f(a x1)} mc#(i)}} {provisos {{ModuleContext::Context#(mc, UnitAppendList::UAList#(a))}}} {position {%/Libraries/ModuleCollect.bsv 22 13 {Library ModuleCollect}}}} {function ModuleCollect::getCollection {result {{Module#(Tuple2#(i, List#(a)))}}} {arguments {{ModuleCollect::ModuleCollect#(a, i)}}} {position {%/Libraries/ModuleCollect.bsv 31 17 {Library ModuleCollect}}}} {function ModuleCollect::exposeCollection {result {{Module#(ModuleCollect::IWithCollection#(a, i))}}} {arguments {{ModuleCollect::ModuleCollect#(a, i)}}} {position {%/Libraries/ModuleCollect.bsv 41 17 {Library ModuleCollect}}}}
{function OVLAssertions::default_msg {result String} {position {%/Libraries/OVLAssertions.bsv 113 8}}} {function OVLAssertions::default_num {result Int#(32)} {position {%/Libraries/OVLAssertions.bsv 114 10}}} {function OVLAssertions::mkOVLDefaults {result OVLAssertions::OVLDefaults#(a)} {provisos Bounded#(a)} {position {%/Libraries/OVLAssertions.bsv 116 26}}} {function OVLAssertions::mkOVLDefaultsTemplate {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 145 34}}} {function OVLAssertions::updateOVLDefaults {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {provisos {Eq#(a) Bounded#(a)}} {position {%/Libraries/OVLAssertions.bsv 177 26}}} {function OVLAssertions::updateOVLSeverityLevel {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 210 26}}} {function OVLAssertions::updateOVLPropertyType {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 228 26}}} {function OVLAssertions::updateOVLMsg {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 245 26}}} {function OVLAssertions::updateOVLCoverageLevel {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 262 26}}} {function OVLAssertions::updateOVLActionOnNewStart {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 279 26}}} {function OVLAssertions::updateOVLEdgeType {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 296 26}}} {function OVLAssertions::updateOVLNecessaryCondition {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 314 26}}} {function OVLAssertions::updateOVLInactive {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 331 26}}} {function OVLAssertions::updateOVLNumCks {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 348 26}}} {function OVLAssertions::updateOVLValue {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {provisos {Eq#(a) Bounded#(a)}} {position {%/Libraries/OVLAssertions.bsv 365 26}}} {function OVLAssertions::updateOVLMin {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {provisos {Eq#(a) Bounded#(a)}} {position {%/Libraries/OVLAssertions.bsv 384 26}}} {function OVLAssertions::updateOVLMax {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {provisos {Eq#(a) Bounded#(a)}} {position {%/Libraries/OVLAssertions.bsv 403 26}}} {function OVLAssertions::updateOVLMinCks {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 423 26}}} {function OVLAssertions::updateOVLMaxCks {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 440 26}}} {function OVLAssertions::updateOVLMinAckCycle {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 457 26}}} {function OVLAssertions::updateOVLMaxAckCycle {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 474 26}}} {function OVLAssertions::updateOVLMaxAckLength {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 491 26}}} {function OVLAssertions::updateOVLReqDrop {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 508 26}}} {function OVLAssertions::updateOVLDeassertCount {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 525 26}}} {function OVLAssertions::updateOVLDepth {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 542 26}}} {function OVLAssertions::updateOVLCheckOverlapping {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 560 26}}} {function OVLAssertions::updateOVLCheckMissingStart {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 577 26}}} {function OVLAssertions::updateOVLSimultaneousPushPop {result OVLAssertions::OVLDefaults#(a)} {arguments {OVLAssertions::OVLDefaults#(a) OVLAssertions::OVLDefaultsTemplate#(a) String}} {position {%/Libraries/OVLAssertions.bsv 594 26}}} {function OVLAssertions::create_assert_always_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 713 34}}} {module OVLAssertions::bsv_assert_always {interface OVLAssertions::AssertTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 726 8}}} {module OVLAssertions::v_assert_always {interface OVLAssertions::VAssertTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 744 8}}} {function OVLAssertions::create_assert_always_on_edge_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 768 34}}} {module OVLAssertions::bsv_assert_always_on_edge {interface OVLAssertions::AssertSampleTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 783 8}}} {module OVLAssertions::v_assert_always_on_edge {interface OVLAssertions::VAssertSampleTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 804 8}}} {function OVLAssertions::create_assert_change_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 830 34}}} {module OVLAssertions::bsv_assert_change {interface OVLAssertions::AssertStartTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 846 8}}} {module OVLAssertions::v_assert_change {interface OVLAssertions::VAssertStartTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 868 8}}} {function OVLAssertions::create_assert_decrement_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Literal#(a)} {position {%/Libraries/OVLAssertions.bsv 897 34}}} {module OVLAssertions::bsv_assert_decrement {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) Literal#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 913 8}}} {module OVLAssertions::v_assert_decrement {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 932 8}}} {function OVLAssertions::create_assert_delta_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Literal#(a)} {position {%/Libraries/OVLAssertions.bsv 959 34}}} {module OVLAssertions::bsv_assert_delta {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) Literal#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 976 8}}} {module OVLAssertions::v_assert_delta {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 995 8}}} {function OVLAssertions::create_assert_even_parity_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1025 34}}} {module OVLAssertions::bsv_assert_even_parity {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1038 8}}} {module OVLAssertions::v_assert_even_parity {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 1057 8}}} {function OVLAssertions::create_assert_frame_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1085 34}}} {module OVLAssertions::bsv_assert_frame {interface OVLAssertions::AssertStartTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1102 8}}} {module OVLAssertions::v_assert_frame {interface OVLAssertions::VAssertStartTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1123 8}}} {function OVLAssertions::create_assert_handshake_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1153 34}}} {module OVLAssertions::bsv_assert_handshake {interface OVLAssertions::AssertStartTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1172 8}}} {module OVLAssertions::v_assert_handshake {interface OVLAssertions::VAssertStartTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1193 8}}} {function OVLAssertions::create_assert_implication_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1226 34}}} {module OVLAssertions::bsv_assert_implication {interface OVLAssertions::AssertStartTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1239 8}}} {module OVLAssertions::v_assert_implication {interface OVLAssertions::VAssertStartTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1260 8}}} {function OVLAssertions::create_assert_increment_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Literal#(a)} {position {%/Libraries/OVLAssertions.bsv 1285 34}}} {module OVLAssertions::bsv_assert_increment {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) Literal#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1301 8}}} {module OVLAssertions::v_assert_increment {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1321 8}}} {function OVLAssertions::create_assert_never_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1348 34}}} {module OVLAssertions::bsv_assert_never {interface OVLAssertions::AssertTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1361 8}}} {module OVLAssertions::v_assert_never {interface OVLAssertions::VAssertTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1379 8}}} {function OVLAssertions::create_assert_odd_parity_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1404 34}}} {module OVLAssertions::bsv_assert_odd_parity {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1417 8}}} {module OVLAssertions::v_assert_odd_parity {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 1436 8}}} {function OVLAssertions::create_assert_next_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1466 34}}} {module OVLAssertions::bsv_assert_next {interface OVLAssertions::AssertStartTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1484 8}}} {module OVLAssertions::v_assert_next {interface OVLAssertions::VAssertStartTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1505 8}}} {function OVLAssertions::create_assert_no_overflow_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Bounded#(a)} {position {%/Libraries/OVLAssertions.bsv 1535 34}}} {module OVLAssertions::bsv_assert_no_overflow {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1553 8}}} {module OVLAssertions::v_assert_no_overflow {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1572 8}}} {function OVLAssertions::create_assert_no_underflow_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Bounded#(a)} {position {%/Libraries/OVLAssertions.bsv 1604 34}}} {module OVLAssertions::bsv_assert_no_underflow {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1621 8}}} {module OVLAssertions::v_assert_no_underflow {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1641 8}}} {function OVLAssertions::create_assert_one_cold_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1671 34}}} {module OVLAssertions::bsv_assert_one_cold {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1686 8}}} {module OVLAssertions::v_assert_one_cold {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 1705 8}}} {function OVLAssertions::create_assert_one_hot_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1733 34}}} {module OVLAssertions::bsv_assert_one_hot {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1746 8}}} {module OVLAssertions::v_assert_one_hot {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 1765 8}}} {function OVLAssertions::create_assert_proposition_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1791 34}}} {module OVLAssertions::bsv_assert_proposition {interface OVLAssertions::AssertTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1804 8}}} {module OVLAssertions::v_assert_proposition {interface OVLAssertions::VAssertTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1819 8}}} {function OVLAssertions::create_assert_range_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Bounded#(a)} {position {%/Libraries/OVLAssertions.bsv 1845 34}}} {module OVLAssertions::bsv_assert_range {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1862 8}}} {module OVLAssertions::v_assert_range {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1881 8}}} {function OVLAssertions::create_assert_time_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1912 34}}} {module OVLAssertions::bsv_assert_time {interface OVLAssertions::AssertStartTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1928 8}}} {module OVLAssertions::v_assert_time {interface OVLAssertions::VAssertStartTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 1950 8}}} {function OVLAssertions::create_assert_unchange_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 1978 34}}} {module OVLAssertions::bsv_assert_unchange {interface OVLAssertions::AssertStartTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 1994 8}}} {module OVLAssertions::v_assert_unchange {interface OVLAssertions::VAssertStartTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2016 8}}} {function OVLAssertions::create_assert_width_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2047 34}}} {module OVLAssertions::bsv_assert_width {interface OVLAssertions::AssertTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 2063 8}}} {module OVLAssertions::v_assert_width {interface OVLAssertions::VAssertTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 2081 8}}} {function OVLAssertions::create_assert_win_change_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2109 34}}} {module OVLAssertions::bsv_assert_win_change {interface OVLAssertions::AssertStartStopTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2122 8}}} {module OVLAssertions::v_assert_win_change {interface OVLAssertions::VAssertStartStopTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2147 8}}} {function OVLAssertions::create_assert_win_unchange_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2176 34}}} {module OVLAssertions::bsv_assert_win_unchange {interface OVLAssertions::AssertStartStopTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2189 8}}} {module OVLAssertions::v_assert_win_unchange {interface OVLAssertions::VAssertStartStopTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2214 8}}} {function OVLAssertions::create_assert_window_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2243 34}}} {module OVLAssertions::bsv_assert_window {interface OVLAssertions::AssertStartStopTest_IFC#(Bool)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 2256 8}}} {module OVLAssertions::v_assert_window {interface OVLAssertions::VAssertStartStopTest_IFC#(1)} {arguments OVLAssertions::OVLDefaults#(Bool)} {position {%/Libraries/OVLAssertions.bsv 2280 8}}} {function OVLAssertions::create_assert_zero_one_hot_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2307 34}}} {module OVLAssertions::bsv_assert_zero_one_hot {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2320 8}}} {module OVLAssertions::v_assert_zero_one_hot {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2339 8}}} {function OVLAssertions::create_assert_cycle_sequence_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2367 34}}} {module OVLAssertions::bsv_assert_cycle_sequence {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Add#(ignore, 2, sa)} {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2381 8}}} {module OVLAssertions::v_assert_cycle_sequence {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2400 8}}} {function OVLAssertions::create_assert_never_unknown_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2428 34}}} {module OVLAssertions::bsv_assert_never_unknown {interface OVLAssertions::AssertStartTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2441 8}}} {module OVLAssertions::v_assert_never_unknown {interface OVLAssertions::VAssertStartTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2463 8}}} {function OVLAssertions::create_assert_no_transition_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2503 34}}} {module OVLAssertions::bsv_assert_no_transition {interface OVLAssertions::AssertTransitionTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2516 8}}} {module OVLAssertions::v_assert_no_transition {interface OVLAssertions::VAssertTransitionTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2541 8}}} {function OVLAssertions::create_assert_transition_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2571 34}}} {module OVLAssertions::bsv_assert_transition {interface OVLAssertions::AssertTransitionTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2584 8}}} {module OVLAssertions::v_assert_transition {interface OVLAssertions::VAssertTransitionTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2609 8}}} {function OVLAssertions::create_assert_quiescent_state_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {position {%/Libraries/OVLAssertions.bsv 2653 34}}} {module OVLAssertions::bsv_assert_quiescent_state {interface OVLAssertions::AssertQuiescentTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2666 8}}} {module OVLAssertions::v_assert_quiescent_state {interface OVLAssertions::VAssertQuiescentTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {position {%/Libraries/OVLAssertions.bsv 2691 8}}} {function OVLAssertions::create_assert_never_unknown_async_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Literal#(a)} {position {%/Libraries/OVLAssertions.bsv 2720 34}}} {module OVLAssertions::bsv_assert_never_unknown_async {interface OVLAssertions::AssertTest_IFC#(a)} {arguments OVLAssertions::OVLDefaults#(a)} {provisos {Eq#(a) Bounded#(a) Literal#(a) {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2734 8}}} {module OVLAssertions::v_assert_never_unknown_async {interface OVLAssertions::VAssertTest_IFC#(_sn0)} {arguments {OVLAssertions::OVLDefaults#(a) Integer}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2753 8}}} {function OVLAssertions::create_assert_fifo_index_defaults {result OVLAssertions::OVLDefaultsTemplate#(a)} {provisos Bounded#(a)} {position {%/Libraries/OVLAssertions.bsv 2792 34}}} {module OVLAssertions::bsv_assert_fifo_index {interface {{OVLAssertions::AssertFifoTest_IFC#(a, b)}}} {arguments OVLAssertions::OVLDefaults#(Bit#(0))} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/OVLAssertions.bsv 2808 8}}} {module OVLAssertions::v_assert_fifo_index {interface {{OVLAssertions::VAssertFifoTest_IFC#(_sn1, _sn0)}}} {arguments {OVLAssertions::OVLDefaults#(Bit#(0)) Integer Integer}} {position {%/Libraries/OVLAssertions.bsv 2830 8}}}
{function BUtils::grab_left {result a} {arguments b} {provisos {{Add#(x, sa, sb)} {Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/BUtils.bsv 13 12 {Library BUtils}}}} {function BUtils::reverse_bytes {result a} {arguments a} {provisos {{Add#(8, sa, sb)} {Add#(8, ignore, sa)} {Bits#(a, sa)}}} {position {%/Libraries/BUtils.bsv 21 12 {Library BUtils}}}} {function BUtils::getSizeOf {result Integer} {arguments a} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BUtils.bsv 41 18 {Library BUtils}}}} {function BUtils::zExtend {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(n, m, k)}}} {position {%/Libraries/BUtils.bsv 50 18 {Library BUtils}}}} {function BUtils::sExtend {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(n, m, k)}}} {position {%/Libraries/BUtils.bsv 59 18 {Library BUtils}}}} {function BUtils::cExtend {result a} {arguments b} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/BUtils.bsv 68 12 {Library BUtils}}}} {function BUtils::zExtendLSB {result Bit#(m)} {arguments Bit#(n)} {provisos {{Add#(n, m, k)}}} {position {%/Libraries/BUtils.bsv 76 18 {Library BUtils}}}} {function BUtils::cExtendLSB {result a} {arguments b} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/BUtils.bsv 85 12 {Library BUtils}}}} {function BUtils::getIndex {result Bit#(size)} {arguments {{Vector::Vector#(count, Bool)}}} {provisos {{Log#(count, size)}}} {position {%/Libraries/BUtils.bsv 95 21 {Library BUtils}}}} {function BUtils::dummyAction {result Action} {position {%/Libraries/BUtils.bsv 113 17 {Library BUtils}}}} {function BUtils::duplicate {result Bit#(m)} {arguments Bit#(n)} {provisos {{Mul#(n, x, m)}}} {position {%/Libraries/BUtils.bsv 131 18 {Library BUtils}}}}
{function + {result Bit#(m)} {arguments {Bit#(k) Bit#(l)}} {provisos {{Add#(ld, l, m)} {Add#(kd, k, m)}}} {position {%/Libraries/FlexBitArith.bs 3 1 {Library FlexBitArith}}}} {function - {result Bit#(m)} {arguments {Bit#(k) Bit#(l)}} {provisos {{Add#(ld, l, m)} {Add#(kd, k, m)}}} {position {%/Libraries/FlexBitArith.bs 6 1 {Library FlexBitArith}}}}
{module SplitTRAM::splitBTRAM {interface {{Tuple2#(TRAM::TRAM#(tg, adr, dta), TRAM::TRAM#(tg', adr, dta))}}} {arguments {{TRAM::TRAM#(Either#(tg, tg'), adr, dta)}}} {provisos {{Bits#(dta, dtas)} {Bits#(tg', tgs')} {Bits#(tg, tgs)}}} {position {%/Libraries/SplitTRAM.bs 11 0 {Library SplitTRAM}}}} {module SplitTRAM::splitTRAM {interface {{Tuple2#(TRAM::TRAM#(tg, adr, dta), TRAM::TRAM#(tg', adr, dta))}}} {arguments {{TRAM::TRAM#(Either#(tg, tg'), adr, dta)}}} {position {%/Libraries/SplitTRAM.bs 53 0 {Library SplitTRAM}}}}
{function Gray::grayEncode {result Gray::Gray#(n)} {arguments Bit#(n)} {provisos {{Add#(1, msb, n)}}} {position {%/Libraries/Gray.bsv 44 19 {Library Gray}}}} {function Gray::grayDecode {result Bit#(n)} {arguments Gray::Gray#(n)} {provisos {{Add#(1, msb, n)}}} {position {%/Libraries/Gray.bsv 56 18 {Library Gray}}}} {function Gray::grayIncrDecr {result Gray::Gray#(n)} {arguments {Bool Gray::Gray#(n)}} {provisos {{Add#(1, msb, n)}}} {position {%/Libraries/Gray.bsv 68 19 {Library Gray}}}} {function Gray::grayIncr {result Gray::Gray#(n)} {arguments Gray::Gray#(n)} {provisos {{Add#(1, msb, n)}}} {position {%/Libraries/Gray.bsv 93 19 {Library Gray}}}} {function Gray::grayDecr {result Gray::Gray#(n)} {arguments Gray::Gray#(n)} {provisos {{Add#(1, msb, n)}}} {position {%/Libraries/Gray.bsv 97 19 {Library Gray}}}}
{function UnitAppendList::flatten0 {result List#(a)} {arguments {UnitAppendList::UAList#(a) List#(a)}} {position {%/Libraries/UnitAppendList.bsv 14 19 {Library UnitAppendList}}}} {function UnitAppendList::flatten {result List#(a)} {arguments UnitAppendList::UAList#(a)} {position {%/Libraries/UnitAppendList.bsv 22 19 {Library UnitAppendList}}}} {function UnitAppendList::uaMap {result UnitAppendList::UAList#(b)} {arguments {{function b f(a x1)} UnitAppendList::UAList#(a)}} {position {%/Libraries/UnitAppendList.bsv 25 21 {Library UnitAppendList}}}} {module UnitAppendList::uaMapM {interface UnitAppendList::UAList#(b)} {arguments {{function _m__#(b) f(a x1)} UnitAppendList::UAList#(a)}} {position {%/Libraries/UnitAppendList.bsv 40 8 {Library UnitAppendList}}}}

{module BypassReg::mkBypassReg {interface BypassReg::WReg#(a)} {arguments a} {provisos {{Bits#(a, asz)}}} {position {%/Libraries/BypassReg.bsv 18 8 {Library BypassReg}}}}
{module UniqueWrappers::mkUniqueWrapper {interface {{UniqueWrappers::Wrapper#(a, b)}}} {arguments {{function b f(a x1)}}} {provisos {{Bits#(b, sb)} {Bits#(a, sa)}}} {position {%/Libraries/UniqueWrappers.bsv 48 8 {Library UniqueWrappers}}}} {module UniqueWrappers::mkUniqueWrapper2 {interface {{UniqueWrappers::Wrapper2#(a1, a2, b)}}} {arguments {{function b f(a1 x1, a2 x2)}}} {provisos {{Bits#(b, sb)} {Bits#(a2, sa2)} {Bits#(a1, sa1)}}} {position {%/Libraries/UniqueWrappers.bsv 77 8 {Library UniqueWrappers}}}} {module UniqueWrappers::mkUniqueWrapper3 {interface {{UniqueWrappers::Wrapper3#(a1, a2, a3, b)}}} {arguments {{function b f(a1 x1, a2 x2, a3 x3)}}} {provisos {{Bits#(b, sb)} {Bits#(a3, sa3)} {Bits#(a2, sa2)} {Bits#(a1, sa1)}}} {position {%/Libraries/UniqueWrappers.bsv 96 8 {Library UniqueWrappers}}}}
{module FIFOLevel::mkFIFOLevel {interface {{FIFOLevel::FIFOLevelIfc#(a_type, fifoDepth)}}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 63 8 {Library FIFOLevel}}}} {module FIFOLevel::mkGFIFOLevel {interface {{FIFOLevel::FIFOLevelIfc#(a_type, fifoDepth)}}} {arguments {Bool Bool Bool}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 126 8 {Library FIFOLevel}}}} {module FIFOLevel::mkSyncFIFOLevel {interface {{FIFOLevel::SyncFIFOLevelIfc#(a_type, fifoDepth)}}} {arguments {Clock Reset Clock}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 254 8 {Library FIFOLevel}}}} {module FIFOLevel::mkFIFOCount {interface {{FIFOLevel::FIFOCountIfc#(a_type, fifoDepth)}}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 570 8 {Library FIFOLevel}}}} {module FIFOLevel::mkGFIFOCount {interface {{FIFOLevel::FIFOCountIfc#(a_type, fifoDepth)}}} {arguments {Bool Bool Bool}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 623 8 {Library FIFOLevel}}}} {module FIFOLevel::mkSyncFIFOCount {interface {{FIFOLevel::SyncFIFOCountIfc#(a_type, fifoDepth)}}} {arguments {Clock Reset Clock}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 718 8 {Library FIFOLevel}}}} {module FIFOLevel::mkGSyncFIFOCount {interface {{FIFOLevel::SyncFIFOCountIfc#(a_type, fifoDepth)}}} {arguments {Bool Bool Clock Reset Clock}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 779 8 {Library FIFOLevel}}}}
{module BRAM_Compat::mkBypassFIFOF_ {interface FIFOF::FIFOF#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BRAM_Compat.bsv 105 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBypassFIFOF2_ {interface FIFOF::FIFOF#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BRAM_Compat.bsv 157 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBypassFIFOF3_ {interface FIFOF::FIFOF#(a)} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/BRAM_Compat.bsv 216 8 {Library BRAM_Compat}}}} {module BRAM_Compat::vBRAM2 {interface {{BRAM_Compat::BRAM_DUAL_PORT#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset}} {provisos {{Bits#(addr, addr_sz)} {Bits#(data, data_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 288 8 {Library BRAM_Compat}}}} {module BRAM_Compat::vBRAM2Load {interface {{BRAM_Compat::BRAM_DUAL_PORT#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String Integer}} {provisos {{Bits#(addr, addr_sz)} {Bits#(data, data_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 324 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAM2 {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 369 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAM {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 383 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAM2LoadEither {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String Integer}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 498 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAMLoadEither {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String Integer}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 512 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM2 {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments Bool} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 634 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM2LoadHex {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 647 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM2LoadBin {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 660 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAM2LoadHex {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 674 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAM2LoadBin {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 685 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM2Load {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 695 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAM2Load {interface {{BRAM_Compat::BRAM2Port#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 706 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments Bool} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 716 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAMLoadHex {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 729 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAMLoadBin {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 742 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAMLoadHex {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 756 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAMLoadBin {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 767 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAMLoad {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 777 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkSyncBRAMLoad {interface {{BRAM_Compat::BRAM#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 788 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM0 {interface {{BRAM_Compat::BRAM_DUAL_PORT#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 798 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM20 {interface {{BRAM_Compat::BRAM_DUAL_PORT#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 808 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM0Load {interface {{BRAM_Compat::BRAM_DUAL_PORT#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String Integer}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 834 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM20Load {interface {{BRAM_Compat::BRAM_DUAL_PORT#(addr, data)}}} {arguments {Bool Clock Reset Clock Reset String Integer}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 844 8 {Library BRAM_Compat}}}} {module BRAM_Compat::vBRAM1 {interface {{BRAM_Compat::BRAM_PORT#(addr, data)}}} {arguments Bool} {provisos {{Bits#(addr, addr_sz)} {Bits#(data, data_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 881 8 {Library BRAM_Compat}}}} {module BRAM_Compat::vBRAM1Load {interface {{BRAM_Compat::BRAM_PORT#(addr, data)}}} {arguments {Bool String Integer}} {provisos {{Bits#(addr, addr_sz)} {Bits#(data, data_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 903 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1 {interface {{BRAM_Compat::BRAM1Port#(addr, data)}}} {arguments Bool} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 933 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1LoadEither {interface {{BRAM_Compat::BRAM1Port#(addr, data)}}} {arguments {Bool String Integer}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1001 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1LoadHex {interface {{BRAM_Compat::BRAM1Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1077 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1LoadBin {interface {{BRAM_Compat::BRAM1Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1087 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1Load {interface {{BRAM_Compat::BRAM1Port#(addr, data)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1097 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM10 {interface {{BRAM_Compat::BRAM_PORT#(addr, data)}}} {arguments Bool} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1107 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM10Load {interface {{BRAM_Compat::BRAM_PORT#(addr, data)}}} {arguments {Bool String Integer}} {provisos {{Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1123 8 {Library BRAM_Compat}}}} {module BRAM_Compat::vBRAM1BE {interface {{BRAM_Compat::BRAM_PORT_BE#(addr, data, _sn2)}}} {arguments Bool} {provisos {{Mul#(chunk_sz, _sn2, data_sz)} {Div#(data_sz, _sn2, chunk_sz)} {Bits#(addr, addr_sz)} {Bits#(data, data_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1147 8 {Library BRAM_Compat}}}} {module BRAM_Compat::vBRAM1BELoad {interface {{BRAM_Compat::BRAM_PORT_BE#(addr, data, _sn2)}}} {arguments {Bool String Integer}} {provisos {{Mul#(chunk_sz, _sn2, data_sz)} {Div#(data_sz, _sn2, chunk_sz)} {Bits#(addr, addr_sz)} {Bits#(data, data_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1178 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1BE {interface {{BRAM_Compat::BRAM1PortBE#(addr, data, n)}}} {arguments Bool} {provisos {Bounded#(addr) {Mul#(n, be_sz, data_sz)} {Div#(data_sz, n, be_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1216 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1BELoadEither {interface {{BRAM_Compat::BRAM1PortBE#(addr, data, n)}}} {arguments {Bool String Integer}} {provisos {Bounded#(addr) {Mul#(n, be_sz, data_sz)} {Div#(data_sz, n, be_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1286 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1BELoadHex {interface {{BRAM_Compat::BRAM1PortBE#(addr, data, n)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Mul#(n, be_sz, data_sz)} {Div#(data_sz, n, be_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1363 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1BELoadBin {interface {{BRAM_Compat::BRAM1PortBE#(addr, data, n)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Mul#(n, be_sz, data_sz)} {Div#(data_sz, n, be_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1375 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM1BELoad {interface {{BRAM_Compat::BRAM1PortBE#(addr, data, n)}}} {arguments {Bool String}} {provisos {Bounded#(addr) {Mul#(n, be_sz, data_sz)} {Div#(data_sz, n, be_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1387 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM10BE {interface {{BRAM_Compat::BRAM_PORT_BE#(addr, data, n)}}} {arguments Bool} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1399 8 {Library BRAM_Compat}}}} {module BRAM_Compat::mkBRAM10BELoad {interface {{BRAM_Compat::BRAM_PORT_BE#(addr, data, n)}}} {arguments {Bool String Integer}} {provisos {{Mul#(chunk_sz, n, data_sz)} {Div#(data_sz, n, chunk_sz)} {Bits#(data, data_sz)} {Bits#(addr, addr_sz)}}} {position {%/Libraries/BRAM_Compat.bsv 1417 8 {Library BRAM_Compat}}}}
{module FIFOLevel::mkFIFOLevel {interface {{FIFOLevel::FIFOLevelIfc#(a_type, fifoDepth)}}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 63 8 {Library FIFOLevel}}}} {module FIFOLevel::mkGFIFOLevel {interface {{FIFOLevel::FIFOLevelIfc#(a_type, fifoDepth)}}} {arguments {Bool Bool Bool}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 126 8 {Library FIFOLevel}}}} {module FIFOLevel::mkSyncFIFOLevel {interface {{FIFOLevel::SyncFIFOLevelIfc#(a_type, fifoDepth)}}} {arguments {Clock Reset Clock}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 254 8 {Library FIFOLevel}}}} {module FIFOLevel::vbFIFOLevel {interface {{FIFOLevel::FIFOLevel_INT#(a, cntSize)}}} {arguments Integer} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/FIFOLevel.bsv 343 8 {Library FIFOLevel}}}} {function FIFOLevel::rangeTest {result Bool} {arguments {UInt#(cntSz) Integer {function Bool f(UInt#(cntSz) x1, UInt#(cntSz) x2)} Integer Integer String}} {position {%/Libraries/FIFOLevel.bsv 408 15 {Library FIFOLevel}}}} {module FIFOLevel::mkFIFOCount {interface {{FIFOLevel::FIFOCountIfc#(a_type, fifoDepth)}}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 570 8 {Library FIFOLevel}}}} {module FIFOLevel::mkGFIFOCount {interface {{FIFOLevel::FIFOCountIfc#(a_type, fifoDepth)}}} {arguments {Bool Bool Bool}} {provisos {{Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 623 8 {Library FIFOLevel}}}} {module FIFOLevel::mkSyncFIFOCount {interface {{FIFOLevel::SyncFIFOCountIfc#(a_type, fifoDepth)}}} {arguments {Clock Reset Clock}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 718 8 {Library FIFOLevel}}}} {module FIFOLevel::mkGSyncFIFOCount {interface {{FIFOLevel::SyncFIFOCountIfc#(a_type, fifoDepth)}}} {arguments {Bool Bool Clock Reset Clock}} {provisos {{Log#(TAdd#(fifoDepth, 1), cntSize)} {Bits#(a_type, sa)}}} {position {%/Libraries/FIFOLevel.bsv 779 8 {Library FIFOLevel}}}} {function FIFOLevel::fromSyncFIFOCount0_INT {result {{FIFOLevel::SyncFIFOCount_INT#(a, n)}}} {arguments FIFOLevel::SyncFIFOCount0_INT#(n)} {position {%/Libraries/FIFOLevel.bsv 865 34 {Library FIFOLevel}}}} {module FIFOLevel::vSyncFIFOCount {interface {{FIFOLevel::SyncFIFOCount_INT#(a, _sn0)}}} {arguments {Integer Clock Reset Clock}} {provisos {{Bits#(a, sa)}}} {position {%/Libraries/FIFOLevel.bsv 880 8 {Library FIFOLevel}}}} {module FIFOLevel::vSyncFIFOCount0 {interface FIFOLevel::SyncFIFOCount0_INT#(_sn0)} {arguments {Integer Clock Reset Clock}} {position {%/Libraries/FIFOLevel.bsv 962 8 {Library FIFOLevel}}}}
{function Vector::primMarkArrayUninitialized {result Array#(a)} {arguments {Position__ String Array#(a)}} {position {%/Libraries/Vector.bs 96 10 {Library Vector}}}} {function Vector::markVectorUninitialized {result {{Vector::Vector#(n, a)}}} {arguments {Position__ String {Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 99 0 {Library Vector}}}} {function Vector::newVector {result {{Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 149 0 {Library Vector}}}} {function Vector::genVector {result {{Vector::Vector#(n, Integer)}}} {position {%/Libraries/Vector.bs 158 0 {Library Vector}}}} {function Vector::genList {result {{Vector::Vector#(n, Integer)}}} {position {%/Libraries/Vector.bs 161 0 {Library Vector}}}} {function Vector::replicate {result {{Vector::Vector#(n, a)}}} {arguments a} {position {%/Libraries/Vector.bs 170 0 {Library Vector}}}} {function Vector::genWith {result {{Vector::Vector#(n, a)}}} {arguments {{function a f(Integer x1)}}} {position {%/Libraries/Vector.bs 179 0 {Library Vector}}}} {function Vector::cons {result {{Vector::Vector#(n1, a)}}} {arguments {a {Vector::Vector#(n, a)}}} {provisos {{Add#(1, n, n1)}}} {position {%/Libraries/Vector.bs 193 0 {Library Vector}}}} {function :> {result {{Vector::Vector#(n1, a)}}} {arguments {a {Vector::Vector#(n, a)}}} {provisos {{Add#(1, n, n1)}}} {position {%/Libraries/Vector.bs 203 1 {Library Vector}}}} {function Vector::nil {result {{Vector::Vector#(0, a)}}} {position {%/Libraries/Vector.bs 211 0 {Library Vector}}}} {function Vector::append {result {{Vector::Vector#(mn, a)}}} {arguments {{Vector::Vector#(m, a)} {Vector::Vector#(n, a)}}} {provisos {{Add#(m, n, mn)}}} {position {%/Libraries/Vector.bs 224 0 {Library Vector}}}} {function Vector::concat {result {{Vector::Vector#(mn, a)}}} {arguments {{Vector::Vector#(m, Vector::Vector#(n, a))}}} {provisos {{Mul#(m, n, mn)}}} {position {%/Libraries/Vector.bs 234 0 {Library Vector}}}} {function !! {result a} {arguments {{Vector::Vector#(n, a)} Integer}} {position {%/Libraries/Vector.bs 260 1 {Library Vector}}}} {function Vector::select {result a} {arguments {{Vector::Vector#(n, a)} ix}} {provisos {{PrimIndex#(ix, dx)}}} {position {%/Libraries/Vector.bs 271 0 {Library Vector}}}} {function Vector::update {result {{Vector::Vector#(n, a)}}} {arguments {{Vector::Vector#(n, a)} ix a}} {provisos {{PrimIndex#(ix, dx)}}} {position {%/Libraries/Vector.bs 282 0 {Library Vector}}}} {function Vector::head {result a} {arguments {{Vector::Vector#(n, a)}}} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/Vector.bs 293 0 {Library Vector}}}} {function Vector::last {result a} {arguments {{Vector::Vector#(n, a)}}} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/Vector.bs 301 0 {Library Vector}}}} {function Vector::tail {result {{Vector::Vector#(m, a)}}} {arguments {{Vector::Vector#(n, a)}}} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/Vector.bs 313 0 {Library Vector}}}} {function Vector::init {result {{Vector::Vector#(m, a)}}} {arguments {{Vector::Vector#(n, a)}}} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/Vector.bs 322 0 {Library Vector}}}} {function Vector::take {result {{Vector::Vector#(m, a)}}} {arguments {{Vector::Vector#(n, a)}}} {provisos {{Add#(m, k, n)}}} {position {%/Libraries/Vector.bs 331 0 {Library Vector}}}} {function Vector::takeTail {result {{Vector::Vector#(m, a)}}} {arguments {{Vector::Vector#(n, a)}}} {provisos {{Add#(m, k, n)}}} {position {%/Libraries/Vector.bs 343 0 {Library Vector}}}} {function Vector::drop {result {{Vector::Vector#(m, a)}}} {arguments {{Vector::Vector#(n, a)}}} {provisos {{Add#(m, k, n)}}} {position {%/Libraries/Vector.bs 352 0 {Library Vector}}}} {function Vector::takeAt {result {{Vector::Vector#(m, a)}}} {arguments {Integer {Vector::Vector#(n, a)}}} {provisos {{Add#(m, k, n)}}} {position {%/Libraries/Vector.bs 362 0 {Library Vector}}}} {function Vector::zip {result {{Vector::Vector#(n, Tuple2#(a, b))}}} {arguments {{Vector::Vector#(n, a)} {Vector::Vector#(n, b)}}} {position {%/Libraries/Vector.bs 388 0 {Library Vector}}}} {function Vector::zip3 {result {{Vector::Vector#(n, Tuple3#(a, b, c))}}} {arguments {{Vector::Vector#(n, a)} {Vector::Vector#(n, b)} {Vector::Vector#(n, c)}}} {position {%/Libraries/Vector.bs 399 0 {Library Vector}}}} {function Vector::zip4 {result {{Vector::Vector#(n, Tuple4#(a, b, c, d))}}} {arguments {{Vector::Vector#(n, a)} {Vector::Vector#(n, b)} {Vector::Vector#(n, c)} {Vector::Vector#(n, d)}}} {position {%/Libraries/Vector.bs 411 0 {Library Vector}}}} {function Vector::zipAny {result {{Vector::Vector#(mn, Tuple2#(a, b))}}} {arguments {{Vector::Vector#(m, a)} {Vector::Vector#(n, b)}}} {provisos {{Max#(n, mn, n)} {Max#(m, mn, m)}}} {position {%/Libraries/Vector.bs 423 0 {Library Vector}}}} {function Vector::unzip {result {{Tuple2#(Vector::Vector#(n, a), Vector::Vector#(n, b))}}} {arguments {{Vector::Vector#(n, Tuple2#(a, b))}}} {position {%/Libraries/Vector.bs 433 0 {Library Vector}}}} {function Vector::map {result {{Vector::Vector#(n, b)}}} {arguments {{function b f(a x1)} {Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 462 0 {Library Vector}}}} {function Vector::foldr {result b} {arguments {{function b f(a x1, b x2)} b {Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 482 0 {Library Vector}}}} {function Vector::foldl {result b} {arguments {{function b f(b x1, a x2)} b {Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 492 0 {Library Vector}}}} {function Vector::foldr1 {result a} {arguments {{function a f(a x1, a x2)} {Vector::Vector#(n, a)}}} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/Vector.bs 506 0 {Library Vector}}}} {function Vector::foldl1 {result a} {arguments {{function a f(a x1, a x2)} {Vector::Vector#(n, a)}}} {provisos {{Add#(1, m, n)}}} {position {%/Libraries/Vector.bs 517 0 {Library Vector}}}} {function Vector::fold {result a} {arguments {{function a f(a x1, a x2)} {Vector::Vector#(n, a)}}} {provisos {{Add#(1, n1, n)}}} {position {%/Libraries/Vector.bs 531 0 {Library Vector}}}} {function Vector::scanr {result {{Vector::Vector#(n1, b)}}} {arguments {{function b f(a x1, b x2)} b {Vector::Vector#(n, a)}}} {provisos {{Add#(1, n, n1)}}} {position {%/Libraries/Vector.bs 567 0 {Library Vector}}}} {function Vector::sscanr {result {{Vector::Vector#(n, b)}}} {arguments {{function b f(a x1, b x2)} b {Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 577 0 {Library Vector}}}} {function Vector::scanl {result {{Vector::Vector#(n1, a)}}} {arguments {{function a f(a x1, b x2)} a {Vector::Vector#(n, b)}}} {provisos {{Add#(1, n, n1)}}} {position {%/Libraries/Vector.bs 605 0 {Library Vector}}}} {function Vector::sscanl {result {{Vector::Vector#(n, a)}}} {arguments {{function a f(a x1, b x2)} a {Vector::Vector#(n, b)}}} {position {%/Libraries/Vector.bs 616 0 {Library Vector}}}} {function Vector::zipWith {result {{Vector::Vector#(n, c)}}} {arguments {{function c f(a x1, b x2)} {Vector::Vector#(n, a)} {Vector::Vector#(n, b)}}} {position {%/Libraries/Vector.bs 629 0 {Library Vector}}}} {function Vector::zipWithAny {result {{Vector::Vector#(mn, c)}}} {arguments {{function c f(a x1, b x2)} {Vector::Vector#(n, a)} {Vector::Vector#(m, b)}}} {provisos {{Max#(m, mn, m)} {Max#(n, mn, n)}}} {position {%/Libraries/Vector.bs 641 0 {Library Vector}}}} {function Vector::zipWith3 {result {{Vector::Vector#(n, d)}}} {arguments {{function d f(a x1, b x2, c x3)} {Vector::Vector#(n, a)} {Vector::Vector#(n, b)} {Vector::Vector#(n, c)}}} {position {%/Libraries/Vector.bs 654 0 {Library Vector}}}} {function Vector::zipWithAny3 {result {{Vector::Vector#(mn, d)}}} {arguments {{function d f(a x1, b x2, c x3)} {Vector::Vector#(n, a)} {Vector::Vector#(m, b)} {Vector::Vector#(o, c)}}} {provisos {{Max#(o, mn, o)} {Max#(n, mn, n)} {Max#(m, mn, m)}}} {position {%/Libraries/Vector.bs 668 0 {Library Vector}}}} {function Vector::rotate {result {{Vector::Vector#(n, a)}}} {arguments {{Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 683 0 {Library Vector}}}} {function Vector::rotateR {result {{Vector::Vector#(n, a)}}} {arguments {{Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 698 0 {Library Vector}}}} {function Vector::rotateStage {result {{Vector::Vector#(n, a)}}} {arguments {{Vector::Vector#(n, a)} Integer UInt#(lgn)}} {provisos {{Log#(n, lgn)}}} {position {%/Libraries/Vector.bs 707 0 {Library Vector}}}} {function Vector::rotateLoop {result {{Vector::Vector#(n, a)}}} {arguments {{Vector::Vector#(n, a)} Integer UInt#(lgn)}} {provisos {{Log#(n, lgn)}}} {position {%/Libraries/Vector.bs 719 0 {Library Vector}}}} {function Vector::rotateBy {result {{Vector::Vector#(n, a)}}} {arguments {{Vector::Vector#(n, a)} UInt#(lgn)}} {provisos {{Log#(n, lgn)}}} {position {%/Libraries/Vector.bs 723 0 {Library Vector}}}} {function Vector::rotateBitsBy {result Bit#(n)} {arguments {Bit#(n) UInt#(lgn)}} {provisos {{Log#(n, lgn)}}} {position {%/Libraries/Vector.bs 729 0 {Library Vector}}}} {function Vector::shiftInAt0 {result {{Vector::Vector#(n, a)}}} {arguments {{Vector::Vector#(n, a)} a}} {position {%/Libraries/Vector.bs 744 0 {Library Vector}}}} {function Vector::shiftInAtN {result {{Vector::Vector#(n, a)}}} {arguments {{Vector::Vector#(n, a)} a}} {position {%/Libraries/Vector.bs 763 0 {Library Vector}}}} {function Vector::shiftOutFrom0 {result {{Vector::Vector#(n, a)}}} {arguments {a {Vector::Vector#(n, a)} idx}} {provisos {{PrimShiftIndex#(idx, x)}}} {position {%/Libraries/Vector.bs 776 0 {Library Vector}}}} {function Vector::shiftOutFromN {result {{Vector::Vector#(n, a)}}} {arguments {a {Vector::Vector#(n, a)} idx}} {provisos {{PrimShiftIndex#(idx, x)}}} {position {%/Libraries/Vector.bs 787 0 {Library Vector}}}} {function Vector::reverse {result {{Vector::Vector#(n, a)}}} {arguments {{Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 803 0 {Library Vector}}}} {function Vector::transpose {result {{Vector::Vector#(n, Vector::Vector#(m, a))}}} {arguments {{Vector::Vector#(m, Vector::Vector#(n, a))}}} {position {%/Libraries/Vector.bs 813 0 {Library Vector}}}} {function Vector::transposeLN {result {{Vector::Vector#(n, List#(a))}}} {arguments {{List#(Vector::Vector#(n, a))}}} {position {%/Libraries/Vector.bs 824 0 {Library Vector}}}} {function Vector::mapM {result {{m#(Vector::Vector#(n, b))}}} {arguments {{function m#(b) f(a x1)} {Vector::Vector#(n, a)}}} {provisos Monad#(m)} {position {%/Libraries/Vector.bs 866 0 {Library Vector}}}} {function Vector::mapM_ {result m#(void)} {arguments {{function m#(b) f(a x1)} {Vector::Vector#(n, a)}}} {provisos Monad#(m)} {position {%/Libraries/Vector.bs 882 0 {Library Vector}}}} {function Vector::zipWithM {result {{m#(Vector::Vector#(n, c))}}} {arguments {{function m#(c) f(a x1, b x2)} {Vector::Vector#(n, a)} {Vector::Vector#(n, b)}}} {provisos Monad#(m)} {position {%/Libraries/Vector.bs 902 0 {Library Vector}}}} {function Vector::zipWithM_ {result m#(void)} {arguments {{function m#(c) f(a x1, b x2)} {Vector::Vector#(n, a)} {Vector::Vector#(n, b)}}} {provisos Monad#(m)} {position {%/Libraries/Vector.bs 918 0 {Library Vector}}}} {function Vector::zipWith3M {result {{m#(Vector::Vector#(n, d))}}} {arguments {{function m#(d) f(a x1, b x2, c x3)} {Vector::Vector#(n, a)} {Vector::Vector#(n, b)} {Vector::Vector#(n, c)}}} {provisos Monad#(m)} {position {%/Libraries/Vector.bs 938 0 {Library Vector}}}} {function Vector::genWithM {result {{m#(Vector::Vector#(n, a))}}} {arguments {{function m#(a) f(Integer x1)}}} {provisos Monad#(m)} {position {%/Libraries/Vector.bs 951 0 {Library Vector}}}} {function Vector::replicateM {result {{m#(Vector::Vector#(n, a))}}} {arguments m#(a)} {provisos Monad#(m)} {position {%/Libraries/Vector.bs 961 0 {Library Vector}}}} {function Vector::foldlM {result m#(a)} {arguments {{function m#(a) f(a x1, b x2)} a {Vector::Vector#(n, b)}}} {provisos Monad#(m)} {position {%/Libraries/Vector.bs 972 0 {Library Vector}}}} {function Vector::foldM {result m#(a)} {arguments {{function m#(a) f(a x1, a x2)} {Vector::Vector#(n, a)}}} {provisos {{Add#(1, k, n)} Monad#(m)}} {position {%/Libraries/Vector.bs 982 0 {Library Vector}}}} {function Vector::foldrM {result m#(b)} {arguments {{function m#(b) f(a x1, b x2)} b {Vector::Vector#(n, a)}}} {provisos Monad#(m)} {position {%/Libraries/Vector.bs 995 0 {Library Vector}}}} {function Vector::sequence {result {{m#(Vector::Vector#(n, a))}}} {arguments {{Vector::Vector#(n, m#(a))}}} {provisos Monad#(m)} {position {%/Libraries/Vector.bs 1006 0 {Library Vector}}}} {function Vector::elem {result Bool} {arguments {a {Vector::Vector#(n, a)}}} {provisos Eq#(a)} {position {%/Libraries/Vector.bs 1022 0 {Library Vector}}}} {function Vector::any {result Bool} {arguments {{function Bool f(a x1)} {Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 1033 0 {Library Vector}}}} {function Vector::or {result Bool} {arguments {{Vector::Vector#(n, Bool)}}} {position {%/Libraries/Vector.bs 1036 0 {Library Vector}}}} {function Vector::all {result Bool} {arguments {{function Bool f(a x1)} {Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 1043 0 {Library Vector}}}} {function Vector::and {result Bool} {arguments {{Vector::Vector#(n, Bool)}}} {position {%/Libraries/Vector.bs 1046 0 {Library Vector}}}} {function Vector::find {result Maybe#(a)} {arguments {{function Bool f(a x1)} {Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 1050 0 {Library Vector}}}} {function Vector::findElem {result Maybe#(UInt#(lgn))} {arguments {a {Vector::Vector#(n, a)}}} {provisos {Eq#(a) {Log#(n, lgn)}}} {position {%/Libraries/Vector.bs 1060 0 {Library Vector}}}} {function Vector::findIndex {result Maybe#(UInt#(lgn))} {arguments {{function Bool f(a x1)} {Vector::Vector#(n, a)}}} {provisos {{Log#(n, lgn)}}} {position {%/Libraries/Vector.bs 1065 0 {Library Vector}}}} {function Vector::countElem {result UInt#(lgn1)} {arguments {a {Vector::Vector#(n, a)}}} {provisos {Eq#(a) {Log#(n1, lgn1)} {Add#(1, n, n1)}}} {position {%/Libraries/Vector.bs 1079 0 {Library Vector}}}} {function Vector::countIf {result UInt#(lgn1)} {arguments {{function Bool f(a x1)} {Vector::Vector#(n, a)}}} {provisos {{Log#(n1, lgn1)} {Add#(1, n, n1)}}} {position {%/Libraries/Vector.bs 1083 0 {Library Vector}}}} {function Vector::countOnesAlt {result UInt#(lgn1)} {arguments Bit#(n)} {provisos {{Log#(n1, lgn1)} {Add#(1, n, n1)}}} {position {%/Libraries/Vector.bs 1093 0 {Library Vector}}}} {function Vector::countLeadingZeros {result UInt#(lgn1)} {arguments Bit#(n)} {provisos {{Add#(lgn, xxx, lgn1)} {Log#(n, lgn)} {Log#(n1, lgn1)} {Add#(1, n, n1)}}} {position {%/Libraries/Vector.bs 1099 0 {Library Vector}}}} {function Vector::toList {result List#(a)} {arguments {{Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 1117 0 {Library Vector}}}} {function Vector::toVector {result {{Vector::Vector#(n, a)}}} {arguments List#(a)} {position {%/Libraries/Vector.bs 1125 0 {Library Vector}}}} {function Vector::arrayToVector {result {{Vector::Vector#(n, a)}}} {arguments Array#(a)} {position {%/Libraries/Vector.bs 1137 0 {Library Vector}}}} {function Vector::vectorToArray {result Array#(a)} {arguments {{Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 1149 0 {Library Vector}}}} {function Vector::joinActions {result Action} {arguments {{Vector::Vector#(n, Action)}}} {position {%/Libraries/Vector.bs 1160 0 {Library Vector}}}} {function Vector::joinRules {result Rules} {arguments {{Vector::Vector#(n, Rules)}}} {position {%/Libraries/Vector.bs 1169 0 {Library Vector}}}} {function Vector::mapAccumL {result {{Tuple2#(a, Vector::Vector#(n, c))}}} {arguments {{function Tuple2#(a, c) f(a x1, b x2)} a {Vector::Vector#(n, b)}}} {position {%/Libraries/Vector.bs 1180 0 {Library Vector}}}} {function Vector::mapAccumR {result {{Tuple2#(a, Vector::Vector#(n, c))}}} {arguments {{function Tuple2#(a, c) f(a x1, b x2)} a {Vector::Vector#(n, b)}}} {position {%/Libraries/Vector.bs 1194 0 {Library Vector}}}} {function Vector::mapPairs {result {{Vector::Vector#(n2, b)}}} {arguments {{function b f(a x1, a x2)} {function b f(a x1)} {Vector::Vector#(n, a)}}} {provisos {{Div#(n, 2, n2)}}} {position {%/Libraries/Vector.bs 1211 0 {Library Vector}}}} {function Vector::flatten {result Array#(a)} {arguments {{Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 1214 0 {Library Vector}}}} {function Vector::readVReg {result {{Vector::Vector#(n, a)}}} {arguments {{Vector::Vector#(n, Reg#(a))}}} {position {%/Libraries/Vector.bs 1222 0 {Library Vector}}}} {function Vector::writeVReg {result Action} {arguments {{Vector::Vector#(n, Reg#(a))} {Vector::Vector#(n, a)}}} {position {%/Libraries/Vector.bs 1232 0 {Library Vector}}}} {function Vector::toChunks {result {{Vector::Vector#(n, ch)}}} {arguments t} {provisos {{Div#(in_sz, ch_sz, n)} {Bits#(t, in_sz)} {Bits#(ch, ch_sz)}}} {position {%/Libraries/Vector.bs 1251 0 {Library Vector}}}} {function countOnes {result UInt#(lgn1)} {arguments Bit#(n)} {provisos {{Add#(1, xx, lgn1)} {Log#(n1, lgn1)} {Add#(1, n, n1)}}} {position {%/Libraries/Prelude.bs 3688 0 {Library Prelude}}}}
