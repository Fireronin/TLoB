Interface {FIFO::FIFO#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Action clear {} {}}}}} {position {%/Libraries/FIFO.bs 20 10 {Library FIFO}}}
Interface {FIFOF::FIFOF#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Bool notFull {} {}}} {method {Bool notEmpty {} {}}} {method {Action clear {} {}}}}} {position {%/Libraries/FIFOF.bs 31 10 {Library FIFOF}}}
Typeclass {Connectable::Connectable#(type a, type b)} {members {{{function c#(Empty) f(a x1, b x2)   provisos (IsModule#(c, d))} mkConnection}}} {instances {{Connectable::Connectable#(AXI4_Types::AXI4_AR_Master_Sig#(a, b, c), AXI4_Types::AXI4_AR_Slave_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_AR_Slave_Sig#(a, b, c), AXI4_Types::AXI4_AR_Master_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_AW_Master_Sig#(a, b, c), AXI4_Types::AXI4_AW_Slave_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_AW_Slave_Sig#(a, b, c), AXI4_Types::AXI4_AW_Master_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_B_Master_Sig#(a, b), AXI4_Types::AXI4_B_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4_Types::AXI4_B_Slave_Sig#(a, b), AXI4_Types::AXI4_B_Master_Sig#(a, b))} {Connectable::Connectable#(AXI4_Types::AXI4_Master#(a, b, c, d, e, f, g, h), AXI4_Types::AXI4_Slave#(a, b, c, d, e, f, g, h))} {Connectable::Connectable#(AXI4_Types::AXI4_Master_Sig#(a, b, c, d, e, f, g, h), AXI4_Types::AXI4_Slave_Sig#(a, b, c, d, e, f, g, h))} {Connectable::Connectable#(AXI4_Types::AXI4_R_Master_Sig#(a, b, c), AXI4_Types::AXI4_R_Slave_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_R_Slave_Sig#(a, b, c), AXI4_Types::AXI4_R_Master_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_Slave#(a, b, c, d, e, f, g, h), AXI4_Types::AXI4_Master#(a, b, c, d, e, f, g, h))} {Connectable::Connectable#(AXI4_Types::AXI4_Slave_Sig#(a, b, c, d, e, f, g, h), AXI4_Types::AXI4_Master_Sig#(a, b, c, d, e, f, g, h))} {Connectable::Connectable#(AXI4_Types::AXI4_W_Master_Sig#(a, b), AXI4_Types::AXI4_W_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4_Types::AXI4_W_Slave_Sig#(a, b), AXI4_Types::AXI4_W_Master_Sig#(a, b))} {Connectable::Connectable#(Action, Action)} {Connectable::Connectable#(ActionValue#(a), function Action f(a x1))} {Connectable::Connectable#(GetPut::Get#(a), GetPut::Put#(a))} {Connectable::Connectable#(GetPut::GetS#(a), GetPut::Put#(a))} {Connectable::Connectable#(GetPut::GetS#(a), GetPut::PutS#(a))} {Connectable::Connectable#(GetPut::Put#(a), GetPut::Get#(a))} {Connectable::Connectable#(GetPut::Put#(a), GetPut::GetS#(a))} {Connectable::Connectable#(GetPut::PutS#(a), GetPut::GetS#(a))} {Connectable::Connectable#(Inout#(a), Inout#(a))   provisos (Bits#(a, sa))} {Connectable::Connectable#(ListN::ListN#(n, a), ListN::ListN#(n, b))   provisos (Connectable::Connectable#(a, b))} {Connectable::Connectable#(MasterSlave::Master#(req_t, rsp_t), MasterSlave::Slave#(req_t, rsp_t))   provisos (Bits#(rsp_t, _b), Bits#(req_t, _a))} {Connectable::Connectable#(MasterSlave::Slave#(req_t, rsp_t), MasterSlave::Master#(req_t, rsp_t))   provisos (Bits#(rsp_t, _b), Bits#(req_t, _a))} {Connectable::Connectable#(RWire#(a), RWire#(a))} {Connectable::Connectable#(SourceSink::Sink#(t), SourceSink::Source#(t))   provisos (Bits#(t, t_sz))} {Connectable::Connectable#(SourceSink::Source#(t), SourceSink::Sink#(t))   provisos (Bits#(t, t_sz))} {Connectable::Connectable#(Tuple2#(a, c), Tuple2#(b, d))   provisos (Connectable::Connectable#(c, d), Connectable::Connectable#(a, b))} {Connectable::Connectable#(Vector::Vector#(n, a), Vector::Vector#(n, b))   provisos (Connectable::Connectable#(a, b))} {Connectable::Connectable#(a, function Action f(a x1))} {Connectable::Connectable#(function Action f(a x1), ActionValue#(a))} {Connectable::Connectable#(function Action f(a x1), a)}}} {position {%/Libraries/Connectable.bs 20 6 {Library Connectable}}}
Interface {GetPut::Get#(type a)} polymorphic {members {{method {ActionValue#(a) get {} {}}}}} {position {%/Libraries/GetPut.bs 88 10 {Library GetPut}}}
Interface {GetPut::GetS#(type a)} polymorphic {members {{method {a first {} {}}} {method {Action deq {} {}}}}} {position {%/Libraries/GetPut.bs 91 10 {Library GetPut}}}
Interface {GetPut::Put#(type a)} polymorphic {members {{method {Action put a {{(* prefix = "" *)} {(* result = "UNUSED" *)} {(* ports = ["put"] *)}}}}}} {position {%/Libraries/GetPut.bs 115 10 {Library GetPut}}}
Interface {GetPut::PutS#(type a)} polymorphic {members {{method {Action offer a {}}} {method {Bool accepted {} {}}}}} {position {%/Libraries/GetPut.bs 118 10 {Library GetPut}}}
Alias {GetPut::GetPut#(type a)} {Tuple2#(GetPut::Get#(a), GetPut::Put#(a))} {position {%/Libraries/GetPut.bs 127 5 {Library GetPut}}}
Typeclass {GetPut::ToGet#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Get#(b) f(a x1)} toGet}}} {instances {{GetPut::ToGet#(ActionValue#(a), a)} {GetPut::ToGet#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToGet#(FIFO::FIFO#(a), a)} {GetPut::ToGet#(FIFOF::FIFOF#(a), a)} {GetPut::ToGet#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(GetPut::Get#(a), a)} {GetPut::ToGet#(RWire#(a), a)} {GetPut::ToGet#(ReadOnly#(a), a)} {GetPut::ToGet#(Reg#(a), a)} {GetPut::ToGet#(SourceSink::Source#(t), t)} {GetPut::ToGet#(a, a)}}} {position {%/Libraries/GetPut.bs 417 6 {Library GetPut}}}
Typeclass {GetPut::ToPut#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Put#(b) f(a x1)} toPut}}} {instances {{GetPut::ToPut#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToPut#(FIFO::FIFO#(a), a)} {GetPut::ToPut#(FIFOF::FIFOF#(a), a)} {GetPut::ToPut#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(GetPut::Put#(a), a)} {GetPut::ToPut#(RWire#(a), a)} {GetPut::ToPut#(Reg#(a), a)} {GetPut::ToPut#(SourceSink::Sink#(t), t)} {GetPut::ToPut#(function Action f(a x1), a)}}} {position {%/Libraries/GetPut.bs 420 6 {Library GetPut}}}
