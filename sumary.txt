1. Typeclasses, check if it's and istance of typeclass:
    Typeclasses of intrest: Connectable(get and put), ToSink, ToSource, toget, ToPut

2. Routing , Routable has a routable field and we get it via routingField(duck)

3. Rounting maps to function -> oneHot vector of size of number of slaves


-----------------------------

1. Selecting sub interface for source / sink 

2. Create bus , Selecting type of bus ( detect if we are axi4 then do special function)

3. 


Generated function should use size from number of connected components done
Formalize AFlit done 
Add test with AFlit done


Do mkConnection via connectable  done

Questrions: maybe replicate typedefs indead of querring 

Create top file with mkCore https://github.com/CTSRD-CHERI/Flute/blob/CHERI/src_Core/Core/Core.bsv
And memeory from https://github.com/CTSRD-CHERI/BlueStuff/blob/master/BlueUtils/MemUtils.bsv
and https://github.com/CTSRD-CHERI/BlueStuff/blob/master/AXI4_Fake_16550.bsv

Recreate this in quartus
make using project

make in folder https://github.com/CTSRD-CHERI/Flute/tree/CHERI/src_SSITH_P2
this builds verilog

put this verilog in quartus

this should compain about axi 

make wrapers sig for memmroy and axi4 AXI4_Fake_16550

and import  them 





