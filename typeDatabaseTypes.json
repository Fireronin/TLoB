

Typeclass {Connectable::Connectable#(type a, type b)} {members {{{function c#(Empty) f(a x1, b x2)   provisos (IsModule#(c, d))} mkConnection}}} {instances {{Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(a, b), AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(a, b), AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(a, b), AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(a, b), AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(a), AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(a))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(a), AXI4Lite_Types::AXI4Lite_B_Master_Sig#(a))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_Master#(a, b, c, d, e, f, g), AXI4Lite_Types::AXI4Lite_Slave#(a, b, c, d, e, f, g))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_Master_Sig#(a, b, c, d, e, f, g), AXI4Lite_Types::AXI4Lite_Slave_Sig#(a, b, c, d, e, f, g))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(a, b), AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(a, b), AXI4Lite_Types::AXI4Lite_R_Master_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_Slave#(a, b, c, d, e, f, g), AXI4Lite_Types::AXI4Lite_Master#(a, b, c, d, e, f, g))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(a, b, c, d, e, f, g), AXI4Lite_Types::AXI4Lite_Master_Sig#(a, b, c, d, e, f, g))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(a, b), AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(a, b), AXI4Lite_Types::AXI4Lite_W_Master_Sig#(a, b))} {Connectable::Connectable#(AXI4_Types::AXI4_AR_Master_Sig#(a, b, c), AXI4_Types::AXI4_AR_Slave_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_AR_Slave_Sig#(a, b, c), AXI4_Types::AXI4_AR_Master_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_AW_Master_Sig#(a, b, c), AXI4_Types::AXI4_AW_Slave_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_AW_Slave_Sig#(a, b, c), AXI4_Types::AXI4_AW_Master_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_B_Master_Sig#(a, b), AXI4_Types::AXI4_B_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4_Types::AXI4_B_Slave_Sig#(a, b), AXI4_Types::AXI4_B_Master_Sig#(a, b))} {Connectable::Connectable#(AXI4_Types::AXI4_Master#(a, b, c, d, e, f, g, h), AXI4_Types::AXI4_Slave#(a, b, c, d, e, f, g, h))} {Connectable::Connectable#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {Connectable::Connectable#(AXI4_Types::AXI4_Master_Sig#(a, b, c, d, e, f, g, h), AXI4_Types::AXI4_Slave_Sig#(a, b, c, d, e, f, g, h))} {Connectable::Connectable#(AXI4_Types::AXI4_R_Master_Sig#(a, b, c), AXI4_Types::AXI4_R_Slave_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_R_Slave_Sig#(a, b, c), AXI4_Types::AXI4_R_Master_Sig#(a, b, c))} {Connectable::Connectable#(AXI4_Types::AXI4_Slave#(a, b, c, d, e, f, g, h), AXI4_Types::AXI4_Master#(a, b, c, d, e, f, g, h))} {Connectable::Connectable#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_), AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {Connectable::Connectable#(AXI4_Types::AXI4_Slave_Sig#(a, b, c, d, e, f, g, h), AXI4_Types::AXI4_Master_Sig#(a, b, c, d, e, f, g, h))} {Connectable::Connectable#(AXI4_Types::AXI4_W_Master_Sig#(a, b), AXI4_Types::AXI4_W_Slave_Sig#(a, b))} {Connectable::Connectable#(AXI4_Types::AXI4_W_Slave_Sig#(a, b), AXI4_Types::AXI4_W_Master_Sig#(a, b))} {Connectable::Connectable#(Action, Action)} {Connectable::Connectable#(ActionValue#(a), function Action f(a x1))} {Connectable::Connectable#(ClientServer::Client#(a, b), ClientServer::Server#(a, b))} {Connectable::Connectable#(ClientServer::Server#(a, b), ClientServer::Client#(a, b))} {Connectable::Connectable#(FIFOF::FIFOF#(t), Semi_FIFOF::FIFOF_I#(t))} {Connectable::Connectable#(GetPut::Get#(a), GetPut::Put#(a))} {Connectable::Connectable#(GetPut::GetS#(a), GetPut::Put#(a))} {Connectable::Connectable#(GetPut::GetS#(a), GetPut::PutS#(a))} {Connectable::Connectable#(GetPut::Put#(a), GetPut::Get#(a))} {Connectable::Connectable#(GetPut::Put#(a), GetPut::GetS#(a))} {Connectable::Connectable#(GetPut::PutS#(a), GetPut::GetS#(a))} {Connectable::Connectable#(Inout#(a), Inout#(a))   provisos (Bits#(a, sa))} {Connectable::Connectable#(ListN::ListN#(n, a), ListN::ListN#(n, b))   provisos (Connectable::Connectable#(a, b))} {Connectable::Connectable#(MasterSlave::Master#(req_t, rsp_t), MasterSlave::Slave#(req_t, rsp_t))   provisos (Bits#(rsp_t, _b), Bits#(req_t, _a))} {Connectable::Connectable#(MasterSlave::Slave#(req_t, rsp_t), MasterSlave::Master#(req_t, rsp_t))   provisos (Bits#(rsp_t, _b), Bits#(req_t, _a))} {Connectable::Connectable#(Memory::MemoryClient#(a, d), RegFile::RegFile#(Bit#(ars), Bit#(d)))   provisos (Mul#(TDiv#(d, 8), 8, d), Add#(ars, __x, a))} {Connectable::Connectable#(RWire#(a), RWire#(a))} {Connectable::Connectable#(RegFile::RegFile#(Bit#(ars), Bit#(d)), Memory::MemoryClient#(a, d))   provisos (Mul#(TDiv#(d, 8), 8, d), Add#(ars, __x, a))} {Connectable::Connectable#(Semi_FIFOF::FIFOF_I#(t), Semi_FIFOF::FIFOF_O#(t))} {Connectable::Connectable#(Semi_FIFOF::FIFOF_O#(t), FIFOF::FIFOF#(t))} {Connectable::Connectable#(Semi_FIFOF::FIFOF_O#(t), Semi_FIFOF::FIFOF_I#(t))} {Connectable::Connectable#(SourceSink::Sink#(t), SourceSink::Source#(t))   provisos (Bits#(t, t_sz))} {Connectable::Connectable#(SourceSink::Source#(t), SourceSink::Sink#(t))   provisos (Bits#(t, t_sz))} {Connectable::Connectable#(Tuple2#(a, c), Tuple2#(b, d))   provisos (Connectable::Connectable#(c, d), Connectable::Connectable#(a, b))} {Connectable::Connectable#(Vector::Vector#(n, a), Vector::Vector#(n, b))   provisos (Connectable::Connectable#(a, b))} {Connectable::Connectable#(a, function Action f(a x1))} {Connectable::Connectable#(function Action f(a x1), ActionValue#(a))} {Connectable::Connectable#(function Action f(a x1), a)}}} {position {%/Libraries/Connectable.bs 20 6 {Library Connectable}}}
Interface {FIFO::FIFO#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Action clear {} {}}}}} {position {%/Libraries/FIFO.bs 20 10 {Library FIFO}}}
Interface {FIFOF::FIFOF#(type a)} polymorphic {members {{method {Action enq a {}}} {method {Action deq {} {}}} {method {a first {} {}}} {method {Bool notFull {} {}}} {method {Bool notEmpty {} {}}} {method {Action clear {} {}}}}} {position {%/Libraries/FIFOF.bs 31 10 {Library FIFOF}}}
Interface {GetPut::Get#(type a)} polymorphic {members {{method {ActionValue#(a) get {} {}}}}} {position {%/Libraries/GetPut.bs 88 10 {Library GetPut}}}
Interface {GetPut::GetS#(type a)} polymorphic {members {{method {a first {} {}}} {method {Action deq {} {}}}}} {position {%/Libraries/GetPut.bs 91 10 {Library GetPut}}}
Interface {GetPut::Put#(type a)} polymorphic {members {{method {Action put a {{(* prefix = "" *)} {(* result = "UNUSED" *)} {(* ports = ["put"] *)}}}}}} {position {%/Libraries/GetPut.bs 115 10 {Library GetPut}}}
Interface {GetPut::PutS#(type a)} polymorphic {members {{method {Action offer a {}}} {method {Bool accepted {} {}}}}} {position {%/Libraries/GetPut.bs 118 10 {Library GetPut}}}
Alias {GetPut::GetPut#(type a)} {Tuple2#(GetPut::Get#(a), GetPut::Put#(a))} {position {%/Libraries/GetPut.bs 127 5 {Library GetPut}}}
Typeclass {GetPut::ToGet#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Get#(b) f(a x1)} toGet}}} {instances {{GetPut::ToGet#(ActionValue#(a), a)} {GetPut::ToGet#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToGet#(FIFO::FIFO#(a), a)} {GetPut::ToGet#(FIFOF::FIFOF#(a), a)} {GetPut::ToGet#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToGet#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToGet#(GetPut::Get#(a), a)} {GetPut::ToGet#(RWire#(a), a)} {GetPut::ToGet#(ReadOnly#(a), a)} {GetPut::ToGet#(Reg#(a), a)} {GetPut::ToGet#(Semi_FIFOF::FIFOF_O#(t), t)} {GetPut::ToGet#(SourceSink::Source#(t), t)} {GetPut::ToGet#(a, a)}}} {position {%/Libraries/GetPut.bs 417 6 {Library GetPut}}}
Typeclass {GetPut::ToPut#(type a, type b)} {dependencies {{a determines b}}} {members {{{function GetPut::Put#(b) f(a x1)} toPut}}} {instances {{GetPut::ToPut#(Clocks::SyncFIFOIfc#(a), a)} {GetPut::ToPut#(FIFO::FIFO#(a), a)} {GetPut::ToPut#(FIFOF::FIFOF#(a), a)} {GetPut::ToPut#(FIFOLevel::FIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::FIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOCountIfc#(a, n), a)} {GetPut::ToPut#(FIFOLevel::SyncFIFOLevelIfc#(a, n), a)} {GetPut::ToPut#(GetPut::Put#(a), a)} {GetPut::ToPut#(RWire#(a), a)} {GetPut::ToPut#(Reg#(a), a)} {GetPut::ToPut#(Semi_FIFOF::FIFOF_I#(t), t)} {GetPut::ToPut#(SourceSink::Sink#(t), t)} {GetPut::ToPut#(function Action f(a x1), a)}}} {position {%/Libraries/GetPut.bs 420 6 {Library GetPut}}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}

Interface {SourceSink::Source#(type t)} polymorphic {members {{method {Bool canPeek {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {t peek {} {{(* ports = [] *)}}}} {method {Action drop {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 42 11}}
Interface {SourceSink::Sink#(type t)} polymorphic {members {{method {Bool canPut {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action put t {{(* ports = ["val"] *)}}}}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 48 11}}
Interface {SourceSink::SourceSink#(type t)} polymorphic {members {{interface SourceSink::Source#(t) source {}} {interface SourceSink::Sink#(t) sink {}}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 53 11}}
Typeclass {SourceSink::HasGet#(type a, type b)} {members {{{function ActionValue#(b) f(a x1)} get}}} {instances {{SourceSink::HasGet#(a, b)   provisos (GetPut::ToGet#(a, b))}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 62 11}}
Typeclass {SourceSink::ToSource#(type a, type b)} {dependencies {{a determines b}}} {members {{{function SourceSink::Source#(b) f(a x1)} toSource}}} {instances {{SourceSink::ToSource#(FIFOF::FIFOF#(t), t)} {SourceSink::ToSource#(SourceSink::Source#(t), t)}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 76 11}}
Typeclass {SourceSink::ToSink#(type a, type b)} {dependencies {{a determines b}}} {members {{{function SourceSink::Sink#(b) f(a x1)} toSink}}} {instances {{SourceSink::ToSink#(FIFOF::FIFOF#(t), t)} {SourceSink::ToSink#(SourceSink::Sink#(t), t)}}} {position {../libs/BlueStuff/BlueBasics/SourceSink.bsv 94 11}}
Typeclass {Routable::Has_routingField#(type t, type r_t)} {dependencies {{t determines r_t}}} {members {{{function r_t f(t x1)} routingField}}} {instances {{Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(Routable::WithMetaInfo#(t, m_t), r_t)   provisos (Routable::Has_routingField#(t, r_t))} {Routable::Has_routingField#(Routable::WithRouteInfo#(t, r_t), r_t)}}} {position {../libs/BlueStuff/Routable.bsv 46 11}}
Typeclass {Routable::Has_isLast#(type t)} {members {{{function Bool f(t x1)} isLast}}} {instances {{Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_BFlit#(id_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(Routable::WithMetaInfo#(t, m_t))   provisos (Routable::Has_isLast#(t))} {Routable::Has_isLast#(Routable::WithRouteInfo#(t, r_t))   provisos (Routable::Has_isLast#(t))}}} {position {../libs/BlueStuff/Routable.bsv 50 11}}
Typeclass {Routable::Routable#(type f_t, type r_t)} {superclasses {{Routable::Has_routingField#(f_t, r_t)} Routable::Has_isLast#(f_t)}} {dependencies {{f_t determines r_t}}} {members {}} {instances {{Routable::Routable#(a, b)   provisos (Routable::Has_isLast#(a), Routable::Has_routingField#(a, b))}}} {position {../libs/BlueStuff/Routable.bsv 54 11}}
Typeclass {Routable::FallibleRoute#(type req_t, type rsp_t)} {members {{{a#(MasterSlave::Slave#(req_t, rsp_t))   provisos (IsModule#(a, b))} mkNoRouteSlave}}} {instances {{Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} {Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), AXI4Lite_Types::AXI4Lite_BFlit#(buser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_), down_t))   provisos (Bits#(down_t, down_t_sz))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_), down_t))   provisos (Bits#(down_t, down_t_sz))}}} {position {../libs/BlueStuff/Routable.bsv 72 11}}
Typeclass {Routable::ExpandableReqRsp#(type req_t, type req_fat_t, type rsp_fat_t, type rsp_t, numeric type n_masters)} {dependencies {{(req_t, req_fat_t) determines (rsp_fat_t, rsp_t, n_masters)} {rsp_fat_t determines (req_t, req_fat_t, rsp_t, n_masters)} {(rsp_fat_t, rsp_t) determines (req_t, req_fat_t, n_masters)}}} {members {{{function req_fat_t f(Bit#(TLog#(n_masters)) x1, req_t x2)} expand} {{function Tuple2#(Bit#(TLog#(n_masters)), rsp_t) f(rsp_fat_t x1)} shrink}}} {instances {{Routable::ExpandableReqRsp#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_), AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_), AXI4_Types::AXI4_RFlit#(id_, data_, ruser_), n)   provisos (Add#(id_, TLog#(n), sid_))} {Routable::ExpandableReqRsp#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_), AXI4_Types::AXI4_BFlit#(id_, buser_), n)   provisos (Add#(id_, TLog#(n), sid_))}}} {position {../libs/BlueStuff/Routable.bsv 88 11}}
Struct {Routable::WithRouteInfo#(type t, type r_t)} polymorphic {members {{t payload} {r_t routeInfo}}} {position {../libs/BlueStuff/Routable.bsv 110 3}}
Struct {Routable::WithMetaInfo#(type t, type m_t)} polymorphic {members {{t payload} {m_t metaInfo}}} {position {../libs/BlueStuff/Routable.bsv 123 3}}
Struct {Routable::Range#(numeric type n)} polymorphic {members {{Bit#(n) base} {Bit#(n) size}}} {position {../libs/BlueStuff/Routable.bsv 145 3}}
Alias {Routable::MappingTable#(numeric type n, numeric type a)} {Vector::Vector#(n, Routable::Range#(a))} {position {../libs/BlueStuff/Routable.bsv 155 33}}
Interface {Core_IFC::Core_IFC#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 80 11}}
Interface {Core_IFC::Core_IFC_Synth#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master_Sig#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master_Sig#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 190 11}}
Interface {ClientServer::Client#(type a, type b)} polymorphic {members {{interface GetPut::Get#(a) request {}} {interface GetPut::Put#(b) response {}}}} {position {%/Libraries/ClientServer.bs 34 10 {Library ClientServer}}}
Interface {ClientServer::Server#(type a, type b)} polymorphic {members {{interface GetPut::Put#(a) request {}} {interface GetPut::Get#(b) response {}}}} {position {%/Libraries/ClientServer.bs 45 10 {Library ClientServer}}}
Alias {ClientServer::ClientServer#(type a, type b)} {Tuple2#(ClientServer::Client#(a, b), ClientServer::Server#(a, b))} {position {%/Libraries/ClientServer.bs 100 5 {Library ClientServer}}}
Alias ClientServer::MaxLat 8 {position {%/Libraries/ClientServer.bs 263 5 {Library ClientServer}}}
Interface {MasterSlave::Master#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Source#(req_t) req {}} {interface SourceSink::Sink#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 44 11}}
Interface {MasterSlave::Slave#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Sink#(req_t) req {}} {interface SourceSink::Source#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 50 11}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimCHandle Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 58 19}}
Alias MemSim::MemSimSizeT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 59 19}}
Alias MemSim::MemSimAddrT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 60 34}}
Alias MemSim::MemSimAccessSizeT Bit#(8) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 61 18}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}
Alias MemSim::MemSimByteEnT Bit#(8) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 68 18}}
