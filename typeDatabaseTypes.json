
Interface {TagControllerAXI::TagControllerAXI#(numeric type id_, numeric type addr_, numeric type data_)} polymorphic {members {{interface {AXI4_Types::AXI4_Master#(6, addr_, data_, 0, 0, 0, 0, 0)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, 0, 1, 0, 0, 1)} slave {}} {method {Action clear {} {{(* ports = [] *)}}}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/TagControllerAXI.bsv 60 11}}
Interface TagController::TagControllerIfc {members {{interface {MasterSlaveCHERI::Slave#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} cache {}} {interface {MasterSlaveCHERI::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} memory {}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/TagController.bsv 71 11}}
Struct TagController::AddrFrame {members {{Bool tagOnlyRead {width 1}} {Bit#(2) bank {width 2}} {Bit#(1) masterID {width 1}} {Bit#(5) transactionID {width 5}}}} {width 9} {position {../libs/TagController/TagController/TagController.bsv 86 3}}
Alias TagController::LogFlitsPerCap 1 {position {../libs/TagController/TagController/TagController.bsv 91 48}}
Alias TagController::CapsPerFlit 1 {position {../libs/TagController/TagController/TagController.bsv 92 50}}
Enum TagController::MemReqType {members {TagLookupReq StdReq}} {width 1} {position {../libs/TagController/TagController/TagController.bsv 93 37}}
Alias TagController::InFlight 4 {position {../libs/TagController/TagController/TagController.bsv 94 11}}
Alias TagController::MaxBurstLength 8 {position {../libs/TagController/TagController/TagController.bsv 95 11}}
Alias TagController::Frame Bit#(3) {position {../libs/TagController/TagController/TagController.bsv 96 37}}
Alias TagController::ReqIdCount Bit#(8) {position {../libs/TagController/TagController/TagController.bsv 97 17}}
Struct TagController::TagReqId {members {{MemTypesCHERI::ReqId reqId {width 6}} {Bit#(8) count {width 8}}}} {width 14} {position {../libs/TagController/TagController/TagController.bsv 102 3}}
Alias MultiLevelTagLookup::LineTags {Vector::Vector#(4, Bool)} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 47 52}}
Struct MultiLevelTagLookup::CheriTagWrite {members {{{Vector::Vector#(4, Bool)} tags {width 4}} {{Vector::Vector#(4, Bool)} writeEnable {width 4}}}} {width 8} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 51 3}}
Struct MultiLevelTagLookup::CheriTagRequest {members {{{MemTypesCHERI::PhyByteAddress#(40, 8)} addr {width 40}} {{MultiLevelTagLookup::CheriTagRequest_$operation} operation {width 9}}}} {width 49} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 59 3}}

Struct MultiLevelTagLookup::CheriTagResponse {members {{{MultiLevelTagLookup::CheriTagResponse_$tags} tags {width 5}}}} {width 5} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 66 3}}

Interface MultiLevelTagLookup::TagLookupIfc {members {{interface {MasterSlaveCHERI::Slave#(MultiLevelTagLookup::CheriTagRequest, MultiLevelTagLookup::CheriTagResponse)} cache {}} {interface {MasterSlaveCHERI::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} memory {}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 68 11}}
Enum MultiLevelTagLookup::State {members {Init Idle ReadTag SetTag ClearTag FoldZeroes}} {width 3} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 81 66}}
Alias MultiLevelTagLookup::CapsPerLine 4 {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 82 30}}
TaggedUnion MultiLevelTagLookup::TableEntry {members {{Bool Node {width 1}} {{Vector::Vector#(4, Bool)} Leaf {width 4}}}} {width 5} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 87 3}}
Struct MultiLevelTagLookup::TableLvl {members {{{MemTypesCHERI::PhyByteAddress#(40, 8)} startAddr {width 40}} {Integer size} {Integer shiftAmnt} {Integer groupFactor} {Integer groupFactorLog}}} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 95 3}}
Alias MultiLevelTagLookup::TDepth UInt#(2) {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 102 18}}
Interface {CacheCore::CacheCore#(numeric type ways, numeric type keyBits, numeric type inFlight)} polymorphic {members {{method {Bool canPut {} {{(* ports = [] *)}}}} {method {Action put {{MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)}} {{(* ports = ["req"] *)}}}} {interface {MasterSlaveCHERI::CheckedGet#(MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} response {{(* ports = [] *)}}} {method {Action nextWillCommit Bool {{(* ports = ["nextCommitting"] *)}}}} {method {Action invalidate {{MemTypesCHERI::PhyByteAddress#(40, 8)}} {{(* ports = ["addr"] *)}}}} {method {ActionValue#(Bool) invalidateDone {} {{(* ports = [] *)}}}} {method {CacheCore::EventsCacheCore events {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 79 11}}
Alias {CacheCore::Tag#(numeric type tagBits)} Bit#(tagBits) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 96 23}}
Alias {CacheCore::Key#(numeric type keyBits)} Bit#(keyBits) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 97 23}}
Alias CacheCore::Offset Bit#(3) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 98 28}}
Struct {CacheCore::CacheAddress#(numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bit#(tagBits) tag} {Bit#(keyBits) key} {UInt#(2) bank {width 2}} {Bit#(3) offset {width 3}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 104 3}}
Alias {CacheCore::Way#(numeric type ways)} Bit#(TLog#(ways)) {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 105 27}}
Struct {CacheCore::DataKey#(numeric type ways, numeric type keyBits)} polymorphic {members {{Bit#(keyBits) key} {UInt#(2) bank {width 2}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 110 3}}
Struct CacheCore::CacheCommit {members {{Bit#(5) id {width 5}} {Bool commit {width 1}}}} {width 6} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 115 3}}
Alias CacheCore::LineCapTags {Vector::Vector#(4, Vector::Vector#(1, Bool))} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 118 35}}
Struct {CacheCore::TagLine#(numeric type tagBits)} polymorphic {members {{Bit#(tagBits) tag} {Bool dirty {width 1}} {{Vector::Vector#(8, Bool)} valid {width 8}} {Bool pendMem {width 1}} {{Vector::Vector#(4, Vector::Vector#(1, Bool))} capTags {width 4}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 129 3}}
Enum CacheCore::CacheState {members {Init Serving}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 142 30}}
Enum CacheCore::LookupCommand {members {Serve Writeback MemResponse}} {width 2} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 143 46}}
Enum CacheCore::WriteMissBehaviour {members {WriteThrough WriteAllocate}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 145 46}}
Enum CacheCore::ResponseBehaviour {members {OnlyReadResponses RespondAll}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 146 46}}
Enum CacheCore::OrderBehaviour {members {InOrder OutOfOrder}} {width 1} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 147 36}}
Struct {CacheCore::AddrTagWay#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{{CacheCore::CacheAddress#(keyBits, tagBits)} addr} {CacheCore::TagLine#(tagBits) tag} {Bit#(TLog#(ways)) way} {Bool cached {width 1}} {MemTypesCHERI::ReqId reqId {width 6}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 155 3}}
Struct {CacheCore::InvalidateToken#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bit#(tagBits) tag} {Bit#(keyBits) key} {Bit#(TLog#(ways)) way} {Bool valid {width 1}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 162 3}}
Struct {CacheCore::ControlToken#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{CacheCore::LookupCommand command {width 2}} {{MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} req {width 141}} {{CacheCore::CacheAddress#(keyBits, tagBits)} addr} {MemTypesCHERI::BytesPerFlit readWidth {width 3}} {{CacheCore::DataKey#(ways, keyBits)} dataKey} {Bit#(TLog#(ways)) way} {Bool last {width 1}} {Bool fresh {width 1}} {{CacheCore::InvalidateToken#(ways, keyBits, tagBits)} invalidate} {CacheCore::TagLine#(tagBits) writebackTag} {MemTypesCHERI::Error rspError {width 2}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 176 3}}
Struct CacheCore::ResponseToken {members {{{MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64)} resp {width 77}} {{MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} req {width 141}} {MemTypesCHERI::ReqId rspId {width 6}} {Bool reportResponse {width 1}} {MemTypesCHERI::ReqId deqId {width 6}} {Bool deqReqCommits {width 1}} {Bool enqRetryReq {width 1}}}} {width 233} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 186 3}}
Struct {CacheCore::RequestRecord#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bit#(keyBits) key} {MemTypesCHERI::ReqId inId {width 6}} {Bool inDone {width 1}} {MemTypesCHERI::ReqId outId {width 6}} {Bool cached {width 1}} {CacheCore::TagLine#(tagBits) oldTag} {Bit#(TLog#(ways)) oldWay} {Bool oldDirty {width 1}} {Bool write {width 1}}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 198 3}}
Struct CacheCore::ReqIdWithSC {members {{MemTypesCHERI::ReqId inId {width 6}} {Bool isSC {width 1}} {Bool scResult {width 1}}}} {width 8} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 204 3}}
Struct {CacheCore::TagUpdate#(numeric type ways, numeric type keyBits, numeric type tagBits)} polymorphic {members {{Bool doWrite {width 1}} {Bit#(keyBits) key} {CacheCore::TagLine#(tagBits) newTag} {Bit#(TLog#(ways)) way}}} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 211 3}}
Alias CacheCore::ByteEnable {Vector::Vector#(8, Bool)} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 213 48}}
Struct CacheCore::EventsCacheCore {members {{Bool evt_WRITE {width 1}} {Bool evt_WRITE_MISS {width 1}} {Bool evt_READ {width 1}} {Bool evt_READ_MISS {width 1}} {Bool evt_EVICT {width 1}} {Bool evt_SET_TAG_WRITE {width 1}} {Bool evt_SET_TAG_READ {width 1}}}} {width 7} {position {../libs/TagController/TagController/CacheCore/CacheCore.bsv 226 5}}
Struct CacheCorderer::TransRecord {members {{Bool ongoing {width 1}} {MemTypesCHERI::ReqId id {width 6}} {UInt#(2) first {width 2}} {UInt#(2) last {width 2}} {UInt#(2) next {width 2}}}} {width 13} {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 44 3}}
Struct CacheCorderer::ReqRec {members {{MemTypesCHERI::ReqId id {width 6}} {Bit#(35) line {width 35}} {UInt#(2) first {width 2}} {UInt#(2) last {width 2}} {VnD::VnD#(MemTypesCHERI::ReqId) idBeforeMe {width 7}}}} {width 52} {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 60 3}}
Alias CacheCorderer::Masters 2 {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 62 29}}
Interface {CacheCorderer::CacheCorderer#(numeric type inFlight)} polymorphic {members {{method {Bool reqsEmpty {} {{(* ports = [] *)}}}} {method {Bool reqsFull {} {{(* ports = [] *)}}}} {method {Bool lookupCheckId MemTypesCHERI::ReqId {{(* ports = ["id"] *)}}}} {method {Bool lookupIsOngoing {} {{(* ports = [] *)}}}} {method {UInt#(2) lookupFlit {MemTypesCHERI::ReqId UInt#(2)} {{(* ports = ["id", "original"] *)}}}} {method {Action lookupReport {MemTypesCHERI::ReqId UInt#(2) UInt#(2) UInt#(2)} {{(* ports = ["id", "flit", "first", "last"] *)}}}} {method {Action slaveReq {MemTypesCHERI::ReqId Bit#(35) UInt#(2) UInt#(2)} {{(* ports = ["id", "line", "first", "last"] *)}}}} {method {Bool slaveReqServeReady {MemTypesCHERI::ReqId Bit#(35)} {{(* ports = ["id", "line"] *)}}}} {method {ActionValue#(Bool) slaveReqExecuteReady {MemTypesCHERI::ReqId UInt#(2)} {{(* ports = ["id", "flit"] *)}}}} {method {Bool slaveRspIsOngoing {} {{(* ports = [] *)}}}} {method {Bool slaveRspLast {MemTypesCHERI::ReqId UInt#(2)} {{(* ports = ["id", "flit"] *)}}}} {method {Action slaveRsp {MemTypesCHERI::ReqId Bool} {{(* ports = ["id", "last"] *)}}}} {method {Bool mastReqsEmpty {} {{(* ports = [] *)}}}} {method {Bool mastReqsFull {} {{(* ports = [] *)}}}} {method {Bit#(5) mastReqsSpaces {} {{(* ports = [] *)}}}} {method {Bit#(5) mastNextId {} {{(* ports = [] *)}}}} {method {Bool mastCheckId MemTypesCHERI::ReqId {{(* ports = ["id"] *)}}}} {method {Action mastReq {MemTypesCHERI::ReqId UInt#(2) UInt#(2) Bit#(35) Bool} {{(* ports = ["id", "first", "last", "line", "read"] *)}}}} {method {Action mastRsp {MemTypesCHERI::ReqId Bool Bool} {{(* ports = ["id", "read", "last"] *)}}}} {method {UInt#(2) nextMastRspFlit {MemTypesCHERI::ReqId Bool} {{(* ports = ["id", "read"] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/CacheCorderer.bsv 80 11}}
Struct {Bag::Entry#(type keyType, type datType)} polymorphic {members {{keyType key} {datType dat}}} {position {../libs/TagController/TagController/CacheCore/Bag.bsv 46 3}}
Interface {Bag::Bag#(numeric type numElems, type keyType, type datType)} polymorphic {members {{method {VnD::VnD#(datType) isMember keyType {{(* ports = ["x"] *)}}}} {method {Bool dataMatch datType {{(* ports = ["x"] *)}}}} {method {Action insert {keyType datType} {{(* ports = ["x", "d"] *)}}}} {method {Action update {keyType datType} {{(* ports = ["x", "d"] *)}}}} {method {Bool full {} {{(* ports = [] *)}}}} {method {Bool nextFull {} {{(* ports = [] *)}}}} {method {Bool empty {} {{(* ports = [] *)}}}} {method {Action remove keyType {{(* ports = ["x"] *)}}}} {method {VnD::VnD#(keyType) nextKey {} {{(* ports = [] *)}}}} {method {VnD::VnD#(datType) nextData {} {{(* ports = [] *)}}}} {method {Action iterateNext {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/Bag.bsv 48 11}}
Interface {Bag::FFBag#(numeric type numElems, type keyType, type datType, numeric type depth)} polymorphic {members {{method {Action enq {keyType datType} {{(* ports = ["x", "d"] *)}}}} {method {VnD::VnD#(datType) first keyType {{(* ports = ["x"] *)}}}} {method {Action deq keyType {{(* ports = ["x"] *)}}}} {method {Bool full {} {{(* ports = [] *)}}}}}} {position {../libs/TagController/TagController/CacheCore/Bag.bsv 172 11}}
Struct {VnD::VnD#(type a)} polymorphic {members {{Bool v {width 1}} {a d}}} {position {../libs/TagController/TagController/CacheCore/VnD.bsv 35 3}}

Typeclass {SimUtils::PrintLog#(type a)} {members {{{function Action f(a x1)} printLog} {{function Action f(a x1)} printTLog} {{function Action f(String x1, a x2)} printLogPlusArgs} {{function Action f(String x1, a x2)} printTLogPlusArgs} {{function Action f(String x1, a x2)} printPlusArgs} {{function Action f(String x1, a x2)} printTPlusArgs}}} {instances {SimUtils::PrintLog#(Fmt) SimUtils::PrintLog#(String)}} {position {../libs/BlueStuff/BlueUtils/SimUtils.bsv 44 11}}
Interface {SimpleUtils::ArchReg#(type t)} polymorphic {members {{method {t _read {} {{(* ports = [] *)}}}} {method {Action _write t {{(* ports = ["x"] *)}}}} {interface WriteOnly#(t) early {}} {interface Reg#(t) late {}} {method {Bool needCommit {} {{(* ports = [] *)}}}} {method {t commitVal {} {{(* ports = [] *)}}}} {method {Action commit {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/SimpleUtils.bsv 46 11}}
Interface {SimpleUtils::ArchRegFile#(numeric type n, type a)} polymorphic {members {{method {{Vector::Vector#(n, SimpleUtils::ArchReg#(a))} r {} {}}} {method {Action commit {} {{(* ports = [] *)}}}} {method {Bit#(TLog#(n)) rd_idx {} {{(* ports = [] *)}}}} {method {a rd_old_val {} {{(* ports = [] *)}}}} {method {a rd_new_val {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/SimpleUtils.bsv 86 11}}
Struct {MemTypes::BitPO#(numeric type n)} polymorphic {members {{Bit#(n) val}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 50 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}


TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {MemTypes::Mem#(type addr_t, type data_t)} {MasterSlave::Slave#(MemTypes::MemReq#(addr_t, data_t), MemTypes::MemRsp#(data_t))} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 196 3}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {MemBRAM::BRAM2#(numeric type a0w, numeric type d0w, numeric type a1w, numeric type d1w)} polymorphic {members {{interface {MemBRAM::BRAM#(a0w, d0w)} p0 {}} {interface {MemBRAM::BRAM#(a1w, d1w)} p1 {}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 51 11}}
Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}
Interface {FF::FF#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 64 11}}
Interface {FF::FFNext#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {data next {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool nextNotEmpty {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 74 11}}
Interface {FF::FF#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Action clear {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 64 11}}
Interface {FF::FFNext#(type data, numeric type depth)} polymorphic {members {{method {Action enq data {{(* ports = ["x"] *)}}}} {method {Action deq {} {{(* ports = [] *)}}}} {method {data first {} {{(* ports = [] *)}}}} {method {data next {} {{(* ports = [] *)}}}} {method {Bool notFull {} {{(* ports = [] *)}}}} {method {Bool notEmpty {} {{(* ports = [] *)}}}} {method {Bool nextNotEmpty {} {{(* ports = [] *)}}}} {method {{Bit#(TAdd#(TLog#(depth), 1))} remaining {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/FF.bsv 74 11}}
Struct {MemTypes::BitPO#(numeric type n)} polymorphic {members {{Bit#(n) val}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 50 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}


TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {MemTypes::Mem#(type addr_t, type data_t)} {MasterSlave::Slave#(MemTypes::MemReq#(addr_t, data_t), MemTypes::MemRsp#(data_t))} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 196 3}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {MemBRAM::BRAM2#(numeric type a0w, numeric type d0w, numeric type a1w, numeric type d1w)} polymorphic {members {{interface {MemBRAM::BRAM#(a0w, d0w)} p0 {}} {interface {MemBRAM::BRAM#(a1w, d1w)} p1 {}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 51 11}}
Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}

Alias MemSim::MemSimMaxAddrSize 64 {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 56 12}}
Alias MemSim::MemSimCHandle Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 58 19}}
Alias MemSim::MemSimSizeT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 59 19}}
Alias MemSim::MemSimAddrT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 60 34}}
Alias MemSim::MemSimAccessSizeT Bit#(8) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 61 18}}
Alias MemSim::MemSimDataT Bit#(64) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 62 19}}
Alias MemSim::MemSimByteEnT Bit#(8) {position {../libs/BlueStuff/BlueUtils/MemSim.bsv 68 18}}
Interface {MemBRAM::BRAM#(numeric type aw, numeric type dw)} polymorphic {members {{method {Action put {{Bit#(TDiv#(dw, 8))} Bit#(aw) Bit#(dw)} {{(* ports = ["we", "addr", "d"] *)}}}} {method {Bit#(dw) peek {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 46 11}}
Interface {MemBRAM::BRAM2#(numeric type a0w, numeric type d0w, numeric type a1w, numeric type d1w)} polymorphic {members {{interface {MemBRAM::BRAM#(a0w, d0w)} p0 {}} {interface {MemBRAM::BRAM#(a1w, d1w)} p1 {}}}} {position {../libs/BlueStuff/BlueUtils/MemBRAM.bsv 51 11}}
Struct {MemTypes::BitPO#(numeric type n)} polymorphic {members {{Bit#(n) val}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 50 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}


TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {MemTypes::Mem#(type addr_t, type data_t)} {MasterSlave::Slave#(MemTypes::MemReq#(addr_t, data_t), MemTypes::MemRsp#(data_t))} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 196 3}}
Typeclass {Virtualizable::Virtualizable#(type t)} {members {{{function a#(Array#(t)) f(t x1, Integer x2)   provisos (IsModule#(a, b))} virtualize}}} {instances {{Virtualizable::Virtualizable#(ClientServer::Server#(req_t, rsp_t))   provisos (Bits#(rsp_t, _b), Bits#(req_t, _a), Virtualizable::NeedRsp#(req_t))} {Virtualizable::Virtualizable#(MasterSlave::Slave#(req_t, rsp_t))   provisos (Bits#(rsp_t, b__), Bits#(req_t, a__), Virtualizable::NeedRsp#(req_t))} {Virtualizable::Virtualizable#(Reg#(t))   provisos (Bits#(t, _a))}}} {position {../libs/BlueStuff/BlueBasics/Virtualizable.bsv 59 11}}
Typeclass {Virtualizable::NeedRsp#(type req_t)} {members {{{function Bool f(req_t x1)} needRsp}}} {instances {{Virtualizable::NeedRsp#(Either#(a, b))} {Virtualizable::NeedRsp#(MemTypes::MemReq#(a, b))}}} {position {../libs/BlueStuff/BlueBasics/Virtualizable.bsv 67 11}}
Interface TV_Taps::DM_Mem_Tap_IFC {members {{interface {AXI4_Types::AXI4_Slave#(4, 64, 64, 0, 1, 0, 0, 1)} slave {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} master {}} {interface GetPut::Get#(TV_Info::Trace_Data) trace_data_out {}}}} {position {../src_Core/Core/TV_Taps.bsv 56 11}}
Interface TV_Taps::DM_GPR_Tap_IFC {members {{interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} client {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} server {}} {interface GetPut::Get#(TV_Info::Trace_Data) trace_data_out {}}}} {position {../src_Core/Core/TV_Taps.bsv 143 11}}
Interface TV_Taps::DM_FPR_Tap_IFC {members {{interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} client {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} server {}} {interface GetPut::Get#(TV_Info::Trace_Data) trace_data_out {}}}} {position {../src_Core/Core/TV_Taps.bsv 185 11}}
Interface TV_Taps::DM_CSR_Tap_IFC {members {{interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} client {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} server {}} {interface GetPut::Get#(TV_Info::Trace_Data) trace_data_out {}}}} {position {../src_Core/Core/TV_Taps.bsv 227 11}}
Enum CPU::CPU_State {members {CPU_RESET1 CPU_RESET2 CPU_GDB_PAUSING CPU_DEBUG_MODE CPU_RUNNING CPU_TRAP CPU_START_TRAP_HANDLER CPU_CSRRW_2 CPU_CSRR_S_or_C_2 CPU_SCR_W_2 CPU_CSRRX_RESTART CPU_FENCE_I CPU_FENCE CPU_SFENCE_VMA CPU_WFI_PAUSED}} {width 4} {position {../src_Core/CPU/CPU.bsv 147 6}}
Enum MultiLevelTagLookup::State {members {Init Idle ReadTag SetTag ClearTag FoldZeroes}} {width 3} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 81 66}}
Interface {MMU_Cache::MMU_Cache_IFC#(numeric type mID)} polymorphic {members {{method {Action set_verbosity Bit#(4) {{(* ports = ["verbosity"] *)}}}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action req {MMU_Cache_Common::CacheOp Bit#(3) Bool Bit#(5) Bit#(64) {Tuple2#(Bool, Bit#(128))} Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["op", "width_code", "is_unsigned", "amo_funct5", "addr", "st_value", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action commit {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) addr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bool, Bit#(128))} cword {{(* ports = [] *)} {(* always_ready  *)}}} {interface {Tuple2#(Bool, Bit#(128))} st_amo_val {{(* ports = [] *)} {(* always_ready  *)}}} {method {Bool exc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(6) exc_code {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_flush {}} {method {Action tlb_flush {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(mID, 64, 64, 0, 1, 0, 0, 1)} mem_master {}} {method {Near_Mem_IFC::EventsCache events {} {{(* ports = [] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 94 11}}
Alias MMU_Cache::MMU_DCache_IFC MMU_Cache::MMU_Cache_IFC#(4) {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 165 36}}
Alias MMU_Cache::MMU_ICache_IFC MMU_Cache::MMU_Cache_IFC#(5) {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 166 32}}
Enum MMU_Cache::CTagState {members {CTAG_EMPTY CTAG_CLEAN}} {width 1} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 265 41}}
Struct MMU_Cache::State_and_CTag {members {{MMU_Cache::CTagState state {width 1}} {Bit#(52) ctag {width 52}}}} {width 53} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 271 6}}
Alias MMU_Cache::State_and_CTag_CSet {Vector::Vector#(2, MMU_Cache::State_and_CTag)} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 274 49}}
Alias MMU_Cache::CWord_Set {Vector::Vector#(2, Tuple2#(Bit#(1), Bit#(128)))} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 275 49}}
Enum MMU_Cache::Module_State {members {MODULE_PRERESET MODULE_RESETTING MODULE_READY MODULE_RUNNING MODULE_EXCEPTION_RSP PTW_START PTW_LEVEL_2 PTW_LEVEL_1 PTW_LEVEL_0 CACHE_START_REFILL CACHE_REFILL CACHE_REREQ CACHE_ST_AMO_RSP IO_REQ IO_AWAITING_READ_RSP IO_READ_RSP IO_AWAITING_AMO_READ_RSP}} {width 5} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 300 6}}
Enum MMU_Cache::Requestor {members {REQUESTOR_RESET_IFC REQUESTOR_FLUSH_IFC}} {width 1} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 307 57}}
Struct MMU_Cache::Fabric_Write_Fields {members {{Bit#(64) fabric_addr {width 64}} {Bit#(64) fabric_data {width 64}} {Bit#(1) fabric_user {width 1}} {Bit#(8) fabric_strb {width 8}} {AXI4_Common_Types::AXI4_Size fabric_size {width 3}} {Bit#(64) fabric_2_data {width 64}} {Bit#(1) fabric_2_user {width 1}} {Bit#(8) fabric_2_strb {width 8}}}} {width 213} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 340 3}}
Interface TLB::TLB_IFC {members {{method {Action mv_vm_put_va Bit#(64) {{(* ports = ["full_va"] *)}}}} {method {MMU_Cache_Common::VM_Xlate_Result mv_vm_get_xlate {Bit#(64) Bool Bool Bit#(2) Bit#(1) Bit#(1)} {{(* ports = ["satp", "read_not_write", "cap", "priv", "sstatus_SUM", "mstatus_MXR"] *)}}}} {method {Action ma_insert {Bit#(16) Bit#(27) Bit#(64) Bit#(2) Bit#(64)} {{(* ports = ["asid", "vpn", "pte", "level", "pte_pa"] *)}}}} {method {Action ma_flush {} {{(* ports = [] *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 49 11}}
Struct TLB::TLB_Lookup_Result {members {{Bool hit {width 1}} {Bit#(64) pte {width 64}} {Bit#(2) pte_level {width 2}} {Bit#(64) pte_pa {width 64}}}} {width 131} {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 83 6}}
Alias {TLB::TLB_Tag#(numeric type lvl, numeric type idx_sz)} {Bit#(TSub#(TMul#(TSub#(3, lvl), 9), idx_sz))} {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 201 4}}
Alias TLB::TLB2_Size 4 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 206 38}}
Alias TLB::TLB2_Index_sz 2 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 207 38}}
Alias TLB::TLB2_Index Bit#(2) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 208 38}}
Alias TLB::TLB2_Tag Bit#(7) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 209 38}}
Alias TLB::TLB1_Size 4 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 214 38}}
Alias TLB::TLB1_Index_sz 2 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 215 38}}
Alias TLB::TLB1_Index Bit#(2) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 216 38}}
Alias TLB::TLB1_Tag Bit#(16) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 217 38}}
Alias TLB::TLB0_Size 512 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 221 49}}
Alias TLB::TLB0_Assos 2 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 222 49}}
Alias TLB::TLB0_Index_sz 8 {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 223 49}}
Alias TLB::TLB0_Index Bit#(8) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 224 49}}
Alias TLB::TLB0_Tag Bit#(19) {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 225 49}}
Struct TLB::TLBE {members {{Bit#(16) asid_tag {width 16}} {Bit#(64) pte {width 64}} {Bit#(64) pte_pa {width 64}}}} {width 144} {position {../src_Core/Near_Mem_VM_WT_L1/TLB.bsv 240 6}}
Enum MMU_Cache_Common::VM_Xlate_Outcome {members {VM_XLATE_OK VM_XLATE_TLB_MISS VM_XLATE_EXCEPTION}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 90 69}}
Alias PLIC_16_2_7::PLIC_N_Targets 2 {position {../src_Core/PLIC/PLIC_16_2_7.bsv 27 13}}
Alias PLIC_16_2_7::PLIC_Max_Priority 7 {position {../src_Core/PLIC/PLIC_16_2_7.bsv 28 13}}
Alias PLIC_16_2_7::PLIC_IFC_16_2_7 {PLIC::PLIC_IFC#(0, 2, 7)} {position {../src_Core/PLIC/PLIC_16_2_7.bsv 32 52}}
Interface CPU_Stage3::CPU_Stage3_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_Stage3 out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq CPU_Globals::Data_Stage2_to_Stage3 {{(* ports = ["x"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}} {method {Action show_state {} {{(* ports = [] *)}}}}}} {position {../src_Core/CPU/CPU_Stage3.bsv 58 11}}
Interface CPU_Stage2::CPU_Stage2_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_Stage2 out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq {CPU_Globals::Data_Stage1_to_Stage2 Bool} {{(* ports = ["x", "valid"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_Stage2.bsv 92 11}}
Interface CPU_Stage1::CPU_Stage1_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_Stage1 out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq CPU_Globals::Data_StageD_to_Stage1 {{(* ports = ["data"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_Stage1.bsv 56 11}}
Struct CSR_RegFile_MSU::CSR_Write_Result {members {{Bit#(64) new_csr_value {width 64}} {Maybe#(Bit#(64)) m_new_csr_value2 {width 65}}}} {width 129} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 75 1}}
Struct CSR_RegFile_MSU::AccessPerms {members {{Bool exists {width 1}} {Bool requires_asr {width 1}}}} {width 2} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 84 4}}
Interface CSR_RegFile_MSU::CSR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Maybe#(Bit#(64)) read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(64)) read_csr_port2 Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(CHERICC_Fat::CapFat) read_scr Bit#(5) {{(* ports = ["scr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(Maybe#(Bit#(64))) mav_read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CSR_RegFile_MSU::CSR_Write_Result) mav_csr_write {Bit#(12) Bit#(64)} {{(* ports = ["csr_addr", "word"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CHERICC_Fat::CapFat) mav_scr_write {Bit#(5) CHERICC_Fat::CapFat} {{(* ports = ["scr_addr", "cap"] *)} {(* always_ready  *)}}}} {method {Bit#(3) read_frm {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) read_fflags {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) mv_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Action ma_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {Action ma_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {ISA_Decls::MISA read_misa {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_mstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_sstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_ustatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_satp {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(ISA_Decls::Trap_Info_CSR) csr_trap_actions {Bit#(2) CHERICC_Fat::CapPipe Bool Bool Bit#(5) Bit#(6) Bit#(6) Bit#(64)} {{(* ports = ["from_priv", "pcc", "nmi", "interrupt", "cheri_exc_code", "cheri_exc_reg", "exc_code", "xtval"] *)}}}} {method {{ActionValue#(Tuple3#(CHERICC_Fat::CapPipe, Bit#(2), Bit#(64)))} csr_ret_actions Bit#(2) {{(* ports = ["from_priv"] *)}}}} {method {Bit#(64) read_csr_minstret {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action csr_minstret_incr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mcycle {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mtime {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action send_performance_events {{Vector::Vector#(115, Bit#(64))}} {{(* ports = ["evts"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_1 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_2 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_scr {Bit#(2) Bit#(5) Bool} {{(* ports = ["priv", "scr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {Bool csr_counter_read_fault {Bit#(2) Bit#(12)} {{(* ports = ["priv", "csr_addr"] *)} {(* always_ready  *)}}}} {method {Bit#(64) csr_mip_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action m_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(6)) interrupt_pending Bit#(2) {{(* ports = ["cur_priv"] *)} {(* always_ready  *)}}}} {method {Bool wfi_resume {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Bool nmi_pending {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_dpcc {} {{(* ports = [] *)}}}} {method {Action write_dpcc CHERICC_Fat::CapPipe {{(* ports = ["pcc"] *)}}}} {method {Bool dcsr_break_enters_debug Bit#(2) {{(* ports = ["cur_priv"] *)}}}} {method {Bool read_dcsr_step {} {{(* ports = [] *)}}}} {method {Action write_dcsr_cause_priv {DM_Common::DCSR_Cause Bit#(2)} {{(* ports = ["cause", "priv"] *)} {(* always_ready  *)}}}} {method {Action debug {} {{(* ports = [] *)}}}}}} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 86 11}}
Struct CSR_RegFile_MSU::CSR_Write_Result {members {{Bit#(64) new_csr_value {width 64}} {Maybe#(Bit#(64)) m_new_csr_value2 {width 65}}}} {width 129} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 75 1}}
Struct CSR_RegFile_MSU::AccessPerms {members {{Bool exists {width 1}} {Bool requires_asr {width 1}}}} {width 2} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 84 4}}
Interface CSR_RegFile_MSU::CSR_RegFile_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Maybe#(Bit#(64)) read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(64)) read_csr_port2 Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {Maybe#(CHERICC_Fat::CapFat) read_scr Bit#(5) {{(* ports = ["scr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(Maybe#(Bit#(64))) mav_read_csr Bit#(12) {{(* ports = ["csr_addr"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CSR_RegFile_MSU::CSR_Write_Result) mav_csr_write {Bit#(12) Bit#(64)} {{(* ports = ["csr_addr", "word"] *)} {(* always_ready  *)}}}} {method {ActionValue#(CHERICC_Fat::CapFat) mav_scr_write {Bit#(5) CHERICC_Fat::CapFat} {{(* ports = ["scr_addr", "cap"] *)} {(* always_ready  *)}}}} {method {Bit#(3) read_frm {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) read_fflags {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(5) mv_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Action ma_update_fcsr_fflags Bit#(5) {{(* ports = ["flags"] *)} {(* always_ready  *)}}}} {method {Bit#(64) mv_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {Action ma_update_mstatus_fs Bit#(2) {{(* ports = ["fs"] *)} {(* always_ready  *)}}}} {method {ISA_Decls::MISA read_misa {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_mstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_sstatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_ustatus {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_satp {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {ActionValue#(ISA_Decls::Trap_Info_CSR) csr_trap_actions {Bit#(2) CHERICC_Fat::CapPipe Bool Bool Bit#(5) Bit#(6) Bit#(6) Bit#(64)} {{(* ports = ["from_priv", "pcc", "nmi", "interrupt", "cheri_exc_code", "cheri_exc_reg", "exc_code", "xtval"] *)}}}} {method {{ActionValue#(Tuple3#(CHERICC_Fat::CapPipe, Bit#(2), Bit#(64)))} csr_ret_actions Bit#(2) {{(* ports = ["from_priv"] *)}}}} {method {Bit#(64) read_csr_minstret {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action csr_minstret_incr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mcycle {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) read_csr_mtime {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action send_performance_events {{Vector::Vector#(115, Bit#(64))}} {{(* ports = ["evts"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_1 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_2 {Bit#(2) Bit#(12) Bool} {{(* ports = ["priv", "csr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {CSR_RegFile_MSU::AccessPerms access_permitted_scr {Bit#(2) Bit#(5) Bool} {{(* ports = ["priv", "scr_addr", "read_not_write"] *)} {(* always_ready  *)}}}} {method {Bool csr_counter_read_fault {Bit#(2) Bit#(12)} {{(* ports = ["priv", "csr_addr"] *)} {(* always_ready  *)}}}} {method {Bit#(64) csr_mip_read {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action m_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Maybe#(Bit#(6)) interrupt_pending Bit#(2) {{(* ports = ["cur_priv"] *)} {(* always_ready  *)}}}} {method {Bool wfi_resume {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_ready  *)}}}} {method {Bool nmi_pending {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapPipe read_dpcc {} {{(* ports = [] *)}}}} {method {Action write_dpcc CHERICC_Fat::CapPipe {{(* ports = ["pcc"] *)}}}} {method {Bool dcsr_break_enters_debug Bit#(2) {{(* ports = ["cur_priv"] *)}}}} {method {Bool read_dcsr_step {} {{(* ports = [] *)}}}} {method {Action write_dcsr_cause_priv {DM_Common::DCSR_Cause Bit#(2)} {{(* ports = ["cause", "priv"] *)} {(* always_ready  *)}}}} {method {Action debug {} {{(* ports = [] *)}}}}}} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 86 11}}
Enum CSR_RegFile_MSU::RF_State {members {RF_RESET_START RF_RUNNING}} {width 1} {position {../src_Core/RegFiles/CSR_RegFile_MSU.bsv 347 45}}
Interface SoC_Map::SoC_Map_IFC {members {{method {Routable::Range#(64) m_plic_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_near_mem_io_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_ethernet_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_dma_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_uart16550_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_uart16550_1_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_iic_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_axi_quad_spi_0_full_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_axi_quad_spi_0_lite_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_axi_quad_spi_1_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_gpio_0_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_gpio_1_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_boot_rom_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_ddr4_0_uncached_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Routable::Range#(64) m_ddr4_0_cached_addr_range {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool m_is_mem_addr Bit#(64) {{(* ports = ["addr"] *)} {(* always_ready  *)}}}} {method {Bool m_is_IO_addr Bit#(64) {{(* ports = ["addr"] *)} {(* always_ready  *)}}}} {method {Bool m_is_near_mem_IO_addr Bit#(64) {{(* ports = ["addr"] *)} {(* always_ready  *)}}}} {method {Bit#(64) m_pc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapFat m_pcc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapFat m_ddc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapFat m_mtcc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {CHERICC_Fat::CapFat m_mepcc_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) m_mtvec_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) m_nmivec_reset_value {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {src_BSV/SoC_Map.bsv 76 11}}
Alias SoC_Map::N_External_Interrupt_Sources 0 {position {src_BSV/SoC_Map.bsv 382 13}}
Interface {Core_IFC::Core_IFC#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 80 11}}
Interface {Core_IFC::Core_IFC_Synth#(numeric type t_n_interrupt_sources)} polymorphic {members {{interface {ClientServer::Server#(Bool, Bool)} cpu_reset_server {}} {interface {AXI4_Types::AXI4_Master_Sig#(5, 64, 64, 0, 0, 0, 0, 0)} cpu_imem_master {}} {interface {AXI4_Types::AXI4_Master_Sig#(6, 64, 64, 0, 0, 0, 0, 0)} core_mem_master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {{Vector::Vector#(t_n_interrupt_sources, PLIC::PLIC_Source_IFC)} core_external_interrupt_sources {} {}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface DM_Common::DMI dm_dmi {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Core/Core_IFC.bsv 190 11}}
Alias PLIC::T_wd_source_id 10 {position {../src_Core/PLIC/PLIC.bsv 61 14}}
Alias PLIC::T_wd_target_id 5 {position {../src_Core/PLIC/PLIC.bsv 62 14}}
Interface PLIC::PLIC_Source_IFC {members {{method {Action m_interrupt_req Bool {{(* ports = ["set_not_clear"] *)} {(* always_enabled  *)} {(* always_ready  *)}}}}}} {position {../src_Core/PLIC/PLIC.bsv 70 11}}
Interface PLIC::PLIC_Target_IFC {members {{method {Bool m_eip {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/PLIC/PLIC.bsv 78 11}}
Interface {PLIC::PLIC_IFC#(numeric type t_n_external_sources, numeric type t_n_targets, numeric type t_max_priority)} polymorphic {members {{method {Action set_verbosity Bit#(4) {{(* ports = ["verbosity"] *)}}}} {method {Action show_PLIC_state {} {{(* ports = [] *)}}}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action set_addr_map {Bit#(64) Bit#(64)} {{(* ports = ["addr_base", "addr_lim"] *)}}}} {interface {AXI4_Types::AXI4_Slave#(5, 64, 64, 0, 0, 0, 0, 0)} axi4_slave {}} {method {{Vector::Vector#(t_n_external_sources, PLIC::PLIC_Source_IFC)} v_sources {} {}}} {method {{Vector::Vector#(t_n_targets, PLIC::PLIC_Target_IFC)} v_targets {} {}}}}} {position {../src_Core/PLIC/PLIC.bsv 86 11}}
Enum MMU_Cache::Module_State {members {MODULE_PRERESET MODULE_RESETTING MODULE_READY MODULE_RUNNING MODULE_EXCEPTION_RSP PTW_START PTW_LEVEL_2 PTW_LEVEL_1 PTW_LEVEL_0 CACHE_START_REFILL CACHE_REFILL CACHE_REREQ CACHE_ST_AMO_RSP IO_REQ IO_AWAITING_READ_RSP IO_READ_RSP IO_AWAITING_AMO_READ_RSP}} {width 5} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache.bsv 300 6}}
Interface Near_Mem_IO_AXI4::Near_Mem_IO_AXI4_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action set_addr_map {Bit#(64) Bit#(64)} {{(* ports = ["addr_base", "addr_lim"] *)}}}} {interface {AXI4_Types::AXI4_Slave#(5, 64, 64, 0, 0, 0, 0, 0)} axi4_slave {}} {interface GetPut::Get#(Bool) get_timer_interrupt_req {}} {interface GetPut::Get#(Bool) get_sw_interrupt_req {}}}} {position {../src_Core/Near_Mem_IO/Near_Mem_IO_AXI4.bsv 91 11}}
Interface CPU_StageF::CPU_StageF_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_StageF out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq {Bit#(2) Bit#(64) Bool Bool Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["epoch", "fetch_addr", "is_cap_mode", "refresh_pcc", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action bp_train {Bit#(64) Bool Bit#(32) CPU_Globals::CF_Info} {{(* ports = ["pc", "is_i32_not_i16", "instr", "cf_info"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_StageF.bsv 47 11}}
Interface CPU_StageD::CPU_StageD_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {CPU_Globals::Output_StageD out {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action deq {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Action enq CPU_Globals::Data_StageF_to_StageD {{(* ports = ["data_stageF_to_stageD"] *)} {(* always_ready  *)}}}} {method {Action set_full Bool {{(* ports = ["full"] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_StageD.bsv 43 11}}
Interface CPU_IFC::CPU_IFC {members {{interface {ClientServer::Server#(Bool, Bool)} hart0_server_reset {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 1, 0, 0, 1)} imem_master {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} mem_master {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {Action m_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action s_external_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action software_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action timer_interrupt_req Bool {{(* ports = ["set_not_clear"] *)}}}} {method {Action nmi_req Bool {{(* ports = ["set_not_clear"] *)}}}} {interface {ClientServer::Server#(Bool, Bool)} hart0_server_run_halt {}} {interface GetPut::Put#(Bit#(4)) hart0_put_other_req {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_gpr_mem_server {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_fpr_mem_server {}} {interface {ClientServer::Server#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_csr_mem_server {}} {method {Action relay_external_events {StatCounters::AXI4_Slave_Events StatCounters::AXI4_Master_Events StatCounters::EventsTGC} {{(* ports = ["slave_evts", "master_evts", "tag_cache_evts"] *)}}}} {method {Action set_verbosity {Bit#(4) Bit#(64)} {{(* ports = ["verbosity", "logdelay"] *)}}}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/CPU/CPU_IFC.bsv 64 11}}

Alias Near_Mem_IFC::Wd_Id_Dma 6 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 57 13}}
Alias Near_Mem_IFC::Wd_Addr_Dma 64 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 58 13}}
Alias Near_Mem_IFC::Wd_Data_Dma 512 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 59 13}}
Alias Near_Mem_IFC::Wd_AW_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 60 13}}
Alias Near_Mem_IFC::Wd_W_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 61 13}}
Alias Near_Mem_IFC::Wd_B_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 62 13}}
Alias Near_Mem_IFC::Wd_AR_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 63 13}}
Alias Near_Mem_IFC::Wd_R_User_Dma 0 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 64 13}}
Struct Near_Mem_IFC::EventsCache {members {{Bool evt_LD {width 1}} {Bool evt_LD_MISS {width 1}} {Bool evt_LD_MISS_LAT {width 1}} {Bool evt_ST {width 1}} {Bool evt_ST_MISS {width 1}} {Bool evt_ST_MISS_LAT {width 1}} {Bool evt_AMO {width 1}} {Bool evt_AMO_MISS {width 1}} {Bool evt_AMO_MISS_LAT {width 1}} {Bool evt_TLB {width 1}} {Bool evt_TLB_MISS {width 1}} {Bool evt_TLB_MISS_LAT {width 1}} {Bool evt_TLB_FLUSH {width 1}} {Bool evt_EVICT {width 1}}}} {width 14} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 84 3}}
Interface Near_Mem_IFC::Near_Mem_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {interface Near_Mem_IFC::IMem_IFC imem {}} {interface {AXI4_Types::AXI4_Master#(5, 64, 64, 0, 1, 0, 0, 1)} imem_master {}} {interface Near_Mem_IFC::DMem_IFC dmem {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} mem_master {}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_fence_i {}} {interface {ClientServer::Server#(ISA_Decls::Fence_Ordering, Bit#(0))} server_fence {}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} sfence_vma_server {}} {interface {AXI4_Types::AXI4_Slave#(6, 64, 512, 0, 0, 0, 0, 0)} dma_server {}} {method {Action ma_ddr4_ready {} {{(* ports = [] *)}}}} {method {Bit#(8) mv_status {} {{(* ports = [] *)} {(* always_ready  *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 88 11}}
Alias Near_Mem_IFC::Cache_Cap_Tag_Width 1 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 157 37}}
Alias Near_Mem_IFC::Cache_Entry {Tuple2#(Bit#(1), Bit#(128))} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 158 51}}
Interface Near_Mem_IFC::IMem_IFC {members {{method {Action req {Bit#(3) Bit#(64) Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["f3", "addr", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action commit {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool is_i32_not_i16 {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) pc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(32) instr {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool exc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(6) exc_code {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(64) tval {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {StatCounters::EventsL1I events {} {{(* ports = [] *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 169 11}}
Interface Near_Mem_IFC::DMem_IFC {members {{method {Action req {MMU_Cache_Common::CacheOp Bit#(3) Bool Bit#(5) Bit#(64) {Tuple2#(Bool, Bit#(128))} Bit#(2) Bit#(1) Bit#(1) Bit#(64)} {{(* ports = ["op", "f3", "is_unsigned", "amo_funct5", "addr", "store_value", "priv", "sstatus_SUM", "mstatus_MXR", "satp"] *)} {(* always_ready  *)}}}} {method {Action commit {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bool, Bit#(128))} word128 {{(* ports = [] *)} {(* always_ready  *)}}} {method {Bit#(128) st_amo_val {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bool exc {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {Bit#(6) exc_code {} {{(* ports = [] *)} {(* always_ready  *)}}}} {method {StatCounters::EventsL1D events {} {{(* ports = [] *)}}}}}} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 210 11}}
Enum MMU_Cache_Common::CacheOp {members {CACHE_LD CACHE_ST CACHE_AMO}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 28 6}}
Alias Near_Mem_IFC::Cache_Cap_Tag_Width 1 {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 157 37}}
Alias Near_Mem_IFC::Cache_Entry {Tuple2#(Bit#(1), Bit#(128))} {position {../src_Core/Near_Mem_VM_WT_L1/Near_Mem_IFC.bsv 158 51}}
Struct MMU_Cache_Common::MMU_Cache_Req {members {{MMU_Cache_Common::CacheOp op {width 2}} {Bit#(3) width_code {width 3}} {Bool is_unsigned {width 1}} {Bool is_cap {width 1}} {Bit#(64) va {width 64}} {{Tuple2#(Bool, Bit#(128))} st_value {width 129}} {Bit#(5) amo_funct5 {width 5}} {Bit#(2) priv {width 2}} {Bit#(1) sstatus_SUM {width 1}} {Bit#(1) mstatus_MXR {width 1}} {Bit#(64) satp {width 64}}}} {width 273} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 53 6}}
Enum MMU_Cache_Common::VM_Xlate_Outcome {members {VM_XLATE_OK VM_XLATE_TLB_MISS VM_XLATE_EXCEPTION}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 90 69}}
Struct MMU_Cache_Common::VM_Xlate_Result {members {{MMU_Cache_Common::VM_Xlate_Outcome outcome {width 2}} {Bool allow_cap {width 1}} {Bit#(64) pa {width 64}} {Bit#(6) exc_code {width 6}} {Bool pte_modified {width 1}} {Bit#(64) pte {width 64}} {Bit#(2) pte_level {width 2}} {Bit#(64) pte_pa {width 64}}}} {width 204} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 104 6}}
Enum MMU_Cache_Common::Meta_State {members {META_INVALID META_SHARED META_EXCLUSIVE META_MODIFIED}} {width 2} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 204 75}}
Struct MMU_Cache_Common::L1_to_L2_Req {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State from_state {width 2}} {MMU_Cache_Common::Meta_State to_state {width 2}} {Bool can_up_to_E {width 1}}}} {width 69} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 243 6}}
Struct MMU_Cache_Common::L2_to_L1_Rsp {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State to_state {width 2}} {{Maybe#(Vector::Vector#(4, Tuple2#(Bit#(1), Bit#(128))))} m_cline {width 517}}}} {width 583} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 265 6}}
Struct MMU_Cache_Common::L2_to_L1_Req {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State to_state {width 2}}}} {width 66} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 290 6}}
Struct MMU_Cache_Common::L1_to_L2_Rsp {members {{Bit#(64) addr {width 64}} {MMU_Cache_Common::Meta_State to_state {width 2}} {{Maybe#(Vector::Vector#(4, Tuple2#(Bit#(1), Bit#(128))))} m_cline {width 517}}}} {width 583} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 306 6}}
Struct MMU_Cache_Common::Single_Req {members {{Bool is_read {width 1}} {Bit#(64) addr {width 64}} {Bit#(3) width_code {width 3}} {{Tuple2#(Bit#(1), Bit#(128))} data {width 129}}}} {width 197} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 330 6}}
Struct MMU_Cache_Common::Single_Rsp {members {{Bool ok {width 1}} {{Tuple2#(Bit#(1), Bit#(128))} data {width 129}}}} {width 130} {position {../src_Core/Near_Mem_VM_WT_L1/MMU_Cache_Common.bsv 338 6}}
Interface Debug_Module::Debug_Module_IFC {members {{interface DM_Common::DMI dmi {}} {interface {ClientServer::Client#(Bool, Bool)} hart0_reset_client {}} {interface {ClientServer::Client#(Bool, Bool)} hart0_client_run_halt {}} {interface GetPut::Get#(Bit#(4)) hart0_get_other_req {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_gpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(5, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_fpr_mem_client {}} {interface {ClientServer::Client#(DM_CPU_Req_Rsp::DM_CPU_Req#(12, 64), DM_CPU_Req_Rsp::DM_CPU_Rsp#(64))} hart0_csr_mem_client {}} {interface {ClientServer::Client#(Bool, Bool)} ndm_reset_client {}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} master {}}}} {position {../src_Core/Debug_Module/Debug_Module.bsv 101 11}}
Alias DM_Common::DM_Addr Bit#(7) {position {../src_Core/Debug_Module/DM_Common.bsv 23 19}}
Alias DM_Common::DM_Word Bit#(32) {position {../src_Core/Debug_Module/DM_Common.bsv 27 19}}
Enum DM_Common::DM_abstractcs_cmderr {members {DM_ABSTRACTCS_CMDERR_NONE DM_ABSTRACTCS_CMDERR_BUSY DM_ABSTRACTCS_CMDERR_NOT_SUPPORTED DM_ABSTRACTCS_CMDERR_EXCEPTION DM_ABSTRACTCS_CMDERR_HALT_RESUME DM_ABSTRACTCS_CMDERR_UNDEF5 DM_ABSTRACTCS_CMDERR_UNDEF6 DM_ABSTRACTCS_CMDERR_OTHER}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 277 6}}
Enum DM_Common::DM_command_cmdtype {members {DM_COMMAND_CMDTYPE_ACCESS_REG DM_COMMAND_CMDTYPE_QUICK_ACCESS}} {width 1} {position {../src_Core/Debug_Module/DM_Common.bsv 308 6}}
Enum DM_Common::DM_command_access_reg_size {members {DM_COMMAND_ACCESS_REG_SIZE_UNDEF0 DM_COMMAND_ACCESS_REG_SIZE_UNDEF1 DM_COMMAND_ACCESS_REG_SIZE_LOWER32 DM_COMMAND_ACCESS_REG_SIZE_LOWER64 DM_COMMAND_ACCESS_REG_SIZE_LOWER128 DM_COMMAND_ACCESS_REG_SIZE_UNDEF5 DM_COMMAND_ACCESS_REG_SIZE_UNDEF6 DM_COMMAND_ACCESS_REG_SIZE_UNDEF7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 319 6}}
Enum DM_Common::DM_sbaccess {members {DM_SBACCESS_8_BIT DM_SBACCESS_16_BIT DM_SBACCESS_32_BIT DM_SBACCESS_64_BIT DM_SBACCESS_128_BIT}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 381 6}}
Enum DM_Common::DM_sberror {members {DM_SBERROR_NONE DM_SBERROR_TIMEOUT DM_SBERROR_BADADDR DM_SBERROR_OTHER DM_SBERROR_BUSY_STALE DM_SBERROR_UNDEF5 DM_SBERROR_UNDEF6 DM_SBERROR_UNDEF7_W1C}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 402 6}}
Enum DM_Common::DCSR_Cause {members {DCSR_CAUSE_RESERVED0 DCSR_CAUSE_EBREAK DCSR_CAUSE_TRIGGER DCSR_CAUSE_HALTREQ DCSR_CAUSE_STEP DCSR_CAUSE_RESERVED5 DCSR_CAUSE_RESERVED6 DCSR_CAUSE_RESERVED7}} {width 3} {position {../src_Core/Debug_Module/DM_Common.bsv 488 6}}
Interface DM_Common::DMI {members {{method {Action read_addr Bit#(7) {{(* ports = ["dm_addr"] *)}}}} {method {ActionValue#(Bit#(32)) read_data {} {{(* ports = [] *)}}}} {method {Action write {Bit#(7) Bit#(32)} {{(* ports = ["dm_addr", "dm_word"] *)}}}}}} {position {../src_Core/Debug_Module/DM_Common.bsv 494 11}}
Interface DM_System_Bus::DM_System_Bus_IFC {members {{method {Action reset {} {{(* ports = [] *)}}}} {method {ActionValue#(Bit#(32)) av_read Bit#(7) {{(* ports = ["dm_addr"] *)}}}} {method {Action write {Bit#(7) Bit#(32)} {{(* ports = ["dm_addr", "dm_word"] *)}}}} {interface {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} master {}}}} {position {../src_Core/Debug_Module/DM_System_Bus.bsv 45 11}}
Enum DM_System_Bus::SB_State {members {SB_NOTBUSY SB_READ_FINISH SB_WRITE_FINISH}} {width 2} {position {../src_Core/Debug_Module/DM_System_Bus.bsv 184 6}}
Alias Fabric_Defs::Num_Masters_2x3 2 {position {../src_Core/Core/Fabric_Defs.bsv 38 12}}
Alias Fabric_Defs::Num_Slaves_2x3 3 {position {../src_Core/Core/Fabric_Defs.bsv 39 12}}
Alias Fabric_Defs::Master_Num_2x3 Bit#(1) {position {../src_Core/Core/Fabric_Defs.bsv 41 40}}
Alias Fabric_Defs::Slave_Num_2x3 Bit#(2) {position {../src_Core/Core/Fabric_Defs.bsv 42 39}}
Alias Fabric_Defs::Wd_MId_2x3 4 {position {../src_Core/Core/Fabric_Defs.bsv 46 11}}
Alias Fabric_Defs::Wd_SId_2x3 5 {position {../src_Core/Core/Fabric_Defs.bsv 47 51}}
Alias Fabric_Defs::Wd_MId 5 {position {../src_Core/Core/Fabric_Defs.bsv 48 20}}
Alias Fabric_Defs::Wd_MId_ext 6 {position {../src_Core/Core/Fabric_Defs.bsv 53 26}}
Alias Fabric_Defs::Wd_Addr 64 {position {../src_Core/Core/Fabric_Defs.bsv 62 14}}
Alias Fabric_Defs::Fabric_Addr Bit#(64) {position {../src_Core/Core/Fabric_Defs.bsv 69 30}}
Alias Fabric_Defs::Bytes_per_Fabric_Addr 8 {position {../src_Core/Core/Fabric_Defs.bsv 70 30}}
Alias Fabric_Defs::Wd_Data 64 {position {../src_Core/Core/Fabric_Defs.bsv 81 13}}
Alias Fabric_Defs::Wd_AW_User 0 {position {../src_Core/Core/Fabric_Defs.bsv 85 11}}
Alias Fabric_Defs::Wd_AW_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 86 20}}
Alias Fabric_Defs::Wd_B_User 0 {position {../src_Core/Core/Fabric_Defs.bsv 87 11}}
Alias Fabric_Defs::Wd_B_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 88 19}}
Alias Fabric_Defs::Wd_AR_User 0 {position {../src_Core/Core/Fabric_Defs.bsv 89 11}}
Alias Fabric_Defs::Wd_AR_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 90 20}}
Alias Fabric_Defs::Wd_W_User 1 {position {../src_Core/Core/Fabric_Defs.bsv 92 39}}
Alias Fabric_Defs::Wd_R_User 1 {position {../src_Core/Core/Fabric_Defs.bsv 93 39}}
Alias Fabric_Defs::Wd_W_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 98 11}}
Alias Fabric_Defs::Wd_R_User_ext 0 {position {../src_Core/Core/Fabric_Defs.bsv 99 11}}
Alias Fabric_Defs::Bytes_per_Fabric_Data 8 {position {../src_Core/Core/Fabric_Defs.bsv 108 37}}
Alias Fabric_Defs::Fabric_Data Bit#(64) {position {../src_Core/Core/Fabric_Defs.bsv 111 37}}
Alias Fabric_Defs::Fabric_Strb Bit#(8) {position {../src_Core/Core/Fabric_Defs.bsv 112 37}}
Alias Fabric_Defs::Wd_Data_Periph 64 {position {../src_Core/Core/Fabric_Defs.bsv 115 14}}
Alias Fabric_Defs::Wd_AW_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 117 14}}
Alias Fabric_Defs::Wd_W_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 118 14}}
Alias Fabric_Defs::Wd_B_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 119 14}}
Alias Fabric_Defs::Wd_AR_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 120 14}}
Alias Fabric_Defs::Wd_R_User_Periph 0 {position {../src_Core/Core/Fabric_Defs.bsv 121 14}}
Alias Fabric_Defs::Fabric_Data_Periph Bit#(64) {position {../src_Core/Core/Fabric_Defs.bsv 123 44}}
Alias Fabric_Defs::Fabric_Strb_Periph Bit#(8) {position {../src_Core/Core/Fabric_Defs.bsv 124 44}}
Alias Fabric_Defs::Bytes_per_Fabric_Data_Periph 8 {position {../src_Core/Core/Fabric_Defs.bsv 125 44}}
Alias Fabric_Defs::ZLSBs_Aligned_Fabric_Addr 3 {position {../src_Core/Core/Fabric_Defs.bsv 130 41}}
Alias Fabric_Defs::Wd_Id_Mem 4 {position {../src_Core/Core/Fabric_Defs.bsv 157 20}}
Alias Fabric_Defs::Wd_Addr_Mem 64 {position {../src_Core/Core/Fabric_Defs.bsv 158 20}}
Alias Fabric_Defs::Wd_Data_Mem 64 {position {../src_Core/Core/Fabric_Defs.bsv 159 20}}
Alias Fabric_Defs::Wd_AW_User_Mem 0 {position {../src_Core/Core/Fabric_Defs.bsv 160 20}}
Alias Fabric_Defs::Wd_W_User_Mem 1 {position {../src_Core/Core/Fabric_Defs.bsv 161 20}}
Alias Fabric_Defs::Wd_B_User_Mem 0 {position {../src_Core/Core/Fabric_Defs.bsv 162 20}}
Alias Fabric_Defs::Wd_AR_User_Mem 0 {position {../src_Core/Core/Fabric_Defs.bsv 163 20}}
Alias Fabric_Defs::Wd_R_User_Mem 1 {position {../src_Core/Core/Fabric_Defs.bsv 164 20}}
Alias Fabric_Defs::Near_Mem_Fabric_IFC {AXI4_Types::AXI4_Master#(4, 64, 64, 0, 1, 0, 0, 1)} {position {../src_Core/Core/Fabric_Defs.bsv 175 43}}
Struct {AXI_Helpers::WriteReqFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type tag_)} polymorphic {members {{{AXI4_Types::AXI4_AWFlit#(id_, addr_, 0)} aw} {{AXI4_Types::AXI4_WFlit#(data_, tag_)} w}}} {position {../libs/TagController/TagController/AXI_Helpers.bsv 37 3}}
TaggedUnion {AXI_Helpers::ReqFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type tag_)} polymorphic {members {{{AXI_Helpers::WriteReqFlit#(id_, addr_, data_, tag_)} Write} {{AXI4_Types::AXI4_ARFlit#(id_, addr_, 0)} Read}}} {position {../libs/TagController/TagController/AXI_Helpers.bsv 43 3}}
TaggedUnion {AXI_Helpers::RspFlit#(numeric type id_, numeric type data_, numeric type tag_)} polymorphic {members {{{AXI4_Types::AXI4_BFlit#(id_, 0)} Write} {{AXI4_Types::AXI4_RFlit#(id_, data_, tag_)} Read}}} {position {../libs/TagController/TagController/AXI_Helpers.bsv 52 3}}
TaggedUnion {MemTypes::MemReq#(type addr_t, type data_t)} polymorphic {members {{{MemTypes::MemReq_$ReadReq#(addr_t, data_t)} ReadReq} {{MemTypes::MemReq_$WriteReq#(addr_t, data_t)} WriteReq}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 121 3}}
TaggedUnion {MemTypes::MemRsp#(type data_t)} polymorphic {members {{data_t ReadRsp} {void WriteRsp {width 0}} {void ErrorRsp {width 0}}}} {position {../libs/BlueStuff/BlueUtils/MemTypes.bsv 175 3}}
Alias {AXI_Helpers::DRAMReq#(numeric type id_, numeric type addr_)} {AXI_Helpers::ReqFlit#(id_, addr_, 64, 0)} {position {../libs/TagController/TagController/AXI_Helpers.bsv 61 58}}
Alias {AXI_Helpers::DRAMRsp#(numeric type id_)} {AXI_Helpers::RspFlit#(id_, 64, 0)} {position {../libs/TagController/TagController/AXI_Helpers.bsv 62 58}}


Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}
Typeclass {AXI4_AR_Utils::ToAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) f(t x1)} toAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::ToAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 94 11}}
Typeclass {AXI4_AR_Utils::FromAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) x1)} fromAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::FromAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 105 11}}
Typeclass {AXI4_AW_Utils::ToAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) f(t x1)} toAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::ToAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 94 11}}
Typeclass {AXI4_AW_Utils::FromAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) x1)} fromAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::FromAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 105 11}}
Typeclass {AXI4_B_Utils::ToAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function AXI4_Types::AXI4_BFlit#(id_, user_) f(t x1)} toAXI4_BFlit}}} {instances {{AXI4_B_Utils::ToAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 62 11}}
Typeclass {AXI4_B_Utils::FromAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_BFlit#(id_, user_) x1)} fromAXI4_BFlit}}} {instances {{AXI4_B_Utils::FromAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 70 11}}
Typeclass {AXI4_R_Utils::ToAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_RFlit#(id_, data_, user_) f(t x1)} toAXI4_RFlit}}} {instances {{AXI4_R_Utils::ToAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 76 11}}
Typeclass {AXI4_R_Utils::FromAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_RFlit#(id_, data_, user_) x1)} fromAXI4_RFlit}}} {instances {{AXI4_R_Utils::FromAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 87 11}}
Typeclass {AXI4_W_Utils::ToAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_WFlit#(data_, user_) f(t x1)} toAXI4_WFlit}}} {instances {{AXI4_W_Utils::ToAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 65 11}}
Typeclass {AXI4_W_Utils::FromAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_WFlit#(data_, user_) x1)} fromAXI4_WFlit}}} {instances {{AXI4_W_Utils::FromAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 73 11}}
Enum AXI4_Utils::SerialiserState {members {IDLE BURST_WRITE WAITING}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 437 43}}
Enum AXI4_Utils::ReadSplitOption {members {COMBINE PAD_FIRST PAD_LAST}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 1042 47}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4Lite_Types::AXI4Lite_AWFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) awaddr} {Bit#(3) awprot {width 3}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 52 3}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["awvalid", "awaddr", "awprot", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 86 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 130 3}}
Interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 161 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_BFlit#(numeric type user_)} polymorphic {members {{AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 204 3}}
Interface {AXI4Lite_Types::AXI4Lite_B_Master_Sig#(numeric type user_)} polymorphic {members {{method {Action bflit {Bool AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 214 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(numeric type user_)} polymorphic {members {{method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 230 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_ARFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) araddr} {Bit#(3) arprot {width 3}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 273 3}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["arvalid", "araddr", "arprot", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 307 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_RFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 351 3}}
Interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(data_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["rvalid", "rdata", "rresp", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 362 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 379 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_Master#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 421 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 452 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} masterSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 490 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 519 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 550 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slaveSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 588 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 617 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 634 11}}
Struct {AXI4Lite_Types::AXI4Lite_WriteFlit#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)} aw} {{AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)} w}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 712 3}}
Typeclass {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) f(t x1)} toAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)} {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) x1)} fromAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 68 11}}
Typeclass {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) f(t x1)} toAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)} {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) x1)} fromAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 68 11}}
Typeclass {AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_BFlit#(user_) f(t x1)} toAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 51 11}}
Typeclass {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_BFlit#(user_) x1)} fromAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)} {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(MemTypes::MemRsp#(data_t), user_sz)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 59 11}}
Typeclass {AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) f(t x1)} toAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 56 11}}
Typeclass {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) x1)} fromAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)} {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(MemTypes::MemRsp#(data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 64 11}}
Typeclass {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) f(t x1)} toAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)} {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(MemTypes::MemReq#(addr_t, data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 62 11}}
Typeclass {AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) x1)} fromAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 70 11}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}
Typeclass {AXI4_AR_Utils::ToAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) f(t x1)} toAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::ToAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 94 11}}
Typeclass {AXI4_AR_Utils::FromAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) x1)} fromAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::FromAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 105 11}}
Typeclass {AXI4_AW_Utils::ToAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) f(t x1)} toAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::ToAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 94 11}}
Typeclass {AXI4_AW_Utils::FromAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) x1)} fromAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::FromAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 105 11}}
Typeclass {AXI4_B_Utils::ToAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function AXI4_Types::AXI4_BFlit#(id_, user_) f(t x1)} toAXI4_BFlit}}} {instances {{AXI4_B_Utils::ToAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 62 11}}
Typeclass {AXI4_B_Utils::FromAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_BFlit#(id_, user_) x1)} fromAXI4_BFlit}}} {instances {{AXI4_B_Utils::FromAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 70 11}}
Typeclass {AXI4_R_Utils::ToAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_RFlit#(id_, data_, user_) f(t x1)} toAXI4_RFlit}}} {instances {{AXI4_R_Utils::ToAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 76 11}}
Typeclass {AXI4_R_Utils::FromAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_RFlit#(id_, data_, user_) x1)} fromAXI4_RFlit}}} {instances {{AXI4_R_Utils::FromAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 87 11}}
Typeclass {AXI4_W_Utils::ToAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_WFlit#(data_, user_) f(t x1)} toAXI4_WFlit}}} {instances {{AXI4_W_Utils::ToAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 65 11}}
Typeclass {AXI4_W_Utils::FromAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_WFlit#(data_, user_) x1)} fromAXI4_WFlit}}} {instances {{AXI4_W_Utils::FromAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 73 11}}
Enum AXI4_Utils::SerialiserState {members {IDLE BURST_WRITE WAITING}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 437 43}}
Enum AXI4_Utils::ReadSplitOption {members {COMBINE PAD_FIRST PAD_LAST}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 1042 47}}

Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4Lite_Types::AXI4Lite_AWFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) awaddr} {Bit#(3) awprot {width 3}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 52 3}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["awvalid", "awaddr", "awprot", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 86 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 130 3}}
Interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 161 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_BFlit#(numeric type user_)} polymorphic {members {{AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 204 3}}
Interface {AXI4Lite_Types::AXI4Lite_B_Master_Sig#(numeric type user_)} polymorphic {members {{method {Action bflit {Bool AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 214 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(numeric type user_)} polymorphic {members {{method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 230 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_ARFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) araddr} {Bit#(3) arprot {width 3}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 273 3}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["arvalid", "araddr", "arprot", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 307 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_RFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 351 3}}
Interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(data_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["rvalid", "rdata", "rresp", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 362 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 379 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_Master#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 421 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 452 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} masterSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 490 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 519 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 550 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slaveSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 588 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 617 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 634 11}}
Struct {AXI4Lite_Types::AXI4Lite_WriteFlit#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)} aw} {{AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)} w}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 712 3}}
Typeclass {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) f(t x1)} toAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)} {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) x1)} fromAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 68 11}}
Typeclass {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) f(t x1)} toAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)} {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) x1)} fromAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 68 11}}
Typeclass {AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_BFlit#(user_) f(t x1)} toAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 51 11}}
Typeclass {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_BFlit#(user_) x1)} fromAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)} {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(MemTypes::MemRsp#(data_t), user_sz)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 59 11}}
Typeclass {AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) f(t x1)} toAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 56 11}}
Typeclass {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) x1)} fromAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)} {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(MemTypes::MemRsp#(data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 64 11}}
Typeclass {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) f(t x1)} toAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)} {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(MemTypes::MemReq#(addr_t, data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 62 11}}
Typeclass {AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) x1)} fromAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 70 11}}

Typeclass {Routable::Has_routingField#(type t, type r_t)} {dependencies {{t determines r_t}}} {members {{{function r_t f(t x1)} routingField}}} {instances {{Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(Routable::WithMetaInfo#(t, m_t), r_t)   provisos (Routable::Has_routingField#(t, r_t))} {Routable::Has_routingField#(Routable::WithRouteInfo#(t, r_t), r_t)}}} {position {../libs/BlueStuff/Routable.bsv 46 11}}
Typeclass {Routable::Has_isLast#(type t)} {members {{{function Bool f(t x1)} isLast}}} {instances {{Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_BFlit#(id_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(Routable::WithMetaInfo#(t, m_t))   provisos (Routable::Has_isLast#(t))} {Routable::Has_isLast#(Routable::WithRouteInfo#(t, r_t))   provisos (Routable::Has_isLast#(t))}}} {position {../libs/BlueStuff/Routable.bsv 50 11}}
Typeclass {Routable::Routable#(type f_t, type r_t)} {superclasses {{Routable::Has_routingField#(f_t, r_t)} Routable::Has_isLast#(f_t)}} {dependencies {{f_t determines r_t}}} {members {}} {instances {{Routable::Routable#(a, b)   provisos (Routable::Has_isLast#(a), Routable::Has_routingField#(a, b))}}} {position {../libs/BlueStuff/Routable.bsv 54 11}}
Typeclass {Routable::FallibleRoute#(type req_t, type rsp_t)} {members {{{a#(MasterSlave::Slave#(req_t, rsp_t))   provisos (IsModule#(a, b))} mkNoRouteSlave}}} {instances {{Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} {Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), AXI4Lite_Types::AXI4Lite_BFlit#(buser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_), down_t))   provisos (Bits#(down_t, down_t_sz))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_), down_t))   provisos (Bits#(down_t, down_t_sz))}}} {position {../libs/BlueStuff/Routable.bsv 72 11}}
Typeclass {Routable::ExpandableReqRsp#(type req_t, type req_fat_t, type rsp_fat_t, type rsp_t, numeric type n_masters)} {dependencies {{(req_t, req_fat_t) determines (rsp_fat_t, rsp_t, n_masters)} {rsp_fat_t determines (req_t, req_fat_t, rsp_t, n_masters)} {(rsp_fat_t, rsp_t) determines (req_t, req_fat_t, n_masters)}}} {members {{{function req_fat_t f(Bit#(TLog#(n_masters)) x1, req_t x2)} expand} {{function Tuple2#(Bit#(TLog#(n_masters)), rsp_t) f(rsp_fat_t x1)} shrink}}} {instances {{Routable::ExpandableReqRsp#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_), AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_), AXI4_Types::AXI4_RFlit#(id_, data_, ruser_), n)   provisos (Add#(id_, TLog#(n), sid_))} {Routable::ExpandableReqRsp#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_), AXI4_Types::AXI4_BFlit#(id_, buser_), n)   provisos (Add#(id_, TLog#(n), sid_))}}} {position {../libs/BlueStuff/Routable.bsv 88 11}}
Struct {Routable::WithRouteInfo#(type t, type r_t)} polymorphic {members {{t payload} {r_t routeInfo}}} {position {../libs/BlueStuff/Routable.bsv 110 3}}
Struct {Routable::WithMetaInfo#(type t, type m_t)} polymorphic {members {{t payload} {m_t metaInfo}}} {position {../libs/BlueStuff/Routable.bsv 123 3}}
Struct {Routable::Range#(numeric type n)} polymorphic {members {{Bit#(n) base} {Bit#(n) size}}} {position {../libs/BlueStuff/Routable.bsv 145 3}}
Alias {Routable::MappingTable#(numeric type n, numeric type a)} {Vector::Vector#(n, Routable::Range#(a))} {position {../libs/BlueStuff/Routable.bsv 155 33}}

Interface FBox_Top::FBox_Top_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action req {Bit#(7) Bit#(7) Bit#(3) Bit#(5) Bit#(64) Bit#(64) Bit#(64) Bool} {{(* ports = ["opcode", "f7", "rm", "rs2", "v1", "v2", "v3", "valid"] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bit#(64), Bit#(5))} word {{(* ports = [] *)} {(* always_ready  *)}}}}} {position {../src_Core/CPU/FBox_Top.bsv 35 11}}
Struct FBox_Core::FBoxResult {members {{Bit#(64) value {width 64}} {Bit#(5) flags {width 5}}}} {width 69} {position {../src_Core/CPU/FBox_Core.bsv 39 3}}
Enum FBox_Core::FBoxState {members {FBOX_RST FBOX_REQ FBOX_BUSY FBOX_RSP}} {width 2} {position {../src_Core/CPU/FBox_Core.bsv 46 3}}
Interface FBox_Core::FBox_Core_IFC {members {{interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}} {method {Action req {Bit#(7) Bit#(7) Bit#(3) Bit#(5) Bit#(64) Bit#(64) Bit#(64) Bool} {{(* ports = ["opcode", "f7", "rm", "rs2", "v1", "v2", "v3", "valid"] *)} {(* always_ready  *)}}}} {method {Bool valid {} {{(* ports = [] *)} {(* always_ready  *)}}}} {interface {Tuple2#(Bit#(64), Bit#(5))} word {{(* ports = [] *)} {(* always_ready  *)}}}}} {position {../src_Core/CPU/FBox_Core.bsv 48 11}}
Alias FPU::FDouble {FloatingPoint::FloatingPoint#(11, 52)} {position {../src_Core/CPU/FPU.bsv 17 31}}
Alias FPU::FSingle {FloatingPoint::FloatingPoint#(8, 23)} {position {../src_Core/CPU/FPU.bsv 18 31}}
TaggedUnion FPU::FloatU {members {{{FloatingPoint::FloatingPoint#(11, 52)} D {width 64}} {{FloatingPoint::FloatingPoint#(8, 23)} S {width 32}}}} {width 65} {position {../src_Core/CPU/FPU.bsv 23 6}}
Alias FPU::Fpu_Req {Tuple5#(FPU::FloatU, FPU::FloatU, FPU::FloatU, FloatingPoint::RoundMode, ISA_Decls::FpuOp)} {position {../src_Core/CPU/FPU.bsv 25 56}}
Alias FPU::Fpu_Rsp {Tuple2#(FPU::FloatU, FloatingPoint::Exception)} {position {../src_Core/CPU/FPU.bsv 26 59}}
Alias FPU::FpuR {Tuple2#(FloatingPoint::FloatingPoint#(11, 52), FloatingPoint::Exception)} {position {../src_Core/CPU/FPU.bsv 29 59}}
Interface FPU::FPU_IFC {members {{interface {ClientServer::Server#(Tuple5#(FPU::FloatU, FPU::FloatU, FPU::FloatU, FloatingPoint::RoundMode, ISA_Decls::FpuOp), Tuple2#(FPU::FloatU, FloatingPoint::Exception))} server_core {}} {interface {ClientServer::Server#(Bit#(0), Bit#(0))} server_reset {}}}} {position {../src_Core/CPU/FPU.bsv 34 11}}
Alias SquareRoot::SqrtT UInt#(64) {position {%/Libraries/SquareRoot.bsv 256 19 {Library SquareRoot}}}
Alias SquareRoot::SqrtTFx {FixedPoint::FixedPoint#(32, 32)} {position {%/Libraries/SquareRoot.bsv 257 28 {Library SquareRoot}}}
Alias Divide::MBits 11 {position {%/Libraries/Divide.bsv 259 12 {Library Divide}}}
Alias Divide::NBits 22 {position {%/Libraries/Divide.bsv 260 12 {Library Divide}}}
Alias StmtFSM::PosInfo String {position {%/Libraries/StmtFSM.bs 39 5 {Library StmtFSM}}}
TaggedUnion StmtFSM::Freedom {members {{String Early} {void Overlap {width 0}}}} {position {%/Libraries/StmtFSM.bs 56 5 {Library StmtFSM}}}
TaggedUnion StmtFSM::ActionType {members {{void Default {width 0}} {StmtFSM::Freedom Update} {String Jump} {void Wait {width 0}} {void NoME {width 0}}}} {position {%/Libraries/StmtFSM.bs 61 5 {Library StmtFSM}}}
Struct StmtFSM::RuleSet {members {{Rules me_local} {Rules me_parents} {Rules no_me}}} {position {%/Libraries/StmtFSM.bs 82 7 {Library StmtFSM}}}
TaggedUnion {StmtFSM::StmtT#(type a)} polymorphic {members {{{StmtFSM::StmtT_$SAction#(a)} SAction} {{StmtFSM::StmtT_$SActionValue#(a)} SActionValue} {{StmtFSM::StmtT_$SNamed#(a)} SNamed} {{StmtFSM::StmtT_$SLabel#(a)} SLabel} {{StmtFSM::StmtT_$SJump#(a)} SJump} {{StmtFSM::StmtT_$SCall#(a)} SCall} {{StmtFSM::StmtT_$SUntil#(a)} SUntil} {{StmtFSM::StmtT_$SIf1#(a)} SIf1} {{StmtFSM::StmtT_$SIf2#(a)} SIf2} {{StmtFSM::StmtT_$SWhile#(a)} SWhile} {{StmtFSM::StmtT_$SFor#(a)} SFor} {{StmtFSM::StmtT_$SSeq#(a)} SSeq} {{StmtFSM::StmtT_$SPar#(a)} SPar} {String SSkip} {{StmtFSM::StmtT_$SRepeat#(a)} SRepeat} {{StmtFSM::StmtT_$SDelay#(a)} SDelay} {String SReturn} {String SBreak} {String SContinue} {{StmtFSM::StmtT_$SExprS#(a)} SExprS}}} {position {%/Libraries/StmtFSM.bs 110 5 {Library StmtFSM}}}
















Typeclass {StmtFSM::StmtTifiable#(type t, type a)} {dependencies {{t determines a}}} {members {{{function StmtFSM::StmtT#(a) f(String x1, t x2)} stmtify}}} {instances {{StmtFSM::StmtTifiable#(Action, t)} {StmtFSM::StmtTifiable#(StmtFSM::RStmt#(a), a)}}} {position {%/Libraries/StmtFSM.bs 132 6 {Library StmtFSM}}}
Alias {StmtFSM::RStmts#(type a)} List#(StmtFSM::StmtT#(a)) {position {%/Libraries/StmtFSM.bs 144 5 {Library StmtFSM}}}
Alias {StmtFSM::RStmt#(type a)} {StmtFSM::StmtM#(a, void)} {position {%/Libraries/StmtFSM.bs 146 5 {Library StmtFSM}}}
TaggedUnion {StmtFSM::StmtM#(type a, type b)} polymorphic {members {{{Module#(Tuple2#(b, List#(StmtFSM::StmtT#(a))))} S}}} {position {%/Libraries/StmtFSM.bs 148 5 {Library StmtFSM}}}
Alias StmtFSM::Stmt {StmtFSM::StmtM#(Bit#(0), void)} {position {%/Libraries/StmtFSM.bs 171 5 {Library StmtFSM}}}
Interface StmtFSM::Waiter {members {{method {Action wait {} {}}}}} {position {%/Libraries/StmtFSM.bs 278 10 {Library StmtFSM}}}
Interface StmtFSM::Once {members {{method {Action start {} {}}} {method {Action clear {} {}}} {method {Bool done {} {}}}}} {position {%/Libraries/StmtFSM.bs 293 10 {Library StmtFSM}}}
Interface {StmtFSM::RFSM#(type a)} polymorphic {members {{method {Action start {} {}}} {method {Action abort {} {}}} {method {Bool ready {} {}}}}} {position {%/Libraries/StmtFSM.bs 317 10 {Library StmtFSM}}}
Interface StmtFSM::FSMAbort {members {{method {Action abort {} {}}}}} {position {%/Libraries/StmtFSM.bs 322 10 {Library StmtFSM}}}
Interface StmtFSM::FSM {members {{method {Action start {} {}}} {method {Bool done {} {}}} {method {Action waitTillDone {} {}}} {method {Action abort {} {}}}}} {position {%/Libraries/StmtFSM.bs 325 10 {Library StmtFSM}}}
Interface {StmtFSM::FSMServer#(type a, type b)} polymorphic {members {{interface {ClientServer::Server#(a, b)} server {}} {method {Action abort {} {}}}}} {position {%/Libraries/StmtFSM.bs 331 10 {Library StmtFSM}}}
Alias StmtFSM::NextStateDescriptor {Tuple2#(Bool, Integer)} {position {%/Libraries/StmtFSM.bs 339 5 {Library StmtFSM}}}
Alias StmtFSM::NextStateDescriptors {List#(Tuple2#(Bool, Integer))} {position {%/Libraries/StmtFSM.bs 342 5 {Library StmtFSM}}}
Alias StmtFSM::TwoStateDescriptor_orig {Tuple3#(Bool, Integer, Integer)} {position {%/Libraries/StmtFSM.bs 345 5 {Library StmtFSM}}}
TaggedUnion StmtFSM::TwoStateDescriptor {members {{{StmtFSM::TwoStateDescriptor_$TSD} TSD}}} {position {%/Libraries/StmtFSM.bs 348 5 {Library StmtFSM}}}

Enum StmtFSM::TSDType {members {Default Start End}} {position {%/Libraries/StmtFSM.bs 351 5 {Library StmtFSM}}}
Alias StmtFSM::TwoStateDescriptors List#(StmtFSM::TwoStateDescriptor) {position {%/Libraries/StmtFSM.bs 364 5 {Library StmtFSM}}}
Typeclass {StmtFSM::ServerCallToStmtT#(type t)} {members {{{function StmtFSM::StmtM#(d, void) f(t#(c, b) x1, c x2, a x3, String x4)   provisos (GetPut::ToPut#(a, b))} callServer}}} {instances {StmtFSM::ServerCallToStmtT#(ClientServer::Server) StmtFSM::ServerCallToStmtT#(StmtFSM::FSMServer)}} {position {%/Libraries/StmtFSM.bs 400 6 {Library StmtFSM}}}
TaggedUnion {StmtFSM::StmtFT#(type a)} polymorphic {members {{{StmtFSM::StmtFT_$SFAction#(a)} SFAction} {{StmtFSM::StmtFT_$SFLabel#(a)} SFLabel} {{StmtFSM::StmtFT_$SFNamed#(a)} SFNamed} {{StmtFSM::StmtFT_$SFUntil#(a)} SFUntil} {{StmtFSM::StmtFT_$SFIf1#(a)} SFIf1} {{StmtFSM::StmtFT_$SFIf2#(a)} SFIf2} {{StmtFSM::StmtFT_$SFFor#(a)} SFFor} {{StmtFSM::StmtFT_$SFSeq#(a)} SFSeq} {{StmtFSM::StmtFT_$SFPar#(a)} SFPar} {String SFSkip} {String SFDelay} {String SFReturn} {{StmtFSM::StmtFT_$SFWhile#(a)} SFWhile}}} {position {%/Libraries/StmtFSM.bs 421 5 {Library StmtFSM}}}










Struct {StmtFSM::LabelState#(type a)} polymorphic {members {{Integer state_num} {String return_label} {List#(String) label_names} {{Maybe#(Tuple2#(String, String))} loop_labels} {GetPut::Put#(a) ifc}}} {position {%/Libraries/StmtFSM.bs 440 7 {Library StmtFSM}}}
Enum MultiLevelTagLookup::State {members {Init Idle ReadTag SetTag ClearTag FoldZeroes}} {width 3} {position {../libs/TagController/TagController/MultiLevelTagLookup.bsv 81 66}}

Interface StmtFSM::NCount {members {{method {Bool is Bit#(32) {}}} {method {Action reset {} {}}} {method {Action incr {} {}}}}} {position {%/Libraries/StmtFSM.bs 2235 10 {Library StmtFSM}}}

Typeclass {ToString::ToString#(type a)} {members {{{function String f(a x1)} toString}}} {instances {{ToString::ToString#(Array#(a))   provisos (ToString::ToString#(a))} ToString::ToString#(Integer) {ToString::ToString#(List#(a))   provisos (ToString::ToString#(a))} ToString::ToString#(StmtFSM::TwoStateDescriptor) ToString::ToString#(String) {ToString::ToString#(Tuple2#(a, b))   provisos (ToString::ToString#(b), ToString::ToString#(a))} {ToString::ToString#(Tuple3#(a, b, c))   provisos (ToString::ToString#(c), ToString::ToString#(b), ToString::ToString#(a))} {ToString::ToString#(Vector::Vector#(n, a))   provisos (ToString::ToString#(a))}}} {position {%/Libraries/ToString.bs 10 6 {Library ToString}}}
Typeclass {ToString::ToStringM#(type a)} {members {{{function b#(String) f(a x1)   provisos (Monad#(b))} toStringM}}} {instances {{ToString::ToStringM#(Array#(a))   provisos (ToString::ToStringM#(a))} ToString::ToStringM#(Integer) {ToString::ToStringM#(List#(a))   provisos (ToString::ToStringM#(a))} ToString::ToStringM#(String) {ToString::ToStringM#(Tuple2#(a, b))   provisos (ToString::ToStringM#(b), ToString::ToStringM#(a))} {ToString::ToStringM#(Tuple3#(a, b, c))   provisos (ToString::ToStringM#(c), ToString::ToStringM#(b), ToString::ToStringM#(a))} {ToString::ToStringM#(Vector::Vector#(n, a))   provisos (ToString::ToStringM#(a))}}} {position {%/Libraries/ToString.bs 13 6 {Library ToString}}}
Struct {Memory::MemoryRequest#(numeric type a, numeric type d)} polymorphic {members {{Bool write {width 1}} {{Bit#(TDiv#(d, 8))} byteen} {Bit#(a) address} {Bit#(d) data}}} {position {%/Libraries/Memory.bsv 31 3 {Library Memory}}}
Struct {Memory::MemoryResponse#(numeric type d)} polymorphic {members {{Bit#(d) data}}} {position {%/Libraries/Memory.bsv 35 3 {Library Memory}}}
Alias {Memory::MemoryServer#(numeric type a, numeric type d)} {ClientServer::Server#(Memory::MemoryRequest#(a, d), Memory::MemoryResponse#(d))} {position {%/Libraries/Memory.bsv 37 60 {Library Memory}}}
Alias {Memory::MemoryClient#(numeric type a, numeric type d)} {ClientServer::Client#(Memory::MemoryRequest#(a, d), Memory::MemoryResponse#(d))} {position {%/Libraries/Memory.bsv 38 60 {Library Memory}}}
Typeclass {TieOff::TieOff#(type t)} {members {{{function a#(Empty) f(t x1)   provisos (IsModule#(a, b))} mkTieOff}}} {instances {{TieOff::TieOff#(Memory::MemoryClient#(a, d))} {TieOff::TieOff#(Vector::Vector#(n, t))   provisos (TieOff::TieOff#(t))}}} {position {%/Libraries/TieOff.bsv 26 11 {Library TieOff}}}

Struct EX_ALU_functions::ALU_Inputs {members {{Bit#(2) cur_priv {width 2}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {CHERICC_Fat::CapPipe ddc {width 161}} {Bit#(5) rs1_idx {width 5}} {Bit#(5) rs2_idx {width 5}} {Bit#(64) pc {width 64}} {Bool is_i32_not_i16 {width 1}} {Bit#(32) instr {width 32}} {Bit#(32) instr_or_instr_C {width 32}} {ISA_Decls::Decoded_Instr decoded_instr {width 162}} {Bit#(64) rs1_val {width 64}} {Bit#(64) rs2_val {width 64}} {Bit#(64) mstatus {width 64}} {Bit#(3) frm {width 3}} {Bit#(64) frs1_val {width 64}} {Bit#(64) frs2_val {width 64}} {Bit#(64) frs3_val {width 64}} {CHERICC_Fat::CapPipe cap_rs1_val {width 161}} {CHERICC_Fat::CapPipe cap_rs2_val {width 161}} {ISA_Decls::MISA misa {width 28}}}} {width 1426} {position {../src_Core/CPU/EX_ALU_functions.bsv 86 6}}
Struct EX_ALU_functions::ALU_Outputs {members {{CPU_Globals::Control control {width 4}} {Bit#(6) exc_code {width 6}} {Bit#(5) cheri_exc_code {width 5}} {Bit#(6) cheri_exc_reg {width 6}} {CPU_Globals::Op_Stage2 op_stage2 {width 3}} {Bit#(5) rd {width 5}} {Bit#(64) addr {width 64}} {Bit#(64) val1 {width 64}} {Bit#(64) val2 {width 64}} {Bit#(64) val1_fast {width 64}} {Bit#(64) val2_fast {width 64}} {Bit#(64) fval1 {width 64}} {Bit#(64) fval2 {width 64}} {Bit#(64) fval3 {width 64}} {Bool rd_in_fpr {width 1}} {Bool rs_frm_fpr {width 1}} {Bool val1_frm_gpr {width 1}} {Bit#(3) rm {width 3}} {Bit#(3) mem_width_code {width 3}} {Bool mem_unsigned {width 1}} {Bool mem_allow_cap {width 1}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {CHERICC_Fat::CapPipe cap_val1 {width 161}} {CHERICC_Fat::CapPipe cap_val2 {width 161}} {Bool val1_cap_not_int {width 1}} {Bool val2_cap_not_int {width 1}} {Bool check_enable {width 1}} {CHERICC_Fat::CapPipe check_authority {width 161}} {Bit#(6) check_authority_idx {width 6}} {Bit#(64) check_address_low {width 64}} {Bit#(65) check_address_high {width 65}} {Bool check_inclusive {width 1}} {Bool check_exact_enable {width 1}} {Bool check_exact_success {width 1}} {Bool set_offset_in_bounds {width 1}} {CPU_Globals::CF_Info cf_info {width 195}}}} {width 1597} {position {../src_Core/CPU/EX_ALU_functions.bsv 178 6}}
Enum EX_ALU_functions::Output_Select {members {LITERAL MODIFY_OFFSET SET_BOUNDS SET_ADDR GET_PRECISION}} {width 3} {position {../src_Core/CPU/EX_ALU_functions.bsv 1403 5}}
Interface Branch_Predictor::Branch_Predictor_IFC {members {{method {Action reset {} {{(* ports = [] *)}}}} {method {Action predict_req Bit#(64) {{(* ports = ["pc"] *)}}}} {method {Bit#(64) predict_rsp {Bool Bit#(32)} {{(* ports = ["is_i32_not_i16", "instr"] *)} {(* always_ready  *)}}}} {method {Action bp_train {Bit#(64) Bool Bit#(32) CPU_Globals::CF_Info} {{(* ports = ["pc", "is_i32_not_i16", "instr", "cf_info"] *)}}}}}} {position {../src_Core/CPU/Branch_Predictor.bsv 38 11}}
Alias Branch_Predictor::BTB_Num_Sets 512 {position {../src_Core/CPU/Branch_Predictor.bsv 70 15}}
Alias Branch_Predictor::BTB_Index_Sz 9 {position {../src_Core/CPU/Branch_Predictor.bsv 76 31}}
Alias Branch_Predictor::BTB_Index Bit#(9) {position {../src_Core/CPU/Branch_Predictor.bsv 79 55}}
Alias Branch_Predictor::BTB_Tag Bit#(54) {position {../src_Core/CPU/Branch_Predictor.bsv 81 55}}
Alias Branch_Predictor::Word_Addr Bit#(63) {position {../src_Core/CPU/Branch_Predictor.bsv 101 32}}
Struct Branch_Predictor::BTB_Entry {members {{Bool valid {width 1}} {Bit#(54) pc_tag {width 54}} {Bit#(63) predicted_pc {width 63}}}} {width 118} {position {../src_Core/CPU/Branch_Predictor.bsv 107 6}}
Alias Branch_Predictor::RAS_Capacity 16 {position {../src_Core/CPU/Branch_Predictor.bsv 113 14}}
Enum CPU_Globals::Stage_OStatus {members {OSTATUS_EMPTY OSTATUS_BUSY OSTATUS_PIPE OSTATUS_NONPIPE}} {width 2} {position {../src_Core/CPU/CPU_Globals.bsv 48 6}}
Alias CPU_Globals::Epoch Bit#(2) {position {../src_Core/CPU/CPU_Globals.bsv 59 19}}
Enum CPU_Globals::CF_Op {members {CF_BR CF_JAL CF_JALR CF_None}} {width 2} {position {../src_Core/CPU/CPU_Globals.bsv 74 6}}
Struct CPU_Globals::CF_Info {members {{CPU_Globals::CF_Op cf_op {width 2}} {Bit#(64) from_PC {width 64}} {Bool taken {width 1}} {Bit#(64) fallthru_PC {width 64}} {Bit#(64) taken_PC {width 64}}}} {width 195} {position {../src_Core/CPU/CPU_Globals.bsv 83 6}}
Enum CPU_Globals::Bypass_State {members {BYPASS_RD_NONE BYPASS_RD BYPASS_RD_RDVAL}} {width 2} {position {../src_Core/CPU/CPU_Globals.bsv 123 61}}
Struct CPU_Globals::Bypass {members {{CPU_Globals::Bypass_State bypass_state {width 2}} {Bit#(5) rd {width 5}} {CHERICC_Fat::CapPipe rd_val {width 161}}}} {width 168} {position {../src_Core/CPU/CPU_Globals.bsv 136 6}}
Struct CPU_Globals::FBypass {members {{CPU_Globals::Bypass_State bypass_state {width 2}} {Bit#(5) rd {width 5}} {Bit#(64) rd_val {width 64}}}} {width 71} {position {../src_Core/CPU/CPU_Globals.bsv 157 6}}
Typeclass {CPU_Globals::PCC#(type t)} {members {{{function CHERICap::Exact#(t) f(t x1, Bit#(64) x2)} setPC} {{function Bit#(64) f(t x1)} getPC} {{function Bit#(64) f(t x1)} getPCCBase} {{function Bool f(t x1)} checkPreValid} {{function Maybe#(Bit#(5)) f(t x1, Bit#(65) x2, Bool x3)} checkValid} {{function t f(CHERICC_Fat::CapPipe x1)} fromCapPipe} {{function CHERICC_Fat::CapPipe f(t x1)} toCapPipe}}} {instances CPU_Globals::PCC#(CPU_Globals::PCC_T)} {position {../src_Core/CPU/CPU_Globals.bsv 219 11}}
Alias CPU_Globals::PCC_T {Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} {position {../src_Core/CPU/CPU_Globals.bsv 229 37}}
Struct CPU_Globals::Trap_Info_Pipe {members {{{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} epcc {width 225}} {Bit#(5) cheri_exc_code {width 5}} {Bit#(6) cheri_exc_reg {width 6}} {Bit#(6) exc_code {width 6}} {Bit#(64) tval {width 64}}}} {width 306} {position {../src_Core/CPU/CPU_Globals.bsv 287 6}}
Struct CPU_Globals::Output_StageF {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Data_StageF_to_StageD data_to_stageD {width 239}}}} {width 241} {position {../src_Core/CPU/CPU_Globals.bsv 298 6}}
Struct CPU_Globals::Data_StageF_to_StageD {members {{Bit#(64) fetch_addr {width 64}} {Bool is_cap_mode {width 1}} {Bool refresh_pcc {width 1}} {Bit#(2) epoch {width 2}} {Bit#(2) priv {width 2}} {Bool is_i32_not_i16 {width 1}} {Bool exc {width 1}} {Bit#(6) exc_code {width 6}} {Bit#(64) tval {width 64}} {Bit#(32) instr {width 32}} {Bit#(64) pred_fetch_addr {width 64}} {Bool pred_is_cap_mode {width 1}}}} {width 239} {position {../src_Core/CPU/CPU_Globals.bsv 336 6}}
Struct CPU_Globals::Output_StageD {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Data_StageD_to_Stage1 data_to_stage1 {width 433}}}} {width 435} {position {../src_Core/CPU/CPU_Globals.bsv 360 6}}
Struct CPU_Globals::Data_StageD_to_Stage1 {members {{Bit#(64) fetch_addr {width 64}} {Bool is_cap_mode {width 1}} {Bool refresh_pcc {width 1}} {Bit#(2) priv {width 2}} {Bit#(2) epoch {width 2}} {Bool is_i32_not_i16 {width 1}} {Bool exc {width 1}} {Bit#(6) exc_code {width 6}} {Bit#(64) tval {width 64}} {Bit#(32) instr {width 32}} {Bit#(32) instr_or_instr_C {width 32}} {Bit#(64) pred_fetch_addr {width 64}} {Bool pred_is_cap_mode {width 1}} {ISA_Decls::Decoded_Instr decoded_instr {width 162}}}} {width 433} {position {../src_Core/CPU/CPU_Globals.bsv 404 6}}
Enum CPU_Globals::Control {members {CONTROL_DISCARD CONTROL_STRAIGHT CONTROL_BRANCH CONTROL_CSRR_W CONTROL_CAPBRANCH CONTROL_SCR_W CONTROL_CSRR_S_or_C CONTROL_FENCE CONTROL_FENCE_I CONTROL_SFENCE_VMA CONTROL_MRET CONTROL_SRET CONTROL_URET CONTROL_WFI CONTROL_TRAP}} {width 4} {position {../src_Core/CPU/CPU_Globals.bsv 443 6}}
Struct CPU_Globals::Output_Stage1 {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Control control {width 4}} {CPU_Globals::Trap_Info_Pipe trap_info {width 306}} {Bool redirect {width 1}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} next_pcc {width 225}} {CPU_Globals::CF_Info cf_info {width 195}} {CPU_Globals::Data_Stage1_to_Stage2 data_to_stage2 {width 1285}}}} {width 2018} {position {../src_Core/CPU/CPU_Globals.bsv 464 6}}
Enum CPU_Globals::Op_Stage2 {members {OP_Stage2_ALU OP_Stage2_LD OP_Stage2_ST OP_Stage2_M OP_Stage2_AMO OP_Stage2_FD OP_Stage2_TestSubset}} {width 3} {position {../src_Core/CPU/CPU_Globals.bsv 528 6}}
Struct {CPU_Globals::Pipeline_Val#(type capType)} polymorphic {members {{capType val}}} {position {../src_Core/CPU/CPU_Globals.bsv 537 6}}
Struct CPU_Globals::Data_Stage1_to_Stage2 {members {{Bit#(2) priv {width 2}} {{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {Bit#(32) instr {width 32}} {CPU_Globals::Op_Stage2 op_stage2 {width 3}} {Bit#(5) rd {width 5}} {Bit#(64) addr {width 64}} {CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapPipe) val1 {width 161}} {CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapPipe) val2 {width 161}} {Bit#(64) val1_fast {width 64}} {Bit#(64) val2_fast {width 64}} {CHERICC_Fat::CapPipe check_authority {width 161}} {Bit#(6) check_authority_idx {width 6}} {Bit#(64) check_address_low {width 64}} {Bit#(65) check_address_high {width 65}} {Bool check_enable {width 1}} {Bool check_inclusive {width 1}} {Bool check_exact_enable {width 1}} {Bool check_exact_success {width 1}} {Bool set_offset_in_bounds {width 1}} {Bool mem_allow_cap {width 1}} {Bit#(3) mem_width_code {width 3}} {Bool mem_unsigned {width 1}} {Bit#(64) fval1 {width 64}} {Bit#(64) fval2 {width 64}} {Bit#(64) fval3 {width 64}} {Bool rd_in_fpr {width 1}} {Bool rs_frm_fpr {width 1}} {Bool val1_frm_gpr {width 1}} {Bit#(3) rounding_mode {width 3}}}} {width 1285} {position {../src_Core/CPU/CPU_Globals.bsv 633 6}}
Struct CPU_Globals::Output_Stage2 {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Trap_Info_Pipe trap_info {width 306}} {CPU_Globals::Output_Stage2_Perf perf {width 5}} {Bool check_success {width 1}} {CPU_Globals::Bypass bypass {width 168}} {CPU_Globals::FBypass fbypass {width 71}} {CPU_Globals::Data_Stage2_to_Stage3 data_to_stage3 {width 487}}}} {width 1040} {position {../src_Core/CPU/CPU_Globals.bsv 717 6}}
Struct CPU_Globals::Output_Stage2_Perf {members {{Bool sc_success {width 1}} {Bool ld_cap {width 1}} {Bool ld_cap_tag_set {width 1}} {Bool ld_wait {width 1}} {Bool st_wait {width 1}}}} {width 5} {position {../src_Core/CPU/CPU_Globals.bsv 727 3}}
Struct CPU_Globals::Data_Stage2_to_Stage3 {members {{{Tuple2#(CHERICC_Fat::CapPipe, Bit#(64))} pcc {width 225}} {Bit#(32) instr {width 32}} {Bit#(2) priv {width 2}} {Bool rd_valid {width 1}} {Bit#(5) rd {width 5}} {CPU_Globals::Pipeline_Val#(CHERICC_Fat::CapFat) rd_val {width 151}} {Bool upd_flags {width 1}} {Bool rd_in_fpr {width 1}} {Bit#(5) fpr_flags {width 5}} {Bit#(64) frd_val {width 64}}}} {width 487} {position {../src_Core/CPU/CPU_Globals.bsv 776 6}}
Struct CPU_Globals::Output_Stage3 {members {{CPU_Globals::Stage_OStatus ostatus {width 2}} {CPU_Globals::Bypass bypass {width 168}} {CPU_Globals::FBypass fbypass {width 71}}}} {width 241} {position {../src_Core/CPU/CPU_Globals.bsv 824 6}}
Enum TV_Info::Trace_Op {members {TRACE_RESET TRACE_GPR_WRITE TRACE_FPR_WRITE TRACE_CSR_WRITE TRACE_MEM_WRITE TRACE_OTHER TRACE_I_RD TRACE_F_GRD TRACE_F_FRD TRACE_I_LOAD TRACE_F_LOAD TRACE_I_STORE TRACE_F_STORE TRACE_AMO TRACE_TRAP TRACE_RET TRACE_CSRRX TRACE_INTR}} {width 5} {position {../src_Core/ISA/TV_Info.bsv 46 17}}
Struct TV_Info::Trace_Data {members {{TV_Info::Trace_Op op {width 5}} {Bit#(64) pc {width 64}} {ISA_Decls::ISize instr_sz {width 1}} {Bit#(32) instr {width 32}} {Bit#(5) rd {width 5}} {Bit#(64) word1 {width 64}} {Bit#(64) word2 {width 64}} {Bit#(64) word3 {width 64}} {Bit#(64) word4 {width 64}} {Bit#(64) word5 {width 64}}}} {width 427} {position {../src_Core/ISA/TV_Info.bsv 62 6}}
Alias TV_Info::TV_VB_SIZE 72 {position {../src_Core/ISA/TV_Info.bsv 440 14}}
Alias TV_Info::TV_Vec_Bytes {Vector::Vector#(72, Bit#(8))} {position {../src_Core/ISA/TV_Info.bsv 441 38}}
Struct TV_Info::Info_CPU_to_Verifier {members {{Bit#(32) num_bytes {width 32}} {{Vector::Vector#(72, Bit#(8))} vec_bytes {width 576}}}} {width 608} {position {../src_Core/ISA/TV_Info.bsv 448 3}}

Alias StatCounters::No_Of_Evts 115 {position {StatCounters.bsv 38 13}}
Struct StatCounters::EventsCore {members {{Bit#(64) evt_NO_EV {width 64}} {Bit#(64) evt_REDIRECT {width 64}} {Bit#(64) evt_TRAP {width 64}} {Bit#(64) evt_BRANCH {width 64}} {Bit#(64) evt_JAL {width 64}} {Bit#(64) evt_JALR {width 64}} {Bit#(64) evt_AUIPC {width 64}} {Bit#(64) evt_LOAD {width 64}} {Bit#(64) evt_STORE {width 64}} {Bit#(64) evt_LR {width 64}} {Bit#(64) evt_SC {width 64}} {Bit#(64) evt_AMO {width 64}} {Bit#(64) evt_SERIAL_SHIFT {width 64}} {Bit#(64) evt_INT_MUL_DIV_REM {width 64}} {Bit#(64) evt_FP {width 64}} {Bit#(64) evt_SC_SUCCESS {width 64}} {Bit#(64) evt_LOAD_WAIT {width 64}} {Bit#(64) evt_STORE_WAIT {width 64}} {Bit#(64) evt_FENCE {width 64}} {Bit#(64) evt_F_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_D_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_1_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_2_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_3_BUSY_NO_CONSUME {width 64}} {Bit#(64) evt_IMPRECISE_SETBOUND {width 64}} {Bit#(64) evt_UNREPRESENTABLE_CAP {width 64}} {Bit#(64) evt_MEM_CAP_LOAD {width 64}} {Bit#(64) evt_MEM_CAP_STORE {width 64}} {Bit#(64) evt_MEM_CAP_LOAD_TAG_SET {width 64}} {Bit#(64) evt_MEM_CAP_STORE_TAG_SET {width 64}} {Bit#(64) evt_INTERRUPT {width 64}}}} {width 1984} {position {StatCounters.bsv 72 3}}
Struct StatCounters::EventsL1I {members {{Bit#(64) evt_LD {width 64}} {Bit#(64) evt_LD_MISS {width 64}} {Bit#(64) evt_LD_MISS_LAT {width 64}} {Bit#(64) evt_TLB {width 64}} {Bit#(64) evt_TLB_MISS {width 64}} {Bit#(64) evt_TLB_MISS_LAT {width 64}} {Bit#(64) evt_TLB_FLUSH {width 64}}}} {width 448} {position {StatCounters.bsv 82 3}}
Struct StatCounters::EventsL1D {members {{Bit#(64) evt_LD {width 64}} {Bit#(64) evt_LD_MISS {width 64}} {Bit#(64) evt_LD_MISS_LAT {width 64}} {Bit#(64) evt_ST {width 64}} {Bit#(64) evt_ST_MISS {width 64}} {Bit#(64) evt_ST_MISS_LAT {width 64}} {Bit#(64) evt_AMO {width 64}} {Bit#(64) evt_AMO_MISS {width 64}} {Bit#(64) evt_AMO_MISS_LAT {width 64}} {Bit#(64) evt_TLB {width 64}} {Bit#(64) evt_TLB_MISS {width 64}} {Bit#(64) evt_TLB_MISS_LAT {width 64}} {Bit#(64) evt_TLB_FLUSH {width 64}} {Bit#(64) evt_EVICT {width 64}}}} {width 896} {position {StatCounters.bsv 99 3}}
Struct StatCounters::EventsTGC {members {{Bit#(64) evt_WRITE {width 64}} {Bit#(64) evt_WRITE_MISS {width 64}} {Bit#(64) evt_READ {width 64}} {Bit#(64) evt_READ_MISS {width 64}} {Bit#(64) evt_EVICT {width 64}} {Bit#(64) evt_SET_TAG_WRITE {width 64}} {Bit#(64) evt_SET_TAG_READ {width 64}}}} {width 448} {position {StatCounters.bsv 109 3}}
Struct StatCounters::AXI4_Slave_Events {members {{Bit#(64) evt_AW_FLIT {width 64}} {Bit#(64) evt_W_FLIT {width 64}} {Bit#(64) evt_W_FLIT_FINAL {width 64}} {Bit#(64) evt_B_FLIT {width 64}} {Bit#(64) evt_AR_FLIT {width 64}} {Bit#(64) evt_R_FLIT {width 64}} {Bit#(64) evt_R_FLIT_FINAL {width 64}}}} {width 448} {position {StatCounters.bsv 119 3}}
Struct StatCounters::AXI4_Master_Events {members {{Bit#(64) evt_AW_FLIT {width 64}} {Bit#(64) evt_W_FLIT {width 64}} {Bit#(64) evt_W_FLIT_FINAL {width 64}} {Bit#(64) evt_B_FLIT {width 64}} {Bit#(64) evt_AR_FLIT {width 64}} {Bit#(64) evt_R_FLIT {width 64}} {Bit#(64) evt_R_FLIT_FINAL {width 64}}}} {width 448} {position {StatCounters.bsv 129 3}}
Struct StatCounters::EventsLL {members {{Bit#(64) evt_LD {width 64}} {Bit#(64) evt_LD_MISS {width 64}} {Bit#(64) evt_LD_MISS_LAT {width 64}} {Bit#(64) evt_ST {width 64}} {Bit#(64) evt_ST_MISS {width 64}} {Bit#(64) evt_TLB {width 64}} {Bit#(64) evt_TLB_MISS {width 64}} {Bit#(64) evt_TLB_FLUSH {width 64}} {Bit#(64) evt_EVICT {width 64}}}} {width 576} {position {StatCounters.bsv 141 3}}
Struct StatCounters::EventsTransExe {members {{Bit#(64) evt_RENAMED_INST {width 64}} {Bit#(64) evt_WILD_JUMP {width 64}} {Bit#(64) evt_WILD_EXCEPTION {width 64}}}} {width 192} {position {StatCounters.bsv 147 3}}
Struct StatCounters::HPMEvents {members {{Maybe#(StatCounters::EventsCore) mab_EventsCore {width 1985}} {Maybe#(StatCounters::EventsL1I) mab_EventsL1I {width 449}} {Maybe#(StatCounters::EventsL1D) mab_EventsL1D {width 897}} {Maybe#(StatCounters::EventsTGC) mab_EventsTGC {width 449}} {Maybe#(StatCounters::AXI4_Slave_Events) mab_AXI4_Slave_Events {width 449}} {Maybe#(StatCounters::AXI4_Master_Events) mab_AXI4_Master_Events {width 449}} {Maybe#(StatCounters::EventsLL) mab_EventsLL {width 577}} {Maybe#(StatCounters::EventsTransExe) mab_EventsTransExe {width 193}}}} {width 5448} {position {StatCounters.bsv 158 3}}


Enum AXI4_Utils::SerialiserState {members {IDLE BURST_WRITE WAITING}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 437 43}}
Enum AXI4_Utils::ReadSplitOption {members {COMBINE PAD_FIRST PAD_LAST}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Utils.bsv 1042 47}}
Typeclass {AXI4_W_Utils::ToAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_WFlit#(data_, user_) f(t x1)} toAXI4_WFlit}}} {instances {{AXI4_W_Utils::ToAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 65 11}}
Typeclass {AXI4_W_Utils::FromAXI4_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_WFlit#(data_, user_) x1)} fromAXI4_WFlit}}} {instances {{AXI4_W_Utils::FromAXI4_WFlit#(AXI4_Types::AXI4_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_W_Utils.bsv 73 11}}
Typeclass {AXI4_R_Utils::ToAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function AXI4_Types::AXI4_RFlit#(id_, data_, user_) f(t x1)} toAXI4_RFlit}}} {instances {{AXI4_R_Utils::ToAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 76 11}}
Typeclass {AXI4_R_Utils::FromAXI4_RFlit#(type t, numeric type id_, numeric type data_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_RFlit#(id_, data_, user_) x1)} fromAXI4_RFlit}}} {instances {{AXI4_R_Utils::FromAXI4_RFlit#(AXI4_Types::AXI4_RFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_R_Utils.bsv 87 11}}
Typeclass {AXI4_B_Utils::ToAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function AXI4_Types::AXI4_BFlit#(id_, user_) f(t x1)} toAXI4_BFlit}}} {instances {{AXI4_B_Utils::ToAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 62 11}}
Typeclass {AXI4_B_Utils::FromAXI4_BFlit#(type t, numeric type id_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_BFlit#(id_, user_) x1)} fromAXI4_BFlit}}} {instances {{AXI4_B_Utils::FromAXI4_BFlit#(AXI4_Types::AXI4_BFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4_B_Utils.bsv 70 11}}

Typeclass {AXI4_AW_Utils::ToAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) f(t x1)} toAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::ToAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 94 11}}
Typeclass {AXI4_AW_Utils::FromAXI4_AWFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_) x1)} fromAXI4_AWFlit}}} {instances {{AXI4_AW_Utils::FromAXI4_AWFlit#(AXI4_Types::AXI4_AWFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AW_Utils.bsv 105 11}}
Typeclass {AXI4_AR_Utils::ToAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) f(t x1)} toAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::ToAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 94 11}}
Typeclass {AXI4_AR_Utils::FromAXI4_ARFlit#(type t, numeric type id_, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_) x1)} fromAXI4_ARFlit}}} {instances {{AXI4_AR_Utils::FromAXI4_ARFlit#(AXI4_Types::AXI4_ARFlit#(a, b, c), a, b, c)}}} {position {../libs/BlueStuff/AXI/AXI4_AR_Utils.bsv 105 11}}
Struct {AXI4_Types::AXI4_AWFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) awid} {Bit#(addr_) awaddr} {Bit#(8) awlen {width 8}} {AXI4_Common_Types::AXI4_Size awsize {width 3}} {AXI4_Common_Types::AXI4_Burst awburst {width 2}} {AXI4_Common_Types::AXI4_Lock awlock {width 1}} {Bit#(4) awcache {width 4}} {Bit#(3) awprot {width 3}} {Bit#(4) awqos {width 4}} {Bit#(4) awregion {width 4}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 63 3}}
Interface {AXI4_Types::AXI4_AW_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) awid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(8) awlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size awsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst awburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock awlock {} {{(* ports = [] *)}}}} {method {Bit#(4) awcache {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(4) awqos {} {{(* ports = [] *)}}}} {method {Bit#(4) awregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 81 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AW_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["awvalid", "awid", "awaddr", "awlen", "awsize", "awburst", "awlock", "awcache", "awprot", "awqos", "awregion", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 119 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bool wlast {width 1}} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 185 3}}
Interface {AXI4_Types::AXI4_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bool wlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 197 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bool Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wlast", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 219 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_BFlit#(numeric type id_, numeric type user_)} polymorphic {members {{Bit#(id_) bid} {AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 262 3}}
Interface {AXI4_Types::AXI4_B_Master_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Action bflit {Bool Bit#(id_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 272 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_B_Slave_Sig#(numeric type id_, numeric type user_)} polymorphic {members {{method {Bit#(id_) bid {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 289 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_ARFlit#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(id_) arid} {Bit#(addr_) araddr} {Bit#(8) arlen {width 8}} {AXI4_Common_Types::AXI4_Size arsize {width 3}} {AXI4_Common_Types::AXI4_Burst arburst {width 2}} {AXI4_Common_Types::AXI4_Lock arlock {width 1}} {Bit#(4) arcache {width 4}} {Bit#(3) arprot {width 3}} {Bit#(4) arqos {width 4}} {Bit#(4) arregion {width 4}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 342 3}}
Interface {AXI4_Types::AXI4_AR_Master_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(id_) arid {} {{(* ports = [] *)}}}} {method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(8) arlen {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Size arsize {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Burst arburst {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Lock arlock {} {{(* ports = [] *)}}}} {method {Bit#(4) arcache {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(4) arqos {} {{(* ports = [] *)}}}} {method {Bit#(4) arregion {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 360 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_AR_Slave_Sig#(numeric type id_, numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(id_) Bit#(addr_) Bit#(8) AXI4_Common_Types::AXI4_Size AXI4_Common_Types::AXI4_Burst AXI4_Common_Types::AXI4_Lock Bit#(4) Bit#(3) Bit#(4) Bit#(4) Bit#(user_)} {{(* ports = ["arvalid", "arid", "araddr", "arlen", "arsize", "arburst", "arlock", "arcache", "arprot", "arqos", "arregion", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 398 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4_Types::AXI4_RFlit#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{Bit#(id_) rid} {Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bool rlast {width 1}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 465 3}}
Interface {AXI4_Types::AXI4_R_Master_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(id_) Bit#(data_) AXI4_Common_Types::AXI4_Resp Bool Bit#(user_)} {{(* ports = ["rvalid", "rid", "rdata", "rresp", "rlast", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 478 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_R_Slave_Sig#(numeric type id_, numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(id_) rid {} {{(* ports = [] *)}}}} {method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bool rlast {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 499 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4_Types::AXI4_Master#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 547 11}}
Interface {AXI4_Types::AXI4_Master_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Master_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Master_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 580 11}}
Interface {AXI4_Types::AXI4_Slave#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_WFlit#(data_, wuser_))} w {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_BFlit#(id_, buser_))} b {}} {interface {SourceSink::Sink#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4_Types::AXI4_RFlit#(id_, data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 623 11}}
Interface {AXI4_Types::AXI4_Slave_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_B_Slave_Sig#(id_, buser_)} b {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 656 11}}
Interface {AXI4_Types::AXI4_Shim#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 699 11}}
Interface {AXI4_Types::AXI4_Shim_Sig#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 717 11}}
Struct AXI4_Types::AXI4_Events {members {{Bool evt_AW_FLIT {width 1}} {Bool evt_W_FLIT {width 1}} {Bool evt_W_FLIT_FINAL {width 1}} {Bool evt_B_FLIT {width 1}} {Bool evt_AR_FLIT {width 1}} {Bool evt_R_FLIT {width 1}} {Bool evt_R_FLIT_FINAL {width 1}}}} {width 7} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 743 3}}
TaggedUnion {AXI4_Types::AXI4_WriteFlit#(numeric type id_, numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{Tuple2#(AXI4_Types::AXI4_AWFlit#(id_, addr_, awuser_), AXI4_Types::AXI4_WFlit#(data_, wuser_))} FirstFlit} {{AXI4_Types::AXI4_WFlit#(data_, wuser_)} OtherFlit}}} {position {../libs/BlueStuff/AXI/AXI4_Types.bsv 818 3}}

Typeclass {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) f(t x1)} toAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)} {AXI4Lite_W_Utils::ToAXI4Lite_WFlit#(MemTypes::MemReq#(addr_t, data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 62 11}}
Typeclass {AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_) x1)} fromAXI4Lite_WFlit}}} {instances {{AXI4Lite_W_Utils::FromAXI4Lite_WFlit#(AXI4Lite_Types::AXI4Lite_WFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_W_Utils.bsv 70 11}}
Typeclass {AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) f(t x1)} toAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::ToAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 56 11}}
Typeclass {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(type t, numeric type data_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_) x1)} fromAXI4Lite_RFlit}}} {instances {{AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(AXI4Lite_Types::AXI4Lite_RFlit#(a, b), a, b)} {AXI4Lite_R_Utils::FromAXI4Lite_RFlit#(MemTypes::MemRsp#(data_t), data_sz, user_sz)   provisos (Bits#(data_t, data_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_R_Utils.bsv 64 11}}
Typeclass {AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_BFlit#(user_) f(t x1)} toAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::ToAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 51 11}}
Typeclass {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(type t, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_BFlit#(user_) x1)} fromAXI4Lite_BFlit}}} {instances {{AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(AXI4Lite_Types::AXI4Lite_BFlit#(user_), user_)} {AXI4Lite_B_Utils::FromAXI4Lite_BFlit#(MemTypes::MemRsp#(data_t), user_sz)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_B_Utils.bsv 59 11}}
Typeclass {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) f(t x1)} toAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)} {AXI4Lite_AW_Utils::ToAXI4Lite_AWFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_) x1)} fromAXI4Lite_AWFlit}}} {instances {{AXI4Lite_AW_Utils::FromAXI4Lite_AWFlit#(AXI4Lite_Types::AXI4Lite_AWFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AW_Utils.bsv 68 11}}
Typeclass {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) f(t x1)} toAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)} {AXI4Lite_AR_Utils::ToAXI4Lite_ARFlit#(MemTypes::MemReq#(addr_t, data_t), addr_sz, user_sz)   provisos (Bits#(addr_t, addr_sz))}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 60 11}}
Typeclass {AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(type t, numeric type addr_, numeric type user_)} {members {{{function t f(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_) x1)} fromAXI4Lite_ARFlit}}} {instances {{AXI4Lite_AR_Utils::FromAXI4Lite_ARFlit#(AXI4Lite_Types::AXI4Lite_ARFlit#(a, b), a, b)}}} {position {../libs/BlueStuff/AXI/AXI4Lite_AR_Utils.bsv 68 11}}
Struct {AXI4Lite_Types::AXI4Lite_AWFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) awaddr} {Bit#(3) awprot {width 3}} {Bit#(user_) awuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 52 3}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) awaddr {} {{(* ports = [] *)}}}} {method {Bit#(3) awprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) awuser {} {{(* ports = [] *)}}}} {method {Bool awvalid {} {{(* ports = [] *)}}}} {method {Action awready Bool {{(* ports = ["awready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 66 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action awflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["awvalid", "awaddr", "awprot", "awuser"] *)} {(* prefix = "" *)}}}} {method {Bool awready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 86 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_WFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) wdata} {{Bit#(TDiv#(data_, 8))} wstrb} {Bit#(user_) wuser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 130 3}}
Interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) wdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} wstrb {} {{(* ports = [] *)}}}} {method {Bit#(user_) wuser {} {{(* ports = [] *)}}}} {method {Bool wvalid {} {{(* ports = [] *)}}}} {method {Action wready Bool {{(* ports = ["wready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 141 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action wflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} Bit#(user_)} {{(* ports = ["wvalid", "wdata", "wstrb", "wuser"] *)} {(* prefix = "" *)}}}} {method {Bool wready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 161 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_BFlit#(numeric type user_)} polymorphic {members {{AXI4_Common_Types::AXI4_Resp bresp {width 2}} {Bit#(user_) buser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 204 3}}
Interface {AXI4Lite_Types::AXI4Lite_B_Master_Sig#(numeric type user_)} polymorphic {members {{method {Action bflit {Bool AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["bvalid", "bresp", "buser"] *)} {(* prefix = "" *)}}}} {method {Bool bready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 214 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(numeric type user_)} polymorphic {members {{method {AXI4_Common_Types::AXI4_Resp bresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) buser {} {{(* ports = [] *)}}}} {method {Bool bvalid {} {{(* ports = [] *)}}}} {method {Action bready Bool {{(* ports = ["bready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 230 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_ARFlit#(numeric type addr_, numeric type user_)} polymorphic {members {{Bit#(addr_) araddr} {Bit#(3) arprot {width 3}} {Bit#(user_) aruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 273 3}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Bit#(addr_) araddr {} {{(* ports = [] *)}}}} {method {Bit#(3) arprot {} {{(* ports = [] *)}}}} {method {Bit#(user_) aruser {} {{(* ports = [] *)}}}} {method {Bool arvalid {} {{(* ports = [] *)}}}} {method {Action arready Bool {{(* ports = ["arready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 287 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(numeric type addr_, numeric type user_)} polymorphic {members {{method {Action arflit {Bool Bit#(addr_) Bit#(3) Bit#(user_)} {{(* ports = ["arvalid", "araddr", "arprot", "aruser"] *)} {(* prefix = "" *)}}}} {method {Bool arready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 307 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Struct {AXI4Lite_Types::AXI4Lite_RFlit#(numeric type data_, numeric type user_)} polymorphic {members {{Bit#(data_) rdata} {AXI4_Common_Types::AXI4_Resp rresp {width 2}} {Bit#(user_) ruser}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 351 3}}
Interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Action rflit {Bool Bit#(data_) AXI4_Common_Types::AXI4_Resp Bit#(user_)} {{(* ports = ["rvalid", "rdata", "rresp", "ruser"] *)} {(* prefix = "" *)}}}} {method {Bool rready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 362 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(numeric type data_, numeric type user_)} polymorphic {members {{method {Bit#(data_) rdata {} {{(* ports = [] *)}}}} {method {AXI4_Common_Types::AXI4_Resp rresp {} {{(* ports = [] *)}}}} {method {Bit#(user_) ruser {} {{(* ports = [] *)}}}} {method {Bool rvalid {} {{(* ports = [] *)}}}} {method {Action rready Bool {{(* ports = ["rready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 379 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Lite_Types::AXI4Lite_Master#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 421 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Master_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 452 11}}
Interface {AXI4Lite_Types::AXI4Lite_Master_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} masterSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 490 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_))} aw {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_))} w {}} {interface SourceSink::Source#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_)) b {}} {interface {SourceSink::Sink#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_))} ar {}} {interface {SourceSink::Source#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} r {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 519 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{interface {AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, awuser_)} aw {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, wuser_)} w {{(* prefix = "" *)}}} {interface AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(buser_) b {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, aruser_)} ar {{(* prefix = "" *)}}} {interface {AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, ruser_)} r {{(* prefix = "" *)}}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 550 11}}
Interface {AXI4Lite_Types::AXI4Lite_Slave_Xactor#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slaveSig {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 588 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 617 11}}
Interface {AXI4Lite_Types::AXI4Lite_Shim_Sig#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_, numeric type buser_, numeric type aruser_, numeric type ruser_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} master {}} {interface {AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_)} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 634 11}}
Struct {AXI4Lite_Types::AXI4Lite_WriteFlit#(numeric type addr_, numeric type data_, numeric type awuser_, numeric type wuser_)} polymorphic {members {{{AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, awuser_)} aw} {{AXI4Lite_Types::AXI4Lite_WFlit#(data_, wuser_)} w}}} {position {../libs/BlueStuff/AXI/AXI4Lite_Types.bsv 712 3}}
Typeclass {Routable::Has_routingField#(type t, type r_t)} {dependencies {{t determines r_t}}} {members {{{function r_t f(t x1)} routingField}}} {instances {{Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_), Bit#(addr_))} {Routable::Has_routingField#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), Bit#(addr_))} {Routable::Has_routingField#(Routable::WithMetaInfo#(t, m_t), r_t)   provisos (Routable::Has_routingField#(t, r_t))} {Routable::Has_routingField#(Routable::WithRouteInfo#(t, r_t), r_t)}}} {position {../libs/BlueStuff/Routable.bsv 46 11}}
Typeclass {Routable::Has_isLast#(type t)} {members {{{function Bool f(t x1)} isLast}}} {instances {{Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_AWFlit#(addr_, user_))} Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_BFlit#(user_)) {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(AXI4_Types::AXI4_ARFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_AWFlit#(id_, addr_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_BFlit#(id_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_RFlit#(id_, data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WFlit#(data_, user_))} {Routable::Has_isLast#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_))} {Routable::Has_isLast#(Routable::WithMetaInfo#(t, m_t))   provisos (Routable::Has_isLast#(t))} {Routable::Has_isLast#(Routable::WithRouteInfo#(t, r_t))   provisos (Routable::Has_isLast#(t))}}} {position {../libs/BlueStuff/Routable.bsv 50 11}}
Typeclass {Routable::Routable#(type f_t, type r_t)} {superclasses {{Routable::Has_routingField#(f_t, r_t)} Routable::Has_isLast#(f_t)}} {dependencies {{f_t determines r_t}}} {members {}} {instances {{Routable::Routable#(a, b)   provisos (Routable::Has_isLast#(a), Routable::Has_routingField#(a, b))}}} {position {../libs/BlueStuff/Routable.bsv 54 11}}
Typeclass {Routable::FallibleRoute#(type req_t, type rsp_t)} {members {{{a#(MasterSlave::Slave#(req_t, rsp_t))   provisos (IsModule#(a, b))} mkNoRouteSlave}}} {instances {{Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_))} {Routable::FallibleRoute#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), AXI4Lite_Types::AXI4Lite_BFlit#(buser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_))} {Routable::FallibleRoute#(AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_ARFlit#(addr_, aruser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_RFlit#(data_, ruser_), down_t))   provisos (Bits#(down_t, down_t_sz))} {Routable::FallibleRoute#(Routable::WithMetaInfo#(AXI4Lite_Types::AXI4Lite_WriteFlit#(addr_, data_, awuser_, wuser_), down_t), Routable::WithRouteInfo#(AXI4Lite_Types::AXI4Lite_BFlit#(buser_), down_t))   provisos (Bits#(down_t, down_t_sz))}}} {position {../libs/BlueStuff/Routable.bsv 72 11}}
Typeclass {Routable::ExpandableReqRsp#(type req_t, type req_fat_t, type rsp_fat_t, type rsp_t, numeric type n_masters)} {dependencies {{(req_t, req_fat_t) determines (rsp_fat_t, rsp_t, n_masters)} {rsp_fat_t determines (req_t, req_fat_t, rsp_t, n_masters)} {(rsp_fat_t, rsp_t) determines (req_t, req_fat_t, n_masters)}}} {members {{{function req_fat_t f(Bit#(TLog#(n_masters)) x1, req_t x2)} expand} {{function Tuple2#(Bit#(TLog#(n_masters)), rsp_t) f(rsp_fat_t x1)} shrink}}} {instances {{Routable::ExpandableReqRsp#(AXI4_Types::AXI4_ARFlit#(id_, addr_, aruser_), AXI4_Types::AXI4_ARFlit#(sid_, addr_, aruser_), AXI4_Types::AXI4_RFlit#(sid_, data_, ruser_), AXI4_Types::AXI4_RFlit#(id_, data_, ruser_), n)   provisos (Add#(id_, TLog#(n), sid_))} {Routable::ExpandableReqRsp#(AXI4_Types::AXI4_WriteFlit#(id_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_WriteFlit#(sid_, addr_, data_, awuser_, wuser_), AXI4_Types::AXI4_BFlit#(sid_, buser_), AXI4_Types::AXI4_BFlit#(id_, buser_), n)   provisos (Add#(id_, TLog#(n), sid_))}}} {position {../libs/BlueStuff/Routable.bsv 88 11}}
Struct {Routable::WithRouteInfo#(type t, type r_t)} polymorphic {members {{t payload} {r_t routeInfo}}} {position {../libs/BlueStuff/Routable.bsv 110 3}}
Struct {Routable::WithMetaInfo#(type t, type m_t)} polymorphic {members {{t payload} {m_t metaInfo}}} {position {../libs/BlueStuff/Routable.bsv 123 3}}
Struct {Routable::Range#(numeric type n)} polymorphic {members {{Bit#(n) base} {Bit#(n) size}}} {position {../libs/BlueStuff/Routable.bsv 145 3}}
Alias {Routable::MappingTable#(numeric type n, numeric type a)} {Vector::Vector#(n, Routable::Range#(a))} {position {../libs/BlueStuff/Routable.bsv 155 33}}
Typeclass {OneHotArbiter::Arbitrable#(type a)} {members {{{function Bool f(a x1)} isRequesting}}} {instances {OneHotArbiter::Arbitrable#(Bool) OneHotArbiter::Arbitrable#(FIFOF::FIFOF#(t)) OneHotArbiter::Arbitrable#(SourceSink::Source#(t))}} {position {../libs/BlueStuff/OneHotArbiter.bsv 39 11}}
Interface OneHotArbiter::OneHotArbiter {members {{method {ActionValue#(List#(Bool)) next {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/OneHotArbiter.bsv 57 11}}
Interface {Monitored::Monitored#(type originalIfc, type events_t)} polymorphic {members {{method {originalIfc ifc {} {}}} {interface ReadOnly#(events_t) events {}}}} {position {../libs/BlueStuff/Monitored.bsv 37 11}}
Alias MemTypesCHERI::CORE_COUNT 1 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 48 13}}
Alias MemTypesCHERI::MaxTransactions 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 51 11}}
Alias MemTypesCHERI::MaxNoOfFlits 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 52 11}}
Alias MemTypesCHERI::CheriBurstSize 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 53 22}}
Alias MemTypesCHERI::CapWidth 128 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 57 21}}
Alias MemTypesCHERI::CapBytes 16 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 73 29}}
Alias MemTypesCHERI::BootMemBytes 65536 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 76 19}}
Alias MemTypesCHERI::BootMemAddrBits 13 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 77 38}}
Alias {MemTypesCHERI::PhyLineNumber#(numeric type width, numeric type bytePerLine)} {Bit#(TSub#(width, TLog#(bytePerLine)))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 85 47}}
Alias {MemTypesCHERI::PhyByteOffset#(numeric type bytePerLine)} Bit#(TLog#(bytePerLine)) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 86 34}}
Alias {MemTypesCHERI::PhyBitOffset#(numeric type bytePerLine)} {Bit#(TAdd#(TLog#(bytePerLine), 3))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 87 43}}
Struct {MemTypesCHERI::PhyByteAddress#(numeric type width, numeric type bytePerLine)} polymorphic {members {{{Bit#(TSub#(width, TLog#(bytePerLine)))} lineNumber} {Bit#(TLog#(bytePerLine)) byteOffset}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 95 3}}
Struct {MemTypesCHERI::PhyBitAddress#(numeric type width, numeric type bytePerLine)} polymorphic {members {{{MemTypesCHERI::PhyByteAddress#(width, bytePerLine)} byteAddr} {Bit#(3) bitOffset {width 3}}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 100 3}}
Alias MemTypesCHERI::CheriBusBytes 8 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 119 26}}
Alias MemTypesCHERI::AddrWidth 40 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 133 12}}
Alias TagController::CapsPerFlit 1 {position {../libs/TagController/TagController/TagController.bsv 92 50}}
Alias MemTypesCHERI::CapTags {Vector::Vector#(1, Bool)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 137 37}}
Alias MemTypesCHERI::CapNumber Bit#(36) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 138 50}}
Struct MemTypesCHERI::CheriCapAddress {members {{Bit#(36) capNumber {width 36}} {Bit#(4) offset {width 4}}}} {width 40} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 142 5}}
Alias MemTypesCHERI::CheriDataWidth 64 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 144 32}}
Alias MemTypesCHERI::CheriLineAddrWidth 37 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 145 47}}
Alias MemTypesCHERI::CheriPhyLineNumber Bit#(37) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 146 50}}
Alias MemTypesCHERI::CheriPhyAddr {MemTypesCHERI::PhyByteAddress#(40, 8)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 147 50}}
Alias MemTypesCHERI::CheriPhyBitAddr {MemTypesCHERI::PhyBitAddress#(40, 8)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 148 49}}
Alias MemTypesCHERI::CheriPhyByteOffset Bit#(3) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 149 39}}
Alias MemTypesCHERI::CheriPhyBitOffset Bit#(6) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 150 39}}
Alias MemTypesCHERI::CheriPeriphAddr {MemTypesCHERI::PhyByteAddress#(40, 8)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 151 38}}
Alias MemTypesCHERI::LogLine 5 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 152 39}}
Alias MemTypesCHERI::Flit UInt#(3) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 154 36}}
Alias MemTypesCHERI::Line Bit#(35) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 155 62}}
Alias MemTypesCHERI::CpuLineSize 64 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 157 12}}
Alias MemTypesCHERI::CapOffsetInLine Bit#(2) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 158 51}}
Enum MemTypesCHERI::BytesPerFlit {members {BYTE_1 BYTE_2 BYTE_4 BYTE_8 BYTE_16 BYTE_32 BYTE_64 BYTE_128}} {width 3} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 170 3}}
Struct {MemTypesCHERI::Data#(numeric type width)} polymorphic {members {{{Vector::Vector#(1, Bool)} cap {width 1}} {Bit#(width) data}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 180 3}}
Struct {MemTypesCHERI::DataMinusCapTags#(numeric type width)} polymorphic {members {{Bit#(width) data}}} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 186 3}}
Enum MemTypesCHERI::WhichCache {members {ICache DCache None L2 TCache}} {width 3} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 191 3}}
Enum MemTypesCHERI::CacheInst {members {CacheInvalidate CacheInvalidateWriteback CacheWriteback CacheSync Read Write StoreConditional CacheLoadTag CacheNop}} {width 4} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 212 3}}
Struct MemTypesCHERI::CacheOperation {members {{MemTypesCHERI::CacheInst inst {width 4}} {MemTypesCHERI::WhichCache cache {width 3}} {Bool indexed {width 1}}}} {width 8} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 222 3}}
Enum MemTypesCHERI::Error {members {NoError BusError SlaveError}} {width 2} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 236 3}}
Struct {Memory::MemoryRequest#(numeric type a, numeric type d)} polymorphic {members {{Bool write {width 1}} {{Bit#(TDiv#(d, 8))} byteen} {Bit#(a) address} {Bit#(d) data}}} {position {%/Libraries/Memory.bsv 31 3 {Library Memory}}}



Alias MemTypesCHERI::CheriMasterIDWidth 1 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 355 29}}
Alias MemTypesCHERI::CheriTransactionIDWidth 5 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 356 34}}
Alias MemTypesCHERI::CheriMasterID Bit#(1) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 357 34}}
Alias MemTypesCHERI::CheriTransactionID Bit#(5) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 358 39}}
Alias MemTypesCHERI::CheriData MemTypesCHERI::Data#(64) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 360 31}}
Alias MemTypesCHERI::CheriMemRequest {MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 361 86}}
Alias MemTypesCHERI::CheriMemRequest64 {MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 362 78}}
Struct MemTypesCHERI::ReqId {members {{Bit#(1) masterID {width 1}} {Bit#(5) transactionID {width 5}}}} {width 6} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 367 3}}
Alias MemTypesCHERI::Banks 4 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 369 11}}
Alias MemTypesCHERI::Bank UInt#(2) {position {../libs/TagController/TagController/MemTypesCHERI.bsv 370 18}}
Alias MemTypesCHERI::TagCacheKilobytes 16384 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 376 19}}
Alias MemTypesCHERI::Indices 9 {position {../libs/TagController/TagController/MemTypesCHERI.bsv 380 71}}
Struct {Memory::MemoryResponse#(numeric type d)} polymorphic {members {{Bit#(d) data}}} {position {%/Libraries/Memory.bsv 35 3 {Library Memory}}}


Alias MemTypesCHERI::CheriMemResponse {MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 470 74}}
Alias MemTypesCHERI::CheriMemResponse64 {MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64)} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 471 63}}
Alias MemTypesCHERI::CheriPeriphSlave {MasterSlave::Slave#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 473 57}}
Alias MemTypesCHERI::CheriSlave {MasterSlave::Slave#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 474 57}}
Alias MemTypesCHERI::CheriPeriphMaster {MasterSlave::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 476 57}}
Alias MemTypesCHERI::CheriMaster {MasterSlave::Master#(MemTypesCHERI::MemoryRequest#(MemTypesCHERI::PhyByteAddress#(40, 8), Bit#(1), Bit#(5), 64), MemTypesCHERI::MemoryResponse#(Bit#(1), Bit#(5), 64))} {position {../libs/TagController/TagController/MemTypesCHERI.bsv 477 57}}
Interface {MasterSlave::Master#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Source#(req_t) req {}} {interface SourceSink::Sink#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 44 11}}
Interface {MasterSlave::Slave#(type req_t, type rsp_t)} polymorphic {members {{interface SourceSink::Sink#(req_t) req {}} {interface SourceSink::Source#(rsp_t) rsp {}}}} {position {../libs/BlueStuff/BlueBasics/MasterSlave.bsv 50 11}}
Alias AXI4_Common_Types::AXI4_Len Bit#(8) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 49 17}}
Struct AXI4_Common_Types::AXI4_Size {members {{Bit#(3) val {width 3}}}} {width 3} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 57 3}}
Enum AXI4_Common_Types::AXI4_Burst {members {FIXED INCR WRAP Res}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 143 3}}
Enum AXI4_Common_Types::AXI4_Lock {members {NORMAL EXCLUSIVE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 149 3}}
Alias AXI4_Common_Types::AXI4_Cache Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 153 19}}
Enum AXI4_Common_Types::AXI4_Prot_2 {members {DATA INST}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 185 3}}
Enum AXI4_Common_Types::AXI4_Prot_1 {members {SECURE NONSECURE}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 188 3}}
Enum AXI4_Common_Types::AXI4_Prot_0 {members {UNPRIV PRIV}} {width 1} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 191 3}}
Alias AXI4_Common_Types::AXI4_Prot Bit#(3) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 192 17}}
Alias AXI4_Common_Types::AXI4_QoS Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 198 17}}
Alias AXI4_Common_Types::AXI4_Region Bit#(4) {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 202 17}}
Enum AXI4_Common_Types::AXI4_Resp {members {OKAY EXOKAY SLVERR DECERR}} {width 2} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 208 3}}
Typeclass {AXI4_Common_Types::CulDeSac#(type t)} {members {{t culDeSac}}} {instances {{AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AR_Slave_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Master_Sig#(addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_AW_Slave_Sig#(addr_, user_))} AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Master_Sig#(user_)) AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_B_Slave_Sig#(user_)) {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Master_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_R_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_Slave_Sig#(addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Lite_Types::AXI4Lite_W_Slave_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Master#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4Stream_Types::AXI4Stream_Slave#(id_, data_, dest_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AR_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Master_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_AW_Slave_Sig#(id_, addr_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Master_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_B_Slave_Sig#(id_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Master_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Master_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_R_Slave_Sig#(id_, data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_Slave_Sig#(id_, addr_, data_, awuser_, wuser_, buser_, aruser_, ruser_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Master_Sig#(data_, user_))} {AXI4_Common_Types::CulDeSac#(AXI4_Types::AXI4_W_Slave_Sig#(data_, user_))}}} {position {../libs/BlueStuff/AXI/AXI4_Common_Types.bsv 212 11}}
Struct {AXI4Stream_Types::AXI4Stream_Flit#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{Bit#(data_) tdata} {{Bit#(TDiv#(data_, 8))} tstrb} {{Bit#(TDiv#(data_, 8))} tkeep} {Bool tlast {width 1}} {Bit#(id_) tid} {Bit#(dest_) tdest} {Bit#(user_) tuser}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 55 3}}
Interface {AXI4Stream_Types::AXI4Stream_Master_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Bit#(data_) tdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tstrb {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tkeep {} {{(* ports = [] *)}}}} {method {Bool tlast {} {{(* ports = [] *)}}}} {method {Bit#(id_) tid {} {{(* ports = [] *)}}}} {method {Bit#(dest_) tdest {} {{(* ports = [] *)}}}} {method {Bit#(user_) tuser {} {{(* ports = [] *)}}}} {method {Bool tvalid {} {{(* ports = [] *)}}}} {method {Action tready Bool {{(* ports = ["tready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 62 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Stream_Types::AXI4Stream_Slave_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action tflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} {Bit#(TDiv#(data_, 8))} Bool Bit#(id_) Bit#(dest_) Bit#(user_)} {{(* ports = ["tvalid", "tdata", "tstrb", "tkeep", "tlast", "tid", "tdest", "tuser"] *)} {(* prefix = "" *)}}}} {method {Bool tready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 78 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Alias {AXI4Stream_Types::AXI4Stream_Master#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 94 9}}
Alias {AXI4Stream_Types::AXI4Stream_Slave#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 100 9}}
Interface {AXI4Stream_Types::AXI4Stream_Shim#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} master {}} {interface {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 114 11}}
Typeclass {AXI4Stream_Utils::ToAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) f(t x1)} toAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::ToAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 63 11}}
Typeclass {AXI4Stream_Utils::FromAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function t f(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) x1)} fromAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::FromAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 76 11}}
Typeclass {AXI4Stream_Utils::ToAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) f(t x1)} toAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::ToAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 63 11}}
Typeclass {AXI4Stream_Utils::FromAXI4Stream_Flit#(type t, numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {members {{{function t f(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_) x1)} fromAXI4Stream_Flit}}} {instances {{AXI4Stream_Utils::FromAXI4Stream_Flit#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_), id_, data_, dest_, user_)}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Utils.bsv 76 11}}
Struct {AXI4Stream_Types::AXI4Stream_Flit#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{Bit#(data_) tdata} {{Bit#(TDiv#(data_, 8))} tstrb} {{Bit#(TDiv#(data_, 8))} tkeep} {Bool tlast {width 1}} {Bit#(id_) tid} {Bit#(dest_) tdest} {Bit#(user_) tuser}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 55 3}}
Interface {AXI4Stream_Types::AXI4Stream_Master_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Bit#(data_) tdata {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tstrb {} {{(* ports = [] *)}}}} {method {{Bit#(TDiv#(data_, 8))} tkeep {} {{(* ports = [] *)}}}} {method {Bool tlast {} {{(* ports = [] *)}}}} {method {Bit#(id_) tid {} {{(* ports = [] *)}}}} {method {Bit#(dest_) tdest {} {{(* ports = [] *)}}}} {method {Bit#(user_) tuser {} {{(* ports = [] *)}}}} {method {Bool tvalid {} {{(* ports = [] *)}}}} {method {Action tready Bool {{(* ports = ["tready"] *)} {(* prefix = "" *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 62 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Interface {AXI4Stream_Types::AXI4Stream_Slave_Sig#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action tflit {Bool Bit#(data_) {Bit#(TDiv#(data_, 8))} {Bit#(TDiv#(data_, 8))} Bool Bit#(id_) Bit#(dest_) Bit#(user_)} {{(* ports = ["tvalid", "tdata", "tstrb", "tkeep", "tlast", "tid", "tdest", "tuser"] *)} {(* prefix = "" *)}}}} {method {Bool tready {} {{(* ports = [] *)}}}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 78 11}} {attributes {{(* always_enabled  *)} {(* always_ready  *)}}}
Alias {AXI4Stream_Types::AXI4Stream_Master#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 94 9}}
Alias {AXI4Stream_Types::AXI4Stream_Slave#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 100 9}}
Interface {AXI4Stream_Types::AXI4Stream_Shim#(numeric type id_, numeric type data_, numeric type dest_, numeric type user_)} polymorphic {members {{method {Action clear {} {{(* ports = [] *)}}}} {interface {SourceSink::Source#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} master {}} {interface {SourceSink::Sink#(AXI4Stream_Types::AXI4Stream_Flit#(id_, data_, dest_, user_))} slave {}}}} {position {../libs/BlueStuff/AXI/AXI4Stream_Types.bsv 114 11}}
